IF EXISTS (SELECT 'X'
           FROM   INFORMATION_SCHEMA.ROUTINES
           WHERE  ROUTINE_NAME = 'PRC_CFF_PROJECTION_RESULTS_DISCOUNT'
                  AND ROUTINE_SCHEMA = 'DBO')
  BEGIN
      DROP PROCEDURE [DBO].[PRC_CFF_PROJECTION_RESULTS_DISCOUNT]
  END

GO

CREATE PROCEDURE [dbo].[PRC_CFF_PROJECTION_RESULTS_DISCOUNT] @CFF_MASTER_SID VARCHAR(500),
                                                            @PROJ_FREQUENCY VARCHAR(20),
                                                            @SCREEN_NAME    VARCHAR(50),
                                                            @VIEW           VARCHAR(50) = NULL,
                                                            @START_DATE     DATETIME = NULL,
                                                            @CCP            VARCHAR(MAX) = NULL,
                                                            @DISCOUNT_VIEW  VARCHAR(50) = NULL,
                                                            @ORDER          VARCHAR(10) = NULL
WITH EXEC AS CALLER
AS

  DECLARE @SP INT
	,@SP_PROJ_SID INT
	,@TEMP_PROJ_SID VARCHAR(500)
	,@SALES_INC BIT
	,@DEDUCTION_INC BIT
DECLARE @ITEMID [DBO].[UDT_ITEM]

-----------------PASSING MULTIPLE CFF AS INPUT CONVERTING INTO COMMA SEPERATED VALUES --------------------------
IF Object_id('TEMPDB..#CFF_PROJECTION_MASTER') IS NOT NULL
	TRUNCATE TABLE #CFF_PROJECTION_MASTER
ELSE
	CREATE TABLE #CFF_PROJECTION_MASTER (
		ID INT IDENTITY(1, 1)
		,CFF_PROJECTION_MASTER_SID INT
		)

SET @TEMP_PROJ_SID = Replace(@CFF_MASTER_SID + ',', ',,', ',')

WHILE Patindex('%,%', @TEMP_PROJ_SID) <> 0
BEGIN
	SELECT @SP = Patindex('%,%', @TEMP_PROJ_SID)

	SELECT @SP_PROJ_SID = LEFT(@TEMP_PROJ_SID, @SP - 1)

	SELECT @TEMP_PROJ_SID = Stuff(@TEMP_PROJ_SID, 1, @SP, '')

	INSERT INTO #CFF_PROJECTION_MASTER (CFF_PROJECTION_MASTER_SID)
	SELECT @SP_PROJ_SID
END

-------------------------------GALUAT_29 CHANGES----------------------------
------PULLING ACTUAL START_DATE , ACTUAL_END_DATE,ROJ_START_PERIOD_DATE,PROJ_END_PERIOD_DATE BASED ON DESCRIPTION FROM HELPER_TABLE -----------
DECLARE @ACTUAL_START_DATE DATETIME = Cast(Year(Getdate()) - 3 AS VARCHAR(4)) + '-01-01'
	,@ACTUAL_END_DATE DATETIME = Dateadd(MM, - 3, Dateadd(QQ, Datediff(QQ, 0, Getdate()), 0))
	,@PROJ_START_PERIOD_DATE DATETIME
	,@PROJ_END_PERIOD_DATE DATETIME

SELECT TOP 1 @PROJ_START_PERIOD_DATE = Dateadd(DD, 1, Eomonth(FROM_DATE, - 1))
	,@PROJ_END_PERIOD_DATE = Dateadd(DD, 1, Eomonth(TO_DATE, - 1))
FROM FORECAST_CONFIG FA
LEFT JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = FA.BUSINESS_PROCESS_TYPE
WHERE [DESCRIPTION] = 'CONSOLIDATED FINANCIAL FORECAST'
ORDER BY VERSION_NO DESC

DECLARE @ACT_START_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @ACTUAL_START_DATE
		)
DECLARE @ACT_END_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @ACTUAL_END_DATE
		)
DECLARE @PROJ_START_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @PROJ_START_PERIOD_DATE
		)
DECLARE @PROJ_END_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @PROJ_END_PERIOD_DATE
		)
DECLARE @FIRST_PROJ_SID INT

SELECT @FIRST_PROJ_SID = PM.CFF_PROJECTION_MASTER_SID
FROM #CFF_PROJECTION_MASTER PM
WHERE ID = 1

--select @ACT_START_PERIOD_SID,@ACT_END_PERIOD_SID,@PROJ_START_PERIOD_SID,@PROJ_END_PERIOD_SID
---------------------------BASED ON FREQUENCY CALUCLATIONS SHOLUD HAPPEN---------------------------
IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
	DROP TABLE #PERIOD;

SELECT PERIOD_SID
	,PERIOD_DATE
	,MONTH
	,QUARTER
	,SEMI_ANNUAL
	,YEAR
	,CASE 
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'M'
			THEN MONTH
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'Q'
			THEN QUARTER
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'S'
			THEN SEMI_ANNUAL
		ELSE YEAR
		END AS PERIOD
INTO #PERIOD
FROM PERIOD

DECLARE @PIVOT_START_PERIOD_SID INT

SELECT @PIVOT_START_PERIOD_SID = PERIOD_SID
FROM PERIOD
WHERE PERIOD_DATE = @START_DATE

----------------------------------PULLING CCP S FOR PARICULAR CCP-------------
IF OBJECT_ID('TEMPDB..#TEMP_CCP') IS NOT NULL
	DROP TABLE #TEMP_CCP

CREATE TABLE #TEMP_CCP (
	COMPANY_MASTER_SID INT
	,CONTRACT_MASTER_SID INT
	,ITEM_MASTER_SID INT
	,PROJECTION_DETAILS_SID INT
	,CFF_MASTER_SID INT
	,PROJECTION_MASTER_SID INT
	,CCP_DETAILS_SID INT
	)

INSERT INTO #TEMP_CCP (
	COMPANY_MASTER_SID
	,CONTRACT_MASTER_SID
	,ITEM_MASTER_SID
	,PROJECTION_DETAILS_SID
	,CFF_MASTER_SID
	,PROJECTION_MASTER_SID
	,CCP_DETAILS_SID
	)
SELECT CCP.COMPANY_MASTER_SID
	,CCP.CONTRACT_MASTER_SID
	,CCP.ITEM_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,CD.CFF_MASTER_SID
	,PD.PROJECTION_MASTER_SID
	,CCP.CCP_DETAILS_SID
FROM CCP_DETAILS CCP
INNER JOIN PROJECTION_DETAILS PD ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN CFF_DETAILS CD ON CCP.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
	AND CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
WHERE CD.CFF_MASTER_SID = @FIRST_PROJ_SID
	AND (
		EXISTS (
			SELECT TOKEN
			FROM UDF_SPLITSTRING(@CCP, ',') U
			WHERE U.TOKEN = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

------------------------------------GAL-7472/GALUAT-543 CHANGES RETURNS REMOVED PART-----------------------------------------
-- IF Object_id('TEMPDB..#TEMP_CCPD') IS NOT NULL
--   DROP TABLE #TEMP_CCPD
-- CREATE TABLE #TEMP_CCPD
--   (
--      COMPANY_MASTER_SID     INT,
--      CONTRACT_MASTER_SID    INT,
--      ITEM_MASTER_SID        INT,
--      PROJECTION_DETAILS_SID INT,
--      CFF_MASTER_SID         INT,
--RS_NAME VARCHAR(100)
--   )
-- INSERT INTO #TEMP_CCPD
--             (COMPANY_MASTER_SID,
--              CONTRACT_MASTER_SID,
--              ITEM_MASTER_SID,
--              PROJECTION_DETAILS_SID,
--              CFF_MASTER_SID,
--  RS_NAME)
-- SELECT DISTINCT COMPANY_MASTER_SID,
--                 CONTRACT_MASTER_SID,
--                 ITEM_MASTER_SID,
--                 PROJECTION_DETAILS_SID,
--                 CFF_MASTER_SID,
--  RS_NAME
-- FROM   (SELECT t_ccp.COMPANY_MASTER_SID,
--                T_CCP.CONTRACT_MASTER_SID,
--                T_CCP.ITEM_MASTER_SID,
--                PROJECTION_DETAILS_SID,
--                CFF_MASTER_SID,
--                RS_ID,
--                RS_TYPE,
-- RS_NAME=      CASE
--                          WHEN @DISCOUNT_VIEW = 'PROGRAM'
--                         OR @DISCOUNT_VIEW IS NULL THEN RS_NAME
--                         ELSE HR.DESCRIPTION 
--                         END
--         FROM   #TEMP_CCP T_CCP
--                INNER JOIN RS_CONTRACT RS
--                        ON T_CCP.CONTRACT_MASTER_SID = RS.CONTRACT_MASTER_SID
--                INNER JOIN RS_CONTRACT_DETAILS RSC
--                        ON RS.RS_CONTRACT_SID = RSC.RS_CONTRACT_SID
--                           AND T_CCP.ITEM_MASTER_SID = RSC.ITEM_MASTER_SID
--                JOIN projection_master pm
--                  ON pm.PROJECTION_MASTER_SID = T_CCP.PROJECTION_master_SID
--                     AND PM.FORECASTING_TYPE = 'NON MANDATED'
--            INNER JOIN HELPER_TABLE HR
--                ON RS.REBATE_PROGRAM_TYPE = HR.HELPER_TABLE_SID
-- AND HR.LIST_NAME='REBATE_PROGRAM_TYPE'
--   WHERE  EXISTS (SELECT 1
--                        FROM   CFP_CONTRACT CF
--                               INNER JOIN CFP_CONTRACT_DETAILS CFD
--                                       ON CF.CFP_CONTRACT_SID = CFD.CFP_CONTRACT_SID
--                                          AND T_CCP.COMPANY_MASTER_SID = CFD.COMPANY_MASTER_SID
--                                          AND RS.CFP_CONTRACT_SID = CF.CFP_CONTRACT_SID
--                                          AND CF.CONTRACT_MASTER_SID = T_CCP.CONTRACT_MASTER_SID)
-- ) R
--        INNER JOIN HELPER_TABLE HT
--                ON R.RS_TYPE = HT.HELPER_TABLE_SID
-- WHERE  HT.DESCRIPTION = 'RETURNS'
--SELECT * FROM RS_CONTRACT WHERE RS_NAME='rs44'
--SELECT * FROM HELPER_TABLE WHERE HELPER_TABLE_SID=1632 --Reimb
--      IF Object_id('TEMPDB..#TEMP_RETURNS') IS NOT NULL
--        DROP TABLE #TEMP_RETURNS
--      CREATE TABLE #TEMP_RETURNS
--        (
--           ITEM_MASTER_SID     INT,
--               RS_NAME VARCHAR(100),
--               RETURNS_DETAILS_SID INT,
--           PERIOD_SID          INT,
--           ACTUAL_RATE         NUMERIC(22, 6),
--           PROJECTED_RATE      NUMERIC(22, 6),
--           PRIMARY KEY(ITEM_MASTER_SID, PERIOD_SID)
--        );
--      WITH ITEM_PROJ_DETAILS
--           AS (SELECT Row_number()
--                        OVER (
--                          PARTITION BY RD.ITEM_MASTER_SID,TD.RS_NAME
--                          ORDER BY LASTEST_DATE DESC ) RN,
--                      RD.ITEM_MASTER_SID,
--                      PM.PROJECTION_MASTER_SID,
--                      RETURNS_DETAILS_SID,
--                                  TD.RS_NAME
--               FROM   RETURNS_DETAILS RD
--                      INNER JOIN PROJECTION_MASTER PM
--                              ON RD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
--                      CROSS APPLY ( VALUES (MODIFIED_DATE),
--                                           (CREATED_DATE) ) CS(LASTEST_DATE)
--                      INNER JOIN PROJECTION_DETAILS PD
--                              ON PD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
--                      INNER JOIN #TEMP_CCPD TD
--                              ON TD.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
--                                 AND RD.ITEM_MASTER_SID = TD.ITEM_MASTER_SID
--               WHERE  SAVE_FLAG = 1
--                      AND RD.ITEM_MASTER_SID IN (SELECT ITEM_MASTER_SID
--                                                 FROM   @ITEMID))
--      INSERT INTO #TEMP_RETURNS
--                  (ITEM_MASTER_SID,
--                            RS_NAME,
--                   RETURNS_DETAILS_SID,
--                   PERIOD_SID,
--                   ACTUAL_RATE,
--                   PROJECTED_RATE)
--      SELECT COALESCE(R_ACTUALS.ITEM_MASTER_SID, R_PROJ.ITEM_MASTER_SID),
--              COALESCE(R_ACTUALS.RS_NAME, R_PROJ.RS_NAME),
--             COALESCE(R_ACTUALS.RETURNS_DETAILS_SID, R_PROJ.RETURNS_DETAILS_SID) AS RETURNS_DETAILS_SID,
--             COALESCE(R_ACTUALS.PERIOD_SID, R_PROJ.PERIOD_SID)                   AS PERIOD_SID,
--             R_ACTUALS.ACTUAL_RETURN_PERCENT,
--             R_PROJ.PROJECTED_RETURN_PERCENT
--      FROM   (SELECT IMPD.RETURNS_DETAILS_SID,
--                     ITEM_MASTER_SID,
--                                RS_NAME,
--                     PERIOD_SID,
--                     AVG(ACTUAL_RETURN_PERCENT) OVER (PARTITION BY ITEM_MASTER_SID,RS_NAME,PERIOD_SID) AS ACTUAL_RETURN_PERCENT
--              FROM   RETURNS_ACTUALS NAP
--                     JOIN ITEM_PROJ_DETAILS IMPD
--                       ON IMPD.RETURNS_DETAILS_SID = NAP.RETURNS_DETAILS_SID
--              WHERE  IMPD.RN = 1) R_ACTUALS
--             FULL JOIN (SELECT NPP.RETURNS_DETAILS_SID,
--                               ITEM_MASTER_SID,
--                                                 RS_NAME,
--                               PERIOD_SID,
--                               AVG(PROJECTED_RETURN_PERCENT) OVER (PARTITION BY ITEM_MASTER_SID,RS_NAME,PERIOD_SID) AS PROJECTED_RETURN_PERCENT
--                        FROM   RETURNS_PROJ_DETAILS NPP
--                               JOIN ITEM_PROJ_DETAILS IMPD
--                                 ON IMPD.RETURNS_DETAILS_SID = NPP.RETURNS_DETAILS_SID
--                        WHERE  IMPD.RN = 1) R_PROJ
--                    ON R_ACTUALS.RETURNS_DETAILS_SID = R_PROJ.RETURNS_DETAILS_SID
--                       AND R_ACTUALS.PERIOD_SID = R_PROJ.PERIOD_SID
--IF NOT EXISTS (SELECT 1 FROM #TEMP_RETURNS)
--BEGIN
--INSERT INTO #TEMP_RETURNS
--                  (ITEM_MASTER_SID,
--                            RS_NAME,
--                   RETURNS_DETAILS_SID,
--                   PERIOD_SID,
--                   ACTUAL_RATE,
--                   PROJECTED_RATE)
--SELECT ITEM_MASTER_SID,
--                            RS_NAME,
--                   RETURNS_DETAILS_SID=NULL,
--                   PERIOD_SID,
--                   ACTUAL_RATE=0,
--                   PROJECTED_RATE=0
--FROM #TEMP_CCPD
--CROSS JOIN #PERIOD P
--WHERE P.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
--END
--------------------------------------------------PULLING PRICE FOR CFF ITEMS------------
IF Object_id('TEMPDB..#ITEM_PRICING') IS NOT NULL
	DROP TABLE #ITEM_PRICING

CREATE TABLE #ITEM_PRICING (
	ITEM_MASTER_SID INT
	,PERIOD_SID INT
	,ITEM_PRICE NUMERIC(22, 6)
	,PRIMARY KEY (
		ITEM_MASTER_SID
		,PERIOD_SID
		)
	)

INSERT INTO #ITEM_PRICING (
	ITEM_MASTER_SID
	,PERIOD_SID
	,ITEM_PRICE
	)
SELECT ITEM_MASTER_SID
	,PERIOD_SID
	,ITEM_PRICE
FROM [DBO].[Udf_item_pricing](@ITEMID, 'COGS', COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID), @PROJ_END_PERIOD_SID, 'EACH')

--------------------------------------------------STROING OUTPUT IN RESULT TABLE ------------
IF Object_id('TEMPDB.DBO.#RESULT', 'U') IS NOT NULL
	DROP TABLE #RESULT;

CREATE TABLE #RESULT (
	CFF_PROJECTION_MASTER_SID INT
	,YEAR INT
	,PERIOD INT
	,RS_NAME VARCHAR(100)
	,TOTAL_DISCOUNT NUMERIC(22, 6)
	,TOTAL_DISCOUNT_PROJECTED NUMERIC(22, 6)
	,TOTAL_DISCOUNT_PERCENTAGE NUMERIC(22, 6)
	,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
	,TOTAL_RPU NUMERIC(22, 6)
	,TOTAL_PROJECTED_RPU NUMERIC(22, 6)
	,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT NUMERIC(22, 6)
	,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT NUMERIC(22, 6)
	)

-------------PULLING CCP LEVEL INFORMATION FOR ONE PROJECTION AND RESTRICTING CCPS---------------------
IF Object_id('TEMPDB.DBO.#CFF_DETAILS', 'U') IS NOT NULL
	DROP TABLE #CFF_DETAILS;

SELECT CFF_DETAILS_SID
	,CFF_MASTER_SID
	,PROJECTION_MASTER_SID
	,CCP_DETAILS_SID
	,INBOUND_STATUS
	,SALES_INCLUSION
INTO #CFF_DETAILS
FROM CFF_DETAILS A
WHERE EXISTS (
		SELECT CFF_PROJECTION_MASTER_SID
		FROM #CFF_PROJECTION_MASTER T
		WHERE T.CFF_PROJECTION_MASTER_SID = A.CFF_MASTER_SID
		)
	AND CFF_MASTER_SID = @FIRST_PROJ_SID
	AND (
		EXISTS (
			SELECT TOKEN
			FROM Udf_splitstring(@CCP, ',') U
			WHERE U.token = CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

-------------PULLING CCP LEVEL INFORMATION FOR ONE PROJECTION AND RESTRICTING CCPS---------------------
IF Object_id('TEMPDB.DBO.#CCP_INFO', 'U') IS NOT NULL
	DROP TABLE #CCP_INFO;

SELECT CD.CFF_MASTER_SID
	,PD.PROJECTION_MASTER_SID
	,PROJECTION_DETAILS_SID
	,PD.CCP_DETAILS_SID
	,forecasting_type
	,ITEM_MASTER_SID
INTO #CCP_INFO
FROM CFF_DETAILS CD
JOIN PROJECTION_DETAILS PD ON CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	AND CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN ccp_details cc ON cc.CCP_DETAILS_SID = cd.CCP_DETAILS_SID
JOIN projection_master pm ON pm.PROJECTION_MASTER_SID = pd.PROJECTION_MASTER_SID
WHERE CFF_MASTER_SID = @FIRST_PROJ_SID
	AND (
		EXISTS (
			SELECT TOKEN
			FROM Udf_splitstring(@CCP, ',') U
			WHERE U.token = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

--------------------------PULLING @DISCOUNT_VIEW  INFORMATION BASED ON PROGRAM AND PROGRAM CATEGORY------------------------
DECLARE @VAR INT

SET @VAR = CASE 
		WHEN @DISCOUNT_VIEW = 'PROGRAM'
			OR @DISCOUNT_VIEW IS NULL
			THEN 1
		ELSE 0
		END

IF Object_id('TEMPDB.DBO.#PRIOR_RS_DATA', 'U') IS NOT NULL
	DROP TABLE #PRIOR_RS_DATA;

CREATE TABLE #PRIOR_RS_DATA (
	DISCOUNT VARCHAR(100)
	,NM_PPA_IND VARCHAR(10)
	,CCP_DETAILS_SID INT
	)

INSERT INTO #PRIOR_RS_DATA (
	DISCOUNT
	,NM_PPA_IND
	,CCP_DETAILS_SID
	)
SELECT DISTINCT CASE 
		WHEN @DISCOUNT_VIEW = 'PROGRAM'
			OR @DISCOUNT_VIEW IS NULL
			THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
		ELSE PRICE_GROUP_TYPE
		END AS DISCOUNT
	,'NM' AS NM_PPA_IND
	,PD.CCP_DETAILS_SID
FROM #CFF_DETAILS CFF
JOIN PROJECTION_DETAILS PD ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
	AND RM.RS_MODEL_SID = NMDP.RS_MODEL_SID
JOIN #TEMP_CCP CCP ON CCP.CONTRACT_MASTER_SID = RM.CONTRACT_MASTER_SID
	AND CCP.CCP_DETAILS_SID = CFF.CCP_DETAILS_SID
WHERE CFF.CFF_MASTER_SID = @FIRST_PROJ_SID
	AND (
		EXISTS (
			SELECT TOKEN
			FROM Udf_splitstring(@CCP, ',') U
			WHERE U.token = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

UNION ALL

SELECT DISTINCT CASE 
		WHEN @DISCOUNT_VIEW = 'PROGRAM'
			OR @DISCOUNT_VIEW IS NULL
			THEN CONVERT(VARCHAR(100), RM.RS_CONTRACT_SID)
		ELSE 'Price Protection'
		END AS PPA_DISCOUNT
	,'PPA' AS NM_PPA_IND
	,PD.CCP_DETAILS_SID
FROM #CFF_DETAILS CFF
JOIN PROJECTION_DETAILS PD ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN NM_PPA_PROJECTION_MASTER PPA ON PPA.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = PPA.RS_CONTRACT_SID
	AND RM.RS_MODEL_SID = PPA.RS_MODEL_SID
JOIN #TEMP_CCP CCP ON CCP.CONTRACT_MASTER_SID = RM.CONTRACT_MASTER_SID
	AND ccp.ccp_details_sid = cff.CCP_DETAILS_SID
WHERE CFF.CFF_MASTER_SID = @FIRST_PROJ_SID
	AND (
		EXISTS (
			SELECT TOKEN
			FROM Udf_splitstring(@CCP, ',') U
			WHERE U.token = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

IF Object_id('TEMPDB.DBO.#CURRENT_RS_DATA_PERIOD', 'U') IS NOT NULL
	DROP TABLE #CURRENT_RS_DATA_PERIOD;

SELECT DISCOUNT
	,YEAR
	,PERIOD
	,F.CFF_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,NM_PPA_IND
	,PERIOD_SID
INTO #CURRENT_RS_DATA_PERIOD
FROM #PRIOR_RS_DATA pr
CROSS JOIN (
	SELECT CFF_PROJECTION_MASTER_SID AS CFF_MASTER_SID
	FROM #CFF_PROJECTION_MASTER
	WHERE ID = 1
	) F
	JOIN CFF_DETAILS CD ON PR.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
		AND F.CFF_MASTER_SID=CD.CFF_MASTER_SID
		JOIN PROJECTION_DETAILS PD ON PR.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
		AND CD.PROJECTION_MASTER_SID=PD.PROJECTION_MASTER_SID
CROSS JOIN (
	SELECT DISTINCT year
		,period
		,PERIOD_SID
	FROM #PERIOD
	WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @PROJ_END_PERIOD_SID
	) P
WHERE (
		EXISTS (
			SELECT TOKEN
			FROM UDF_SPLITSTRING(@CCP, ',') U
			WHERE U.TOKEN = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

----------------TAKING RS_NAME BETWEEN  ACT_START_PERIOD_SID AND  PROJ_END_PERIOD_SID--------------------------------
--------------------------------PULLING CCP FOR FIRST CFF_MASTER_SID-------------------
IF Object_id('TEMPDB.DBO.#SALES_INFORMATION', 'U') IS NOT NULL
	DROP TABLE #SALES_INFORMATION;

SELECT DISTINCT CF.CFF_MASTER_SID
	,CC.CCP_DETAILS_SID
	,PD.PROJECTION_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,cc.item_master_sid
INTO #SALES_INFORMATION
FROM CCP_DETAILS cc
JOIN CFF_DETAILS CF ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
WHERE EXISTS (
		SELECT CFF_PROJECTION_MASTER_SID
		FROM #CFF_PROJECTION_MASTER T
		WHERE ID = 1
			AND T.CFF_PROJECTION_MASTER_SID = CF.CFF_MASTER_SID
		)
	AND SALES_INCLUSION = 'Y'
	AND (
		EXISTS (
			SELECT TOKEN
			FROM Udf_splitstring(@CCP, ',') U
			WHERE U.token = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

IF NOT EXISTS (
		SELECT *
		FROM #SALES_INFORMATION
		)
	SET @SALES_INC = 0
ELSE
	SET @SALES_INC = 1

--------------------------------PULLING DEDUCTION INCLUSION FOR FIRST CFF_MASTER_SID-------------------
IF Object_id('TEMPDB.DBO.#DISCOUNT_INFORMATION', 'U') IS NOT NULL
	DROP TABLE #DISCOUNT_INFORMATION;

SELECT DISTINCT CF.CFF_MASTER_SID
	,CC.CCP_DETAILS_SID
	,PD.PROJECTION_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,PRD.DISCOUNT
INTO #DISCOUNT_INFORMATION
FROM CFF_DEDUCTION_INCLUSION CDI
JOIN CFF_DETAILS CF ON CF.CFF_DETAILS_SID = CDI.CFF_DETAILS_SID
JOIN CCP_DETAILS CC ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
JOIN (
	SELECT DISTINCT CFF_MASTER_SID
		,PROJECTION_DETAILS_SID
		,DISCOUNT
	FROM #CURRENT_RS_DATA_PERIOD
	) PRD ON PRD.CFF_MASTER_SID = CF.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
WHERE EXISTS (
		SELECT CFF_PROJECTION_MASTER_SID
		FROM #CFF_PROJECTION_MASTER T
		WHERE ID = 1
			AND T.CFF_PROJECTION_MASTER_SID = CF.CFF_MASTER_SID
		)
	AND CDI.DEDUCTION_INCLUSION = 'Y'
	AND (
		EXISTS (
			SELECT TOKEN
			FROM Udf_splitstring(@CCP, ',') U
			WHERE U.token = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

--------------------------------PULLING CFF_MASTER_SID PERIOD BETWEEN  ACT_START_PERIOD_SID AND PROJ_END_PERIOD_SID-------------------
IF NOT EXISTS (
		SELECT *
		FROM #DISCOUNT_INFORMATION
		)
	SET @DEDUCTION_INC = 0
ELSE
	SET @DEDUCTION_INC = 1

--select @SALES_INC,@DEDUCTION_INC
IF Object_id('TEMPDB..#DATA_TABLE') IS NOT NULL
	DROP TABLE #DATA_TABLE

SELECT DISTINCT PERIOD
	,YEAR
	,@FIRST_PROJ_SID AS CFF_MASTER_SID
INTO #DATA_TABLE
FROM #PERIOD
WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @PROJ_END_PERIOD_SID

----------------------------PULLING NON MANDTED DISCOUNT PROJECTIONS VALUES-------------------------------
IF Object_id('TEMPDB..#NM_DISCOUNT_PROJECTION') IS NOT NULL
	DROP TABLE #NM_DISCOUNT_PROJECTION --nm

SELECT ISNULL(SUM(NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #NM_DISCOUNT_PROJECTION
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND CASE 
		WHEN @VAR = 1
			THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
		ELSE PRICE_GROUP_TYPE
		END = PRD.DISCOUNT
JOIN NM_DISCOUNT_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND prd.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------PULLING NON MANDTED  ACTUAL DISCOUNT  VALUES-------------------------------                       
IF Object_id('TEMPDB..#NM_ACTUAL_DISCOUNT') IS NOT NULL
	DROP TABLE #NM_ACTUAL_DISCOUNT

SELECT ISNULL(Sum(NSP.ACTUAL_SALES), 0) AS ACTUAL_SALES
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #NM_ACTUAL_DISCOUNT
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND CASE 
		WHEN @VAR = 1
			THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
		ELSE PRICE_GROUP_TYPE
		END = PRD.DISCOUNT
JOIN NM_ACTUAL_DISCOUNT NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------PULLING PPA  PROJECTION   VALUES-------------------------------              
IF Object_id('TEMPDB..#NM_PPA_PROJECTION') IS NOT NULL
	DROP TABLE #NM_PPA_PROJECTION

SELECT ISNULL(SUM(NSP.PROJECTION_DISCOUNT_DOLLAR), 0) PROJECTION_DISCOUNT_DOLLAR
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #NM_PPA_PROJECTION
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND CASE 
		WHEN @VAR = 1
			THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
		ELSE 'Price Protection'
		END = PRD.DISCOUNT
JOIN NM_PPA_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------PULLING  ACTUAL PPA   VALUES-------------------------------                   
IF Object_id('TEMPDB..#NM_ACTUAL_PPA') IS NOT NULL
	DROP TABLE #NM_ACTUAL_PPA

SELECT ISNULL(Sum(NSP.ACTUAL_DISCOUNT_DOLLAR), 0) ACTUAL_DISCOUNT_DOLLAR
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #NM_ACTUAL_PPA
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND CASE 
		WHEN @VAR = 1
			THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
		ELSE 'Price Protection'
		END = PRD.DISCOUNT
JOIN NM_ACTUAL_PPA NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------AGGREGATING  NON MANDATED SALESPROJECTION   VALUES-------------------------------                         
IF Object_id('TEMPDB..#NM_SALES_PROJECTION') IS NOT NULL
	DROP TABLE #NM_SALES_PROJECTION

SELECT Sum(PROJECTION_SALES) PROJECTION_SALES
	,Sum(PROJECTION_UNITS) PROJECTION_UNITS
	,Sum(PROJECTION_SALES * U.ITEM_PRICE) AS NM_COGS_PROJECTED
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #NM_SALES_PROJECTION
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN NM_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM #SALES_INFORMATION A WHERE A.PROJECTION_DETAILS_SID=PRD.PROJECTION_DETAILS_SID
			AND A.CFF_MASTER_SID = PRD.CFF_MASTER_SID)
			AND EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------AGGREGATING  NON MANDATED  ACTUAL SALES   VALUES-------------------------------            
IF Object_id('TEMPDB..#NM_ACTUAL_SALES') IS NOT NULL
	DROP TABLE #NM_ACTUAL_SALES

SELECT Sum(ACTUAL_SALES) ACTUAL_SALES
	,Sum(ACTUAL_UNITS) ACTUAL_UNITS
	,Sum(ACTUAL_SALES * U.ITEM_PRICE) AS NM_COGS_ACTUAL
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #NM_ACTUAL_SALES
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN NM_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM #SALES_INFORMATION A WHERE A.PROJECTION_DETAILS_SID=PRD.PROJECTION_DETAILS_SID
			AND A.CFF_MASTER_SID = PRD.CFF_MASTER_SID)
			AND EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

--  IF Object_id('TEMPDB..#RETURNS') IS NOT NULL
--    DROP TABLE #RETURNS
--  SELECT YEAR,
--         PERIOD,
--         Isnull(Sum(( Isnull(NSP.projection_sales, 0)
--                      + Isnull(MSP.projection_sales, 0) ) * TR.PROJECTED_RATE), 0) AS Returns_Projected,
--         Isnull(Sum(( Isnull(NAS.actual_sales, 0)
--                      + Isnull(MAS.actual_sales, 0) ) * TR.ACTUAL_RATE), 0)        AS Returns_actuals,
--RS_NAME
--  INTO   #RETURNS
--  FROM   #TEMP_RETURNS TR
--         JOIN CCP_DETAILS CC
--           ON TR.ITEM_MASTER_SID = CC.ITEM_MASTER_SID
--         JOIN #CCP_INFO C
--           ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
--         JOIN #PERIOD P
--           ON P.PERIOD_SID = TR.PERIOD_SID
--         LEFT OUTER JOIN NM_SALES_PROJECTION NSP
--                      ON NSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
--                         AND p.PERIOD_SID = NSP.PERIOD_SID
--                         AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
--         LEFT OUTER JOIN M_SALES_PROJECTION MSP
--                      ON MSP.PROJECTION_DETAILS_SID = c.PROJECTION_DETAILS_SID
--                         AND p.PERIOD_SID = MSP.PERIOD_SID
--                         AND MSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
--         LEFT OUTER JOIN NM_ACTUAL_SALES NAS
--                      ON NAS.PROJECTION_DETAILS_SID = c.PROJECTION_DETAILS_SID
--                         AND p.PERIOD_SID = NAS.PERIOD_SID
--                         AND NAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
--         LEFT OUTER JOIN M_ACTUAL_SALES MAS
--                      ON MAS.PROJECTION_DETAILS_SID = c.PROJECTION_DETAILS_SID
--                         AND p.PERIOD_SID = MAS.PERIOD_SID
--                         AND MAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
--  GROUP  BY YEAR,
--            PERIOD,RS_NAME
----------------------------AGGREGATING  SUPPLEMENTAL  PROJECTION    VALUES-------------------------------
IF OBJECT_ID('TEMPDB..#M_SUPPLEMENTAL_DISC_PROJ') IS NOT NULL
	DROP TABLE #M_SUPPLEMENTAL_DISC_PROJ

SELECT ISNULL(Sum(NSP.PROJECTION_SALES), 0) PROJECTION_SALES
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #M_SUPPLEMENTAL_DISC_PROJ
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_SUPPLEMENTAL_DISC_PROJ NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------AGGREGATING  SUPPLEMENTAL  ACTUAL SALES   VALUES-------------------------------
IF OBJECT_ID('TEMPDB..#M_SUPPLEMENTAL_DISC_ACTUALS') IS NOT NULL
	DROP TABLE #M_SUPPLEMENTAL_DISC_ACTUALS

SELECT Sum(NSP.ACTUAL_SALES) ACTUAL_SALES
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #M_SUPPLEMENTAL_DISC_ACTUALS
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_SUPPLEMENTAL_DISC_ACTUALS NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------PULLING  MANDATED  DISCOUNT PROJECTED   VALUES-------------------------------
IF Object_id('TEMPDB..#M_DISCOUNT_PROJECTION') IS NOT NULL
	DROP TABLE #M_DISCOUNT_PROJECTION

SELECT Sum(NMDP.PROJECTION_SALES) PROJECTION_SALES
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #M_DISCOUNT_PROJECTION
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN M_DISCOUNT_PROJECTION NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NMDP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------PULLING  MANDATED  DISCOUNT ACTUALS   VALUES-------------------------------
IF Object_id('TEMPDB..#M_ACTUAL_DISCOUNT') IS NOT NULL
	DROP TABLE #M_ACTUAL_DISCOUNT

SELECT Sum(NMDP.ACTUAL_SALES) ACTUAL_SALES
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #M_ACTUAL_DISCOUNT
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN M_ACTUAL_DISCOUNT NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NMDP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
WHERE EXISTS (SELECT 1 FROM  #DISCOUNT_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT)
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------PULLING  MANDATED  SALES PROJECTED   VALUES-------------------------------
IF Object_id('TEMPDB..#M_SALES_PROJECTION') IS NOT NULL
	DROP TABLE #M_SALES_PROJECTION

SELECT Sum(PROJECTION_SALES) PROJECTION_SALES
	,Sum(PROJECTION_UNITS) PROJECTION_UNITS
	,Sum(PROJECTION_SALES * U.ITEM_PRICE) AS M_COGS_PROJECTED
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #M_SALES_PROJECTION
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN #DISCOUNT_INFORMATION A ON A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT
JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = a.CCP_DETAILS_SID
LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND PRD.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
	
----------------------------PULLING  MANDATED  SALES ACTUAL   VALUES-------------------------------
IF Object_id('TEMPDB..#M_ACTUAL_SALES') IS NOT NULL
	DROP TABLE #M_ACTUAL_SALES

SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
	,SUM(ACTUAL_UNITS) ACTUAL_UNITS
	,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS M_COGS_ACTUAL
	,PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID
INTO #M_ACTUAL_SALES
FROM #CURRENT_RS_DATA_PERIOD PRD
JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN #DISCOUNT_INFORMATION A ON A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
	AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
	AND PRD.DISCOUNT = A.DISCOUNT
JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = A.CCP_DETAILS_SID
LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND PRD.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.DISCOUNT
	,PRD.CFF_MASTER_SID

----------------------------PULLING  AGGREGATING   SALES   VALUES-------------------------------
IF Object_id('TEMPDB..#SALES') IS NOT NULL
	DROP TABLE #SALES

SELECT FD.CFF_MASTER_SID
	,FD.YEAR
	,FD.PERIOD
	,FD.DISCOUNT
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_SALES), 0) + COALESCE((MSP.PROJECTION_SALES), 0)
		END AS PROJECTION_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_UNITS), 0) + COALESCE((MSP.PROJECTION_UNITS), 0)
		END AS PROJECTION_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_SALES), 0) + COALESCE((MAS.ACTUAL_SALES), 0)
		END AS ACTUAL_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_UNITS), 0) + COALESCE((MAS.ACTUAL_UNITS), 0)
		END AS ACTUAL_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MSP.M_COGS_PROJECTED), 0) + COALESCE((NSP.NM_COGS_PROJECTED), 0)
		END AS COGS_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MAS.M_COGS_ACTUAL), 0) + COALESCE((NAS.NM_COGS_ACTUAL), 0)
		END AS COGS_ACTUAL
	,
	--RETURNS_ACTUALS = CASE
	--                    WHEN @DEDUCTION_INC = 0 THEN NULL
	--                    ELSE RETURNS_ACTUALS
	--                  END,
	--RETURNS_PROJECTED = CASE
	--                      WHEN @DEDUCTION_INC = 0 THEN NULL
	--                      ELSE RETURNS_PROJECTED
	--                    END,
	--ACTUAL_RATE = ( CASE
	--                  WHEN @DEDUCTION_INC = 0
	--                        OR @SALES_INC = 0 THEN NULL
	--                  ELSE Isnull(( RETURNS_ACTUALS / NULLIF(COALESCE((NAS.ACTUAL_SALES), 0)
	--                                                         + COALESCE((MAS.ACTUAL_SALES), 0), 0) ), 0)
	--                END ),
	--PROJECTED_RATE = ( CASE
	--                     WHEN @DEDUCTION_INC = 0
	--                           OR @SALES_INC = 0 THEN NULL
	--                     ELSE Isnull(( RETURNS_PROJECTED / NULLIF(COALESCE((NSP.PROJECTION_SALES), 0)
	--                                                              + COALESCE((MSP.PROJECTION_SALES), 0), 0) ), 0)
	--                   END ),
	CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_SALES), 0)
		END AS NM_ACTUAL_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_SALES), 0)
		END AS NM_PROJECTED_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MAS.ACTUAL_SALES), 0)
		END AS M_ACTUAL_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MSP.PROJECTION_SALES), 0)
		END AS M_PROJECTED_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_UNITS), 0)
		END AS NM_ACTUAL_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_UNITS), 0)
		END AS NM_PROJECTED_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MAS.ACTUAL_UNITS), 0)
		END AS M_ACTUAL_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MSP.PROJECTION_UNITS), 0)
		END AS M_PROJECTED_UNITS
INTO #SALES
FROM (
	SELECT DISTINCT CFF_MASTER_SID
		,YEAR
		,PERIOD
		,DISCOUNT
	FROM #CURRENT_RS_DATA_PERIOD
	) FD
LEFT JOIN #NM_SALES_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
	AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND NSP.DISCOUNT = FD.DISCOUNT
LEFT JOIN #M_SALES_PROJECTION MSP ON MSP.YEAR = FD.YEAR
	AND MSP.PERIOD = FD.PERIOD
	AND MSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MSP.DISCOUNT = FD.DISCOUNT
LEFT JOIN #NM_ACTUAL_SALES NAS ON NAS.YEAR = FD.YEAR
	AND NAS.PERIOD = FD.PERIOD
	AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND NAS.DISCOUNT = FD.DISCOUNT
LEFT JOIN #M_ACTUAL_SALES MAS ON MAS.YEAR = FD.YEAR
	AND MAS.PERIOD = FD.PERIOD
	AND MAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MAS.DISCOUNT = FD.DISCOUNT

--LEFT JOIN #RETURNS TR
--       ON TR.YEAR = FD.YEAR
--          AND TR.PERIOD = FD.PERIOD
---------------PULLING DISCOUNT OF BOTH MANDATED AND NON MANDATED VALUES-----------------
IF Object_id('TEMPDB..#DISCOUNT') IS NOT NULL
	DROP TABLE #DISCOUNT

SELECT FD.YEAR
	,FD.PERIOD
	,COALESCE((NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
	,COALESCE((NAD.ACTUAL_SALES), 0) AS ACTUAL_SALES
	,FD.CFF_MASTER_SID
	,FD.DISCOUNT AS RS_NAME
INTO #DISCOUNT
FROM (
	SELECT DISTINCT CFF_MASTER_SID
		,YEAR
		,PERIOD
		,DISCOUNT
		,NM_PPA_IND
	FROM #CURRENT_RS_DATA_PERIOD
	) FD
LEFT JOIN #NM_DISCOUNT_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
	AND NSP.DISCOUNT = FD.DISCOUNT
	AND FD.CFF_MASTER_SID = NSP.CFF_MASTER_SID
LEFT JOIN #NM_ACTUAL_DISCOUNT NAD ON NAD.YEAR = FD.YEAR
	AND NAD.PERIOD = FD.PERIOD
	AND FD.CFF_MASTER_SID = NAD.CFF_MASTER_SID
	AND NAD.DISCOUNT = FD.DISCOUNT
WHERE EXISTS (
		SELECT 1
		FROM #DISCOUNT_INFORMATION C
		WHERE C.CFF_MASTER_SID = FD.CFF_MASTER_SID
			AND C.DISCOUNT = FD.DISCOUNT
		)
	AND FD.NM_PPA_IND = 'NM'

---------------PULLING PPA OF BOTH NON MANDATED VALUES WHERE NM_PPA_IND =PPA -----------------            
IF Object_id('TEMPDB..#PPA') IS NOT NULL
	DROP TABLE #PPA

SELECT FD.YEAR
	,FD.PERIOD
	,FD.DISCOUNT
	,FD.CFF_MASTER_SID
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_DISCOUNT_DOLLAR), 0)
		END AS PPA_ACTUAL_SALES
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_DISCOUNT_DOLLAR), 0)
		END AS PPA_DISCOUNT_PROJECTED
INTO #PPA
FROM (
	SELECT DISTINCT CFF_MASTER_SID
		,YEAR
		,PERIOD
		,DISCOUNT
		,NM_PPA_IND
	FROM #CURRENT_RS_DATA_PERIOD
	) FD
LEFT JOIN #NM_PPA_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
	AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND NSP.DISCOUNT = FD.DISCOUNT
LEFT JOIN #NM_ACTUAL_PPA NAS ON NAS.YEAR = FD.YEAR
	AND NAS.PERIOD = FD.PERIOD
	AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND NAS.DISCOUNT = FD.DISCOUNT
WHERE FD.NM_PPA_IND = 'PPA'

---------------AGGREGATING   PPA AND SUPPLEMENTAL VALUES-----------------        
IF Object_id('TEMPDB..#PPA_SUPP_MANDATED') IS NOT NULL
	DROP TABLE #PPA_SUPP_MANDATED

SELECT FD.YEAR
	,FD.PERIOD
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((SDP.PROJECTION_SALES), 0)
		END AS SUPPLEMENTAL_DISCOUNT_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((MDP.PROJECTION_SALES), 0)
		END AS MANDATED_DISCOUNT_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((SDA.ACTUAL_SALES), 0)
		END AS SUPPLEMENTAL_DISCOUNT_ACTUALS
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((MAD.ACTUAL_SALES), 0)
		END AS MANDATED_DISCOUNT_ACTUALS
	,FD.CFF_MASTER_SID
	,FD.DISCOUNT
INTO #PPA_SUPP_MANDATED
FROM (
	SELECT DISTINCT CFF_MASTER_SID
		,YEAR
		,PERIOD
		,DISCOUNT
	FROM #CURRENT_RS_DATA_PERIOD
	) FD
LEFT JOIN #M_SUPPLEMENTAL_DISC_PROJ SDP ON SDP.YEAR = FD.YEAR
	AND SDP.PERIOD = FD.PERIOD
	AND SDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND SDP.DISCOUNT = FD.DISCOUNT
LEFT JOIN #M_SUPPLEMENTAL_DISC_ACTUALS SDA ON SDA.YEAR = FD.YEAR
	AND SDA.PERIOD = FD.PERIOD
	AND SDA.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND SDA.DISCOUNT = FD.DISCOUNT
LEFT JOIN #M_DISCOUNT_PROJECTION MDP ON MDP.YEAR = FD.YEAR
	AND MDP.PERIOD = FD.PERIOD
	AND MDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MDP.DISCOUNT = FD.DISCOUNT
LEFT JOIN #M_ACTUAL_DISCOUNT MAD ON MAD.YEAR = FD.YEAR
	AND MAD.PERIOD = FD.PERIOD
	AND MAD.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MAD.DISCOUNT = FD.DISCOUNT

IF OBJECT_ID('TEMPDB..#PRODUCT_FILE_DATA') IS NOT NULL
	DROP TABLE #PRODUCT_FILE_DATA

SELECT P.YEAR
	,P.PERIOD
	,SUM(EX_FACTORY_SALES_ACTUALS) AS EX_FACTORY_SALES_ACTUALS
	,SUM(EX_FACTORY_SALES_PROJ) AS EX_FACTORY_SALES_PROJ
	,SUM(DEMAND_SALES_ACTUALS) AS DEMAND_SALES_ACTUALS
	,SUM(DEMAND_SALES_PROJ) AS DEMAND_SALES_PROJ
	,SUM(ADJUSTED_DEMAND_ACTUALS) AS ADJUSTED_DEMAND_ACTUALS
	,SUM(ADJUSTED_DEMAND_PROJ) AS ADJUSTED_DEMAND_PROJ
	,SUM(IW_MASTER_ACTUALS) AS IW_MASTER_ACTUALS
	,SUM(IW_MASTER_PROJ) AS IW_MASTER_PROJ
	,CF.CFF_MASTER_SID AS CFF_MASTER_SID
INTO #PRODUCT_FILE_DATA
FROM CFF_PRODUCT_LEVEL_FILES_DATA CF
			 JOIN (SELECT DISTINCT CFF_MASTER_SID,ITEM_MASTER_SID FROM #TEMP_CCP) B
			 ON CF.CFF_MASTER_SID=B.CFF_MASTER_SID
			 AND CF.ITEM_MASTER_SID=B.ITEM_MASTER_SID
	INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
GROUP BY P.YEAR
	,P.PERIOD
	,CF.CFF_MASTER_SID

---------------IT WILL INSERT ONLY NON MANDATED VALUES INTO RESULT TABLE   -----------------       
IF EXISTS (
		SELECT 1
		FROM #CCP_INFO
		WHERE FORECASTING_TYPE = 'NON MANDATED'
		)
BEGIN
	IF @var = 1
	BEGIN
		INSERT INTO #RESULT (
			CFF_PROJECTION_MASTER_SID
			,YEAR
			,PERIOD
			,RS_NAME
			,TOTAL_DISCOUNT
			,TOTAL_DISCOUNT_PROJECTED
			,TOTAL_DISCOUNT_PERCENTAGE
			,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
			,TOTAL_RPU
			,TOTAL_PROJECTED_RPU
			,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT
			,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT
			)
		--SELECT @FIRST_PROJ_SID                 CFF_PROJECTION_MASTER_SID,
		--       YEAR,
		--       PERIOD,
		--       RS_NAME,
		--       Isnull(RETURNS_ACTUALS, 0)      TOTAL_DISCOUNT,
		--       Isnull(RETURNS_PROJECTED, 0)    TOTAL_DISCOUNT_PROJECTED,
		--       Isnull(ACTUAL_RATE, 0) * 100    TOTAL_DISCOUNT_PERCENTAGE,
		--       Isnull(PROJECTED_RATE, 0) * 100 TOTAL_DISCOUNT_PROJECTED_PERCENTAGE,
		--       Isnull(CASE
		--                WHEN @SALES_INC = 0
		--                      OR @DEDUCTION_INC = 0 THEN NULL
		--                ELSE COALESCE(RETURNS_ACTUALS / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
		--              END, 0)                  TOTAL_RPU,
		--       Isnull(CASE
		--                WHEN @SALES_INC = 0
		--                      OR @DEDUCTION_INC = 0 THEN NULL
		--                ELSE COALESCE(RETURNS_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
		--              END, 0)                  TOTAL_PROJECTED_RPU
		--FROM   #sales RD
		--UNION ALL
		SELECT @FIRST_PROJ_SID
			,ND.YEAR
			,ND.PERIOD
			,rc.RS_NAME
			,ISNULL(ND.ACTUAL_SALES, 0)
			,ISNULL(ND.PROJECTION_SALES, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						--OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
					END, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						-- OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
					END, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						-- OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
					END, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						-- OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
					END, 0)
			,COALESCE(ISNULL(ND.ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
			,COALESCE(ISNULL(ND.PROJECTION_SALES, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
		FROM #DISCOUNT ND
		JOIN #SALES RD ON RD.YEAR = ND.YEAR
			AND RD.PERIOD = ND.PERIOD
			AND RD.DISCOUNT = ND.RS_NAME
			AND RD.CFF_MASTER_SID = ND.CFF_MASTER_SID
		JOIN #PRODUCT_FILE_DATA PFD ON PFD.YEAR = ND.YEAR
			AND PFD.PERIOD = ND.PERIOD
			AND PFD.CFF_MASTER_SID = ND.CFF_MASTER_SID
		JOIN RS_CONTRACT RC ON RS_CONTRACT_SID = ND.RS_NAME
		
		UNION ALL
		
		SELECT @FIRST_PROJ_SID
			,PD.YEAR
			,PD.PERIOD
			,rc.RS_NAME
			,Isnull(PD.PPA_ACTUAL_SALES, 0)
			,Isnull(PD.PPA_DISCOUNT_PROJECTED, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
					END, 0)
			,COALESCE(Isnull(PD.PPA_ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
			,COALESCE(Isnull(PD.PPA_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
		---   FROM   #PPA_SUPP_MANDATED PD
		FROM #PPA PD
		JOIN #SALES RD ON RD.YEAR = PD.YEAR
			AND RD.PERIOD = PD.PERIOD
			AND RD.DISCOUNT = PD.DISCOUNT
			AND RD.CFF_MASTER_SID = PD.CFF_MASTER_SID
		JOIN #PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
			AND PFD.PERIOD = RD.PERIOD
			AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
		JOIN RS_CONTRACT RC ON RS_CONTRACT_SID = PD.DISCOUNT
	END
	ELSE
	BEGIN
		INSERT INTO #RESULT (
			CFF_PROJECTION_MASTER_SID
			,YEAR
			,PERIOD
			,RS_NAME
			,TOTAL_DISCOUNT
			,TOTAL_DISCOUNT_PROJECTED
			,TOTAL_DISCOUNT_PERCENTAGE
			,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
			,TOTAL_RPU
			,TOTAL_PROJECTED_RPU
			,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT
			,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT
			)
		--SELECT @FIRST_PROJ_SID                 CFF_PROJECTION_MASTER_SID,
		--       YEAR,
		--       PERIOD,
		--       RS_NAME,
		--       Isnull(RETURNS_ACTUALS, 0)      TOTAL_DISCOUNT,
		--       Isnull(RETURNS_PROJECTED, 0)    TOTAL_DISCOUNT_PROJECTED,
		--       Isnull(ACTUAL_RATE, 0) * 100    TOTAL_DISCOUNT_PERCENTAGE,
		--       Isnull(PROJECTED_RATE, 0) * 100 TOTAL_DISCOUNT_PROJECTED_PERCENTAGE,
		--       Isnull(CASE
		--                WHEN @SALES_INC = 0
		--                      OR @DEDUCTION_INC = 0 THEN NULL
		--                ELSE COALESCE(RETURNS_ACTUALS / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
		--              END, 0)                  TOTAL_RPU,
		--       Isnull(CASE
		--                WHEN @SALES_INC = 0
		--                      OR @DEDUCTION_INC = 0 THEN NULL
		--                ELSE COALESCE(RETURNS_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
		--              END, 0)                  TOTAL_PROJECTED_RPU
		--FROM   #sales RD
		--UNION ALL
		SELECT @FIRST_PROJ_SID
			,ND.YEAR
			,ND.PERIOD
			,ND.RS_NAME
			,ISNULL(ND.ACTUAL_SALES, 0)
			,ISNULL(ND.PROJECTION_SALES, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						--OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
					END, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						--OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
					END, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						--  OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
					END, 0)
			,ISNULL(CASE 
					WHEN @SALES_INC = 0
						-- OR INDICATOR = 0 
						THEN NULL
					ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
					END, 0)
			,COALESCE(ISNULL(ND.ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
			,COALESCE(ISNULL(ND.PROJECTION_SALES, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
		FROM #DISCOUNT ND
		JOIN #SALES RD ON RD.YEAR = ND.YEAR
			AND RD.PERIOD = ND.PERIOD
			AND RD.DISCOUNT = ND.RS_NAME
			AND RD.CFF_MASTER_SID = ND.CFF_MASTER_SID
		JOIN #PRODUCT_FILE_DATA PFD ON PFD.YEAR = ND.YEAR
			AND PFD.PERIOD = ND.PERIOD
			AND PFD.CFF_MASTER_SID = ND.CFF_MASTER_SID
		
		UNION ALL
		
		SELECT @FIRST_PROJ_SID
			,PD.YEAR
			,PD.PERIOD
			,PD.DISCOUNT
			,Isnull(PD.PPA_ACTUAL_SALES, 0)
			,Isnull(PD.PPA_DISCOUNT_PROJECTED, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
					END, 0)
			,COALESCE(Isnull(PD.PPA_ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
			,COALESCE(Isnull(PD.PPA_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
		---   FROM   #PPA_SUPP_MANDATED PD
		FROM #PPA PD
		JOIN #SALES RD ON RD.YEAR = PD.YEAR
			AND RD.PERIOD = PD.PERIOD
			AND RD.DISCOUNT = PD.DISCOUNT
			AND RD.CFF_MASTER_SID = PD.CFF_MASTER_SID
		JOIN #PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
			AND PFD.PERIOD = RD.PERIOD
			AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
	END
END

---------------IT WILL INSERT ONLY  MANDATED VALUES INTO RESULT TABLE   -----------------
IF EXISTS (
		SELECT 1
		FROM #CCP_INFO
		WHERE forecasting_type = 'mandated'
		)
BEGIN
	INSERT INTO #RESULT (
		CFF_PROJECTION_MASTER_SID
		,YEAR
		,PERIOD
		,RS_NAME
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT
		,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT
		)
	SELECT @FIRST_PROJ_SID CFF_PROJECTION_MASTER_SID
		,MD.YEAR
		,MD.PERIOD
		,'MANDATED' AS RS_NAME
		,Isnull(MD.MANDATED_DISCOUNT_ACTUALS, 0) TOTAL_DISCOUNT
		,Isnull(MD.MANDATED_DISCOUNT_PROJECTED, 0) TOTAL_DISCOUNT_PROJECTED
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(MD.MANDATED_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_SALES, 0), 0) * 100
				END, 0) TOTAL_DISCOUNT_PERCENTAGE
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(MD.MANDATED_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_SALES, 0), 0) * 100
				END, 0) TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(MD.MANDATED_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_UNITS, 0), 0)
				END, 0) TOTAL_RPU
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(MD.MANDATED_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_UNITS, 0), 0)
				END, 0) TOTAL_PROJECTED_RPU
		,COALESCE(Isnull(MD.MANDATED_DISCOUNT_ACTUALS, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
		,COALESCE(Isnull(MD.MANDATED_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
	FROM #PPA_SUPP_MANDATED MD
	JOIN #sales RD ON RD.YEAR = MD.YEAR
		AND RD.PERIOD = MD.PERIOD
		AND RD.CFF_MASTER_SID = MD.CFF_MASTER_SID
		AND RD.DISCOUNT = MD.DISCOUNT
	JOIN #PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
		AND PFD.PERIOD = RD.PERIOD
		AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
	
	UNION ALL
	
	SELECT @FIRST_PROJ_SID
		,SD.YEAR
		,SD.PERIOD
		,'SUPPLEMENTAL'
		,Isnull(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS, 0)
		,Isnull(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED, 0)
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_SALES, 0), 0) * 100
				END, 0)
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_SALES, 0), 0) * 100
				END, 0)
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_UNITS, 0), 0)
				END, 0)
		,Isnull(CASE 
				WHEN @SALES_INC = 0
					OR @DEDUCTION_INC = 0
					THEN NULL
				ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_UNITS, 0), 0)
				END, 0)
		,COALESCE(Isnull(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
		,COALESCE(Isnull(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
	FROM #PPA_SUPP_MANDATED SD
	JOIN #sales RD ON RD.YEAR = SD.YEAR
		AND RD.PERIOD = SD.PERIOD
		AND RD.CFF_MASTER_SID = SD.CFF_MASTER_SID
		AND RD.DISCOUNT = SD.DISCOUNT
	JOIN #PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
		AND PFD.PERIOD = RD.PERIOD
		AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
END

-------------STORING VALUES INTO RESULT TABLE --------------------------------
IF @SCREEN_NAME = 'ASSUMPTIONS'
BEGIN
	--SELECT *
	--FROM   #RESULT
	--ORDER  BY CASE
	--            WHEN @ORDER = 'EXCEL' THEN RS_NAME --ELSE '1'
	--          END,
	--          YEAR,
	--          PERIOD
	SELECT CFF_PROJECTION_MASTER_SID
		,YEAR
		,PERIOD
		,RS_NAME
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT
		,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT
	FROM #RESULT
	ORDER BY CASE 
			WHEN @VIEW = 'PERIOD'
				OR @VIEW IS NULL
				THEN RS_NAME
			END
		,CASE 
			WHEN @VIEW = 'PERIOD'
				OR @VIEW IS NULL
				THEN YEAR
			END
		,CASE 
			WHEN @VIEW = 'PERIOD'
				OR @VIEW IS NULL
				THEN PERIOD
			END
		,CASE 
			WHEN @VIEW = 'PIVOT'
				THEN YEAR
			END
		,CASE 
			WHEN @VIEW = 'PIVOT'
				THEN PERIOD
			END
		,CASE 
			WHEN @VIEW = 'PIVOT'
				THEN RS_NAME
			END
END

----------------------------PULLING  RS_NAME FOR OTHER THAN  FIRST CFF'S ------------------------
IF @SCREEN_NAME <> 'ASSUMPTIONS'
BEGIN
	---------------------------TAKING PERIODS FOR EACH RS_NAME BETWEEEN  ACT_START_PERIOD_SID AND PROJ_END_PERIOD_SID  ------------------------
	IF Object_id('TEMPDB.DBO.#PRIOR_RS_DATA_PERIOD', 'U') IS NOT NULL
		DROP TABLE #PRIOR_RS_DATA_PERIOD;

	SELECT DISCOUNT
		,YEAR
		,PERIOD
		,F.CFF_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,NM_PPA_IND
		,PERIOD_SID
	INTO #PRIOR_RS_DATA_PERIOD
	FROM #PRIOR_RS_DATA pr
	CROSS JOIN (
		SELECT CFF_PROJECTION_MASTER_SID AS CFF_MASTER_SID
		FROM #CFF_PROJECTION_MASTER
		WHERE ID <> 1
		) F
	JOIN CFF_DETAILS CD ON PR.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
		AND F.CFF_MASTER_SID=CD.CFF_MASTER_SID
		JOIN PROJECTION_DETAILS PD ON PR.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
		AND CD.PROJECTION_MASTER_SID=PD.PROJECTION_MASTER_SID
	CROSS JOIN (
		SELECT DISTINCT year
			,period
			,PERIOD_SID
		FROM #PERIOD
		WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
				AND @PROJ_END_PERIOD_SID
		) P
	WHERE (
			EXISTS (
				SELECT TOKEN
				FROM UDF_SPLITSTRING(@CCP, ',') U
				WHERE U.TOKEN = PD.CCP_DETAILS_SID
				)
			OR @CCP IS NULL
			)

IF OBJECT_ID('TEMPDB..#PRIOR_TEMP_CCP') IS NOT NULL
	DROP TABLE #PRIOR_TEMP_CCP

CREATE TABLE #PRIOR_TEMP_CCP (
	COMPANY_MASTER_SID INT
	,CONTRACT_MASTER_SID INT
	,ITEM_MASTER_SID INT
	,PROJECTION_DETAILS_SID INT
	,CFF_MASTER_SID INT
	,PROJECTION_MASTER_SID INT
	,CCP_DETAILS_SID INT
	)

INSERT INTO #PRIOR_TEMP_CCP (
	COMPANY_MASTER_SID
	,CONTRACT_MASTER_SID
	,ITEM_MASTER_SID
	,PROJECTION_DETAILS_SID
	,CFF_MASTER_SID
	,PROJECTION_MASTER_SID
	,CCP_DETAILS_SID
	)
SELECT CCP.COMPANY_MASTER_SID
	,CCP.CONTRACT_MASTER_SID
	,CCP.ITEM_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,CD.CFF_MASTER_SID
	,PD.PROJECTION_MASTER_SID
	,CCP.CCP_DETAILS_SID
FROM CCP_DETAILS CCP
INNER JOIN PROJECTION_DETAILS PD ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN CFF_DETAILS CD ON CCP.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
	AND CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
WHERE   EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER CFF
			WHERE ID <> 1
				AND CD.CFF_MASTER_SID = CFF.CFF_PROJECTION_MASTER_SID
			)
	AND (
		EXISTS (
			SELECT TOKEN
			FROM UDF_SPLITSTRING(@CCP, ',') U
			WHERE U.TOKEN = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)
	----------------------------PULLING CCP LEVEL INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB.DBO.#PRIOR_CPP_INFO', 'U') IS NOT NULL
		DROP TABLE #PRIOR_CPP_INFO;

	SELECT CD.CFF_MASTER_SID
		,PD.PROJECTION_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,PD.CCP_DETAILS_SID
		,FORECASTING_TYPE
		,ITEM_MASTER_SID
	INTO #PRIOR_CPP_INFO
	FROM PROJECTION_DETAILS PD
	JOIN CFF_DETAILS CD ON CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
		AND CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	JOIN PROJECTION_MASTER PM ON PM.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	JOIN CCP_DETAILS CC ON CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER T
			WHERE ID <> 1
				AND CD.CFF_MASTER_SID = T.CFF_PROJECTION_MASTER_SID
			)
		AND (
			EXISTS (
				SELECT TOKEN
				FROM UDF_SPLITSTRING(@CCP, ',') U
				WHERE U.TOKEN = PD.CCP_DETAILS_SID
				)
			OR @CCP IS NULL
			)

	----------------------------PULLING SALESINCLUSION  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_SALES_INFORMATION') IS NOT NULL
		DROP TABLE #PRIOR_SALES_INFORMATION

	SELECT DISTINCT CF.CFF_MASTER_SID
		,CC.CCP_DETAILS_SID
		,PD.PROJECTION_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,cc.item_master_sid
	INTO #PRIOR_SALES_INFORMATION
	FROM CCP_DETAILS cc
	JOIN CFF_DETAILS CF ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
		AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER T
			WHERE ID <> 1
				AND T.CFF_PROJECTION_MASTER_SID = CF.CFF_MASTER_SID
			)
		AND SALES_INCLUSION = 'Y'
		AND (
			EXISTS (
				SELECT TOKEN
				FROM Udf_splitstring(@CCP, ',') U
				WHERE U.token = PD.CCP_DETAILS_SID
				)
			OR @CCP IS NULL
			)

	----------------------------PULLING DEDUCTION INCLUSION  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_DISC_INFORMATION') IS NOT NULL
		DROP TABLE #PRIOR_DISC_INFORMATION

	SELECT DISTINCT CF.CFF_MASTER_SID
		,CC.CCP_DETAILS_SID
		,PD.PROJECTION_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,PRD.DISCOUNT
	INTO #PRIOR_DISC_INFORMATION
	FROM CFF_DEDUCTION_INCLUSION CDI
	JOIN CFF_DETAILS CF ON CF.CFF_DETAILS_SID = CDI.CFF_DETAILS_SID
	JOIN CCP_DETAILS CC ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
		AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,PROJECTION_DETAILS_SID
			,DISCOUNT
		FROM #PRIOR_RS_DATA_PERIOD
		) PRD ON PRD.CFF_MASTER_SID = CF.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER T
			WHERE ID <> 1
				AND T.CFF_PROJECTION_MASTER_SID = CF.CFF_MASTER_SID
			)
		AND CDI.DEDUCTION_INCLUSION = 'Y'
		AND (
			EXISTS (
				SELECT TOKEN
				FROM Udf_splitstring(@CCP, ',') U
				WHERE U.token = PD.CCP_DETAILS_SID
				)
			OR @CCP IS NULL
			)

	----------------------------PULLING DEDUCTION INCLUSION  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_INCLUSION') IS NOT NULL
		DROP TABLE #PRIOR_INCLUSION

	SELECT PM.CFF_PROJECTION_MASTER_SID
		,CASE 
			WHEN PSI.CFF_MASTER_SID IS NOT NULL
				THEN 1
			ELSE 0
			END AS SALES_INC
		,CASE 
			WHEN PDI.CFF_MASTER_SID IS NOT NULL
				THEN 1
			ELSE 0
			END AS DEDUCTION_INC
	INTO #PRIOR_INCLUSION
	FROM #CFF_PROJECTION_MASTER PM
	LEFT JOIN (
		SELECT DISTINCT CFF_MASTER_SID
		FROM #PRIOR_SALES_INFORMATION
		) PSI ON PSI.CFF_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
	LEFT JOIN (
		SELECT DISTINCT CFF_MASTER_SID
		FROM #PRIOR_DISC_INFORMATION
		) PDI ON PDI.CFF_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
	WHERE ID <> 1

	----------------------------PULLING DISCOUNT OF PROJECTED  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_DISCOUNT_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_DISCOUNT_PROJECTION

	SELECT ISNULL(SUM(NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_NM_DISCOUNT_PROJECTION
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND CASE 
			WHEN @VAR = 1
				THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
			ELSE PRICE_GROUP_TYPE
			END = PRD.DISCOUNT
	JOIN NM_DISCOUNT_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND prd.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	----------------------------PULLING DISCOUNT OF ACTULS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_NM_ACTUAL_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_DISCOUNT

	SELECT ISNULL(Sum(NSP.ACTUAL_SALES), 0) AS ACTUAL_SALES
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_NM_ACTUAL_DISCOUNT
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND CASE 
			WHEN @VAR = 1
				THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
			ELSE PRICE_GROUP_TYPE
			END = PRD.DISCOUNT
	JOIN NM_ACTUAL_DISCOUNT NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	----------------------------PULLING   PPA PROJECTIONS VALUES    INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_NM_PPA_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_PPA_PROJECTION

	SELECT ISNULL(SUM(NSP.PROJECTION_DISCOUNT_DOLLAR), 0) PROJECTION_DISCOUNT_DOLLAR
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_NM_PPA_PROJECTION
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND CASE 
			WHEN @VAR = 1
				THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
			ELSE 'Price Protection'
			END = PRD.DISCOUNT
	JOIN NM_PPA_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	----------------------------PULLING   PPA ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_NM_ACTUAL_PPA') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_PPA

	SELECT ISNULL(Sum(NSP.ACTUAL_DISCOUNT_DOLLAR), 0) ACTUAL_DISCOUNT_DOLLAR
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_NM_ACTUAL_PPA
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND CASE 
			WHEN @VAR = 1
				THEN CONVERT(VARCHAR(100), NMDP.RS_CONTRACT_SID)
			ELSE 'Price Protection'
			END = PRD.DISCOUNT
	JOIN NM_ACTUAL_PPA NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING   SUPLEMTNAL PROJECTED   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_M_SUPPLEMENTAL_DISC_PROJ') IS NOT NULL
		DROP TABLE #PRIOR_M_SUPPLEMENTAL_DISC_PROJ

	SELECT ISNULL(Sum(NSP.PROJECTION_SALES), 0) PROJECTION_SALES
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_M_SUPPLEMENTAL_DISC_PROJ
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_SUPPLEMENTAL_DISC_PROJ NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING   SUPLEMTNAL PROJECTED   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS') IS NOT NULL
		DROP TABLE #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS

	SELECT Sum(NSP.ACTUAL_SALES) ACTUAL_SALES
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_SUPPLEMENTAL_DISC_ACTUALS NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING   SUPLEMTNAL ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_M_DISCOUNT_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_M_DISCOUNT_PROJECTION

	SELECT Sum(NMDP.PROJECTION_SALES) PROJECTION_SALES
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_M_DISCOUNT_PROJECTION
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN M_DISCOUNT_PROJECTION NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NMDP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING   MANDTED DISCOUNT ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_M_ACTUAL_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_M_ACTUAL_DISCOUNT

	SELECT Sum(NMDP.ACTUAL_SALES) ACTUAL_SALES
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_M_ACTUAL_DISCOUNT
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN M_ACTUAL_DISCOUNT NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NMDP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
		AND PRD.DISCOUNT = A.DISCOUNT)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING   MANDTED DISCOUNT PROJECTED   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_NM_SALES_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_SALES_PROJECTION

	SELECT Sum(PROJECTION_SALES) PROJECTION_SALES
		,Sum(PROJECTION_UNITS) PROJECTION_UNITS
		,Sum(PROJECTION_SALES * U.ITEM_PRICE) AS NM_COGS_PROJECTED
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_NM_SALES_PROJECTION
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM #PRIOR_SALES_INFORMATION A WHERE A.PROJECTION_DETAILS_SID=PRD.PROJECTION_DETAILS_SID
			AND A.CFF_MASTER_SID = PRD.CFF_MASTER_SID)
			AND EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

		

	-----------------------PULLING  NON  MANDTED SALES ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_NM_ACTUAL_SALES') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_SALES

	SELECT Sum(ACTUAL_SALES) ACTUAL_SALES
		,Sum(ACTUAL_UNITS) ACTUAL_UNITS
		,Sum(ACTUAL_SALES * U.ITEM_PRICE) AS NM_COGS_ACTUAL
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_NM_ACTUAL_SALES
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM #PRIOR_SALES_INFORMATION A WHERE A.PROJECTION_DETAILS_SID=PRD.PROJECTION_DETAILS_SID
			AND A.CFF_MASTER_SID = PRD.CFF_MASTER_SID)
			AND EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING  NON  MANDTED SALES PROJETED   INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_M_SALES_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_M_SALES_PROJECTION

	SELECT Sum(PROJECTION_SALES) PROJECTION_SALES
		,Sum(PROJECTION_UNITS) PROJECTION_UNITS
		,Sum(PROJECTION_SALES * U.ITEM_PRICE) AS M_COGS_PROJECTED
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_M_SALES_PROJECTION
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM #PRIOR_SALES_INFORMATION A WHERE A.PROJECTION_DETAILS_SID=PRD.PROJECTION_DETAILS_SID
			AND A.CFF_MASTER_SID = PRD.CFF_MASTER_SID)
			AND EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING   MANDTED SALES PROJETIONS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_ACTUAL_SALES') IS NOT NULL
		DROP TABLE #PRIOR_M_ACTUAL_SALES

	SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
		,SUM(ACTUAL_UNITS) ACTUAL_UNITS
		,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS M_COGS_ACTUAL
		,PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID
	INTO #PRIOR_M_ACTUAL_SALES
	FROM #PRIOR_RS_DATA_PERIOD PRD
	JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	WHERE EXISTS (SELECT 1 FROM #PRIOR_SALES_INFORMATION A WHERE A.PROJECTION_DETAILS_SID=PRD.PROJECTION_DETAILS_SID
			AND A.CFF_MASTER_SID = PRD.CFF_MASTER_SID)
			AND EXISTS (SELECT 1 FROM  #PRIOR_DISC_INFORMATION A WHERE  A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND PRD.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID)
	GROUP BY PERIOD
		,YEAR
		,PRD.DISCOUNT
		,PRD.CFF_MASTER_SID

	-----------------------PULLING    MANDTED AND NON MANDATED SALES ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_SALES') IS NOT NULL
		DROP TABLE #PRIOR_SALES

	SELECT FD.YEAR
		,FD.PERIOD
		,FD.CFF_MASTER_SID
		,FD.DISCOUNT
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_SALES), 0) + COALESCE((MSP.PROJECTION_SALES), 0)
			END AS PROJECTION_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_UNITS), 0) + COALESCE((MSP.PROJECTION_UNITS), 0)
			END AS PROJECTION_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_SALES), 0) + COALESCE((MAS.ACTUAL_SALES), 0)
			END AS ACTUAL_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_UNITS), 0) + COALESCE((MAS.ACTUAL_UNITS), 0)
			END AS ACTUAL_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MSP.M_COGS_PROJECTED), 0) + COALESCE((NSP.NM_COGS_PROJECTED), 0)
			END AS COGS_PROJECTED
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MAS.M_COGS_ACTUAL), 0) + COALESCE((NAS.NM_COGS_ACTUAL), 0)
			END AS COGS_ACTUAL
		,
		--RETURNS_ACTUALS = CASE
		--                    WHEN DEDUCTION_INC = 0 THEN NULL
		--                    ELSE RETURNS_ACTUALS
		--                  END,
		--RETURNS_PROJECTED = CASE
		--                      WHEN DEDUCTION_INC = 0 THEN NULL
		--                      ELSE RETURNS_PROJECTED
		--                    END,
		--ACTUAL_RATE = ( CASE
		--                  WHEN @SALES_INC = 0
		--                        OR @DEDUCTION_INC = 0 THEN NULL
		--                  ELSE ISNULL(( RETURNS_ACTUALS / NULLIF(COALESCE((NAS.ACTUAL_SALES), 0)
		--                                                         + COALESCE((MAS.ACTUAL_SALES), 0), 0) ), 0)
		--                END ),
		--PROJECTED_RATE = ( CASE
		--                     WHEN @SALES_INC = 0
		--                           OR @DEDUCTION_INC = 0 THEN NULL
		--                     ELSE ISNULL(( RETURNS_PROJECTED / NULLIF(COALESCE((NSP.PROJECTION_SALES), 0)
		--                                                              + COALESCE((MSP.PROJECTION_SALES), 0), 0) ), 0)
		--                   END ),
		CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_SALES), 0)
			END AS NM_ACTUAL_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_SALES), 0)
			END AS NM_PROJECTED_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_UNITS), 0)
			END AS NM_ACTUAL_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_UNITS), 0)
			END AS NM_PROJECTED_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MAS.ACTUAL_SALES), 0)
			END AS M_ACTUAL_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MSP.PROJECTION_SALES), 0)
			END AS M_PROJECTED_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MAS.ACTUAL_UNITS), 0)
			END AS M_ACTUAL_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MSP.PROJECTION_UNITS), 0)
			END AS M_PROJECTED_UNITS
	INTO #PRIOR_SALES
	FROM (
		SELECT DISTINCT CFF_MASTER_SID
			,YEAR
			,PERIOD
			,DISCOUNT
		FROM #PRIOR_RS_DATA_PERIOD
		) FD
	JOIN #PRIOR_INCLUSION PI ON PI.CFF_PROJECTION_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_NM_SALES_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND NSP.DISCOUNT = FD.DISCOUNT
	LEFT JOIN #PRIOR_M_SALES_PROJECTION MSP ON MSP.YEAR = FD.YEAR
		AND MSP.PERIOD = FD.PERIOD
		AND MSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MSP.DISCOUNT = FD.DISCOUNT
	LEFT JOIN #PRIOR_NM_ACTUAL_SALES NAS ON NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD
		AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND NAS.DISCOUNT = FD.DISCOUNT
	LEFT JOIN #PRIOR_M_ACTUAL_SALES MAS ON MAS.YEAR = FD.YEAR
		AND MAS.PERIOD = FD.PERIOD
		AND MAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MAS.DISCOUNT = FD.DISCOUNT

	-----------------------PULLING    NON MANDATED DISCOUNT OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_DISCOUNT

	SELECT FD.YEAR
		,FD.PERIOD
		,COALESCE((NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
		,COALESCE((NAD.ACTUAL_SALES), 0) AS ACTUAL_SALES
		,FD.CFF_MASTER_SID
		,FD.DISCOUNT AS RS_NAME
	INTO #PRIOR_DISCOUNT
	FROM (
		SELECT DISTINCT CFF_MASTER_SID
			,YEAR
			,PERIOD
			,DISCOUNT
			,NM_PPA_IND
		FROM #PRIOR_RS_DATA_PERIOD
		) FD
	LEFT JOIN #PRIOR_NM_DISCOUNT_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND NSP.DISCOUNT = FD.DISCOUNT
		AND FD.CFF_MASTER_SID = NSP.CFF_MASTER_SID
	LEFT JOIN #PRIOR_NM_ACTUAL_DISCOUNT NAD ON NAD.YEAR = FD.YEAR
		AND NAD.PERIOD = FD.PERIOD
		AND FD.CFF_MASTER_SID = NAD.CFF_MASTER_SID
		AND NAD.DISCOUNT = FD.DISCOUNT
	WHERE EXISTS (
			SELECT 1
			FROM #PRIOR_DISC_INFORMATION C
			WHERE  C.CFF_MASTER_SID = FD.CFF_MASTER_SID
				AND C.DISCOUNT = FD.DISCOUNT
			)
		AND FD.NM_PPA_IND = 'NM'

	-----------------------PULLING    PPA   OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_PPA') IS NOT NULL
		DROP TABLE #PRIOR_PPA

	SELECT FD.YEAR
		,FD.PERIOD
		,fd.discount
		,FD.CFF_MASTER_SID
		,COALESCE((NSP.PROJECTION_DISCOUNT_DOLLAR), 0) AS PPA_DISCOUNT_PROJECTED
		,COALESCE((NAS.ACTUAL_DISCOUNT_DOLLAR), 0) AS PPA_ACTUAL_SALES
	INTO #PRIOR_PPA
	FROM (
		SELECT DISTINCT CFF_MASTER_SID
			,YEAR
			,PERIOD
			,DISCOUNT
			,NM_PPA_IND
		FROM #PRIOR_RS_DATA_PERIOD
		) FD
	LEFT JOIN #PRIOR_NM_PPA_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND NSP.DISCOUNT = FD.DISCOUNT
	LEFT JOIN #PRIOR_NM_ACTUAL_PPA NAS ON NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD
		AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND NAS.DISCOUNT = FD.DISCOUNT
	WHERE FD.NM_PPA_IND = 'PPA'

	-----------------------PULLING    SUPPLEMENTAL   OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------
	IF Object_id('TEMPDB..#PRIOR_PPA_SUPP_MANDATED') IS NOT NULL
		DROP TABLE #PRIOR_PPA_SUPP_MANDATED

	SELECT FD.YEAR
		,FD.PERIOD
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((SDP.PROJECTION_SALES), 0)
			END AS SUPPLEMENTAL_DISCOUNT_PROJECTED
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((MDP.PROJECTION_SALES), 0)
			END AS MANDATED_DISCOUNT_PROJECTED
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((SDA.ACTUAL_SALES), 0)
			END AS SUPPLEMENTAL_DISCOUNT_ACTUALS
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((MAD.ACTUAL_SALES), 0)
			END AS MANDATED_DISCOUNT_ACTUALS
		,FD.CFF_MASTER_SID
		,FD.DISCOUNT
	INTO #PRIOR_PPA_SUPP_MANDATED
	FROM (
		SELECT DISTINCT CFF_MASTER_SID
			,YEAR
			,PERIOD
			,DISCOUNT
		FROM #PRIOR_RS_DATA_PERIOD
		) FD
	JOIN #PRIOR_INCLUSION PI ON PI.CFF_PROJECTION_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_M_SUPPLEMENTAL_DISC_PROJ SDP ON SDP.YEAR = FD.YEAR
		AND SDP.PERIOD = FD.PERIOD
		AND SDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND SDP.DISCOUNT = FD.DISCOUNT
	LEFT JOIN #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS SDA ON SDA.YEAR = FD.YEAR
		AND SDA.PERIOD = FD.PERIOD
		AND SDA.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND SDA.DISCOUNT = FD.DISCOUNT
	LEFT JOIN #PRIOR_M_DISCOUNT_PROJECTION MDP ON MDP.YEAR = FD.YEAR
		AND MDP.PERIOD = FD.PERIOD
		AND MDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MDP.DISCOUNT = FD.DISCOUNT
	LEFT JOIN #PRIOR_M_ACTUAL_DISCOUNT MAD ON MAD.YEAR = FD.YEAR
		AND MAD.PERIOD = FD.PERIOD
		AND MAD.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MAD.DISCOUNT = FD.DISCOUNT;


		IF OBJECT_ID('TEMPDB..#PRODUCT_FILE_DATA') IS NOT NULL
	DROP TABLE #PRODUCT_FILE_DATA

SELECT P.YEAR
	,P.PERIOD
	,SUM(EX_FACTORY_SALES_ACTUALS) AS EX_FACTORY_SALES_ACTUALS
	,SUM(EX_FACTORY_SALES_PROJ) AS EX_FACTORY_SALES_PROJ
	,SUM(DEMAND_SALES_ACTUALS) AS DEMAND_SALES_ACTUALS
	,SUM(DEMAND_SALES_PROJ) AS DEMAND_SALES_PROJ
	,SUM(ADJUSTED_DEMAND_ACTUALS) AS ADJUSTED_DEMAND_ACTUALS
	,SUM(ADJUSTED_DEMAND_PROJ) AS ADJUSTED_DEMAND_PROJ
	,SUM(IW_MASTER_ACTUALS) AS IW_MASTER_ACTUALS
	,SUM(IW_MASTER_PROJ) AS IW_MASTER_PROJ
	,CF.CFF_MASTER_SID AS CFF_MASTER_SID
INTO #PRIOR_PRODUCT_FILE_DATA
FROM CFF_PRODUCT_LEVEL_FILES_DATA CF
			 JOIN (SELECT DISTINCT CFF_MASTER_SID,ITEM_MASTER_SID FROM #PRIOR_TEMP_CCP) B
			 ON CF.CFF_MASTER_SID=B.CFF_MASTER_SID
			 AND CF.ITEM_MASTER_SID=B.ITEM_MASTER_SID
	INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
GROUP BY P.YEAR
	,P.PERIOD
	,CF.CFF_MASTER_SID

	---------------IT WILL INSERT ONLY  NON MANDATED VALUES INTO RESULT TABLE   -----------------
	IF EXISTS (
			SELECT 1
			FROM #PRIOR_CPP_INFO
			WHERE FORECASTING_TYPE = 'NON MANDATED'
			)
	BEGIN
		IF @VAR = 1
		BEGIN
			INSERT INTO #RESULT (
				CFF_PROJECTION_MASTER_SID
				,YEAR
				,PERIOD
				,RS_NAME
				,TOTAL_DISCOUNT
				,TOTAL_DISCOUNT_PROJECTED
				,TOTAL_DISCOUNT_PERCENTAGE
				,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
				,TOTAL_RPU
				,TOTAL_PROJECTED_RPU
				,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT
				,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT
				)
			--SELECT @FIRST_PROJ_SID                 CFF_PROJECTION_MASTER_SID,
			--       YEAR,
			--       PERIOD,
			--       RD.RS_NAME,
			--       ISNULL(RETURNS_ACTUALS, 0)      TOTAL_DISCOUNT,
			--       ISNULL(RETURNS_PROJECTED, 0)    TOTAL_DISCOUNT_PROJECTED,
			--       ISNULL(ACTUAL_RATE, 0) * 100    TOTAL_DISCOUNT_PERCENTAGE,
			--       ISNULL(PROJECTED_RATE, 0) * 100 TOTAL_DISCOUNT_PROJECTED_PERCENTAGE,
			--       ISNULL(CASE
			--                WHEN @SALES_INC = 0
			--                      OR @DEDUCTION_INC = 0 THEN NULL
			--                ELSE COALESCE(RETURNS_ACTUALS / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
			--              END, 0)                  TOTAL_RPU,
			--       ISNULL(CASE
			--                WHEN @SALES_INC = 0
			--                      OR @DEDUCTION_INC = 0 THEN NULL
			--                ELSE COALESCE(RETURNS_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
			--              END, 0)                  TOTAL_PROJECTED_RPU
			--FROM   #PRIOR_SALES RD
			--UNION ALL
			SELECT RD.CFF_MASTER_SID
				,ND.YEAR
				,ND.PERIOD
				,RC.RS_NAME AS RS_NAME
				,ISNULL(ND.ACTUAL_SALES, 0)
				,ISNULL(ND.PROJECTION_SALES, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
						END, 0)
				,COALESCE(ISNULL(ND.ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
				,COALESCE(ISNULL(ND.PROJECTION_SALES, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
			FROM #PRIOR_DISCOUNT ND
			JOIN #PRIOR_SALES RD ON RD.YEAR = ND.YEAR
				AND RD.PERIOD = ND.PERIOD
				AND RD.DISCOUNT = ND.RS_NAME
				AND RD.CFF_MASTER_SID = ND.CFF_MASTER_SID
			JOIN #PRIOR_PRODUCT_FILE_DATA PFD ON PFD.YEAR = ND.YEAR
				AND PFD.PERIOD = ND.PERIOD
				AND PFD.CFF_MASTER_SID = ND.CFF_MASTER_SID
			JOIN RS_CONTRACT RC ON RS_CONTRACT_SID = ND.RS_NAME
			
			UNION ALL
			
			SELECT PD.CFF_MASTER_SID
				,PD.YEAR
				,PD.PERIOD
				,RC.RS_NAME AS DISCOUNT
				,ISNULL(PD.PPA_ACTUAL_SALES, 0)
				,ISNULL(PD.PPA_DISCOUNT_PROJECTED, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
						END, 0)
				,COALESCE(ISNULL(PD.PPA_ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
				,COALESCE(ISNULL(PD.PPA_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
			---  FROM   #PPA_SUPP_MANDATED PD
			FROM #PRIOR_PPA PD
			JOIN #PRIOR_SALES RD ON RD.YEAR = PD.YEAR
				AND RD.PERIOD = PD.PERIOD
				AND RD.DISCOUNT = PD.DISCOUNT
				AND RD.CFF_MASTER_SID = PD.CFF_MASTER_SID
			JOIN #PRIOR_PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
				AND PFD.PERIOD = RD.PERIOD
				AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
			JOIN RS_CONTRACT RC ON RS_CONTRACT_SID = PD.DISCOUNT
		END
		ELSE
		BEGIN
			INSERT INTO #RESULT (
				CFF_PROJECTION_MASTER_SID
				,YEAR
				,PERIOD
				,RS_NAME
				,TOTAL_DISCOUNT
				,TOTAL_DISCOUNT_PROJECTED
				,TOTAL_DISCOUNT_PERCENTAGE
				,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
				,TOTAL_RPU
				,TOTAL_PROJECTED_RPU
				,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT
				,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT
				)
			--SELECT @FIRST_PROJ_SID                 CFF_PROJECTION_MASTER_SID,
			--       YEAR,
			--       PERIOD,
			--       RD.RS_NAME,
			--       ISNULL(RETURNS_ACTUALS, 0)      TOTAL_DISCOUNT,
			--       ISNULL(RETURNS_PROJECTED, 0)    TOTAL_DISCOUNT_PROJECTED,
			--       ISNULL(ACTUAL_RATE, 0) * 100    TOTAL_DISCOUNT_PERCENTAGE,
			--       ISNULL(PROJECTED_RATE, 0) * 100 TOTAL_DISCOUNT_PROJECTED_PERCENTAGE,
			--       ISNULL(CASE
			--                WHEN @SALES_INC = 0
			--                      OR @DEDUCTION_INC = 0 THEN NULL
			--                ELSE COALESCE(RETURNS_ACTUALS / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
			--              END, 0)                  TOTAL_RPU,
			--       ISNULL(CASE
			--                WHEN @SALES_INC = 0
			--                      OR @DEDUCTION_INC = 0 THEN NULL
			--                ELSE COALESCE(RETURNS_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
			--              END, 0)                  TOTAL_PROJECTED_RPU
			--FROM   #PRIOR_SALES RD
			--UNION ALL
			SELECT RD.CFF_MASTER_SID
				,ND.YEAR
				,ND.PERIOD
				,ND.RS_NAME AS RS_NAME
				,ISNULL(ND.ACTUAL_SALES, 0)
				,ISNULL(ND.PROJECTION_SALES, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
						END, 0)
				,COALESCE(ISNULL(ND.ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
				,COALESCE(ISNULL(ND.PROJECTION_SALES, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
			FROM #PRIOR_DISCOUNT ND
			JOIN #PRIOR_SALES RD ON RD.YEAR = ND.YEAR
				AND RD.PERIOD = ND.PERIOD
				AND RD.DISCOUNT = ND.RS_NAME
				AND RD.CFF_MASTER_SID = ND.CFF_MASTER_SID
			JOIN #PRIOR_PRODUCT_FILE_DATA PFD ON PFD.YEAR = ND.YEAR
				AND PFD.PERIOD = ND.PERIOD
				AND PFD.CFF_MASTER_SID = ND.CFF_MASTER_SID
			
			UNION ALL
			
			SELECT PD.CFF_MASTER_SID
				,PD.YEAR
				,PD.PERIOD
				,PD.DISCOUNT
				,ISNULL(PD.PPA_ACTUAL_SALES, 0)
				,ISNULL(PD.PPA_DISCOUNT_PROJECTED, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
						END, 0)
				,ISNULL(CASE 
						WHEN @SALES_INC = 0
							OR @DEDUCTION_INC = 0
							THEN NULL
						ELSE COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
						END, 0)
				,COALESCE(ISNULL(PD.PPA_ACTUAL_SALES, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
				,COALESCE(ISNULL(PD.PPA_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
			FROM #PRIOR_PPA PD
			JOIN #PRIOR_SALES RD ON RD.YEAR = PD.YEAR
				AND RD.PERIOD = PD.PERIOD
				AND RD.DISCOUNT = PD.DISCOUNT
				AND RD.CFF_MASTER_SID = PD.CFF_MASTER_SID
			JOIN #PRIOR_PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
				AND PFD.PERIOD = RD.PERIOD
				AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
		END
	END

	---------------IT WILL INSERT ONLY   MANDATED VALUES INTO RESULT TABLE   -----------------
	IF EXISTS (
			SELECT 1
			FROM #PRIOR_CPP_INFO
			WHERE forecasting_type = 'mandated'
			)
	BEGIN
		INSERT INTO #RESULT (
			CFF_PROJECTION_MASTER_SID
			,YEAR
			,PERIOD
			,RS_NAME
			,TOTAL_DISCOUNT
			,TOTAL_DISCOUNT_PROJECTED
			,TOTAL_DISCOUNT_PERCENTAGE
			,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
			,TOTAL_RPU
			,TOTAL_PROJECTED_RPU
			,DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT
			,DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT
			)
		SELECT MD.CFF_MASTER_SID CFF_PROJECTION_MASTER_SID
			,MD.YEAR
			,MD.PERIOD
			,'MANDATED' AS RS_NAME
			,Isnull(MD.MANDATED_DISCOUNT_ACTUALS, 0) TOTAL_DISCOUNT
			,Isnull(MD.MANDATED_DISCOUNT_PROJECTED, 0) TOTAL_DISCOUNT_PROJECTED
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(MD.MANDATED_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_SALES, 0), 0) * 100
					END, 0) TOTAL_DISCOUNT_PERCENTAGE
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(MD.MANDATED_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_SALES, 0), 0) * 100
					END, 0) TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(MD.MANDATED_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_UNITS, 0), 0)
					END, 0) TOTAL_RPU
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(MD.MANDATED_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_UNITS, 0), 0)
					END, 0) TOTAL_PROJECTED_RPU
			,COALESCE(Isnull(MD.MANDATED_DISCOUNT_ACTUALS, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
			,COALESCE(Isnull(MD.MANDATED_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
		FROM #PRIOR_PPA_SUPP_MANDATED MD
		JOIN #PRIOR_SALES RD ON RD.YEAR = MD.YEAR
			AND RD.PERIOD = MD.PERIOD
			AND RD.CFF_MASTER_SID = MD.CFF_MASTER_SID
			AND RD.DISCOUNT = MD.DISCOUNT
		JOIN #PRIOR_PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
			AND PFD.PERIOD = RD.PERIOD
			AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
		
		UNION ALL
		
		SELECT SD.CFF_MASTER_SID
			,SD.YEAR
			,SD.PERIOD
			,'SUPPLEMENTAL'
			,Isnull(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS, 0)
			,Isnull(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_SALES, 0), 0) * 100
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_SALES, 0), 0) * 100
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS / NULLIF(RD.M_ACTUAL_UNITS, 0), 0)
					END, 0)
			,Isnull(CASE 
					WHEN @SALES_INC = 0
						OR @DEDUCTION_INC = 0
						THEN NULL
					ELSE COALESCE(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED / NULLIF(RD.M_PROJECTED_UNITS, 0), 0)
					END, 0)
			,COALESCE(Isnull(SD.SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) / NULLIF(EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
			,COALESCE(Isnull(SD.SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) / NULLIF(EX_FACTORY_SALES_PROJ, 0), 0) * 100
		FROM #PRIOR_PPA_SUPP_MANDATED SD
		JOIN #PRIOR_SALES RD ON RD.YEAR = SD.YEAR
			AND RD.PERIOD = SD.PERIOD
			AND RD.CFF_MASTER_SID = SD.CFF_MASTER_SID
			AND RD.DISCOUNT = SD.DISCOUNT
		JOIN #PRIOR_PRODUCT_FILE_DATA PFD ON PFD.YEAR = RD.YEAR
			AND PFD.PERIOD = RD.PERIOD
			AND PFD.CFF_MASTER_SID = RD.CFF_MASTER_SID
	END

	------------- OUTPUT WE NEED SHOE IN PIVOT VIEW
	DECLARE @SQL NVARCHAR(MAX)
		,@LOOP_CNTR INT
		,@MAX_CCP INT

	SET @SQL = 'SELECT [YEAR],PERIOD,RS_NAME, '
	SET @LOOP_CNTR = 1
	SET @MAX_CCP = (
			SELECT Max(ID)
			FROM #CFF_PROJECTION_MASTER
			)

	WHILE @LOOP_CNTR <= @MAX_CCP
	BEGIN
		SET @SQL += 'TOTAL_DISCOUNT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT END),
TOTAL_DISCOUNT_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_PROJECTED END),
TOTAL_DISCOUNT_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_PERCENTAGE END),

TOTAL_DISCOUNT_PROJECTED_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_PROJECTED_PERCENTAGE END),
TOTAL_RPU_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_RPU END),  
TOTAL_PROJECTED_RPU_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_PROJECTED_RPU END),
DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(
				@LOOP_CNTR AS VARCHAR(10)) + ' THEN DISCOUNT_OF_EX_FACTORY_ACTUALS_PERCENT END), 
DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN DISCOUNT_OF_EX_FACTORY_PROJECTED_PERCENT END), '
		SET @LOOP_CNTR += 1
	END

	SET @SQL = LEFT(@SQL, Len(@SQL) - 1)
	SET @SQL += ' FROM   #RESULT PR
                                  INNER JOIN #CFF_PROJECTION_MASTER PM
                                  ON PR.CFF_PROJECTION_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
                                  GROUP  BY [YEAR],PERIOD,RS_NAME
                                  ORDER BY ' + CASE 
			WHEN @ORDER = 'EXCEL'
				THEN 'RS_NAME,'
			ELSE ''
			END + 'YEAR,PERIOD'

	EXEC sp_executesql @SQL
END
		
GO