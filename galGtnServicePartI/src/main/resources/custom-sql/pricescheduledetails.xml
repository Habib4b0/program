<?xml version="1.0" encoding="UTF-8"?>

<custom-sql>
    <sql
        id="com.global.priceschedule.service.persistence.PriceScheduleDetailsFinder.findItemDetails">
		<![CDATA[
			select com_itemmaster.itemsystemid,
			com_itemmaster.itemno,
com_itemmaster.itemname 
from com_itemmaster 
		]]>
    </sql>

    <sql
        id="com.global.priceschedule.service.persistence.PriceScheduleDetailsFinder.deletePsDetails">
		<![CDATA[                           
		delete from com_pricescheduledetails
		]]>
    </sql>
    <sql
        id="com.global.priceschedule.service.persistence.PriceScheduleDetailsFinder.findPsDetails">
		<![CDATA[			
		select IFM.ifpNo,IM.itemMasterSid,PSD.itemPricingQualifierSid,PSD.priceTolerance,PSD.priceToleranceType,
		PSD.priceToleranceInterval,PSD.priceToleranceFrequency,PSD.priceProtectionStartDate,PSD.priceProtectionEndDate,
 		PSD.basePrice, PSD.psModelSid, IFM.ifpModelSid, PSD.contractPrice,
		PSD.contractPriceStartDate,PSD.contractPriceEndDate,IM.itemNo,IM.itemName, PSD.itemPsAttachedDate,IM.itemId,PSD.price,PSD.revisionDate
			from
		PsDetails PSD, IfpModel IFM, ItemMaster IM
		WHERE 
		PSD.ifpModelSid = IFM.ifpModelSid
		AND
		 PSD.itemMasterSid = IM.itemMasterSid
		]]>
    </sql>
    <sql id="insertTempPSDetailsAdd">
		<![CDATA[			
		          INSERT INTO dbo.Imtd_Ps_Details (item_Master_Sid,item_Id,item_No,
item_Name,ifp_Model_Sid,ifp_No,ps_Details_Attached_Date, BRAND_MASTER_SID, ps_Details_Pricetype,ps_Details_Price,ps_Details_Created_By,ps_Details_Created_Date,created_Date,check_Record,session_Id,users_Sid,operation,ps_Model_Sid)
select IM.item_Master_Sid,IM.item_Id,IM.item_No,IM.item_Name,IFD.ifp_Model_Sid, IFM.ifp_No, IFD.Item_Ifp_Attached_Date, IM.BRAND_MASTER_SID 
]]>
        <!--PriceScheduleSystemId,PriceScheduleDetailsSystemId,ContractSystemId,CompanyFamilyPlanSystemID,ItemSystemId,ItemId,ItemNo,
        ItemName,ItemFamilyPlanSystemId,ItemFamilyPlanNo,PSDetailsPrice,PSDetailsPriceType,PSDetailsPriceTolerance,PSDetailsPriceToleranceType,PSDetailsPricePrortectionStartDate,PSDetailsPricePrortectionEndDate,PSDetailsContractPrice,PSDetailsContractPriceStartDate,PSDetailsContractPriceEndDate,PSDetailsPriceToleranceInterval,PSDetailsPriceToleranceFrequency,PSDetailsBasePrice,PSDetailsRevisionDate,TempCreatedDate,CheckRecord,SessionId,UserId,Operation-->
    </sql>
    <sql id="updatePSDetailsAttched">
		<![CDATA[			
		       
 INSERT INTO dbo.Ps_Details (item_Master_Sid,contract_Price_Start_Date,contract_Price_End_Date,item_Pricing_Qualifier_Sid,contract_Price,
price_Protection_Start_Date,price_Protection_End_Date,price_Tolerance_Type,price_Tolerance,base_Price,price_Tolerance_Frequency,price_Tolerance_Interval,
ifp_Model_Sid,price, item_Ps_Attached_Status,item_Ps_Attached_Date,
status,PRICE_PROTECTION_STATUS,PRICE_PROTECTION_PRICE_TYPE, NEP,NEP_FORMULA, MAX_INCREMENTAL_CHANGE,RESET_ELIGIBLE,RESET_TYPE,RESET_DATE,RESET_INTERVAL,RESET_FREQUENCY,
NET_PRICE_TYPE,NET_PRICE_TYPE_FORMULA,BRAND_MASTER_SID,suggested_Price,BASE_PRICE_TYPE,BASE_PRICE_ENTRY,BASE_PRICE_DATE,NET_BASE_PRICE,BASE_PRICE_DDLB,SUBSEQUENT_PERIOD_PRICE_TYPE,
NET_SUBSEQUENT_PERIOD_PRICE,NET_SUBSEQUENT_PRICE_FORMULA_ID,RESET_PRICE_TYPE,NET_RESET_PRICE_TYPE,NET_RESET_PRICE_FORMULA_ID,NET_BASE_PRICE_FORMULA_ID,
created_By,created_Date,modified_By,modified_Date,ps_Model_Sid,inbound_Status,record_Lock_Status)
select nullif(ITEM_MASTER_SID,0),ps_Dtls_Cont_Price_Startdate,ps_Dtls_Cont_Price_Enddate,case when ps_Details_Pricetype = 0 then NULL else ps_Details_Pricetype end,
ps_Details_Contract_Price,ps_Details_Pric_Prtcn_Stdate,ps_Details_Pric_Prtcn_Eddate,ps_Dtls_Price_Tolerance_Type,ps_Details_Price_Tolerance,
ps_Details_Base_Price,ps_Dtls_Price_Tolerance_Freq,ps_Dtls_Price_Tolerance_Intrvl,nullif(IFP_MODEL_SID,0),ps_Details_Price,ps_Details_Attached_Status,ps_Details_Attached_Date,
status,PRICE_PROTECTION_STATUS,PRICE_PROTECTION_PRICE_TYPE, NEP,NEP_FORMULA, MAX_INCREMENTAL_CHANGE,RESET_ELIGIBLE,RESET_TYPE,RESET_DATE,RESET_INTERVAL,RESET_FREQUENCY,
NET_PRICE_TYPE,nullif(NET_PRICE_TYPE_FORMULA,0),nullif(BRAND_MASTER_SID,0),ps_Details_Suggested_Price,BASE_PRICE_TYPE,BASE_PRICE_ENTRY,BASE_PRICE_DATE,NET_BASE_PRICE,BASE_PRICE_DDLB,
SUBSEQUENT_PERIOD_PRICE_TYPE,NET_SUBSEQUENT_PERIOD_PRICE,NET_SUBSEQUENT_PRICE_FORMULA_ID,RESET_PRICE_TYPE,NET_RESET_PRICE_TYPE,NET_RESET_PRICE_FORMULA_ID,NET_BASE_PRICE_FORMULA_ID
		]]>
    </sql>
    <sql id="insertTempPSDetailsEdit">
		<![CDATA[			
	INSERT INTO dbo.Imtd_Ps_Details (ps_Model_Sid,ps_Details_Sid,item_Master_Sid,item_Id,item_No,item_Name,ifp_Model_Sid,ifp_No,ps_Details_Price,ps_Details_Pricetype,
ps_Details_Price_Tolerance,ps_Dtls_Price_Tolerance_Type,ps_Dtls_Price_Tolerance_Intrvl,ps_Dtls_Price_Tolerance_Freq,
ps_Details_Pric_Prtcn_Stdate,ps_Details_Pric_Prtcn_Eddate,ps_Details_Base_Price,ps_Details_Contract_Price,ps_Dtls_Cont_Price_Startdate,ps_Dtls_Cont_Price_Enddate,ps_Details_Revision_Date,
ps_Details_Attached_Date,ps_Details_Attached_Status,ps_Details_Created_Date,ps_Details_Created_By,
status,PRICE_PROTECTION_STATUS,PRICE_PROTECTION_PRICE_TYPE,NEP,NEP_FORMULA, MAX_INCREMENTAL_CHANGE,RESET_ELIGIBLE,RESET_TYPE,RESET_DATE,RESET_INTERVAL,RESET_FREQUENCY,
NET_PRICE_TYPE,NET_PRICE_TYPE_FORMULA,BRAND_MASTER_SID,ps_Details_Suggested_Price,BASE_PRICE_TYPE,BASE_PRICE_ENTRY,BASE_PRICE_DATE,NET_BASE_PRICE,BASE_PRICE_DDLB,SUBSEQUENT_PERIOD_PRICE_TYPE,
NET_SUBSEQUENT_PERIOD_PRICE,NET_SUBSEQUENT_PRICE_FORMULA_ID,RESET_PRICE_TYPE,NET_RESET_PRICE_TYPE,NET_RESET_PRICE_FORMULA_ID,NET_BASE_PRICE_FORMULA_ID,
users_Sid,session_Id,created_Date,check_Record,operation)
select PSD.ps_Model_Sid,PSD.ps_Details_Sid,IM.item_Master_Sid,IM.item_Id,IM.item_No,IM.item_Name,PSD.ifp_Model_Sid, IFM.ifp_No,PSD.price,PSD.item_Pricing_Qualifier_Sid,
PSD.price_Tolerance,PSD.price_Tolerance_Type,PSD.price_Tolerance_Interval,PSD.price_Tolerance_Frequency,
PSD.price_Protection_Start_Date,PSD.price_Protection_End_Date,PSD.base_Price,PSD.contract_Price,PSD.contract_Price_Start_Date,PSD.contract_Price_End_Date,PSD.revision_Date,
PSD.item_Ps_Attached_Date,PSD.item_Ps_Attached_Status,PSD.created_Date,PSD.created_By,
PSD.status,PSD.PRICE_PROTECTION_STATUS,PSD.PRICE_PROTECTION_PRICE_TYPE,PSD.NEP,PSD.NEP_FORMULA, PSD.MAX_INCREMENTAL_CHANGE,PSD.RESET_ELIGIBLE,PSD.RESET_TYPE,PSD.RESET_DATE,PSD.RESET_INTERVAL,PSD.RESET_FREQUENCY,
PSD.NET_PRICE_TYPE,PSD.NET_PRICE_TYPE_FORMULA,PSD.BRAND_MASTER_SID,suggested_Price,BASE_PRICE_TYPE,BASE_PRICE_ENTRY,BASE_PRICE_DATE,NET_BASE_PRICE,BASE_PRICE_DDLB,
SUBSEQUENT_PERIOD_PRICE_TYPE,NET_SUBSEQUENT_PERIOD_PRICE,NET_SUBSEQUENT_PRICE_FORMULA_ID,RESET_PRICE_TYPE,NET_RESET_PRICE_TYPE,NET_RESET_PRICE_FORMULA_ID,NET_BASE_PRICE_FORMULA_ID,

		]]>
    </sql>        
        
        
    <sql id = "softDeleteUncheckedItems1">
        <![CDATA[            
            UPDATE b set b.inbound_Status='D'
        ]]>
    </sql>

    <sql id = "softDeleteUncheckedItems2">
        <![CDATA[            
            FROM   Ps_Details b
            WHERE  NOT EXISTS (SELECT 1
                   FROM   Imtd_Ps_Details a
                   WHERE  a.ps_Model_Sid = b.ps_Model_Sid
                   AND a.ifp_Model_Sid = b.ifp_Model_Sid
                   AND a.item_Master_Sid = b.item_Master_Sid
                   AND a.check_record = 1
        ]]>
    </sql>

    <sql id = "softDeleteUncheckedItems3">
        <![CDATA[           
                    )
                   AND b.inbound_Status <> 'D'        
        ]]>
    </sql>        

    <sql id = "updateCheckedItems1">
        <![CDATA[            
            UPDATE b set 
            b.price=a.ps_Details_Price
            ,b.item_Pricing_Qualifier_Sid=( CASE WHEN a.ps_Details_Pricetype <> 0 THEN a.ps_Details_Pricetype ELSE NULL END )
            ,b.contract_Price=a.ps_Details_Contract_Price
            ,b.contract_Price_Start_Date=a.ps_Dtls_Cont_Price_Startdate
            ,b.contract_Price_End_Date=a.ps_Dtls_Cont_Price_Enddate
            ,b.price_Tolerance=a.ps_Details_Price_Tolerance
            ,b.price_Protection_Start_Date=a.ps_Details_Pric_Prtcn_Stdate
            ,b.price_Protection_End_Date=a.ps_Details_Pric_Prtcn_Eddate
            ,b.price_Tolerance_Type=a.ps_Dtls_Price_Tolerance_Type
            ,b.price_Tolerance_Interval=a.ps_Dtls_Price_Tolerance_Intrvl
            ,b.price_Tolerance_Frequency=a.ps_Dtls_Price_Tolerance_Freq
            ,b.base_Price=a.ps_Details_Base_Price
            ,b.inbound_Status=a.operation
            ,b.revision_Date =a.ps_Details_Revision_Date  
            ,b.STATUS =a.STATUS   
            ,b.PRICE_PROTECTION_STATUS=a.PRICE_PROTECTION_STATUS
            ,b.PRICE_PROTECTION_PRICE_TYPE=a.PRICE_PROTECTION_PRICE_TYPE  
            ,b.NEP=a.NEP
            ,b.NEP_FORMULA=a.NEP_FORMULA
            ,b.MAX_INCREMENTAL_CHANGE=a.MAX_INCREMENTAL_CHANGE 
            ,b.RESET_ELIGIBLE=a.RESET_ELIGIBLE 
            ,b.RESET_TYPE=a.RESET_TYPE  
            ,b.RESET_DATE=a.RESET_DATE  
            ,b.RESET_INTERVAL=a.RESET_INTERVAL  
            ,b.RESET_FREQUENCY=a.RESET_FREQUENCY  
            ,b.NET_PRICE_TYPE=a.NET_PRICE_TYPE  
            ,b.NET_PRICE_TYPE_FORMULA=nullif(a.net_price_type_formula,0)
            ,b.suggested_Price=a.ps_Details_Suggested_Price
            ,b.BASE_PRICE_TYPE = a.BASE_PRICE_TYPE
            ,b.BASE_PRICE_ENTRY = a.BASE_PRICE_ENTRY
            ,b.BASE_PRICE_DATE = a.BASE_PRICE_DATE
            ,b.NET_BASE_PRICE = a.NET_BASE_PRICE
            ,b.BASE_PRICE_DDLB = a.BASE_PRICE_DDLB
            ,b.SUBSEQUENT_PERIOD_PRICE_TYPE = a.SUBSEQUENT_PERIOD_PRICE_TYPE
            ,b.NET_SUBSEQUENT_PERIOD_PRICE = a.NET_SUBSEQUENT_PERIOD_PRICE
            ,b.NET_SUBSEQUENT_PRICE_FORMULA_ID = a.NET_SUBSEQUENT_PRICE_FORMULA_ID
            ,b.RESET_PRICE_TYPE = a.RESET_PRICE_TYPE
            ,b.NET_RESET_PRICE_TYPE = a.NET_RESET_PRICE_TYPE
            ,b.NET_RESET_PRICE_FORMULA_ID = a.NET_RESET_PRICE_FORMULA_ID
            ,b.NET_BASE_PRICE_FORMULA_ID = a.NET_BASE_PRICE_FORMULA_ID
            ,b.BRAND_MASTER_SID = case when a.BRAND_MASTER_SID in('','0') then null else a.BRAND_MASTER_SID end
        ]]>
    </sql>
    <sql id = "updateCheckedItems2">
        <![CDATA[            
            from Imtd_Ps_Details a
            join Ps_Details b on
            a.ps_Model_Sid=b.ps_Model_Sid
            and a.ps_Details_Sid=b.ps_Details_Sid
            and a.ifp_Model_Sid=b.ifp_Model_Sid
            and a.item_Master_Sid=b.item_Master_Sid
            and a.check_Record=1
            and a.operation='U'
            and b.ps_Model_Sid <> 0
        ]]>
    </sql>

    <sql id = "mergeCondition">
        <![CDATA[            
            MERGE Ps_Details AS T
            USING Imtd_Ps_Details AS S
            ON (S.ps_Details_Sid=0
                  AND S.ps_Model_Sid = T.ps_Model_Sid
                  AND S.ifp_Model_Sid = T.ifp_Model_Sid 
                  AND S.item_Master_Sid = T.item_Master_Sid
                  and S.check_Record=1
                  and S.operation='A'
                  and S.ps_Model_Sid <> 0
                  
        ]]>    
    </sql>

    <sql id = "mergeConditionNotMatched1">
        <![CDATA[         
            WHEN NOT MATCHED BY TARGET     
        ]]>    
    </sql>    

    <sql id = "mergeConditionNotMatched2">
        <![CDATA[         
              THEN
              INSERT(ps_Model_Sid, item_Master_Sid, contract_Price_Start_Date
              , contract_Price_End_Date, item_Pricing_Qualifier_Sid, contract_Price, price_Revision, revision_Date
              , price_Protection_Start_Date, price_Protection_End_Date, price_Tolerance_Type
              , price_Tolerance, base_Price, price_Tolerance_Frequency, price_Tolerance_Interval
              , suggested_Price
              , ifp_Model_Sid, price , inbound_Status, record_Lock_Status
              , STATUS, PRICE_PROTECTION_STATUS, PRICE_PROTECTION_PRICE_TYPE, NEP,NEP_FORMULA, MAX_INCREMENTAL_CHANGE, RESET_ELIGIBLE, RESET_TYPE, RESET_DATE,RESET_INTERVAL,RESET_FREQUENCY
              , NET_PRICE_TYPE, NET_PRICE_TYPE_FORMULA,BRAND_MASTER_SID,BASE_PRICE_TYPE,BASE_PRICE_ENTRY,BASE_PRICE_DATE,NET_BASE_PRICE,BASE_PRICE_DDLB,SUBSEQUENT_PERIOD_PRICE_TYPE
              , NET_SUBSEQUENT_PERIOD_PRICE,NET_SUBSEQUENT_PRICE_FORMULA_ID,RESET_PRICE_TYPE,NET_RESET_PRICE_TYPE,NET_RESET_PRICE_FORMULA_ID,NET_BASE_PRICE_FORMULA_ID
              , created_By, created_Date, item_Ps_Attached_Date )
              VALUES(S.ps_Model_Sid, S.item_Master_Sid, S.ps_Dtls_Cont_Price_Startdate
              , S.ps_Dtls_Cont_Price_Enddate, CASE WHEN S.ps_Details_Pricetype <> 0 THEN S.ps_Details_Pricetype ELSE NULL END ,S.ps_Details_Contract_Price ,S.ps_Details_Price_Revision, S.ps_Details_Revision_Date
              , S.ps_Details_Pric_Prtcn_Stdate, S.ps_Details_Pric_Prtcn_Eddate, S.ps_Dtls_Price_Tolerance_Type
              , S.ps_Details_Price_Tolerance, S.ps_Details_Base_Price, S.ps_Dtls_Price_Tolerance_Freq, S.ps_Dtls_Price_Tolerance_Intrvl
              , S.ps_Details_Suggested_Price
              , S.ifp_Model_Sid , S.ps_Details_Price , 'A' , '0'
              , S.STATUS, S.PRICE_PROTECTION_STATUS, S.PRICE_PROTECTION_PRICE_TYPE, S.NEP,S.NEP_FORMULA, S.MAX_INCREMENTAL_CHANGE, S.RESET_ELIGIBLE, S.RESET_TYPE, S.RESET_DATE,S.RESET_INTERVAL,S.RESET_FREQUENCY
              , S.NET_PRICE_TYPE, nullif(S.NET_PRICE_TYPE_FORMULA,0),case when S.BRAND_MASTER_SID in('','0') then null else S.BRAND_MASTER_SID end,S.BASE_PRICE_TYPE,S.BASE_PRICE_ENTRY,S.BASE_PRICE_DATE,S.NET_BASE_PRICE,S.BASE_PRICE_DDLB
              , S.SUBSEQUENT_PERIOD_PRICE_TYPE,S.NET_SUBSEQUENT_PERIOD_PRICE,S.NET_SUBSEQUENT_PRICE_FORMULA_ID,S.RESET_PRICE_TYPE,S.NET_RESET_PRICE_TYPE,S.NET_RESET_PRICE_FORMULA_ID,S.NET_BASE_PRICE_FORMULA_ID
        ]]>    
    </sql>    

    <sql id = "mergeConditionMatched">
        <![CDATA[         
            WHEN MATCHED THEN UPDATE SET T.price=S.ps_Details_Price
                  ,T.ITEM_PRICING_QUALIFIER_SID=( CASE WHEN S.ps_Details_Pricetype <> 0 THEN S.ps_Details_Pricetype ELSE NULL END )
                  ,T.contract_Price=S.ps_Details_Contract_Price
                  ,T.contract_Price_Start_Date=S.ps_Dtls_Cont_Price_Startdate
                  ,T.contract_Price_End_Date=S.ps_Dtls_Cont_Price_Enddate
                  ,T.price_Tolerance=S.ps_Details_Price_Tolerance
                  ,T.price_Protection_Start_Date=S.ps_Details_Pric_Prtcn_Stdate
                  ,T.price_Protection_End_Date=S.ps_Details_Pric_Prtcn_Eddate
                  ,T.price_Tolerance_Type=S.ps_Dtls_Price_Tolerance_Type
                  ,T.price_Tolerance_Interval=S.ps_Dtls_Price_Tolerance_Intrvl
                  ,T.price_Tolerance_Frequency=S.ps_Dtls_Price_Tolerance_Freq
                  ,T.base_Price=S.ps_Details_Base_Price     
                  ,T.revision_Date =S.ps_Details_Revision_Date   
                  ,T.STATUS = S.STATUS 
                  ,T.PRICE_PROTECTION_STATUS = S.PRICE_PROTECTION_STATUS 
                  ,T.inbound_Status = 'A'
                  ,T.PRICE_PROTECTION_PRICE_TYPE = S.PRICE_PROTECTION_PRICE_TYPE
                  ,T.NEP = S.NEP 
                  ,T.NEP_FORMULA = S.NEP_FORMULA
                  ,T.MAX_INCREMENTAL_CHANGE=S.MAX_INCREMENTAL_CHANGE  
                  ,T.RESET_ELIGIBLE=S.RESET_ELIGIBLE  
                  ,T.RESET_TYPE=S.RESET_TYPE  
                  ,T.RESET_DATE=S.RESET_DATE   
                  ,T.RESET_INTERVAL=S.RESET_INTERVAL  
                  ,T.RESET_FREQUENCY=S.RESET_FREQUENCY  
                  ,T.NET_PRICE_TYPE=S.NET_PRICE_TYPE  
                  ,T.NET_PRICE_TYPE_FORMULA= nullif(S.NET_PRICE_TYPE_FORMULA,0)
                  ,T.suggested_Price=S.ps_Details_Suggested_Price
                  ,T.BASE_PRICE_TYPE = S.BASE_PRICE_TYPE
                  ,T.BASE_PRICE_ENTRY = S.BASE_PRICE_ENTRY
                  ,T.BASE_PRICE_DATE = S.BASE_PRICE_DATE
                  ,T.NET_BASE_PRICE = S.NET_BASE_PRICE
                  ,T.BASE_PRICE_DDLB = S.BASE_PRICE_DDLB
                  ,T.SUBSEQUENT_PERIOD_PRICE_TYPE = S.SUBSEQUENT_PERIOD_PRICE_TYPE
                  ,T.NET_SUBSEQUENT_PERIOD_PRICE = S.NET_SUBSEQUENT_PERIOD_PRICE
                  ,T.NET_SUBSEQUENT_PRICE_FORMULA_ID = S.NET_SUBSEQUENT_PRICE_FORMULA_ID
                  ,T.RESET_PRICE_TYPE = S.RESET_PRICE_TYPE
                  ,T.NET_RESET_PRICE_TYPE = S.NET_RESET_PRICE_TYPE
                  ,T.NET_RESET_PRICE_FORMULA_ID = S.NET_RESET_PRICE_FORMULA_ID
                  ,T.NET_BASE_PRICE_FORMULA_ID = S.NET_BASE_PRICE_FORMULA_ID
        ]]>    
    </sql>   

    <sql id = "com.priceDetails.softDeleteSave">
<![CDATA[

		 UPDATE IMTD_PS_DETAILS SET PS_MODEL_SID=? WHERE USERS_SID='?' AND SESSION_ID='?' AND CREATED_DATE='?' AND CHECK_RECORD=1;
		
	
		 MERGE PS_DETAILS AS Target USING 
         (SELECT PS_MODEL_SID, IFP_MODEL_SID, ITEM_MASTER_SID, 
         PS_DETAILS_CONTRACT_PRICE, PS_DETAILS_PRICETYPE, PS_DTLS_CONT_PRICE_STARTDATE,
         PS_DTLS_CONT_PRICE_ENDDATE, PS_DETAILS_ATTACHED_STATUS, PS_DETAILS_ATTACHED_DATE,
         PS_DETAILS_BASE_PRICE, PS_DETAILS_PRICE_TOLERANCE, PS_DTLS_PRICE_TOLERANCE_TYPE,
         PS_DTLS_PRICE_TOLERANCE_FREQ, PS_DTLS_PRICE_TOLERANCE_INTRVL, PS_DETAILS_PRIC_PRTCN_STDATE,
         PS_DETAILS_PRIC_PRTCN_EDDATE, PS_DETAILS_PRICE_REVISION, PS_DETAILS_REVISION_DATE, 
         PS_DETAILS_SUGGESTED_PRICE, PS_DETAILS_PRICE, OPERATION, CHECK_RECORD,
         STATUS, PRICE_PROTECTION_STATUS,PRICE_PROTECTION_PRICE_TYPE, NEP,NEP_FORMULA, MAX_INCREMENTAL_CHANGE,RESET_ELIGIBLE,RESET_TYPE,RESET_DATE,RESET_INTERVAL,RESET_FREQUENCY,
         NET_PRICE_TYPE, NULLIF(NET_PRICE_TYPE_FORMULA,'') NET_PRICE_TYPE_FORMULA, 
         CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE 
         
         FROM dbo.IMTD_PS_DETAILS
        WHERE USERS_SID='?' AND SESSION_ID='?' AND CREATED_DATE='?' AND CHECK_RECORD=1) AS Source
        
        ON (Target.PS_MODEL_SID = Source.PS_MODEL_SID AND Target.IFP_MODEL_SID=Source.IFP_MODEL_SID  AND 
        	Target.ITEM_MASTER_SID=Source.ITEM_MASTER_SID AND Target.INBOUND_STATUS = 'D')
        WHEN MATCHED THEN
        
        UPDATE SET 
            	
      	Target.CONTRACT_PRICE=Source.PS_DETAILS_CONTRACT_PRICE,
  		Target.ITEM_PRICING_QUALIFIER_SID=( CASE WHEN Source.PS_DETAILS_PRICETYPE <> 0 THEN Source.PS_DETAILS_PRICETYPE ELSE NULL END ),
  		Target.CONTRACT_PRICE_START_DATE=Source.PS_DTLS_CONT_PRICE_STARTDATE,
  		Target.CONTRACT_PRICE_END_DATE=Source.PS_DTLS_CONT_PRICE_ENDDATE,
  		Target.ITEM_PS_ATTACHED_STATUS=Source.PS_DETAILS_ATTACHED_STATUS, 
  		Target.ITEM_PS_ATTACHED_DATE=source.PS_DETAILS_ATTACHED_DATE,
  		Target.BASE_PRICE=Source.PS_DETAILS_BASE_PRICE, 
  		Target.PRICE_TOLERANCE=Source.PS_DETAILS_PRICE_TOLERANCE,
  		Target.PRICE_TOLERANCE_FREQUENCY=Source.PS_DTLS_PRICE_TOLERANCE_FREQ,
  		Target.PRICE_TOLERANCE_INTERVAL=Source.PS_DTLS_PRICE_TOLERANCE_INTRVL, 
  		Target.PRICE_PROTECTION_START_DATE=Source.PS_DETAILS_PRIC_PRTCN_STDATE,
  		Target.PRICE_PROTECTION_END_DATE=Source.PS_DETAILS_PRIC_PRTCN_EDDATE,
  		Target.PRICE_REVISION=Source.PS_DETAILS_PRICE_REVISION,
  		Target.REVISION_DATE=Source.PS_DETAILS_REVISION_DATE,
  		Target.SUGGESTED_PRICE=Source.PS_DETAILS_SUGGESTED_PRICE,
  		Target.PRICE=Source.PS_DETAILS_PRICE,
                Target.STATUS=Source.STATUS,
  		Target.PRICE_PROTECTION_STATUS=Source.PRICE_PROTECTION_STATUS,
                Target.PRICE_PROTECTION_PRICE_TYPE=Source.PRICE_PROTECTION_PRICE_TYPE,
                Target.NEP=Source.NEP,
                Target.NEP_FORMULA=Source.NEP_FORMULA,
                Target.MAX_INCREMENTAL_CHANGE=Source.MAX_INCREMENTAL_CHANGE,  
                Target.RESET_ELIGIBLE=Source.RESET_ELIGIBLE,  
                Target.RESET_TYPE=Source.RESET_TYPE,  
                Target.RESET_DATE=Source.RESET_DATE,  
                Target.RESET_INTERVAL=Source.RESET_INTERVAL,  
                Target.RESET_FREQUENCY=Source.RESET_FREQUENCY,  
                Target.NET_PRICE_TYPE=Source.NET_PRICE_TYPE,  
                Target.NET_PRICE_TYPE_FORMULA=Source.NET_PRICE_TYPE_FORMULA, 
                Target.INBOUND_STATUS='A',
  		Target.RECORD_LOCK_STATUS=0,
  		Target.CREATED_BY=Source.CREATED_BY,
  		Target.CREATED_DATE=Source.CREATED_DATE,
  		Target.MODIFIED_BY=Source.MODIFIED_BY,
  		Target.MODIFIED_DATE=Source.MODIFIED_DATE      
       
        WHEN NOT matched THEN
        
  		INSERT(PS_MODEL_SID, IFP_MODEL_SID, ITEM_MASTER_SID, CONTRACT_PRICE,
  		ITEM_PRICING_QUALIFIER_SID,CONTRACT_PRICE_START_DATE,CONTRACT_PRICE_END_DATE,
  		ITEM_PS_ATTACHED_STATUS, ITEM_PS_ATTACHED_DATE,BASE_PRICE, PRICE_TOLERANCE,
  		PRICE_TOLERANCE_FREQUENCY,PRICE_TOLERANCE_INTERVAL, PRICE_PROTECTION_START_DATE,
  		PRICE_PROTECTION_END_DATE,PRICE_REVISION,REVISION_DATE,SUGGESTED_PRICE,PRICE,INBOUND_STATUS,
                STATUS, PRICE_PROTECTION_STATUS, PRICE_PROTECTION_PRICE_TYPE,NEP,NEP_FORMULA, MAX_INCREMENTAL_CHANGE,RESET_ELIGIBLE,RESET_TYPE,
                RESET_DATE,RESET_INTERVAL,RESET_FREQUENCY,NET_PRICE_TYPE, NET_PRICE_TYPE_FORMULA,
  		RECORD_LOCK_STATUS,CREATED_BY,CREATED_DATE,MODIFIED_BY,MODIFIED_DATE)  		
  		VALUES(Source.PS_MODEL_SID, Source.IFP_MODEL_SID, Source.ITEM_MASTER_SID, Source.PS_DETAILS_CONTRACT_PRICE,
  		CASE WHEN Source.PS_DETAILS_PRICETYPE <> 0 THEN Source.PS_DETAILS_PRICETYPE ELSE NULL END ,Source.PS_DTLS_CONT_PRICE_STARTDATE,Source.PS_DTLS_CONT_PRICE_ENDDATE,
  		Source.PS_DETAILS_ATTACHED_STATUS, Source.PS_DETAILS_ATTACHED_DATE,Source.PS_DETAILS_BASE_PRICE, Source.PS_DETAILS_PRICE_TOLERANCE,
  		Source.PS_DTLS_PRICE_TOLERANCE_FREQ,Source.PS_DTLS_PRICE_TOLERANCE_INTRVL, Source.PS_DETAILS_PRIC_PRTCN_STDATE,
  		Source.PS_DETAILS_PRIC_PRTCN_EDDATE,Source.PS_DETAILS_PRICE_REVISION,Source.PS_DETAILS_REVISION_DATE,Source.PS_DETAILS_SUGGESTED_PRICE,
  		Source.PS_DETAILS_PRICE,'A',
                Source.STATUS, Source.PRICE_PROTECTION_STATUS, Source.PRICE_PROTECTION_PRICE_TYPE, Source.NEP,Source.NEP_FORMULA, Source.MAX_INCREMENTAL_CHANGE, Source.RESET_ELIGIBLE,Source.RESET_TYPE,
                Source.RESET_DATE,Source.RESET_INTERVAL,Source.RESET_FREQUENCY,Source.NET_PRICE_TYPE, Source.NET_PRICE_TYPE_FORMULA, 
                0,Source.CREATED_BY,Source.CREATED_DATE,Source.MODIFIED_BY,Source.MODIFIED_DATE);
  		
  		DELETE FROM IMTD_PS_DETAILS WHERE USERS_SID='?' AND SESSION_ID='?';


]]> 
    </sql>

    <sql id = "resetpricingtab">
        <![CDATA[         
            UPDATE IMTD_PS_DETAILS
SET    STATUS = 0,
       PS_DTLS_CONT_PRICE_STARTDATE=NULL,
       PS_DTLS_CONT_PRICE_ENDDATE=NULL,
       PS_DETAILS_PRICETYPE=0,
       PS_DETAILS_PRICE=0.00,
       PS_DETAILS_PRICE_PLAN_ID=NULL,
       PS_DETAILS_SUGGESTED_PRICE=0.00

WHERE  USERS_SID = '?'
       AND SESSION_ID = '?'  
        ]]>    
    </sql>    
    
    <sql id = "resetpriceprotectiontab">
        <![CDATA[         
            UPDATE IMTD_PS_DETAILS
SET    PRICE_PROTECTION_STATUS = 0,
       PS_DETAILS_PRIC_PRTCN_STDATE=NULL,
       PS_DETAILS_PRIC_PRTCN_EDDATE=NULL,
       PRICE_PROTECTION_PRICE_TYPE=0,
       NEP=0.00,
       NEP_FORMULA='',
       PS_DETAILS_BASE_PRICE=0.00,
       PS_DTLS_PRICE_TOLERANCE_INTRVL=0,
       PS_DTLS_PRICE_TOLERANCE_FREQ=0,
       PS_DTLS_PRICE_TOLERANCE_TYPE=0,
       PS_DETAILS_PRICE_TOLERANCE=0.00,
       MAX_INCREMENTAL_CHANGE=0.00,
       RESET_ELIGIBLE=0,
       RESET_TYPE=0,
       RESET_DATE=NULL,
       RESET_INTERVAL=0,
       RESET_FREQUENCY=0,
       NET_PRICE_TYPE=0,
       NET_PRICE_TYPE_FORMULA='',
       BASE_PRICE_TYPE='',
       BASE_PRICE_ENTRY=0,
       BASE_PRICE_DATE=NULL,
       NET_BASE_PRICE=0,
       BASE_PRICE_DDLB=0,
       SUBSEQUENT_PERIOD_PRICE_TYPE=0,
       NET_SUBSEQUENT_PERIOD_PRICE=0,
       NET_SUBSEQUENT_PRICE_FORMULA_ID=0,
       RESET_PRICE_TYPE=0,
       NET_RESET_PRICE_TYPE=0,
       NET_RESET_PRICE_FORMULA_ID=0,
       NET_BASE_PRICE_FORMULA_ID=0
       
WHERE  USERS_SID = '?'
       AND SESSION_ID = '?'  
        ]]>    
    </sql>   
    
     <sql id = "resetpricingtabedit">
        <![CDATA[         
            UPDATE IPD
SET    IPD.STATUS = PSD.STATUS,
       IPD.PS_DTLS_CONT_PRICE_STARTDATE=PSD.CONTRACT_PRICE_START_DATE,
       IPD.PS_DTLS_CONT_PRICE_ENDDATE=PSD.CONTRACT_PRICE_END_DATE,
       IPD.PS_DETAILS_PRICETYPE=PSD.ITEM_PRICING_QUALIFIER_SID,
       IPD.PS_DETAILS_PRICE=PSD.PRICE,
       IPD.PS_DETAILS_SUGGESTED_PRICE=PSD.SUGGESTED_PRICE
        
FROM   IMTD_PS_DETAILS IPD
       INNER JOIN (SELECT *
                   FROM   PS_DETAILS
                   WHERE  PS_MODEL_SID = '?') PSD
               ON PSD.PS_DETAILS_SID = IPD.PS_DETAILS_SID 

WHERE  USERS_SID = '?'
       AND SESSION_ID = '?'  
        ]]>    
    </sql>     
    
    <sql id = "resetpriceprotectiontabedit">
        <![CDATA[         
            UPDATE IPD
SET    IPD.PRICE_PROTECTION_STATUS = PSD.PRICE_PROTECTION_STATUS,
       IPD.PS_DETAILS_PRIC_PRTCN_STDATE=PSD.PRICE_PROTECTION_START_DATE,
       IPD.PS_DETAILS_PRIC_PRTCN_EDDATE=PSD.PRICE_PROTECTION_END_DATE,
       IPD.PRICE_PROTECTION_PRICE_TYPE=PSD.PRICE_PROTECTION_PRICE_TYPE,
       IPD.NEP=PSD.NEP,
       IPD.NEP_FORMULA=PSD.NEP_FORMULA,
       IPD.PS_DETAILS_BASE_PRICE=PSD.BASE_PRICE,
       IPD.PS_DTLS_PRICE_TOLERANCE_INTRVL=PSD.PRICE_TOLERANCE_INTERVAL,
       IPD.PS_DTLS_PRICE_TOLERANCE_FREQ=PSD.PRICE_TOLERANCE_FREQUENCY,
       IPD.PS_DTLS_PRICE_TOLERANCE_TYPE=PSD.PRICE_TOLERANCE_TYPE,
       IPD.PS_DETAILS_PRICE_TOLERANCE=PSD.PRICE_TOLERANCE,
       IPD.MAX_INCREMENTAL_CHANGE=PSD.MAX_INCREMENTAL_CHANGE,
       IPD.RESET_ELIGIBLE=PSD.RESET_ELIGIBLE,
       IPD.RESET_TYPE=PSD.RESET_TYPE,
       IPD.RESET_DATE=PSD.RESET_DATE,
       IPD.RESET_INTERVAL=PSD.RESET_INTERVAL,
       IPD.RESET_FREQUENCY=PSD.RESET_FREQUENCY,
       IPD.NET_PRICE_TYPE=PSD.NET_PRICE_TYPE,
       IPD.NET_PRICE_TYPE_FORMULA=PSD.NET_PRICE_TYPE_FORMULA,
       IPD.BASE_PRICE_TYPE = PSD.BASE_PRICE_TYPE,
       IPD.BASE_PRICE_ENTRY = PSD.BASE_PRICE_ENTRY,
       IPD.BASE_PRICE_DATE = PSD.BASE_PRICE_DATE,
       IPD.NET_BASE_PRICE = PSD.NET_BASE_PRICE,
       IPD.BASE_PRICE_DDLB = PSD.BASE_PRICE_DDLB,
       IPD.SUBSEQUENT_PERIOD_PRICE_TYPE = PSD.SUBSEQUENT_PERIOD_PRICE_TYPE,
       IPD.NET_SUBSEQUENT_PERIOD_PRICE = PSD.NET_SUBSEQUENT_PERIOD_PRICE,
       IPD.NET_SUBSEQUENT_PRICE_FORMULA_ID = PSD.NET_SUBSEQUENT_PRICE_FORMULA_ID,
       IPD.RESET_PRICE_TYPE = PSD.RESET_PRICE_TYPE,
       IPD.NET_RESET_PRICE_TYPE = PSD.NET_RESET_PRICE_TYPE,
       IPD.NET_RESET_PRICE_FORMULA_ID = PSD.NET_RESET_PRICE_FORMULA_ID,
       IPD.NET_BASE_PRICE_FORMULA_ID = PSD.NET_BASE_PRICE_FORMULA_ID
        
FROM   IMTD_PS_DETAILS IPD
       INNER JOIN (SELECT *
                   FROM   PS_DETAILS
                   WHERE  PS_MODEL_SID = '?') PSD
               ON PSD.PS_DETAILS_SID = IPD.PS_DETAILS_SID 

WHERE  USERS_SID = '?'
       AND SESSION_ID = '?'  
        ]]>    
    </sql>     
    
</custom-sql>