<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<sql> 
    <entity id="getDetailsResults">
        <query>
            <![CDATA[
                SELECT DISTINCT IM.ITEM_NO,IM.ITEM_NAME,FM.FORECAST_YEAR,FM.FORECAST_MONTH,FM.FORECAST_DATE,
                FM.PRICE,FM.UNITS,FM.DOLLARS,FM.RECORD_LOCK_STATUS,FM.FORECAST_MASTER_SID 
                FROM FORECASTING_MASTER FM,ITEM_MASTER IM WHERE FM.NDC=IM.ITEM_ID 
                AND FORECAST_NAME=  
            ]]>
        </query>
    </entity>
    
    <entity id="getFileEndDate">
        <![CDATA[
            WITH CTE
             AS (SELECT FORECAST_NAME,
                        [VERSION],
                        DESCRIPTION AS FILE_TYPE
                 FROM   (SELECT FT.FORECAST_NAME,
                                FT.[VERSION],
                                HT.DESCRIPTION,
                                FT.FROM_PERIOD,
                                Row_number()
                                  OVER (
                                    PARTITION BY FT.FILE_TYPE
                                    ORDER BY FT.FROM_PERIOD DESC) RN
                         FROM   FILE_MANAGEMENT FT
                                INNER JOIN HELPER_TABLE HT
                                        ON HT.HELPER_TABLE_SID = FT.FILE_TYPE
                         WHERE  ( CONVERT(DATE, FT.FROM_PERIOD) <= CONVERT(DATE, Getdate())
                                  AND FT.FROM_PERIOD IS NOT NULL )
                                AND ( CONVERT(DATE, FT.TO_PERIOD) >= CONVERT(DATE, Getdate())
                                       OR FT.TO_PERIOD IS NULL )
                                AND HT.LIST_NAME = 'FILE_TYPE'
                                AND HT.DESCRIPTION IN ( 'EX-FACTORY SALES', 'DEMAND', 'INVENTORY WITHDRAWAL - FORECAST SUMMARY' )
                                AND FT.BUSINESS_UNIT = [?BUSINESS_UNIT] )A
                 WHERE  RN = 1)
            SELECT TOP 1 FORECAST_YEAR,
                         FORECAST_MONTH
            FROM   (SELECT Cast(FORECAST_YEAR AS INT)  FORECAST_YEAR,
                           Cast(FORECAST_MONTH AS INT) FORECAST_MONTH
                    FROM   FORECASTING_MASTER f
                           INNER JOIN CTE c
                                   ON c.FORECAST_NAME = f.FORECAST_NAME
                                      AND FORECAST_VER IN ( c.[VERSION], Floor(c.VERSION) )
                    UNION ALL
                    SELECT FORECAST_YEAR,
                           FORECAST_MONTH
                    FROM   DEMAND_FORECAST f
                           INNER JOIN CTE c
                                   ON c.FORECAST_NAME = f.FORECAST_NAME
                                      AND FORECAST_VER IN ( c.[VERSION], Floor(c.VERSION) )
                    UNION ALL
                    SELECT YEAR,
                           MONTH
                    FROM   INVENTORY_WD_PROJ_MAS f
                           INNER JOIN CTE c
                                   ON c.FORECAST_NAME = f.FORECAST_NAME
                                      AND FORECAST_VER IN ( c.[VERSION], Floor(c.VERSION) )) A
            ORDER  BY FORECAST_YEAR DESC,
                      FORECAST_MONTH DESC;
        ]]>
    </entity>
    
    <entity id="getProjectionLists">
                <![CDATA[
                 SELECT PM.PROJECTION_NAME,
                    PM.PROJECTION_DESCRIPTION,
                    CASE
                      WHEN Count(DISTINCT HT.DESCRIPTION) > 1 THEN 'MULTIPLE'
                      ELSE Max(HT.DESCRIPTION)
                    END AS MARKET_TYPE,
                    CASE
                      WHEN Count(DISTINCT CM.COMPANY_NO) > 1 THEN 'MULTIPLE'
                      ELSE Max(CM.COMPANY_NO)
                    END AS CONTRACT_HOLDER,
                    CASE
                      WHEN Count(DISTINCT C.CONTRACT_NO) > 1 THEN 'MULTIPLE'
                      ELSE Max(C.CONTRACT_NO)
                    END AS CONTRACT,
                    CASE
                      WHEN Count(DISTINCT BM.BRAND_NAME) > 1 THEN 'MULTIPLE'
                      ELSE Max(BM.BRAND_NAME)
                    END AS BRAND,
                    CASE
                      WHEN Count(DISTINCT IM.ITEM_NO) > 1 THEN 'MULTIPLE'
                      ELSE Max(IM.ITEM_NO)
                    END AS ITEM_NO,
                    CASE
                      WHEN Count(DISTINCT IM.ITEM_NAME) > 1 THEN 'MULTIPLE'
                      ELSE Max(IM.ITEM_NAME)
                    END AS ITEM_NAME,
                    PM.PROJECTION_MASTER_SID,
                    PM.CREATED_DATE,
                    PM.CREATED_BY
             FROM   PROJECTION_MASTER PM

                    INNER JOIN PROJECTION_DETAILS PD
                            ON PD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
                    INNER JOIN CCP_DETAILS CCP
                            ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
                                     JOIN PROJECTION_DETAILS CUR_PD
                             ON CUR_PD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
                    INNER JOIN CONTRACT_MASTER C
                            ON C.CONTRACT_MASTER_SID = CCP.CONTRACT_MASTER_SID
                    LEFT JOIN HELPER_TABLE HT
                           ON C.CONTRACT_TYPE = HT.HELPER_TABLE_SID
                              AND ( HT.LIST_NAME = 'CONTRACT_TYPE'
                                     )
                    LEFT JOIN COMPANY_MASTER CM
                           ON C.CONT_HOLD_COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID

                    JOIN ITEM_MASTER IM
                      ON CCP.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
                    LEFT JOIN BRAND_MASTER BM
                           ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID

             WHERE 
                ]]>
    </entity>
    <entity id="getWorkFlowLists">
                <![CDATA[
              SELECT PM.PROJECTION_NAME,
                    PM.PROJECTION_DESCRIPTION,
                    CASE
                      WHEN Count(DISTINCT HT.DESCRIPTION) > 1 THEN 'MULTIPLE'
                      ELSE Max(HT.DESCRIPTION)
                    END AS MARKET_TYPE,
                    CASE
                      WHEN Count(DISTINCT CM.COMPANY_NO) > 1 THEN 'MULTIPLE'
                      ELSE Max(CM.COMPANY_NO)
                    END AS CONTRACT_HOLDER,
                    CASE
                      WHEN Count(DISTINCT C.CONTRACT_NO) > 1 THEN 'MULTIPLE'
                      ELSE Max(C.CONTRACT_NO)
                    END AS CONTRACT,
                    CASE
                      WHEN Count(DISTINCT BM.BRAND_NAME) > 1 THEN 'MULTIPLE'
                      ELSE Max(BM.BRAND_NAME)
                    END AS BRAND,
                    CASE
                      WHEN Count(DISTINCT IM.ITEM_NO) > 1 THEN 'MULTIPLE'
                      ELSE Max(IM.ITEM_NO)
                    END AS ITEM_NO,
                    CASE
                      WHEN Count(DISTINCT IM.ITEM_NAME) > 1 THEN 'MULTIPLE'
                      ELSE Max(IM.ITEM_NAME)
                    END AS ITEM_NAME,
                    PM.PROJECTION_MASTER_SID,
                    PM.CREATED_DATE,
                    PM.CREATED_BY
             FROM   PROJECTION_MASTER PM
                    INNER JOIN WORKFLOW_MASTER WM
                            ON PM.PROJECTION_MASTER_SID = WM.PROJECTION_MASTER_SID
                                   LEFT JOIN HELPER_TABLE HT1
                           ON HT1.HELPER_TABLE_SID = WM.WORKFLOW_STATUS_ID
                              AND HT1.LIST_NAME = 'WORKFLOWSTATUS'

                    INNER JOIN PROJECTION_DETAILS PD
                            ON PD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
                    INNER JOIN CCP_DETAILS CCP
                            ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
                                     JOIN PROJECTION_DETAILS CUR_PD
                             ON CUR_PD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
                    INNER JOIN CONTRACT_MASTER C
                            ON C.CONTRACT_MASTER_SID = CCP.CONTRACT_MASTER_SID
                    LEFT JOIN HELPER_TABLE HT
                           ON C.CONTRACT_TYPE = HT.HELPER_TABLE_SID
                              AND ( HT.LIST_NAME = 'CONTRACT_TYPE'
                                     )
                    LEFT JOIN COMPANY_MASTER CM
                           ON C.CONT_HOLD_COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID

                    JOIN ITEM_MASTER IM
                      ON CCP.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
                    LEFT JOIN BRAND_MASTER BM
                           ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID

             WHERE 
                ]]>
    </entity>
    
    <entity id="loadBusinessUnitInWorkflow">
        <![CDATA[
            SELECT distinct COMPANY_MASTER_SID,COMPANY_NO FROM COMPANY_MASTER WHERE COMPANY_ID in (SELECT distinct COMPANY_CODE FROM GL_COST_CENTER_MASTER)
        ]]>
    </entity>
    
    <entity id="com.businessRoleModule.service.persistence.BusinessRoleModuleFinder.functionPermission">
		<![CDATA[
                    select distinct spm.PROPERTY_NAME,bmm.ACCESS_MODULE from USERGROUP_BUSINESSROLE as ubm, 
                    BUSINESSROLE_MODULE as bmm, 
                    MODULE_PROPERTIES as spm where 
                    ubm.BUSINESSROLE_MASTER_SID=bmm.BUSINESSROLE_MASTER_SID and bmm.SUBMODULE_PROPERTY_ID=spm.MODULE_PROPERTY_SID and 
                    (spm.PROPERTY_NAME is not null or spm.PROPERTY_NAME != '') 
                    and spm.CATEGORY_NAME='Button'
		]]>
    </entity>
    
    <entity id="com.businessRoleModule.service.persistence.BusinessRoleModuleFinder.fieldPermissionForTransaction">
		<![CDATA[
            select distinct spm.PROPERTY_NAME,bmm.ADD_FLAG,bmm.EDIT_FLAG,bmm.VIEW_FLAG,spm.TAB_NAME from USERGROUP_BUSINESSROLE as ubm, 
                            BUSINESSROLE_MODULE as bmm, 
                    MODULE_PROPERTIES as spm where 
                    ubm.BUSINESSROLE_MASTER_SID=bmm.BUSINESSROLE_MASTER_SID and bmm.SUBMODULE_PROPERTY_ID=spm.MODULE_PROPERTY_SID and 
                    (spm.PROPERTY_NAME is not null or spm.PROPERTY_NAME != '') 
                    and spm.CATEGORY_NAME NOT IN ('Button','Tab')
		]]>
    </entity>
    
    <entity id="com.businessRoleModule.service.persistence.BusinessRoleModuleFinder.fieldPermission">
		<![CDATA[
            select distinct spm.PROPERTY_NAME,bmm.ADD_FLAG,bmm.EDIT_FLAG,bmm.VIEW_FLAG from USERGROUP_BUSINESSROLE as ubm, 
                            BUSINESSROLE_MODULE as bmm, 
                    MODULE_PROPERTIES as spm where 
                    ubm.BUSINESSROLE_MASTER_SID=bmm.BUSINESSROLE_MASTER_SID and bmm.SUBMODULE_PROPERTY_ID=spm.MODULE_PROPERTY_SID and 
                    (spm.PROPERTY_NAME is not null or spm.PROPERTY_NAME != '') 
                    and spm.CATEGORY_NAME NOT IN ('Button','Tab')
		]]>
    </entity>
    
    <entity id="com.businessRoleModule.service.persistence.BusinessRoleModuleFinder.tabPermission">
		<![CDATA[
            select distinct spm.PROPERTY_NAME,bmm.ACCESS_MODULE from USERGROUP_BUSINESSROLE as ubm, 
                            BUSINESSROLE_MODULE as bmm, 
                    MODULE_PROPERTIES as spm where 
                    ubm.BUSINESSROLE_MASTER_SID=bmm.BUSINESSROLE_MASTER_SID and bmm.SUBMODULE_PROPERTY_ID=spm.MODULE_PROPERTY_SID and 
                    (spm.PROPERTY_NAME is not null or spm.PROPERTY_NAME != '') 
                    and spm.CATEGORY_NAME='Tab'
		]]>
    </entity>
</sql>