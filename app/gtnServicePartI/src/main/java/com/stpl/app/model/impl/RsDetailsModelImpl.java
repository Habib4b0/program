package com.stpl.app.model.impl;

import com.stpl.app.model.RsDetails;
import com.stpl.app.model.RsDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RsDetails service. Represents a row in the &quot;RS_Details&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.RsDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RsDetailsImpl}.
 * </p>
 *
 * @author
 * @see RsDetailsImpl
 * @see com.stpl.app.model.RsDetails
 * @see com.stpl.app.model.RsDetailsModel
 * @generated
 */
public class RsDetailsModelImpl extends BaseModelImpl<RsDetails>
    implements RsDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a rs details model instance should use the {@link com.stpl.app.model.RsDetails} interface instead.
     */
    public static final String TABLE_NAME = "RS_Details";
    public static final Object[][] TABLE_COLUMNS = {
            { "REBATE_AMOUNT", Types.DOUBLE },
            { "ITEM_RS_ATTACHED_STATUS", Types.INTEGER },
            { "FORMULA_METHOD_ID", Types.VARCHAR },
            { "ITEM_MASTER_SID", Types.INTEGER },
            { "REBATE_PLAN_MASTER_SID", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "BUNDLE_NO", Types.VARCHAR },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "SOURCE", Types.VARCHAR },
            { "ITEM_REBATE_END_DATE", Types.TIMESTAMP },
            { "BATCH_ID", Types.VARCHAR },
            { "ITEM_REBATE_START_DATE", Types.TIMESTAMP },
            { "MODIFIED_BY", Types.INTEGER },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "RS_DETAILS_SID", Types.INTEGER },
            { "RS_MODEL_SID", Types.INTEGER },
            { "FORMULA_ID", Types.INTEGER },
            { "ITEM_RS_ATTACHED_DATE", Types.TIMESTAMP },
            { "IFP_MODEL_SID", Types.INTEGER },
            { "DEDUCTION_CALENDAR_MASTER_SID", Types.INTEGER },
            { "NET_SALES_FORMULA_MASTER_SID", Types.INTEGER },
            { "EVALUATION_RULE", Types.VARCHAR },
            { "NET_SALES_RULE", Types.VARCHAR },
            { "FORMULA_TYPE", Types.VARCHAR },
            { "CALCULATION_RULE", Types.VARCHAR },
            { "CALCULATION_RULE_BUNDLE", Types.VARCHAR },
            { "EVALUATION_RULE_BUNDLE", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table RS_Details (REBATE_AMOUNT DOUBLE,ITEM_RS_ATTACHED_STATUS INTEGER,FORMULA_METHOD_ID VARCHAR(75) null,ITEM_MASTER_SID INTEGER,REBATE_PLAN_MASTER_SID INTEGER,MODIFIED_DATE DATE null,BUNDLE_NO VARCHAR(75) null,RECORD_LOCK_STATUS BOOLEAN,CREATED_DATE DATE null,CREATED_BY INTEGER,SOURCE VARCHAR(75) null,ITEM_REBATE_END_DATE DATE null,BATCH_ID VARCHAR(75) null,ITEM_REBATE_START_DATE DATE null,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,RS_DETAILS_SID INTEGER not null primary key IDENTITY,RS_MODEL_SID INTEGER,FORMULA_ID INTEGER,ITEM_RS_ATTACHED_DATE DATE null,IFP_MODEL_SID INTEGER,DEDUCTION_CALENDAR_MASTER_SID INTEGER,NET_SALES_FORMULA_MASTER_SID INTEGER,EVALUATION_RULE VARCHAR(75) null,NET_SALES_RULE VARCHAR(75) null,FORMULA_TYPE VARCHAR(75) null,CALCULATION_RULE VARCHAR(75) null,CALCULATION_RULE_BUNDLE VARCHAR(75) null,EVALUATION_RULE_BUNDLE VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table RS_Details";
    public static final String ORDER_BY_JPQL = " ORDER BY rsDetails.rsDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY RS_Details.RS_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.RsDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.RsDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.RsDetails"));
    private static ClassLoader _classLoader = RsDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            RsDetails.class
        };
    private double _rebateAmount;
    private int _itemRsAttachedStatus;
    private String _formulaMethodId;
    private int _itemMasterSid;
    private int _rebatePlanMasterSid;
    private Date _modifiedDate;
    private String _bundleNo;
    private boolean _recordLockStatus;
    private Date _createdDate;
    private int _createdBy;
    private String _source;
    private Date _itemRebateEndDate;
    private String _batchId;
    private Date _itemRebateStartDate;
    private int _modifiedBy;
    private String _inboundStatus;
    private int _rsDetailsSid;
    private int _rsModelSid;
    private int _formulaId;
    private Date _itemRsAttachedDate;
    private int _ifpModelSid;
    private int _deductionCalendarMasterSid;
    private int _netSalesFormulaMasterSid;
    private String _evaluationRule;
    private String _netSalesRule;
    private String _formulaType;
    private String _calculationRule;
    private String _calculationRuleBundle;
    private String _evaluationRuleBundle;
    private RsDetails _escapedModel;

    public RsDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _rsDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setRsDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _rsDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return RsDetails.class;
    }

    @Override
    public String getModelClassName() {
        return RsDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("rebateAmount", getRebateAmount());
        attributes.put("itemRsAttachedStatus", getItemRsAttachedStatus());
        attributes.put("formulaMethodId", getFormulaMethodId());
        attributes.put("itemMasterSid", getItemMasterSid());
        attributes.put("rebatePlanMasterSid", getRebatePlanMasterSid());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("bundleNo", getBundleNo());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("source", getSource());
        attributes.put("itemRebateEndDate", getItemRebateEndDate());
        attributes.put("batchId", getBatchId());
        attributes.put("itemRebateStartDate", getItemRebateStartDate());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("rsDetailsSid", getRsDetailsSid());
        attributes.put("rsModelSid", getRsModelSid());
        attributes.put("formulaId", getFormulaId());
        attributes.put("itemRsAttachedDate", getItemRsAttachedDate());
        attributes.put("ifpModelSid", getIfpModelSid());
        attributes.put("deductionCalendarMasterSid",
            getDeductionCalendarMasterSid());
        attributes.put("netSalesFormulaMasterSid", getNetSalesFormulaMasterSid());
        attributes.put("evaluationRule", getEvaluationRule());
        attributes.put("netSalesRule", getNetSalesRule());
        attributes.put("formulaType", getFormulaType());
        attributes.put("calculationRule", getCalculationRule());
        attributes.put("calculationRuleBundle", getCalculationRuleBundle());
        attributes.put("evaluationRuleBundle", getEvaluationRuleBundle());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Double rebateAmount = (Double) attributes.get("rebateAmount");

        if (rebateAmount != null) {
            setRebateAmount(rebateAmount);
        }

        Integer itemRsAttachedStatus = (Integer) attributes.get(
                "itemRsAttachedStatus");

        if (itemRsAttachedStatus != null) {
            setItemRsAttachedStatus(itemRsAttachedStatus);
        }

        String formulaMethodId = (String) attributes.get("formulaMethodId");

        if (formulaMethodId != null) {
            setFormulaMethodId(formulaMethodId);
        }

        Integer itemMasterSid = (Integer) attributes.get("itemMasterSid");

        if (itemMasterSid != null) {
            setItemMasterSid(itemMasterSid);
        }

        Integer rebatePlanMasterSid = (Integer) attributes.get(
                "rebatePlanMasterSid");

        if (rebatePlanMasterSid != null) {
            setRebatePlanMasterSid(rebatePlanMasterSid);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String bundleNo = (String) attributes.get("bundleNo");

        if (bundleNo != null) {
            setBundleNo(bundleNo);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        Date itemRebateEndDate = (Date) attributes.get("itemRebateEndDate");

        if (itemRebateEndDate != null) {
            setItemRebateEndDate(itemRebateEndDate);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        Date itemRebateStartDate = (Date) attributes.get("itemRebateStartDate");

        if (itemRebateStartDate != null) {
            setItemRebateStartDate(itemRebateStartDate);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        Integer rsDetailsSid = (Integer) attributes.get("rsDetailsSid");

        if (rsDetailsSid != null) {
            setRsDetailsSid(rsDetailsSid);
        }

        Integer rsModelSid = (Integer) attributes.get("rsModelSid");

        if (rsModelSid != null) {
            setRsModelSid(rsModelSid);
        }

        Integer formulaId = (Integer) attributes.get("formulaId");

        if (formulaId != null) {
            setFormulaId(formulaId);
        }

        Date itemRsAttachedDate = (Date) attributes.get("itemRsAttachedDate");

        if (itemRsAttachedDate != null) {
            setItemRsAttachedDate(itemRsAttachedDate);
        }

        Integer ifpModelSid = (Integer) attributes.get("ifpModelSid");

        if (ifpModelSid != null) {
            setIfpModelSid(ifpModelSid);
        }

        Integer deductionCalendarMasterSid = (Integer) attributes.get(
                "deductionCalendarMasterSid");

        if (deductionCalendarMasterSid != null) {
            setDeductionCalendarMasterSid(deductionCalendarMasterSid);
        }

        Integer netSalesFormulaMasterSid = (Integer) attributes.get(
                "netSalesFormulaMasterSid");

        if (netSalesFormulaMasterSid != null) {
            setNetSalesFormulaMasterSid(netSalesFormulaMasterSid);
        }

        String evaluationRule = (String) attributes.get("evaluationRule");

        if (evaluationRule != null) {
            setEvaluationRule(evaluationRule);
        }

        String netSalesRule = (String) attributes.get("netSalesRule");

        if (netSalesRule != null) {
            setNetSalesRule(netSalesRule);
        }

        String formulaType = (String) attributes.get("formulaType");

        if (formulaType != null) {
            setFormulaType(formulaType);
        }

        String calculationRule = (String) attributes.get("calculationRule");

        if (calculationRule != null) {
            setCalculationRule(calculationRule);
        }

        String calculationRuleBundle = (String) attributes.get(
                "calculationRuleBundle");

        if (calculationRuleBundle != null) {
            setCalculationRuleBundle(calculationRuleBundle);
        }

        String evaluationRuleBundle = (String) attributes.get(
                "evaluationRuleBundle");

        if (evaluationRuleBundle != null) {
            setEvaluationRuleBundle(evaluationRuleBundle);
        }
    }

    @Override
    public double getRebateAmount() {
        return _rebateAmount;
    }

    @Override
    public void setRebateAmount(double rebateAmount) {
        _rebateAmount = rebateAmount;
    }

    @Override
    public int getItemRsAttachedStatus() {
        return _itemRsAttachedStatus;
    }

    @Override
    public void setItemRsAttachedStatus(int itemRsAttachedStatus) {
        _itemRsAttachedStatus = itemRsAttachedStatus;
    }

    @Override
    public String getFormulaMethodId() {
        if (_formulaMethodId == null) {
            return StringPool.BLANK;
        } else {
            return _formulaMethodId;
        }
    }

    @Override
    public void setFormulaMethodId(String formulaMethodId) {
        _formulaMethodId = formulaMethodId;
    }

    @Override
    public int getItemMasterSid() {
        return _itemMasterSid;
    }

    @Override
    public void setItemMasterSid(int itemMasterSid) {
        _itemMasterSid = itemMasterSid;
    }

    @Override
    public int getRebatePlanMasterSid() {
        return _rebatePlanMasterSid;
    }

    @Override
    public void setRebatePlanMasterSid(int rebatePlanMasterSid) {
        _rebatePlanMasterSid = rebatePlanMasterSid;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getBundleNo() {
        if (_bundleNo == null) {
            return StringPool.BLANK;
        } else {
            return _bundleNo;
        }
    }

    @Override
    public void setBundleNo(String bundleNo) {
        _bundleNo = bundleNo;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public Date getItemRebateEndDate() {
        return _itemRebateEndDate;
    }

    @Override
    public void setItemRebateEndDate(Date itemRebateEndDate) {
        _itemRebateEndDate = itemRebateEndDate;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public Date getItemRebateStartDate() {
        return _itemRebateStartDate;
    }

    @Override
    public void setItemRebateStartDate(Date itemRebateStartDate) {
        _itemRebateStartDate = itemRebateStartDate;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public int getRsDetailsSid() {
        return _rsDetailsSid;
    }

    @Override
    public void setRsDetailsSid(int rsDetailsSid) {
        _rsDetailsSid = rsDetailsSid;
    }

    @Override
    public int getRsModelSid() {
        return _rsModelSid;
    }

    @Override
    public void setRsModelSid(int rsModelSid) {
        _rsModelSid = rsModelSid;
    }

    @Override
    public int getFormulaId() {
        return _formulaId;
    }

    @Override
    public void setFormulaId(int formulaId) {
        _formulaId = formulaId;
    }

    @Override
    public Date getItemRsAttachedDate() {
        return _itemRsAttachedDate;
    }

    @Override
    public void setItemRsAttachedDate(Date itemRsAttachedDate) {
        _itemRsAttachedDate = itemRsAttachedDate;
    }

    @Override
    public int getIfpModelSid() {
        return _ifpModelSid;
    }

    @Override
    public void setIfpModelSid(int ifpModelSid) {
        _ifpModelSid = ifpModelSid;
    }

    @Override
    public int getDeductionCalendarMasterSid() {
        return _deductionCalendarMasterSid;
    }

    @Override
    public void setDeductionCalendarMasterSid(int deductionCalendarMasterSid) {
        _deductionCalendarMasterSid = deductionCalendarMasterSid;
    }

    @Override
    public int getNetSalesFormulaMasterSid() {
        return _netSalesFormulaMasterSid;
    }

    @Override
    public void setNetSalesFormulaMasterSid(int netSalesFormulaMasterSid) {
        _netSalesFormulaMasterSid = netSalesFormulaMasterSid;
    }

    @Override
    public String getEvaluationRule() {
        return _evaluationRule;
    }

    @Override
    public void setEvaluationRule(String evaluationRule) {
        _evaluationRule = evaluationRule;
    }

    @Override
    public String getNetSalesRule() {
        return _netSalesRule;
    }

    @Override
    public void setNetSalesRule(String netSalesRule) {
        _netSalesRule = netSalesRule;
    }

    @Override
    public String getFormulaType() {
        return _formulaType;
    }

    @Override
    public void setFormulaType(String formulaType) {
        _formulaType = formulaType;
    }

    @Override
    public String getCalculationRule() {
        return _calculationRule;
    }

    @Override
    public void setCalculationRule(String calculationRule) {
        _calculationRule = calculationRule;
    }

    @Override
    public String getCalculationRuleBundle() {
        return _calculationRuleBundle;
    }

    @Override
    public void setCalculationRuleBundle(String calculationRuleBundle) {
        _calculationRuleBundle = calculationRuleBundle;
    }

    @Override
    public String getEvaluationRuleBundle() {
        return _evaluationRuleBundle;
    }

    @Override
    public void setEvaluationRuleBundle(String evaluationRuleBundle) {
        _evaluationRuleBundle = evaluationRuleBundle;
    }

    @Override
    public RsDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (RsDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RsDetailsImpl rsDetailsImpl = new RsDetailsImpl();

        rsDetailsImpl.setRebateAmount(getRebateAmount());
        rsDetailsImpl.setItemRsAttachedStatus(getItemRsAttachedStatus());
        rsDetailsImpl.setFormulaMethodId(getFormulaMethodId());
        rsDetailsImpl.setItemMasterSid(getItemMasterSid());
        rsDetailsImpl.setRebatePlanMasterSid(getRebatePlanMasterSid());
        rsDetailsImpl.setModifiedDate(getModifiedDate());
        rsDetailsImpl.setBundleNo(getBundleNo());
        rsDetailsImpl.setRecordLockStatus(getRecordLockStatus());
        rsDetailsImpl.setCreatedDate(getCreatedDate());
        rsDetailsImpl.setCreatedBy(getCreatedBy());
        rsDetailsImpl.setSource(getSource());
        rsDetailsImpl.setItemRebateEndDate(getItemRebateEndDate());
        rsDetailsImpl.setBatchId(getBatchId());
        rsDetailsImpl.setItemRebateStartDate(getItemRebateStartDate());
        rsDetailsImpl.setModifiedBy(getModifiedBy());
        rsDetailsImpl.setInboundStatus(getInboundStatus());
        rsDetailsImpl.setRsDetailsSid(getRsDetailsSid());
        rsDetailsImpl.setRsModelSid(getRsModelSid());
        rsDetailsImpl.setFormulaId(getFormulaId());
        rsDetailsImpl.setItemRsAttachedDate(getItemRsAttachedDate());
        rsDetailsImpl.setIfpModelSid(getIfpModelSid());
        rsDetailsImpl.setDeductionCalendarMasterSid(getDeductionCalendarMasterSid());
        rsDetailsImpl.setNetSalesFormulaMasterSid(getNetSalesFormulaMasterSid());
        rsDetailsImpl.setEvaluationRule(getEvaluationRule());
        rsDetailsImpl.setNetSalesRule(getNetSalesRule());
        rsDetailsImpl.setFormulaType(getFormulaType());
        rsDetailsImpl.setCalculationRule(getCalculationRule());
        rsDetailsImpl.setCalculationRuleBundle(getCalculationRuleBundle());
        rsDetailsImpl.setEvaluationRuleBundle(getEvaluationRuleBundle());

        rsDetailsImpl.resetOriginalValues();

        return rsDetailsImpl;
    }

    @Override
    public int compareTo(RsDetails rsDetails) {
        int primaryKey = rsDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof RsDetails)) {
            return false;
        }

        RsDetails rsDetails = (RsDetails) obj;

        int primaryKey = rsDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<RsDetails> toCacheModel() {
        RsDetailsCacheModel rsDetailsCacheModel = new RsDetailsCacheModel();

        rsDetailsCacheModel.rebateAmount = getRebateAmount();

        rsDetailsCacheModel.itemRsAttachedStatus = getItemRsAttachedStatus();

        rsDetailsCacheModel.formulaMethodId = getFormulaMethodId();

        String formulaMethodId = rsDetailsCacheModel.formulaMethodId;

        if ((formulaMethodId != null) && (formulaMethodId.length() == 0)) {
            rsDetailsCacheModel.formulaMethodId = null;
        }

        rsDetailsCacheModel.itemMasterSid = getItemMasterSid();

        rsDetailsCacheModel.rebatePlanMasterSid = getRebatePlanMasterSid();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            rsDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            rsDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        rsDetailsCacheModel.bundleNo = getBundleNo();

        String bundleNo = rsDetailsCacheModel.bundleNo;

        if ((bundleNo != null) && (bundleNo.length() == 0)) {
            rsDetailsCacheModel.bundleNo = null;
        }

        rsDetailsCacheModel.recordLockStatus = getRecordLockStatus();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            rsDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            rsDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        rsDetailsCacheModel.createdBy = getCreatedBy();

        rsDetailsCacheModel.source = getSource();

        String source = rsDetailsCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            rsDetailsCacheModel.source = null;
        }

        Date itemRebateEndDate = getItemRebateEndDate();

        if (itemRebateEndDate != null) {
            rsDetailsCacheModel.itemRebateEndDate = itemRebateEndDate.getTime();
        } else {
            rsDetailsCacheModel.itemRebateEndDate = Long.MIN_VALUE;
        }

        rsDetailsCacheModel.batchId = getBatchId();

        String batchId = rsDetailsCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            rsDetailsCacheModel.batchId = null;
        }

        Date itemRebateStartDate = getItemRebateStartDate();

        if (itemRebateStartDate != null) {
            rsDetailsCacheModel.itemRebateStartDate = itemRebateStartDate.getTime();
        } else {
            rsDetailsCacheModel.itemRebateStartDate = Long.MIN_VALUE;
        }

        rsDetailsCacheModel.modifiedBy = getModifiedBy();

        rsDetailsCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = rsDetailsCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            rsDetailsCacheModel.inboundStatus = null;
        }

        rsDetailsCacheModel.rsDetailsSid = getRsDetailsSid();

        rsDetailsCacheModel.rsModelSid = getRsModelSid();

        rsDetailsCacheModel.formulaId = getFormulaId();

        Date itemRsAttachedDate = getItemRsAttachedDate();

        if (itemRsAttachedDate != null) {
            rsDetailsCacheModel.itemRsAttachedDate = itemRsAttachedDate.getTime();
        } else {
            rsDetailsCacheModel.itemRsAttachedDate = Long.MIN_VALUE;
        }

        rsDetailsCacheModel.ifpModelSid = getIfpModelSid();

        rsDetailsCacheModel.deductionCalendarMasterSid = getDeductionCalendarMasterSid();

        rsDetailsCacheModel.netSalesFormulaMasterSid = getNetSalesFormulaMasterSid();

        rsDetailsCacheModel.evaluationRule = getEvaluationRule();

        String evaluationRule = rsDetailsCacheModel.evaluationRule;

        if ((evaluationRule != null) && (evaluationRule.length() == 0)) {
            rsDetailsCacheModel.evaluationRule = null;
        }

        rsDetailsCacheModel.netSalesRule = getNetSalesRule();

        String netSalesRule = rsDetailsCacheModel.netSalesRule;

        if ((netSalesRule != null) && (netSalesRule.length() == 0)) {
            rsDetailsCacheModel.netSalesRule = null;
        }

        rsDetailsCacheModel.formulaType = getFormulaType();

        String formulaType = rsDetailsCacheModel.formulaType;

        if ((formulaType != null) && (formulaType.length() == 0)) {
            rsDetailsCacheModel.formulaType = null;
        }

        rsDetailsCacheModel.calculationRule = getCalculationRule();

        String calculationRule = rsDetailsCacheModel.calculationRule;

        if ((calculationRule != null) && (calculationRule.length() == 0)) {
            rsDetailsCacheModel.calculationRule = null;
        }

        rsDetailsCacheModel.calculationRuleBundle = getCalculationRuleBundle();

        String calculationRuleBundle = rsDetailsCacheModel.calculationRuleBundle;

        if ((calculationRuleBundle != null) &&
                (calculationRuleBundle.length() == 0)) {
            rsDetailsCacheModel.calculationRuleBundle = null;
        }

        rsDetailsCacheModel.evaluationRuleBundle = getEvaluationRuleBundle();

        String evaluationRuleBundle = rsDetailsCacheModel.evaluationRuleBundle;

        if ((evaluationRuleBundle != null) &&
                (evaluationRuleBundle.length() == 0)) {
            rsDetailsCacheModel.evaluationRuleBundle = null;
        }

        return rsDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(59);

        sb.append("{rebateAmount=");
        sb.append(getRebateAmount());
        sb.append(", itemRsAttachedStatus=");
        sb.append(getItemRsAttachedStatus());
        sb.append(", formulaMethodId=");
        sb.append(getFormulaMethodId());
        sb.append(", itemMasterSid=");
        sb.append(getItemMasterSid());
        sb.append(", rebatePlanMasterSid=");
        sb.append(getRebatePlanMasterSid());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", bundleNo=");
        sb.append(getBundleNo());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", itemRebateEndDate=");
        sb.append(getItemRebateEndDate());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", itemRebateStartDate=");
        sb.append(getItemRebateStartDate());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", rsDetailsSid=");
        sb.append(getRsDetailsSid());
        sb.append(", rsModelSid=");
        sb.append(getRsModelSid());
        sb.append(", formulaId=");
        sb.append(getFormulaId());
        sb.append(", itemRsAttachedDate=");
        sb.append(getItemRsAttachedDate());
        sb.append(", ifpModelSid=");
        sb.append(getIfpModelSid());
        sb.append(", deductionCalendarMasterSid=");
        sb.append(getDeductionCalendarMasterSid());
        sb.append(", netSalesFormulaMasterSid=");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append(", evaluationRule=");
        sb.append(getEvaluationRule());
        sb.append(", netSalesRule=");
        sb.append(getNetSalesRule());
        sb.append(", formulaType=");
        sb.append(getFormulaType());
        sb.append(", calculationRule=");
        sb.append(getCalculationRule());
        sb.append(", calculationRuleBundle=");
        sb.append(getCalculationRuleBundle());
        sb.append(", evaluationRuleBundle=");
        sb.append(getEvaluationRuleBundle());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(91);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.RsDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>rebateAmount</column-name><column-value><![CDATA[");
        sb.append(getRebateAmount());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemRsAttachedStatus</column-name><column-value><![CDATA[");
        sb.append(getItemRsAttachedStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaMethodId</column-name><column-value><![CDATA[");
        sb.append(getFormulaMethodId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemMasterSid</column-name><column-value><![CDATA[");
        sb.append(getItemMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanMasterSid</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>bundleNo</column-name><column-value><![CDATA[");
        sb.append(getBundleNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemRebateEndDate</column-name><column-value><![CDATA[");
        sb.append(getItemRebateEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemRebateStartDate</column-name><column-value><![CDATA[");
        sb.append(getItemRebateStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsModelSid</column-name><column-value><![CDATA[");
        sb.append(getRsModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaId</column-name><column-value><![CDATA[");
        sb.append(getFormulaId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemRsAttachedDate</column-name><column-value><![CDATA[");
        sb.append(getItemRsAttachedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ifpModelSid</column-name><column-value><![CDATA[");
        sb.append(getIfpModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deductionCalendarMasterSid</column-name><column-value><![CDATA[");
        sb.append(getDeductionCalendarMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>netSalesFormulaMasterSid</column-name><column-value><![CDATA[");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>evaluationRule</column-name><column-value><![CDATA[");
        sb.append(getEvaluationRule());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>netSalesRule</column-name><column-value><![CDATA[");
        sb.append(getNetSalesRule());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaType</column-name><column-value><![CDATA[");
        sb.append(getFormulaType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>calculationRule</column-name><column-value><![CDATA[");
        sb.append(getCalculationRule());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>calculationRuleBundle</column-name><column-value><![CDATA[");
        sb.append(getCalculationRuleBundle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>evaluationRuleBundle</column-name><column-value><![CDATA[");
        sb.append(getEvaluationRuleBundle());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
