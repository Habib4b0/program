<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>
<sql>
	<entity id="automaticRelationCheck">
		<query> 
        <![CDATA[
            SELECT
	CASE
		WHEN EXISTS(
			SELECT
				1
			from
				RELATIONSHIP_BUILDER
			where
				RELATIONSHIP_BUILDER_SID = ? AND BUILD_TYPE = 'Automatic'
		) THEN 1
		ELSE 0
	END;
        ]]>

		</query>
	</entity>
	<entity id="relationShipSubQueryForSubQuery">
		<query> 
        <![CDATA[            
SELECT
			RELATIONSHIP_LEVEL_Values
		from
			RELATIONSHIP_LEVEL_DEFINITION
		where
			level_no = ?
			and RELATIONSHIP_BUILDER_SID = ?
			and VERSION_NO=?

         ]]>
		</query>
	</entity>
	<entity id="relationShipSubQueryToInsertAutomaticData">
		<query> 
        <![CDATA[            
INSERT
	INTO
		#SELECTED_RElATION_SHIP(
			RELATIONSHIP_LEVEL_VALUES,
			RELATIONSHIP_BUILDER_SID,
			HIERARCHY_LEVEL_DEFINITION_SID,
			LEVEL_NO,
			LEVEL_NAME,
			PARENT_NODE,
			HIERARCHY_NO,
			FLAG,
			CREATED_BY,
			CREATED_DATE,
			MODIFIED_BY,
			MODIFIED_DATE,
			VERSION_NO,
			PARENT_HIERARCHY_NO,
			NEETTOINSERT
		) ?
         ]]>
		</query>
	</entity>
	<entity id="Temp Insert Relationship">
		<query> 
        <![CDATA[            
IF Object_id('TEMPDB..#SELECTED_RElATION_SHIP') IS NOT NULL DROP
	TABLE
		#SELECTED_RElATION_SHIP CREATE
			TABLE
				#SELECTED_RElATION_SHIP(
					RELATIONSHIP_LEVEL_VALUES INT,
					RELATIONSHIP_BUILDER_SID INT,
					HIERARCHY_LEVEL_DEFINITION_SID INT,
					LEVEL_NO INT,
					LEVEL_NAME VARCHAR(500),
					PARENT_NODE VARCHAR(500),
					HIERARCHY_NO VARCHAR(500),
					FLAG VARCHAR(500),
					CREATED_BY INT,
					CREATED_DATE DATETIME,
					MODIFIED_BY INT,
					MODIFIED_DATE DATETIME,
					VERSION_NO INT,
					PARENT_HIERARCHY_NO VARCHAR(500),
					NEETTOINSERT BIT
				) INSERT
					into
						#SELECTED_RElATION_SHIP(
							RELATIONSHIP_LEVEL_VALUES,
							RELATIONSHIP_BUILDER_SID,
							HIERARCHY_LEVEL_DEFINITION_SID,
							LEVEL_NO,
							LEVEL_NAME,
							PARENT_NODE,
							HIERARCHY_NO,
							FLAG,
							CREATED_BY,
							CREATED_DATE,
							MODIFIED_BY,
							MODIFIED_DATE,
							VERSION_NO,
							PARENT_HIERARCHY_NO,
							NEETTOINSERT
						) select
							RELATIONSHIP_LEVEL_VALUES,
							RELATIONSHIP_BUILDER_SID,
							HIERARCHY_LEVEL_DEFINITION_SID,
							LEVEL_NO,
							LEVEL_NAME,
							PARENT_NODE,
							HIERARCHY_NO,
							FLAG,
							CREATED_BY,
							CREATED_DATE,
							MODIFIED_BY,
							MODIFIED_DATE,
							VERSION_NO,
							PARENT_HIERARCHY_NO,
							0
						From
							RELATIONSHIP_LEVEL_DEFINITION
						where RELATIONSHIP_BUILDER_SID = ? and VERSION_NO in (?)  ?
						
						
						 INSERT
								INTO
									RELATIONSHIP_LEVEL_DEFINITION(
										RELATIONSHIP_LEVEL_VALUES,
										RELATIONSHIP_BUILDER_SID,
										HIERARCHY_LEVEL_DEFINITION_SID,
										LEVEL_NO,
										LEVEL_NAME,
										PARENT_NODE,
										HIERARCHY_NO,
										FLAG,
										CREATED_BY,
										CREATED_DATE,
										MODIFIED_BY,
										MODIFIED_DATE,
										VERSION_NO,
										PARENT_HIERARCHY_NO
									) select
							RELATIONSHIP_LEVEL_VALUES,
							RELATIONSHIP_BUILDER_SID,
							HIERARCHY_LEVEL_DEFINITION_SID,
							LEVEL_NO,
							LEVEL_NAME,
							PARENT_NODE,
							HIERARCHY_NO,
							FLAG,
							CREATED_BY,
							CREATED_DATE,
							MODIFIED_BY,
							MODIFIED_DATE,
							VERSION_NO,
							PARENT_HIERARCHY_NO
						From
							#SELECTED_RElATION_SHIP Where NEETTOINSERT=1
						
         ]]>
		</query>
	</entity>
	<entity id="checkForUpdateInAutomaticRelation">
		<query> 
        <![CDATA[   
        
                 
 INSERT
					into
						#SELECTED_RElATION_HIERARCHY_NO(
							contract_name,
							contract_master_sid,
							HIERARCHY_NO
						) SELECT
							'a',
							RELATIONSHIP_LEVEL_DEFINITION.RELATIONSHIP_LEVEL_VALUES,
							RELATIONSHIP_LEVEL_DEFINITION.HIERARCHY_NO
						from
							dbo.RELATIONSHIP_LEVEL_DEFINITION as RELATIONSHIP_LEVEL_DEFINITION
						where
							RELATIONSHIP_BUILDER_SID = ?
							and LEVEL_NO = ?
							and VERSION_NO = ?;

 INSERT
					into
						#SELECTED_SYSTEM_HIERARCHY_NO(
							contract_name,
							contract_master_sid,
							HIERARCHY_NO
						) ?;


SET @VAR1=(
SELECT COUNT(1) FROM #SELECTED_RELATION_HIERARCHY_NO A
JOIN 
#SELECTED_SYSTEM_HIERARCHY_NO B 
 ON A.HIERARCHY_NO  LIKE B.HIERARCHY_NO+'%' )

IF ( (@VAR1=(SELECT COUNT(1) FROM #SELECTED_RELATION_HIERARCHY_NO) ) AND (@VAR1=(SELECT COUNT(1) FROM #SELECTED_SYSTEM_HIERARCHY_NO)))
  INSERT into #RELATIONISELIGIBLE
SELECT 
	0
	ELSE INSERT into #RELATIONISELIGIBLE SELECT 
		1
TRUNCATE  TABLE #SELECTED_SYSTEM_HIERARCHY_NO
TRUNCATE  TABLE #SELECTED_RELATION_HIERARCHY_NO		
SET
@VAR1 =0	



         ]]>
		</query>
	</entity>
	<entity id="relationShipLevelInsert">
		<query> 
        <![CDATA[            
        INSERT
	INTO
		dbo.RELATIONSHIP_LEVEL_DEFINITION(
			RELATIONSHIP_BUILDER_SID,
			HIERARCHY_LEVEL_DEFINITION_SID,
			RELATIONSHIP_LEVEL_VALUES,
			LEVEL_NO,
			LEVEL_NAME,
			PARENT_NODE,
			HIERARCHY_NO,
			FLAG,
			CREATED_BY,
			CREATED_DATE,
			MODIFIED_BY,
			MODIFIED_DATE,
			VERSION_NO,
			PARENT_HIERARCHY_NO
		)

SELECT
	RELATIONSHIP_BUILDER_SID,
	HIERARCHY_LEVEL_DEFINITION_SID,
	RELATIONSHIP_LEVEL_VALUES,
	LEVEL_NO,
	LEVEL_NAME,
	PARENT_NODE,
	HIERARCHY_NO,
	'F',
	CREATED_BY,
	CREATED_DATE,
	MODIFIED_BY,
	MODIFIED_DATE,
	VERSION_NO + 1,
	PARENT_HIERARCHY_NO
from
	dbo.RELATIONSHIP_LEVEL_DEFINITION
where
	RELATIONSHIP_BUILDER_SID = ?
	and LEVEL_NO < ?
	and VERSION_NO =?
         ]]>
		</query>
	</entity>
	<entity id="hierarchyByidandVersionNo">
		<query> 
        <![CDATA[            
      select
	*
from
	(
		SELECT
			HLD.HIERARCHY_LEVEL_DEFINITION_SID,
			HIERARCHY_DEFINITION_SID,
			LEVEL_NAME,
			LEVEL_VALUE_REFERENCE,
			LEVEL_NO,
			TABLE_NAME,
			FIELD_NAME,
			HLD.VERSION_NO,
			CASE
				WHEN HLD.LEVEL_VALUE_REFERENCE = 'User Defined' THEN HLV.HIERARCHY_LEVEL_VALUES_SID
				ELSE 0
			END as LEVELVALUEs,
			ROW_NUMBER() over(
				PARTITION by HLD.LEVEL_NAME
			ORDER by
				HLD.LEVEL_NO ASC
			) as rowNo
		from
			HIERARCHY_LEVEL_DEFINITION HLD
		LEFT JOIN dbo.HIERARCHY_LEVEL_VALUES HLV on
			HLD.HIERARCHY_LEVEL_DEFINITION_SID = HLV.HIERARCHY_LEVEL_DEFINITION_SID
		where
			HLD.HIERARCHY_DEFINITION_SID = ?
			and HLD.VERSION_NO = ?
	) a
where
	rowNo = 1
order by
	LEVEL_NO;
         ]]>
		</query>
	</entity>
	<entity id="hierarchyByidandVersionNoBy ProjectionMasterSId Customer">
		<query> 
        <![CDATA[            
     select
	*
from
	(
		SELECT
			HLD.HIERARCHY_LEVEL_DEFINITION_SID,
			HIERARCHY_DEFINITION_SID,
			LEVEL_NAME,
			LEVEL_VALUE_REFERENCE,
			LEVEL_NO,
			TABLE_NAME,
			FIELD_NAME,
			HLD.VERSION_NO,
			CASE
				WHEN HLD.LEVEL_VALUE_REFERENCE = 'User Defined' THEN HLV.HIERARCHY_LEVEL_VALUES_SID
				ELSE 0
			END as LEVELVALUEs,
			ROW_NUMBER() over(
				PARTITION by HLD.LEVEL_NAME
			ORDER by
				HLD.LEVEL_NO ASC
			) as rowNo
		from PROJection_master pm JOIN 
			HIERARCHY_LEVEL_DEFINITION HLD on pm.CUSTOMER_HIERARCHY_SID=HLD.HIerarchy_definition_sid
			and pm.CUSTOMER_HIER_VERSION_NO=hld.version_no
		LEFT JOIN dbo.HIERARCHY_LEVEL_VALUES HLV on
			HLD.HIERARCHY_LEVEL_DEFINITION_SID = HLV.HIERARCHY_LEVEL_DEFINITION_SID
		where
			 projection_master_sid=?
	) a
where
	rowNo = 1
order by
	LEVEL_NO;
         ]]>
		</query>
	</entity>
	<entity id="hierarchyByidandVersionNoBy ProjectionMasterSId PRoduct">
		<query> 
        <![CDATA[            
     select
	*
from
	(
		SELECT
			HLD.HIERARCHY_LEVEL_DEFINITION_SID,
			HIERARCHY_DEFINITION_SID,
			LEVEL_NAME,
			LEVEL_VALUE_REFERENCE,
			LEVEL_NO,
			TABLE_NAME,
			FIELD_NAME,
			HLD.VERSION_NO,
			CASE
				WHEN HLD.LEVEL_VALUE_REFERENCE = 'User Defined' THEN HLV.HIERARCHY_LEVEL_VALUES_SID
				ELSE 0
			END as LEVELVALUEs,
			ROW_NUMBER() over(
				PARTITION by HLD.LEVEL_NAME
			ORDER by
				HLD.LEVEL_NO ASC
			) as rowNo
		from PROJection_master pm JOIN 
			HIERARCHY_LEVEL_DEFINITION HLD on pm.PRODUCT_HIERARCHY_SID=HLD.HIerarchy_definition_sid
			and pm.PRODUCT_HIER_VERSION_NO=hld.version_no
		LEFT JOIN dbo.HIERARCHY_LEVEL_VALUES HLV on
			HLD.HIERARCHY_LEVEL_DEFINITION_SID = HLV.HIERARCHY_LEVEL_DEFINITION_SID
		where
			 projection_master_sid=?
	) a
where
	rowNo = 1
order by
	LEVEL_NO;
         ]]>
		</query>
	</entity>
	<entity id="RelationInsertForIntermediate userDefined">
		<query> 
        <![CDATA[            
       
    INSERT into #SELECTED_RElATION_SHIP
    (
			RELATIONSHIP_BUILDER_SID,
			HIERARCHY_LEVEL_DEFINITION_SID,
			RELATIONSHIP_LEVEL_VALUES,
			LEVEL_NO,
			LEVEL_NAME,
			PARENT_NODE,
			HIERARCHY_NO,
			FLAG,
			CREATED_BY,
			CREATED_DATE,
			MODIFIED_BY,
			MODIFIED_DATE,
			VERSION_NO,
			PARENT_HIERARCHY_NO,
			NEETTOINSERT
		)
	 
SELECT
RLD.RELATIONSHIP_BUILDER_SID,
	? as HIERARCHY_LEVEL_DEFINITION_SID,
	? as RELATIONSHIP_LEVEL_VALUES,
	? as LEVEL_NO,
	'?' as LEVEL_NAME,
	CONCAT( RLD.LEVEL_NO, '~', RLD.RELATIONSHIP_LEVEL_VALUES ) as PARENT_NODE,
	CONCAT( RLD.HIERARCHY_NO,?, '.' ) as HIERARCHY_NO,
	RLD.FLAG,
	RLD.CREATED_BY,
	RLD.CREATED_DATE,
	RLD.MODIFIED_BY,
	RLD.MODIFIED_DATE,
	RLD.VERSION_NO,
	CONCAT( RLD.HIERARCHY_NO,?, '.' ) as PARENT_HIERARCHY_NO,
	1
FROM
	#SELECTED_RElATION_SHIP RLD
WHERE
	RLD.LEVEL_NO = ?
	and RLD.VERSION_NO = ?
	AND RLD.RELATIONSHIP_BUILDER_SID = ? 
	UNION 
SELECT
	RLD.RELATIONSHIP_BUILDER_SID,
	RLD1.HIERARCHY_LEVEL_DEFINITION_SID,
	RLD1.RELATIONSHIP_LEVEL_VALUES,
	? as LEVEL_NO,
	'?' as LEVEL_NAME,
	CONCAT( RLD.LEVEL_NO, '~', RLD.RELATIONSHIP_LEVEL_VALUES ) as PARENT_NODE,
	 RLD1.HIERARCHY_NO HIERARCHY_NO,
	RLD.FLAG,
	RLD.CREATED_BY,
	RLD.CREATED_DATE,
	RLD.MODIFIED_BY,
	RLD.MODIFIED_DATE,
	RLD.VERSION_NO,
	RLD1.PARENT_HIERARCHY_NO  as PARENT_HIERARCHY_NO,
	1
FROM
	RELATIONSHIP_LEVEL_DEFINITION RLD
JOIN RELATIONSHIP_LEVEL_DEFINITION RLD1 on
	RLD.RELATIONSHIP_BUILDER_SID = RLD1.RELATIONSHIP_BUILDER_SID
	and RLD1.HIERARCHY_NO like RLD.HIERARCHY_NO + '%'
	AND RLD.LEVEL_NO = ?
	AND RLD1.LEVEL_NO = ?
	and RLD1.VERSION_NO = ?
	and RLD.VERSION_NO = ?
WHERE
	RLD.RELATIONSHIP_BUILDER_SID = ?

	
         ]]>
		</query>
	</entity>
        <entity id="manualRelationCheck">
		<query> 
        <![CDATA[
            SELECT
	CASE
		WHEN EXISTS(
			SELECT
				1
			from
				RELATIONSHIP_BUILDER RB
                                join HIERARCHY_DEFINITION HD on HD.HIERARCHY_DEFINITION_SID = RB.HIERARCHY_DEFINITION_SID
                                join HELPER_TABLE HT on HT.HELPER_TABLE_SID = HD.HIERARCHY_CATEGORY and HT.DESCRIPTION = 'Product Hierarchy'                                
			where
				RB.RELATIONSHIP_BUILDER_SID = ?
		) THEN 1
		ELSE 0
	END;
        ]]>

		</query>
	</entity>
        <entity id="Delete unwanted Userdefined Level">
		<query> 
        <![CDATA[
        DELETE RLD
from
	dbo.RELATIONSHIP_LEVEL_DEFINITION RLD
JOIN dbo.HIERARCHY_LEVEL_DEFINITION HLD on
	RLD.HIERARCHY_LEVEL_DEFINITION_SID = HLD.HIERARCHY_LEVEL_DEFINITION_SID
	and HLD.LEVEL_VALUE_REFERENCE = 'User Defined'
where
	HIERARCHY_NO not in(
		SELECT
			rld1.HIERARCHY_NO
		from
			dbo.RELATIONSHIP_LEVEL_DEFINITION as RLD
		JOIN RELATIONSHIP_LEVEL_DEFINITION as RLD1 on
			RLD.RELATIONSHIP_BUILDER_SID = RLD1.RELATIONSHIP_BUILDER_SID
			and rld.VERSION_NO = RLd1.VERSION_NO
			and rld.LEVEL_NO =(
				SELECT
					max( LEVEL_NO )
				from
					RELATIONSHIP_LEVEL_DEFINITION
				where
					RELATIONSHIP_BUILDER_SID = ?
					and VERSION_NO = ?
			)
			and rld.HIERARCHY_NO like rld1.HIERARCHY_NO + '%'
			and RLD.RELATIONSHIP_BUILDER_SID = ?
	)
	and RELATIONSHIP_BUILDER_SID = ?
	and RLD.VERSION_NO = ?
        ]]>

		</query>
	</entity>
        <entity id="Check Relation to Update">
		<query> 
        <![CDATA[
       IF Object_id('TEMPDB..#RELATIONISELIGIBLE') IS NOT NULL DROP
	TABLE
		#RELATIONISELIGIBLE CREATE
			TABLE
				#RELATIONISELIGIBLE(
					COUNTID INT
				)
IF Object_id('TEMPDB..#SELECTED_RElATION_HIERARCHY_NO') IS NOT NULL DROP
					TABLE
						#SELECTED_RElATION_HIERARCHY_NO CREATE
							TABLE
								#SELECTED_RElATION_HIERARCHY_NO(
									contract_name VARCHAR(500),
									contract_master_sid VARCHAR(500),
									HIERARCHY_NO VARCHAR(500)
								) 
								
IF Object_id('TEMPDB..#SELECTED_SYSTEM_HIERARCHY_NO') IS NOT NULL DROP
	TABLE
		#SELECTED_SYSTEM_HIERARCHY_NO CREATE
			TABLE
				#SELECTED_SYSTEM_HIERARCHY_NO(
					contract_name VARCHAR(500),
					contract_master_sid VARCHAR(500),
					HIERARCHY_NO VARCHAR(500)
				)
				DECLARE @VAR1 INT
				                    
IF Object_id('TEMPDB..#SELECTED_RElATION_SHIP') IS NOT NULL DROP
	TABLE
		#SELECTED_RElATION_SHIP CREATE
			TABLE
				#SELECTED_RElATION_SHIP(
					RELATIONSHIP_LEVEL_SID INT,
					RELATIONSHIP_BUILDER_SID INT,
					RELATIONSHIP_LEVEL_VALUES INT,
					LEVEL_NO INT,
					LEVEL_NAME VARCHAR(500),
					HIERARCHY_NO VARCHAR(500),
					VERSION_NO INT ,
					MODIFIED_DATE DATETIME
				) INSERT
					into
						#SELECTED_RElATION_SHIP(
							RELATIONSHIP_LEVEL_SID,
							RELATIONSHIP_BUILDER_SID,
							RELATIONSHIP_LEVEL_VALUES,
							LEVEL_NO,
							LEVEL_NAME,
							HIERARCHY_NO,
							VERSION_NO,MODIFIED_DATE
						)
						select RELATIONSHIP_LEVEL_SID,
							RELATIONSHIP_BUILDER_SID,
							RELATIONSHIP_LEVEL_VALUES,
							LEVEL_NO,
							LEVEL_NAME,
							HIERARCHY_NO,
							VERSION_NO,MODIFIED_DATE From RELATIONSHIP_LEVEL_DEFINITION  where RELATIONSHIP_BUILDER_SID = ? and VERSION_NO in (?)   
                    
				
       ?
       SELECT SUM(COUNTId) as COUNT from  #RELATIONISELIGIBLE
       
       
       
       
        ]]>

		</query>
	</entity>


</sql>