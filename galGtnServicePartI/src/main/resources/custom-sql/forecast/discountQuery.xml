<?xml version="1.0" encoding="UTF-8"?>
<custom-sql>
    <sql id="ch.discountPopulate">
		<![CDATA[
                    UPDATE A SET A.DISCOUNT_AMOUNT=?DA/SEL_COUNT.DIV_COUNT
                    FROM 
                    ST_CH_PROJECTION_DISCOUNT A JOIN PROJECTION_DETAILS E ON E.PROJECTION_DETAILS_SID=A.PROJECTION_DETAILS_SID 
                    AND  E.PROJECTION_MASTER_SID = ?PM AND A.SESSION_ID=?SID
                    JOIN (SELECT CCPMAP.CCP_DETAILS_SID,
                         HLD.HIERARCHY_NO,
                         HLD.RELATIONSHIP_LEVEL_SID
                     FROM   (SELECT RLD.HIERARCHY_NO,
                                 CCP.CCP_DETAILS_SID
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                          JOIN   CCP_MAP CCP ON RLD.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
                          JOIN   PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID AND PD.PROJECTION_MASTER_SID = ?PM
                          JOIN    PROJECTION_CUST_HIERARCHY   PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID
                                 AND PCH.PROJECTION_MASTER_SID=?PM
                          ) CCPMAP JOIN
                         (SELECT RLD1.HIERARCHY_NO,
                                 RLD1.RELATIONSHIP_LEVEL_SID,
                                 RLD1.LEVEL_NO
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD1
                          JOIN   PROJECTION_CUST_HIERARCHY    PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD1.RELATIONSHIP_LEVEL_SID AND PCH.PROJECTION_MASTER_SID =  ?PM
                         AND  RLD1.HIERARCHY_NO LIKE '%') HLD ON CCPMAP.HIERARCHY_NO LIKE HLD.HIERARCHY_NO+'%'
                    WHERE HLD.HIERARCHY_NO in(?HIE)
                   )CCP ON CCP.CCP_DETAILS_SID=E.CCP_DETAILS_SID 
                   JOIN RELATIONSHIP_LEVEL_DEFINITION H ON CCP.HIERARCHY_NO=H.HIERARCHY_NO
                   JOIN "PERIOD" I ON A.PERIOD_SID=I.PERIOD_SID AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
                   JOIN (SELECT count(I.PERIOD_SID)+0.0 DIV_COUNT,H.HIERARCHY_NO,I."YEAR"?FRE FROM 
                   ST_CH_PROJECTION_DISCOUNT A JOIN 
                   PROJECTION_DETAILS E ON E.PROJECTION_DETAILS_SID=A.PROJECTION_DETAILS_SID AND  E.PROJECTION_MASTER_SID = ?PM AND A.SESSION_ID=?SID
                   JOIN (SELECT CCPMAP.CCP_DETAILS_SID,
                         HLD.HIERARCHY_NO,
                         HLD.RELATIONSHIP_LEVEL_SID
                    FROM   (SELECT RLD.HIERARCHY_NO,
                                 CCP.CCP_DETAILS_SID
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                          JOIN   CCP_MAP CCP ON RLD.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
                          JOIN   PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID AND PD.PROJECTION_MASTER_SID = ?PM
                          JOIN    PROJECTION_CUST_HIERARCHY   PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID
                                 AND PCH.PROJECTION_MASTER_SID=?PM
                          ) CCPMAP JOIN
                         (SELECT RLD1.HIERARCHY_NO,
                                 RLD1.RELATIONSHIP_LEVEL_SID,
                                 RLD1.LEVEL_NO
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD1
                          JOIN   PROJECTION_CUST_HIERARCHY    PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD1.RELATIONSHIP_LEVEL_SID AND PCH.PROJECTION_MASTER_SID =  ?PM
                         AND  RLD1.HIERARCHY_NO LIKE '%') HLD ON CCPMAP.HIERARCHY_NO LIKE HLD.HIERARCHY_NO+'%'
                    WHERE  HLD.HIERARCHY_NO in(?HIE)
                   )CCP ON CCP.CCP_DETAILS_SID=E.CCP_DETAILS_SID 
                   JOIN RELATIONSHIP_LEVEL_DEFINITION H ON CCP.HIERARCHY_NO=H.HIERARCHY_NO
                   JOIN "PERIOD" I ON A.PERIOD_SID=I.PERIOD_SID AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
                   GROUP BY H.HIERARCHY_NO,I."YEAR"?FRE) SEL_COUNT 
                   ON H.HIERARCHY_NO=SEL_COUNT.HIERARCHY_NO AND I.?PER=SEL_COUNT.?PER AND I."YEAR"=SEL_COUNT."YEAR";
		]]>
    </sql>
    <sql id="ch.generateQuery">
        <![CDATA[
            SELECT   Min(CP.CHECK_RECORD) AS CHECK_RECORD ,            
            H.LEVEL_NO,
            CCP.HIERARCHY_NO,
            H.RELATIONSHIP_LEVEL_VALUES,
            H.LEVEL_NAME,
            I."YEAR",
            ?FRE
            H.RELATIONSHIP_LEVEL_SID,
            ?HIST
            0 AS AP_TABLE_INDICATOR,
            Count(*) AS NET_COUNT,            
            Sum(CP.UNCHECK_COUNT) AS UNCHECK_COUNT,
            NULL  AS PRODUCT_GROWTH,
            NULL  AS ACCOUNT_GROWTH
            FROM ST_CH_ACTUAL_SALES CHAS
            CROSS APPLY (SELECT Sum(B.ACTUAL_SALES) AS ACTUAL_SALES,Avg(B.ACTUAL_RATE) AS ACTUAL_RATE,
                    B.PERIOD_SID,
                    B.PROJECTION_DETAILS_SID,
                    Min(CASE( CHECK_RECORD )
                          WHEN 1 THEN 1
                          ELSE 0
                        END) AS CHECK_RECORD,
                    Sum(CASE( A.CHECK_RECORD )
                          WHEN 1 THEN 0
                          ELSE 1
                        END) AS UNCHECK_COUNT
             FROM   ST_CH_ACTUAL_DISCOUNT B
             JOIN   ST_CH_DISCOUNT_PROJ_MASTER A ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                                AND A.RS_MODEL_SID = B.RS_MODEL_SID
                                                AND A.USER_ID = B.USER_ID
                                                AND A.SESSION_ID = B.SESSION_ID
             WHERE  B.PROJECTION_DETAILS_SID = CHAS.PROJECTION_DETAILS_SID
                    AND B.PERIOD_SID = CHAS.PERIOD_SID
                    AND B.USER_ID = CHAS.USER_ID
                    AND B.SESSION_ID = CHAS.SESSION_ID
					AND B.USER_ID = ?UID
                    AND B.SESSION_ID = ?SID
             GROUP  BY B.PROJECTION_DETAILS_SID,
                       B.PERIOD_SID)CP,
            PROJECTION_DETAILS E,
            RELATIONSHIP_LEVEL_DEFINITION H,
            "PERIOD" I,
            ?CCPQUERY
            WHERE CP.PROJECTION_DETAILS_SID = E.PROJECTION_DETAILS_SID
            AND CHAS.USER_ID = ?UID
            AND CHAS.SESSION_ID = ?SID
            AND E.PROJECTION_MASTER_SID = ?PM
            AND E.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
            AND H.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
            AND CHAS.PERIOD_SID = I.PERIOD_SID
            AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
            GROUP BY H.LEVEL_NO,
               H.RELATIONSHIP_LEVEL_VALUES,
               H.LEVEL_NAME,
               CCP.HIERARCHY_NO,
               I."YEAR",
               ?FRE
               H.RELATIONSHIP_LEVEL_SID
        UNION
           SELECT   Min(CP.CHECK_RECORD) AS CHECK_RECORD,
            H.LEVEL_NO,
            CCP.HIERARCHY_NO,
            H.RELATIONSHIP_LEVEL_VALUES,
            H.LEVEL_NAME,
            I."YEAR",
            ?FRE
            H.RELATIONSHIP_LEVEL_SID,
            ?FUT
            1  AS AP_TABLE_INDICATOR,
            Sum(NET_COUNT) AS NET_COUNT,
            Sum(CP.UNCHECK_COUNT) AS UNCHECK_COUNT,
            Avg(CP.PRODUCT_GROWTH) AS PRODUCT_GROWTH,
            Avg(CP.ACCOUNT_GROWTH) AS ACCOUNT_GROWTH
            FROM        ST_CH_SALES_PROJECTION CHSP
            CROSS APPLY (SELECT Sum(B.DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,
                    Avg(B.PRODUCT_GROWTH)   AS PRODUCT_GROWTH,
                    Avg(B.ACCOUNT_GROWTH)   AS ACCOUNT_GROWTH,
                    Count(*)                AS NET_COUNT,
                    Min(CASE( CHECK_RECORD )
                          WHEN 1 THEN 1
                          ELSE 0
                        END) AS CHECK_RECORD,
                    Sum(CASE( A.CHECK_RECORD )
                          WHEN 1 THEN 0
                          ELSE 1
                        END)  AS UNCHECK_COUNT,
                    B.PERIOD_SID,
                    B.PROJECTION_DETAILS_SID
             FROM   ST_CH_PROJECTION_DISCOUNT B
             JOIN   ST_CH_DISCOUNT_PROJ_MASTER A ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                                AND A.RS_MODEL_SID = B.RS_MODEL_SID
                                                AND A.USER_ID = B.USER_ID
                                                AND A.SESSION_ID = B.SESSION_ID
             WHERE  B.PROJECTION_DETAILS_SID = CHSP.PROJECTION_DETAILS_SID
                    AND B.PERIOD_SID = CHSP.PERIOD_SID
                    AND B.USER_ID = CHSP.USER_ID
                    AND B.SESSION_ID = CHSP.SESSION_ID
                    AND B.USER_ID = ?UID
                    AND B.SESSION_ID = ?SID
             GROUP  BY B.PROJECTION_DETAILS_SID,
                       B.PERIOD_SID)CP,
            PROJECTION_DETAILS E,
            RELATIONSHIP_LEVEL_DEFINITION H,
            "PERIOD" I,
            ?CCPQUERY
            WHERE       CP.PROJECTION_DETAILS_SID = E.PROJECTION_DETAILS_SID
            AND CHSP.USER_ID = ?UID
            AND CHSP.SESSION_ID = ?SID
            AND E.PROJECTION_MASTER_SID = ?PM
            AND E.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
            AND H.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
            AND CP.PERIOD_SID = I.PERIOD_SID
            AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
            GROUP BY H.LEVEL_NO,
               H.RELATIONSHIP_LEVEL_VALUES,
               H.LEVEL_NAME,
               CCP.HIERARCHY_NO,
               I."YEAR",
               ?FRE
               H.RELATIONSHIP_LEVEL_SID
            ORDER       BY H.RELATIONSHIP_LEVEL_VALUES,
               I."YEAR",
               ?FRE
               AP_TABLE_INDICATOR 

        ]]>
    </sql>
    
    
    <sql id="m.program-code-count-query">
        <![CDATA[
            SELECT
                COUNT(DISTINCT CM.CONTRACT_MASTER_SID)
            FROM
                CCP_DETAILS CCP1
            JOIN @CCP CCP2
                ON CCP2.CCP_DETAILS_SID = CCP1.CCP_DETAILS_SID 
            JOIN CONTRACT_MASTER CM
                ON CCP1.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID;
        ]]>
    </sql>
    
    <sql id="m.program-code-query">
        <![CDATA[
            SELECT
                DISTINCT CM.CONTRACT_NAME
            FROM
                CCP_DETAILS CCP1
            JOIN @CCP CCP2
                ON CCP2.CCP_DETAILS_SID = CCP1.CCP_DETAILS_SID 
            JOIN CONTRACT_MASTER CM
                ON CCP1.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID;
        ]]>
    </sql>
    
    <sql id="DISC_EDIT_TEMP_INSERT_QUERY">
        <![CDATA[
           DECLARE @PROJECTIONMASTERSID INT = ? ,
@USER_ID INT = ? ,
@SESSION_ID INT = ?
INSERT INTO ST_NM_DISCOUNT_PROJ_MASTER
(
   PROJECTION_DETAILS_SID,
   RS_MODEL_SID,
   METHODOLOGY,
   PRICE_GROUP_TYPE,
   NET_FLAG,
   USER_GROUP,
   CHECK_RECORD,
   BASELINE_PERIODS,
   SELECTED_PERIODS,
   USER_ID,
   SESSION_ID,
   LAST_MODIFIED_DATE,
   CALCULATION_PERIODS,
   CALCULATION_BASED,
   FORECAST_START_PERIOD_SID,
   FORECAST_END_PERIOD_SID
)
SELECT
A.PROJECTION_DETAILS_SID,
A.RS_MODEL_SID,
A.METHODOLOGY,
A.PRICE_GROUP_TYPE,
A.NET_FLAG,
A.USER_GROUP,
A.CHECK_RECORD,
A.BASELINE_PERIODS,
A.SELECTED_PERIODS,
@USER_ID,
@SESSION_ID,
GetDate() as LAST_MODIFIED_DATE,
A.CALCULATION_PERIODS,
A.CALCULATION_BASED,
A.FORECAST_START_PERIOD_SID,
A.FORECAST_END_PERIOD_SID
FROM dbo.NM_DISCOUNT_PROJ_MASTER A, dbo.PROJECTION_DETAILS B
WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
AND B.PROJECTION_MASTER_SID=@PROJECTIONMASTERSID;
INSERT INTO ST_NM_ACTUAL_DISCOUNT
(
   PROJECTION_DETAILS_SID,
   RS_MODEL_SID,
   PERIOD_SID,
   ACTUAL_SALES,
   ACTUAL_RATE,
   ACTUAL_PROJECTION_SALES,
   ACTUAL_PROJECTION_RATE,
   ACTUAL_RPU,
   ACTUAL_PROJECTION_RPU,
   USER_ID,
   SESSION_ID
)
SELECT
A.PROJECTION_DETAILS_SID,
A.RS_MODEL_SID,
A.PERIOD_SID,
A.ACTUAL_SALES,
A.ACTUAL_RATE,
A.ACTUAL_PROJECTION_SALES,
A.ACTUAL_PROJECTION_RATE,
A.ACTUAL_RPU,
A.ACTUAL_PROJECTION_RPU,
@USER_ID,
@SESSION_ID
FROM dbo.NM_ACTUAL_DISCOUNT A, dbo.PROJECTION_DETAILS B
WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
AND B.PROJECTION_MASTER_SID=@PROJECTIONMASTERSID;
INSERT INTO ST_NM_DISCOUNT_PROJECTION
(
   PROJECTION_DETAILS_SID,
   RS_MODEL_SID, PERIOD_SID,
   PROJECTION_SALES,
   PROJECTION_RATE,
   ADJUSTMENT_TYPE,
   ADJUSTMENT_BASIS,
   ADJUSTMENT_VALUE,
   ADJUSTMENT_METHODOLOGY,
   PROJECTION_RPU,
   GROWTH,
   REFRESHED_NAME,
   REFRESHED_VALUE,
   DISCOUNT_RATE,
   USER_ID,
   SESSION_ID
)
SELECT
A.PROJECTION_DETAILS_SID,
A.RS_MODEL_SID,
A.PERIOD_SID,
A.PROJECTION_SALES,
A.PROJECTION_RATE,
A.ADJUSTMENT_TYPE,
A.ADJUSTMENT_BASIS,
A.ADJUSTMENT_VALUE,
A.ADJUSTMENT_METHODOLOGY,
A.PROJECTION_RPU,
A.GROWTH,
A.REFRESHED_NAME,
A.REFRESHED_VALUE,
A.DISCOUNT_RATE,
@USER_ID,
@SESSION_ID
FROM dbo.NM_DISCOUNT_PROJECTION A, dbo.PROJECTION_DETAILS B
WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
AND B.PROJECTION_MASTER_SID=@PROJECTIONMASTERSID;

        ]]>
    </sql>
    <sql id="discRatemassPopulate">
        <![CDATA[

DECLARE @INFO TABLE (
  PROJECTION_DETAILS_SID int,
  PERIOD_SID int,
  RS_MODEL_SID int
)

INSERT INTO @INFO (PROJECTION_DETAILS_SID,
PERIOD_SID,
RS_MODEL_SID)
  SELECT
    M.PROJECTION_DETAILS_SID,
    DP.PERIOD_SID,
    RS.RS_MODEL_SID
  FROM ST_NM_DISCOUNT_PROJ_MASTER M,
       PROJECTION_DETAILS B,
       ST_NM_DISCOUNT_PROJECTION DP,
       RS_MODEL RS,
       "PERIOD" P
  WHERE M.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
  AND M.CHECK_RECORD = 1
  AND M.USER_ID = @UID
  AND M.SESSION_ID = @SNID
  AND DP.USER_ID = @UID
  AND DP.SESSION_ID = @SNID
  AND DP.PROJECTION_DETAILS_SID = M.PROJECTION_DETAILS_SID
  AND M.RS_MODEL_SID = RS.RS_MODEL_SID
  AND @DISCTYPE (@SELDISC)
  AND DP.PERIOD_SID = P.PERIOD_SID
  AND P.PERIOD_DATE @PERIODLIST
  AND B.PROJECTION_MASTER_SID = @PROJID

UPDATE DPT
SET @COLUMN1 = @RATE
FROM ST_NM_DISCOUNT_PROJECTION DPT,
@INFO A
WHERE DPT.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
AND DPT.PERIOD_SID = A.PERIOD_SID
AND DPT.RS_MODEL_SID = A.RS_MODEL_SID
AND DPT.USER_ID = @UID
AND DPT.SESSION_ID = @SNID

UPDATE DPT
@COL2
FROM ST_NM_DISCOUNT_PROJECTION DPT,
@INFO A
INNER JOIN ST_NM_SALES_PROJECTION NM
ON A.PROJECTION_DETAILS_SID = NM.PROJECTION_DETAILS_SID
AND A.PERIOD_SID = NM.PERIOD_SID
WHERE DPT.PROJECTION_DETAILS_SID = A.PROJECTION_DETAILS_SID
AND DPT.PERIOD_SID = A.PERIOD_SID
AND DPT.RS_MODEL_SID = A.RS_MODEL_SID
AND DPT.USER_ID = NM.USER_ID
AND DPT.SESSION_ID = NM.SESSION_ID
AND DPT.USER_ID = @UID
AND DPT.SESSION_ID = @SNID
        ]]>
    </sql>
    <sql id="nm.discountGenerate">
		<![CDATA[
                    DECLARE @START_MONTH VARCHAR(2)=?SM
                    DECLARE @START_YEAR VARCHAR(4)=?SY
                    DECLARE @END_MONTH VARCHAR(2)=?EM
                    DECLARE @END_YEAR VARCHAR(4)=?EY
                    DECLARE @VAR CHAR(1)='?DSC'
                    DECLARE @TABLE AS TABLE
                      (
                         CCP_DETAILS_SID        INT,
                         HIERARCHY_NO           VARCHAR(50),
                         RELATIONSHIP_LEVEL_SID INT
                      )

                    INSERT INTO @TABLE
                                (CCP_DETAILS_SID,
                                 HIERARCHY_NO,
                                 RELATIONSHIP_LEVEL_SID)
                    ?CCP

                    DECLARE @TABLE_PROJECTION AS TABLE
                      (
                         PROJECTION_DETAILS_SID INT PRIMARY KEY,
                         PROJECTION_MASTER_SID  INT,
                         CCP_DETAILS_SID        INT
                      )

                    INSERT INTO @TABLE_PROJECTION
                                (PROJECTION_DETAILS_SID,
                                 PROJECTION_MASTER_SID,
                                 CCP_DETAILS_SID)
                    SELECT PROJECTION_DETAILS_SID,
                           PROJECTION_MASTER_SID,
                           CCP_DETAILS_SID
                    FROM   PROJECTION_DETAILS
                    WHERE  PROJECTION_MASTER_SID = ?PM

                    SELECT Min(CS.CHECK_RECORD)                                                         AS CHECK_RECORD,
                           F.LEVEL_NO,
                           E.HIERARCHY_NO,
                           F.RELATIONSHIP_LEVEL_VALUES,
                           F.LEVEL_NAME,
                           I."YEAR",
                           ?FRE
                           CS.RS_NAME,
                           COALESCE(Sum(CS.DISCOUNT_ACTUALS) / NULLIF(Sum(A.ACTUAL_SALES), 0), 0) * 100 AS ACTUAL_RATE,
                           Avg(CS.PROJECTION_RATE)                                                      AS PROJECTION_RATE,
                           0                                                                            AS AP_TABLE_INDICATOR,
                           Max(CS.USER_GROUP)                                                           AS USER_GROUP,
                           Count(*)                                                                     AS CCP_COUNT,
                           Sum(CS.UNCHECK_COUNT)                                                        AS UNCHECK_COUNT,
                           Sum(CS.DISCOUNT_ACTUALS)                                                          AS ACTUAL_SALES,
                           COALESCE(Sum(CS.DISCOUNT_ACTUALS) / NULLIF(Sum(A.ACTUAL_UNITS), 0), 0)       AS ACTUAL_RPU,
                           Sum(CS.ACTUAL_PROJECTION_SALES)                                              AS PROJECTION_SALES,
                           NULL                                                                         AS PROJECTION_RPU,
                           NULL                                                                         AS GROWTH
                    FROM   ST_NM_ACTUAL_SALES A
                           JOIN @TABLE_PROJECTION B
                             ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                           JOIN PERIOD I
                             ON I.PERIOD_SID = A.PERIOD_SID
                           JOIN @TABLE E
                             ON E.CCP_DETAILS_SID = B.CCP_DETAILS_SID
                           JOIN RELATIONSHIP_LEVEL_DEFINITION F
                             ON E.RELATIONSHIP_LEVEL_SID = F.RELATIONSHIP_LEVEL_SID
                           CROSS APPLY (SELECT DM.PROJECTION_DETAILS_SID,
                                               RS_NAME=CASE
                                                         WHEN @VAR = 'R' THEN R.RS_NAME
                                                         ELSE DM.PRICE_GROUP_TYPE
                                                       END,
                                               D.PERIOD_SID,
                                               Sum(ACTUAL_SALES)              AS DISCOUNT_ACTUALS,
                                               Avg(D.ACTUAL_PROJECTION_RATE)  AS PROJECTION_RATE,
                                               Max(DM.USER_GROUP)             AS USER_GROUP,
                                               Min(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 1
                                                     ELSE 0
                                                   END)                       AS CHECK_RECORD,
                                               Sum(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 0
                                                     ELSE 1
                                                   END)                       AS UNCHECK_COUNT,
                                               Sum(D.ACTUAL_PROJECTION_SALES) AS ACTUAL_PROJECTION_SALES
                                        FROM   ST_NM_DISCOUNT_PROJ_MASTER DM
                                               JOIN ST_NM_ACTUAL_DISCOUNT D
                                                 ON D.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID
                                                    AND D.RS_MODEL_SID = DM.RS_MODEL_SID
                                                    AND D.USER_ID = DM.USER_ID
                                                    AND D.SESSION_ID = DM.SESSION_ID
                                               JOIN RS_MODEL R
                                                 ON R.RS_MODEL_SID = D.RS_MODEL_SID
                                        WHERE  D.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                               AND D.PERIOD_SID = A.PERIOD_SID
                                               AND D.USER_ID = ?UID
                                               AND D.SESSION_ID = ?SID
                                               AND CASE
                                                     WHEN @VAR = 'R' THEN R.RS_NAME
                                                     ELSE DM.PRICE_GROUP_TYPE
                                                   END IN ( ?RSN )
                                        GROUP  BY DM.PROJECTION_DETAILS_SID,
                                                  CASE
                                                    WHEN @VAR = 'R' THEN R.RS_NAME
                                                    ELSE DM.PRICE_GROUP_TYPE
                                                  END,
                                                  PERIOD_SID) CS
                    WHERE  A.USER_ID = ?UID
                           AND A.SESSION_ID = ?SID
                           AND I.PERIOD_DATE BETWEEN CONVERT(DATE, @START_YEAR + '-' + @START_MONTH + '-01') AND CONVERT(DATE, @END_YEAR + '-' + @END_MONTH + '-01')
                    GROUP  BY I.YEAR,
                              ?GRP
                              CS.RS_NAME,
                              F.LEVEL_NO,
                              F.RELATIONSHIP_LEVEL_VALUES,
                              F.LEVEL_NAME,
                              E.HIERARCHY_NO
                    UNION
                    SELECT Min(CS.CHECK_RECORD)                                                    AS CHECK_RECORD,
                           F.LEVEL_NO,
                           E.HIERARCHY_NO,
                           F.RELATIONSHIP_LEVEL_VALUES,
                           F.LEVEL_NAME,
                           I."YEAR",
                           ?FRE
                           CS.RS_NAME,
                           NULL                                                                    AS ACTUAL_RATE,
                           Sum(CS.PROJECTION_SALES) / ( NULLIF(Sum(A.PROJECTION_SALES), 0) ) * 100 AS PROJECTION_RATE,
                           1                                                                       AS AP_TABLE_INDICATOR,
                           Max(CS.USER_GROUP)                                                      AS USER_GROUP,
                           Count(*)                                                                AS CCP_COUNT,
                           Sum(CS.UNCHECK_COUNT)                                                   AS UNCHECK_COUNT,
                           NULL                                                                    AS ACTUAL_SALES,
                           NULL                                                                    AS ACTUAL_RPU,
                           Sum(CS.PROJECTION_SALES)                                                AS PROJECTION_SALES,
                           Sum(CS.PROJECTION_SALES) / ( NULLIF(Sum(A.PROJECTION_UNITS), 0) )       AS PROJECTION_RPU,
                           Avg(CS.GROWTH)                                                          AS GROWTH
                    FROM   ST_NM_SALES_PROJECTION A
                           JOIN @TABLE_PROJECTION B
                             ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                           JOIN PERIOD I
                             ON I.PERIOD_SID = A.PERIOD_SID
                           JOIN @TABLE E
                             ON E.CCP_DETAILS_SID = B.CCP_DETAILS_SID
                           JOIN RELATIONSHIP_LEVEL_DEFINITION F
                             ON E.RELATIONSHIP_LEVEL_SID = F.RELATIONSHIP_LEVEL_SID
                           CROSS APPLY (SELECT DM.PROJECTION_DETAILS_SID,
                                               RS_NAME=CASE
                                                         WHEN @VAR = 'R' THEN R.RS_NAME
                                                         ELSE DM.PRICE_GROUP_TYPE
                                                       END,
                                               D.PERIOD_SID,
                                               Sum(PROJECTION_SALES) AS PROJECTION_SALES,
                                               Max(DM.USER_GROUP)    AS USER_GROUP,
                                               Min(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 1
                                                     ELSE 0
                                                   END)              AS CHECK_RECORD,
                                               Sum(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 0
                                                     ELSE 1
                                                   END)              AS UNCHECK_COUNT,
                                               Avg(D.GROWTH)         AS GROWTH
                                        FROM   ST_NM_DISCOUNT_PROJ_MASTER DM
                                               JOIN ST_NM_DISCOUNT_PROJECTION D
                                                 ON D.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID
                                                    AND D.RS_MODEL_SID = DM.RS_MODEL_SID
                                                    AND D.USER_ID = DM.USER_ID
                                                    AND D.SESSION_ID = DM.SESSION_ID
                                               JOIN RS_MODEL R
                                                 ON R.RS_MODEL_SID = D.RS_MODEL_SID
                                        WHERE  D.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                               AND D.PERIOD_SID = A.PERIOD_SID
                                               AND D.USER_ID = ?UID
                                               AND D.SESSION_ID = ?SID
                                               AND CASE
                                                     WHEN @VAR = 'R' THEN R.RS_NAME
                                                     ELSE DM.PRICE_GROUP_TYPE
                                                   END IN ( ?RSN )
                                        GROUP  BY DM.PROJECTION_DETAILS_SID,
                                                  CASE
                                                    WHEN @VAR = 'R' THEN R.RS_NAME
                                                    ELSE DM.PRICE_GROUP_TYPE
                                                  END,
                                                  PERIOD_SID) CS
                    WHERE  A.USER_ID = ?UID
                           AND A.SESSION_ID = ?SID
                           AND I.PERIOD_DATE BETWEEN CONVERT(DATE, @START_YEAR + '-' + @START_MONTH + '-01') AND CONVERT(DATE, @END_YEAR + '-' + @END_MONTH + '-01')
                    GROUP  BY I.YEAR,
                              ?GRP
                              CS.RS_NAME,
                              F.LEVEL_NO,
                              F.RELATIONSHIP_LEVEL_VALUES,
                              F.LEVEL_NAME,
                              E.HIERARCHY_NO
                    ORDER  BY RELATIONSHIP_LEVEL_VALUES,
                              RS_NAME,
                              "YEAR",
                              ?GRP
                              AP_TABLE_INDICATOR ;
		]]>
    </sql> 
    
<sql id="nm.discCustomGen">
		<![CDATA[
                    DECLARE @START_MONTH VARCHAR(2)=?SM
                    DECLARE @START_YEAR VARCHAR(4)=?SY
                    DECLARE @END_MONTH VARCHAR(2)=?EM
                    DECLARE @END_YEAR VARCHAR(4)=?EY
                    DECLARE @VAR CHAR(1)='?DSC'
                    DECLARE @TABLE AS TABLE
                      (
                         CCP_DETAILS_SID        INT,
                         HIERARCHY_NO           VARCHAR(50),
                         RELATIONSHIP_LEVEL_SID INT
                      )

                    INSERT INTO @TABLE
                                (CCP_DETAILS_SID,
                                 HIERARCHY_NO,
                                 RELATIONSHIP_LEVEL_SID)
                    SELECT CCP_DETAILS_SID,
                           HIERARCHY_NO,
                           RELATIONSHIP_LEVEL_SID
                    FROM   ?CCP

                    DECLARE @TABLE_PROJECTION AS TABLE
                      (
                         PROJECTION_DETAILS_SID INT PRIMARY KEY,
                         PROJECTION_MASTER_SID  INT,
                         CCP_DETAILS_SID        INT
                      )

                    INSERT INTO @TABLE_PROJECTION
                                (PROJECTION_DETAILS_SID,
                                 PROJECTION_MASTER_SID,
                                 CCP_DETAILS_SID)
                    SELECT PROJECTION_DETAILS_SID,
                           PROJECTION_MASTER_SID,
                           CCP_DETAILS_SID
                    FROM   PROJECTION_DETAILS
                    WHERE  PROJECTION_MASTER_SID = ?PM

                    SELECT Min(CS.CHECK_RECORD)                                                         AS CHECK_RECORD,
                           F.LEVEL_NO,
                           E.HIERARCHY_NO,
                           F.RELATIONSHIP_LEVEL_VALUES,
                           F.LEVEL_NAME,
                           I."YEAR",
                           ?FRE
                           CS.RS_NAME,
                           COALESCE(Sum(CS.DISCOUNT_ACTUALS) / NULLIF(Sum(A.ACTUAL_SALES), 0), 0) * 100 AS ACTUAL_RATE,
                           Avg(CS.PROJECTION_RATE)                                                      AS PROJECTION_RATE,
                           0                                                                            AS AP_TABLE_INDICATOR,
                           Max(CS.USER_GROUP)                                                           AS USER_GROUP,
                           Count(*)                                                                     AS CCP_COUNT,
                           Sum(CS.UNCHECK_COUNT)                                                        AS UNCHECK_COUNT,
                           Sum(CS.DISCOUNT_ACTUALS)                                                          AS ACTUAL_SALES,
                           COALESCE(Sum(CS.DISCOUNT_ACTUALS) / NULLIF(Sum(A.ACTUAL_UNITS), 0), 0)       AS ACTUAL_RPU,
                           Sum(CS.ACTUAL_PROJECTION_SALES)                                              AS PROJECTION_SALES,
                           NULL                                                                         AS PROJECTION_RPU,
                           NULL                                                                         AS GROWTH
                    FROM   ST_NM_ACTUAL_SALES A
                           JOIN @TABLE_PROJECTION B
                             ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                           JOIN PERIOD I
                             ON I.PERIOD_SID = A.PERIOD_SID
                           JOIN @TABLE E
                             ON E.CCP_DETAILS_SID = B.CCP_DETAILS_SID
                           JOIN RELATIONSHIP_LEVEL_DEFINITION F
                             ON E.RELATIONSHIP_LEVEL_SID = F.RELATIONSHIP_LEVEL_SID
                           CROSS APPLY (SELECT DM.PROJECTION_DETAILS_SID,
                                               RS_NAME=CASE
                                                         WHEN @VAR = 'R' THEN R.RS_NAME
                                                         ELSE DM.PRICE_GROUP_TYPE
                                                       END,
                                               D.PERIOD_SID,
                                               Sum(ACTUAL_SALES)              AS DISCOUNT_ACTUALS,
                                               Avg(D.ACTUAL_PROJECTION_RATE)  AS PROJECTION_RATE,
                                               Max(DM.USER_GROUP)             AS USER_GROUP,
                                               Min(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 1
                                                     ELSE 0
                                                   END)                       AS CHECK_RECORD,
                                               Sum(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 0
                                                     ELSE 1
                                                   END)                       AS UNCHECK_COUNT,
                                               Sum(D.ACTUAL_PROJECTION_SALES) AS ACTUAL_PROJECTION_SALES
                                        FROM   ST_NM_DISCOUNT_PROJ_MASTER DM
                                               JOIN ST_NM_ACTUAL_DISCOUNT D
                                                 ON D.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID
                                                    AND D.RS_MODEL_SID = DM.RS_MODEL_SID
                                                    AND D.USER_ID = DM.USER_ID
                                                    AND D.SESSION_ID = DM.SESSION_ID
                                               JOIN RS_MODEL R
                                                 ON R.RS_MODEL_SID = D.RS_MODEL_SID
                                        WHERE  D.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                               AND D.PERIOD_SID = A.PERIOD_SID
                                               AND D.USER_ID = ?UID
                                               AND D.SESSION_ID = ?SID
                                               AND CASE
                                                     WHEN @VAR = 'R' THEN R.RS_NAME
                                                     ELSE DM.PRICE_GROUP_TYPE
                                                   END IN ( ?RSN)
                                        GROUP  BY DM.PROJECTION_DETAILS_SID,
                                                  CASE
                                                    WHEN @VAR = 'R' THEN R.RS_NAME
                                                    ELSE DM.PRICE_GROUP_TYPE
                                                  END,
                                                  PERIOD_SID) CS
                    WHERE  A.USER_ID = ?UID
                           AND A.SESSION_ID = ?SID
                           AND I.PERIOD_DATE BETWEEN CONVERT(DATE, @START_YEAR + '-' + @START_MONTH + '-01') AND CONVERT(DATE, @END_YEAR + '-' + @END_MONTH + '-01')
                    GROUP  BY I.YEAR,
                              ?GRP
                              CS.RS_NAME,
                              F.LEVEL_NO,
                              F.RELATIONSHIP_LEVEL_VALUES,
                              F.LEVEL_NAME,
                              E.HIERARCHY_NO
                    UNION
                    SELECT Min(CS.CHECK_RECORD)                                                    AS CHECK_RECORD,
                           F.LEVEL_NO,
                           E.HIERARCHY_NO,
                           F.RELATIONSHIP_LEVEL_VALUES,
                           F.LEVEL_NAME,
                           I."YEAR",
                           ?FRE
                           CS.RS_NAME,
                           NULL                                                                    AS ACTUAL_RATE,
                           Sum(CS.PROJECTION_SALES) / ( NULLIF(Sum(A.PROJECTION_SALES), 0) ) * 100 AS PROJECTION_RATE,
                           1                                                                       AS AP_TABLE_INDICATOR,
                           Max(CS.USER_GROUP)                                                      AS USER_GROUP,
                           Count(*)                                                                AS CCP_COUNT,
                           Sum(CS.UNCHECK_COUNT)                                                   AS UNCHECK_COUNT,
                           NULL                                                                    AS ACTUAL_SALES,
                           NULL                                                                    AS ACTUAL_RPU,
                           Sum(CS.PROJECTION_SALES)                                                AS PROJECTION_SALES,
                           Sum(CS.PROJECTION_SALES) / ( NULLIF(Sum(A.PROJECTION_UNITS), 0) )       AS PROJECTION_RPU,
                           Avg(CS.GROWTH)                                                          AS GROWTH
                    FROM   ST_NM_SALES_PROJECTION A
                           JOIN @TABLE_PROJECTION B
                             ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                           JOIN PERIOD I
                             ON I.PERIOD_SID = A.PERIOD_SID
                           JOIN @TABLE E
                             ON E.CCP_DETAILS_SID = B.CCP_DETAILS_SID
                           JOIN RELATIONSHIP_LEVEL_DEFINITION F
                             ON E.RELATIONSHIP_LEVEL_SID = F.RELATIONSHIP_LEVEL_SID
                           CROSS APPLY (SELECT DM.PROJECTION_DETAILS_SID,
                                               RS_NAME=CASE
                                                         WHEN @VAR = 'R' THEN R.RS_NAME
                                                         ELSE DM.PRICE_GROUP_TYPE
                                                       END,
                                               D.PERIOD_SID,
                                               Sum(PROJECTION_SALES) AS PROJECTION_SALES,
                                               Max(DM.USER_GROUP)    AS USER_GROUP,
                                               Min(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 1
                                                     ELSE 0
                                                   END)              AS CHECK_RECORD,
                                               Sum(CASE( DM.CHECK_RECORD )
                                                     WHEN 1 THEN 0
                                                     ELSE 1
                                                   END)              AS UNCHECK_COUNT,
                                               Avg(D.GROWTH)         AS GROWTH
                                        FROM   ST_NM_DISCOUNT_PROJ_MASTER DM
                                               JOIN ST_NM_DISCOUNT_PROJECTION D
                                                 ON D.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID
                                                    AND D.RS_MODEL_SID = DM.RS_MODEL_SID
                                                    AND D.USER_ID = DM.USER_ID
                                                    AND D.SESSION_ID = DM.SESSION_ID
                                               JOIN RS_MODEL R
                                                 ON R.RS_MODEL_SID = D.RS_MODEL_SID
                                        WHERE  D.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                               AND D.PERIOD_SID = A.PERIOD_SID
                                               AND D.USER_ID = ?UID
                                               AND D.SESSION_ID = ?SID
                                               AND CASE
                                                     WHEN @VAR = 'R' THEN R.RS_NAME
                                                     ELSE DM.PRICE_GROUP_TYPE
                                                   END IN ( ?RSN)
                                        GROUP  BY DM.PROJECTION_DETAILS_SID,
                                                  CASE
                                                    WHEN @VAR = 'R' THEN R.RS_NAME
                                                    ELSE DM.PRICE_GROUP_TYPE
                                                  END,
                                                  PERIOD_SID) CS
                    WHERE  A.USER_ID = ?UID
                           AND A.SESSION_ID = ?SID
                           AND I.PERIOD_DATE BETWEEN CONVERT(DATE, @START_YEAR + '-' + @START_MONTH + '-01') AND CONVERT(DATE, @END_YEAR + '-' + @END_MONTH + '-01')
                    GROUP  BY I.YEAR,
                              ?GRP
                              CS.RS_NAME,
                              F.LEVEL_NO,
                              F.RELATIONSHIP_LEVEL_VALUES,
                              F.LEVEL_NAME,
                              E.HIERARCHY_NO 
                    ORDER  BY RELATIONSHIP_LEVEL_VALUES,
                              RS_NAME,
                              "YEAR",
                              ?GRP
                              AP_TABLE_INDICATOR ;
                    ]]>
    </sql>
</custom-sql>