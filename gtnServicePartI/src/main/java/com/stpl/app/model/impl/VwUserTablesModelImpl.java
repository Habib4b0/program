package com.stpl.app.model.impl;

import com.stpl.app.model.VwUserTables;
import com.stpl.app.model.VwUserTablesModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VwUserTables service. Represents a row in the &quot;VW_USER_TABLES&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.VwUserTablesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VwUserTablesImpl}.
 * </p>
 *
 * @author
 * @see VwUserTablesImpl
 * @see com.stpl.app.model.VwUserTables
 * @see com.stpl.app.model.VwUserTablesModel
 * @generated
 */
public class VwUserTablesModelImpl extends BaseModelImpl<VwUserTables>
    implements VwUserTablesModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a vw user tables model instance should use the {@link com.stpl.app.model.VwUserTables} interface instead.
     */
    public static final String TABLE_NAME = "VW_USER_TABLES";
    public static final Object[][] TABLE_COLUMNS = {
            { "UNIQUE_ID", Types.INTEGER },
            { "TABLE_NAME", Types.VARCHAR },
            { "COLUMN_NAME", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table VW_USER_TABLES (UNIQUE_ID INTEGER not null primary key,TABLE_NAME VARCHAR(75) null,COLUMN_NAME VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table VW_USER_TABLES";
    public static final String ORDER_BY_JPQL = " ORDER BY vwUserTables.uniqueId ASC";
    public static final String ORDER_BY_SQL = " ORDER BY VW_USER_TABLES.UNIQUE_ID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.VwUserTables"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.VwUserTables"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.VwUserTables"));
    private static ClassLoader _classLoader = VwUserTables.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            VwUserTables.class
        };
    private int _uniqueId;
    private String _tableName;
    private String _columnName;
    private VwUserTables _escapedModel;

    public VwUserTablesModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _uniqueId;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setUniqueId(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _uniqueId;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return VwUserTables.class;
    }

    @Override
    public String getModelClassName() {
        return VwUserTables.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("uniqueId", getUniqueId());
        attributes.put("tableName", getTableName());
        attributes.put("columnName", getColumnName());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer uniqueId = (Integer) attributes.get("uniqueId");

        if (uniqueId != null) {
            setUniqueId(uniqueId);
        }

        String tableName = (String) attributes.get("tableName");

        if (tableName != null) {
            setTableName(tableName);
        }

        String columnName = (String) attributes.get("columnName");

        if (columnName != null) {
            setColumnName(columnName);
        }
    }

    @Override
    public int getUniqueId() {
        return _uniqueId;
    }

    @Override
    public void setUniqueId(int uniqueId) {
        _uniqueId = uniqueId;
    }

    @Override
    public String getTableName() {
        if (_tableName == null) {
            return StringPool.BLANK;
        } else {
            return _tableName;
        }
    }

    @Override
    public void setTableName(String tableName) {
        _tableName = tableName;
    }

    @Override
    public String getColumnName() {
        if (_columnName == null) {
            return StringPool.BLANK;
        } else {
            return _columnName;
        }
    }

    @Override
    public void setColumnName(String columnName) {
        _columnName = columnName;
    }

    @Override
    public VwUserTables toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (VwUserTables) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        VwUserTablesImpl vwUserTablesImpl = new VwUserTablesImpl();

        vwUserTablesImpl.setUniqueId(getUniqueId());
        vwUserTablesImpl.setTableName(getTableName());
        vwUserTablesImpl.setColumnName(getColumnName());

        vwUserTablesImpl.resetOriginalValues();

        return vwUserTablesImpl;
    }

    @Override
    public int compareTo(VwUserTables vwUserTables) {
        int primaryKey = vwUserTables.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof VwUserTables)) {
            return false;
        }

        VwUserTables vwUserTables = (VwUserTables) obj;

        int primaryKey = vwUserTables.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<VwUserTables> toCacheModel() {
        VwUserTablesCacheModel vwUserTablesCacheModel = new VwUserTablesCacheModel();

        vwUserTablesCacheModel.uniqueId = getUniqueId();

        vwUserTablesCacheModel.tableName = getTableName();

        String tableName = vwUserTablesCacheModel.tableName;

        if ((tableName != null) && (tableName.length() == 0)) {
            vwUserTablesCacheModel.tableName = null;
        }

        vwUserTablesCacheModel.columnName = getColumnName();

        String columnName = vwUserTablesCacheModel.columnName;

        if ((columnName != null) && (columnName.length() == 0)) {
            vwUserTablesCacheModel.columnName = null;
        }

        return vwUserTablesCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(7);

        sb.append("{uniqueId=");
        sb.append(getUniqueId());
        sb.append(", tableName=");
        sb.append(getTableName());
        sb.append(", columnName=");
        sb.append(getColumnName());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(13);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.VwUserTables");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>uniqueId</column-name><column-value><![CDATA[");
        sb.append(getUniqueId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>tableName</column-name><column-value><![CDATA[");
        sb.append(getTableName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>columnName</column-name><column-value><![CDATA[");
        sb.append(getColumnName());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
