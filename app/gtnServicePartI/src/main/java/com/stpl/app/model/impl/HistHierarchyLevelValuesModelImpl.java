package com.stpl.app.model.impl;

import com.stpl.app.model.HistHierarchyLevelValues;
import com.stpl.app.model.HistHierarchyLevelValuesModel;
import com.stpl.app.service.persistence.HistHierarchyLevelValuesPK;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the HistHierarchyLevelValues service. Represents a row in the &quot;HIST_HIERARCHY_LEVEL_VALUES&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.HistHierarchyLevelValuesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HistHierarchyLevelValuesImpl}.
 * </p>
 *
 * @author
 * @see HistHierarchyLevelValuesImpl
 * @see com.stpl.app.model.HistHierarchyLevelValues
 * @see com.stpl.app.model.HistHierarchyLevelValuesModel
 * @generated
 */
public class HistHierarchyLevelValuesModelImpl extends BaseModelImpl<HistHierarchyLevelValues>
    implements HistHierarchyLevelValuesModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a hist hierarchy level values model instance should use the {@link com.stpl.app.model.HistHierarchyLevelValues} interface instead.
     */
    public static final String TABLE_NAME = "HIST_HIERARCHY_LEVEL_VALUES";
    public static final Object[][] TABLE_COLUMNS = {
            { "LEVEL_VALUES", Types.VARCHAR },
            { "HIERARCHY_LEVEL_VALUES_SID", Types.INTEGER },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "ACTION_DATE", Types.TIMESTAMP },
            { "ACTION_FLAG", Types.VARCHAR },
            { "HIERARCHY_LEVEL_DEFINITION_SID", Types.INTEGER },
            { "VERSION_NO", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table HIST_HIERARCHY_LEVEL_VALUES (LEVEL_VALUES VARCHAR(75) null,HIERARCHY_LEVEL_VALUES_SID INTEGER not null IDENTITY,CREATED_DATE DATE null,CREATED_BY INTEGER,ACTION_DATE DATE null,ACTION_FLAG VARCHAR(75) not null,HIERARCHY_LEVEL_DEFINITION_SID INTEGER,VERSION_NO INTEGER not null IDENTITY,MODIFIED_BY INTEGER,MODIFIED_DATE DATE null,primary key (HIERARCHY_LEVEL_VALUES_SID, ACTION_FLAG, VERSION_NO))";
    public static final String TABLE_SQL_DROP = "drop table HIST_HIERARCHY_LEVEL_VALUES";
    public static final String ORDER_BY_JPQL = " ORDER BY histHierarchyLevelValues.id.hierarchyLevelValuesSid ASC, histHierarchyLevelValues.id.actionFlag ASC, histHierarchyLevelValues.id.versionNo ASC";
    public static final String ORDER_BY_SQL = " ORDER BY HIST_HIERARCHY_LEVEL_VALUES.HIERARCHY_LEVEL_VALUES_SID ASC, HIST_HIERARCHY_LEVEL_VALUES.ACTION_FLAG ASC, HIST_HIERARCHY_LEVEL_VALUES.VERSION_NO ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.HistHierarchyLevelValues"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.HistHierarchyLevelValues"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.HistHierarchyLevelValues"));
    private static ClassLoader _classLoader = HistHierarchyLevelValues.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            HistHierarchyLevelValues.class
        };
    private String _levelValues;
    private int _hierarchyLevelValuesSid;
    private Date _createdDate;
    private int _createdBy;
    private Date _actionDate;
    private String _actionFlag;
    private int _hierarchyLevelDefinitionSid;
    private int _versionNo;
    private int _modifiedBy;
    private Date _modifiedDate;
    private HistHierarchyLevelValues _escapedModel;

    public HistHierarchyLevelValuesModelImpl() {
    }

    @Override
    public HistHierarchyLevelValuesPK getPrimaryKey() {
        return new HistHierarchyLevelValuesPK(_hierarchyLevelValuesSid,
            _actionFlag, _versionNo);
    }

    @Override
    public void setPrimaryKey(HistHierarchyLevelValuesPK primaryKey) {
        setHierarchyLevelValuesSid(primaryKey.hierarchyLevelValuesSid);
        setActionFlag(primaryKey.actionFlag);
        setVersionNo(primaryKey.versionNo);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new HistHierarchyLevelValuesPK(_hierarchyLevelValuesSid,
            _actionFlag, _versionNo);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((HistHierarchyLevelValuesPK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return HistHierarchyLevelValues.class;
    }

    @Override
    public String getModelClassName() {
        return HistHierarchyLevelValues.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("levelValues", getLevelValues());
        attributes.put("hierarchyLevelValuesSid", getHierarchyLevelValuesSid());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("actionDate", getActionDate());
        attributes.put("actionFlag", getActionFlag());
        attributes.put("hierarchyLevelDefinitionSid",
            getHierarchyLevelDefinitionSid());
        attributes.put("versionNo", getVersionNo());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("modifiedDate", getModifiedDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String levelValues = (String) attributes.get("levelValues");

        if (levelValues != null) {
            setLevelValues(levelValues);
        }

        Integer hierarchyLevelValuesSid = (Integer) attributes.get(
                "hierarchyLevelValuesSid");

        if (hierarchyLevelValuesSid != null) {
            setHierarchyLevelValuesSid(hierarchyLevelValuesSid);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Date actionDate = (Date) attributes.get("actionDate");

        if (actionDate != null) {
            setActionDate(actionDate);
        }

        String actionFlag = (String) attributes.get("actionFlag");

        if (actionFlag != null) {
            setActionFlag(actionFlag);
        }

        Integer hierarchyLevelDefinitionSid = (Integer) attributes.get(
                "hierarchyLevelDefinitionSid");

        if (hierarchyLevelDefinitionSid != null) {
            setHierarchyLevelDefinitionSid(hierarchyLevelDefinitionSid);
        }

        Integer versionNo = (Integer) attributes.get("versionNo");

        if (versionNo != null) {
            setVersionNo(versionNo);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }
    }

    @Override
    public String getLevelValues() {
        if (_levelValues == null) {
            return StringPool.BLANK;
        } else {
            return _levelValues;
        }
    }

    @Override
    public void setLevelValues(String levelValues) {
        _levelValues = levelValues;
    }

    @Override
    public int getHierarchyLevelValuesSid() {
        return _hierarchyLevelValuesSid;
    }

    @Override
    public void setHierarchyLevelValuesSid(int hierarchyLevelValuesSid) {
        _hierarchyLevelValuesSid = hierarchyLevelValuesSid;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public Date getActionDate() {
        return _actionDate;
    }

    @Override
    public void setActionDate(Date actionDate) {
        _actionDate = actionDate;
    }

    @Override
    public String getActionFlag() {
        if (_actionFlag == null) {
            return StringPool.BLANK;
        } else {
            return _actionFlag;
        }
    }

    @Override
    public void setActionFlag(String actionFlag) {
        _actionFlag = actionFlag;
    }

    @Override
    public int getHierarchyLevelDefinitionSid() {
        return _hierarchyLevelDefinitionSid;
    }

    @Override
    public void setHierarchyLevelDefinitionSid(int hierarchyLevelDefinitionSid) {
        _hierarchyLevelDefinitionSid = hierarchyLevelDefinitionSid;
    }

    @Override
    public int getVersionNo() {
        return _versionNo;
    }

    @Override
    public void setVersionNo(int versionNo) {
        _versionNo = versionNo;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public HistHierarchyLevelValues toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (HistHierarchyLevelValues) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        HistHierarchyLevelValuesImpl histHierarchyLevelValuesImpl = new HistHierarchyLevelValuesImpl();

        histHierarchyLevelValuesImpl.setLevelValues(getLevelValues());
        histHierarchyLevelValuesImpl.setHierarchyLevelValuesSid(getHierarchyLevelValuesSid());
        histHierarchyLevelValuesImpl.setCreatedDate(getCreatedDate());
        histHierarchyLevelValuesImpl.setCreatedBy(getCreatedBy());
        histHierarchyLevelValuesImpl.setActionDate(getActionDate());
        histHierarchyLevelValuesImpl.setActionFlag(getActionFlag());
        histHierarchyLevelValuesImpl.setHierarchyLevelDefinitionSid(getHierarchyLevelDefinitionSid());
        histHierarchyLevelValuesImpl.setVersionNo(getVersionNo());
        histHierarchyLevelValuesImpl.setModifiedBy(getModifiedBy());
        histHierarchyLevelValuesImpl.setModifiedDate(getModifiedDate());

        histHierarchyLevelValuesImpl.resetOriginalValues();

        return histHierarchyLevelValuesImpl;
    }

    @Override
    public int compareTo(HistHierarchyLevelValues histHierarchyLevelValues) {
        HistHierarchyLevelValuesPK primaryKey = histHierarchyLevelValues.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof HistHierarchyLevelValues)) {
            return false;
        }

        HistHierarchyLevelValues histHierarchyLevelValues = (HistHierarchyLevelValues) obj;

        HistHierarchyLevelValuesPK primaryKey = histHierarchyLevelValues.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<HistHierarchyLevelValues> toCacheModel() {
        HistHierarchyLevelValuesCacheModel histHierarchyLevelValuesCacheModel = new HistHierarchyLevelValuesCacheModel();

        histHierarchyLevelValuesCacheModel.levelValues = getLevelValues();

        String levelValues = histHierarchyLevelValuesCacheModel.levelValues;

        if ((levelValues != null) && (levelValues.length() == 0)) {
            histHierarchyLevelValuesCacheModel.levelValues = null;
        }

        histHierarchyLevelValuesCacheModel.hierarchyLevelValuesSid = getHierarchyLevelValuesSid();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            histHierarchyLevelValuesCacheModel.createdDate = createdDate.getTime();
        } else {
            histHierarchyLevelValuesCacheModel.createdDate = Long.MIN_VALUE;
        }

        histHierarchyLevelValuesCacheModel.createdBy = getCreatedBy();

        Date actionDate = getActionDate();

        if (actionDate != null) {
            histHierarchyLevelValuesCacheModel.actionDate = actionDate.getTime();
        } else {
            histHierarchyLevelValuesCacheModel.actionDate = Long.MIN_VALUE;
        }

        histHierarchyLevelValuesCacheModel.actionFlag = getActionFlag();

        String actionFlag = histHierarchyLevelValuesCacheModel.actionFlag;

        if ((actionFlag != null) && (actionFlag.length() == 0)) {
            histHierarchyLevelValuesCacheModel.actionFlag = null;
        }

        histHierarchyLevelValuesCacheModel.hierarchyLevelDefinitionSid = getHierarchyLevelDefinitionSid();

        histHierarchyLevelValuesCacheModel.versionNo = getVersionNo();

        histHierarchyLevelValuesCacheModel.modifiedBy = getModifiedBy();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            histHierarchyLevelValuesCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            histHierarchyLevelValuesCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        return histHierarchyLevelValuesCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(21);

        sb.append("{levelValues=");
        sb.append(getLevelValues());
        sb.append(", hierarchyLevelValuesSid=");
        sb.append(getHierarchyLevelValuesSid());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", actionDate=");
        sb.append(getActionDate());
        sb.append(", actionFlag=");
        sb.append(getActionFlag());
        sb.append(", hierarchyLevelDefinitionSid=");
        sb.append(getHierarchyLevelDefinitionSid());
        sb.append(", versionNo=");
        sb.append(getVersionNo());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(34);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.HistHierarchyLevelValues");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>levelValues</column-name><column-value><![CDATA[");
        sb.append(getLevelValues());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hierarchyLevelValuesSid</column-name><column-value><![CDATA[");
        sb.append(getHierarchyLevelValuesSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>actionDate</column-name><column-value><![CDATA[");
        sb.append(getActionDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>actionFlag</column-name><column-value><![CDATA[");
        sb.append(getActionFlag());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hierarchyLevelDefinitionSid</column-name><column-value><![CDATA[");
        sb.append(getHierarchyLevelDefinitionSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>versionNo</column-name><column-value><![CDATA[");
        sb.append(getVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
