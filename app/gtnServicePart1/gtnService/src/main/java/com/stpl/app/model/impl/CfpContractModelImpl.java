/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.CfpContract;
import com.stpl.app.model.CfpContractModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CfpContract service. Represents a row in the &quot;CFP_CONTRACT&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CfpContractModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CfpContractImpl}.
 * </p>
 *
 * @author
 * @see CfpContractImpl
 * @see CfpContract
 * @see CfpContractModel
 * @generated
 */
@ProviderType
public class CfpContractModelImpl extends BaseModelImpl<CfpContract>
	implements CfpContractModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cfp contract model instance should use the {@link CfpContract} interface instead.
	 */
	public static final String TABLE_NAME = "CFP_CONTRACT";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CREATED_BY", Types.INTEGER },
			{ "CFP_CONTRACT_SID", Types.INTEGER },
			{ "CFP_TYPE", Types.INTEGER },
			{ "CFP_TRADE_CLASS", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CONTRACT_MASTER_SID", Types.INTEGER },
			{ "CFP_CONTRACT_ATTACHED_DATE", Types.TIMESTAMP },
			{ "CFP_MODEL_SID", Types.INTEGER },
			{ "BATCH_ID", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "RECORD_LOCK_STATUS", Types.BOOLEAN },
			{ "CFP_DESIGNATION", Types.VARCHAR },
			{ "CFP_NAME", Types.VARCHAR },
			{ "CFP_NO", Types.VARCHAR },
			{ "CFP_CATEGORY", Types.INTEGER },
			{ "SOURCE", Types.VARCHAR },
			{ "CFP_STATUS", Types.INTEGER },
			{ "PARENT_CFP_ID", Types.INTEGER },
			{ "CFP_CONTRACT_ATTACHED_STATUS", Types.INTEGER },
			{ "CFP_START_DATE", Types.TIMESTAMP },
			{ "CFP_END_DATE", Types.TIMESTAMP },
			{ "PARENT_CFP_NAME", Types.VARCHAR },
			{ "INBOUND_STATUS", Types.VARCHAR },
			{ "SALES_INCLUSION", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_CONTRACT_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_TYPE", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_TRADE_CLASS", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CONTRACT_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_CONTRACT_ATTACHED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CFP_MODEL_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("RECORD_LOCK_STATUS", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("CFP_DESIGNATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_CATEGORY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_STATUS", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PARENT_CFP_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_CONTRACT_ATTACHED_STATUS", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CFP_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PARENT_CFP_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SALES_INCLUSION", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table CFP_CONTRACT (CREATED_BY INTEGER,CFP_CONTRACT_SID INTEGER not null primary key IDENTITY,CFP_TYPE INTEGER,CFP_TRADE_CLASS INTEGER,MODIFIED_BY INTEGER,CREATED_DATE DATE null,CONTRACT_MASTER_SID INTEGER,CFP_CONTRACT_ATTACHED_DATE DATE null,CFP_MODEL_SID INTEGER,BATCH_ID VARCHAR(75) null,MODIFIED_DATE DATE null,RECORD_LOCK_STATUS BOOLEAN,CFP_DESIGNATION VARCHAR(75) null,CFP_NAME VARCHAR(75) null,CFP_NO VARCHAR(75) null,CFP_CATEGORY INTEGER,SOURCE VARCHAR(75) null,CFP_STATUS INTEGER,PARENT_CFP_ID INTEGER,CFP_CONTRACT_ATTACHED_STATUS INTEGER,CFP_START_DATE DATE null,CFP_END_DATE DATE null,PARENT_CFP_NAME VARCHAR(75) null,INBOUND_STATUS VARCHAR(75) null,SALES_INCLUSION INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table CFP_CONTRACT";
	public static final String ORDER_BY_JPQL = " ORDER BY cfpContract.cfpContractSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CFP_CONTRACT.CFP_CONTRACT_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.CfpContract"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.CfpContract"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.CfpContract"));

	public CfpContractModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _cfpContractSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setCfpContractSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _cfpContractSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CfpContract.class;
	}

	@Override
	public String getModelClassName() {
		return CfpContract.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("createdBy", getCreatedBy());
		attributes.put("cfpContractSid", getCfpContractSid());
		attributes.put("cfpType", getCfpType());
		attributes.put("cfpTradeClass", getCfpTradeClass());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("contractMasterSid", getContractMasterSid());
		attributes.put("cfpContractAttachedDate", getCfpContractAttachedDate());
		attributes.put("cfpModelSid", getCfpModelSid());
		attributes.put("batchId", getBatchId());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("recordLockStatus", getRecordLockStatus());
		attributes.put("cfpDesignation", getCfpDesignation());
		attributes.put("cfpName", getCfpName());
		attributes.put("cfpNo", getCfpNo());
		attributes.put("cfpCategory", getCfpCategory());
		attributes.put("source", getSource());
		attributes.put("cfpStatus", getCfpStatus());
		attributes.put("parentCfpId", getParentCfpId());
		attributes.put("cfpContractAttachedStatus",
			getCfpContractAttachedStatus());
		attributes.put("cfpStartDate", getCfpStartDate());
		attributes.put("cfpEndDate", getCfpEndDate());
		attributes.put("parentCfpName", getParentCfpName());
		attributes.put("inboundStatus", getInboundStatus());
		attributes.put("salesInclusion", getSalesInclusion());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer cfpContractSid = (Integer)attributes.get("cfpContractSid");

		if (cfpContractSid != null) {
			setCfpContractSid(cfpContractSid);
		}

		Integer cfpType = (Integer)attributes.get("cfpType");

		if (cfpType != null) {
			setCfpType(cfpType);
		}

		Integer cfpTradeClass = (Integer)attributes.get("cfpTradeClass");

		if (cfpTradeClass != null) {
			setCfpTradeClass(cfpTradeClass);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Integer contractMasterSid = (Integer)attributes.get("contractMasterSid");

		if (contractMasterSid != null) {
			setContractMasterSid(contractMasterSid);
		}

		Date cfpContractAttachedDate = (Date)attributes.get(
				"cfpContractAttachedDate");

		if (cfpContractAttachedDate != null) {
			setCfpContractAttachedDate(cfpContractAttachedDate);
		}

		Integer cfpModelSid = (Integer)attributes.get("cfpModelSid");

		if (cfpModelSid != null) {
			setCfpModelSid(cfpModelSid);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Boolean recordLockStatus = (Boolean)attributes.get("recordLockStatus");

		if (recordLockStatus != null) {
			setRecordLockStatus(recordLockStatus);
		}

		String cfpDesignation = (String)attributes.get("cfpDesignation");

		if (cfpDesignation != null) {
			setCfpDesignation(cfpDesignation);
		}

		String cfpName = (String)attributes.get("cfpName");

		if (cfpName != null) {
			setCfpName(cfpName);
		}

		String cfpNo = (String)attributes.get("cfpNo");

		if (cfpNo != null) {
			setCfpNo(cfpNo);
		}

		Integer cfpCategory = (Integer)attributes.get("cfpCategory");

		if (cfpCategory != null) {
			setCfpCategory(cfpCategory);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		Integer cfpStatus = (Integer)attributes.get("cfpStatus");

		if (cfpStatus != null) {
			setCfpStatus(cfpStatus);
		}

		Integer parentCfpId = (Integer)attributes.get("parentCfpId");

		if (parentCfpId != null) {
			setParentCfpId(parentCfpId);
		}

		Integer cfpContractAttachedStatus = (Integer)attributes.get(
				"cfpContractAttachedStatus");

		if (cfpContractAttachedStatus != null) {
			setCfpContractAttachedStatus(cfpContractAttachedStatus);
		}

		Date cfpStartDate = (Date)attributes.get("cfpStartDate");

		if (cfpStartDate != null) {
			setCfpStartDate(cfpStartDate);
		}

		Date cfpEndDate = (Date)attributes.get("cfpEndDate");

		if (cfpEndDate != null) {
			setCfpEndDate(cfpEndDate);
		}

		String parentCfpName = (String)attributes.get("parentCfpName");

		if (parentCfpName != null) {
			setParentCfpName(parentCfpName);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}

		Integer salesInclusion = (Integer)attributes.get("salesInclusion");

		if (salesInclusion != null) {
			setSalesInclusion(salesInclusion);
		}
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getCfpContractSid() {
		return _cfpContractSid;
	}

	@Override
	public void setCfpContractSid(int cfpContractSid) {
		_cfpContractSid = cfpContractSid;
	}

	@Override
	public int getCfpType() {
		return _cfpType;
	}

	@Override
	public void setCfpType(int cfpType) {
		_cfpType = cfpType;
	}

	@Override
	public int getCfpTradeClass() {
		return _cfpTradeClass;
	}

	@Override
	public void setCfpTradeClass(int cfpTradeClass) {
		_cfpTradeClass = cfpTradeClass;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public int getContractMasterSid() {
		return _contractMasterSid;
	}

	@Override
	public void setContractMasterSid(int contractMasterSid) {
		_contractMasterSid = contractMasterSid;
	}

	@Override
	public Date getCfpContractAttachedDate() {
		return _cfpContractAttachedDate;
	}

	@Override
	public void setCfpContractAttachedDate(Date cfpContractAttachedDate) {
		_cfpContractAttachedDate = cfpContractAttachedDate;
	}

	@Override
	public int getCfpModelSid() {
		return _cfpModelSid;
	}

	@Override
	public void setCfpModelSid(int cfpModelSid) {
		_cfpModelSid = cfpModelSid;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public boolean getRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public boolean isRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public void setRecordLockStatus(boolean recordLockStatus) {
		_recordLockStatus = recordLockStatus;
	}

	@Override
	public String getCfpDesignation() {
		if (_cfpDesignation == null) {
			return StringPool.BLANK;
		}
		else {
			return _cfpDesignation;
		}
	}

	@Override
	public void setCfpDesignation(String cfpDesignation) {
		_cfpDesignation = cfpDesignation;
	}

	@Override
	public String getCfpName() {
		if (_cfpName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cfpName;
		}
	}

	@Override
	public void setCfpName(String cfpName) {
		_cfpName = cfpName;
	}

	@Override
	public String getCfpNo() {
		if (_cfpNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _cfpNo;
		}
	}

	@Override
	public void setCfpNo(String cfpNo) {
		_cfpNo = cfpNo;
	}

	@Override
	public int getCfpCategory() {
		return _cfpCategory;
	}

	@Override
	public void setCfpCategory(int cfpCategory) {
		_cfpCategory = cfpCategory;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public int getCfpStatus() {
		return _cfpStatus;
	}

	@Override
	public void setCfpStatus(int cfpStatus) {
		_cfpStatus = cfpStatus;
	}

	@Override
	public int getParentCfpId() {
		return _parentCfpId;
	}

	@Override
	public void setParentCfpId(int parentCfpId) {
		_parentCfpId = parentCfpId;
	}

	@Override
	public int getCfpContractAttachedStatus() {
		return _cfpContractAttachedStatus;
	}

	@Override
	public void setCfpContractAttachedStatus(int cfpContractAttachedStatus) {
		_cfpContractAttachedStatus = cfpContractAttachedStatus;
	}

	@Override
	public Date getCfpStartDate() {
		return _cfpStartDate;
	}

	@Override
	public void setCfpStartDate(Date cfpStartDate) {
		_cfpStartDate = cfpStartDate;
	}

	@Override
	public Date getCfpEndDate() {
		return _cfpEndDate;
	}

	@Override
	public void setCfpEndDate(Date cfpEndDate) {
		_cfpEndDate = cfpEndDate;
	}

	@Override
	public String getParentCfpName() {
		if (_parentCfpName == null) {
			return StringPool.BLANK;
		}
		else {
			return _parentCfpName;
		}
	}

	@Override
	public void setParentCfpName(String parentCfpName) {
		_parentCfpName = parentCfpName;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	@Override
	public int getSalesInclusion() {
		return _salesInclusion;
	}

	@Override
	public void setSalesInclusion(int salesInclusion) {
		_salesInclusion = salesInclusion;
	}

	@Override
	public CfpContract toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CfpContract)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CfpContractImpl cfpContractImpl = new CfpContractImpl();

		cfpContractImpl.setCreatedBy(getCreatedBy());
		cfpContractImpl.setCfpContractSid(getCfpContractSid());
		cfpContractImpl.setCfpType(getCfpType());
		cfpContractImpl.setCfpTradeClass(getCfpTradeClass());
		cfpContractImpl.setModifiedBy(getModifiedBy());
		cfpContractImpl.setCreatedDate(getCreatedDate());
		cfpContractImpl.setContractMasterSid(getContractMasterSid());
		cfpContractImpl.setCfpContractAttachedDate(getCfpContractAttachedDate());
		cfpContractImpl.setCfpModelSid(getCfpModelSid());
		cfpContractImpl.setBatchId(getBatchId());
		cfpContractImpl.setModifiedDate(getModifiedDate());
		cfpContractImpl.setRecordLockStatus(getRecordLockStatus());
		cfpContractImpl.setCfpDesignation(getCfpDesignation());
		cfpContractImpl.setCfpName(getCfpName());
		cfpContractImpl.setCfpNo(getCfpNo());
		cfpContractImpl.setCfpCategory(getCfpCategory());
		cfpContractImpl.setSource(getSource());
		cfpContractImpl.setCfpStatus(getCfpStatus());
		cfpContractImpl.setParentCfpId(getParentCfpId());
		cfpContractImpl.setCfpContractAttachedStatus(getCfpContractAttachedStatus());
		cfpContractImpl.setCfpStartDate(getCfpStartDate());
		cfpContractImpl.setCfpEndDate(getCfpEndDate());
		cfpContractImpl.setParentCfpName(getParentCfpName());
		cfpContractImpl.setInboundStatus(getInboundStatus());
		cfpContractImpl.setSalesInclusion(getSalesInclusion());

		cfpContractImpl.resetOriginalValues();

		return cfpContractImpl;
	}

	@Override
	public int compareTo(CfpContract cfpContract) {
		int primaryKey = cfpContract.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CfpContract)) {
			return false;
		}

		CfpContract cfpContract = (CfpContract)obj;

		int primaryKey = cfpContract.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CfpContract> toCacheModel() {
		CfpContractCacheModel cfpContractCacheModel = new CfpContractCacheModel();

		cfpContractCacheModel.createdBy = getCreatedBy();

		cfpContractCacheModel.cfpContractSid = getCfpContractSid();

		cfpContractCacheModel.cfpType = getCfpType();

		cfpContractCacheModel.cfpTradeClass = getCfpTradeClass();

		cfpContractCacheModel.modifiedBy = getModifiedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			cfpContractCacheModel.createdDate = createdDate.getTime();
		}
		else {
			cfpContractCacheModel.createdDate = Long.MIN_VALUE;
		}

		cfpContractCacheModel.contractMasterSid = getContractMasterSid();

		Date cfpContractAttachedDate = getCfpContractAttachedDate();

		if (cfpContractAttachedDate != null) {
			cfpContractCacheModel.cfpContractAttachedDate = cfpContractAttachedDate.getTime();
		}
		else {
			cfpContractCacheModel.cfpContractAttachedDate = Long.MIN_VALUE;
		}

		cfpContractCacheModel.cfpModelSid = getCfpModelSid();

		cfpContractCacheModel.batchId = getBatchId();

		String batchId = cfpContractCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			cfpContractCacheModel.batchId = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			cfpContractCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			cfpContractCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		cfpContractCacheModel.recordLockStatus = getRecordLockStatus();

		cfpContractCacheModel.cfpDesignation = getCfpDesignation();

		String cfpDesignation = cfpContractCacheModel.cfpDesignation;

		if ((cfpDesignation != null) && (cfpDesignation.length() == 0)) {
			cfpContractCacheModel.cfpDesignation = null;
		}

		cfpContractCacheModel.cfpName = getCfpName();

		String cfpName = cfpContractCacheModel.cfpName;

		if ((cfpName != null) && (cfpName.length() == 0)) {
			cfpContractCacheModel.cfpName = null;
		}

		cfpContractCacheModel.cfpNo = getCfpNo();

		String cfpNo = cfpContractCacheModel.cfpNo;

		if ((cfpNo != null) && (cfpNo.length() == 0)) {
			cfpContractCacheModel.cfpNo = null;
		}

		cfpContractCacheModel.cfpCategory = getCfpCategory();

		cfpContractCacheModel.source = getSource();

		String source = cfpContractCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			cfpContractCacheModel.source = null;
		}

		cfpContractCacheModel.cfpStatus = getCfpStatus();

		cfpContractCacheModel.parentCfpId = getParentCfpId();

		cfpContractCacheModel.cfpContractAttachedStatus = getCfpContractAttachedStatus();

		Date cfpStartDate = getCfpStartDate();

		if (cfpStartDate != null) {
			cfpContractCacheModel.cfpStartDate = cfpStartDate.getTime();
		}
		else {
			cfpContractCacheModel.cfpStartDate = Long.MIN_VALUE;
		}

		Date cfpEndDate = getCfpEndDate();

		if (cfpEndDate != null) {
			cfpContractCacheModel.cfpEndDate = cfpEndDate.getTime();
		}
		else {
			cfpContractCacheModel.cfpEndDate = Long.MIN_VALUE;
		}

		cfpContractCacheModel.parentCfpName = getParentCfpName();

		String parentCfpName = cfpContractCacheModel.parentCfpName;

		if ((parentCfpName != null) && (parentCfpName.length() == 0)) {
			cfpContractCacheModel.parentCfpName = null;
		}

		cfpContractCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = cfpContractCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			cfpContractCacheModel.inboundStatus = null;
		}

		cfpContractCacheModel.salesInclusion = getSalesInclusion();

		return cfpContractCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(51);

		sb.append("{createdBy=");
		sb.append(getCreatedBy());
		sb.append(", cfpContractSid=");
		sb.append(getCfpContractSid());
		sb.append(", cfpType=");
		sb.append(getCfpType());
		sb.append(", cfpTradeClass=");
		sb.append(getCfpTradeClass());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", contractMasterSid=");
		sb.append(getContractMasterSid());
		sb.append(", cfpContractAttachedDate=");
		sb.append(getCfpContractAttachedDate());
		sb.append(", cfpModelSid=");
		sb.append(getCfpModelSid());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", recordLockStatus=");
		sb.append(getRecordLockStatus());
		sb.append(", cfpDesignation=");
		sb.append(getCfpDesignation());
		sb.append(", cfpName=");
		sb.append(getCfpName());
		sb.append(", cfpNo=");
		sb.append(getCfpNo());
		sb.append(", cfpCategory=");
		sb.append(getCfpCategory());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", cfpStatus=");
		sb.append(getCfpStatus());
		sb.append(", parentCfpId=");
		sb.append(getParentCfpId());
		sb.append(", cfpContractAttachedStatus=");
		sb.append(getCfpContractAttachedStatus());
		sb.append(", cfpStartDate=");
		sb.append(getCfpStartDate());
		sb.append(", cfpEndDate=");
		sb.append(getCfpEndDate());
		sb.append(", parentCfpName=");
		sb.append(getParentCfpName());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append(", salesInclusion=");
		sb.append(getSalesInclusion());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(79);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.CfpContract");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpContractSid</column-name><column-value><![CDATA[");
		sb.append(getCfpContractSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpType</column-name><column-value><![CDATA[");
		sb.append(getCfpType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpTradeClass</column-name><column-value><![CDATA[");
		sb.append(getCfpTradeClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
		sb.append(getContractMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpContractAttachedDate</column-name><column-value><![CDATA[");
		sb.append(getCfpContractAttachedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpModelSid</column-name><column-value><![CDATA[");
		sb.append(getCfpModelSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
		sb.append(getRecordLockStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpDesignation</column-name><column-value><![CDATA[");
		sb.append(getCfpDesignation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpName</column-name><column-value><![CDATA[");
		sb.append(getCfpName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpNo</column-name><column-value><![CDATA[");
		sb.append(getCfpNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpCategory</column-name><column-value><![CDATA[");
		sb.append(getCfpCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpStatus</column-name><column-value><![CDATA[");
		sb.append(getCfpStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentCfpId</column-name><column-value><![CDATA[");
		sb.append(getParentCfpId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpContractAttachedStatus</column-name><column-value><![CDATA[");
		sb.append(getCfpContractAttachedStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpStartDate</column-name><column-value><![CDATA[");
		sb.append(getCfpStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpEndDate</column-name><column-value><![CDATA[");
		sb.append(getCfpEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentCfpName</column-name><column-value><![CDATA[");
		sb.append(getParentCfpName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>salesInclusion</column-name><column-value><![CDATA[");
		sb.append(getSalesInclusion());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CfpContract.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CfpContract.class
		};
	private int _createdBy;
	private int _cfpContractSid;
	private int _cfpType;
	private int _cfpTradeClass;
	private int _modifiedBy;
	private Date _createdDate;
	private int _contractMasterSid;
	private Date _cfpContractAttachedDate;
	private int _cfpModelSid;
	private String _batchId;
	private Date _modifiedDate;
	private boolean _recordLockStatus;
	private String _cfpDesignation;
	private String _cfpName;
	private String _cfpNo;
	private int _cfpCategory;
	private String _source;
	private int _cfpStatus;
	private int _parentCfpId;
	private int _cfpContractAttachedStatus;
	private Date _cfpStartDate;
	private Date _cfpEndDate;
	private String _parentCfpName;
	private String _inboundStatus;
	private int _salesInclusion;
	private CfpContract _escapedModel;
}