/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.ImtdIfpDetails;
import com.stpl.app.model.ImtdIfpDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ImtdIfpDetails service. Represents a row in the &quot;IMTD_IFP_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ImtdIfpDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ImtdIfpDetailsImpl}.
 * </p>
 *
 * @author
 * @see ImtdIfpDetailsImpl
 * @see ImtdIfpDetails
 * @see ImtdIfpDetailsModel
 * @generated
 */
@ProviderType
public class ImtdIfpDetailsModelImpl extends BaseModelImpl<ImtdIfpDetails>
	implements ImtdIfpDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a imtd ifp details model instance should use the {@link ImtdIfpDetails} interface instead.
	 */
	public static final String TABLE_NAME = "IMTD_IFP_DETAILS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ITEM_STATUS", Types.INTEGER },
			{ "IFP_DETAILS_END_DATE", Types.TIMESTAMP },
			{ "ITEM_MASTER_SID", Types.INTEGER },
			{ "IMTD_CREATEDDATE", Types.TIMESTAMP },
			{ "ITEM_PACKAGE_SIZE", Types.VARCHAR },
			{ "IFP_DETAILS_CREATED_DATE", Types.TIMESTAMP },
			{ "TOTAL_DOLLAR_COMMITMENT", Types.VARCHAR },
			{ "IFP_DETAILS_CREATED_BY", Types.VARCHAR },
			{ "ITEM_ID", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "IFP_DETAILS_MODIFIED_BY", Types.VARCHAR },
			{ "IFP_DETAILS_MODIFIED_DATE", Types.TIMESTAMP },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.INTEGER },
			{ "USERS_SID", Types.INTEGER },
			{ "ITEM_DESC", Types.VARCHAR },
			{ "ITEM_START_DATE", Types.TIMESTAMP },
			{ "ITEM_STRENGTH", Types.VARCHAR },
			{ "CONTRACT_MASTER_SID", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "COMMITMENT_PERIOD", Types.VARCHAR },
			{ "ITEM_NO", Types.VARCHAR },
			{ "IFP_DETAILS_SID", Types.INTEGER },
			{ "IFP_MODEL_SID", Types.INTEGER },
			{ "ITEM_THERAPEUTIC_CLASS", Types.VARCHAR },
			{ "IFP_DETAILS_START_DATE", Types.TIMESTAMP },
			{ "ITEM_FORM", Types.VARCHAR },
			{ "TOTAL_VOLUME_COMMITMENT", Types.VARCHAR },
			{ "ITEM_END_DATE", Types.TIMESTAMP },
			{ "CHECK_BOX", Types.BOOLEAN },
			{ "IFP_DETAILS_ATTACHED_STATUS", Types.INTEGER },
			{ "TOTAL_MARKETSHARE_COMMITMENT", Types.VARCHAR },
			{ "IFP_DETAILS_ATTACHED_DATE", Types.TIMESTAMP },
			{ "IMTD_IFP_DETAILS_SID", Types.INTEGER },
			{ "SESSION_ID", Types.VARCHAR },
			{ "ITEM_NAME", Types.VARCHAR },
			{ "ITEM_PRIMARY_UOM", Types.VARCHAR },
			{ "OPERATION", Types.VARCHAR },
			{ "ITEM_BRAND", Types.VARCHAR },
			{ "CFP_MODEL_SID", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ITEM_STATUS", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("IMTD_CREATEDDATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_PACKAGE_SIZE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("TOTAL_DOLLAR_COMMITMENT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("USERS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_DESC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_STRENGTH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("COMMITMENT_PERIOD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("IFP_MODEL_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_THERAPEUTIC_CLASS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_FORM", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TOTAL_VOLUME_COMMITMENT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CHECK_BOX", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_ATTACHED_STATUS", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("TOTAL_MARKETSHARE_COMMITMENT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IFP_DETAILS_ATTACHED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("IMTD_IFP_DETAILS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("SESSION_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_PRIMARY_UOM", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("OPERATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_BRAND", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_MODEL_SID", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table IMTD_IFP_DETAILS (ITEM_STATUS INTEGER,IFP_DETAILS_END_DATE DATE null,ITEM_MASTER_SID INTEGER,IMTD_CREATEDDATE DATE null,ITEM_PACKAGE_SIZE VARCHAR(75) null,IFP_DETAILS_CREATED_DATE DATE null,TOTAL_DOLLAR_COMMITMENT VARCHAR(75) null,IFP_DETAILS_CREATED_BY VARCHAR(75) null,ITEM_ID VARCHAR(75) null,MODIFIED_DATE DATE null,IFP_DETAILS_MODIFIED_BY VARCHAR(75) null,IFP_DETAILS_MODIFIED_DATE DATE null,CREATED_DATE DATE null,CREATED_BY INTEGER,USERS_SID INTEGER,ITEM_DESC VARCHAR(75) null,ITEM_START_DATE DATE null,ITEM_STRENGTH VARCHAR(75) null,CONTRACT_MASTER_SID INTEGER,MODIFIED_BY INTEGER,COMMITMENT_PERIOD VARCHAR(75) null,ITEM_NO VARCHAR(75) null,IFP_DETAILS_SID INTEGER,IFP_MODEL_SID INTEGER,ITEM_THERAPEUTIC_CLASS VARCHAR(75) null,IFP_DETAILS_START_DATE DATE null,ITEM_FORM VARCHAR(75) null,TOTAL_VOLUME_COMMITMENT VARCHAR(75) null,ITEM_END_DATE DATE null,CHECK_BOX BOOLEAN,IFP_DETAILS_ATTACHED_STATUS INTEGER,TOTAL_MARKETSHARE_COMMITMENT VARCHAR(75) null,IFP_DETAILS_ATTACHED_DATE DATE null,IMTD_IFP_DETAILS_SID INTEGER not null primary key IDENTITY,SESSION_ID VARCHAR(75) null,ITEM_NAME VARCHAR(75) null,ITEM_PRIMARY_UOM VARCHAR(75) null,OPERATION VARCHAR(75) null,ITEM_BRAND VARCHAR(75) null,CFP_MODEL_SID INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table IMTD_IFP_DETAILS";
	public static final String ORDER_BY_JPQL = " ORDER BY imtdIfpDetails.imtdIfpDetailsSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IMTD_IFP_DETAILS.IMTD_IFP_DETAILS_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.ImtdIfpDetails"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.ImtdIfpDetails"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.stpl.app.model.ImtdIfpDetails"),
			true);
	public static final long IMTDCREATEDDATE_COLUMN_BITMASK = 1L;
	public static final long SESSIONID_COLUMN_BITMASK = 2L;
	public static final long USERSSID_COLUMN_BITMASK = 4L;
	public static final long IMTDIFPDETAILSSID_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.ImtdIfpDetails"));

	public ImtdIfpDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _imtdIfpDetailsSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setImtdIfpDetailsSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _imtdIfpDetailsSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ImtdIfpDetails.class;
	}

	@Override
	public String getModelClassName() {
		return ImtdIfpDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("itemStatus", getItemStatus());
		attributes.put("ifpDetailsEndDate", getIfpDetailsEndDate());
		attributes.put("itemMasterSid", getItemMasterSid());
		attributes.put("imtdCreateddate", getImtdCreateddate());
		attributes.put("itemPackageSize", getItemPackageSize());
		attributes.put("ifpDetailsCreatedDate", getIfpDetailsCreatedDate());
		attributes.put("totalDollarCommitment", getTotalDollarCommitment());
		attributes.put("ifpDetailsCreatedBy", getIfpDetailsCreatedBy());
		attributes.put("itemId", getItemId());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("ifpDetailsModifiedBy", getIfpDetailsModifiedBy());
		attributes.put("ifpDetailsModifiedDate", getIfpDetailsModifiedDate());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("usersSid", getUsersSid());
		attributes.put("itemDesc", getItemDesc());
		attributes.put("itemStartDate", getItemStartDate());
		attributes.put("itemStrength", getItemStrength());
		attributes.put("contractMasterSid", getContractMasterSid());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("commitmentPeriod", getCommitmentPeriod());
		attributes.put("itemNo", getItemNo());
		attributes.put("ifpDetailsSid", getIfpDetailsSid());
		attributes.put("ifpModelSid", getIfpModelSid());
		attributes.put("itemTherapeuticClass", getItemTherapeuticClass());
		attributes.put("ifpDetailsStartDate", getIfpDetailsStartDate());
		attributes.put("itemForm", getItemForm());
		attributes.put("totalVolumeCommitment", getTotalVolumeCommitment());
		attributes.put("itemEndDate", getItemEndDate());
		attributes.put("checkBox", getCheckBox());
		attributes.put("ifpDetailsAttachedStatus", getIfpDetailsAttachedStatus());
		attributes.put("totalMarketshareCommitment",
			getTotalMarketshareCommitment());
		attributes.put("ifpDetailsAttachedDate", getIfpDetailsAttachedDate());
		attributes.put("imtdIfpDetailsSid", getImtdIfpDetailsSid());
		attributes.put("sessionId", getSessionId());
		attributes.put("itemName", getItemName());
		attributes.put("itemPrimaryUom", getItemPrimaryUom());
		attributes.put("operation", getOperation());
		attributes.put("itemBrand", getItemBrand());
		attributes.put("cfpModelSid", getCfpModelSid());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer itemStatus = (Integer)attributes.get("itemStatus");

		if (itemStatus != null) {
			setItemStatus(itemStatus);
		}

		Date ifpDetailsEndDate = (Date)attributes.get("ifpDetailsEndDate");

		if (ifpDetailsEndDate != null) {
			setIfpDetailsEndDate(ifpDetailsEndDate);
		}

		Integer itemMasterSid = (Integer)attributes.get("itemMasterSid");

		if (itemMasterSid != null) {
			setItemMasterSid(itemMasterSid);
		}

		Date imtdCreateddate = (Date)attributes.get("imtdCreateddate");

		if (imtdCreateddate != null) {
			setImtdCreateddate(imtdCreateddate);
		}

		String itemPackageSize = (String)attributes.get("itemPackageSize");

		if (itemPackageSize != null) {
			setItemPackageSize(itemPackageSize);
		}

		Date ifpDetailsCreatedDate = (Date)attributes.get(
				"ifpDetailsCreatedDate");

		if (ifpDetailsCreatedDate != null) {
			setIfpDetailsCreatedDate(ifpDetailsCreatedDate);
		}

		String totalDollarCommitment = (String)attributes.get(
				"totalDollarCommitment");

		if (totalDollarCommitment != null) {
			setTotalDollarCommitment(totalDollarCommitment);
		}

		String ifpDetailsCreatedBy = (String)attributes.get(
				"ifpDetailsCreatedBy");

		if (ifpDetailsCreatedBy != null) {
			setIfpDetailsCreatedBy(ifpDetailsCreatedBy);
		}

		String itemId = (String)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String ifpDetailsModifiedBy = (String)attributes.get(
				"ifpDetailsModifiedBy");

		if (ifpDetailsModifiedBy != null) {
			setIfpDetailsModifiedBy(ifpDetailsModifiedBy);
		}

		Date ifpDetailsModifiedDate = (Date)attributes.get(
				"ifpDetailsModifiedDate");

		if (ifpDetailsModifiedDate != null) {
			setIfpDetailsModifiedDate(ifpDetailsModifiedDate);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer usersSid = (Integer)attributes.get("usersSid");

		if (usersSid != null) {
			setUsersSid(usersSid);
		}

		String itemDesc = (String)attributes.get("itemDesc");

		if (itemDesc != null) {
			setItemDesc(itemDesc);
		}

		Date itemStartDate = (Date)attributes.get("itemStartDate");

		if (itemStartDate != null) {
			setItemStartDate(itemStartDate);
		}

		String itemStrength = (String)attributes.get("itemStrength");

		if (itemStrength != null) {
			setItemStrength(itemStrength);
		}

		Integer contractMasterSid = (Integer)attributes.get("contractMasterSid");

		if (contractMasterSid != null) {
			setContractMasterSid(contractMasterSid);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String commitmentPeriod = (String)attributes.get("commitmentPeriod");

		if (commitmentPeriod != null) {
			setCommitmentPeriod(commitmentPeriod);
		}

		String itemNo = (String)attributes.get("itemNo");

		if (itemNo != null) {
			setItemNo(itemNo);
		}

		Integer ifpDetailsSid = (Integer)attributes.get("ifpDetailsSid");

		if (ifpDetailsSid != null) {
			setIfpDetailsSid(ifpDetailsSid);
		}

		Integer ifpModelSid = (Integer)attributes.get("ifpModelSid");

		if (ifpModelSid != null) {
			setIfpModelSid(ifpModelSid);
		}

		String itemTherapeuticClass = (String)attributes.get(
				"itemTherapeuticClass");

		if (itemTherapeuticClass != null) {
			setItemTherapeuticClass(itemTherapeuticClass);
		}

		Date ifpDetailsStartDate = (Date)attributes.get("ifpDetailsStartDate");

		if (ifpDetailsStartDate != null) {
			setIfpDetailsStartDate(ifpDetailsStartDate);
		}

		String itemForm = (String)attributes.get("itemForm");

		if (itemForm != null) {
			setItemForm(itemForm);
		}

		String totalVolumeCommitment = (String)attributes.get(
				"totalVolumeCommitment");

		if (totalVolumeCommitment != null) {
			setTotalVolumeCommitment(totalVolumeCommitment);
		}

		Date itemEndDate = (Date)attributes.get("itemEndDate");

		if (itemEndDate != null) {
			setItemEndDate(itemEndDate);
		}

		Boolean checkBox = (Boolean)attributes.get("checkBox");

		if (checkBox != null) {
			setCheckBox(checkBox);
		}

		Integer ifpDetailsAttachedStatus = (Integer)attributes.get(
				"ifpDetailsAttachedStatus");

		if (ifpDetailsAttachedStatus != null) {
			setIfpDetailsAttachedStatus(ifpDetailsAttachedStatus);
		}

		String totalMarketshareCommitment = (String)attributes.get(
				"totalMarketshareCommitment");

		if (totalMarketshareCommitment != null) {
			setTotalMarketshareCommitment(totalMarketshareCommitment);
		}

		Date ifpDetailsAttachedDate = (Date)attributes.get(
				"ifpDetailsAttachedDate");

		if (ifpDetailsAttachedDate != null) {
			setIfpDetailsAttachedDate(ifpDetailsAttachedDate);
		}

		Integer imtdIfpDetailsSid = (Integer)attributes.get("imtdIfpDetailsSid");

		if (imtdIfpDetailsSid != null) {
			setImtdIfpDetailsSid(imtdIfpDetailsSid);
		}

		String sessionId = (String)attributes.get("sessionId");

		if (sessionId != null) {
			setSessionId(sessionId);
		}

		String itemName = (String)attributes.get("itemName");

		if (itemName != null) {
			setItemName(itemName);
		}

		String itemPrimaryUom = (String)attributes.get("itemPrimaryUom");

		if (itemPrimaryUom != null) {
			setItemPrimaryUom(itemPrimaryUom);
		}

		String operation = (String)attributes.get("operation");

		if (operation != null) {
			setOperation(operation);
		}

		String itemBrand = (String)attributes.get("itemBrand");

		if (itemBrand != null) {
			setItemBrand(itemBrand);
		}

		Integer cfpModelSid = (Integer)attributes.get("cfpModelSid");

		if (cfpModelSid != null) {
			setCfpModelSid(cfpModelSid);
		}
	}

	@Override
	public int getItemStatus() {
		return _itemStatus;
	}

	@Override
	public void setItemStatus(int itemStatus) {
		_itemStatus = itemStatus;
	}

	@Override
	public Date getIfpDetailsEndDate() {
		return _ifpDetailsEndDate;
	}

	@Override
	public void setIfpDetailsEndDate(Date ifpDetailsEndDate) {
		_ifpDetailsEndDate = ifpDetailsEndDate;
	}

	@Override
	public int getItemMasterSid() {
		return _itemMasterSid;
	}

	@Override
	public void setItemMasterSid(int itemMasterSid) {
		_itemMasterSid = itemMasterSid;
	}

	@Override
	public Date getImtdCreateddate() {
		return _imtdCreateddate;
	}

	@Override
	public void setImtdCreateddate(Date imtdCreateddate) {
		_columnBitmask |= IMTDCREATEDDATE_COLUMN_BITMASK;

		if (_originalImtdCreateddate == null) {
			_originalImtdCreateddate = _imtdCreateddate;
		}

		_imtdCreateddate = imtdCreateddate;
	}

	public Date getOriginalImtdCreateddate() {
		return _originalImtdCreateddate;
	}

	@Override
	public String getItemPackageSize() {
		if (_itemPackageSize == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemPackageSize;
		}
	}

	@Override
	public void setItemPackageSize(String itemPackageSize) {
		_itemPackageSize = itemPackageSize;
	}

	@Override
	public Date getIfpDetailsCreatedDate() {
		return _ifpDetailsCreatedDate;
	}

	@Override
	public void setIfpDetailsCreatedDate(Date ifpDetailsCreatedDate) {
		_ifpDetailsCreatedDate = ifpDetailsCreatedDate;
	}

	@Override
	public String getTotalDollarCommitment() {
		if (_totalDollarCommitment == null) {
			return StringPool.BLANK;
		}
		else {
			return _totalDollarCommitment;
		}
	}

	@Override
	public void setTotalDollarCommitment(String totalDollarCommitment) {
		_totalDollarCommitment = totalDollarCommitment;
	}

	@Override
	public String getIfpDetailsCreatedBy() {
		if (_ifpDetailsCreatedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ifpDetailsCreatedBy;
		}
	}

	@Override
	public void setIfpDetailsCreatedBy(String ifpDetailsCreatedBy) {
		_ifpDetailsCreatedBy = ifpDetailsCreatedBy;
	}

	@Override
	public String getItemId() {
		if (_itemId == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemId;
		}
	}

	@Override
	public void setItemId(String itemId) {
		_itemId = itemId;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getIfpDetailsModifiedBy() {
		if (_ifpDetailsModifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _ifpDetailsModifiedBy;
		}
	}

	@Override
	public void setIfpDetailsModifiedBy(String ifpDetailsModifiedBy) {
		_ifpDetailsModifiedBy = ifpDetailsModifiedBy;
	}

	@Override
	public Date getIfpDetailsModifiedDate() {
		return _ifpDetailsModifiedDate;
	}

	@Override
	public void setIfpDetailsModifiedDate(Date ifpDetailsModifiedDate) {
		_ifpDetailsModifiedDate = ifpDetailsModifiedDate;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getUsersSid() {
		return _usersSid;
	}

	@Override
	public void setUsersSid(int usersSid) {
		_columnBitmask |= USERSSID_COLUMN_BITMASK;

		if (!_setOriginalUsersSid) {
			_setOriginalUsersSid = true;

			_originalUsersSid = _usersSid;
		}

		_usersSid = usersSid;
	}

	public int getOriginalUsersSid() {
		return _originalUsersSid;
	}

	@Override
	public String getItemDesc() {
		if (_itemDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemDesc;
		}
	}

	@Override
	public void setItemDesc(String itemDesc) {
		_itemDesc = itemDesc;
	}

	@Override
	public Date getItemStartDate() {
		return _itemStartDate;
	}

	@Override
	public void setItemStartDate(Date itemStartDate) {
		_itemStartDate = itemStartDate;
	}

	@Override
	public String getItemStrength() {
		if (_itemStrength == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemStrength;
		}
	}

	@Override
	public void setItemStrength(String itemStrength) {
		_itemStrength = itemStrength;
	}

	@Override
	public int getContractMasterSid() {
		return _contractMasterSid;
	}

	@Override
	public void setContractMasterSid(int contractMasterSid) {
		_contractMasterSid = contractMasterSid;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getCommitmentPeriod() {
		if (_commitmentPeriod == null) {
			return StringPool.BLANK;
		}
		else {
			return _commitmentPeriod;
		}
	}

	@Override
	public void setCommitmentPeriod(String commitmentPeriod) {
		_commitmentPeriod = commitmentPeriod;
	}

	@Override
	public String getItemNo() {
		if (_itemNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemNo;
		}
	}

	@Override
	public void setItemNo(String itemNo) {
		_itemNo = itemNo;
	}

	@Override
	public int getIfpDetailsSid() {
		return _ifpDetailsSid;
	}

	@Override
	public void setIfpDetailsSid(int ifpDetailsSid) {
		_ifpDetailsSid = ifpDetailsSid;
	}

	@Override
	public int getIfpModelSid() {
		return _ifpModelSid;
	}

	@Override
	public void setIfpModelSid(int ifpModelSid) {
		_ifpModelSid = ifpModelSid;
	}

	@Override
	public String getItemTherapeuticClass() {
		if (_itemTherapeuticClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemTherapeuticClass;
		}
	}

	@Override
	public void setItemTherapeuticClass(String itemTherapeuticClass) {
		_itemTherapeuticClass = itemTherapeuticClass;
	}

	@Override
	public Date getIfpDetailsStartDate() {
		return _ifpDetailsStartDate;
	}

	@Override
	public void setIfpDetailsStartDate(Date ifpDetailsStartDate) {
		_ifpDetailsStartDate = ifpDetailsStartDate;
	}

	@Override
	public String getItemForm() {
		if (_itemForm == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemForm;
		}
	}

	@Override
	public void setItemForm(String itemForm) {
		_itemForm = itemForm;
	}

	@Override
	public String getTotalVolumeCommitment() {
		if (_totalVolumeCommitment == null) {
			return StringPool.BLANK;
		}
		else {
			return _totalVolumeCommitment;
		}
	}

	@Override
	public void setTotalVolumeCommitment(String totalVolumeCommitment) {
		_totalVolumeCommitment = totalVolumeCommitment;
	}

	@Override
	public Date getItemEndDate() {
		return _itemEndDate;
	}

	@Override
	public void setItemEndDate(Date itemEndDate) {
		_itemEndDate = itemEndDate;
	}

	@Override
	public boolean getCheckBox() {
		return _checkBox;
	}

	@Override
	public boolean isCheckBox() {
		return _checkBox;
	}

	@Override
	public void setCheckBox(boolean checkBox) {
		_checkBox = checkBox;
	}

	@Override
	public int getIfpDetailsAttachedStatus() {
		return _ifpDetailsAttachedStatus;
	}

	@Override
	public void setIfpDetailsAttachedStatus(int ifpDetailsAttachedStatus) {
		_ifpDetailsAttachedStatus = ifpDetailsAttachedStatus;
	}

	@Override
	public String getTotalMarketshareCommitment() {
		if (_totalMarketshareCommitment == null) {
			return StringPool.BLANK;
		}
		else {
			return _totalMarketshareCommitment;
		}
	}

	@Override
	public void setTotalMarketshareCommitment(String totalMarketshareCommitment) {
		_totalMarketshareCommitment = totalMarketshareCommitment;
	}

	@Override
	public Date getIfpDetailsAttachedDate() {
		return _ifpDetailsAttachedDate;
	}

	@Override
	public void setIfpDetailsAttachedDate(Date ifpDetailsAttachedDate) {
		_ifpDetailsAttachedDate = ifpDetailsAttachedDate;
	}

	@Override
	public int getImtdIfpDetailsSid() {
		return _imtdIfpDetailsSid;
	}

	@Override
	public void setImtdIfpDetailsSid(int imtdIfpDetailsSid) {
		_imtdIfpDetailsSid = imtdIfpDetailsSid;
	}

	@Override
	public String getSessionId() {
		if (_sessionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _sessionId;
		}
	}

	@Override
	public void setSessionId(String sessionId) {
		_columnBitmask |= SESSIONID_COLUMN_BITMASK;

		if (_originalSessionId == null) {
			_originalSessionId = _sessionId;
		}

		_sessionId = sessionId;
	}

	public String getOriginalSessionId() {
		return GetterUtil.getString(_originalSessionId);
	}

	@Override
	public String getItemName() {
		if (_itemName == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemName;
		}
	}

	@Override
	public void setItemName(String itemName) {
		_itemName = itemName;
	}

	@Override
	public String getItemPrimaryUom() {
		if (_itemPrimaryUom == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemPrimaryUom;
		}
	}

	@Override
	public void setItemPrimaryUom(String itemPrimaryUom) {
		_itemPrimaryUom = itemPrimaryUom;
	}

	@Override
	public String getOperation() {
		if (_operation == null) {
			return StringPool.BLANK;
		}
		else {
			return _operation;
		}
	}

	@Override
	public void setOperation(String operation) {
		_operation = operation;
	}

	@Override
	public String getItemBrand() {
		if (_itemBrand == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemBrand;
		}
	}

	@Override
	public void setItemBrand(String itemBrand) {
		_itemBrand = itemBrand;
	}

	@Override
	public int getCfpModelSid() {
		return _cfpModelSid;
	}

	@Override
	public void setCfpModelSid(int cfpModelSid) {
		_cfpModelSid = cfpModelSid;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ImtdIfpDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ImtdIfpDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ImtdIfpDetailsImpl imtdIfpDetailsImpl = new ImtdIfpDetailsImpl();

		imtdIfpDetailsImpl.setItemStatus(getItemStatus());
		imtdIfpDetailsImpl.setIfpDetailsEndDate(getIfpDetailsEndDate());
		imtdIfpDetailsImpl.setItemMasterSid(getItemMasterSid());
		imtdIfpDetailsImpl.setImtdCreateddate(getImtdCreateddate());
		imtdIfpDetailsImpl.setItemPackageSize(getItemPackageSize());
		imtdIfpDetailsImpl.setIfpDetailsCreatedDate(getIfpDetailsCreatedDate());
		imtdIfpDetailsImpl.setTotalDollarCommitment(getTotalDollarCommitment());
		imtdIfpDetailsImpl.setIfpDetailsCreatedBy(getIfpDetailsCreatedBy());
		imtdIfpDetailsImpl.setItemId(getItemId());
		imtdIfpDetailsImpl.setModifiedDate(getModifiedDate());
		imtdIfpDetailsImpl.setIfpDetailsModifiedBy(getIfpDetailsModifiedBy());
		imtdIfpDetailsImpl.setIfpDetailsModifiedDate(getIfpDetailsModifiedDate());
		imtdIfpDetailsImpl.setCreatedDate(getCreatedDate());
		imtdIfpDetailsImpl.setCreatedBy(getCreatedBy());
		imtdIfpDetailsImpl.setUsersSid(getUsersSid());
		imtdIfpDetailsImpl.setItemDesc(getItemDesc());
		imtdIfpDetailsImpl.setItemStartDate(getItemStartDate());
		imtdIfpDetailsImpl.setItemStrength(getItemStrength());
		imtdIfpDetailsImpl.setContractMasterSid(getContractMasterSid());
		imtdIfpDetailsImpl.setModifiedBy(getModifiedBy());
		imtdIfpDetailsImpl.setCommitmentPeriod(getCommitmentPeriod());
		imtdIfpDetailsImpl.setItemNo(getItemNo());
		imtdIfpDetailsImpl.setIfpDetailsSid(getIfpDetailsSid());
		imtdIfpDetailsImpl.setIfpModelSid(getIfpModelSid());
		imtdIfpDetailsImpl.setItemTherapeuticClass(getItemTherapeuticClass());
		imtdIfpDetailsImpl.setIfpDetailsStartDate(getIfpDetailsStartDate());
		imtdIfpDetailsImpl.setItemForm(getItemForm());
		imtdIfpDetailsImpl.setTotalVolumeCommitment(getTotalVolumeCommitment());
		imtdIfpDetailsImpl.setItemEndDate(getItemEndDate());
		imtdIfpDetailsImpl.setCheckBox(getCheckBox());
		imtdIfpDetailsImpl.setIfpDetailsAttachedStatus(getIfpDetailsAttachedStatus());
		imtdIfpDetailsImpl.setTotalMarketshareCommitment(getTotalMarketshareCommitment());
		imtdIfpDetailsImpl.setIfpDetailsAttachedDate(getIfpDetailsAttachedDate());
		imtdIfpDetailsImpl.setImtdIfpDetailsSid(getImtdIfpDetailsSid());
		imtdIfpDetailsImpl.setSessionId(getSessionId());
		imtdIfpDetailsImpl.setItemName(getItemName());
		imtdIfpDetailsImpl.setItemPrimaryUom(getItemPrimaryUom());
		imtdIfpDetailsImpl.setOperation(getOperation());
		imtdIfpDetailsImpl.setItemBrand(getItemBrand());
		imtdIfpDetailsImpl.setCfpModelSid(getCfpModelSid());

		imtdIfpDetailsImpl.resetOriginalValues();

		return imtdIfpDetailsImpl;
	}

	@Override
	public int compareTo(ImtdIfpDetails imtdIfpDetails) {
		int primaryKey = imtdIfpDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ImtdIfpDetails)) {
			return false;
		}

		ImtdIfpDetails imtdIfpDetails = (ImtdIfpDetails)obj;

		int primaryKey = imtdIfpDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ImtdIfpDetailsModelImpl imtdIfpDetailsModelImpl = this;

		imtdIfpDetailsModelImpl._originalImtdCreateddate = imtdIfpDetailsModelImpl._imtdCreateddate;

		imtdIfpDetailsModelImpl._originalUsersSid = imtdIfpDetailsModelImpl._usersSid;

		imtdIfpDetailsModelImpl._setOriginalUsersSid = false;

		imtdIfpDetailsModelImpl._originalSessionId = imtdIfpDetailsModelImpl._sessionId;

		imtdIfpDetailsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ImtdIfpDetails> toCacheModel() {
		ImtdIfpDetailsCacheModel imtdIfpDetailsCacheModel = new ImtdIfpDetailsCacheModel();

		imtdIfpDetailsCacheModel.itemStatus = getItemStatus();

		Date ifpDetailsEndDate = getIfpDetailsEndDate();

		if (ifpDetailsEndDate != null) {
			imtdIfpDetailsCacheModel.ifpDetailsEndDate = ifpDetailsEndDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.ifpDetailsEndDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.itemMasterSid = getItemMasterSid();

		Date imtdCreateddate = getImtdCreateddate();

		if (imtdCreateddate != null) {
			imtdIfpDetailsCacheModel.imtdCreateddate = imtdCreateddate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.imtdCreateddate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.itemPackageSize = getItemPackageSize();

		String itemPackageSize = imtdIfpDetailsCacheModel.itemPackageSize;

		if ((itemPackageSize != null) && (itemPackageSize.length() == 0)) {
			imtdIfpDetailsCacheModel.itemPackageSize = null;
		}

		Date ifpDetailsCreatedDate = getIfpDetailsCreatedDate();

		if (ifpDetailsCreatedDate != null) {
			imtdIfpDetailsCacheModel.ifpDetailsCreatedDate = ifpDetailsCreatedDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.ifpDetailsCreatedDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.totalDollarCommitment = getTotalDollarCommitment();

		String totalDollarCommitment = imtdIfpDetailsCacheModel.totalDollarCommitment;

		if ((totalDollarCommitment != null) &&
				(totalDollarCommitment.length() == 0)) {
			imtdIfpDetailsCacheModel.totalDollarCommitment = null;
		}

		imtdIfpDetailsCacheModel.ifpDetailsCreatedBy = getIfpDetailsCreatedBy();

		String ifpDetailsCreatedBy = imtdIfpDetailsCacheModel.ifpDetailsCreatedBy;

		if ((ifpDetailsCreatedBy != null) &&
				(ifpDetailsCreatedBy.length() == 0)) {
			imtdIfpDetailsCacheModel.ifpDetailsCreatedBy = null;
		}

		imtdIfpDetailsCacheModel.itemId = getItemId();

		String itemId = imtdIfpDetailsCacheModel.itemId;

		if ((itemId != null) && (itemId.length() == 0)) {
			imtdIfpDetailsCacheModel.itemId = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			imtdIfpDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.ifpDetailsModifiedBy = getIfpDetailsModifiedBy();

		String ifpDetailsModifiedBy = imtdIfpDetailsCacheModel.ifpDetailsModifiedBy;

		if ((ifpDetailsModifiedBy != null) &&
				(ifpDetailsModifiedBy.length() == 0)) {
			imtdIfpDetailsCacheModel.ifpDetailsModifiedBy = null;
		}

		Date ifpDetailsModifiedDate = getIfpDetailsModifiedDate();

		if (ifpDetailsModifiedDate != null) {
			imtdIfpDetailsCacheModel.ifpDetailsModifiedDate = ifpDetailsModifiedDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.ifpDetailsModifiedDate = Long.MIN_VALUE;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			imtdIfpDetailsCacheModel.createdDate = createdDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.createdDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.createdBy = getCreatedBy();

		imtdIfpDetailsCacheModel.usersSid = getUsersSid();

		imtdIfpDetailsCacheModel.itemDesc = getItemDesc();

		String itemDesc = imtdIfpDetailsCacheModel.itemDesc;

		if ((itemDesc != null) && (itemDesc.length() == 0)) {
			imtdIfpDetailsCacheModel.itemDesc = null;
		}

		Date itemStartDate = getItemStartDate();

		if (itemStartDate != null) {
			imtdIfpDetailsCacheModel.itemStartDate = itemStartDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.itemStartDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.itemStrength = getItemStrength();

		String itemStrength = imtdIfpDetailsCacheModel.itemStrength;

		if ((itemStrength != null) && (itemStrength.length() == 0)) {
			imtdIfpDetailsCacheModel.itemStrength = null;
		}

		imtdIfpDetailsCacheModel.contractMasterSid = getContractMasterSid();

		imtdIfpDetailsCacheModel.modifiedBy = getModifiedBy();

		imtdIfpDetailsCacheModel.commitmentPeriod = getCommitmentPeriod();

		String commitmentPeriod = imtdIfpDetailsCacheModel.commitmentPeriod;

		if ((commitmentPeriod != null) && (commitmentPeriod.length() == 0)) {
			imtdIfpDetailsCacheModel.commitmentPeriod = null;
		}

		imtdIfpDetailsCacheModel.itemNo = getItemNo();

		String itemNo = imtdIfpDetailsCacheModel.itemNo;

		if ((itemNo != null) && (itemNo.length() == 0)) {
			imtdIfpDetailsCacheModel.itemNo = null;
		}

		imtdIfpDetailsCacheModel.ifpDetailsSid = getIfpDetailsSid();

		imtdIfpDetailsCacheModel.ifpModelSid = getIfpModelSid();

		imtdIfpDetailsCacheModel.itemTherapeuticClass = getItemTherapeuticClass();

		String itemTherapeuticClass = imtdIfpDetailsCacheModel.itemTherapeuticClass;

		if ((itemTherapeuticClass != null) &&
				(itemTherapeuticClass.length() == 0)) {
			imtdIfpDetailsCacheModel.itemTherapeuticClass = null;
		}

		Date ifpDetailsStartDate = getIfpDetailsStartDate();

		if (ifpDetailsStartDate != null) {
			imtdIfpDetailsCacheModel.ifpDetailsStartDate = ifpDetailsStartDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.ifpDetailsStartDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.itemForm = getItemForm();

		String itemForm = imtdIfpDetailsCacheModel.itemForm;

		if ((itemForm != null) && (itemForm.length() == 0)) {
			imtdIfpDetailsCacheModel.itemForm = null;
		}

		imtdIfpDetailsCacheModel.totalVolumeCommitment = getTotalVolumeCommitment();

		String totalVolumeCommitment = imtdIfpDetailsCacheModel.totalVolumeCommitment;

		if ((totalVolumeCommitment != null) &&
				(totalVolumeCommitment.length() == 0)) {
			imtdIfpDetailsCacheModel.totalVolumeCommitment = null;
		}

		Date itemEndDate = getItemEndDate();

		if (itemEndDate != null) {
			imtdIfpDetailsCacheModel.itemEndDate = itemEndDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.itemEndDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.checkBox = getCheckBox();

		imtdIfpDetailsCacheModel.ifpDetailsAttachedStatus = getIfpDetailsAttachedStatus();

		imtdIfpDetailsCacheModel.totalMarketshareCommitment = getTotalMarketshareCommitment();

		String totalMarketshareCommitment = imtdIfpDetailsCacheModel.totalMarketshareCommitment;

		if ((totalMarketshareCommitment != null) &&
				(totalMarketshareCommitment.length() == 0)) {
			imtdIfpDetailsCacheModel.totalMarketshareCommitment = null;
		}

		Date ifpDetailsAttachedDate = getIfpDetailsAttachedDate();

		if (ifpDetailsAttachedDate != null) {
			imtdIfpDetailsCacheModel.ifpDetailsAttachedDate = ifpDetailsAttachedDate.getTime();
		}
		else {
			imtdIfpDetailsCacheModel.ifpDetailsAttachedDate = Long.MIN_VALUE;
		}

		imtdIfpDetailsCacheModel.imtdIfpDetailsSid = getImtdIfpDetailsSid();

		imtdIfpDetailsCacheModel.sessionId = getSessionId();

		String sessionId = imtdIfpDetailsCacheModel.sessionId;

		if ((sessionId != null) && (sessionId.length() == 0)) {
			imtdIfpDetailsCacheModel.sessionId = null;
		}

		imtdIfpDetailsCacheModel.itemName = getItemName();

		String itemName = imtdIfpDetailsCacheModel.itemName;

		if ((itemName != null) && (itemName.length() == 0)) {
			imtdIfpDetailsCacheModel.itemName = null;
		}

		imtdIfpDetailsCacheModel.itemPrimaryUom = getItemPrimaryUom();

		String itemPrimaryUom = imtdIfpDetailsCacheModel.itemPrimaryUom;

		if ((itemPrimaryUom != null) && (itemPrimaryUom.length() == 0)) {
			imtdIfpDetailsCacheModel.itemPrimaryUom = null;
		}

		imtdIfpDetailsCacheModel.operation = getOperation();

		String operation = imtdIfpDetailsCacheModel.operation;

		if ((operation != null) && (operation.length() == 0)) {
			imtdIfpDetailsCacheModel.operation = null;
		}

		imtdIfpDetailsCacheModel.itemBrand = getItemBrand();

		String itemBrand = imtdIfpDetailsCacheModel.itemBrand;

		if ((itemBrand != null) && (itemBrand.length() == 0)) {
			imtdIfpDetailsCacheModel.itemBrand = null;
		}

		imtdIfpDetailsCacheModel.cfpModelSid = getCfpModelSid();

		return imtdIfpDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(81);

		sb.append("{itemStatus=");
		sb.append(getItemStatus());
		sb.append(", ifpDetailsEndDate=");
		sb.append(getIfpDetailsEndDate());
		sb.append(", itemMasterSid=");
		sb.append(getItemMasterSid());
		sb.append(", imtdCreateddate=");
		sb.append(getImtdCreateddate());
		sb.append(", itemPackageSize=");
		sb.append(getItemPackageSize());
		sb.append(", ifpDetailsCreatedDate=");
		sb.append(getIfpDetailsCreatedDate());
		sb.append(", totalDollarCommitment=");
		sb.append(getTotalDollarCommitment());
		sb.append(", ifpDetailsCreatedBy=");
		sb.append(getIfpDetailsCreatedBy());
		sb.append(", itemId=");
		sb.append(getItemId());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", ifpDetailsModifiedBy=");
		sb.append(getIfpDetailsModifiedBy());
		sb.append(", ifpDetailsModifiedDate=");
		sb.append(getIfpDetailsModifiedDate());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", usersSid=");
		sb.append(getUsersSid());
		sb.append(", itemDesc=");
		sb.append(getItemDesc());
		sb.append(", itemStartDate=");
		sb.append(getItemStartDate());
		sb.append(", itemStrength=");
		sb.append(getItemStrength());
		sb.append(", contractMasterSid=");
		sb.append(getContractMasterSid());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", commitmentPeriod=");
		sb.append(getCommitmentPeriod());
		sb.append(", itemNo=");
		sb.append(getItemNo());
		sb.append(", ifpDetailsSid=");
		sb.append(getIfpDetailsSid());
		sb.append(", ifpModelSid=");
		sb.append(getIfpModelSid());
		sb.append(", itemTherapeuticClass=");
		sb.append(getItemTherapeuticClass());
		sb.append(", ifpDetailsStartDate=");
		sb.append(getIfpDetailsStartDate());
		sb.append(", itemForm=");
		sb.append(getItemForm());
		sb.append(", totalVolumeCommitment=");
		sb.append(getTotalVolumeCommitment());
		sb.append(", itemEndDate=");
		sb.append(getItemEndDate());
		sb.append(", checkBox=");
		sb.append(getCheckBox());
		sb.append(", ifpDetailsAttachedStatus=");
		sb.append(getIfpDetailsAttachedStatus());
		sb.append(", totalMarketshareCommitment=");
		sb.append(getTotalMarketshareCommitment());
		sb.append(", ifpDetailsAttachedDate=");
		sb.append(getIfpDetailsAttachedDate());
		sb.append(", imtdIfpDetailsSid=");
		sb.append(getImtdIfpDetailsSid());
		sb.append(", sessionId=");
		sb.append(getSessionId());
		sb.append(", itemName=");
		sb.append(getItemName());
		sb.append(", itemPrimaryUom=");
		sb.append(getItemPrimaryUom());
		sb.append(", operation=");
		sb.append(getOperation());
		sb.append(", itemBrand=");
		sb.append(getItemBrand());
		sb.append(", cfpModelSid=");
		sb.append(getCfpModelSid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(124);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.ImtdIfpDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>itemStatus</column-name><column-value><![CDATA[");
		sb.append(getItemStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsEndDate</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemMasterSid</column-name><column-value><![CDATA[");
		sb.append(getItemMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imtdCreateddate</column-name><column-value><![CDATA[");
		sb.append(getImtdCreateddate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemPackageSize</column-name><column-value><![CDATA[");
		sb.append(getItemPackageSize());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsCreatedDate</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalDollarCommitment</column-name><column-value><![CDATA[");
		sb.append(getTotalDollarCommitment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsCreatedBy</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsModifiedBy</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsModifiedDate</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usersSid</column-name><column-value><![CDATA[");
		sb.append(getUsersSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemDesc</column-name><column-value><![CDATA[");
		sb.append(getItemDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemStartDate</column-name><column-value><![CDATA[");
		sb.append(getItemStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemStrength</column-name><column-value><![CDATA[");
		sb.append(getItemStrength());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
		sb.append(getContractMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>commitmentPeriod</column-name><column-value><![CDATA[");
		sb.append(getCommitmentPeriod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemNo</column-name><column-value><![CDATA[");
		sb.append(getItemNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsSid</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpModelSid</column-name><column-value><![CDATA[");
		sb.append(getIfpModelSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemTherapeuticClass</column-name><column-value><![CDATA[");
		sb.append(getItemTherapeuticClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsStartDate</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemForm</column-name><column-value><![CDATA[");
		sb.append(getItemForm());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalVolumeCommitment</column-name><column-value><![CDATA[");
		sb.append(getTotalVolumeCommitment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemEndDate</column-name><column-value><![CDATA[");
		sb.append(getItemEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkBox</column-name><column-value><![CDATA[");
		sb.append(getCheckBox());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsAttachedStatus</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsAttachedStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>totalMarketshareCommitment</column-name><column-value><![CDATA[");
		sb.append(getTotalMarketshareCommitment());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpDetailsAttachedDate</column-name><column-value><![CDATA[");
		sb.append(getIfpDetailsAttachedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imtdIfpDetailsSid</column-name><column-value><![CDATA[");
		sb.append(getImtdIfpDetailsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sessionId</column-name><column-value><![CDATA[");
		sb.append(getSessionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemName</column-name><column-value><![CDATA[");
		sb.append(getItemName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemPrimaryUom</column-name><column-value><![CDATA[");
		sb.append(getItemPrimaryUom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>operation</column-name><column-value><![CDATA[");
		sb.append(getOperation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemBrand</column-name><column-value><![CDATA[");
		sb.append(getItemBrand());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpModelSid</column-name><column-value><![CDATA[");
		sb.append(getCfpModelSid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ImtdIfpDetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ImtdIfpDetails.class
		};
	private int _itemStatus;
	private Date _ifpDetailsEndDate;
	private int _itemMasterSid;
	private Date _imtdCreateddate;
	private Date _originalImtdCreateddate;
	private String _itemPackageSize;
	private Date _ifpDetailsCreatedDate;
	private String _totalDollarCommitment;
	private String _ifpDetailsCreatedBy;
	private String _itemId;
	private Date _modifiedDate;
	private String _ifpDetailsModifiedBy;
	private Date _ifpDetailsModifiedDate;
	private Date _createdDate;
	private int _createdBy;
	private int _usersSid;
	private int _originalUsersSid;
	private boolean _setOriginalUsersSid;
	private String _itemDesc;
	private Date _itemStartDate;
	private String _itemStrength;
	private int _contractMasterSid;
	private int _modifiedBy;
	private String _commitmentPeriod;
	private String _itemNo;
	private int _ifpDetailsSid;
	private int _ifpModelSid;
	private String _itemTherapeuticClass;
	private Date _ifpDetailsStartDate;
	private String _itemForm;
	private String _totalVolumeCommitment;
	private Date _itemEndDate;
	private boolean _checkBox;
	private int _ifpDetailsAttachedStatus;
	private String _totalMarketshareCommitment;
	private Date _ifpDetailsAttachedDate;
	private int _imtdIfpDetailsSid;
	private String _sessionId;
	private String _originalSessionId;
	private String _itemName;
	private String _itemPrimaryUom;
	private String _operation;
	private String _itemBrand;
	private int _cfpModelSid;
	private long _columnBitmask;
	private ImtdIfpDetails _escapedModel;
}