package com.stpl.app.model;

import com.stpl.portal.kernel.bean.AutoEscape;
import com.stpl.portal.model.BaseModel;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.service.ServiceContext;

import com.stpl.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the VwIvldDemandForecastActual service. Represents a row in the &quot;VW_IVLD_DEMAND_FORECAST_ACTUAL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.VwIvldDemandForecastActualModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.VwIvldDemandForecastActualImpl}.
 * </p>
 *
 * @author
 * @see VwIvldDemandForecastActual
 * @see com.stpl.app.model.impl.VwIvldDemandForecastActualImpl
 * @see com.stpl.app.model.impl.VwIvldDemandForecastActualModelImpl
 * @generated
 */
public interface VwIvldDemandForecastActualModel extends BaseModel<VwIvldDemandForecastActual> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a vw ivld demand forecast actual model instance should use the {@link VwIvldDemandForecastActual} interface instead.
     */

    /**
     * Returns the primary key of this vw ivld demand forecast actual.
     *
     * @return the primary key of this vw ivld demand forecast actual
     */
    public int getPrimaryKey();

    /**
     * Sets the primary key of this vw ivld demand forecast actual.
     *
     * @param primaryKey the primary key of this vw ivld demand forecast actual
     */
    public void setPrimaryKey(int primaryKey);

    /**
     * Returns the demand int sid of this vw ivld demand forecast actual.
     *
     * @return the demand int sid of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getDemandIntSid();

    /**
     * Sets the demand int sid of this vw ivld demand forecast actual.
     *
     * @param demandIntSid the demand int sid of this vw ivld demand forecast actual
     */
    public void setDemandIntSid(String demandIntSid);

    /**
     * Returns the forecast year of this vw ivld demand forecast actual.
     *
     * @return the forecast year of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getForecastYear();

    /**
     * Sets the forecast year of this vw ivld demand forecast actual.
     *
     * @param forecastYear the forecast year of this vw ivld demand forecast actual
     */
    public void setForecastYear(String forecastYear);

    /**
     * Returns the gross units of this vw ivld demand forecast actual.
     *
     * @return the gross units of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getGrossUnits();

    /**
     * Sets the gross units of this vw ivld demand forecast actual.
     *
     * @param grossUnits the gross units of this vw ivld demand forecast actual
     */
    public void setGrossUnits(String grossUnits);

    /**
     * Returns the business unit no of this vw ivld demand forecast actual.
     *
     * @return the business unit no of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getBusinessUnitNo();

    /**
     * Sets the business unit no of this vw ivld demand forecast actual.
     *
     * @param businessUnitNo the business unit no of this vw ivld demand forecast actual
     */
    public void setBusinessUnitNo(String businessUnitNo);

    /**
     * Returns the total demand units of this vw ivld demand forecast actual.
     *
     * @return the total demand units of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getTotalDemandUnits();

    /**
     * Sets the total demand units of this vw ivld demand forecast actual.
     *
     * @param totalDemandUnits the total demand units of this vw ivld demand forecast actual
     */
    public void setTotalDemandUnits(String totalDemandUnits);

    /**
     * Returns the brand name of this vw ivld demand forecast actual.
     *
     * @return the brand name of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getBrandName();

    /**
     * Sets the brand name of this vw ivld demand forecast actual.
     *
     * @param brandName the brand name of this vw ivld demand forecast actual
     */
    public void setBrandName(String brandName);

    /**
     * Returns the item ID of this vw ivld demand forecast actual.
     *
     * @return the item ID of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getItemId();

    /**
     * Sets the item ID of this vw ivld demand forecast actual.
     *
     * @param itemId the item ID of this vw ivld demand forecast actual
     */
    public void setItemId(String itemId);

    /**
     * Returns the organization key of this vw ivld demand forecast actual.
     *
     * @return the organization key of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getOrganizationKey();

    /**
     * Sets the organization key of this vw ivld demand forecast actual.
     *
     * @param organizationKey the organization key of this vw ivld demand forecast actual
     */
    public void setOrganizationKey(String organizationKey);

    /**
     * Returns the source of this vw ivld demand forecast actual.
     *
     * @return the source of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getSource();

    /**
     * Sets the source of this vw ivld demand forecast actual.
     *
     * @param source the source of this vw ivld demand forecast actual
     */
    public void setSource(String source);

    /**
     * Returns the market share ratio of this vw ivld demand forecast actual.
     *
     * @return the market share ratio of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getMarketShareRatio();

    /**
     * Sets the market share ratio of this vw ivld demand forecast actual.
     *
     * @param marketShareRatio the market share ratio of this vw ivld demand forecast actual
     */
    public void setMarketShareRatio(String marketShareRatio);

    /**
     * Returns the ivld demand actual forecast sid of this vw ivld demand forecast actual.
     *
     * @return the ivld demand actual forecast sid of this vw ivld demand forecast actual
     */
    public int getIvldDemandActualForecastSid();

    /**
     * Sets the ivld demand actual forecast sid of this vw ivld demand forecast actual.
     *
     * @param ivldDemandActualForecastSid the ivld demand actual forecast sid of this vw ivld demand forecast actual
     */
    public void setIvldDemandActualForecastSid(int ivldDemandActualForecastSid);

    /**
     * Returns the business unit name of this vw ivld demand forecast actual.
     *
     * @return the business unit name of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getBusinessUnitName();

    /**
     * Sets the business unit name of this vw ivld demand forecast actual.
     *
     * @param businessUnitName the business unit name of this vw ivld demand forecast actual
     */
    public void setBusinessUnitName(String businessUnitName);

    /**
     * Returns the add chg del indicator of this vw ivld demand forecast actual.
     *
     * @return the add chg del indicator of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getAddChgDelIndicator();

    /**
     * Sets the add chg del indicator of this vw ivld demand forecast actual.
     *
     * @param addChgDelIndicator the add chg del indicator of this vw ivld demand forecast actual
     */
    public void setAddChgDelIndicator(String addChgDelIndicator);

    /**
     * Returns the error code of this vw ivld demand forecast actual.
     *
     * @return the error code of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getErrorCode();

    /**
     * Sets the error code of this vw ivld demand forecast actual.
     *
     * @param errorCode the error code of this vw ivld demand forecast actual
     */
    public void setErrorCode(String errorCode);

    /**
     * Returns the market share units of this vw ivld demand forecast actual.
     *
     * @return the market share units of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getMarketShareUnits();

    /**
     * Sets the market share units of this vw ivld demand forecast actual.
     *
     * @param marketShareUnits the market share units of this vw ivld demand forecast actual
     */
    public void setMarketShareUnits(String marketShareUnits);

    /**
     * Returns the inventory unit change of this vw ivld demand forecast actual.
     *
     * @return the inventory unit change of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getInventoryUnitChange();

    /**
     * Sets the inventory unit change of this vw ivld demand forecast actual.
     *
     * @param inventoryUnitChange the inventory unit change of this vw ivld demand forecast actual
     */
    public void setInventoryUnitChange(String inventoryUnitChange);

    /**
     * Returns the reprocessed flag of this vw ivld demand forecast actual.
     *
     * @return the reprocessed flag of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getReprocessedFlag();

    /**
     * Sets the reprocessed flag of this vw ivld demand forecast actual.
     *
     * @param reprocessedFlag the reprocessed flag of this vw ivld demand forecast actual
     */
    public void setReprocessedFlag(String reprocessedFlag);

    /**
     * Returns the uncaptured units ratio of this vw ivld demand forecast actual.
     *
     * @return the uncaptured units ratio of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getUncapturedUnitsRatio();

    /**
     * Sets the uncaptured units ratio of this vw ivld demand forecast actual.
     *
     * @param uncapturedUnitsRatio the uncaptured units ratio of this vw ivld demand forecast actual
     */
    public void setUncapturedUnitsRatio(String uncapturedUnitsRatio);

    /**
     * Returns the reason for failure of this vw ivld demand forecast actual.
     *
     * @return the reason for failure of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getReasonForFailure();

    /**
     * Sets the reason for failure of this vw ivld demand forecast actual.
     *
     * @param reasonForFailure the reason for failure of this vw ivld demand forecast actual
     */
    public void setReasonForFailure(String reasonForFailure);

    /**
     * Returns the country of this vw ivld demand forecast actual.
     *
     * @return the country of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getCountry();

    /**
     * Sets the country of this vw ivld demand forecast actual.
     *
     * @param country the country of this vw ivld demand forecast actual
     */
    public void setCountry(String country);

    /**
     * Returns the forecast type of this vw ivld demand forecast actual.
     *
     * @return the forecast type of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getForecastType();

    /**
     * Sets the forecast type of this vw ivld demand forecast actual.
     *
     * @param forecastType the forecast type of this vw ivld demand forecast actual
     */
    public void setForecastType(String forecastType);

    /**
     * Returns the brand ID of this vw ivld demand forecast actual.
     *
     * @return the brand ID of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getBrandId();

    /**
     * Sets the brand ID of this vw ivld demand forecast actual.
     *
     * @param brandId the brand ID of this vw ivld demand forecast actual
     */
    public void setBrandId(String brandId);

    /**
     * Returns the is forecast of this vw ivld demand forecast actual.
     *
     * @return the is forecast of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getIsForecast();

    /**
     * Sets the is forecast of this vw ivld demand forecast actual.
     *
     * @param isForecast the is forecast of this vw ivld demand forecast actual
     */
    public void setIsForecast(String isForecast);

    /**
     * Returns the uncaptured units of this vw ivld demand forecast actual.
     *
     * @return the uncaptured units of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getUncapturedUnits();

    /**
     * Sets the uncaptured units of this vw ivld demand forecast actual.
     *
     * @param uncapturedUnits the uncaptured units of this vw ivld demand forecast actual
     */
    public void setUncapturedUnits(String uncapturedUnits);

    /**
     * Returns the gross price of this vw ivld demand forecast actual.
     *
     * @return the gross price of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getGrossPrice();

    /**
     * Sets the gross price of this vw ivld demand forecast actual.
     *
     * @param grossPrice the gross price of this vw ivld demand forecast actual
     */
    public void setGrossPrice(String grossPrice);

    /**
     * Returns the is active of this vw ivld demand forecast actual.
     *
     * @return the is active of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getIsActive();

    /**
     * Sets the is active of this vw ivld demand forecast actual.
     *
     * @param isActive the is active of this vw ivld demand forecast actual
     */
    public void setIsActive(String isActive);

    /**
     * Returns the gross amount of this vw ivld demand forecast actual.
     *
     * @return the gross amount of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getGrossAmount();

    /**
     * Sets the gross amount of this vw ivld demand forecast actual.
     *
     * @param grossAmount the gross amount of this vw ivld demand forecast actual
     */
    public void setGrossAmount(String grossAmount);

    /**
     * Returns the batch ID of this vw ivld demand forecast actual.
     *
     * @return the batch ID of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getBatchId();

    /**
     * Sets the batch ID of this vw ivld demand forecast actual.
     *
     * @param batchId the batch ID of this vw ivld demand forecast actual
     */
    public void setBatchId(String batchId);

    /**
     * Returns the forecast ver of this vw ivld demand forecast actual.
     *
     * @return the forecast ver of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getForecastVer();

    /**
     * Sets the forecast ver of this vw ivld demand forecast actual.
     *
     * @param forecastVer the forecast ver of this vw ivld demand forecast actual
     */
    public void setForecastVer(String forecastVer);

    /**
     * Returns the item name of this vw ivld demand forecast actual.
     *
     * @return the item name of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getItemName();

    /**
     * Sets the item name of this vw ivld demand forecast actual.
     *
     * @param itemName the item name of this vw ivld demand forecast actual
     */
    public void setItemName(String itemName);

    /**
     * Returns the forecast month of this vw ivld demand forecast actual.
     *
     * @return the forecast month of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getForecastMonth();

    /**
     * Sets the forecast month of this vw ivld demand forecast actual.
     *
     * @param forecastMonth the forecast month of this vw ivld demand forecast actual
     */
    public void setForecastMonth(String forecastMonth);

    /**
     * Returns the error field of this vw ivld demand forecast actual.
     *
     * @return the error field of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getErrorField();

    /**
     * Sets the error field of this vw ivld demand forecast actual.
     *
     * @param errorField the error field of this vw ivld demand forecast actual
     */
    public void setErrorField(String errorField);

    /**
     * Returns the net sales price of this vw ivld demand forecast actual.
     *
     * @return the net sales price of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getNetSalesPrice();

    /**
     * Sets the net sales price of this vw ivld demand forecast actual.
     *
     * @param netSalesPrice the net sales price of this vw ivld demand forecast actual
     */
    public void setNetSalesPrice(String netSalesPrice);

    /**
     * Returns the net sales amount of this vw ivld demand forecast actual.
     *
     * @return the net sales amount of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getNetSalesAmount();

    /**
     * Sets the net sales amount of this vw ivld demand forecast actual.
     *
     * @param netSalesAmount the net sales amount of this vw ivld demand forecast actual
     */
    public void setNetSalesAmount(String netSalesAmount);

    /**
     * Returns the segment of this vw ivld demand forecast actual.
     *
     * @return the segment of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getSegment();

    /**
     * Sets the segment of this vw ivld demand forecast actual.
     *
     * @param segment the segment of this vw ivld demand forecast actual
     */
    public void setSegment(String segment);

    /**
     * Returns the total demand amount of this vw ivld demand forecast actual.
     *
     * @return the total demand amount of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getTotalDemandAmount();

    /**
     * Sets the total demand amount of this vw ivld demand forecast actual.
     *
     * @param totalDemandAmount the total demand amount of this vw ivld demand forecast actual
     */
    public void setTotalDemandAmount(String totalDemandAmount);

    /**
     * Returns the forecast name of this vw ivld demand forecast actual.
     *
     * @return the forecast name of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getForecastName();

    /**
     * Sets the forecast name of this vw ivld demand forecast actual.
     *
     * @param forecastName the forecast name of this vw ivld demand forecast actual
     */
    public void setForecastName(String forecastName);

    /**
     * Returns the market size units of this vw ivld demand forecast actual.
     *
     * @return the market size units of this vw ivld demand forecast actual
     */
    @AutoEscape
    public String getMarketSizeUnits();

    /**
     * Sets the market size units of this vw ivld demand forecast actual.
     *
     * @param marketSizeUnits the market size units of this vw ivld demand forecast actual
     */
    public void setMarketSizeUnits(String marketSizeUnits);

    /**
     * Returns the check record of this vw ivld demand forecast actual.
     *
     * @return the check record of this vw ivld demand forecast actual
     */
    public boolean getCheckRecord();

    /**
     * Returns <code>true</code> if this vw ivld demand forecast actual is check record.
     *
     * @return <code>true</code> if this vw ivld demand forecast actual is check record; <code>false</code> otherwise
     */
    public boolean isCheckRecord();

    /**
     * Sets whether this vw ivld demand forecast actual is check record.
     *
     * @param checkRecord the check record of this vw ivld demand forecast actual
     */
    public void setCheckRecord(boolean checkRecord);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(VwIvldDemandForecastActual vwIvldDemandForecastActual);

    @Override
    public int hashCode();

    @Override
    public CacheModel<VwIvldDemandForecastActual> toCacheModel();

    @Override
    public VwIvldDemandForecastActual toEscapedModel();

    @Override
    public VwIvldDemandForecastActual toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
