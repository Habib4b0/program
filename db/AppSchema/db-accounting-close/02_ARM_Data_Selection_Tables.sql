
--------------------------------------------------------------ARM_ADJUSTMENT_MASTER----------------------------------------------------------- 
IF NOT EXISTS (SELECT 'X' 
               FROM   INFORMATION_SCHEMA.TABLES 
               WHERE  TABLE_NAME = 'ARM_ADJUSTMENT_MASTER' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      CREATE TABLE ARM_ADJUSTMENT_MASTER 
        ( 
           ARM_ADJUSTMENT_MASTER_SID INT IDENTITY(1, 1) NOT NULL, 
           PROJECTION_MASTER_SID     INT NOT NULL, 
           BU_COMPANY_MASTER_SID     INT NOT NULL, 
           DEDUCTION_LEVEL           INT NOT NULL, 
           GL_IMPACT_DATE            DATETIME NULL 
        ) 
  END 

GO
---------PRIMARY KEY CONSTRAINTS-------------------- 
IF NOT EXISTS (SELECT 1 
               FROM   SYS.KEY_CONSTRAINTS 
               WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ADJUSTMENT_MASTER' 
                      AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                      AND NAME = 'PK_ARM_ADJUSTMENT_MASTER_ARM_ADJUSTMENT_MASTER_SID' 
                      AND TYPE = 'PK') 
  BEGIN 
      ALTER TABLE ARM_ADJUSTMENT_MASTER 
        ADD CONSTRAINT PK_ARM_ADJUSTMENT_MASTER_ARM_ADJUSTMENT_MASTER_SID PRIMARY KEY (ARM_ADJUSTMENT_MASTER_SID)
  END 

GO 

--CONFIGURATION_TYPE 
IF NOT EXISTS (SELECT 1 
               FROM   INFORMATION_SCHEMA.COLUMNS 
               WHERE  TABLE_NAME = 'ARM_ADJUSTMENT_MASTER' 
                      AND COLUMN_NAME = 'CONFIGURATION_TYPE' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      ALTER TABLE ARM_ADJUSTMENT_MASTER 
        ADD CONFIGURATION_TYPE INT NULL 
  END 

GO 

--TRANSACTION_TYPE 
IF NOT EXISTS (SELECT 1 
               FROM   INFORMATION_SCHEMA.COLUMNS 
               WHERE  TABLE_NAME = 'ARM_ADJUSTMENT_MASTER' 
                      AND COLUMN_NAME = 'TRANSACTION_TYPE' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      ALTER TABLE ARM_ADJUSTMENT_MASTER 
        ADD TRANSACTION_TYPE INT NULL 
  END 

GO 

--CALCULATION_PROFILE_MASTER_SID 
IF NOT EXISTS (SELECT 1 
               FROM   INFORMATION_SCHEMA.COLUMNS 
               WHERE  TABLE_NAME = 'ARM_ADJUSTMENT_MASTER' 
                      AND COLUMN_NAME = 'CALCULATION_PROFILE_MASTER_SID' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      ALTER TABLE ARM_ADJUSTMENT_MASTER 
        ADD CALCULATION_PROFILE_MASTER_SID INT
  END 

GO 

DECLARE @SQL NVARCHAR(MAX) 
DECLARE @TABLENAME VARCHAR(100) 
DECLARE @STATSNAME VARCHAR(200) 
DECLARE @TABLENAME1 VARCHAR(100) 
DECLARE @SCHEMANAME VARCHAR(30) 
DECLARE @SCHEMANAME1 VARCHAR(30) 

SET @TABLENAME1 = 'ARM_ADJUSTMENT_MASTER' --TABLE NAME 
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME 
IF EXISTS (SELECT 'X' 
           FROM   SYS.STATS S 
                  JOIN SYS.TABLES T 
                    ON S.OBJECT_ID = T.OBJECT_ID 
           WHERE  AUTO_CREATED = 1 
                  AND NOT EXISTS (SELECT 1 
                                  FROM   SYS.INDEXES 
                                  WHERE  S.NAME = NAME) 
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1) 
  BEGIN 
      DECLARE CUR CURSOR STATIC FOR 
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME', 
               S.NAME                   AS 'STATSNAME', 
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME' 
        FROM   SYS.STATS S 
               JOIN SYS.TABLES T 
                 ON S.OBJECT_ID = T.OBJECT_ID 
        WHERE  AUTO_CREATED = 1 
               AND NOT EXISTS (SELECT 1 
                               FROM   SYS.INDEXES 
                               WHERE  S.NAME = NAME) 
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 

      OPEN CUR 

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 

      WHILE @@FETCH_STATUS = 0 
        BEGIN 
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) 
                       + '.' + QUOTENAME(@TABLENAME) + '.' 
                       + QUOTENAME(@STATSNAME) 

            --PRINT @SQL 
            EXEC SP_EXECUTESQL 
              @SQL 

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 
        END 

      CLOSE CUR 

      DEALLOCATE CUR 
  END 

DECLARE @STATS NVARCHAR(MAX) 
DECLARE CUR1 CURSOR STATIC FOR 
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) 
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) 
         + '.' + QUOTENAME(T.NAME) + ' (' 
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN' 
  FROM   SYS.TABLES T 
         JOIN SYS.COLUMNS C 
           ON T.OBJECT_ID = C.OBJECT_ID 
  WHERE  NOT EXISTS (SELECT 1 
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC 
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC 
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME 
                     WHERE  CC.TABLE_NAME = T.NAME 
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID) 
                            AND C.NAME = COLUMN_NAME) 
         AND NOT EXISTS (SELECT 1 
                         FROM   SYS.STATS S 
                         WHERE  S.OBJECT_ID = C.OBJECT_ID 
                                AND S.NAME = C.NAME) 
         AND T.NAME = @TABLENAME1 -- TABLE NAME 
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 
  ORDER  BY T.NAME 

OPEN CUR1 

FETCH NEXT FROM CUR1 INTO @STATS 

WHILE @@FETCH_STATUS = 0 
  BEGIN 
      --PRINT @STATS 
      EXEC SP_EXECUTESQL 
        @STATS 

      FETCH NEXT FROM CUR1 INTO @STATS 
  END 

CLOSE CUR1 

DEALLOCATE CUR1 

GO 

--------------------------------------------------------------ARM_ADJUSTMENT_DETAILS----------------------------------------------------------- 
IF NOT EXISTS (SELECT 'X' 
               FROM   INFORMATION_SCHEMA.TABLES 
               WHERE  TABLE_NAME = 'ARM_ADJUSTMENT_DETAILS' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      CREATE TABLE ARM_ADJUSTMENT_DETAILS 
        ( 
           ARM_ADJUSTMENT_DETAILS_SID INT IDENTITY(1, 1) NOT NULL, 
           PROJECTION_MASTER_SID      INT NOT NULL, 
           CCP_DETAILS_SID            INT NOT NULL, 
           RS_MODEL_SID               INT NOT NULL 
        ) 
  END 

  GO
---------PRIMARY KEY CONSTRAINTS-------------------- 
IF NOT EXISTS (SELECT 1 
               FROM   SYS.KEY_CONSTRAINTS 
               WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ADJUSTMENT_DETAILS' 
                      AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                      AND NAME = 'PK_ARM_ADJUSTMENT_DETAILS_ARM_ADJUSTMENT_DETAILS_SID' 
                      AND TYPE = 'PK') 
  BEGIN 
      ALTER TABLE ARM_ADJUSTMENT_DETAILS 
        ADD CONSTRAINT PK_ARM_ADJUSTMENT_DETAILS_ARM_ADJUSTMENT_DETAILS_SID PRIMARY KEY (ARM_ADJUSTMENT_DETAILS_SID)
  END 

GO 

DECLARE @SQL NVARCHAR(MAX) 
DECLARE @TABLENAME VARCHAR(100) 
DECLARE @STATSNAME VARCHAR(200) 
DECLARE @TABLENAME1 VARCHAR(100) 
DECLARE @SCHEMANAME VARCHAR(30) 
DECLARE @SCHEMANAME1 VARCHAR(30) 

SET @TABLENAME1 = 'ARM_ADJUSTMENT_DETAILS' --TABLE NAME 
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME 
IF EXISTS (SELECT 'X' 
           FROM   SYS.STATS S 
                  JOIN SYS.TABLES T 
                    ON S.OBJECT_ID = T.OBJECT_ID 
           WHERE  AUTO_CREATED = 1 
                  AND NOT EXISTS (SELECT 1 
                                  FROM   SYS.INDEXES 
                                  WHERE  S.NAME = NAME) 
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1) 
  BEGIN 
      DECLARE CUR CURSOR STATIC FOR 
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME', 
               S.NAME                   AS 'STATSNAME', 
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME' 
        FROM   SYS.STATS S 
               JOIN SYS.TABLES T 
                 ON S.OBJECT_ID = T.OBJECT_ID 
        WHERE  AUTO_CREATED = 1 
               AND NOT EXISTS (SELECT 1 
                               FROM   SYS.INDEXES 
                               WHERE  S.NAME = NAME) 
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 

      OPEN CUR 

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 

      WHILE @@FETCH_STATUS = 0 
        BEGIN 
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) 
                       + '.' + QUOTENAME(@TABLENAME) + '.' 
                       + QUOTENAME(@STATSNAME) 

            --PRINT @SQL 
            EXEC SP_EXECUTESQL 
              @SQL 

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 
        END 

      CLOSE CUR 

      DEALLOCATE CUR 
  END 

DECLARE @STATS NVARCHAR(MAX) 
DECLARE CUR1 CURSOR STATIC FOR 
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) 
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) 
         + '.' + QUOTENAME(T.NAME) + ' (' 
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN' 
  FROM   SYS.TABLES T 
         JOIN SYS.COLUMNS C 
           ON T.OBJECT_ID = C.OBJECT_ID 
  WHERE  NOT EXISTS (SELECT 1 
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC 
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC 
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME 
                     WHERE  CC.TABLE_NAME = T.NAME 
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID) 
                            AND C.NAME = COLUMN_NAME) 
         AND NOT EXISTS (SELECT 1 
                         FROM   SYS.STATS S 
                         WHERE  S.OBJECT_ID = C.OBJECT_ID 
                                AND S.NAME = C.NAME) 
         AND T.NAME = @TABLENAME1 -- TABLE NAME 
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 
  ORDER  BY T.NAME 

OPEN CUR1 

FETCH NEXT FROM CUR1 INTO @STATS 

WHILE @@FETCH_STATUS = 0 
  BEGIN 
      --PRINT @STATS 
      EXEC SP_EXECUTESQL 
        @STATS 

      FETCH NEXT FROM CUR1 INTO @STATS 
  END 

CLOSE CUR1 

DEALLOCATE CUR1 

GO 

-----------INDEX CREATION ON ARM_ADJUSTMENT_DETAILS 
IF EXISTS (SELECT NAME 
           FROM   SYS.INDEXES 
           WHERE  NAME = N'IX_PROJ_MASTER_CCP_RS') 
  DROP INDEX IX_PROJ_MASTER_CCP_RS ON ARM_ADJUSTMENT_DETAILS; 

GO 

CREATE UNIQUE NONCLUSTERED INDEX IX_PROJ_MASTER_CCP_RS 
  ON ARM_ADJUSTMENT_DETAILS (PROJECTION_MASTER_SID, CCP_DETAILS_SID, RS_MODEL_SID); 

--------------------------------------------------------------ARM_PROJ_SELECTION----------------------------------------------------------- 
IF NOT EXISTS (SELECT 'X' 
               FROM   INFORMATION_SCHEMA.TABLES 
               WHERE  TABLE_NAME = 'ARM_PROJ_SELECTION' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      CREATE TABLE ARM_PROJ_SELECTION 
        ( 
           ARM_PROJ_SELECTION_ID INT IDENTITY(1, 1) NOT NULL, 
           PROJECTION_MASTER_SID INT NOT NULL, 
           SCREEN_NAME           VARCHAR(50) NULL, 
           FIELD_NAME            VARCHAR(30) NULL, 
           FIELD_VALUES          VARCHAR(4000) NULL 
        ) 
  END
 
 GO 

---------PRIMARY KEY CONSTRAINTS-------------------- 
IF NOT EXISTS (SELECT 1 
               FROM   SYS.KEY_CONSTRAINTS 
               WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_PROJ_SELECTION' 
                      AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                      AND NAME = 'PK_ARM_PROJ_SELECTION_ARM_PROJ_SELECTION_ID' 
                      AND TYPE = 'PK') 
  BEGIN 
      ALTER TABLE ARM_PROJ_SELECTION 
        ADD CONSTRAINT PK_ARM_PROJ_SELECTION_ARM_PROJ_SELECTION_ID PRIMARY KEY (ARM_PROJ_SELECTION_ID)
  END 

GO 

DECLARE @SQL NVARCHAR(MAX) 
DECLARE @TABLENAME VARCHAR(100) 
DECLARE @STATSNAME VARCHAR(200) 
DECLARE @TABLENAME1 VARCHAR(100) 
DECLARE @SCHEMANAME VARCHAR(30) 
DECLARE @SCHEMANAME1 VARCHAR(30) 

SET @TABLENAME1 = 'ARM_PROJ_SELECTION' --TABLE NAME 
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME 
IF EXISTS (SELECT 'X' 
           FROM   SYS.STATS S 
                  JOIN SYS.TABLES T 
                    ON S.OBJECT_ID = T.OBJECT_ID 
           WHERE  AUTO_CREATED = 1 
                  AND NOT EXISTS (SELECT 1 
                                  FROM   SYS.INDEXES 
                                  WHERE  S.NAME = NAME) 
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1) 
  BEGIN 
      DECLARE CUR CURSOR STATIC FOR 
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME', 
               S.NAME                   AS 'STATSNAME', 
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME' 
        FROM   SYS.STATS S 
               JOIN SYS.TABLES T 
                 ON S.OBJECT_ID = T.OBJECT_ID 
        WHERE  AUTO_CREATED = 1 
               AND NOT EXISTS (SELECT 1 
                               FROM   SYS.INDEXES 
                               WHERE  S.NAME = NAME) 
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 

      OPEN CUR 

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 

      WHILE @@FETCH_STATUS = 0 
        BEGIN 
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) 
                       + '.' + QUOTENAME(@TABLENAME) + '.' 
                       + QUOTENAME(@STATSNAME) 

            --PRINT @SQL 
            EXEC SP_EXECUTESQL 
              @SQL 

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 
        END 

      CLOSE CUR 

      DEALLOCATE CUR 
  END 

DECLARE @STATS NVARCHAR(MAX) 
DECLARE CUR1 CURSOR STATIC FOR 
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) 
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) 
         + '.' + QUOTENAME(T.NAME) + ' (' 
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN' 
  FROM   SYS.TABLES T 
         JOIN SYS.COLUMNS C 
           ON T.OBJECT_ID = C.OBJECT_ID 
  WHERE  NOT EXISTS (SELECT 1 
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC 
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC 
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME 
                     WHERE  CC.TABLE_NAME = T.NAME 
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID) 
                            AND C.NAME = COLUMN_NAME) 
         AND NOT EXISTS (SELECT 1 
                         FROM   SYS.STATS S 
                         WHERE  S.OBJECT_ID = C.OBJECT_ID 
                                AND S.NAME = C.NAME) 
         AND T.NAME = @TABLENAME1 -- TABLE NAME 
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 
  ORDER  BY T.NAME 

OPEN CUR1 

FETCH NEXT FROM CUR1 INTO @STATS 

WHILE @@FETCH_STATUS = 0 
  BEGIN 
      --PRINT @STATS 
      EXEC SP_EXECUTESQL 
        @STATS 

      FETCH NEXT FROM CUR1 INTO @STATS 
  END 

CLOSE CUR1 

DEALLOCATE CUR1 

GO 

--------------------------------------------------------------ARM_DEDUCTION_SELECTION----------------------------------------------------------- 
IF NOT EXISTS (SELECT 'X' 
               FROM   INFORMATION_SCHEMA.TABLES 
               WHERE  TABLE_NAME = 'ARM_DEDUCTION_SELECTION' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      CREATE TABLE ARM_DEDUCTION_SELECTION 
        ( 
           ARM_DEDUCTION_SELECTION_SID INT IDENTITY(1, 1) NOT NULL, 
           PROJECTION_MASTER_SID       INT NOT NULL, 
           RS_MODEL_SID                INT NOT NULL 
        ) 
  END 

GO
---------PRIMARY KEY CONSTRAINTS-------------------- 
IF NOT EXISTS (SELECT 1 
               FROM   SYS.KEY_CONSTRAINTS 
               WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_DEDUCTION_SELECTION' 
                      AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                      AND NAME = 'PK_ARM_DEDUCTION_SELECTION_ARM_DEDUCTION_SELECTION_SID' 
                      AND TYPE = 'PK') 
  BEGIN 
      ALTER TABLE ARM_DEDUCTION_SELECTION 
        ADD CONSTRAINT PK_ARM_DEDUCTION_SELECTION_ARM_DEDUCTION_SELECTION_SID PRIMARY KEY (ARM_DEDUCTION_SELECTION_SID)
  END 

GO 


IF EXISTS (SELECT 1 
           FROM   INFORMATION_SCHEMA.COLUMNS 
           WHERE  TABLE_NAME = 'ARM_DEDUCTION_SELECTION' 
                  AND COLUMN_NAME = 'RS_MODEL_SID') 
  BEGIN 
      TRUNCATE TABLE ARM_DEDUCTION_SELECTION 
  END 

GO
IF EXISTS(SELECT 1 
          FROM   SYS.STATS 
          WHERE  OBJECT_NAME(OBJECT_ID) = 'ARM_DEDUCTION_SELECTION' 
                 AND NAME = 'RS_MODEL_SID') 
  BEGIN 
      DROP STATISTICS ARM_DEDUCTION_SELECTION.RS_MODEL_SID 
  END 

IF EXISTS(SELECT 1 
          FROM   SYS.FOREIGN_KEYS 
          WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_DEDUCTION_SELECTION' 
                 AND NAME = 'FK_ARM_DEDUCTION_SELECTION_RS_MODEL_RS_MODEL_SID') 
  BEGIN 
      ALTER TABLE ARM_DEDUCTION_SELECTION 
        DROP CONSTRAINT FK_ARM_DEDUCTION_SELECTION_RS_MODEL_RS_MODEL_SID 
  END 

GO

IF EXISTS(SELECT 1 
          FROM   INFORMATION_SCHEMA.COLUMNS 
          WHERE  TABLE_NAME = 'ARM_DEDUCTION_SELECTION' 
                 AND COLUMN_NAME = 'RS_MODEL_SID') 
  BEGIN 
      ALTER TABLE ARM_DEDUCTION_SELECTION 
        DROP COLUMN RS_MODEL_SID 
  END 

GO

IF NOT EXISTS(SELECT 1 
              FROM   INFORMATION_SCHEMA.COLUMNS 
              WHERE  TABLE_NAME = 'ARM_DEDUCTION_SELECTION' 
                     AND COLUMN_NAME = 'RS_CONTRACT_SID') 
  BEGIN 
      ALTER TABLE ARM_DEDUCTION_SELECTION 
        ADD RS_CONTRACT_SID INT NOT NULL 
  END 

GO

IF NOT EXISTS(SELECT 1 
              FROM   SYS.FOREIGN_KEYS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_DEDUCTION_SELECTION' 
                     AND NAME = 'FK_ARM_DEDUCTION_SELECTION_RS_CONTRACT_RS_CONTRACT_SID') 
  BEGIN 
      ALTER TABLE ARM_DEDUCTION_SELECTION 
        ADD CONSTRAINT FK_ARM_DEDUCTION_SELECTION_RS_CONTRACT_RS_CONTRACT_SID FOREIGN KEY(RS_CONTRACT_SID) REFERENCES RS_CONTRACT(RS_CONTRACT_SID)
  END 

GO
------------INDEX 
IF NOT EXISTS(SELECT 1 
              FROM   SYS.INDEXES 
              WHERE  NAME = N'IX_ADJ_DED_SEL_PROJECTION_MASTER_SID_RS_CONTRACT_SID' 
                     AND OBJECT_NAME(OBJECT_ID) = 'ARM_DEDUCTION_SELECTION') 
  BEGIN 
      CREATE UNIQUE NONCLUSTERED INDEX IX_ADJ_DED_SEL_PROJECTION_MASTER_SID_RS_CONTRACT_SID 
        ON ARM_DEDUCTION_SELECTION (RS_CONTRACT_SID, PROJECTION_MASTER_SID); 
  END 

GO
-------------------------------------------- 
DECLARE @SQL NVARCHAR(MAX) 
DECLARE @TABLENAME VARCHAR(100) 
DECLARE @STATSNAME VARCHAR(200) 
DECLARE @TABLENAME1 VARCHAR(100) 
DECLARE @SCHEMANAME VARCHAR(30) 
DECLARE @SCHEMANAME1 VARCHAR(30) 

SET @TABLENAME1 = 'ARM_DEDUCTION_SELECTION' --TABLE NAME 
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME 
IF EXISTS (SELECT 'X' 
           FROM   SYS.STATS S 
                  JOIN SYS.TABLES T 
                    ON S.OBJECT_ID = T.OBJECT_ID 
           WHERE  AUTO_CREATED = 1 
                  AND NOT EXISTS (SELECT 1 
                                  FROM   SYS.INDEXES 
                                  WHERE  S.NAME = NAME) 
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1) 
  BEGIN 
      DECLARE CUR CURSOR STATIC FOR 
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME', 
               S.NAME                   AS 'STATSNAME', 
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME' 
        FROM   SYS.STATS S 
               JOIN SYS.TABLES T 
                 ON S.OBJECT_ID = T.OBJECT_ID 
        WHERE  AUTO_CREATED = 1 
               AND NOT EXISTS (SELECT 1 
                               FROM   SYS.INDEXES 
                               WHERE  S.NAME = NAME) 
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 

      OPEN CUR 

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 

      WHILE @@FETCH_STATUS = 0 
        BEGIN 
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) 
                       + '.' + QUOTENAME(@TABLENAME) + '.' 
                       + QUOTENAME(@STATSNAME) 

            --PRINT @SQL 
            EXEC SP_EXECUTESQL 
              @SQL 

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 
        END 

      CLOSE CUR 

      DEALLOCATE CUR 
  END 

DECLARE @STATS NVARCHAR(MAX) 
DECLARE CUR1 CURSOR STATIC FOR 
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) 
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) 
         + '.' + QUOTENAME(T.NAME) + ' (' 
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN' 
  FROM   SYS.TABLES T 
         JOIN SYS.COLUMNS C 
           ON T.OBJECT_ID = C.OBJECT_ID 
  WHERE  NOT EXISTS (SELECT 1 
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC 
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC 
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME 
                     WHERE  CC.TABLE_NAME = T.NAME 
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID) 
                            AND C.NAME = COLUMN_NAME) 
         AND NOT EXISTS (SELECT 1 
                         FROM   SYS.STATS S 
                         WHERE  S.OBJECT_ID = C.OBJECT_ID 
                                AND S.NAME = C.NAME) 
         AND T.NAME = @TABLENAME1 -- TABLE NAME 
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 
  ORDER  BY T.NAME 

OPEN CUR1 

FETCH NEXT FROM CUR1 INTO @STATS 

WHILE @@FETCH_STATUS = 0 
  BEGIN 
      --PRINT @STATS 
      EXEC SP_EXECUTESQL 
        @STATS 

      FETCH NEXT FROM CUR1 INTO @STATS 
  END 

CLOSE CUR1 

DEALLOCATE CUR1 

GO 
----------------------------------------------------------------------ARM_ADJ_RES_CCP-------------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'ARM_ADJ_RES_CCP'
                      AND TABLE_SCHEMA = 'dbo')
  BEGIN
      CREATE TABLE ARM_ADJ_RES_CCP
        (
		   ARM_ADJUSTMENT_DETAILS_SID    INT NOT NULL,
           ARM_ADJ_RES_CONFIG_MASTER_SID INT NOT NULL,
           ADJUSTMENT_TYPE               INT NOT NULL,
           ACCOUNT_CATEGORY              INT NOT NULL,
           ACCOUNT_TYPE                  INT NOT NULL,
           ACCOUNT                       VARCHAR(50) NOT NULL,
		   ADJUSTMENT_LEVEL              INT NOT NULL,
		   CREDIT BIT NULL,
		   DEBIT BIT NULL
        )
  END

GO

---adding columns
--ACCOUNT_DESC
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'ACCOUNT_DESC'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP 
	 ADD ACCOUNT_DESC VARCHAR(100) NULL
END

GO
--ACCOUNT_INDICATOR
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'ACCOUNT_INDICATOR'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD ACCOUNT_INDICATOR INT NULL
END

GO
--COST_CENTER
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'COST_CENTER'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD COST_CENTER VARCHAR(50)  NULL
END

GO
--PROJECT
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'PROJECT'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD PROJECT VARCHAR(100) NULL
END

GO
--FUTURE_1
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'FUTURE_1'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD FUTURE_1 VARCHAR(100) NULL
END

GO
--FUTURE_2
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'FUTURE_2'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD FUTURE_2 VARCHAR(100) NULL
END

GO
--UDC_1
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'UDC_1'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD UDC_1 INT NULL
END

GO
--UDC_2
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'UDC_2'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD UDC_2 INT NULL
END

GO
--UDC_3
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'UDC_3'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD UDC_3 INT NULL
END

GO
--UDC_4
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'UDC_4'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD UDC_4 INT NULL
END

GO
--UDC_5
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'UDC_5'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD UDC_5 INT NULL
END

GO
--UDC_6
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'UDC_6'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD UDC_6 INT NULL
END

GO
--BALANCE_TYPE
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'BALANCE_TYPE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD BALANCE_TYPE VARCHAR(50) NULL
END

GO
--[DATABASE]
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'DATABASE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD [DATABASE] VARCHAR(50) NULL
END

GO
--DATA_ACCESS_SET
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'DATA_ACCESS_SET'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD DATA_ACCESS_SET VARCHAR(50) NULL
END

GO
--CHART_OF_ACCOUNTS
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'CHART_OF_ACCOUNTS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD CHART_OF_ACCOUNTS VARCHAR(50) NULL
END

GO
--LEDGER
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'LEDGER'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD LEDGER VARCHAR(50) NULL
END

GO
--CATEGORY
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'CATEGORY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD CATEGORY VARCHAR(50) NULL
END

GO
--SOURCE
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'SOURCE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD SOURCE VARCHAR(50) NULL
END

GO
--CURRENCY
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'CURRENCY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD CURRENCY INT NULL
END

GO
--JOURNAL_NAME
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'JOURNAL_NAME'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD JOURNAL_NAME VARCHAR(50) NULL
END

GO
--JOURNAL_DESCRIPTION
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'JOURNAL_DESCRIPTION'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD JOURNAL_DESCRIPTION VARCHAR(50) NULL
END

GO
--REVERSE_JOURNAL
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'REVERSE_JOURNAL'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD REVERSE_JOURNAL VARCHAR(50) NULL
END

GO
--REVERSAL_PERIOD_DATE
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'REVERSAL_PERIOD_DATE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD REVERSAL_PERIOD_DATE INT NULL
END

GO
--LINE_DESCRIPTION
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ARM_ADJ_RES_CCP'
			AND COLUMN_NAME = 'LINE_DESCRIPTION'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ARM_ADJ_RES_CCP ADD LINE_DESCRIPTION VARCHAR(50) NULL
END

GO
--DIVISION
IF NOT EXISTS (SELECT 1
               FROM   INFORMATION_SCHEMA.COLUMNS
               WHERE  TABLE_NAME = 'ARM_ADJ_RES_CCP'
                      AND TABLE_SCHEMA = 'DBO'
                      AND COLUMN_NAME='DIVISION'
  )
BEGIN
ALTER TABLE ARM_ADJ_RES_CCP ADD  DIVISION VARCHAR(50)
END
GO


---------PRIMARY KEY CONSTRAINTS--------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'ARM_ADJ_RES_CCP'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_ARM_ADJ_RES_CCP_ARM_ADJUSTMENT_DETAILS_SID_ARM_ADJ_RES_CONFIG_MASTER_SID_ADJUSTMENT_TYPE_ACC_CATEGORY_ACC_TYPE_ACC'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE ARM_ADJ_RES_CCP
        ADD CONSTRAINT PK_ARM_ADJ_RES_CCP_ARM_ADJUSTMENT_DETAILS_SID_ARM_ADJ_RES_CONFIG_MASTER_SID_ADJUSTMENT_TYPE_ACC_CATEGORY_ACC_TYPE_ACC PRIMARY KEY(ARM_ADJUSTMENT_DETAILS_SID,ARM_ADJ_RES_CONFIG_MASTER_SID,ADJUSTMENT_TYPE,ACCOUNT_CATEGORY,ACCOUNT_TYPE,ACCOUNT)
  END

GO