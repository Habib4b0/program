/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import com.stpl.app.service.persistence.ChSalesProjectionPK;

import java.io.Serializable;

/**
 * The base model interface for the ChSalesProjection service. Represents a row in the &quot;CH_SALES_PROJECTION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.ChSalesProjectionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.ChSalesProjectionImpl}.
 * </p>
 *
 * @author
 * @see ChSalesProjection
 * @see com.stpl.app.model.impl.ChSalesProjectionImpl
 * @see com.stpl.app.model.impl.ChSalesProjectionModelImpl
 * @generated
 */
@ProviderType
public interface ChSalesProjectionModel extends BaseModel<ChSalesProjection> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ch sales projection model instance should use the {@link ChSalesProjection} interface instead.
	 */

	/**
	 * Returns the primary key of this ch sales projection.
	 *
	 * @return the primary key of this ch sales projection
	 */
	public ChSalesProjectionPK getPrimaryKey();

	/**
	 * Sets the primary key of this ch sales projection.
	 *
	 * @param primaryKey the primary key of this ch sales projection
	 */
	public void setPrimaryKey(ChSalesProjectionPK primaryKey);

	/**
	 * Returns the contract units of this ch sales projection.
	 *
	 * @return the contract units of this ch sales projection
	 */
	public double getContractUnits();

	/**
	 * Sets the contract units of this ch sales projection.
	 *
	 * @param contractUnits the contract units of this ch sales projection
	 */
	public void setContractUnits(double contractUnits);

	/**
	 * Returns the per of business of this ch sales projection.
	 *
	 * @return the per of business of this ch sales projection
	 */
	public double getPerOfBusiness();

	/**
	 * Sets the per of business of this ch sales projection.
	 *
	 * @param perOfBusiness the per of business of this ch sales projection
	 */
	public void setPerOfBusiness(double perOfBusiness);

	/**
	 * Returns the period sid of this ch sales projection.
	 *
	 * @return the period sid of this ch sales projection
	 */
	public int getPeriodSid();

	/**
	 * Sets the period sid of this ch sales projection.
	 *
	 * @param periodSid the period sid of this ch sales projection
	 */
	public void setPeriodSid(int periodSid);

	/**
	 * Returns the contract sales of this ch sales projection.
	 *
	 * @return the contract sales of this ch sales projection
	 */
	public double getContractSales();

	/**
	 * Sets the contract sales of this ch sales projection.
	 *
	 * @param contractSales the contract sales of this ch sales projection
	 */
	public void setContractSales(double contractSales);

	/**
	 * Returns the projection details sid of this ch sales projection.
	 *
	 * @return the projection details sid of this ch sales projection
	 */
	public int getProjectionDetailsSid();

	/**
	 * Sets the projection details sid of this ch sales projection.
	 *
	 * @param projectionDetailsSid the projection details sid of this ch sales projection
	 */
	public void setProjectionDetailsSid(int projectionDetailsSid);

	/**
	 * Returns the gts sales of this ch sales projection.
	 *
	 * @return the gts sales of this ch sales projection
	 */
	public double getGtsSales();

	/**
	 * Sets the gts sales of this ch sales projection.
	 *
	 * @param gtsSales the gts sales of this ch sales projection
	 */
	public void setGtsSales(double gtsSales);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ChSalesProjection chSalesProjection);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ChSalesProjection> toCacheModel();

	@Override
	public ChSalesProjection toEscapedModel();

	@Override
	public ChSalesProjection toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}