package com.stpl.app.model.impl;

import com.stpl.app.model.ImtdLevelValues;
import com.stpl.app.model.ImtdLevelValuesModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ImtdLevelValues service. Represents a row in the &quot;IMTD_LEVEL_VALUES&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.ImtdLevelValuesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ImtdLevelValuesImpl}.
 * </p>
 *
 * @author
 * @see ImtdLevelValuesImpl
 * @see com.stpl.app.model.ImtdLevelValues
 * @see com.stpl.app.model.ImtdLevelValuesModel
 * @generated
 */
public class ImtdLevelValuesModelImpl extends BaseModelImpl<ImtdLevelValues>
    implements ImtdLevelValuesModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a imtd level values model instance should use the {@link com.stpl.app.model.ImtdLevelValues} interface instead.
     */
    public static final String TABLE_NAME = "IMTD_LEVEL_VALUES";
    public static final Object[][] TABLE_COLUMNS = {
            { "LEVEL_VALUES", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "IMTD_LEVEL_VALUES_SID", Types.INTEGER },
            { "LEVEL_NO", Types.INTEGER },
            { "VERSION_NO", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "LEVEL_NAME", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table IMTD_LEVEL_VALUES (LEVEL_VALUES VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY INTEGER,IMTD_LEVEL_VALUES_SID INTEGER not null primary key IDENTITY,LEVEL_NO INTEGER,VERSION_NO INTEGER,MODIFIED_BY INTEGER,MODIFIED_DATE DATE null,LEVEL_NAME VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table IMTD_LEVEL_VALUES";
    public static final String ORDER_BY_JPQL = " ORDER BY imtdLevelValues.imtdLevelValuesSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY IMTD_LEVEL_VALUES.IMTD_LEVEL_VALUES_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.ImtdLevelValues"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.ImtdLevelValues"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.ImtdLevelValues"));
    private static ClassLoader _classLoader = ImtdLevelValues.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            ImtdLevelValues.class
        };
    private String _levelValues;
    private Date _createdDate;
    private int _createdBy;
    private int _imtdLevelValuesSid;
    private int _levelNo;
    private int _versionNo;
    private int _modifiedBy;
    private Date _modifiedDate;
    private String _levelName;
    private ImtdLevelValues _escapedModel;

    public ImtdLevelValuesModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _imtdLevelValuesSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setImtdLevelValuesSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _imtdLevelValuesSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return ImtdLevelValues.class;
    }

    @Override
    public String getModelClassName() {
        return ImtdLevelValues.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("levelValues", getLevelValues());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("imtdLevelValuesSid", getImtdLevelValuesSid());
        attributes.put("levelNo", getLevelNo());
        attributes.put("versionNo", getVersionNo());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("levelName", getLevelName());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String levelValues = (String) attributes.get("levelValues");

        if (levelValues != null) {
            setLevelValues(levelValues);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Integer imtdLevelValuesSid = (Integer) attributes.get(
                "imtdLevelValuesSid");

        if (imtdLevelValuesSid != null) {
            setImtdLevelValuesSid(imtdLevelValuesSid);
        }

        Integer levelNo = (Integer) attributes.get("levelNo");

        if (levelNo != null) {
            setLevelNo(levelNo);
        }

        Integer versionNo = (Integer) attributes.get("versionNo");

        if (versionNo != null) {
            setVersionNo(versionNo);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String levelName = (String) attributes.get("levelName");

        if (levelName != null) {
            setLevelName(levelName);
        }
    }

    @Override
    public String getLevelValues() {
        if (_levelValues == null) {
            return StringPool.BLANK;
        } else {
            return _levelValues;
        }
    }

    @Override
    public void setLevelValues(String levelValues) {
        _levelValues = levelValues;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public int getImtdLevelValuesSid() {
        return _imtdLevelValuesSid;
    }

    @Override
    public void setImtdLevelValuesSid(int imtdLevelValuesSid) {
        _imtdLevelValuesSid = imtdLevelValuesSid;
    }

    @Override
    public int getLevelNo() {
        return _levelNo;
    }

    @Override
    public void setLevelNo(int levelNo) {
        _levelNo = levelNo;
    }

    @Override
    public int getVersionNo() {
        return _versionNo;
    }

    @Override
    public void setVersionNo(int versionNo) {
        _versionNo = versionNo;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getLevelName() {
        if (_levelName == null) {
            return StringPool.BLANK;
        } else {
            return _levelName;
        }
    }

    @Override
    public void setLevelName(String levelName) {
        _levelName = levelName;
    }

    @Override
    public ImtdLevelValues toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (ImtdLevelValues) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        ImtdLevelValuesImpl imtdLevelValuesImpl = new ImtdLevelValuesImpl();

        imtdLevelValuesImpl.setLevelValues(getLevelValues());
        imtdLevelValuesImpl.setCreatedDate(getCreatedDate());
        imtdLevelValuesImpl.setCreatedBy(getCreatedBy());
        imtdLevelValuesImpl.setImtdLevelValuesSid(getImtdLevelValuesSid());
        imtdLevelValuesImpl.setLevelNo(getLevelNo());
        imtdLevelValuesImpl.setVersionNo(getVersionNo());
        imtdLevelValuesImpl.setModifiedBy(getModifiedBy());
        imtdLevelValuesImpl.setModifiedDate(getModifiedDate());
        imtdLevelValuesImpl.setLevelName(getLevelName());

        imtdLevelValuesImpl.resetOriginalValues();

        return imtdLevelValuesImpl;
    }

    @Override
    public int compareTo(ImtdLevelValues imtdLevelValues) {
        int primaryKey = imtdLevelValues.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ImtdLevelValues)) {
            return false;
        }

        ImtdLevelValues imtdLevelValues = (ImtdLevelValues) obj;

        int primaryKey = imtdLevelValues.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<ImtdLevelValues> toCacheModel() {
        ImtdLevelValuesCacheModel imtdLevelValuesCacheModel = new ImtdLevelValuesCacheModel();

        imtdLevelValuesCacheModel.levelValues = getLevelValues();

        String levelValues = imtdLevelValuesCacheModel.levelValues;

        if ((levelValues != null) && (levelValues.length() == 0)) {
            imtdLevelValuesCacheModel.levelValues = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            imtdLevelValuesCacheModel.createdDate = createdDate.getTime();
        } else {
            imtdLevelValuesCacheModel.createdDate = Long.MIN_VALUE;
        }

        imtdLevelValuesCacheModel.createdBy = getCreatedBy();

        imtdLevelValuesCacheModel.imtdLevelValuesSid = getImtdLevelValuesSid();

        imtdLevelValuesCacheModel.levelNo = getLevelNo();

        imtdLevelValuesCacheModel.versionNo = getVersionNo();

        imtdLevelValuesCacheModel.modifiedBy = getModifiedBy();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            imtdLevelValuesCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            imtdLevelValuesCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        imtdLevelValuesCacheModel.levelName = getLevelName();

        String levelName = imtdLevelValuesCacheModel.levelName;

        if ((levelName != null) && (levelName.length() == 0)) {
            imtdLevelValuesCacheModel.levelName = null;
        }

        return imtdLevelValuesCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(19);

        sb.append("{levelValues=");
        sb.append(getLevelValues());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", imtdLevelValuesSid=");
        sb.append(getImtdLevelValuesSid());
        sb.append(", levelNo=");
        sb.append(getLevelNo());
        sb.append(", versionNo=");
        sb.append(getVersionNo());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", levelName=");
        sb.append(getLevelName());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(31);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.ImtdLevelValues");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>levelValues</column-name><column-value><![CDATA[");
        sb.append(getLevelValues());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>imtdLevelValuesSid</column-name><column-value><![CDATA[");
        sb.append(getImtdLevelValuesSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>levelNo</column-name><column-value><![CDATA[");
        sb.append(getLevelNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>versionNo</column-name><column-value><![CDATA[");
        sb.append(getVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>levelName</column-name><column-value><![CDATA[");
        sb.append(getLevelName());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
