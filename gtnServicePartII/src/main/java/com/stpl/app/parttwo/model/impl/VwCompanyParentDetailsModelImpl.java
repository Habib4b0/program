package com.stpl.app.parttwo.model.impl;

import com.stpl.app.parttwo.model.VwCompanyParentDetails;
import com.stpl.app.parttwo.model.VwCompanyParentDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VwCompanyParentDetails service. Represents a row in the &quot;VW_COMPANY_PARENT_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.parttwo.model.VwCompanyParentDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VwCompanyParentDetailsImpl}.
 * </p>
 *
 * @author
 * @see VwCompanyParentDetailsImpl
 * @see com.stpl.app.parttwo.model.VwCompanyParentDetails
 * @see com.stpl.app.parttwo.model.VwCompanyParentDetailsModel
 * @generated
 */
public class VwCompanyParentDetailsModelImpl extends BaseModelImpl<VwCompanyParentDetails>
    implements VwCompanyParentDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a vw company parent details model instance should use the {@link com.stpl.app.parttwo.model.VwCompanyParentDetails} interface instead.
     */
    public static final String TABLE_NAME = "VW_COMPANY_PARENT_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "PARENT_COMPANY_ID", Types.VARCHAR },
            { "PRIOR_PARENT_COMPANY_ID", Types.VARCHAR },
            { "COMPANY_ID", Types.VARCHAR },
            { "LAST_UPDATED_DATE", Types.TIMESTAMP },
            { "PARENT_END_DATE", Types.TIMESTAMP },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "PRIOR_PARENT_START_DATE", Types.TIMESTAMP },
            { "SOURCE", Types.VARCHAR },
            { "CREATED_BY", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "COMPANY_PARENT_DETAILS_SID", Types.INTEGER },
            { "BATCH_ID", Types.VARCHAR },
            { "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
            { "MODIFIED_BY", Types.VARCHAR },
            { "PARENT_START_DATE", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table VW_COMPANY_PARENT_DETAILS (PARENT_COMPANY_ID VARCHAR(75) null,PRIOR_PARENT_COMPANY_ID VARCHAR(75) null,COMPANY_ID VARCHAR(75) null,LAST_UPDATED_DATE DATE null,PARENT_END_DATE DATE null,MODIFIED_DATE DATE null,PRIOR_PARENT_START_DATE DATE null,SOURCE VARCHAR(75) null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,COMPANY_PARENT_DETAILS_SID INTEGER not null primary key,BATCH_ID VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,PARENT_START_DATE DATE null)";
    public static final String TABLE_SQL_DROP = "drop table VW_COMPANY_PARENT_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY vwCompanyParentDetails.companyParentDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY VW_COMPANY_PARENT_DETAILS.COMPANY_PARENT_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.parttwo.model.VwCompanyParentDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.parttwo.model.VwCompanyParentDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.parttwo.model.VwCompanyParentDetails"));
    private static ClassLoader _classLoader = VwCompanyParentDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            VwCompanyParentDetails.class
        };
    private String _parentCompanyId;
    private String _priorParentCompanyId;
    private String _companyId;
    private Date _lastUpdatedDate;
    private Date _parentEndDate;
    private Date _modifiedDate;
    private Date _priorParentStartDate;
    private String _source;
    private String _createdBy;
    private Date _createdDate;
    private int _companyParentDetailsSid;
    private String _batchId;
    private String _addChgDelIndicator;
    private String _modifiedBy;
    private Date _parentStartDate;
    private VwCompanyParentDetails _escapedModel;

    public VwCompanyParentDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _companyParentDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setCompanyParentDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _companyParentDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return VwCompanyParentDetails.class;
    }

    @Override
    public String getModelClassName() {
        return VwCompanyParentDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("parentCompanyId", getParentCompanyId());
        attributes.put("priorParentCompanyId", getPriorParentCompanyId());
        attributes.put("companyId", getCompanyId());
        attributes.put("lastUpdatedDate", getLastUpdatedDate());
        attributes.put("parentEndDate", getParentEndDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("priorParentStartDate", getPriorParentStartDate());
        attributes.put("source", getSource());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("companyParentDetailsSid", getCompanyParentDetailsSid());
        attributes.put("batchId", getBatchId());
        attributes.put("addChgDelIndicator", getAddChgDelIndicator());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("parentStartDate", getParentStartDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String parentCompanyId = (String) attributes.get("parentCompanyId");

        if (parentCompanyId != null) {
            setParentCompanyId(parentCompanyId);
        }

        String priorParentCompanyId = (String) attributes.get(
                "priorParentCompanyId");

        if (priorParentCompanyId != null) {
            setPriorParentCompanyId(priorParentCompanyId);
        }

        String companyId = (String) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Date lastUpdatedDate = (Date) attributes.get("lastUpdatedDate");

        if (lastUpdatedDate != null) {
            setLastUpdatedDate(lastUpdatedDate);
        }

        Date parentEndDate = (Date) attributes.get("parentEndDate");

        if (parentEndDate != null) {
            setParentEndDate(parentEndDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Date priorParentStartDate = (Date) attributes.get(
                "priorParentStartDate");

        if (priorParentStartDate != null) {
            setPriorParentStartDate(priorParentStartDate);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        String createdBy = (String) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer companyParentDetailsSid = (Integer) attributes.get(
                "companyParentDetailsSid");

        if (companyParentDetailsSid != null) {
            setCompanyParentDetailsSid(companyParentDetailsSid);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        String addChgDelIndicator = (String) attributes.get(
                "addChgDelIndicator");

        if (addChgDelIndicator != null) {
            setAddChgDelIndicator(addChgDelIndicator);
        }

        String modifiedBy = (String) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date parentStartDate = (Date) attributes.get("parentStartDate");

        if (parentStartDate != null) {
            setParentStartDate(parentStartDate);
        }
    }

    @Override
    public String getParentCompanyId() {
        if (_parentCompanyId == null) {
            return StringPool.BLANK;
        } else {
            return _parentCompanyId;
        }
    }

    @Override
    public void setParentCompanyId(String parentCompanyId) {
        _parentCompanyId = parentCompanyId;
    }

    @Override
    public String getPriorParentCompanyId() {
        if (_priorParentCompanyId == null) {
            return StringPool.BLANK;
        } else {
            return _priorParentCompanyId;
        }
    }

    @Override
    public void setPriorParentCompanyId(String priorParentCompanyId) {
        _priorParentCompanyId = priorParentCompanyId;
    }

    @Override
    public String getCompanyId() {
        if (_companyId == null) {
            return StringPool.BLANK;
        } else {
            return _companyId;
        }
    }

    @Override
    public void setCompanyId(String companyId) {
        _companyId = companyId;
    }

    @Override
    public Date getLastUpdatedDate() {
        return _lastUpdatedDate;
    }

    @Override
    public void setLastUpdatedDate(Date lastUpdatedDate) {
        _lastUpdatedDate = lastUpdatedDate;
    }

    @Override
    public Date getParentEndDate() {
        return _parentEndDate;
    }

    @Override
    public void setParentEndDate(Date parentEndDate) {
        _parentEndDate = parentEndDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public Date getPriorParentStartDate() {
        return _priorParentStartDate;
    }

    @Override
    public void setPriorParentStartDate(Date priorParentStartDate) {
        _priorParentStartDate = priorParentStartDate;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public String getCreatedBy() {
        if (_createdBy == null) {
            return StringPool.BLANK;
        } else {
            return _createdBy;
        }
    }

    @Override
    public void setCreatedBy(String createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCompanyParentDetailsSid() {
        return _companyParentDetailsSid;
    }

    @Override
    public void setCompanyParentDetailsSid(int companyParentDetailsSid) {
        _companyParentDetailsSid = companyParentDetailsSid;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public String getAddChgDelIndicator() {
        if (_addChgDelIndicator == null) {
            return StringPool.BLANK;
        } else {
            return _addChgDelIndicator;
        }
    }

    @Override
    public void setAddChgDelIndicator(String addChgDelIndicator) {
        _addChgDelIndicator = addChgDelIndicator;
    }

    @Override
    public String getModifiedBy() {
        if (_modifiedBy == null) {
            return StringPool.BLANK;
        } else {
            return _modifiedBy;
        }
    }

    @Override
    public void setModifiedBy(String modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getParentStartDate() {
        return _parentStartDate;
    }

    @Override
    public void setParentStartDate(Date parentStartDate) {
        _parentStartDate = parentStartDate;
    }

    @Override
    public VwCompanyParentDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (VwCompanyParentDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        VwCompanyParentDetailsImpl vwCompanyParentDetailsImpl = new VwCompanyParentDetailsImpl();

        vwCompanyParentDetailsImpl.setParentCompanyId(getParentCompanyId());
        vwCompanyParentDetailsImpl.setPriorParentCompanyId(getPriorParentCompanyId());
        vwCompanyParentDetailsImpl.setCompanyId(getCompanyId());
        vwCompanyParentDetailsImpl.setLastUpdatedDate(getLastUpdatedDate());
        vwCompanyParentDetailsImpl.setParentEndDate(getParentEndDate());
        vwCompanyParentDetailsImpl.setModifiedDate(getModifiedDate());
        vwCompanyParentDetailsImpl.setPriorParentStartDate(getPriorParentStartDate());
        vwCompanyParentDetailsImpl.setSource(getSource());
        vwCompanyParentDetailsImpl.setCreatedBy(getCreatedBy());
        vwCompanyParentDetailsImpl.setCreatedDate(getCreatedDate());
        vwCompanyParentDetailsImpl.setCompanyParentDetailsSid(getCompanyParentDetailsSid());
        vwCompanyParentDetailsImpl.setBatchId(getBatchId());
        vwCompanyParentDetailsImpl.setAddChgDelIndicator(getAddChgDelIndicator());
        vwCompanyParentDetailsImpl.setModifiedBy(getModifiedBy());
        vwCompanyParentDetailsImpl.setParentStartDate(getParentStartDate());

        vwCompanyParentDetailsImpl.resetOriginalValues();

        return vwCompanyParentDetailsImpl;
    }

    @Override
    public int compareTo(VwCompanyParentDetails vwCompanyParentDetails) {
        int primaryKey = vwCompanyParentDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof VwCompanyParentDetails)) {
            return false;
        }

        VwCompanyParentDetails vwCompanyParentDetails = (VwCompanyParentDetails) obj;

        int primaryKey = vwCompanyParentDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<VwCompanyParentDetails> toCacheModel() {
        VwCompanyParentDetailsCacheModel vwCompanyParentDetailsCacheModel = new VwCompanyParentDetailsCacheModel();

        vwCompanyParentDetailsCacheModel.parentCompanyId = getParentCompanyId();

        String parentCompanyId = vwCompanyParentDetailsCacheModel.parentCompanyId;

        if ((parentCompanyId != null) && (parentCompanyId.length() == 0)) {
            vwCompanyParentDetailsCacheModel.parentCompanyId = null;
        }

        vwCompanyParentDetailsCacheModel.priorParentCompanyId = getPriorParentCompanyId();

        String priorParentCompanyId = vwCompanyParentDetailsCacheModel.priorParentCompanyId;

        if ((priorParentCompanyId != null) &&
                (priorParentCompanyId.length() == 0)) {
            vwCompanyParentDetailsCacheModel.priorParentCompanyId = null;
        }

        vwCompanyParentDetailsCacheModel.companyId = getCompanyId();

        String companyId = vwCompanyParentDetailsCacheModel.companyId;

        if ((companyId != null) && (companyId.length() == 0)) {
            vwCompanyParentDetailsCacheModel.companyId = null;
        }

        Date lastUpdatedDate = getLastUpdatedDate();

        if (lastUpdatedDate != null) {
            vwCompanyParentDetailsCacheModel.lastUpdatedDate = lastUpdatedDate.getTime();
        } else {
            vwCompanyParentDetailsCacheModel.lastUpdatedDate = Long.MIN_VALUE;
        }

        Date parentEndDate = getParentEndDate();

        if (parentEndDate != null) {
            vwCompanyParentDetailsCacheModel.parentEndDate = parentEndDate.getTime();
        } else {
            vwCompanyParentDetailsCacheModel.parentEndDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            vwCompanyParentDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            vwCompanyParentDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        Date priorParentStartDate = getPriorParentStartDate();

        if (priorParentStartDate != null) {
            vwCompanyParentDetailsCacheModel.priorParentStartDate = priorParentStartDate.getTime();
        } else {
            vwCompanyParentDetailsCacheModel.priorParentStartDate = Long.MIN_VALUE;
        }

        vwCompanyParentDetailsCacheModel.source = getSource();

        String source = vwCompanyParentDetailsCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            vwCompanyParentDetailsCacheModel.source = null;
        }

        vwCompanyParentDetailsCacheModel.createdBy = getCreatedBy();

        String createdBy = vwCompanyParentDetailsCacheModel.createdBy;

        if ((createdBy != null) && (createdBy.length() == 0)) {
            vwCompanyParentDetailsCacheModel.createdBy = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            vwCompanyParentDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            vwCompanyParentDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        vwCompanyParentDetailsCacheModel.companyParentDetailsSid = getCompanyParentDetailsSid();

        vwCompanyParentDetailsCacheModel.batchId = getBatchId();

        String batchId = vwCompanyParentDetailsCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            vwCompanyParentDetailsCacheModel.batchId = null;
        }

        vwCompanyParentDetailsCacheModel.addChgDelIndicator = getAddChgDelIndicator();

        String addChgDelIndicator = vwCompanyParentDetailsCacheModel.addChgDelIndicator;

        if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
            vwCompanyParentDetailsCacheModel.addChgDelIndicator = null;
        }

        vwCompanyParentDetailsCacheModel.modifiedBy = getModifiedBy();

        String modifiedBy = vwCompanyParentDetailsCacheModel.modifiedBy;

        if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
            vwCompanyParentDetailsCacheModel.modifiedBy = null;
        }

        Date parentStartDate = getParentStartDate();

        if (parentStartDate != null) {
            vwCompanyParentDetailsCacheModel.parentStartDate = parentStartDate.getTime();
        } else {
            vwCompanyParentDetailsCacheModel.parentStartDate = Long.MIN_VALUE;
        }

        return vwCompanyParentDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(31);

        sb.append("{parentCompanyId=");
        sb.append(getParentCompanyId());
        sb.append(", priorParentCompanyId=");
        sb.append(getPriorParentCompanyId());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", lastUpdatedDate=");
        sb.append(getLastUpdatedDate());
        sb.append(", parentEndDate=");
        sb.append(getParentEndDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", priorParentStartDate=");
        sb.append(getPriorParentStartDate());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", companyParentDetailsSid=");
        sb.append(getCompanyParentDetailsSid());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", addChgDelIndicator=");
        sb.append(getAddChgDelIndicator());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", parentStartDate=");
        sb.append(getParentStartDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(49);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.parttwo.model.VwCompanyParentDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>parentCompanyId</column-name><column-value><![CDATA[");
        sb.append(getParentCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>priorParentCompanyId</column-name><column-value><![CDATA[");
        sb.append(getPriorParentCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastUpdatedDate</column-name><column-value><![CDATA[");
        sb.append(getLastUpdatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentEndDate</column-name><column-value><![CDATA[");
        sb.append(getParentEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>priorParentStartDate</column-name><column-value><![CDATA[");
        sb.append(getPriorParentStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyParentDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getCompanyParentDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
        sb.append(getAddChgDelIndicator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentStartDate</column-name><column-value><![CDATA[");
        sb.append(getParentStartDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
