/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.PriceScheduleDetails;
import com.stpl.app.model.PriceScheduleDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PriceScheduleDetails service. Represents a row in the &quot;PRICE_SCHEDULE_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PriceScheduleDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PriceScheduleDetailsImpl}.
 * </p>
 *
 * @author
 * @see PriceScheduleDetailsImpl
 * @see PriceScheduleDetails
 * @see PriceScheduleDetailsModel
 * @generated
 */
@ProviderType
public class PriceScheduleDetailsModelImpl extends BaseModelImpl<PriceScheduleDetails>
	implements PriceScheduleDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a price schedule details model instance should use the {@link PriceScheduleDetails} interface instead.
	 */
	public static final String TABLE_NAME = "PRICE_SCHEDULE_DETAILS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PRICE", Types.DOUBLE },
			{ "PS_DETAILS_SYSTEM_ID", Types.INTEGER },
			{ "COMPANY_FAMILYPLAN_SYSTEM_ID", Types.INTEGER },
			{ "ITEM_SYSTEM_ID", Types.INTEGER },
			{ "PRICE_PROTECTION_START_DATE", Types.TIMESTAMP },
			{ "BASE_PRICE", Types.DOUBLE },
			{ "REVISION_DATE", Types.TIMESTAMP },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "PRICE_SCHEDULE_SYSTEM_ID", Types.INTEGER },
			{ "ITEM_FAMILYPLAN_SYSTEM_ID", Types.INTEGER },
			{ "PRICE_TOLERANCE", Types.DOUBLE },
			{ "CREATED_BY", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SUGGESTED_PRICE", Types.DOUBLE },
			{ "INBOUND_STATUS", Types.VARCHAR },
			{ "MODIFIED_BY", Types.VARCHAR },
			{ "CONTRACT_PRICE", Types.DOUBLE },
			{ "PRICE_TOLERANCE_TYPE", Types.VARCHAR },
			{ "MEMBER_FAMILYPLAN_SYSTEM_ID", Types.INTEGER },
			{ "CONTRACT_PRICE_END_DATE", Types.TIMESTAMP },
			{ "CONTRACT_PRICE_START_DATE", Types.TIMESTAMP },
			{ "PRICE_TOLERANCE_FREQUENCY", Types.VARCHAR },
			{ "ATTACHED_DATE", Types.TIMESTAMP },
			{ "PRICE_PROTECTION_END_DATE", Types.TIMESTAMP },
			{ "RECORD_LOCK_STATUS", Types.VARCHAR },
			{ "PRICE_PLAN_ID", Types.VARCHAR },
			{ "PRICE_TYPE", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "PRICE_TOLERANCE_INTERVAL", Types.INTEGER },
			{ "PRICE_REVISION", Types.DOUBLE }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("PRICE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("PS_DETAILS_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("COMPANY_FAMILYPLAN_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRICE_PROTECTION_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("BASE_PRICE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("REVISION_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_FAMILYPLAN_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SUGGESTED_PRICE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MEMBER_FAMILYPLAN_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE_FREQUENCY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ATTACHED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_PROTECTION_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("RECORD_LOCK_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_PLAN_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE_INTERVAL", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRICE_REVISION", Types.DOUBLE);
	}

	public static final String TABLE_SQL_CREATE = "create table PRICE_SCHEDULE_DETAILS (PRICE DOUBLE,PS_DETAILS_SYSTEM_ID INTEGER not null primary key IDENTITY,COMPANY_FAMILYPLAN_SYSTEM_ID INTEGER,ITEM_SYSTEM_ID INTEGER,PRICE_PROTECTION_START_DATE DATE null,BASE_PRICE DOUBLE,REVISION_DATE DATE null,MODIFIED_DATE DATE null,PRICE_SCHEDULE_SYSTEM_ID INTEGER,ITEM_FAMILYPLAN_SYSTEM_ID INTEGER,PRICE_TOLERANCE DOUBLE,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,SUGGESTED_PRICE DOUBLE,INBOUND_STATUS VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,CONTRACT_PRICE DOUBLE,PRICE_TOLERANCE_TYPE VARCHAR(75) null,MEMBER_FAMILYPLAN_SYSTEM_ID INTEGER,CONTRACT_PRICE_END_DATE DATE null,CONTRACT_PRICE_START_DATE DATE null,PRICE_TOLERANCE_FREQUENCY VARCHAR(75) null,ATTACHED_DATE DATE null,PRICE_PROTECTION_END_DATE DATE null,RECORD_LOCK_STATUS VARCHAR(75) null,PRICE_PLAN_ID VARCHAR(75) null,PRICE_TYPE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,PRICE_TOLERANCE_INTERVAL INTEGER,PRICE_REVISION DOUBLE)";
	public static final String TABLE_SQL_DROP = "drop table PRICE_SCHEDULE_DETAILS";
	public static final String ORDER_BY_JPQL = " ORDER BY priceScheduleDetails.psDetailsSystemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PRICE_SCHEDULE_DETAILS.PS_DETAILS_SYSTEM_ID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.PriceScheduleDetails"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.PriceScheduleDetails"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.stpl.app.model.PriceScheduleDetails"),
			true);
	public static final long PRICESCHEDULESYSTEMID_COLUMN_BITMASK = 1L;
	public static final long PSDETAILSSYSTEMID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.PriceScheduleDetails"));

	public PriceScheduleDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _psDetailsSystemId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setPsDetailsSystemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _psDetailsSystemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PriceScheduleDetails.class;
	}

	@Override
	public String getModelClassName() {
		return PriceScheduleDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("price", getPrice());
		attributes.put("psDetailsSystemId", getPsDetailsSystemId());
		attributes.put("companyFamilyplanSystemId",
			getCompanyFamilyplanSystemId());
		attributes.put("itemSystemId", getItemSystemId());
		attributes.put("priceProtectionStartDate", getPriceProtectionStartDate());
		attributes.put("basePrice", getBasePrice());
		attributes.put("revisionDate", getRevisionDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("priceScheduleSystemId", getPriceScheduleSystemId());
		attributes.put("itemFamilyplanSystemId", getItemFamilyplanSystemId());
		attributes.put("priceTolerance", getPriceTolerance());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("suggestedPrice", getSuggestedPrice());
		attributes.put("inboundStatus", getInboundStatus());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("contractPrice", getContractPrice());
		attributes.put("priceToleranceType", getPriceToleranceType());
		attributes.put("memberFamilyplanSystemId", getMemberFamilyplanSystemId());
		attributes.put("contractPriceEndDate", getContractPriceEndDate());
		attributes.put("contractPriceStartDate", getContractPriceStartDate());
		attributes.put("priceToleranceFrequency", getPriceToleranceFrequency());
		attributes.put("attachedDate", getAttachedDate());
		attributes.put("priceProtectionEndDate", getPriceProtectionEndDate());
		attributes.put("recordLockStatus", getRecordLockStatus());
		attributes.put("pricePlanId", getPricePlanId());
		attributes.put("priceType", getPriceType());
		attributes.put("batchId", getBatchId());
		attributes.put("priceToleranceInterval", getPriceToleranceInterval());
		attributes.put("priceRevision", getPriceRevision());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Double price = (Double)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}

		Integer psDetailsSystemId = (Integer)attributes.get("psDetailsSystemId");

		if (psDetailsSystemId != null) {
			setPsDetailsSystemId(psDetailsSystemId);
		}

		Integer companyFamilyplanSystemId = (Integer)attributes.get(
				"companyFamilyplanSystemId");

		if (companyFamilyplanSystemId != null) {
			setCompanyFamilyplanSystemId(companyFamilyplanSystemId);
		}

		Integer itemSystemId = (Integer)attributes.get("itemSystemId");

		if (itemSystemId != null) {
			setItemSystemId(itemSystemId);
		}

		Date priceProtectionStartDate = (Date)attributes.get(
				"priceProtectionStartDate");

		if (priceProtectionStartDate != null) {
			setPriceProtectionStartDate(priceProtectionStartDate);
		}

		Double basePrice = (Double)attributes.get("basePrice");

		if (basePrice != null) {
			setBasePrice(basePrice);
		}

		Date revisionDate = (Date)attributes.get("revisionDate");

		if (revisionDate != null) {
			setRevisionDate(revisionDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer priceScheduleSystemId = (Integer)attributes.get(
				"priceScheduleSystemId");

		if (priceScheduleSystemId != null) {
			setPriceScheduleSystemId(priceScheduleSystemId);
		}

		Integer itemFamilyplanSystemId = (Integer)attributes.get(
				"itemFamilyplanSystemId");

		if (itemFamilyplanSystemId != null) {
			setItemFamilyplanSystemId(itemFamilyplanSystemId);
		}

		Double priceTolerance = (Double)attributes.get("priceTolerance");

		if (priceTolerance != null) {
			setPriceTolerance(priceTolerance);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Double suggestedPrice = (Double)attributes.get("suggestedPrice");

		if (suggestedPrice != null) {
			setSuggestedPrice(suggestedPrice);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Double contractPrice = (Double)attributes.get("contractPrice");

		if (contractPrice != null) {
			setContractPrice(contractPrice);
		}

		String priceToleranceType = (String)attributes.get("priceToleranceType");

		if (priceToleranceType != null) {
			setPriceToleranceType(priceToleranceType);
		}

		Integer memberFamilyplanSystemId = (Integer)attributes.get(
				"memberFamilyplanSystemId");

		if (memberFamilyplanSystemId != null) {
			setMemberFamilyplanSystemId(memberFamilyplanSystemId);
		}

		Date contractPriceEndDate = (Date)attributes.get("contractPriceEndDate");

		if (contractPriceEndDate != null) {
			setContractPriceEndDate(contractPriceEndDate);
		}

		Date contractPriceStartDate = (Date)attributes.get(
				"contractPriceStartDate");

		if (contractPriceStartDate != null) {
			setContractPriceStartDate(contractPriceStartDate);
		}

		String priceToleranceFrequency = (String)attributes.get(
				"priceToleranceFrequency");

		if (priceToleranceFrequency != null) {
			setPriceToleranceFrequency(priceToleranceFrequency);
		}

		Date attachedDate = (Date)attributes.get("attachedDate");

		if (attachedDate != null) {
			setAttachedDate(attachedDate);
		}

		Date priceProtectionEndDate = (Date)attributes.get(
				"priceProtectionEndDate");

		if (priceProtectionEndDate != null) {
			setPriceProtectionEndDate(priceProtectionEndDate);
		}

		String recordLockStatus = (String)attributes.get("recordLockStatus");

		if (recordLockStatus != null) {
			setRecordLockStatus(recordLockStatus);
		}

		String pricePlanId = (String)attributes.get("pricePlanId");

		if (pricePlanId != null) {
			setPricePlanId(pricePlanId);
		}

		String priceType = (String)attributes.get("priceType");

		if (priceType != null) {
			setPriceType(priceType);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		Integer priceToleranceInterval = (Integer)attributes.get(
				"priceToleranceInterval");

		if (priceToleranceInterval != null) {
			setPriceToleranceInterval(priceToleranceInterval);
		}

		Double priceRevision = (Double)attributes.get("priceRevision");

		if (priceRevision != null) {
			setPriceRevision(priceRevision);
		}
	}

	@Override
	public double getPrice() {
		return _price;
	}

	@Override
	public void setPrice(double price) {
		_price = price;
	}

	@Override
	public int getPsDetailsSystemId() {
		return _psDetailsSystemId;
	}

	@Override
	public void setPsDetailsSystemId(int psDetailsSystemId) {
		_psDetailsSystemId = psDetailsSystemId;
	}

	@Override
	public int getCompanyFamilyplanSystemId() {
		return _companyFamilyplanSystemId;
	}

	@Override
	public void setCompanyFamilyplanSystemId(int companyFamilyplanSystemId) {
		_companyFamilyplanSystemId = companyFamilyplanSystemId;
	}

	@Override
	public int getItemSystemId() {
		return _itemSystemId;
	}

	@Override
	public void setItemSystemId(int itemSystemId) {
		_itemSystemId = itemSystemId;
	}

	@Override
	public Date getPriceProtectionStartDate() {
		return _priceProtectionStartDate;
	}

	@Override
	public void setPriceProtectionStartDate(Date priceProtectionStartDate) {
		_priceProtectionStartDate = priceProtectionStartDate;
	}

	@Override
	public double getBasePrice() {
		return _basePrice;
	}

	@Override
	public void setBasePrice(double basePrice) {
		_basePrice = basePrice;
	}

	@Override
	public Date getRevisionDate() {
		return _revisionDate;
	}

	@Override
	public void setRevisionDate(Date revisionDate) {
		_revisionDate = revisionDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getPriceScheduleSystemId() {
		return _priceScheduleSystemId;
	}

	@Override
	public void setPriceScheduleSystemId(int priceScheduleSystemId) {
		_columnBitmask |= PRICESCHEDULESYSTEMID_COLUMN_BITMASK;

		if (!_setOriginalPriceScheduleSystemId) {
			_setOriginalPriceScheduleSystemId = true;

			_originalPriceScheduleSystemId = _priceScheduleSystemId;
		}

		_priceScheduleSystemId = priceScheduleSystemId;
	}

	public int getOriginalPriceScheduleSystemId() {
		return _originalPriceScheduleSystemId;
	}

	@Override
	public int getItemFamilyplanSystemId() {
		return _itemFamilyplanSystemId;
	}

	@Override
	public void setItemFamilyplanSystemId(int itemFamilyplanSystemId) {
		_itemFamilyplanSystemId = itemFamilyplanSystemId;
	}

	@Override
	public double getPriceTolerance() {
		return _priceTolerance;
	}

	@Override
	public void setPriceTolerance(double priceTolerance) {
		_priceTolerance = priceTolerance;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public double getSuggestedPrice() {
		return _suggestedPrice;
	}

	@Override
	public void setSuggestedPrice(double suggestedPrice) {
		_suggestedPrice = suggestedPrice;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public double getContractPrice() {
		return _contractPrice;
	}

	@Override
	public void setContractPrice(double contractPrice) {
		_contractPrice = contractPrice;
	}

	@Override
	public String getPriceToleranceType() {
		if (_priceToleranceType == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceToleranceType;
		}
	}

	@Override
	public void setPriceToleranceType(String priceToleranceType) {
		_priceToleranceType = priceToleranceType;
	}

	@Override
	public int getMemberFamilyplanSystemId() {
		return _memberFamilyplanSystemId;
	}

	@Override
	public void setMemberFamilyplanSystemId(int memberFamilyplanSystemId) {
		_memberFamilyplanSystemId = memberFamilyplanSystemId;
	}

	@Override
	public Date getContractPriceEndDate() {
		return _contractPriceEndDate;
	}

	@Override
	public void setContractPriceEndDate(Date contractPriceEndDate) {
		_contractPriceEndDate = contractPriceEndDate;
	}

	@Override
	public Date getContractPriceStartDate() {
		return _contractPriceStartDate;
	}

	@Override
	public void setContractPriceStartDate(Date contractPriceStartDate) {
		_contractPriceStartDate = contractPriceStartDate;
	}

	@Override
	public String getPriceToleranceFrequency() {
		if (_priceToleranceFrequency == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceToleranceFrequency;
		}
	}

	@Override
	public void setPriceToleranceFrequency(String priceToleranceFrequency) {
		_priceToleranceFrequency = priceToleranceFrequency;
	}

	@Override
	public Date getAttachedDate() {
		return _attachedDate;
	}

	@Override
	public void setAttachedDate(Date attachedDate) {
		_attachedDate = attachedDate;
	}

	@Override
	public Date getPriceProtectionEndDate() {
		return _priceProtectionEndDate;
	}

	@Override
	public void setPriceProtectionEndDate(Date priceProtectionEndDate) {
		_priceProtectionEndDate = priceProtectionEndDate;
	}

	@Override
	public String getRecordLockStatus() {
		if (_recordLockStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _recordLockStatus;
		}
	}

	@Override
	public void setRecordLockStatus(String recordLockStatus) {
		_recordLockStatus = recordLockStatus;
	}

	@Override
	public String getPricePlanId() {
		if (_pricePlanId == null) {
			return StringPool.BLANK;
		}
		else {
			return _pricePlanId;
		}
	}

	@Override
	public void setPricePlanId(String pricePlanId) {
		_pricePlanId = pricePlanId;
	}

	@Override
	public String getPriceType() {
		if (_priceType == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceType;
		}
	}

	@Override
	public void setPriceType(String priceType) {
		_priceType = priceType;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public int getPriceToleranceInterval() {
		return _priceToleranceInterval;
	}

	@Override
	public void setPriceToleranceInterval(int priceToleranceInterval) {
		_priceToleranceInterval = priceToleranceInterval;
	}

	@Override
	public double getPriceRevision() {
		return _priceRevision;
	}

	@Override
	public void setPriceRevision(double priceRevision) {
		_priceRevision = priceRevision;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public PriceScheduleDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PriceScheduleDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PriceScheduleDetailsImpl priceScheduleDetailsImpl = new PriceScheduleDetailsImpl();

		priceScheduleDetailsImpl.setPrice(getPrice());
		priceScheduleDetailsImpl.setPsDetailsSystemId(getPsDetailsSystemId());
		priceScheduleDetailsImpl.setCompanyFamilyplanSystemId(getCompanyFamilyplanSystemId());
		priceScheduleDetailsImpl.setItemSystemId(getItemSystemId());
		priceScheduleDetailsImpl.setPriceProtectionStartDate(getPriceProtectionStartDate());
		priceScheduleDetailsImpl.setBasePrice(getBasePrice());
		priceScheduleDetailsImpl.setRevisionDate(getRevisionDate());
		priceScheduleDetailsImpl.setModifiedDate(getModifiedDate());
		priceScheduleDetailsImpl.setPriceScheduleSystemId(getPriceScheduleSystemId());
		priceScheduleDetailsImpl.setItemFamilyplanSystemId(getItemFamilyplanSystemId());
		priceScheduleDetailsImpl.setPriceTolerance(getPriceTolerance());
		priceScheduleDetailsImpl.setCreatedBy(getCreatedBy());
		priceScheduleDetailsImpl.setCreatedDate(getCreatedDate());
		priceScheduleDetailsImpl.setSuggestedPrice(getSuggestedPrice());
		priceScheduleDetailsImpl.setInboundStatus(getInboundStatus());
		priceScheduleDetailsImpl.setModifiedBy(getModifiedBy());
		priceScheduleDetailsImpl.setContractPrice(getContractPrice());
		priceScheduleDetailsImpl.setPriceToleranceType(getPriceToleranceType());
		priceScheduleDetailsImpl.setMemberFamilyplanSystemId(getMemberFamilyplanSystemId());
		priceScheduleDetailsImpl.setContractPriceEndDate(getContractPriceEndDate());
		priceScheduleDetailsImpl.setContractPriceStartDate(getContractPriceStartDate());
		priceScheduleDetailsImpl.setPriceToleranceFrequency(getPriceToleranceFrequency());
		priceScheduleDetailsImpl.setAttachedDate(getAttachedDate());
		priceScheduleDetailsImpl.setPriceProtectionEndDate(getPriceProtectionEndDate());
		priceScheduleDetailsImpl.setRecordLockStatus(getRecordLockStatus());
		priceScheduleDetailsImpl.setPricePlanId(getPricePlanId());
		priceScheduleDetailsImpl.setPriceType(getPriceType());
		priceScheduleDetailsImpl.setBatchId(getBatchId());
		priceScheduleDetailsImpl.setPriceToleranceInterval(getPriceToleranceInterval());
		priceScheduleDetailsImpl.setPriceRevision(getPriceRevision());

		priceScheduleDetailsImpl.resetOriginalValues();

		return priceScheduleDetailsImpl;
	}

	@Override
	public int compareTo(PriceScheduleDetails priceScheduleDetails) {
		int primaryKey = priceScheduleDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PriceScheduleDetails)) {
			return false;
		}

		PriceScheduleDetails priceScheduleDetails = (PriceScheduleDetails)obj;

		int primaryKey = priceScheduleDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PriceScheduleDetailsModelImpl priceScheduleDetailsModelImpl = this;

		priceScheduleDetailsModelImpl._originalPriceScheduleSystemId = priceScheduleDetailsModelImpl._priceScheduleSystemId;

		priceScheduleDetailsModelImpl._setOriginalPriceScheduleSystemId = false;

		priceScheduleDetailsModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PriceScheduleDetails> toCacheModel() {
		PriceScheduleDetailsCacheModel priceScheduleDetailsCacheModel = new PriceScheduleDetailsCacheModel();

		priceScheduleDetailsCacheModel.price = getPrice();

		priceScheduleDetailsCacheModel.psDetailsSystemId = getPsDetailsSystemId();

		priceScheduleDetailsCacheModel.companyFamilyplanSystemId = getCompanyFamilyplanSystemId();

		priceScheduleDetailsCacheModel.itemSystemId = getItemSystemId();

		Date priceProtectionStartDate = getPriceProtectionStartDate();

		if (priceProtectionStartDate != null) {
			priceScheduleDetailsCacheModel.priceProtectionStartDate = priceProtectionStartDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.priceProtectionStartDate = Long.MIN_VALUE;
		}

		priceScheduleDetailsCacheModel.basePrice = getBasePrice();

		Date revisionDate = getRevisionDate();

		if (revisionDate != null) {
			priceScheduleDetailsCacheModel.revisionDate = revisionDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.revisionDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			priceScheduleDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		priceScheduleDetailsCacheModel.priceScheduleSystemId = getPriceScheduleSystemId();

		priceScheduleDetailsCacheModel.itemFamilyplanSystemId = getItemFamilyplanSystemId();

		priceScheduleDetailsCacheModel.priceTolerance = getPriceTolerance();

		priceScheduleDetailsCacheModel.createdBy = getCreatedBy();

		String createdBy = priceScheduleDetailsCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			priceScheduleDetailsCacheModel.createdBy = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			priceScheduleDetailsCacheModel.createdDate = createdDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.createdDate = Long.MIN_VALUE;
		}

		priceScheduleDetailsCacheModel.suggestedPrice = getSuggestedPrice();

		priceScheduleDetailsCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = priceScheduleDetailsCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			priceScheduleDetailsCacheModel.inboundStatus = null;
		}

		priceScheduleDetailsCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = priceScheduleDetailsCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			priceScheduleDetailsCacheModel.modifiedBy = null;
		}

		priceScheduleDetailsCacheModel.contractPrice = getContractPrice();

		priceScheduleDetailsCacheModel.priceToleranceType = getPriceToleranceType();

		String priceToleranceType = priceScheduleDetailsCacheModel.priceToleranceType;

		if ((priceToleranceType != null) && (priceToleranceType.length() == 0)) {
			priceScheduleDetailsCacheModel.priceToleranceType = null;
		}

		priceScheduleDetailsCacheModel.memberFamilyplanSystemId = getMemberFamilyplanSystemId();

		Date contractPriceEndDate = getContractPriceEndDate();

		if (contractPriceEndDate != null) {
			priceScheduleDetailsCacheModel.contractPriceEndDate = contractPriceEndDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.contractPriceEndDate = Long.MIN_VALUE;
		}

		Date contractPriceStartDate = getContractPriceStartDate();

		if (contractPriceStartDate != null) {
			priceScheduleDetailsCacheModel.contractPriceStartDate = contractPriceStartDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.contractPriceStartDate = Long.MIN_VALUE;
		}

		priceScheduleDetailsCacheModel.priceToleranceFrequency = getPriceToleranceFrequency();

		String priceToleranceFrequency = priceScheduleDetailsCacheModel.priceToleranceFrequency;

		if ((priceToleranceFrequency != null) &&
				(priceToleranceFrequency.length() == 0)) {
			priceScheduleDetailsCacheModel.priceToleranceFrequency = null;
		}

		Date attachedDate = getAttachedDate();

		if (attachedDate != null) {
			priceScheduleDetailsCacheModel.attachedDate = attachedDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.attachedDate = Long.MIN_VALUE;
		}

		Date priceProtectionEndDate = getPriceProtectionEndDate();

		if (priceProtectionEndDate != null) {
			priceScheduleDetailsCacheModel.priceProtectionEndDate = priceProtectionEndDate.getTime();
		}
		else {
			priceScheduleDetailsCacheModel.priceProtectionEndDate = Long.MIN_VALUE;
		}

		priceScheduleDetailsCacheModel.recordLockStatus = getRecordLockStatus();

		String recordLockStatus = priceScheduleDetailsCacheModel.recordLockStatus;

		if ((recordLockStatus != null) && (recordLockStatus.length() == 0)) {
			priceScheduleDetailsCacheModel.recordLockStatus = null;
		}

		priceScheduleDetailsCacheModel.pricePlanId = getPricePlanId();

		String pricePlanId = priceScheduleDetailsCacheModel.pricePlanId;

		if ((pricePlanId != null) && (pricePlanId.length() == 0)) {
			priceScheduleDetailsCacheModel.pricePlanId = null;
		}

		priceScheduleDetailsCacheModel.priceType = getPriceType();

		String priceType = priceScheduleDetailsCacheModel.priceType;

		if ((priceType != null) && (priceType.length() == 0)) {
			priceScheduleDetailsCacheModel.priceType = null;
		}

		priceScheduleDetailsCacheModel.batchId = getBatchId();

		String batchId = priceScheduleDetailsCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			priceScheduleDetailsCacheModel.batchId = null;
		}

		priceScheduleDetailsCacheModel.priceToleranceInterval = getPriceToleranceInterval();

		priceScheduleDetailsCacheModel.priceRevision = getPriceRevision();

		return priceScheduleDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(61);

		sb.append("{price=");
		sb.append(getPrice());
		sb.append(", psDetailsSystemId=");
		sb.append(getPsDetailsSystemId());
		sb.append(", companyFamilyplanSystemId=");
		sb.append(getCompanyFamilyplanSystemId());
		sb.append(", itemSystemId=");
		sb.append(getItemSystemId());
		sb.append(", priceProtectionStartDate=");
		sb.append(getPriceProtectionStartDate());
		sb.append(", basePrice=");
		sb.append(getBasePrice());
		sb.append(", revisionDate=");
		sb.append(getRevisionDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", priceScheduleSystemId=");
		sb.append(getPriceScheduleSystemId());
		sb.append(", itemFamilyplanSystemId=");
		sb.append(getItemFamilyplanSystemId());
		sb.append(", priceTolerance=");
		sb.append(getPriceTolerance());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", suggestedPrice=");
		sb.append(getSuggestedPrice());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", contractPrice=");
		sb.append(getContractPrice());
		sb.append(", priceToleranceType=");
		sb.append(getPriceToleranceType());
		sb.append(", memberFamilyplanSystemId=");
		sb.append(getMemberFamilyplanSystemId());
		sb.append(", contractPriceEndDate=");
		sb.append(getContractPriceEndDate());
		sb.append(", contractPriceStartDate=");
		sb.append(getContractPriceStartDate());
		sb.append(", priceToleranceFrequency=");
		sb.append(getPriceToleranceFrequency());
		sb.append(", attachedDate=");
		sb.append(getAttachedDate());
		sb.append(", priceProtectionEndDate=");
		sb.append(getPriceProtectionEndDate());
		sb.append(", recordLockStatus=");
		sb.append(getRecordLockStatus());
		sb.append(", pricePlanId=");
		sb.append(getPricePlanId());
		sb.append(", priceType=");
		sb.append(getPriceType());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", priceToleranceInterval=");
		sb.append(getPriceToleranceInterval());
		sb.append(", priceRevision=");
		sb.append(getPriceRevision());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(94);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.PriceScheduleDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>psDetailsSystemId</column-name><column-value><![CDATA[");
		sb.append(getPsDetailsSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyFamilyplanSystemId</column-name><column-value><![CDATA[");
		sb.append(getCompanyFamilyplanSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemSystemId</column-name><column-value><![CDATA[");
		sb.append(getItemSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceProtectionStartDate</column-name><column-value><![CDATA[");
		sb.append(getPriceProtectionStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>basePrice</column-name><column-value><![CDATA[");
		sb.append(getBasePrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>revisionDate</column-name><column-value><![CDATA[");
		sb.append(getRevisionDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleSystemId</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemFamilyplanSystemId</column-name><column-value><![CDATA[");
		sb.append(getItemFamilyplanSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceTolerance</column-name><column-value><![CDATA[");
		sb.append(getPriceTolerance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>suggestedPrice</column-name><column-value><![CDATA[");
		sb.append(getSuggestedPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPrice</column-name><column-value><![CDATA[");
		sb.append(getContractPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceToleranceType</column-name><column-value><![CDATA[");
		sb.append(getPriceToleranceType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>memberFamilyplanSystemId</column-name><column-value><![CDATA[");
		sb.append(getMemberFamilyplanSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPriceEndDate</column-name><column-value><![CDATA[");
		sb.append(getContractPriceEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPriceStartDate</column-name><column-value><![CDATA[");
		sb.append(getContractPriceStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceToleranceFrequency</column-name><column-value><![CDATA[");
		sb.append(getPriceToleranceFrequency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>attachedDate</column-name><column-value><![CDATA[");
		sb.append(getAttachedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceProtectionEndDate</column-name><column-value><![CDATA[");
		sb.append(getPriceProtectionEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
		sb.append(getRecordLockStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pricePlanId</column-name><column-value><![CDATA[");
		sb.append(getPricePlanId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceType</column-name><column-value><![CDATA[");
		sb.append(getPriceType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceToleranceInterval</column-name><column-value><![CDATA[");
		sb.append(getPriceToleranceInterval());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceRevision</column-name><column-value><![CDATA[");
		sb.append(getPriceRevision());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = PriceScheduleDetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			PriceScheduleDetails.class
		};
	private double _price;
	private int _psDetailsSystemId;
	private int _companyFamilyplanSystemId;
	private int _itemSystemId;
	private Date _priceProtectionStartDate;
	private double _basePrice;
	private Date _revisionDate;
	private Date _modifiedDate;
	private int _priceScheduleSystemId;
	private int _originalPriceScheduleSystemId;
	private boolean _setOriginalPriceScheduleSystemId;
	private int _itemFamilyplanSystemId;
	private double _priceTolerance;
	private String _createdBy;
	private Date _createdDate;
	private double _suggestedPrice;
	private String _inboundStatus;
	private String _modifiedBy;
	private double _contractPrice;
	private String _priceToleranceType;
	private int _memberFamilyplanSystemId;
	private Date _contractPriceEndDate;
	private Date _contractPriceStartDate;
	private String _priceToleranceFrequency;
	private Date _attachedDate;
	private Date _priceProtectionEndDate;
	private String _recordLockStatus;
	private String _pricePlanId;
	private String _priceType;
	private String _batchId;
	private int _priceToleranceInterval;
	private double _priceRevision;
	private long _columnBitmask;
	private PriceScheduleDetails _escapedModel;
}