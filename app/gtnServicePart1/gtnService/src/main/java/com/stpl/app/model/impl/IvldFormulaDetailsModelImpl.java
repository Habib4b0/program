/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.IvldFormulaDetails;
import com.stpl.app.model.IvldFormulaDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldFormulaDetails service. Represents a row in the &quot;IVLD_FORMULA_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link IvldFormulaDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldFormulaDetailsImpl}.
 * </p>
 *
 * @author
 * @see IvldFormulaDetailsImpl
 * @see IvldFormulaDetails
 * @see IvldFormulaDetailsModel
 * @generated
 */
@ProviderType
public class IvldFormulaDetailsModelImpl extends BaseModelImpl<IvldFormulaDetails>
	implements IvldFormulaDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ivld formula details model instance should use the {@link IvldFormulaDetails} interface instead.
	 */
	public static final String TABLE_NAME = "IVLD_FORMULA_DETAILS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "END_DATE", Types.VARCHAR },
			{ "REBATE_PERCENT_1", Types.VARCHAR },
			{ "ITEM_ID", Types.VARCHAR },
			{ "REBATE_PERCENT_2", Types.VARCHAR },
			{ "FORMULA_DESC", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "REBATE_PERCENT_3", Types.VARCHAR },
			{ "CREATED_BY", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SOURCE", Types.VARCHAR },
			{ "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
			{ "ERROR_CODE", Types.VARCHAR },
			{ "FORMULA_ID", Types.VARCHAR },
			{ "MODIFIED_BY", Types.VARCHAR },
			{ "INTF_INSERTED_DATE", Types.TIMESTAMP },
			{ "REPROCESSED_FLAG", Types.VARCHAR },
			{ "FORMULA_DETAILS_INTFID", Types.VARCHAR },
			{ "REASON_FOR_FAILURE", Types.VARCHAR },
			{ "CONTRACT_PRICE_1", Types.VARCHAR },
			{ "COMPANY_ID", Types.VARCHAR },
			{ "CONTRACT_PRICE_2", Types.VARCHAR },
			{ "FORMULA_NO", Types.VARCHAR },
			{ "START_DATE", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "ERROR_FIELD", Types.VARCHAR },
			{ "CONTRACT_PRICE_3", Types.VARCHAR },
			{ "IVLD_FORMULA_DETAILS_SID", Types.INTEGER },
			{ "CHECK_RECORD", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("END_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REBATE_PERCENT_1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REBATE_PERCENT_2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_DESC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("REBATE_PERCENT_3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ADD_CHG_DEL_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INTF_INSERTED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("REPROCESSED_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_DETAILS_INTFID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REASON_FOR_FAILURE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE_1", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("COMPANY_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE_2", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("START_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_FIELD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE_3", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IVLD_FORMULA_DETAILS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table IVLD_FORMULA_DETAILS (END_DATE VARCHAR(75) null,REBATE_PERCENT_1 VARCHAR(75) null,ITEM_ID VARCHAR(75) null,REBATE_PERCENT_2 VARCHAR(75) null,FORMULA_DESC VARCHAR(75) null,MODIFIED_DATE DATE null,REBATE_PERCENT_3 VARCHAR(75) null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,SOURCE VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,ERROR_CODE VARCHAR(75) null,FORMULA_ID VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,INTF_INSERTED_DATE DATE null,REPROCESSED_FLAG VARCHAR(75) null,FORMULA_DETAILS_INTFID VARCHAR(75) null,REASON_FOR_FAILURE VARCHAR(75) null,CONTRACT_PRICE_1 VARCHAR(75) null,COMPANY_ID VARCHAR(75) null,CONTRACT_PRICE_2 VARCHAR(75) null,FORMULA_NO VARCHAR(75) null,START_DATE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,ERROR_FIELD VARCHAR(75) null,CONTRACT_PRICE_3 VARCHAR(75) null,IVLD_FORMULA_DETAILS_SID INTEGER not null primary key IDENTITY,CHECK_RECORD BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table IVLD_FORMULA_DETAILS";
	public static final String ORDER_BY_JPQL = " ORDER BY ivldFormulaDetails.ivldFormulaDetailsSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IVLD_FORMULA_DETAILS.IVLD_FORMULA_DETAILS_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.IvldFormulaDetails"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.IvldFormulaDetails"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.IvldFormulaDetails"));

	public IvldFormulaDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ivldFormulaDetailsSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setIvldFormulaDetailsSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ivldFormulaDetailsSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return IvldFormulaDetails.class;
	}

	@Override
	public String getModelClassName() {
		return IvldFormulaDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("endDate", getEndDate());
		attributes.put("rebatePercent1", getRebatePercent1());
		attributes.put("itemId", getItemId());
		attributes.put("rebatePercent2", getRebatePercent2());
		attributes.put("formulaDesc", getFormulaDesc());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("rebatePercent3", getRebatePercent3());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("source", getSource());
		attributes.put("addChgDelIndicator", getAddChgDelIndicator());
		attributes.put("errorCode", getErrorCode());
		attributes.put("formulaId", getFormulaId());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("intfInsertedDate", getIntfInsertedDate());
		attributes.put("reprocessedFlag", getReprocessedFlag());
		attributes.put("formulaDetailsIntfid", getFormulaDetailsIntfid());
		attributes.put("reasonForFailure", getReasonForFailure());
		attributes.put("contractPrice1", getContractPrice1());
		attributes.put("companyStringId", getCompanyStringId());
		attributes.put("contractPrice2", getContractPrice2());
		attributes.put("formulaNo", getFormulaNo());
		attributes.put("startDate", getStartDate());
		attributes.put("batchId", getBatchId());
		attributes.put("errorField", getErrorField());
		attributes.put("contractPrice3", getContractPrice3());
		attributes.put("ivldFormulaDetailsSid", getIvldFormulaDetailsSid());
		attributes.put("checkRecord", getCheckRecord());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String endDate = (String)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		String rebatePercent1 = (String)attributes.get("rebatePercent1");

		if (rebatePercent1 != null) {
			setRebatePercent1(rebatePercent1);
		}

		String itemId = (String)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		String rebatePercent2 = (String)attributes.get("rebatePercent2");

		if (rebatePercent2 != null) {
			setRebatePercent2(rebatePercent2);
		}

		String formulaDesc = (String)attributes.get("formulaDesc");

		if (formulaDesc != null) {
			setFormulaDesc(formulaDesc);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String rebatePercent3 = (String)attributes.get("rebatePercent3");

		if (rebatePercent3 != null) {
			setRebatePercent3(rebatePercent3);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		String addChgDelIndicator = (String)attributes.get("addChgDelIndicator");

		if (addChgDelIndicator != null) {
			setAddChgDelIndicator(addChgDelIndicator);
		}

		String errorCode = (String)attributes.get("errorCode");

		if (errorCode != null) {
			setErrorCode(errorCode);
		}

		String formulaId = (String)attributes.get("formulaId");

		if (formulaId != null) {
			setFormulaId(formulaId);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date intfInsertedDate = (Date)attributes.get("intfInsertedDate");

		if (intfInsertedDate != null) {
			setIntfInsertedDate(intfInsertedDate);
		}

		String reprocessedFlag = (String)attributes.get("reprocessedFlag");

		if (reprocessedFlag != null) {
			setReprocessedFlag(reprocessedFlag);
		}

		String formulaDetailsIntfid = (String)attributes.get(
				"formulaDetailsIntfid");

		if (formulaDetailsIntfid != null) {
			setFormulaDetailsIntfid(formulaDetailsIntfid);
		}

		String reasonForFailure = (String)attributes.get("reasonForFailure");

		if (reasonForFailure != null) {
			setReasonForFailure(reasonForFailure);
		}

		String contractPrice1 = (String)attributes.get("contractPrice1");

		if (contractPrice1 != null) {
			setContractPrice1(contractPrice1);
		}

		String companyStringId = (String)attributes.get("companyStringId");

		if (companyStringId != null) {
			setCompanyStringId(companyStringId);
		}

		String contractPrice2 = (String)attributes.get("contractPrice2");

		if (contractPrice2 != null) {
			setContractPrice2(contractPrice2);
		}

		String formulaNo = (String)attributes.get("formulaNo");

		if (formulaNo != null) {
			setFormulaNo(formulaNo);
		}

		String startDate = (String)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String errorField = (String)attributes.get("errorField");

		if (errorField != null) {
			setErrorField(errorField);
		}

		String contractPrice3 = (String)attributes.get("contractPrice3");

		if (contractPrice3 != null) {
			setContractPrice3(contractPrice3);
		}

		Integer ivldFormulaDetailsSid = (Integer)attributes.get(
				"ivldFormulaDetailsSid");

		if (ivldFormulaDetailsSid != null) {
			setIvldFormulaDetailsSid(ivldFormulaDetailsSid);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}
	}

	@Override
	public String getEndDate() {
		if (_endDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _endDate;
		}
	}

	@Override
	public void setEndDate(String endDate) {
		_endDate = endDate;
	}

	@Override
	public String getRebatePercent1() {
		if (_rebatePercent1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _rebatePercent1;
		}
	}

	@Override
	public void setRebatePercent1(String rebatePercent1) {
		_rebatePercent1 = rebatePercent1;
	}

	@Override
	public String getItemId() {
		if (_itemId == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemId;
		}
	}

	@Override
	public void setItemId(String itemId) {
		_itemId = itemId;
	}

	@Override
	public String getRebatePercent2() {
		if (_rebatePercent2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _rebatePercent2;
		}
	}

	@Override
	public void setRebatePercent2(String rebatePercent2) {
		_rebatePercent2 = rebatePercent2;
	}

	@Override
	public String getFormulaDesc() {
		if (_formulaDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaDesc;
		}
	}

	@Override
	public void setFormulaDesc(String formulaDesc) {
		_formulaDesc = formulaDesc;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getRebatePercent3() {
		if (_rebatePercent3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _rebatePercent3;
		}
	}

	@Override
	public void setRebatePercent3(String rebatePercent3) {
		_rebatePercent3 = rebatePercent3;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public String getAddChgDelIndicator() {
		if (_addChgDelIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _addChgDelIndicator;
		}
	}

	@Override
	public void setAddChgDelIndicator(String addChgDelIndicator) {
		_addChgDelIndicator = addChgDelIndicator;
	}

	@Override
	public String getErrorCode() {
		if (_errorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorCode;
		}
	}

	@Override
	public void setErrorCode(String errorCode) {
		_errorCode = errorCode;
	}

	@Override
	public String getFormulaId() {
		if (_formulaId == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaId;
		}
	}

	@Override
	public void setFormulaId(String formulaId) {
		_formulaId = formulaId;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getIntfInsertedDate() {
		return _intfInsertedDate;
	}

	@Override
	public void setIntfInsertedDate(Date intfInsertedDate) {
		_intfInsertedDate = intfInsertedDate;
	}

	@Override
	public String getReprocessedFlag() {
		if (_reprocessedFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _reprocessedFlag;
		}
	}

	@Override
	public void setReprocessedFlag(String reprocessedFlag) {
		_reprocessedFlag = reprocessedFlag;
	}

	@Override
	public String getFormulaDetailsIntfid() {
		if (_formulaDetailsIntfid == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaDetailsIntfid;
		}
	}

	@Override
	public void setFormulaDetailsIntfid(String formulaDetailsIntfid) {
		_formulaDetailsIntfid = formulaDetailsIntfid;
	}

	@Override
	public String getReasonForFailure() {
		if (_reasonForFailure == null) {
			return StringPool.BLANK;
		}
		else {
			return _reasonForFailure;
		}
	}

	@Override
	public void setReasonForFailure(String reasonForFailure) {
		_reasonForFailure = reasonForFailure;
	}

	@Override
	public String getContractPrice1() {
		if (_contractPrice1 == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractPrice1;
		}
	}

	@Override
	public void setContractPrice1(String contractPrice1) {
		_contractPrice1 = contractPrice1;
	}

	@Override
	public String getCompanyStringId() {
		if (_companyStringId == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyStringId;
		}
	}

	@Override
	public void setCompanyStringId(String companyStringId) {
		_companyStringId = companyStringId;
	}

	@Override
	public String getContractPrice2() {
		if (_contractPrice2 == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractPrice2;
		}
	}

	@Override
	public void setContractPrice2(String contractPrice2) {
		_contractPrice2 = contractPrice2;
	}

	@Override
	public String getFormulaNo() {
		if (_formulaNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaNo;
		}
	}

	@Override
	public void setFormulaNo(String formulaNo) {
		_formulaNo = formulaNo;
	}

	@Override
	public String getStartDate() {
		if (_startDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _startDate;
		}
	}

	@Override
	public void setStartDate(String startDate) {
		_startDate = startDate;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getErrorField() {
		if (_errorField == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorField;
		}
	}

	@Override
	public void setErrorField(String errorField) {
		_errorField = errorField;
	}

	@Override
	public String getContractPrice3() {
		if (_contractPrice3 == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractPrice3;
		}
	}

	@Override
	public void setContractPrice3(String contractPrice3) {
		_contractPrice3 = contractPrice3;
	}

	@Override
	public int getIvldFormulaDetailsSid() {
		return _ivldFormulaDetailsSid;
	}

	@Override
	public void setIvldFormulaDetailsSid(int ivldFormulaDetailsSid) {
		_ivldFormulaDetailsSid = ivldFormulaDetailsSid;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public IvldFormulaDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (IvldFormulaDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		IvldFormulaDetailsImpl ivldFormulaDetailsImpl = new IvldFormulaDetailsImpl();

		ivldFormulaDetailsImpl.setEndDate(getEndDate());
		ivldFormulaDetailsImpl.setRebatePercent1(getRebatePercent1());
		ivldFormulaDetailsImpl.setItemId(getItemId());
		ivldFormulaDetailsImpl.setRebatePercent2(getRebatePercent2());
		ivldFormulaDetailsImpl.setFormulaDesc(getFormulaDesc());
		ivldFormulaDetailsImpl.setModifiedDate(getModifiedDate());
		ivldFormulaDetailsImpl.setRebatePercent3(getRebatePercent3());
		ivldFormulaDetailsImpl.setCreatedBy(getCreatedBy());
		ivldFormulaDetailsImpl.setCreatedDate(getCreatedDate());
		ivldFormulaDetailsImpl.setSource(getSource());
		ivldFormulaDetailsImpl.setAddChgDelIndicator(getAddChgDelIndicator());
		ivldFormulaDetailsImpl.setErrorCode(getErrorCode());
		ivldFormulaDetailsImpl.setFormulaId(getFormulaId());
		ivldFormulaDetailsImpl.setModifiedBy(getModifiedBy());
		ivldFormulaDetailsImpl.setIntfInsertedDate(getIntfInsertedDate());
		ivldFormulaDetailsImpl.setReprocessedFlag(getReprocessedFlag());
		ivldFormulaDetailsImpl.setFormulaDetailsIntfid(getFormulaDetailsIntfid());
		ivldFormulaDetailsImpl.setReasonForFailure(getReasonForFailure());
		ivldFormulaDetailsImpl.setContractPrice1(getContractPrice1());
		ivldFormulaDetailsImpl.setCompanyStringId(getCompanyStringId());
		ivldFormulaDetailsImpl.setContractPrice2(getContractPrice2());
		ivldFormulaDetailsImpl.setFormulaNo(getFormulaNo());
		ivldFormulaDetailsImpl.setStartDate(getStartDate());
		ivldFormulaDetailsImpl.setBatchId(getBatchId());
		ivldFormulaDetailsImpl.setErrorField(getErrorField());
		ivldFormulaDetailsImpl.setContractPrice3(getContractPrice3());
		ivldFormulaDetailsImpl.setIvldFormulaDetailsSid(getIvldFormulaDetailsSid());
		ivldFormulaDetailsImpl.setCheckRecord(getCheckRecord());

		ivldFormulaDetailsImpl.resetOriginalValues();

		return ivldFormulaDetailsImpl;
	}

	@Override
	public int compareTo(IvldFormulaDetails ivldFormulaDetails) {
		int primaryKey = ivldFormulaDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof IvldFormulaDetails)) {
			return false;
		}

		IvldFormulaDetails ivldFormulaDetails = (IvldFormulaDetails)obj;

		int primaryKey = ivldFormulaDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<IvldFormulaDetails> toCacheModel() {
		IvldFormulaDetailsCacheModel ivldFormulaDetailsCacheModel = new IvldFormulaDetailsCacheModel();

		ivldFormulaDetailsCacheModel.endDate = getEndDate();

		String endDate = ivldFormulaDetailsCacheModel.endDate;

		if ((endDate != null) && (endDate.length() == 0)) {
			ivldFormulaDetailsCacheModel.endDate = null;
		}

		ivldFormulaDetailsCacheModel.rebatePercent1 = getRebatePercent1();

		String rebatePercent1 = ivldFormulaDetailsCacheModel.rebatePercent1;

		if ((rebatePercent1 != null) && (rebatePercent1.length() == 0)) {
			ivldFormulaDetailsCacheModel.rebatePercent1 = null;
		}

		ivldFormulaDetailsCacheModel.itemId = getItemId();

		String itemId = ivldFormulaDetailsCacheModel.itemId;

		if ((itemId != null) && (itemId.length() == 0)) {
			ivldFormulaDetailsCacheModel.itemId = null;
		}

		ivldFormulaDetailsCacheModel.rebatePercent2 = getRebatePercent2();

		String rebatePercent2 = ivldFormulaDetailsCacheModel.rebatePercent2;

		if ((rebatePercent2 != null) && (rebatePercent2.length() == 0)) {
			ivldFormulaDetailsCacheModel.rebatePercent2 = null;
		}

		ivldFormulaDetailsCacheModel.formulaDesc = getFormulaDesc();

		String formulaDesc = ivldFormulaDetailsCacheModel.formulaDesc;

		if ((formulaDesc != null) && (formulaDesc.length() == 0)) {
			ivldFormulaDetailsCacheModel.formulaDesc = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ivldFormulaDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ivldFormulaDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ivldFormulaDetailsCacheModel.rebatePercent3 = getRebatePercent3();

		String rebatePercent3 = ivldFormulaDetailsCacheModel.rebatePercent3;

		if ((rebatePercent3 != null) && (rebatePercent3.length() == 0)) {
			ivldFormulaDetailsCacheModel.rebatePercent3 = null;
		}

		ivldFormulaDetailsCacheModel.createdBy = getCreatedBy();

		String createdBy = ivldFormulaDetailsCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			ivldFormulaDetailsCacheModel.createdBy = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			ivldFormulaDetailsCacheModel.createdDate = createdDate.getTime();
		}
		else {
			ivldFormulaDetailsCacheModel.createdDate = Long.MIN_VALUE;
		}

		ivldFormulaDetailsCacheModel.source = getSource();

		String source = ivldFormulaDetailsCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			ivldFormulaDetailsCacheModel.source = null;
		}

		ivldFormulaDetailsCacheModel.addChgDelIndicator = getAddChgDelIndicator();

		String addChgDelIndicator = ivldFormulaDetailsCacheModel.addChgDelIndicator;

		if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
			ivldFormulaDetailsCacheModel.addChgDelIndicator = null;
		}

		ivldFormulaDetailsCacheModel.errorCode = getErrorCode();

		String errorCode = ivldFormulaDetailsCacheModel.errorCode;

		if ((errorCode != null) && (errorCode.length() == 0)) {
			ivldFormulaDetailsCacheModel.errorCode = null;
		}

		ivldFormulaDetailsCacheModel.formulaId = getFormulaId();

		String formulaId = ivldFormulaDetailsCacheModel.formulaId;

		if ((formulaId != null) && (formulaId.length() == 0)) {
			ivldFormulaDetailsCacheModel.formulaId = null;
		}

		ivldFormulaDetailsCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = ivldFormulaDetailsCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			ivldFormulaDetailsCacheModel.modifiedBy = null;
		}

		Date intfInsertedDate = getIntfInsertedDate();

		if (intfInsertedDate != null) {
			ivldFormulaDetailsCacheModel.intfInsertedDate = intfInsertedDate.getTime();
		}
		else {
			ivldFormulaDetailsCacheModel.intfInsertedDate = Long.MIN_VALUE;
		}

		ivldFormulaDetailsCacheModel.reprocessedFlag = getReprocessedFlag();

		String reprocessedFlag = ivldFormulaDetailsCacheModel.reprocessedFlag;

		if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
			ivldFormulaDetailsCacheModel.reprocessedFlag = null;
		}

		ivldFormulaDetailsCacheModel.formulaDetailsIntfid = getFormulaDetailsIntfid();

		String formulaDetailsIntfid = ivldFormulaDetailsCacheModel.formulaDetailsIntfid;

		if ((formulaDetailsIntfid != null) &&
				(formulaDetailsIntfid.length() == 0)) {
			ivldFormulaDetailsCacheModel.formulaDetailsIntfid = null;
		}

		ivldFormulaDetailsCacheModel.reasonForFailure = getReasonForFailure();

		String reasonForFailure = ivldFormulaDetailsCacheModel.reasonForFailure;

		if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
			ivldFormulaDetailsCacheModel.reasonForFailure = null;
		}

		ivldFormulaDetailsCacheModel.contractPrice1 = getContractPrice1();

		String contractPrice1 = ivldFormulaDetailsCacheModel.contractPrice1;

		if ((contractPrice1 != null) && (contractPrice1.length() == 0)) {
			ivldFormulaDetailsCacheModel.contractPrice1 = null;
		}

		ivldFormulaDetailsCacheModel.companyStringId = getCompanyStringId();

		String companyStringId = ivldFormulaDetailsCacheModel.companyStringId;

		if ((companyStringId != null) && (companyStringId.length() == 0)) {
			ivldFormulaDetailsCacheModel.companyStringId = null;
		}

		ivldFormulaDetailsCacheModel.contractPrice2 = getContractPrice2();

		String contractPrice2 = ivldFormulaDetailsCacheModel.contractPrice2;

		if ((contractPrice2 != null) && (contractPrice2.length() == 0)) {
			ivldFormulaDetailsCacheModel.contractPrice2 = null;
		}

		ivldFormulaDetailsCacheModel.formulaNo = getFormulaNo();

		String formulaNo = ivldFormulaDetailsCacheModel.formulaNo;

		if ((formulaNo != null) && (formulaNo.length() == 0)) {
			ivldFormulaDetailsCacheModel.formulaNo = null;
		}

		ivldFormulaDetailsCacheModel.startDate = getStartDate();

		String startDate = ivldFormulaDetailsCacheModel.startDate;

		if ((startDate != null) && (startDate.length() == 0)) {
			ivldFormulaDetailsCacheModel.startDate = null;
		}

		ivldFormulaDetailsCacheModel.batchId = getBatchId();

		String batchId = ivldFormulaDetailsCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			ivldFormulaDetailsCacheModel.batchId = null;
		}

		ivldFormulaDetailsCacheModel.errorField = getErrorField();

		String errorField = ivldFormulaDetailsCacheModel.errorField;

		if ((errorField != null) && (errorField.length() == 0)) {
			ivldFormulaDetailsCacheModel.errorField = null;
		}

		ivldFormulaDetailsCacheModel.contractPrice3 = getContractPrice3();

		String contractPrice3 = ivldFormulaDetailsCacheModel.contractPrice3;

		if ((contractPrice3 != null) && (contractPrice3.length() == 0)) {
			ivldFormulaDetailsCacheModel.contractPrice3 = null;
		}

		ivldFormulaDetailsCacheModel.ivldFormulaDetailsSid = getIvldFormulaDetailsSid();

		ivldFormulaDetailsCacheModel.checkRecord = getCheckRecord();

		return ivldFormulaDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(57);

		sb.append("{endDate=");
		sb.append(getEndDate());
		sb.append(", rebatePercent1=");
		sb.append(getRebatePercent1());
		sb.append(", itemId=");
		sb.append(getItemId());
		sb.append(", rebatePercent2=");
		sb.append(getRebatePercent2());
		sb.append(", formulaDesc=");
		sb.append(getFormulaDesc());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", rebatePercent3=");
		sb.append(getRebatePercent3());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", addChgDelIndicator=");
		sb.append(getAddChgDelIndicator());
		sb.append(", errorCode=");
		sb.append(getErrorCode());
		sb.append(", formulaId=");
		sb.append(getFormulaId());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", intfInsertedDate=");
		sb.append(getIntfInsertedDate());
		sb.append(", reprocessedFlag=");
		sb.append(getReprocessedFlag());
		sb.append(", formulaDetailsIntfid=");
		sb.append(getFormulaDetailsIntfid());
		sb.append(", reasonForFailure=");
		sb.append(getReasonForFailure());
		sb.append(", contractPrice1=");
		sb.append(getContractPrice1());
		sb.append(", companyStringId=");
		sb.append(getCompanyStringId());
		sb.append(", contractPrice2=");
		sb.append(getContractPrice2());
		sb.append(", formulaNo=");
		sb.append(getFormulaNo());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", errorField=");
		sb.append(getErrorField());
		sb.append(", contractPrice3=");
		sb.append(getContractPrice3());
		sb.append(", ivldFormulaDetailsSid=");
		sb.append(getIvldFormulaDetailsSid());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(88);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.IvldFormulaDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePercent1</column-name><column-value><![CDATA[");
		sb.append(getRebatePercent1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePercent2</column-name><column-value><![CDATA[");
		sb.append(getRebatePercent2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaDesc</column-name><column-value><![CDATA[");
		sb.append(getFormulaDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePercent3</column-name><column-value><![CDATA[");
		sb.append(getRebatePercent3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
		sb.append(getAddChgDelIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorCode</column-name><column-value><![CDATA[");
		sb.append(getErrorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaId</column-name><column-value><![CDATA[");
		sb.append(getFormulaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
		sb.append(getIntfInsertedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
		sb.append(getReprocessedFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaDetailsIntfid</column-name><column-value><![CDATA[");
		sb.append(getFormulaDetailsIntfid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
		sb.append(getReasonForFailure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPrice1</column-name><column-value><![CDATA[");
		sb.append(getContractPrice1());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyStringId</column-name><column-value><![CDATA[");
		sb.append(getCompanyStringId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPrice2</column-name><column-value><![CDATA[");
		sb.append(getContractPrice2());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaNo</column-name><column-value><![CDATA[");
		sb.append(getFormulaNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorField</column-name><column-value><![CDATA[");
		sb.append(getErrorField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPrice3</column-name><column-value><![CDATA[");
		sb.append(getContractPrice3());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ivldFormulaDetailsSid</column-name><column-value><![CDATA[");
		sb.append(getIvldFormulaDetailsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = IvldFormulaDetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			IvldFormulaDetails.class
		};
	private String _endDate;
	private String _rebatePercent1;
	private String _itemId;
	private String _rebatePercent2;
	private String _formulaDesc;
	private Date _modifiedDate;
	private String _rebatePercent3;
	private String _createdBy;
	private Date _createdDate;
	private String _source;
	private String _addChgDelIndicator;
	private String _errorCode;
	private String _formulaId;
	private String _modifiedBy;
	private Date _intfInsertedDate;
	private String _reprocessedFlag;
	private String _formulaDetailsIntfid;
	private String _reasonForFailure;
	private String _contractPrice1;
	private String _companyStringId;
	private String _contractPrice2;
	private String _formulaNo;
	private String _startDate;
	private String _batchId;
	private String _errorField;
	private String _contractPrice3;
	private int _ivldFormulaDetailsSid;
	private boolean _checkRecord;
	private IvldFormulaDetails _escapedModel;
}