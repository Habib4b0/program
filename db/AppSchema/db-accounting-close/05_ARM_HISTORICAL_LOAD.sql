
IF NOT EXISTS (SELECT 'X' 
               FROM   INFORMATION_SCHEMA.TABLES 
               WHERE  TABLE_NAME = 'ARM_ACTUAL_ADJ_MASTER' 
                      AND TABLE_SCHEMA = 'DBO') 
  BEGIN 
      CREATE TABLE ARM_ACTUAL_ADJ_MASTER 
        ( 
           ARM_ACTUAL_ADJ_MASTER_SID INT IDENTITY(1, 1) NOT NULL, 
           CONTRACT_ID            VARCHAR(50) NOT NULL, 
           COMPANY_ID             VARCHAR(50) NOT NULL, 
           ITEM_ID                VARCHAR(50) NOT NULL, 
           GL_COMPANY             VARCHAR(50) NOT NULL, 
           DIVISION               VARCHAR(50) NOT NULL, 
           RS_CATEGORY            INT NOT NULL, 
           RS_TYPE                INT NOT NULL, 
           REBATE_PROGRAM_TYPE    INT NOT NULL, 
           ADJUSTMENT_TYPE        INT NOT NULL, 
           ACCOUNT_TYPE           INT NOT NULL, 
           ACCOUNT_CATEGORY       INT NOT NULL, 
           ACCOUNT                VARCHAR(50) NOT NULL, 
           DEBIT_INDICATOR        BIT NULL, 
           CREDIT_INDICATOR       BIT NULL, 
           REDEMPTION_DATE        DATETIME NOT NULL, 
           AMOUNT                 NUMERIC(22, 6) NULL 
        ) 
  END 

GO 

---------PRIMARY KEY CONSTRAINTS-------------------- 
IF NOT EXISTS(SELECT 1 
              FROM   SYS.KEY_CONSTRAINTS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ACTUAL_ADJ_MASTER' 
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                     AND NAME = 'PK_ARM_ACTUAL_ADJ_MASTER_ARM_ACTUAL_ADJ_MASTER_SID' 
                     AND TYPE = 'PK') 
  BEGIN 
      ALTER TABLE ARM_ACTUAL_ADJ_MASTER 
        ADD CONSTRAINT PK_ARM_ACTUAL_ADJ_MASTER_ARM_ACTUAL_ADJ_MASTER_SID PRIMARY KEY(ARM_ACTUAL_ADJ_MASTER_SID)
  END 

GO 

DECLARE @SQL NVARCHAR(MAX) 
DECLARE @TABLENAME VARCHAR(100) 
DECLARE @STATSNAME VARCHAR(200) 
DECLARE @TABLENAME1 VARCHAR(100) 
DECLARE @SCHEMANAME VARCHAR(30) 
DECLARE @SCHEMANAME1 VARCHAR(30) 

SET @TABLENAME1 = 'ARM_ACTUAL_ADJ_MASTER'--TABLE NAME 
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME 

IF EXISTS (SELECT 'X' 
           FROM   SYS.STATS S 
                  JOIN SYS.TABLES T 
                    ON S.OBJECT_ID = T.OBJECT_ID 
           WHERE  AUTO_CREATED = 1 
                  AND NOT EXISTS (SELECT 1 
                                  FROM   SYS.INDEXES 
                                  WHERE  S.NAME = NAME) 
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1) 
  BEGIN 
      DECLARE CUR CURSOR STATIC FOR 
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME', 
               S.NAME                   AS 'STATSNAME', 
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME' 
        FROM   SYS.STATS S 
               JOIN SYS.TABLES T 
                 ON S.OBJECT_ID = T.OBJECT_ID 
        WHERE  AUTO_CREATED = 1 
               AND NOT EXISTS (SELECT 1 
                               FROM   SYS.INDEXES 
                               WHERE  S.NAME = NAME) 
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME 
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 

      OPEN CUR 

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 

      WHILE @@FETCH_STATUS = 0 
        BEGIN 
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) 
                       + '.' + QUOTENAME(@TABLENAME) + '.' 
                       + QUOTENAME(@STATSNAME) 

            --PRINT @SQL 
            EXEC SP_EXECUTESQL 
              @SQL 

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME 
        END 

      CLOSE CUR 

      DEALLOCATE CUR 
  END 

DECLARE @STATS NVARCHAR(MAX) 
DECLARE CUR1 CURSOR STATIC FOR 
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) 
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) 
         + '.' + QUOTENAME(T.NAME) + ' (' 
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN' 
  FROM   SYS.TABLES T 
         JOIN SYS.COLUMNS C 
           ON T.OBJECT_ID = C.OBJECT_ID 
  WHERE  NOT EXISTS (SELECT 1 
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC 
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC 
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME 
                     WHERE  CC.TABLE_NAME = T.NAME 
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID) 
                            AND C.NAME = COLUMN_NAME) 
         AND NOT EXISTS (SELECT 1 
                         FROM   SYS.STATS S 
                         WHERE  S.OBJECT_ID = C.OBJECT_ID 
                                AND S.NAME = C.NAME) 
         AND T.NAME = @TABLENAME1 -- TABLE NAME 
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1 
  ORDER  BY T.NAME 

OPEN CUR1 

FETCH NEXT FROM CUR1 INTO @STATS 

WHILE @@FETCH_STATUS = 0 
  BEGIN 
      --PRINT @STATS 
      EXEC SP_EXECUTESQL 
        @STATS 

      FETCH NEXT FROM CUR1 INTO @STATS 
  END 

CLOSE CUR1 

DEALLOCATE CUR1 

GO 

-------------------------------------------------------F.K'S FOR  ARM_HISTORY_MASTER-------------------------------------------------------------- 
IF NOT EXISTS(SELECT 1 
              FROM   SYS.FOREIGN_KEYS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ACTUAL_ADJ_MASTER' 
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                     AND NAME = 'FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_RS_CATEGORY' 
                     AND TYPE = 'F') 
  BEGIN 
      ALTER TABLE ARM_ACTUAL_ADJ_MASTER 
        ADD CONSTRAINT FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_RS_CATEGORY FOREIGN KEY(RS_CATEGORY) REFERENCES HELPER_TABLE(HELPER_TABLE_SID)
  END 

GO 

IF NOT EXISTS(SELECT 1 
              FROM   SYS.FOREIGN_KEYS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ACTUAL_ADJ_MASTER' 
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                     AND NAME = 'FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_RS_TYPE' 
                     AND TYPE = 'F') 
  BEGIN 
      ALTER TABLE ARM_ACTUAL_ADJ_MASTER 
        ADD CONSTRAINT FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_RS_TYPE FOREIGN KEY(RS_TYPE) REFERENCES HELPER_TABLE(HELPER_TABLE_SID)
  END 

GO 

IF NOT EXISTS(SELECT 1 
              FROM   SYS.FOREIGN_KEYS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ACTUAL_ADJ_MASTER' 
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                     AND NAME = 'FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_REBATE_PROGRAM_TYPE' 
                     AND TYPE = 'F') 
  BEGIN 
      ALTER TABLE ARM_ACTUAL_ADJ_MASTER 
        ADD CONSTRAINT FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_REBATE_PROGRAM_TYPE FOREIGN KEY(REBATE_PROGRAM_TYPE) REFERENCES HELPER_TABLE(HELPER_TABLE_SID)
  END 

GO 

IF NOT EXISTS(SELECT 1 
              FROM   SYS.FOREIGN_KEYS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ACTUAL_ADJ_MASTER' 
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                     AND NAME = 'FK_ARM_ACTUAL_ADJ_MASTER_ARM_ADJUSTMENT_CONFIG_ADJUSTMENT_TYPE'
                     AND TYPE = 'F') 
  BEGIN 
      ALTER TABLE ARM_ACTUAL_ADJ_MASTER 
        ADD CONSTRAINT FK_ARM_ACTUAL_ADJ_MASTER_ARM_ADJUSTMENT_CONFIG_ADJUSTMENT_TYPE FOREIGN KEY(ADJUSTMENT_TYPE) REFERENCES ARM_ADJUSTMENT_CONFIG(ARM_ADJUSTMENT_CONFIG_SID)
  END 

GO 

IF NOT EXISTS(SELECT 1 
              FROM   SYS.FOREIGN_KEYS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ACTUAL_ADJ_MASTER' 
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                     AND NAME = 'FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_ACCOUNT_TYPE' 
                     AND TYPE = 'F') 
  BEGIN 
      ALTER TABLE ARM_ACTUAL_ADJ_MASTER 
        ADD CONSTRAINT FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_ACCOUNT_TYPE FOREIGN KEY(ACCOUNT_TYPE) REFERENCES HELPER_TABLE(HELPER_TABLE_SID)
  END 

GO 

IF NOT EXISTS(SELECT 1 
              FROM   SYS.FOREIGN_KEYS 
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'ARM_ACTUAL_ADJ_MASTER' 
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO' 
                     AND NAME = 'FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_ACCOUNT_CATEGORY' 
                     AND TYPE = 'F') 
  BEGIN 
      ALTER TABLE ARM_ACTUAL_ADJ_MASTER 
        ADD CONSTRAINT FK_ARM_ACTUAL_ADJ_MASTER_HELPER_TABLE_ACCOUNT_CATEGORY FOREIGN KEY(ACCOUNT_CATEGORY) REFERENCES HELPER_TABLE(HELPER_TABLE_SID)
  END 

GO 