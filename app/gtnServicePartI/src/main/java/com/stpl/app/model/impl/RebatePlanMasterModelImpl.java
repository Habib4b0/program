package com.stpl.app.model.impl;

import com.stpl.app.model.RebatePlanMaster;
import com.stpl.app.model.RebatePlanMasterModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RebatePlanMaster service. Represents a row in the &quot;REBATE_PLAN_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.RebatePlanMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RebatePlanMasterImpl}.
 * </p>
 *
 * @author
 * @see RebatePlanMasterImpl
 * @see com.stpl.app.model.RebatePlanMaster
 * @see com.stpl.app.model.RebatePlanMasterModel
 * @generated
 */
public class RebatePlanMasterModelImpl extends BaseModelImpl<RebatePlanMaster>
    implements RebatePlanMasterModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a rebate plan master model instance should use the {@link com.stpl.app.model.RebatePlanMaster} interface instead.
     */
    public static final String TABLE_NAME = "REBATE_PLAN_MASTER";
    public static final Object[][] TABLE_COLUMNS = {
            { "SELF_GROWTH_INDICATOR", Types.VARCHAR },
            { "REBATE_STRUCTURE", Types.VARCHAR },
            { "MARKET_SHARE_FROM", Types.TIMESTAMP },
            { "SECONDARY_REBATE_PLAN_NO", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "REBATE_RANGE_BASED_ON", Types.INTEGER },
            { "CDR_MODEL_SID", Types.VARCHAR },
            { "REBATE_RULE", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "SOURCE", Types.VARCHAR },
            { "REBATE_BASED_ON", Types.INTEGER },
            { "REBATE_PLAN_TYPE", Types.INTEGER },
            { "REBATE_PLAN_ID", Types.VARCHAR },
            { "MANF_COMPANY_MASTER_SID", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "SECONDARY_REBATE_PLAN_ID", Types.VARCHAR },
            { "MARKET_SHARE_INDICATOR", Types.VARCHAR },
            { "BOGO_ELIGIBLE", Types.VARCHAR },
            { "MARKET_SHARE_TO", Types.TIMESTAMP },
            { "REBATE_PLAN_STATUS", Types.INTEGER },
            { "REBATE_PLAN_MASTER_SID", Types.INTEGER },
            { "MARKET_SHARE_REFERENCE", Types.VARCHAR },
            { "NET_SALES_FORMULA_MASTER_SID", Types.VARCHAR },
            { "SELF_GROWTH_FROM", Types.TIMESTAMP },
            { "INTERNAL_NOTES", Types.VARCHAR },
            { "SECONDARY_REBATE_PLAN_NAME", Types.VARCHAR },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "REBATE_PLAN_NAME", Types.VARCHAR },
            { "SELF_GROWTH_REFERENCE", Types.VARCHAR },
            { "BATCH_ID", Types.VARCHAR },
            { "FORMULA_TYPE", Types.INTEGER },
            { "SELF_GROWTH_TO", Types.TIMESTAMP },
            { "REBATE_PLAN_NO", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table REBATE_PLAN_MASTER (SELF_GROWTH_INDICATOR VARCHAR(75) null,REBATE_STRUCTURE VARCHAR(75) null,MARKET_SHARE_FROM DATE null,SECONDARY_REBATE_PLAN_NO VARCHAR(75) null,MODIFIED_DATE DATE null,REBATE_RANGE_BASED_ON INTEGER,CDR_MODEL_SID VARCHAR(75) null,REBATE_RULE VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY INTEGER,SOURCE VARCHAR(75) null,REBATE_BASED_ON INTEGER,REBATE_PLAN_TYPE INTEGER,REBATE_PLAN_ID VARCHAR(75) null,MANF_COMPANY_MASTER_SID INTEGER,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,SECONDARY_REBATE_PLAN_ID VARCHAR(75) null,MARKET_SHARE_INDICATOR VARCHAR(75) null,BOGO_ELIGIBLE VARCHAR(75) null,MARKET_SHARE_TO DATE null,REBATE_PLAN_STATUS INTEGER,REBATE_PLAN_MASTER_SID INTEGER not null primary key IDENTITY,MARKET_SHARE_REFERENCE VARCHAR(75) null,NET_SALES_FORMULA_MASTER_SID VARCHAR(75) null,SELF_GROWTH_FROM DATE null,INTERNAL_NOTES VARCHAR(75) null,SECONDARY_REBATE_PLAN_NAME VARCHAR(75) null,RECORD_LOCK_STATUS BOOLEAN,REBATE_PLAN_NAME VARCHAR(75) null,SELF_GROWTH_REFERENCE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,FORMULA_TYPE INTEGER,SELF_GROWTH_TO DATE null,REBATE_PLAN_NO VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table REBATE_PLAN_MASTER";
    public static final String ORDER_BY_JPQL = " ORDER BY rebatePlanMaster.rebatePlanMasterSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY REBATE_PLAN_MASTER.REBATE_PLAN_MASTER_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.RebatePlanMaster"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.RebatePlanMaster"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.stpl.app.model.RebatePlanMaster"),
            true);
    public static long REBATEPLANID_COLUMN_BITMASK = 1L;
    public static long REBATEPLANNAME_COLUMN_BITMASK = 2L;
    public static long REBATEPLANNO_COLUMN_BITMASK = 4L;
    public static long REBATEPLANSTATUS_COLUMN_BITMASK = 8L;
    public static long REBATEPLANTYPE_COLUMN_BITMASK = 16L;
    public static long REBATEPLANMASTERSID_COLUMN_BITMASK = 32L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.RebatePlanMaster"));
    private static ClassLoader _classLoader = RebatePlanMaster.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            RebatePlanMaster.class
        };
    private String _selfGrowthIndicator;
    private String _rebateStructure;
    private Date _marketShareFrom;
    private String _secondaryRebatePlanNo;
    private Date _modifiedDate;
    private int _rebateRangeBasedOn;
    private String _cdrModelSid;
    private String _rebateRule;
    private Date _createdDate;
    private int _createdBy;
    private String _source;
    private int _rebateBasedOn;
    private int _rebatePlanType;
    private int _originalRebatePlanType;
    private boolean _setOriginalRebatePlanType;
    private String _rebatePlanId;
    private String _originalRebatePlanId;
    private int _manfCompanyMasterSid;
    private int _modifiedBy;
    private String _inboundStatus;
    private String _secondaryRebatePlanId;
    private String _marketShareIndicator;
    private String _bogoEligible;
    private Date _marketShareTo;
    private int _rebatePlanStatus;
    private int _originalRebatePlanStatus;
    private boolean _setOriginalRebatePlanStatus;
    private int _rebatePlanMasterSid;
    private String _marketShareReference;
    private String _netSalesFormulaMasterSid;
    private Date _selfGrowthFrom;
    private String _internalNotes;
    private String _secondaryRebatePlanName;
    private boolean _recordLockStatus;
    private String _rebatePlanName;
    private String _originalRebatePlanName;
    private String _selfGrowthReference;
    private String _batchId;
    private int _formulaType;
    private Date _selfGrowthTo;
    private String _rebatePlanNo;
    private String _originalRebatePlanNo;
    private long _columnBitmask;
    private RebatePlanMaster _escapedModel;

    public RebatePlanMasterModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _rebatePlanMasterSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setRebatePlanMasterSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _rebatePlanMasterSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return RebatePlanMaster.class;
    }

    @Override
    public String getModelClassName() {
        return RebatePlanMaster.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("selfGrowthIndicator", getSelfGrowthIndicator());
        attributes.put("rebateStructure", getRebateStructure());
        attributes.put("marketShareFrom", getMarketShareFrom());
        attributes.put("secondaryRebatePlanNo", getSecondaryRebatePlanNo());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("rebateRangeBasedOn", getRebateRangeBasedOn());
        attributes.put("cdrModelSid", getCdrModelSid());
        attributes.put("rebateRule", getRebateRule());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("source", getSource());
        attributes.put("rebateBasedOn", getRebateBasedOn());
        attributes.put("rebatePlanType", getRebatePlanType());
        attributes.put("rebatePlanId", getRebatePlanId());
        attributes.put("manfCompanyMasterSid", getManfCompanyMasterSid());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("secondaryRebatePlanId", getSecondaryRebatePlanId());
        attributes.put("marketShareIndicator", getMarketShareIndicator());
        attributes.put("bogoEligible", getBogoEligible());
        attributes.put("marketShareTo", getMarketShareTo());
        attributes.put("rebatePlanStatus", getRebatePlanStatus());
        attributes.put("rebatePlanMasterSid", getRebatePlanMasterSid());
        attributes.put("marketShareReference", getMarketShareReference());
        attributes.put("netSalesFormulaMasterSid", getNetSalesFormulaMasterSid());
        attributes.put("selfGrowthFrom", getSelfGrowthFrom());
        attributes.put("internalNotes", getInternalNotes());
        attributes.put("secondaryRebatePlanName", getSecondaryRebatePlanName());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("rebatePlanName", getRebatePlanName());
        attributes.put("selfGrowthReference", getSelfGrowthReference());
        attributes.put("batchId", getBatchId());
        attributes.put("formulaType", getFormulaType());
        attributes.put("selfGrowthTo", getSelfGrowthTo());
        attributes.put("rebatePlanNo", getRebatePlanNo());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String selfGrowthIndicator = (String) attributes.get(
                "selfGrowthIndicator");

        if (selfGrowthIndicator != null) {
            setSelfGrowthIndicator(selfGrowthIndicator);
        }

        String rebateStructure = (String) attributes.get("rebateStructure");

        if (rebateStructure != null) {
            setRebateStructure(rebateStructure);
        }

        Date marketShareFrom = (Date) attributes.get("marketShareFrom");

        if (marketShareFrom != null) {
            setMarketShareFrom(marketShareFrom);
        }

        String secondaryRebatePlanNo = (String) attributes.get(
                "secondaryRebatePlanNo");

        if (secondaryRebatePlanNo != null) {
            setSecondaryRebatePlanNo(secondaryRebatePlanNo);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Integer rebateRangeBasedOn = (Integer) attributes.get(
                "rebateRangeBasedOn");

        if (rebateRangeBasedOn != null) {
            setRebateRangeBasedOn(rebateRangeBasedOn);
        }

        String cdrModelSid = (String) attributes.get("cdrModelSid");

        if (cdrModelSid != null) {
            setCdrModelSid(cdrModelSid);
        }

        String rebateRule = (String) attributes.get("rebateRule");

        if (rebateRule != null) {
            setRebateRule(rebateRule);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        Integer rebateBasedOn = (Integer) attributes.get("rebateBasedOn");

        if (rebateBasedOn != null) {
            setRebateBasedOn(rebateBasedOn);
        }

        Integer rebatePlanType = (Integer) attributes.get("rebatePlanType");

        if (rebatePlanType != null) {
            setRebatePlanType(rebatePlanType);
        }

        String rebatePlanId = (String) attributes.get("rebatePlanId");

        if (rebatePlanId != null) {
            setRebatePlanId(rebatePlanId);
        }

        Integer manfCompanyMasterSid = (Integer) attributes.get(
                "manfCompanyMasterSid");

        if (manfCompanyMasterSid != null) {
            setManfCompanyMasterSid(manfCompanyMasterSid);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        String secondaryRebatePlanId = (String) attributes.get(
                "secondaryRebatePlanId");

        if (secondaryRebatePlanId != null) {
            setSecondaryRebatePlanId(secondaryRebatePlanId);
        }

        String marketShareIndicator = (String) attributes.get(
                "marketShareIndicator");

        if (marketShareIndicator != null) {
            setMarketShareIndicator(marketShareIndicator);
        }

        String bogoEligible = (String) attributes.get("bogoEligible");

        if (bogoEligible != null) {
            setBogoEligible(bogoEligible);
        }

        Date marketShareTo = (Date) attributes.get("marketShareTo");

        if (marketShareTo != null) {
            setMarketShareTo(marketShareTo);
        }

        Integer rebatePlanStatus = (Integer) attributes.get("rebatePlanStatus");

        if (rebatePlanStatus != null) {
            setRebatePlanStatus(rebatePlanStatus);
        }

        Integer rebatePlanMasterSid = (Integer) attributes.get(
                "rebatePlanMasterSid");

        if (rebatePlanMasterSid != null) {
            setRebatePlanMasterSid(rebatePlanMasterSid);
        }

        String marketShareReference = (String) attributes.get(
                "marketShareReference");

        if (marketShareReference != null) {
            setMarketShareReference(marketShareReference);
        }

        String netSalesFormulaMasterSid = (String) attributes.get(
                "netSalesFormulaMasterSid");

        if (netSalesFormulaMasterSid != null) {
            setNetSalesFormulaMasterSid(netSalesFormulaMasterSid);
        }

        Date selfGrowthFrom = (Date) attributes.get("selfGrowthFrom");

        if (selfGrowthFrom != null) {
            setSelfGrowthFrom(selfGrowthFrom);
        }

        String internalNotes = (String) attributes.get("internalNotes");

        if (internalNotes != null) {
            setInternalNotes(internalNotes);
        }

        String secondaryRebatePlanName = (String) attributes.get(
                "secondaryRebatePlanName");

        if (secondaryRebatePlanName != null) {
            setSecondaryRebatePlanName(secondaryRebatePlanName);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        String rebatePlanName = (String) attributes.get("rebatePlanName");

        if (rebatePlanName != null) {
            setRebatePlanName(rebatePlanName);
        }

        String selfGrowthReference = (String) attributes.get(
                "selfGrowthReference");

        if (selfGrowthReference != null) {
            setSelfGrowthReference(selfGrowthReference);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        Integer formulaType = (Integer) attributes.get("formulaType");

        if (formulaType != null) {
            setFormulaType(formulaType);
        }

        Date selfGrowthTo = (Date) attributes.get("selfGrowthTo");

        if (selfGrowthTo != null) {
            setSelfGrowthTo(selfGrowthTo);
        }

        String rebatePlanNo = (String) attributes.get("rebatePlanNo");

        if (rebatePlanNo != null) {
            setRebatePlanNo(rebatePlanNo);
        }
    }

    @Override
    public String getSelfGrowthIndicator() {
        if (_selfGrowthIndicator == null) {
            return StringPool.BLANK;
        } else {
            return _selfGrowthIndicator;
        }
    }

    @Override
    public void setSelfGrowthIndicator(String selfGrowthIndicator) {
        _selfGrowthIndicator = selfGrowthIndicator;
    }

    @Override
    public String getRebateStructure() {
        if (_rebateStructure == null) {
            return StringPool.BLANK;
        } else {
            return _rebateStructure;
        }
    }

    @Override
    public void setRebateStructure(String rebateStructure) {
        _rebateStructure = rebateStructure;
    }

    @Override
    public Date getMarketShareFrom() {
        return _marketShareFrom;
    }

    @Override
    public void setMarketShareFrom(Date marketShareFrom) {
        _marketShareFrom = marketShareFrom;
    }

    @Override
    public String getSecondaryRebatePlanNo() {
        if (_secondaryRebatePlanNo == null) {
            return StringPool.BLANK;
        } else {
            return _secondaryRebatePlanNo;
        }
    }

    @Override
    public void setSecondaryRebatePlanNo(String secondaryRebatePlanNo) {
        _secondaryRebatePlanNo = secondaryRebatePlanNo;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public int getRebateRangeBasedOn() {
        return _rebateRangeBasedOn;
    }

    @Override
    public void setRebateRangeBasedOn(int rebateRangeBasedOn) {
        _rebateRangeBasedOn = rebateRangeBasedOn;
    }

    @Override
    public String getCdrModelSid() {
        return _cdrModelSid;
    }

    @Override
    public void setCdrModelSid(String cdrModelSid) {
        _cdrModelSid = cdrModelSid;
    }

    @Override
    public String getRebateRule() {
        if (_rebateRule == null) {
            return StringPool.BLANK;
        } else {
            return _rebateRule;
        }
    }

    @Override
    public void setRebateRule(String rebateRule) {
        _rebateRule = rebateRule;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public int getRebateBasedOn() {
        return _rebateBasedOn;
    }

    @Override
    public void setRebateBasedOn(int rebateBasedOn) {
        _rebateBasedOn = rebateBasedOn;
    }

    @Override
    public int getRebatePlanType() {
        return _rebatePlanType;
    }

    @Override
    public void setRebatePlanType(int rebatePlanType) {
        _columnBitmask |= REBATEPLANTYPE_COLUMN_BITMASK;

        if (!_setOriginalRebatePlanType) {
            _setOriginalRebatePlanType = true;

            _originalRebatePlanType = _rebatePlanType;
        }

        _rebatePlanType = rebatePlanType;
    }

    public int getOriginalRebatePlanType() {
        return _originalRebatePlanType;
    }

    @Override
    public String getRebatePlanId() {
        if (_rebatePlanId == null) {
            return StringPool.BLANK;
        } else {
            return _rebatePlanId;
        }
    }

    @Override
    public void setRebatePlanId(String rebatePlanId) {
        _columnBitmask |= REBATEPLANID_COLUMN_BITMASK;

        if (_originalRebatePlanId == null) {
            _originalRebatePlanId = _rebatePlanId;
        }

        _rebatePlanId = rebatePlanId;
    }

    public String getOriginalRebatePlanId() {
        return GetterUtil.getString(_originalRebatePlanId);
    }

    @Override
    public int getManfCompanyMasterSid() {
        return _manfCompanyMasterSid;
    }

    @Override
    public void setManfCompanyMasterSid(int manfCompanyMasterSid) {
        _manfCompanyMasterSid = manfCompanyMasterSid;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public String getSecondaryRebatePlanId() {
        if (_secondaryRebatePlanId == null) {
            return StringPool.BLANK;
        } else {
            return _secondaryRebatePlanId;
        }
    }

    @Override
    public void setSecondaryRebatePlanId(String secondaryRebatePlanId) {
        _secondaryRebatePlanId = secondaryRebatePlanId;
    }

    @Override
    public String getMarketShareIndicator() {
        if (_marketShareIndicator == null) {
            return StringPool.BLANK;
        } else {
            return _marketShareIndicator;
        }
    }

    @Override
    public void setMarketShareIndicator(String marketShareIndicator) {
        _marketShareIndicator = marketShareIndicator;
    }

    @Override
    public String getBogoEligible() {
        if (_bogoEligible == null) {
            return StringPool.BLANK;
        } else {
            return _bogoEligible;
        }
    }

    @Override
    public void setBogoEligible(String bogoEligible) {
        _bogoEligible = bogoEligible;
    }

    @Override
    public Date getMarketShareTo() {
        return _marketShareTo;
    }

    @Override
    public void setMarketShareTo(Date marketShareTo) {
        _marketShareTo = marketShareTo;
    }

    @Override
    public int getRebatePlanStatus() {
        return _rebatePlanStatus;
    }

    @Override
    public void setRebatePlanStatus(int rebatePlanStatus) {
        _columnBitmask |= REBATEPLANSTATUS_COLUMN_BITMASK;

        if (!_setOriginalRebatePlanStatus) {
            _setOriginalRebatePlanStatus = true;

            _originalRebatePlanStatus = _rebatePlanStatus;
        }

        _rebatePlanStatus = rebatePlanStatus;
    }

    public int getOriginalRebatePlanStatus() {
        return _originalRebatePlanStatus;
    }

    @Override
    public int getRebatePlanMasterSid() {
        return _rebatePlanMasterSid;
    }

    @Override
    public void setRebatePlanMasterSid(int rebatePlanMasterSid) {
        _rebatePlanMasterSid = rebatePlanMasterSid;
    }

    @Override
    public String getMarketShareReference() {
        if (_marketShareReference == null) {
            return StringPool.BLANK;
        } else {
            return _marketShareReference;
        }
    }

    @Override
    public void setMarketShareReference(String marketShareReference) {
        _marketShareReference = marketShareReference;
    }

    @Override
    public String getNetSalesFormulaMasterSid() {
        return _netSalesFormulaMasterSid;
    }

    @Override
    public void setNetSalesFormulaMasterSid(String netSalesFormulaMasterSid) {
        _netSalesFormulaMasterSid = netSalesFormulaMasterSid;
    }

    @Override
    public Date getSelfGrowthFrom() {
        return _selfGrowthFrom;
    }

    @Override
    public void setSelfGrowthFrom(Date selfGrowthFrom) {
        _selfGrowthFrom = selfGrowthFrom;
    }

    @Override
    public String getInternalNotes() {
        if (_internalNotes == null) {
            return StringPool.BLANK;
        } else {
            return _internalNotes;
        }
    }

    @Override
    public void setInternalNotes(String internalNotes) {
        _internalNotes = internalNotes;
    }

    @Override
    public String getSecondaryRebatePlanName() {
        if (_secondaryRebatePlanName == null) {
            return StringPool.BLANK;
        } else {
            return _secondaryRebatePlanName;
        }
    }

    @Override
    public void setSecondaryRebatePlanName(String secondaryRebatePlanName) {
        _secondaryRebatePlanName = secondaryRebatePlanName;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public String getRebatePlanName() {
        if (_rebatePlanName == null) {
            return StringPool.BLANK;
        } else {
            return _rebatePlanName;
        }
    }

    @Override
    public void setRebatePlanName(String rebatePlanName) {
        _columnBitmask |= REBATEPLANNAME_COLUMN_BITMASK;

        if (_originalRebatePlanName == null) {
            _originalRebatePlanName = _rebatePlanName;
        }

        _rebatePlanName = rebatePlanName;
    }

    public String getOriginalRebatePlanName() {
        return GetterUtil.getString(_originalRebatePlanName);
    }

    @Override
    public String getSelfGrowthReference() {
        if (_selfGrowthReference == null) {
            return StringPool.BLANK;
        } else {
            return _selfGrowthReference;
        }
    }

    @Override
    public void setSelfGrowthReference(String selfGrowthReference) {
        _selfGrowthReference = selfGrowthReference;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public int getFormulaType() {
        return _formulaType;
    }

    @Override
    public void setFormulaType(int formulaType) {
        _formulaType = formulaType;
    }

    @Override
    public Date getSelfGrowthTo() {
        return _selfGrowthTo;
    }

    @Override
    public void setSelfGrowthTo(Date selfGrowthTo) {
        _selfGrowthTo = selfGrowthTo;
    }

    @Override
    public String getRebatePlanNo() {
        if (_rebatePlanNo == null) {
            return StringPool.BLANK;
        } else {
            return _rebatePlanNo;
        }
    }

    @Override
    public void setRebatePlanNo(String rebatePlanNo) {
        _columnBitmask |= REBATEPLANNO_COLUMN_BITMASK;

        if (_originalRebatePlanNo == null) {
            _originalRebatePlanNo = _rebatePlanNo;
        }

        _rebatePlanNo = rebatePlanNo;
    }

    public String getOriginalRebatePlanNo() {
        return GetterUtil.getString(_originalRebatePlanNo);
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public RebatePlanMaster toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (RebatePlanMaster) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RebatePlanMasterImpl rebatePlanMasterImpl = new RebatePlanMasterImpl();

        rebatePlanMasterImpl.setSelfGrowthIndicator(getSelfGrowthIndicator());
        rebatePlanMasterImpl.setRebateStructure(getRebateStructure());
        rebatePlanMasterImpl.setMarketShareFrom(getMarketShareFrom());
        rebatePlanMasterImpl.setSecondaryRebatePlanNo(getSecondaryRebatePlanNo());
        rebatePlanMasterImpl.setModifiedDate(getModifiedDate());
        rebatePlanMasterImpl.setRebateRangeBasedOn(getRebateRangeBasedOn());
        rebatePlanMasterImpl.setCdrModelSid(getCdrModelSid());
        rebatePlanMasterImpl.setRebateRule(getRebateRule());
        rebatePlanMasterImpl.setCreatedDate(getCreatedDate());
        rebatePlanMasterImpl.setCreatedBy(getCreatedBy());
        rebatePlanMasterImpl.setSource(getSource());
        rebatePlanMasterImpl.setRebateBasedOn(getRebateBasedOn());
        rebatePlanMasterImpl.setRebatePlanType(getRebatePlanType());
        rebatePlanMasterImpl.setRebatePlanId(getRebatePlanId());
        rebatePlanMasterImpl.setManfCompanyMasterSid(getManfCompanyMasterSid());
        rebatePlanMasterImpl.setModifiedBy(getModifiedBy());
        rebatePlanMasterImpl.setInboundStatus(getInboundStatus());
        rebatePlanMasterImpl.setSecondaryRebatePlanId(getSecondaryRebatePlanId());
        rebatePlanMasterImpl.setMarketShareIndicator(getMarketShareIndicator());
        rebatePlanMasterImpl.setBogoEligible(getBogoEligible());
        rebatePlanMasterImpl.setMarketShareTo(getMarketShareTo());
        rebatePlanMasterImpl.setRebatePlanStatus(getRebatePlanStatus());
        rebatePlanMasterImpl.setRebatePlanMasterSid(getRebatePlanMasterSid());
        rebatePlanMasterImpl.setMarketShareReference(getMarketShareReference());
        rebatePlanMasterImpl.setNetSalesFormulaMasterSid(getNetSalesFormulaMasterSid());
        rebatePlanMasterImpl.setSelfGrowthFrom(getSelfGrowthFrom());
        rebatePlanMasterImpl.setInternalNotes(getInternalNotes());
        rebatePlanMasterImpl.setSecondaryRebatePlanName(getSecondaryRebatePlanName());
        rebatePlanMasterImpl.setRecordLockStatus(getRecordLockStatus());
        rebatePlanMasterImpl.setRebatePlanName(getRebatePlanName());
        rebatePlanMasterImpl.setSelfGrowthReference(getSelfGrowthReference());
        rebatePlanMasterImpl.setBatchId(getBatchId());
        rebatePlanMasterImpl.setFormulaType(getFormulaType());
        rebatePlanMasterImpl.setSelfGrowthTo(getSelfGrowthTo());
        rebatePlanMasterImpl.setRebatePlanNo(getRebatePlanNo());

        rebatePlanMasterImpl.resetOriginalValues();

        return rebatePlanMasterImpl;
    }

    @Override
    public int compareTo(RebatePlanMaster rebatePlanMaster) {
        int primaryKey = rebatePlanMaster.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof RebatePlanMaster)) {
            return false;
        }

        RebatePlanMaster rebatePlanMaster = (RebatePlanMaster) obj;

        int primaryKey = rebatePlanMaster.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        RebatePlanMasterModelImpl rebatePlanMasterModelImpl = this;

        rebatePlanMasterModelImpl._originalRebatePlanType = rebatePlanMasterModelImpl._rebatePlanType;

        rebatePlanMasterModelImpl._setOriginalRebatePlanType = false;

        rebatePlanMasterModelImpl._originalRebatePlanId = rebatePlanMasterModelImpl._rebatePlanId;

        rebatePlanMasterModelImpl._originalRebatePlanStatus = rebatePlanMasterModelImpl._rebatePlanStatus;

        rebatePlanMasterModelImpl._setOriginalRebatePlanStatus = false;

        rebatePlanMasterModelImpl._originalRebatePlanName = rebatePlanMasterModelImpl._rebatePlanName;

        rebatePlanMasterModelImpl._originalRebatePlanNo = rebatePlanMasterModelImpl._rebatePlanNo;

        rebatePlanMasterModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<RebatePlanMaster> toCacheModel() {
        RebatePlanMasterCacheModel rebatePlanMasterCacheModel = new RebatePlanMasterCacheModel();

        rebatePlanMasterCacheModel.selfGrowthIndicator = getSelfGrowthIndicator();

        String selfGrowthIndicator = rebatePlanMasterCacheModel.selfGrowthIndicator;

        if ((selfGrowthIndicator != null) &&
                (selfGrowthIndicator.length() == 0)) {
            rebatePlanMasterCacheModel.selfGrowthIndicator = null;
        }

        rebatePlanMasterCacheModel.rebateStructure = getRebateStructure();

        String rebateStructure = rebatePlanMasterCacheModel.rebateStructure;

        if ((rebateStructure != null) && (rebateStructure.length() == 0)) {
            rebatePlanMasterCacheModel.rebateStructure = null;
        }

        Date marketShareFrom = getMarketShareFrom();

        if (marketShareFrom != null) {
            rebatePlanMasterCacheModel.marketShareFrom = marketShareFrom.getTime();
        } else {
            rebatePlanMasterCacheModel.marketShareFrom = Long.MIN_VALUE;
        }

        rebatePlanMasterCacheModel.secondaryRebatePlanNo = getSecondaryRebatePlanNo();

        String secondaryRebatePlanNo = rebatePlanMasterCacheModel.secondaryRebatePlanNo;

        if ((secondaryRebatePlanNo != null) &&
                (secondaryRebatePlanNo.length() == 0)) {
            rebatePlanMasterCacheModel.secondaryRebatePlanNo = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            rebatePlanMasterCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            rebatePlanMasterCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        rebatePlanMasterCacheModel.rebateRangeBasedOn = getRebateRangeBasedOn();

        rebatePlanMasterCacheModel.cdrModelSid = getCdrModelSid();

        String cdrModelSid = rebatePlanMasterCacheModel.cdrModelSid;

        if ((cdrModelSid != null) && (cdrModelSid.length() == 0)) {
            rebatePlanMasterCacheModel.cdrModelSid = null;
        }

        rebatePlanMasterCacheModel.rebateRule = getRebateRule();

        String rebateRule = rebatePlanMasterCacheModel.rebateRule;

        if ((rebateRule != null) && (rebateRule.length() == 0)) {
            rebatePlanMasterCacheModel.rebateRule = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            rebatePlanMasterCacheModel.createdDate = createdDate.getTime();
        } else {
            rebatePlanMasterCacheModel.createdDate = Long.MIN_VALUE;
        }

        rebatePlanMasterCacheModel.createdBy = getCreatedBy();

        rebatePlanMasterCacheModel.source = getSource();

        String source = rebatePlanMasterCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            rebatePlanMasterCacheModel.source = null;
        }

        rebatePlanMasterCacheModel.rebateBasedOn = getRebateBasedOn();

        rebatePlanMasterCacheModel.rebatePlanType = getRebatePlanType();

        rebatePlanMasterCacheModel.rebatePlanId = getRebatePlanId();

        String rebatePlanId = rebatePlanMasterCacheModel.rebatePlanId;

        if ((rebatePlanId != null) && (rebatePlanId.length() == 0)) {
            rebatePlanMasterCacheModel.rebatePlanId = null;
        }

        rebatePlanMasterCacheModel.manfCompanyMasterSid = getManfCompanyMasterSid();

        rebatePlanMasterCacheModel.modifiedBy = getModifiedBy();

        rebatePlanMasterCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = rebatePlanMasterCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            rebatePlanMasterCacheModel.inboundStatus = null;
        }

        rebatePlanMasterCacheModel.secondaryRebatePlanId = getSecondaryRebatePlanId();

        String secondaryRebatePlanId = rebatePlanMasterCacheModel.secondaryRebatePlanId;

        if ((secondaryRebatePlanId != null) &&
                (secondaryRebatePlanId.length() == 0)) {
            rebatePlanMasterCacheModel.secondaryRebatePlanId = null;
        }

        rebatePlanMasterCacheModel.marketShareIndicator = getMarketShareIndicator();

        String marketShareIndicator = rebatePlanMasterCacheModel.marketShareIndicator;

        if ((marketShareIndicator != null) &&
                (marketShareIndicator.length() == 0)) {
            rebatePlanMasterCacheModel.marketShareIndicator = null;
        }

        rebatePlanMasterCacheModel.bogoEligible = getBogoEligible();

        String bogoEligible = rebatePlanMasterCacheModel.bogoEligible;

        if ((bogoEligible != null) && (bogoEligible.length() == 0)) {
            rebatePlanMasterCacheModel.bogoEligible = null;
        }

        Date marketShareTo = getMarketShareTo();

        if (marketShareTo != null) {
            rebatePlanMasterCacheModel.marketShareTo = marketShareTo.getTime();
        } else {
            rebatePlanMasterCacheModel.marketShareTo = Long.MIN_VALUE;
        }

        rebatePlanMasterCacheModel.rebatePlanStatus = getRebatePlanStatus();

        rebatePlanMasterCacheModel.rebatePlanMasterSid = getRebatePlanMasterSid();

        rebatePlanMasterCacheModel.marketShareReference = getMarketShareReference();

        String marketShareReference = rebatePlanMasterCacheModel.marketShareReference;

        if ((marketShareReference != null) &&
                (marketShareReference.length() == 0)) {
            rebatePlanMasterCacheModel.marketShareReference = null;
        }

        rebatePlanMasterCacheModel.netSalesFormulaMasterSid = getNetSalesFormulaMasterSid();

        String netSalesFormulaMasterSid = rebatePlanMasterCacheModel.netSalesFormulaMasterSid;

        if ((netSalesFormulaMasterSid != null) &&
                (netSalesFormulaMasterSid.length() == 0)) {
            rebatePlanMasterCacheModel.netSalesFormulaMasterSid = null;
        }

        Date selfGrowthFrom = getSelfGrowthFrom();

        if (selfGrowthFrom != null) {
            rebatePlanMasterCacheModel.selfGrowthFrom = selfGrowthFrom.getTime();
        } else {
            rebatePlanMasterCacheModel.selfGrowthFrom = Long.MIN_VALUE;
        }

        rebatePlanMasterCacheModel.internalNotes = getInternalNotes();

        String internalNotes = rebatePlanMasterCacheModel.internalNotes;

        if ((internalNotes != null) && (internalNotes.length() == 0)) {
            rebatePlanMasterCacheModel.internalNotes = null;
        }

        rebatePlanMasterCacheModel.secondaryRebatePlanName = getSecondaryRebatePlanName();

        String secondaryRebatePlanName = rebatePlanMasterCacheModel.secondaryRebatePlanName;

        if ((secondaryRebatePlanName != null) &&
                (secondaryRebatePlanName.length() == 0)) {
            rebatePlanMasterCacheModel.secondaryRebatePlanName = null;
        }

        rebatePlanMasterCacheModel.recordLockStatus = getRecordLockStatus();

        rebatePlanMasterCacheModel.rebatePlanName = getRebatePlanName();

        String rebatePlanName = rebatePlanMasterCacheModel.rebatePlanName;

        if ((rebatePlanName != null) && (rebatePlanName.length() == 0)) {
            rebatePlanMasterCacheModel.rebatePlanName = null;
        }

        rebatePlanMasterCacheModel.selfGrowthReference = getSelfGrowthReference();

        String selfGrowthReference = rebatePlanMasterCacheModel.selfGrowthReference;

        if ((selfGrowthReference != null) &&
                (selfGrowthReference.length() == 0)) {
            rebatePlanMasterCacheModel.selfGrowthReference = null;
        }

        rebatePlanMasterCacheModel.batchId = getBatchId();

        String batchId = rebatePlanMasterCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            rebatePlanMasterCacheModel.batchId = null;
        }

        rebatePlanMasterCacheModel.formulaType = getFormulaType();

        Date selfGrowthTo = getSelfGrowthTo();

        if (selfGrowthTo != null) {
            rebatePlanMasterCacheModel.selfGrowthTo = selfGrowthTo.getTime();
        } else {
            rebatePlanMasterCacheModel.selfGrowthTo = Long.MIN_VALUE;
        }

        rebatePlanMasterCacheModel.rebatePlanNo = getRebatePlanNo();

        String rebatePlanNo = rebatePlanMasterCacheModel.rebatePlanNo;

        if ((rebatePlanNo != null) && (rebatePlanNo.length() == 0)) {
            rebatePlanMasterCacheModel.rebatePlanNo = null;
        }

        return rebatePlanMasterCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(71);

        sb.append("{selfGrowthIndicator=");
        sb.append(getSelfGrowthIndicator());
        sb.append(", rebateStructure=");
        sb.append(getRebateStructure());
        sb.append(", marketShareFrom=");
        sb.append(getMarketShareFrom());
        sb.append(", secondaryRebatePlanNo=");
        sb.append(getSecondaryRebatePlanNo());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", rebateRangeBasedOn=");
        sb.append(getRebateRangeBasedOn());
        sb.append(", cdrModelSid=");
        sb.append(getCdrModelSid());
        sb.append(", rebateRule=");
        sb.append(getRebateRule());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", rebateBasedOn=");
        sb.append(getRebateBasedOn());
        sb.append(", rebatePlanType=");
        sb.append(getRebatePlanType());
        sb.append(", rebatePlanId=");
        sb.append(getRebatePlanId());
        sb.append(", manfCompanyMasterSid=");
        sb.append(getManfCompanyMasterSid());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", secondaryRebatePlanId=");
        sb.append(getSecondaryRebatePlanId());
        sb.append(", marketShareIndicator=");
        sb.append(getMarketShareIndicator());
        sb.append(", bogoEligible=");
        sb.append(getBogoEligible());
        sb.append(", marketShareTo=");
        sb.append(getMarketShareTo());
        sb.append(", rebatePlanStatus=");
        sb.append(getRebatePlanStatus());
        sb.append(", rebatePlanMasterSid=");
        sb.append(getRebatePlanMasterSid());
        sb.append(", marketShareReference=");
        sb.append(getMarketShareReference());
        sb.append(", netSalesFormulaMasterSid=");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append(", selfGrowthFrom=");
        sb.append(getSelfGrowthFrom());
        sb.append(", internalNotes=");
        sb.append(getInternalNotes());
        sb.append(", secondaryRebatePlanName=");
        sb.append(getSecondaryRebatePlanName());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", rebatePlanName=");
        sb.append(getRebatePlanName());
        sb.append(", selfGrowthReference=");
        sb.append(getSelfGrowthReference());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", formulaType=");
        sb.append(getFormulaType());
        sb.append(", selfGrowthTo=");
        sb.append(getSelfGrowthTo());
        sb.append(", rebatePlanNo=");
        sb.append(getRebatePlanNo());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(109);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.RebatePlanMaster");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>selfGrowthIndicator</column-name><column-value><![CDATA[");
        sb.append(getSelfGrowthIndicator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebateStructure</column-name><column-value><![CDATA[");
        sb.append(getRebateStructure());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>marketShareFrom</column-name><column-value><![CDATA[");
        sb.append(getMarketShareFrom());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>secondaryRebatePlanNo</column-name><column-value><![CDATA[");
        sb.append(getSecondaryRebatePlanNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebateRangeBasedOn</column-name><column-value><![CDATA[");
        sb.append(getRebateRangeBasedOn());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cdrModelSid</column-name><column-value><![CDATA[");
        sb.append(getCdrModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebateRule</column-name><column-value><![CDATA[");
        sb.append(getRebateRule());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebateBasedOn</column-name><column-value><![CDATA[");
        sb.append(getRebateBasedOn());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanType</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanId</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>manfCompanyMasterSid</column-name><column-value><![CDATA[");
        sb.append(getManfCompanyMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>secondaryRebatePlanId</column-name><column-value><![CDATA[");
        sb.append(getSecondaryRebatePlanId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>marketShareIndicator</column-name><column-value><![CDATA[");
        sb.append(getMarketShareIndicator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>bogoEligible</column-name><column-value><![CDATA[");
        sb.append(getBogoEligible());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>marketShareTo</column-name><column-value><![CDATA[");
        sb.append(getMarketShareTo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanStatus</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanMasterSid</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>marketShareReference</column-name><column-value><![CDATA[");
        sb.append(getMarketShareReference());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>netSalesFormulaMasterSid</column-name><column-value><![CDATA[");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>selfGrowthFrom</column-name><column-value><![CDATA[");
        sb.append(getSelfGrowthFrom());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>internalNotes</column-name><column-value><![CDATA[");
        sb.append(getInternalNotes());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>secondaryRebatePlanName</column-name><column-value><![CDATA[");
        sb.append(getSecondaryRebatePlanName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanName</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>selfGrowthReference</column-name><column-value><![CDATA[");
        sb.append(getSelfGrowthReference());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaType</column-name><column-value><![CDATA[");
        sb.append(getFormulaType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>selfGrowthTo</column-name><column-value><![CDATA[");
        sb.append(getSelfGrowthTo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanNo</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanNo());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
