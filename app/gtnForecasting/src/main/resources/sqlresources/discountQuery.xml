<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<sql>
<entity id="ch.discountPopulate">
<query> <![CDATA[
		
                    UPDATE A SET A.DISCOUNT_AMOUNT=?DA/SEL_COUNT.DIV_COUNT
                    FROM 
                    ST_CH_PROJECTION_DISCOUNT A JOIN PROJECTION_DETAILS E ON E.PROJECTION_DETAILS_SID=A.PROJECTION_DETAILS_SID 
                    AND  E.PROJECTION_MASTER_SID = ?PM AND A.SESSION_ID=?SID
                    JOIN (SELECT CCPMAP.CCP_DETAILS_SID,
                         HLD.HIERARCHY_NO,
                         HLD.RELATIONSHIP_LEVEL_SID
                     FROM   (SELECT RLD.HIERARCHY_NO,
                                 CCP.CCP_DETAILS_SID
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                          JOIN   CCP_MAP CCP ON RLD.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
                          JOIN   PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID AND PD.PROJECTION_MASTER_SID = ?PM
                          JOIN    PROJECTION_CUST_HIERARCHY   PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID
                                 AND PCH.PROJECTION_MASTER_SID=?PM
                          ) CCPMAP JOIN
                         (SELECT RLD1.HIERARCHY_NO,
                                 RLD1.RELATIONSHIP_LEVEL_SID,
                                 RLD1.LEVEL_NO
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD1
                          JOIN   PROJECTION_CUST_HIERARCHY    PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD1.RELATIONSHIP_LEVEL_SID AND PCH.PROJECTION_MASTER_SID =  ?PM
                         AND  RLD1.HIERARCHY_NO LIKE '%') HLD ON CCPMAP.HIERARCHY_NO LIKE HLD.HIERARCHY_NO+'%'
                    WHERE HLD.HIERARCHY_NO in(?HIE)
                   )CCP ON CCP.CCP_DETAILS_SID=E.CCP_DETAILS_SID 
                   JOIN RELATIONSHIP_LEVEL_DEFINITION H ON CCP.HIERARCHY_NO=H.HIERARCHY_NO
                   JOIN "PERIOD" I ON A.PERIOD_SID=I.PERIOD_SID AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
                   JOIN (SELECT count(I.PERIOD_SID)+0.0 DIV_COUNT,H.HIERARCHY_NO,I."YEAR"?FRE FROM 
                   ST_CH_PROJECTION_DISCOUNT A JOIN 
                   PROJECTION_DETAILS E ON E.PROJECTION_DETAILS_SID=A.PROJECTION_DETAILS_SID AND  E.PROJECTION_MASTER_SID = ?PM AND A.SESSION_ID=?SID
                   JOIN (SELECT CCPMAP.CCP_DETAILS_SID,
                         HLD.HIERARCHY_NO,
                         HLD.RELATIONSHIP_LEVEL_SID
                    FROM   (SELECT RLD.HIERARCHY_NO,
                                 CCP.CCP_DETAILS_SID
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                          JOIN   CCP_MAP CCP ON RLD.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
                          JOIN   PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID AND PD.PROJECTION_MASTER_SID = ?PM
                          JOIN    PROJECTION_CUST_HIERARCHY   PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID
                                 AND PCH.PROJECTION_MASTER_SID=?PM
                          ) CCPMAP JOIN
                         (SELECT RLD1.HIERARCHY_NO,
                                 RLD1.RELATIONSHIP_LEVEL_SID,
                                 RLD1.LEVEL_NO
                          FROM   RELATIONSHIP_LEVEL_DEFINITION RLD1
                          JOIN   PROJECTION_CUST_HIERARCHY    PCH ON PCH.RELATIONSHIP_LEVEL_SID = RLD1.RELATIONSHIP_LEVEL_SID AND PCH.PROJECTION_MASTER_SID =  ?PM
                         AND  RLD1.HIERARCHY_NO LIKE '%') HLD ON CCPMAP.HIERARCHY_NO LIKE HLD.HIERARCHY_NO+'%'
                    WHERE  HLD.HIERARCHY_NO in(?HIE)
                   )CCP ON CCP.CCP_DETAILS_SID=E.CCP_DETAILS_SID 
                   JOIN RELATIONSHIP_LEVEL_DEFINITION H ON CCP.HIERARCHY_NO=H.HIERARCHY_NO
                   JOIN "PERIOD" I ON A.PERIOD_SID=I.PERIOD_SID AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
                   GROUP BY H.HIERARCHY_NO,I."YEAR"?FRE) SEL_COUNT 
                   ON H.HIERARCHY_NO=SEL_COUNT.HIERARCHY_NO AND I.?PER=SEL_COUNT.?PER AND I."YEAR"=SEL_COUNT."YEAR";
		
    ]]> </query>
</entity>
<entity id="ch.generateQuery">
<query> <![CDATA[
        
            SELECT   Min(CP.CHECK_RECORD) AS CHECK_RECORD ,            
            H.LEVEL_NO,
            CCP.HIERARCHY_NO,
            H.RELATIONSHIP_LEVEL_VALUES,
            H.LEVEL_NAME,
            I."YEAR",
            ?FRE
            H.RELATIONSHIP_LEVEL_SID,
            ?HIST
            0 AS AP_TABLE_INDICATOR,
            Count(*) AS NET_COUNT,            
            Sum(CP.UNCHECK_COUNT) AS UNCHECK_COUNT,
            NULL  AS PRODUCT_GROWTH,
            NULL  AS ACCOUNT_GROWTH
            FROM ST_CH_ACTUAL_SALES CHAS
            CROSS APPLY (SELECT Sum(B.ACTUAL_SALES) AS ACTUAL_SALES,Avg(B.ACTUAL_RATE) AS ACTUAL_RATE,
                    B.PERIOD_SID,
                    B.PROJECTION_DETAILS_SID,
                    Min(CASE( CHECK_RECORD )
                          WHEN 1 THEN 1
                          ELSE 0
                        END) AS CHECK_RECORD,
                    Sum(CASE( A.CHECK_RECORD )
                          WHEN 1 THEN 0
                          ELSE 1
                        END) AS UNCHECK_COUNT
             FROM   ST_CH_ACTUAL_DISCOUNT B
             JOIN   ST_CH_DISCOUNT_PROJ_MASTER A ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                                AND A.RS_MODEL_SID = B.RS_MODEL_SID
                                                AND A.USER_ID = B.USER_ID
                                                AND A.SESSION_ID = B.SESSION_ID
             WHERE  B.PROJECTION_DETAILS_SID = CHAS.PROJECTION_DETAILS_SID
                    AND B.PERIOD_SID = CHAS.PERIOD_SID
                    AND B.USER_ID = CHAS.USER_ID
                    AND B.SESSION_ID = CHAS.SESSION_ID
					AND B.USER_ID = ?UID
                    AND B.SESSION_ID = ?SID
             GROUP  BY B.PROJECTION_DETAILS_SID,
                       B.PERIOD_SID)CP,
            PROJECTION_DETAILS E,
            RELATIONSHIP_LEVEL_DEFINITION H,
            "PERIOD" I,
            ?CCPQUERY
            WHERE CP.PROJECTION_DETAILS_SID = E.PROJECTION_DETAILS_SID
            AND CHAS.USER_ID = ?UID
            AND CHAS.SESSION_ID = ?SID
            AND E.PROJECTION_MASTER_SID = ?PM
            AND E.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
            AND H.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
            AND CHAS.PERIOD_SID = I.PERIOD_SID
            AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
            GROUP BY H.LEVEL_NO,
               H.RELATIONSHIP_LEVEL_VALUES,
               H.LEVEL_NAME,
               CCP.HIERARCHY_NO,
               I."YEAR",
               ?FRE
               H.RELATIONSHIP_LEVEL_SID
        UNION
           SELECT   Min(CP.CHECK_RECORD) AS CHECK_RECORD,
            H.LEVEL_NO,
            CCP.HIERARCHY_NO,
            H.RELATIONSHIP_LEVEL_VALUES,
            H.LEVEL_NAME,
            I."YEAR",
            ?FRE
            H.RELATIONSHIP_LEVEL_SID,
            ?FUT
            1  AS AP_TABLE_INDICATOR,
            Sum(NET_COUNT) AS NET_COUNT,
            Sum(CP.UNCHECK_COUNT) AS UNCHECK_COUNT,
            Avg(CP.PRODUCT_GROWTH) AS PRODUCT_GROWTH,
            Avg(CP.ACCOUNT_GROWTH) AS ACCOUNT_GROWTH
            FROM        ST_CH_SALES_PROJECTION CHSP
            CROSS APPLY (SELECT Sum(B.DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,
                    Avg(B.PRODUCT_GROWTH)   AS PRODUCT_GROWTH,
                    Avg(B.ACCOUNT_GROWTH)   AS ACCOUNT_GROWTH,
                    Count(*)                AS NET_COUNT,
                    Min(CASE( CHECK_RECORD )
                          WHEN 1 THEN 1
                          ELSE 0
                        END) AS CHECK_RECORD,
                    Sum(CASE( A.CHECK_RECORD )
                          WHEN 1 THEN 0
                          ELSE 1
                        END)  AS UNCHECK_COUNT,
                    B.PERIOD_SID,
                    B.PROJECTION_DETAILS_SID
             FROM   ST_CH_PROJECTION_DISCOUNT B
             JOIN   ST_CH_DISCOUNT_PROJ_MASTER A ON A.PROJECTION_DETAILS_SID = B.PROJECTION_DETAILS_SID
                                                AND A.RS_MODEL_SID = B.RS_MODEL_SID
                                                AND A.USER_ID = B.USER_ID
                                                AND A.SESSION_ID = B.SESSION_ID
             WHERE  B.PROJECTION_DETAILS_SID = CHSP.PROJECTION_DETAILS_SID
                    AND B.PERIOD_SID = CHSP.PERIOD_SID
                    AND B.USER_ID = CHSP.USER_ID
                    AND B.SESSION_ID = CHSP.SESSION_ID
                    AND B.USER_ID = ?UID
                    AND B.SESSION_ID = ?SID
             GROUP  BY B.PROJECTION_DETAILS_SID,
                       B.PERIOD_SID)CP,
            PROJECTION_DETAILS E,
            RELATIONSHIP_LEVEL_DEFINITION H,
            "PERIOD" I,
            ?CCPQUERY
            WHERE       CP.PROJECTION_DETAILS_SID = E.PROJECTION_DETAILS_SID
            AND CHSP.USER_ID = ?UID
            AND CHSP.SESSION_ID = ?SID
            AND E.PROJECTION_MASTER_SID = ?PM
            AND E.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
            AND H.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
            AND CP.PERIOD_SID = I.PERIOD_SID
            AND I.PERIOD_DATE  BETWEEN CONVERT(DATE, '?SP') AND CONVERT(DATE, '?EP')
            GROUP BY H.LEVEL_NO,
               H.RELATIONSHIP_LEVEL_VALUES,
               H.LEVEL_NAME,
               CCP.HIERARCHY_NO,
               I."YEAR",
               ?FRE
               H.RELATIONSHIP_LEVEL_SID
            ORDER       BY H.RELATIONSHIP_LEVEL_VALUES,
               I."YEAR",
               ?FRE
               AP_TABLE_INDICATOR 

        
    ]]> </query>
</entity>
<entity id="m.program-code-count-query">
<query> <![CDATA[
        
            SELECT
                COUNT(DISTINCT CM.CONTRACT_MASTER_SID)
            FROM
                CCP_DETAILS CCP1
            JOIN #SELECTED_HIERARCHY_NO CCP2
                ON CCP2.CCP_DETAILS_SID = CCP1.CCP_DETAILS_SID 
            JOIN CONTRACT_MASTER CM
                ON CCP1.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID;
        
    ]]> </query>
</entity>
<entity id="m.program-code-query">
<query> <![CDATA[
        
            SELECT
                DISTINCT CM.CONTRACT_NAME
            FROM
                CCP_DETAILS CCP1
            JOIN #SELECTED_HIERARCHY_NO CCP2
                ON CCP2.CCP_DETAILS_SID = CCP1.CCP_DETAILS_SID 
            JOIN CONTRACT_MASTER CM
                ON CCP1.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID;
        
    ]]> </query>
</entity>

<entity id="nm.discountGenerate">
<query> <![CDATA[
		
                    DECLARE @START_MONTH VARCHAR(2)=?SM
                    DECLARE @START_YEAR VARCHAR(4)=?SY
                    DECLARE @END_MONTH VARCHAR(2)=?EM
                    DECLARE @END_YEAR VARCHAR(4)=?EY
                    DECLARE @VAR CHAR(1)='?DSC'
                    IF OBJECT_ID('TEMPDB..#PROJECTION_INFO') IS NOT NULL 
                    DROP TABLE #PROJECTION_INFO 

                    CREATE TABLE #PROJECTION_INFO 
                    ( 
                         CCP_DETAILS_SID        INT, 
                         HIERARCHY_NO           VARCHAR(50), 
                         RELATIONSHIP_LEVEL_SID INT, 
                         PROJECTION_DETAILS_SID INT 
                    ) 
                    INSERT INTO #PROJECTION_INFO
                                (CCP_DETAILS_SID,
                                 HIERARCHY_NO,
                                 RELATIONSHIP_LEVEL_SID,
                                PROJECTION_DETAILS_SID)
                    ?CCP

IF Object_id('TEMPDB..#ITEM_UPPS') IS NOT NULL
  DROP TABLE #ITEM_UPPS
  CREATE TABLE #ITEM_UPPS
  (
     PROJECTION_DETAILS_SID INT,
	 CONTRACT_MASTER_SID INT,
     ITEM_MASTER_SID INT,
     UPPS NUMERIC(22,6)
  )
INSERT INTO #ITEM_UPPS
(
P.PROJECTION_DETAILS_SID,
C.CONTRACT_MASTER_SID,
C.ITEM_MASTER_SID,
IM.UPPS
)
SELECT PD.PROJECTION_DETAILS_SID,C.CONTRACT_MASTER_SID,C.ITEM_MASTER_SID,IM.UPPS
FROM PROJECTION_DETAILS PD
INNER JOIN CCP_DETAILS C
ON PD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
INNER JOIN ITEM_MASTER IM
ON IM.ITEM_MASTER_SID=C.ITEM_MASTER_SID
WHERE PROJECTION_MASTER_SID = ?PM
AND EXISTS (SELECT 1
            FROM #PROJECTION_INFO P
            WHERE P.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
            )
                  
IF OBJECT_ID('TEMPDB..#ST_NM_DISCOUNT_PROJ_MASTER') IS NOT NULL 
  DROP TABLE #ST_NM_DISCOUNT_PROJ_MASTER 

SELECT DPM.PROJECTION_DETAILS_SID,
       PRICE_GROUP_TYPE, 
       RC.RS_NAME,
       RC.RS_MODEL_SID,
       USER_GROUP, 
       CHECK_RECORD,
	   UPPS=(CASE WHEN HRB.DESCRIPTION='Contract CMS Units' THEN UPPS ELSE 1 END)
       
INTO   #ST_NM_DISCOUNT_PROJ_MASTER 
FROM   ST_NM_DISCOUNT_PROJ_MASTER DPM 
       INNER JOIN RS_CONTRACT RC
               ON RC.RS_MODEL_SID = DPM.RS_MODEL_SID
	   INNER JOIN #ITEM_UPPS IU
	          ON IU.PROJECTION_DETAILS_SID=DPM.PROJECTION_DETAILS_SID
	   INNER JOIN RS_CONTRACT_DETAILS RS
                      ON RS.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
					  AND RC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
                      AND RS.ITEM_MASTER_SID = IU.ITEM_MASTER_SID
                      AND RS.INBOUND_STATUS <> 'D'
					  AND  RC.INBOUND_STATUS <> 'D'
	   LEFT JOIN REBATE_PLAN_MASTER RPM
                ON RS.REBATE_PLAN_MASTER_SID = RPM.REBATE_PLAN_MASTER_SID
		LEFT JOIN HELPER_TABLE HRB
                ON HRB.HELPER_TABLE_SID = RPM.REBATE_BASED_ON
                    AND HRB.LIST_NAME = 'REBATE_BASED_ON'
				 WHERE EXISTS (SELECT 1 FROM CFP_CONTRACT CC
                        INNER JOIN IFP_CONTRACT IC
                                ON CC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND CC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                        INNER JOIN PS_CONTRACT PC
                                ON PC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND PC.IFP_CONTRACT_SID = IC.IFP_CONTRACT_SID
                                   AND PC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                 WHERE   RC.CFP_CONTRACT_SID=CC.CFP_CONTRACT_SID
					    AND  CC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
				        AND CC.CFP_CONTRACT_SID = RC.CFP_CONTRACT_SID
                        AND IC.IFP_CONTRACT_SID = RC.IFP_CONTRACT_SID
                        AND PC.PS_CONTRACT_SID = RC.PS_CONTRACT_SID
                        AND CC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND IC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND PC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND CC.INBOUND_STATUS <> 'D'
                        AND IC.INBOUND_STATUS <> 'D'
                        AND PC.INBOUND_STATUS <> 'D')

IF OBJECT_ID('TEMPDB..#ACTUAL_SALES') IS NOT NULL 
  DROP TABLE #ACTUAL_SALES 

SELECT HIERARCHY_NO, 
       ?GRP 
       I.YEAR, 
       ACTUAL_SALES=SUM(ACTUAL_SALES), 
       ACTUAL_UNITS=SUM(ACTUAL_UNITS) 
INTO   #ACTUAL_SALES 
FROM   ST_NM_ACTUAL_SALES S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
GROUP  BY HIERARCHY_NO, 
          ?GRP 
          I.YEAR 



IF OBJECT_ID('TEMPDB..#ACTUAL_DISCOUNT') IS NOT NULL 
  DROP TABLE #ACTUAL_DISCOUNT 

SELECT HIERARCHY_NO, 
       ?GRP 
       I.YEAR, 
       DISCOUNT_ACTUALS=SUM(ACTUAL_SALES), 
       AVG(S.ACTUAL_PROJECTION_RATE)  AS PROJECTION_RATE, 
       SUM(S.ACTUAL_PROJECTION_SALES) AS ACTUAL_PROJECTION_SALES, 
       RS_NAME=CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END 
INTO   #ACTUAL_DISCOUNT 
FROM   ST_NM_ACTUAL_DISCOUNT S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
       INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
               ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                  AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
WHERE  CASE 
         WHEN @VAR = 'R' THEN DM.RS_NAME 
         ELSE DM.PRICE_GROUP_TYPE 
       END IN ( ?RSN ) 
GROUP  BY HIERARCHY_NO, 
          ?GRP 
          I.YEAR, 
          CASE 
            WHEN @VAR = 'R' THEN DM.RS_NAME 
            ELSE DM.PRICE_GROUP_TYPE 
          END   


IF OBJECT_ID('TEMPDB..#PROJECTION_SALES') IS NOT NULL 
  DROP TABLE #PROJECTION_SALES 

SELECT HIERARCHY_NO, 
       ?GRP 
       I.YEAR, 
       PROJECTION_SALES=SUM(PROJECTION_SALES), 
        PROJECTION_UNITS=Sum(PROJECTION_UNITS*IU.UPPS) 
INTO   #PROJECTION_SALES 
FROM   ST_NM_SALES_PROJECTION S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
                 INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER IU 
	           ON IU.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
GROUP  BY HIERARCHY_NO, 
          ?GRP 
          I.YEAR 

IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION') IS NOT NULL 
  DROP TABLE #DISCOUNT_PROJECTION 

SELECT HIERARCHY_NO, 
       ?GRP 
       I.YEAR, 
       PROJECTED_DISCOUNT=SUM(PROJECTION_SALES), 
       GROWTH=AVG(GROWTH), 
       RS_NAME=CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END 
INTO   #DISCOUNT_PROJECTION 
FROM   ST_NM_DISCOUNT_PROJECTION S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
       INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
               ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                  AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
WHERE  CASE 
         WHEN @VAR = 'R' THEN DM.RS_NAME 
         ELSE DM.PRICE_GROUP_TYPE 
       END IN ( ?RSN ) 
GROUP  BY HIERARCHY_NO, 
          ?GRP 
          I.YEAR, 
          CASE 
            WHEN @VAR = 'R' THEN DM.RS_NAME 
            ELSE DM.PRICE_GROUP_TYPE 
          END   

IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL 
  DROP TABLE #DISCOUNT_PROJECTION_MASTER 

SELECT RS_NAME=CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END, 
       USER_GROUP=MAX(DM.USER_GROUP), 
       CHECK_RECORD=MIN(CASE( DM.CHECK_RECORD ) 
                          WHEN 1 THEN 1 
                          ELSE 0 
                        END), 
       UNCHECK_COUNT=SUM(CASE( DM.CHECK_RECORD ) 
                           WHEN 1 THEN 0 
                           ELSE 1 
                         END), 
       LEVEL_NO, 
       P.HIERARCHY_NO, 
       RELATIONSHIP_LEVEL_VALUES, 
       LEVEL_NAME, 
       COUNT(*) AS CCP_COUNT 
INTO   #DISCOUNT_PROJECTION_MASTER 
FROM   #PROJECTION_INFO P 
       INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD 
               ON P.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID 
       INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
               ON P.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
WHERE  CASE 
         WHEN @VAR = 'R' THEN DM.RS_NAME 
         ELSE DM.PRICE_GROUP_TYPE 
       END IN ( ?RSN ) 
GROUP  BY CASE 
            WHEN @VAR = 'R' THEN DM.RS_NAME 
            ELSE DM.PRICE_GROUP_TYPE 
          END, 
          LEVEL_NO, 
          P.HIERARCHY_NO, 
          RELATIONSHIP_LEVEL_VALUES, 
          LEVEL_NAME     

SELECT CHECK_RECORD, 
       LEVEL_NO, 
       DPM.HIERARCHY_NO, 
       RELATIONSHIP_LEVEL_VALUES, 
       LEVEL_NAME, 
       AD.YEAR, 
      ?PERIOD_FREQ 
       DPM.RS_NAME, 
       COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_SALES, 0), 0) * 100 AS ACTUAL_RATE, 
       PROJECTION_RATE, 
       0                                                             AS AP_TABLE_INDICATOR, 
       USER_GROUP, 
       CCP_COUNT, 
       UNCHECK_COUNT, 
       DISCOUNT_ACTUALS                                              AS ACTUAL_SALES, 
       COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_UNITS, 0), 0)       AS ACTUAL_RPU, 
       ACTUAL_PROJECTION_SALES                                       AS PROJECTION_SALES, 
       NULL                                                          AS PROJECTION_RPU, 
       NULL                                                          AS GROWTH 
FROM   #DISCOUNT_PROJECTION_MASTER DPM 
       INNER JOIN #ACTUAL_DISCOUNT AD 
               ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                  AND DPM.RS_NAME = AD.RS_NAME 
       INNER JOIN #ACTUAL_SALES SA 
               ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                  AND SA.YEAR = AD.YEAR 
                  ?GROUP_FREQUENCY 

UNION ALL 
SELECT CHECK_RECORD, 
       LEVEL_NO, 
       DPM.HIERARCHY_NO, 
       RELATIONSHIP_LEVEL_VALUES, 
       LEVEL_NAME, 
       AD.YEAR, 
       ?PERIOD_FREQ
       DPM.RS_NAME, 
       NULL                                                                AS ACTUAL_RATE, 
       COALESCE(PROJECTED_DISCOUNT / NULLIF(SS.PROJECTION_SALES, 0), 0) * 100 AS PROJECTION_RATE, 
       1                                                                   AS AP_TABLE_INDICATOR, 
       USER_GROUP, 
       CCP_COUNT, 
       UNCHECK_COUNT, 
       NULL                                                                AS ACTUAL_SALES, 
       NULL                                                                AS ACTUAL_RPU, 
       PROJECTED_DISCOUNT  AS PROJECTION_SALES, 
       COALESCE(PROJECTED_DISCOUNT / NULLIF(PROJECTION_UNITS, 0), 0)       AS PROJECTION_RPU, 
       GROWTH 
FROM   #DISCOUNT_PROJECTION_MASTER DPM 
       INNER JOIN #DISCOUNT_PROJECTION AD 
               ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                  AND DPM.RS_NAME = AD.RS_NAME 
       INNER JOIN #PROJECTION_SALES SA 
               ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                  AND SA.YEAR = AD.YEAR 
                  ?GROUP_FREQUENCY 
                  INNER JOIN(
	SELECT
		HIERARCHY_NO,
		?GRP 
		I.YEAR,
		PROJECTION_SALES = SUM( PROJECTION_SALES )
	FROM
		ST_NM_SALES_PROJECTION S
	INNER JOIN #PROJECTION_INFO C ON
		C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
	INNER JOIN PERIOD I ON
		I.PERIOD_SID = S.PERIOD_SID
	
	GROUP BY
		HIERARCHY_NO,
		?GRP 
		I.YEAR
) SS ON
SA.HIERARCHY_NO = SS.HIERARCHY_NO
AND SA.YEAR = SS.YEAR
?GROUP_FRCY 
ORDER  BY RELATIONSHIP_LEVEL_VALUES,
          RS_NAME,
          YEAR,
         ?GRDATA
          AP_TABLE_INDICATOR 
		
    ]]> </query>
</entity>
<entity id="nm.discCustomGen">
<query> <![CDATA[
		
                    
                    DECLARE @VAR CHAR(1)='?DSC'
                    IF OBJECT_ID('TEMPDB..#PROJECTION_INFO') IS NOT NULL 
  DROP TABLE #PROJECTION_INFO 

CREATE TABLE #PROJECTION_INFO
  (
     CCP_DETAILS_SID        INT,
     HIERARCHY_NO           VARCHAR(50),
     RELATIONSHIP_LEVEL_SID INT,
	 PROJECTION_DETAILS_SID INT
  )

INSERT INTO #PROJECTION_INFO
            (CCP_DETAILS_SID,
             HIERARCHY_NO,
                           RELATIONSHIP_LEVEL_SID,
			 PROJECTION_DETAILS_SID)
                    SELECT CCP_DETAILS_SID,
                           HIERARCHY_NO,
                           RELATIONSHIP_LEVEL_SID,
                           PROJECTION_DETAILS_SID
                    FROM   ?CCP
 IF Object_id('TEMPDB..#ITEM_UPPS') IS NOT NULL
  DROP TABLE #ITEM_UPPS
CREATE TABLE #ITEM_UPPS
  (
     PROJECTION_DETAILS_SID INT,
	 CONTRACT_MASTER_SID INT,
     ITEM_MASTER_SID INT,
     UPPS NUMERIC(22,6)
  )
INSERT INTO #ITEM_UPPS
(
P.PROJECTION_DETAILS_SID,
C.CONTRACT_MASTER_SID,
C.ITEM_MASTER_SID,
IM.UPPS
)
SELECT PD.PROJECTION_DETAILS_SID,C.CONTRACT_MASTER_SID,C.ITEM_MASTER_SID,IM.UPPS
FROM PROJECTION_DETAILS PD
INNER JOIN CCP_DETAILS C
ON PD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
INNER JOIN ITEM_MASTER IM
ON IM.ITEM_MASTER_SID=C.ITEM_MASTER_SID
WHERE PROJECTION_MASTER_SID = ?PM
AND EXISTS (SELECT 1
            FROM #PROJECTION_INFO P
            WHERE P.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
            )

IF OBJECT_ID('TEMPDB..#ST_NM_DISCOUNT_PROJ_MASTER') IS NOT NULL 
  DROP TABLE #ST_NM_DISCOUNT_PROJ_MASTER 

SELECT DPM.PROJECTION_DETAILS_SID,
       PRICE_GROUP_TYPE, 
       RC.RS_NAME,
       RC.RS_MODEL_SID,
       USER_GROUP, 
       CHECK_RECORD,
       UPPS=(CASE WHEN HRB.DESCRIPTION='Contract CMS Units' THEN UPPS ELSE 1 END)
      
INTO   #ST_NM_DISCOUNT_PROJ_MASTER 
FROM   ST_NM_DISCOUNT_PROJ_MASTER DPM 
       INNER JOIN RS_CONTRACT RC
               ON RC.RS_MODEL_SID = DPM.RS_MODEL_SID
	   INNER JOIN #ITEM_UPPS IU
	          ON IU.PROJECTION_DETAILS_SID=DPM.PROJECTION_DETAILS_SID
	   INNER JOIN RS_CONTRACT_DETAILS RS
                      ON RS.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
					  AND RC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
                      AND RS.ITEM_MASTER_SID = IU.ITEM_MASTER_SID
                      AND RS.INBOUND_STATUS <> 'D'
					  AND  RC.INBOUND_STATUS <> 'D'
	   LEFT JOIN REBATE_PLAN_MASTER RPM
                ON RS.REBATE_PLAN_MASTER_SID = RPM.REBATE_PLAN_MASTER_SID
		LEFT JOIN HELPER_TABLE HRB
                ON HRB.HELPER_TABLE_SID = RPM.REBATE_BASED_ON
                    AND HRB.LIST_NAME = 'REBATE_BASED_ON'
				 WHERE EXISTS (SELECT 1 FROM CFP_CONTRACT CC
                        INNER JOIN IFP_CONTRACT IC
                                ON CC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND CC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                        INNER JOIN PS_CONTRACT PC
                                ON PC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND PC.IFP_CONTRACT_SID = IC.IFP_CONTRACT_SID
                                   AND PC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                 WHERE   RC.CFP_CONTRACT_SID=CC.CFP_CONTRACT_SID
					    AND  CC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
				        AND CC.CFP_CONTRACT_SID = RC.CFP_CONTRACT_SID
                        AND IC.IFP_CONTRACT_SID = RC.IFP_CONTRACT_SID
                        AND PC.PS_CONTRACT_SID = RC.PS_CONTRACT_SID
                        AND CC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND IC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND PC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND CC.INBOUND_STATUS <> 'D'
                        AND IC.INBOUND_STATUS <> 'D'
                        AND PC.INBOUND_STATUS <> 'D') 

IF OBJECT_ID('TEMPDB..#ACTUAL_SALES') IS NOT NULL 
  DROP TABLE #ACTUAL_SALES 

SELECT HIERARCHY_NO, 
       ?GRP
       I.YEAR, 
       ACTUAL_SALES=SUM(ACTUAL_SALES), 
       ACTUAL_UNITS=SUM(ACTUAL_UNITS) 
INTO   #ACTUAL_SALES 
FROM   ST_NM_ACTUAL_SALES S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
GROUP  BY HIERARCHY_NO, 
          ?GRP 
          I.YEAR 



IF OBJECT_ID('TEMPDB..#ACTUAL_DISCOUNT') IS NOT NULL 
  DROP TABLE #ACTUAL_DISCOUNT 

SELECT HIERARCHY_NO, 
       ?GRP 
       I.YEAR, 
       DISCOUNT_ACTUALS=SUM(ACTUAL_SALES), 
       AVG(S.ACTUAL_PROJECTION_RATE)  AS PROJECTION_RATE, 
       SUM(S.ACTUAL_PROJECTION_SALES) AS ACTUAL_PROJECTION_SALES, 
       RS_NAME=CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END 
INTO   #ACTUAL_DISCOUNT 
FROM   ST_NM_ACTUAL_DISCOUNT S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
       INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
               ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                  AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
WHERE  CASE 
         WHEN @VAR = 'R' THEN DM.RS_NAME 
         ELSE DM.PRICE_GROUP_TYPE 
       END IN ( ?RSN ) 
GROUP  BY HIERARCHY_NO, 
          ?GRP
          I.YEAR, 
          CASE 
            WHEN @VAR = 'R' THEN DM.RS_NAME 
            ELSE DM.PRICE_GROUP_TYPE 
          END   


IF OBJECT_ID('TEMPDB..#PROJECTION_SALES') IS NOT NULL 
  DROP TABLE #PROJECTION_SALES 

SELECT HIERARCHY_NO, 
       ?GRP
       I.YEAR, 
       PROJECTION_SALES=SUM(PROJECTION_SALES), 
      PROJECTION_UNITS=Sum(PROJECTION_UNITS*IU.UPPS) 
INTO   #PROJECTION_SALES 
FROM   ST_NM_SALES_PROJECTION S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
                INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER IU 
	           ON IU.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
GROUP  BY HIERARCHY_NO, 
          ?GRP
          I.YEAR 

IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION') IS NOT NULL 
  DROP TABLE #DISCOUNT_PROJECTION 

SELECT HIERARCHY_NO, 
       ?GRP 
       I.YEAR, 
       PROJECTED_DISCOUNT=SUM(PROJECTION_SALES), 
       GROWTH=AVG(GROWTH), 
       RS_NAME=CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END 
INTO   #DISCOUNT_PROJECTION 
FROM   ST_NM_DISCOUNT_PROJECTION S 
       INNER JOIN #PROJECTION_INFO C 
               ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
       INNER JOIN PERIOD I 
               ON I.PERIOD_SID = S.PERIOD_SID 
       INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
               ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                  AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
WHERE  CASE 
         WHEN @VAR = 'R' THEN DM.RS_NAME 
         ELSE DM.PRICE_GROUP_TYPE 
       END IN ( ?RSN ) 
GROUP  BY HIERARCHY_NO, 
          ?GRP
          I.YEAR, 
          CASE 
            WHEN @VAR = 'R' THEN DM.RS_NAME 
            ELSE DM.PRICE_GROUP_TYPE 
          END   

IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL 
  DROP TABLE #DISCOUNT_PROJECTION_MASTER 

SELECT RS_NAME=CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END, 
       USER_GROUP=MAX(DM.USER_GROUP), 
       CHECK_RECORD=MIN(CASE( DM.CHECK_RECORD ) 
                          WHEN 1 THEN 1 
                          ELSE 0 
                        END), 
       UNCHECK_COUNT=SUM(CASE( DM.CHECK_RECORD ) 
                           WHEN 1 THEN 0 
                           ELSE 1 
                         END), 
       LEVEL_NO, 
       P.HIERARCHY_NO, 
       RELATIONSHIP_LEVEL_VALUES, 
       LEVEL_NAME, 
       COUNT(*) AS CCP_COUNT 
INTO   #DISCOUNT_PROJECTION_MASTER 
FROM   #PROJECTION_INFO P 
       INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD 
               ON P.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID 
       INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
               ON P.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
WHERE  CASE 
         WHEN @VAR = 'R' THEN DM.RS_NAME 
         ELSE DM.PRICE_GROUP_TYPE 
       END IN ( ?RSN ) 
GROUP  BY CASE 
            WHEN @VAR = 'R' THEN DM.RS_NAME 
            ELSE DM.PRICE_GROUP_TYPE 
          END, 
          LEVEL_NO, 
          P.HIERARCHY_NO, 
          RELATIONSHIP_LEVEL_VALUES, 
          LEVEL_NAME     

SELECT CHECK_RECORD, 
       LEVEL_NO,
       DPM.HIERARCHY_NO, 
       RELATIONSHIP_LEVEL_VALUES, 
       LEVEL_NAME, 
       AD.YEAR, 
       ?PERIOD_FREQ
       DPM.RS_NAME, 
       COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_SALES, 0), 0) * 100 AS ACTUAL_RATE, 
       PROJECTION_RATE, 
       0                                                             AS AP_TABLE_INDICATOR, 
       USER_GROUP, 
       CCP_COUNT, 
       UNCHECK_COUNT, 
       DISCOUNT_ACTUALS                                              AS ACTUAL_SALES, 
       COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_UNITS, 0), 0)       AS ACTUAL_RPU, 
       ACTUAL_PROJECTION_SALES                                       AS PROJECTION_SALES, 
       NULL                                                          AS PROJECTION_RPU, 
       NULL                                                          AS GROWTH 
FROM   #DISCOUNT_PROJECTION_MASTER DPM 
       INNER JOIN #ACTUAL_DISCOUNT AD 
               ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                  AND DPM.RS_NAME = AD.RS_NAME 
       INNER JOIN #ACTUAL_SALES SA 
               ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                  AND SA.YEAR = AD.YEAR 
                  ?GROUP_FREQUENCY 

UNION ALL 
SELECT CHECK_RECORD, 
       LEVEL_NO, 
       DPM.HIERARCHY_NO, 
       RELATIONSHIP_LEVEL_VALUES, 
       LEVEL_NAME, 
       AD.YEAR, 
       ?PERIOD_FREQ
       DPM.RS_NAME, 
       NULL                                                                AS ACTUAL_RATE, 
       COALESCE(PROJECTED_DISCOUNT / NULLIF(SS.PROJECTION_SALES, 0), 0) * 100 AS PROJECTION_RATE, 
       1                                                                   AS AP_TABLE_INDICATOR, 
       USER_GROUP, 
       CCP_COUNT, 
       UNCHECK_COUNT, 
       NULL                                                                AS ACTUAL_SALES, 
       NULL                                                                AS ACTUAL_RPU, 
       PROJECTED_DISCOUNT  AS PROJECTION_SALES, 
       COALESCE(PROJECTED_DISCOUNT / NULLIF(PROJECTION_UNITS, 0), 0)       AS PROJECTION_RPU, 
       GROWTH 
FROM   #DISCOUNT_PROJECTION_MASTER DPM 
       INNER JOIN #DISCOUNT_PROJECTION AD 
               ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                  AND DPM.RS_NAME = AD.RS_NAME 
       INNER JOIN #PROJECTION_SALES SA 
               ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                  AND SA.YEAR = AD.YEAR 
                  ?GROUP_FREQUENCY 
                  INNER JOIN(
		SELECT
			HIERARCHY_NO,
			?GRP 
			I.YEAR,
			PROJECTION_SALES = SUM( PROJECTION_SALES )
		FROM
			ST_NM_SALES_PROJECTION S
		INNER JOIN #PROJECTION_INFO C ON
			C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
		INNER JOIN PERIOD I ON
			I.PERIOD_SID = S.PERIOD_SID
		GROUP BY
			HIERARCHY_NO,
			?GRP 
			I.YEAR
	) SS ON
	SA.HIERARCHY_NO = SS.HIERARCHY_NO
	AND SA.YEAR = SS.YEAR
	?GROUP_FRCY 
ORDER  BY RELATIONSHIP_LEVEL_VALUES,
          RS_NAME,
          YEAR,
          ?GRDATA
          AP_TABLE_INDICATOR 
                    
    ]]> </query>
</entity>
<entity id="nm.discountGenerateView">
<query> <![CDATA[
                        
                            DECLARE @START_MONTH VARCHAR(2)=?SM
                            DECLARE @START_YEAR VARCHAR(4)=?SY
                            DECLARE @END_MONTH VARCHAR(2)=?EM
                            DECLARE @END_YEAR VARCHAR(4)=?EY
                            DECLARE @VAR CHAR(1)='?DSC'
                            IF OBJECT_ID('TEMPDB..#PROJECTION_INFO') IS NOT NULL 
                            DROP TABLE #PROJECTION_INFO 

                            CREATE TABLE #PROJECTION_INFO 
                            ( 
                                 CCP_DETAILS_SID        INT, 
                                 HIERARCHY_NO           VARCHAR(50), 
                                 RELATIONSHIP_LEVEL_SID INT, 
                                 PROJECTION_DETAILS_SID INT 
                            ) 
                            INSERT INTO #PROJECTION_INFO
                                        (CCP_DETAILS_SID,
                                         HIERARCHY_NO,
                                         RELATIONSHIP_LEVEL_SID,
                                        PROJECTION_DETAILS_SID)
                            ?CCP

IF Object_id('TEMPDB..#ITEM_UPPS') IS NOT NULL
  DROP TABLE #ITEM_UPPS
  CREATE TABLE #ITEM_UPPS
  (
     PROJECTION_DETAILS_SID INT,
	 CONTRACT_MASTER_SID INT,
     ITEM_MASTER_SID INT,
     UPPS NUMERIC(22,6)
  )
INSERT INTO #ITEM_UPPS
(
P.PROJECTION_DETAILS_SID,
C.CONTRACT_MASTER_SID,
C.ITEM_MASTER_SID,
IM.UPPS
)
SELECT PD.PROJECTION_DETAILS_SID,C.CONTRACT_MASTER_SID,C.ITEM_MASTER_SID,IM.UPPS
FROM PROJECTION_DETAILS PD
INNER JOIN CCP_DETAILS C
ON PD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
INNER JOIN ITEM_MASTER IM
ON IM.ITEM_MASTER_SID=C.ITEM_MASTER_SID
WHERE PROJECTION_MASTER_SID = ?PM
AND EXISTS (SELECT 1
            FROM #PROJECTION_INFO P
            WHERE P.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
            )

        IF OBJECT_ID('TEMPDB..#ST_NM_DISCOUNT_PROJ_MASTER') IS NOT NULL 
          DROP TABLE #ST_NM_DISCOUNT_PROJ_MASTER 

SELECT DPM.PROJECTION_DETAILS_SID,
               PRICE_GROUP_TYPE, 
       RC.RS_NAME,
       RC.RS_MODEL_SID,
               USER_GROUP, 
       CHECK_RECORD,
	   UPPS=(CASE WHEN HRB.DESCRIPTION='Contract CMS Units' THEN UPPS ELSE 1 END)
           
        INTO   #ST_NM_DISCOUNT_PROJ_MASTER 
        FROM   NM_DISCOUNT_PROJ_MASTER DPM 
       INNER JOIN RS_CONTRACT RC
               ON RC.RS_MODEL_SID = DPM.RS_MODEL_SID
	   INNER JOIN #ITEM_UPPS IU
	          ON IU.PROJECTION_DETAILS_SID=DPM.PROJECTION_DETAILS_SID
	   INNER JOIN RS_CONTRACT_DETAILS RS
                      ON RS.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
					  AND RC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
                      AND RS.ITEM_MASTER_SID = IU.ITEM_MASTER_SID
                      AND RS.INBOUND_STATUS <> 'D'
					  AND  RC.INBOUND_STATUS <> 'D'
	   LEFT JOIN REBATE_PLAN_MASTER RPM
                ON RS.REBATE_PLAN_MASTER_SID = RPM.REBATE_PLAN_MASTER_SID
		LEFT JOIN HELPER_TABLE HRB
                ON HRB.HELPER_TABLE_SID = RPM.REBATE_BASED_ON
                    AND HRB.LIST_NAME = 'REBATE_BASED_ON'
				 WHERE EXISTS (SELECT 1 FROM CFP_CONTRACT CC
                        INNER JOIN IFP_CONTRACT IC
                                ON CC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND CC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                        INNER JOIN PS_CONTRACT PC
                                ON PC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND PC.IFP_CONTRACT_SID = IC.IFP_CONTRACT_SID
                                   AND PC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                 WHERE   RC.CFP_CONTRACT_SID=CC.CFP_CONTRACT_SID
					    AND  CC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
				        AND CC.CFP_CONTRACT_SID = RC.CFP_CONTRACT_SID
                        AND IC.IFP_CONTRACT_SID = RC.IFP_CONTRACT_SID
                        AND PC.PS_CONTRACT_SID = RC.PS_CONTRACT_SID
                        AND CC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND IC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND PC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND CC.INBOUND_STATUS <> 'D'
                        AND IC.INBOUND_STATUS <> 'D'
                        AND PC.INBOUND_STATUS <> 'D')

        IF OBJECT_ID('TEMPDB..#ACTUAL_SALES') IS NOT NULL 
          DROP TABLE #ACTUAL_SALES 

        SELECT HIERARCHY_NO, 
               ?GRP 
               I.YEAR, 
               ACTUAL_SALES=SUM(ACTUAL_SALES), 
               ACTUAL_UNITS=SUM(ACTUAL_UNITS) 
        INTO   #ACTUAL_SALES 
        FROM   NM_ACTUAL_SALES S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
        GROUP  BY HIERARCHY_NO, 
                  ?GRP 
                  I.YEAR 



        IF OBJECT_ID('TEMPDB..#ACTUAL_DISCOUNT') IS NOT NULL 
          DROP TABLE #ACTUAL_DISCOUNT 

        SELECT HIERARCHY_NO, 
               ?GRP 
               I.YEAR, 
               DISCOUNT_ACTUALS=SUM(ACTUAL_SALES), 
               AVG(S.ACTUAL_PROJECTION_RATE)  AS PROJECTION_RATE, 
               SUM(S.ACTUAL_PROJECTION_SALES) AS ACTUAL_PROJECTION_SALES, 
               RS_NAME=CASE 
                         WHEN @VAR = 'R' THEN DM.RS_NAME 
                         ELSE DM.PRICE_GROUP_TYPE 
                       END 
        INTO   #ACTUAL_DISCOUNT 
        FROM   NM_ACTUAL_DISCOUNT S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
               INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
                       ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                          AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
        WHERE  CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END IN ( ?RSN ) 
        GROUP  BY HIERARCHY_NO, 
                  ?GRP 
                  I.YEAR, 
                  CASE 
                    WHEN @VAR = 'R' THEN DM.RS_NAME 
                    ELSE DM.PRICE_GROUP_TYPE 
                  END   


        IF OBJECT_ID('TEMPDB..#PROJECTION_SALES') IS NOT NULL 
          DROP TABLE #PROJECTION_SALES 

        SELECT HIERARCHY_NO, 
               ?GRP 
               I.YEAR, 
               PROJECTION_SALES=SUM(PROJECTION_SALES), 
        PROJECTION_UNITS=Sum(PROJECTION_UNITS*IU.UPPS) 
        INTO   #PROJECTION_SALES 
        FROM   NM_SALES_PROJECTION S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
                 INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER IU 
	           ON IU.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
        GROUP  BY HIERARCHY_NO, 
                  ?GRP 
                  I.YEAR 

        IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION') IS NOT NULL 
          DROP TABLE #DISCOUNT_PROJECTION 

        SELECT HIERARCHY_NO, 
               ?GRP 
               I.YEAR, 
               PROJECTED_DISCOUNT=SUM(PROJECTION_SALES), 
               GROWTH=AVG(GROWTH), 
               RS_NAME=CASE 
                         WHEN @VAR = 'R' THEN DM.RS_NAME 
                         ELSE DM.PRICE_GROUP_TYPE 
                       END 
        INTO   #DISCOUNT_PROJECTION 
        FROM   NM_DISCOUNT_PROJECTION S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
               INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
                       ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                          AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
        WHERE  CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END IN ( ?RSN ) 
        GROUP  BY HIERARCHY_NO, 
                  ?GRP 
                  I.YEAR, 
                  CASE 
                    WHEN @VAR = 'R' THEN DM.RS_NAME 
                    ELSE DM.PRICE_GROUP_TYPE 
                  END   

        IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL 
          DROP TABLE #DISCOUNT_PROJECTION_MASTER 

        SELECT RS_NAME=CASE 
                         WHEN @VAR = 'R' THEN DM.RS_NAME 
                         ELSE DM.PRICE_GROUP_TYPE 
                       END, 
               USER_GROUP=MAX(DM.USER_GROUP), 
               CHECK_RECORD=MIN(CASE( DM.CHECK_RECORD ) 
                                  WHEN 1 THEN 1 
                                  ELSE 0 
                                END), 
               UNCHECK_COUNT=SUM(CASE( DM.CHECK_RECORD ) 
                                   WHEN 1 THEN 0 
                                   ELSE 1 
                                 END), 
               LEVEL_NO, 
               P.HIERARCHY_NO, 
               RELATIONSHIP_LEVEL_VALUES, 
               LEVEL_NAME, 
               COUNT(*) AS CCP_COUNT 
        INTO   #DISCOUNT_PROJECTION_MASTER 
        FROM   #PROJECTION_INFO P 
               INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD 
                       ON P.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID 
               INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
                       ON P.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
        WHERE  CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END IN ( ?RSN ) 
        GROUP  BY CASE 
                    WHEN @VAR = 'R' THEN DM.RS_NAME 
                    ELSE DM.PRICE_GROUP_TYPE 
                  END, 
                  LEVEL_NO, 
                  P.HIERARCHY_NO, 
                  RELATIONSHIP_LEVEL_VALUES, 
                  LEVEL_NAME     

        SELECT CHECK_RECORD, 
               LEVEL_NO, 
               DPM.HIERARCHY_NO, 
               RELATIONSHIP_LEVEL_VALUES, 
               LEVEL_NAME, 
               AD.YEAR, 
              ?PERIOD_FREQ 
               DPM.RS_NAME, 
               COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_SALES, 0), 0) * 100 AS ACTUAL_RATE, 
               PROJECTION_RATE, 
               0                                                             AS AP_TABLE_INDICATOR, 
               USER_GROUP, 
               CCP_COUNT, 
               UNCHECK_COUNT, 
               DISCOUNT_ACTUALS                                              AS ACTUAL_SALES, 
               COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_UNITS, 0), 0)       AS ACTUAL_RPU, 
               ACTUAL_PROJECTION_SALES                                       AS PROJECTION_SALES, 
               NULL                                                          AS PROJECTION_RPU, 
               NULL                                                          AS GROWTH 
        FROM   #DISCOUNT_PROJECTION_MASTER DPM 
               INNER JOIN #ACTUAL_DISCOUNT AD 
                       ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                          AND DPM.RS_NAME = AD.RS_NAME 
               INNER JOIN #ACTUAL_SALES SA 
                       ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                          AND SA.YEAR = AD.YEAR 
                          ?GROUP_FREQUENCY 

        UNION ALL 
        SELECT CHECK_RECORD, 
               LEVEL_NO, 
               DPM.HIERARCHY_NO, 
               RELATIONSHIP_LEVEL_VALUES, 
               LEVEL_NAME, 
               AD.YEAR, 
               ?PERIOD_FREQ
               DPM.RS_NAME, 
               NULL                                                                AS ACTUAL_RATE, 
               COALESCE(PROJECTED_DISCOUNT / NULLIF(SS.PROJECTION_SALES, 0), 0) * 100 AS PROJECTION_RATE, 
               1                                                                   AS AP_TABLE_INDICATOR, 
               USER_GROUP, 
               CCP_COUNT, 
               UNCHECK_COUNT, 
               NULL                                                                AS ACTUAL_SALES, 
               NULL                                                                AS ACTUAL_RPU, 
               PROJECTED_DISCOUNT  AS PROJECTION_SALES, 
               COALESCE(PROJECTED_DISCOUNT / NULLIF(PROJECTION_UNITS, 0), 0)       AS PROJECTION_RPU, 
               GROWTH 
        FROM   #DISCOUNT_PROJECTION_MASTER DPM 
               INNER JOIN #DISCOUNT_PROJECTION AD 
                       ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                          AND DPM.RS_NAME = AD.RS_NAME 
               INNER JOIN #PROJECTION_SALES SA 
                       ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                          AND SA.YEAR = AD.YEAR 
                          ?GROUP_FREQUENCY 
     INNER JOIN(
	SELECT
		HIERARCHY_NO,
		?GRP
		I.YEAR,
		PROJECTION_SALES = SUM( PROJECTION_SALES )
	FROM
		ST_NM_SALES_PROJECTION S
	INNER JOIN #PROJECTION_INFO C ON
		C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
	INNER JOIN PERIOD I ON
		I.PERIOD_SID = S.PERIOD_SID
	
	GROUP BY
		HIERARCHY_NO,
		?GRP
		I.YEAR
) SS ON
SA.HIERARCHY_NO = SS.HIERARCHY_NO
AND SA.YEAR = SS.YEAR
?GROUP_FRCY 
        ORDER  BY RELATIONSHIP_LEVEL_VALUES,
                  RS_NAME,
                  YEAR,
                 ?GRDATA
                  AP_TABLE_INDICATOR 
                        
            ]]> </query>
</entity>
<entity id="nm.discCustomGenView">
<query> <![CDATA[
                        

                            DECLARE @VAR CHAR(1)='?DSC'
                            IF OBJECT_ID('TEMPDB..#PROJECTION_INFO') IS NOT NULL 
          DROP TABLE #PROJECTION_INFO 

        CREATE TABLE #PROJECTION_INFO
          (
             CCP_DETAILS_SID        INT,
             HIERARCHY_NO           VARCHAR(50),
             RELATIONSHIP_LEVEL_SID INT,
                 PROJECTION_DETAILS_SID INT
          )

        INSERT INTO #PROJECTION_INFO
                    (CCP_DETAILS_SID,
                     HIERARCHY_NO,
                                   RELATIONSHIP_LEVEL_SID,
                                 PROJECTION_DETAILS_SID)
                            SELECT CCP_DETAILS_SID,
                                   HIERARCHY_NO,
                                   RELATIONSHIP_LEVEL_SID,
                                   PROJECTION_DETAILS_SID
                            FROM   ?CCP
   IF Object_id('TEMPDB..#ITEM_UPPS') IS NOT NULL
  DROP TABLE #ITEM_UPPS
CREATE TABLE #ITEM_UPPS
  (
     PROJECTION_DETAILS_SID INT,
	 CONTRACT_MASTER_SID INT,
     ITEM_MASTER_SID INT,
     UPPS NUMERIC(22,6)
  )
INSERT INTO #ITEM_UPPS
(
P.PROJECTION_DETAILS_SID,
C.CONTRACT_MASTER_SID,
C.ITEM_MASTER_SID,
IM.UPPS
)
SELECT PD.PROJECTION_DETAILS_SID,C.CONTRACT_MASTER_SID,C.ITEM_MASTER_SID,IM.UPPS
FROM PROJECTION_DETAILS PD
INNER JOIN CCP_DETAILS C
ON PD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
INNER JOIN ITEM_MASTER IM
ON IM.ITEM_MASTER_SID=C.ITEM_MASTER_SID
WHERE PROJECTION_MASTER_SID = ?PM
AND EXISTS (SELECT 1
            FROM #PROJECTION_INFO P
            WHERE P.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
            )

        IF OBJECT_ID('TEMPDB..#ST_NM_DISCOUNT_PROJ_MASTER') IS NOT NULL 
          DROP TABLE #ST_NM_DISCOUNT_PROJ_MASTER 

SELECT DPM.PROJECTION_DETAILS_SID,
               PRICE_GROUP_TYPE, 
       RC.RS_NAME,
       RC.RS_MODEL_SID,
               USER_GROUP, 
               CHECK_RECORD, 
	   UPPS=(CASE WHEN HRB.DESCRIPTION='Contract CMS Units' THEN UPPS ELSE 1 END)
   
        INTO   #ST_NM_DISCOUNT_PROJ_MASTER 
        FROM   NM_DISCOUNT_PROJ_MASTER DPM 
                 INNER JOIN RS_CONTRACT RC
               ON RC.RS_MODEL_SID = DPM.RS_MODEL_SID
	   INNER JOIN #ITEM_UPPS IU
	          ON IU.PROJECTION_DETAILS_SID=DPM.PROJECTION_DETAILS_SID
	   INNER JOIN RS_CONTRACT_DETAILS RS
                      ON RS.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
					  AND RC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
                      AND RS.ITEM_MASTER_SID = IU.ITEM_MASTER_SID
                      AND RS.INBOUND_STATUS <> 'D'
					  AND  RC.INBOUND_STATUS <> 'D'
	   LEFT JOIN REBATE_PLAN_MASTER RPM
                ON RS.REBATE_PLAN_MASTER_SID = RPM.REBATE_PLAN_MASTER_SID
		LEFT JOIN HELPER_TABLE HRB
                ON HRB.HELPER_TABLE_SID = RPM.REBATE_BASED_ON
                    AND HRB.LIST_NAME = 'REBATE_BASED_ON'
				 WHERE EXISTS (SELECT 1 FROM CFP_CONTRACT CC
                        INNER JOIN IFP_CONTRACT IC
                                ON CC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND CC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                        INNER JOIN PS_CONTRACT PC
                                ON PC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                   AND PC.IFP_CONTRACT_SID = IC.IFP_CONTRACT_SID
                                   AND PC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                 WHERE   RC.CFP_CONTRACT_SID=CC.CFP_CONTRACT_SID
					    AND  CC.CONTRACT_MASTER_SID = IU.CONTRACT_MASTER_SID
				        AND CC.CFP_CONTRACT_SID = RC.CFP_CONTRACT_SID
                        AND IC.IFP_CONTRACT_SID = RC.IFP_CONTRACT_SID
                        AND PC.PS_CONTRACT_SID = RC.PS_CONTRACT_SID
                        AND CC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND IC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND PC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                        AND CC.INBOUND_STATUS <> 'D'
                        AND IC.INBOUND_STATUS <> 'D'
                        AND PC.INBOUND_STATUS <> 'D') 

        IF OBJECT_ID('TEMPDB..#ACTUAL_SALES') IS NOT NULL 
          DROP TABLE #ACTUAL_SALES 

        SELECT HIERARCHY_NO, 
               ?GRP
               I.YEAR, 
               ACTUAL_SALES=SUM(ACTUAL_SALES), 
               ACTUAL_UNITS=SUM(ACTUAL_UNITS) 
        INTO   #ACTUAL_SALES 
        FROM   NM_ACTUAL_SALES S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
        GROUP  BY HIERARCHY_NO, 
                  ?GRP 
                  I.YEAR 



        IF OBJECT_ID('TEMPDB..#ACTUAL_DISCOUNT') IS NOT NULL 
          DROP TABLE #ACTUAL_DISCOUNT 

        SELECT HIERARCHY_NO, 
               ?GRP 
               I.YEAR, 
               DISCOUNT_ACTUALS=SUM(ACTUAL_SALES), 
               AVG(S.ACTUAL_PROJECTION_RATE)  AS PROJECTION_RATE, 
               SUM(S.ACTUAL_PROJECTION_SALES) AS ACTUAL_PROJECTION_SALES, 
               RS_NAME=CASE 
                         WHEN @VAR = 'R' THEN DM.RS_NAME 
                         ELSE DM.PRICE_GROUP_TYPE 
                       END 
        INTO   #ACTUAL_DISCOUNT 
        FROM   NM_ACTUAL_DISCOUNT S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
               INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
                       ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                          AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
                          
        WHERE  CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END IN ( ?RSN ) 
        GROUP  BY HIERARCHY_NO, 
                  ?GRP
                  I.YEAR, 
                  CASE 
                    WHEN @VAR = 'R' THEN DM.RS_NAME 
                    ELSE DM.PRICE_GROUP_TYPE 
                  END   


        IF OBJECT_ID('TEMPDB..#PROJECTION_SALES') IS NOT NULL 
          DROP TABLE #PROJECTION_SALES 

        SELECT HIERARCHY_NO, 
               ?GRP
               I.YEAR, 
               PROJECTION_SALES=SUM(PROJECTION_SALES), 
      PROJECTION_UNITS=Sum(PROJECTION_UNITS*IU.UPPS) 
        INTO   #PROJECTION_SALES 
        FROM   NM_SALES_PROJECTION S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
                INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER IU 
	           ON IU.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
        GROUP  BY HIERARCHY_NO, 
                  ?GRP
                  I.YEAR 

        IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION') IS NOT NULL 
          DROP TABLE #DISCOUNT_PROJECTION 

        SELECT HIERARCHY_NO, 
               ?GRP 
               I.YEAR, 
               PROJECTED_DISCOUNT=SUM(PROJECTION_SALES), 
               GROWTH=AVG(GROWTH), 
               RS_NAME=CASE 
                         WHEN @VAR = 'R' THEN DM.RS_NAME 
                         ELSE DM.PRICE_GROUP_TYPE 
                       END 
        INTO   #DISCOUNT_PROJECTION 
        FROM   NM_DISCOUNT_PROJECTION S 
               INNER JOIN #PROJECTION_INFO C 
                       ON C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID 
               INNER JOIN PERIOD I 
                       ON I.PERIOD_SID = S.PERIOD_SID 
               INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
                       ON C.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
                          AND DM.RS_MODEL_SID = S.RS_MODEL_SID 
        WHERE  CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END IN ( ?RSN ) 
        GROUP  BY HIERARCHY_NO, 
                  ?GRP
                  I.YEAR, 
                  CASE 
                    WHEN @VAR = 'R' THEN DM.RS_NAME 
                    ELSE DM.PRICE_GROUP_TYPE 
                  END   

        IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL 
          DROP TABLE #DISCOUNT_PROJECTION_MASTER 

        SELECT RS_NAME=CASE 
                         WHEN @VAR = 'R' THEN DM.RS_NAME 
                         ELSE DM.PRICE_GROUP_TYPE 
                       END, 
               USER_GROUP=MAX(DM.USER_GROUP), 
               CHECK_RECORD=MIN(CASE( DM.CHECK_RECORD ) 
                                  WHEN 1 THEN 1 
                                  ELSE 0 
                                END), 
               UNCHECK_COUNT=SUM(CASE( DM.CHECK_RECORD ) 
                                   WHEN 1 THEN 0 
                                   ELSE 1 
                                 END), 
               LEVEL_NO, 
               P.HIERARCHY_NO, 
               RELATIONSHIP_LEVEL_VALUES, 
               LEVEL_NAME, 
               COUNT(*) AS CCP_COUNT 
        INTO   #DISCOUNT_PROJECTION_MASTER 
        FROM   #PROJECTION_INFO P 
               INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD 
                       ON P.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID 
               INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM 
                       ON P.PROJECTION_DETAILS_SID = DM.PROJECTION_DETAILS_SID 
        WHERE  CASE 
                 WHEN @VAR = 'R' THEN DM.RS_NAME 
                 ELSE DM.PRICE_GROUP_TYPE 
               END IN ( ?RSN ) 
        GROUP  BY CASE 
                    WHEN @VAR = 'R' THEN DM.RS_NAME 
                    ELSE DM.PRICE_GROUP_TYPE 
                  END, 
                  LEVEL_NO, 
                  P.HIERARCHY_NO, 
                  RELATIONSHIP_LEVEL_VALUES, 
                  LEVEL_NAME     

        SELECT CHECK_RECORD, 
               LEVEL_NO,
               DPM.HIERARCHY_NO, 
               RELATIONSHIP_LEVEL_VALUES, 
               LEVEL_NAME, 
               AD.YEAR, 
               ?PERIOD_FREQ
               DPM.RS_NAME, 
               COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_SALES, 0), 0) * 100 AS ACTUAL_RATE, 
               PROJECTION_RATE, 
               0                                                             AS AP_TABLE_INDICATOR, 
               USER_GROUP, 
               CCP_COUNT, 
               UNCHECK_COUNT, 
               DISCOUNT_ACTUALS                                              AS ACTUAL_SALES, 
               COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_UNITS, 0), 0)       AS ACTUAL_RPU, 
               ACTUAL_PROJECTION_SALES                                       AS PROJECTION_SALES, 
               NULL                                                          AS PROJECTION_RPU, 
               NULL                                                          AS GROWTH 
        FROM   #DISCOUNT_PROJECTION_MASTER DPM 
               INNER JOIN #ACTUAL_DISCOUNT AD 
                       ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                          AND DPM.RS_NAME = AD.RS_NAME 
               INNER JOIN #ACTUAL_SALES SA 
                       ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                          AND SA.YEAR = AD.YEAR 
                          ?GROUP_FREQUENCY 

        UNION ALL 
        SELECT CHECK_RECORD, 
               LEVEL_NO, 
               DPM.HIERARCHY_NO, 
               RELATIONSHIP_LEVEL_VALUES, 
               LEVEL_NAME, 
               AD.YEAR, 
               ?PERIOD_FREQ
               DPM.RS_NAME, 
               NULL                                                                AS ACTUAL_RATE, 
               COALESCE(PROJECTED_DISCOUNT / NULLIF(SS.PROJECTION_SALES, 0), 0) * 100 AS PROJECTION_RATE, 
               1                                                                   AS AP_TABLE_INDICATOR, 
               USER_GROUP, 
               CCP_COUNT, 
               UNCHECK_COUNT, 
               NULL                                                                AS ACTUAL_SALES, 
               NULL                                                                AS ACTUAL_RPU, 
               PROJECTED_DISCOUNT  AS PROJECTION_SALES, 
               COALESCE(PROJECTED_DISCOUNT / NULLIF(PROJECTION_UNITS, 0), 0)       AS PROJECTION_RPU, 
               GROWTH 
        FROM   #DISCOUNT_PROJECTION_MASTER DPM 
               INNER JOIN #DISCOUNT_PROJECTION AD 
                       ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO 
                          AND DPM.RS_NAME = AD.RS_NAME 
               INNER JOIN #PROJECTION_SALES SA 
                       ON SA.HIERARCHY_NO = AD.HIERARCHY_NO 
                          AND SA.YEAR = AD.YEAR 
                          ?GROUP_FREQUENCY 
     INNER JOIN(
		SELECT
			HIERARCHY_NO,
			?GRP 
			I.YEAR,
			PROJECTION_SALES = SUM( PROJECTION_SALES )
		FROM
			ST_NM_SALES_PROJECTION S
		INNER JOIN #PROJECTION_INFO C ON
			C.PROJECTION_DETAILS_SID = S.PROJECTION_DETAILS_SID
		INNER JOIN PERIOD I ON
			I.PERIOD_SID = S.PERIOD_SID
		
		GROUP BY
			HIERARCHY_NO,
			?GRP 
			I.YEAR
	) SS ON
	SA.HIERARCHY_NO = SS.HIERARCHY_NO
	AND SA.YEAR = SS.YEAR
        ?GROUP_FRCY 
        ORDER  BY RELATIONSHIP_LEVEL_VALUES,
                  RS_NAME,
                  YEAR,
                  ?GRDATA
                  AP_TABLE_INDICATOR 
                            
            ]]> </query>
</entity>
<entity id="nm.ProgramTypeInView">
<query> <![CDATA[
                        
                        [$Select_STATEMENT]
                        FROM (
	SELECT PROJECTION_DETAILS_SID
		,CCP_DETAILS_SID
		,CONTRACT_MASTER_SID
		,COMPANY_MASTER_SID
		,ITEM_MASTER_SID
		,PRICE_GROUP_TYPE
		,RS_MODEL_SID
		,RS_ID
		,NET_FLAG
		,RS_NAME
	FROM (
		SELECT DISTINCT PROJECTION_DETAILS_SID
			,B.CCP_DETAILS_SID
			,B.CONTRACT_MASTER_SID
			,B.COMPANY_MASTER_SID
			,B.ITEM_MASTER_SID
			,PRICE_GROUP_TYPE = CASE 
				WHEN HT.DESCRIPTION = 'REIMB'
					THEN 'REIMBURSEMENT'
				WHEN HT.DESCRIPTION = 'OI'
					THEN 'OFF INVOICE'
				ELSE HT.DESCRIPTION
				END
			,R.RS_MODEL_SID
			,R.RS_ID
			,r.RS_NAME
			,NET_FLAG = (
				CASE 
					WHEN HT.DESCRIPTION LIKE 'OFF%'
						THEN 'N'
					ELSE 'Y'
					END
				)
		FROM PROJECTION_DETAILS A
		JOIN CCP_DETAILS B ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
		JOIN RS_CONTRACT R1 ON R1.CONTRACT_MASTER_SID = B.CONTRACT_MASTER_SID
		JOIN RS_CONTRACT_DETAILS R2 ON R2.RS_CONTRACT_SID = R1.RS_CONTRACT_SID
			AND R2.ITEM_MASTER_SID = B.ITEM_MASTER_SID
		JOIN RS_MODEL R ON R.RS_MODEL_SID = R1.RS_MODEL_SID
		LEFT JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = R1.REBATE_PROGRAM_TYPE
			AND HT.LIST_NAME = 'REBATE_PROGRAM_TYPE'
		LEFT JOIN UDCS U ON U.MASTER_SID = R1.RS_CONTRACT_SID
			AND U.MASTER_TYPE = 'RS_CONTRACT'
		LEFT JOIN HELPER_TABLE H2 ON H2.HELPER_TABLE_SID = U.UDC3
		WHERE A.PROJECTION_MASTER_SID = [$PROJECTION_ID]
			AND R1.INBOUND_STATUS <> 'D'
			AND R2.INBOUND_STATUS <> 'D'
			AND EXISTS (
				SELECT 1
				FROM CFP_CONTRACT CFP1
				JOIN CFP_CONTRACT_DETAILS CFP2 ON CFP1.CFP_CONTRACT_SID = CFP2.CFP_CONTRACT_SID
					AND R1.CFP_CONTRACT_SID = CFP1.CFP_CONTRACT_SID
				WHERE COMPANY_MASTER_SID = B.COMPANY_MASTER_SID
					AND CFP1.CONTRACT_MASTER_SID = B.CONTRACT_MASTER_SID
				)
		) A
	WHERE PRICE_GROUP_TYPE <> 'PRICE PROTECTION'
	) a
                          
            ]]> </query>
</entity>
</sql>
