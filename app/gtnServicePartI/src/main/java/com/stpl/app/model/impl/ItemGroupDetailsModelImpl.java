package com.stpl.app.model.impl;

import com.stpl.app.model.ItemGroupDetails;
import com.stpl.app.model.ItemGroupDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ItemGroupDetails service. Represents a row in the &quot;ITEM_GROUP_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.ItemGroupDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ItemGroupDetailsImpl}.
 * </p>
 *
 * @author
 * @see ItemGroupDetailsImpl
 * @see com.stpl.app.model.ItemGroupDetails
 * @see com.stpl.app.model.ItemGroupDetailsModel
 * @generated
 */
public class ItemGroupDetailsModelImpl extends BaseModelImpl<ItemGroupDetails>
    implements ItemGroupDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a item group details model instance should use the {@link com.stpl.app.model.ItemGroupDetails} interface instead.
     */
    public static final String TABLE_NAME = "ITEM_GROUP_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "ITEM_GROUP_DETAILS_SID", Types.INTEGER },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "ITEM_MASTER_SID", Types.INTEGER },
            { "VERSION_NO", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "ITEM_GROUP_SID", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table ITEM_GROUP_DETAILS (ITEM_GROUP_DETAILS_SID INTEGER not null primary key IDENTITY,CREATED_DATE DATE null,CREATED_BY INTEGER,ITEM_MASTER_SID INTEGER,VERSION_NO INTEGER,MODIFIED_BY INTEGER,MODIFIED_DATE DATE null,ITEM_GROUP_SID INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table ITEM_GROUP_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY itemGroupDetails.itemGroupDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY ITEM_GROUP_DETAILS.ITEM_GROUP_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.ItemGroupDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.ItemGroupDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.ItemGroupDetails"));
    private static ClassLoader _classLoader = ItemGroupDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            ItemGroupDetails.class
        };
    private int _itemGroupDetailsSid;
    private Date _createdDate;
    private int _createdBy;
    private int _itemMasterSid;
    private int _versionNo;
    private int _modifiedBy;
    private Date _modifiedDate;
    private int _itemGroupSid;
    private ItemGroupDetails _escapedModel;

    public ItemGroupDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _itemGroupDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setItemGroupDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _itemGroupDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return ItemGroupDetails.class;
    }

    @Override
    public String getModelClassName() {
        return ItemGroupDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("itemGroupDetailsSid", getItemGroupDetailsSid());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("itemMasterSid", getItemMasterSid());
        attributes.put("versionNo", getVersionNo());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("itemGroupSid", getItemGroupSid());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer itemGroupDetailsSid = (Integer) attributes.get(
                "itemGroupDetailsSid");

        if (itemGroupDetailsSid != null) {
            setItemGroupDetailsSid(itemGroupDetailsSid);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Integer itemMasterSid = (Integer) attributes.get("itemMasterSid");

        if (itemMasterSid != null) {
            setItemMasterSid(itemMasterSid);
        }

        Integer versionNo = (Integer) attributes.get("versionNo");

        if (versionNo != null) {
            setVersionNo(versionNo);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Integer itemGroupSid = (Integer) attributes.get("itemGroupSid");

        if (itemGroupSid != null) {
            setItemGroupSid(itemGroupSid);
        }
    }

    @Override
    public int getItemGroupDetailsSid() {
        return _itemGroupDetailsSid;
    }

    @Override
    public void setItemGroupDetailsSid(int itemGroupDetailsSid) {
        _itemGroupDetailsSid = itemGroupDetailsSid;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public int getItemMasterSid() {
        return _itemMasterSid;
    }

    @Override
    public void setItemMasterSid(int itemMasterSid) {
        _itemMasterSid = itemMasterSid;
    }

    @Override
    public int getVersionNo() {
        return _versionNo;
    }

    @Override
    public void setVersionNo(int versionNo) {
        _versionNo = versionNo;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public int getItemGroupSid() {
        return _itemGroupSid;
    }

    @Override
    public void setItemGroupSid(int itemGroupSid) {
        _itemGroupSid = itemGroupSid;
    }

    @Override
    public ItemGroupDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (ItemGroupDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        ItemGroupDetailsImpl itemGroupDetailsImpl = new ItemGroupDetailsImpl();

        itemGroupDetailsImpl.setItemGroupDetailsSid(getItemGroupDetailsSid());
        itemGroupDetailsImpl.setCreatedDate(getCreatedDate());
        itemGroupDetailsImpl.setCreatedBy(getCreatedBy());
        itemGroupDetailsImpl.setItemMasterSid(getItemMasterSid());
        itemGroupDetailsImpl.setVersionNo(getVersionNo());
        itemGroupDetailsImpl.setModifiedBy(getModifiedBy());
        itemGroupDetailsImpl.setModifiedDate(getModifiedDate());
        itemGroupDetailsImpl.setItemGroupSid(getItemGroupSid());

        itemGroupDetailsImpl.resetOriginalValues();

        return itemGroupDetailsImpl;
    }

    @Override
    public int compareTo(ItemGroupDetails itemGroupDetails) {
        int primaryKey = itemGroupDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ItemGroupDetails)) {
            return false;
        }

        ItemGroupDetails itemGroupDetails = (ItemGroupDetails) obj;

        int primaryKey = itemGroupDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<ItemGroupDetails> toCacheModel() {
        ItemGroupDetailsCacheModel itemGroupDetailsCacheModel = new ItemGroupDetailsCacheModel();

        itemGroupDetailsCacheModel.itemGroupDetailsSid = getItemGroupDetailsSid();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            itemGroupDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            itemGroupDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        itemGroupDetailsCacheModel.createdBy = getCreatedBy();

        itemGroupDetailsCacheModel.itemMasterSid = getItemMasterSid();

        itemGroupDetailsCacheModel.versionNo = getVersionNo();

        itemGroupDetailsCacheModel.modifiedBy = getModifiedBy();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            itemGroupDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            itemGroupDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        itemGroupDetailsCacheModel.itemGroupSid = getItemGroupSid();

        return itemGroupDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(17);

        sb.append("{itemGroupDetailsSid=");
        sb.append(getItemGroupDetailsSid());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", itemMasterSid=");
        sb.append(getItemMasterSid());
        sb.append(", versionNo=");
        sb.append(getVersionNo());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", itemGroupSid=");
        sb.append(getItemGroupSid());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(28);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.ItemGroupDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>itemGroupDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getItemGroupDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemMasterSid</column-name><column-value><![CDATA[");
        sb.append(getItemMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>versionNo</column-name><column-value><![CDATA[");
        sb.append(getVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemGroupSid</column-name><column-value><![CDATA[");
        sb.append(getItemGroupSid());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
