<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>

<sql>
	<entity id="getProcessSchedulerSchedulerResults">
		<query> 
        <![CDATA[
 SELECT WP.PROCESS_DISPLAY_NAME, CASE WHEN WP.ACTIVE_FLAG='N' THEN 'Inactive' when WP.ACTIVE_FLAG='Y' THEN 'Active' ELSE '' END AS STATUS, WP.START_DATE, WP.END_DATE,
                          WP.FREQUENCY, WP.MANUAL_LAST_RUN, WP.MODIFIED_DATE,  USR.firstName+' '+USR.lastName as MODIFIED_BY,WP.PROCESS_SID,WP.SCRIPT_NAME
                          , WP.START_HOUR, WP.START_MINUTES	, WP.START_HOUR1, WP.START_HOUR2, WP.START_HOUR3, WP.START_MINUTES1	, WP.START_MINUTES2	, WP.START_MINUTES3 
                            FROM WORKFLOW_PROFILE WP 
                          LEFT JOIN HELPER_TABLE HTF ON HTF.HELPER_TABLE_SID = WP.PROCESS_TYPE 
                          LEFT JOIN ?.dbo.User_ USR ON USR.userId = WP.MODIFIED_BY WHERE WP.MODIFIED_BY LIKE '%' AND HTF.DESCRIPTION LIKE 'Automatic' OR HTF.DESCRIPTION LIKE 'Both' OR HTF.DESCRIPTION LIKE '-Select One-' OR HTF.DESCRIPTION is null ORDER BY WP.PROCESS_NAME
        ]]>

		</query>
	</entity>


	<entity id="getProcessSchedulerManualResults">
		<query> 
        <![CDATA[
 SELECT WP.PROCESS_DISPLAY_NAME, MANUAL_LAST_RUN,SCRIPT_NAME,PROCESS_SID
                            FROM WORKFLOW_PROFILE WP 
                          LEFT JOIN HELPER_TABLE HTF ON HTF.HELPER_TABLE_SID = WP.PROCESS_TYPE 
                 WHERE HTF.DESCRIPTION LIKE 'Manual' OR HTF.DESCRIPTION LIKE 'Both' OR HTF.DESCRIPTION LIKE '-Select One-' OR HTF.DESCRIPTION is null 
                 AND WP.PROCESS_NAME not in (SELECT DESCRIPTION from HELPER_TABLE where LIST_NAME like 'File_Type') ORDER BY WP.PROCESS_NAME      
        ]]>

		</query>
	</entity>


	<entity id="getProcessSchedulerCount">
		<query> 
        <![CDATA[
SELECT count(*) FROM WORKFLOW_PROFILE WP 
                          LEFT JOIN HELPER_TABLE HTF ON HTF.HELPER_TABLE_SID = WP.PROCESS_TYPE 
]]>
		</query>
	</entity>
	
	<entity id="getRunningStatus">
        <query> 
            <![CDATA[
                SELECT VALIDATION FROM WORKFLOW_PROFILE WHERE PROCESS_NAME ='@PROCESS_NAME'
           ]]>
        </query> 
    </entity>
    
    <entity id="updateProcessForLastManualRunUpdate">
        <query> 
            <![CDATA[
                UPDATE WORKFLOW_PROFILE SET MANUAL_LAST_RUN = CONVERT(DATETIME,'@LAST_MANUAL_RUN_DATETIME',120) WHERE PROCESS_SID = @PROCESS_SID
           ]]>
        </query> 
    </entity>

 <entity id="ForecastTempTableDrop">
        <query> 
            <![CDATA[
              DECLARE @SQL VARCHAR(MAX)=''

SET @SQL = (SELECT Concat('DROP TABLE ', Quotename(Upper(NAME)), '; ')    
            FROM   SYS.TABLES
            WHERE  NAME LIKE 'ST_%[0-9]'
                   AND Try_convert(DATE, RIGHT(NAME, Charindex('_', Reverse(NAME)) - 1)) <= Dateadd(DD, -1, Cast(Getdate() AS DATE))
            FOR XML PATH (''))
EXEC( @SQL ) 

         ]]>
        </query> 
    </entity>         
    <entity id="ForecastUnsavedProjectionDelete">
        <query> 
            <![CDATA[
               DECLARE @PROJECTION_NM AS TABLE
                    (
   						ID  INT IDENTITY (1, 1),
   						PROJECTION_MASTER_SID  INT,
   						PROJECTION_DETAILS_SID INT
                      )
  				INSERT INTO @PROJECTION_NM
             			 (PROJECTION_MASTER_SID,
              			 PROJECTION_DETAILS_SID)
  						SELECT A.PROJECTION_MASTER_SID,
        					   B.PROJECTION_DETAILS_SID
					  FROM   PROJECTION_MASTER A
					  JOIN  PROJECTION_DETAILS  B ON A.PROJECTION_MASTER_SID = B.PROJECTION_MASTER_SID
					  WHERE  SAVE_FLAG = 'FALSE'
				         AND FORECASTING_TYPE IN ( 'NON MANDATED' , 'RETURNS' , 'MANDATED', 'ACCRUALRATEPROJECTION')
				         AND CREATED_DATE < GETDATE() - 2
				         AND NOT EXISTS (SELECT 1 FROM FORECASTING_VIEW_MASTER FVM WHERE FVM.PROJECTION_ID = A.PROJECTION_MASTER_SID)
						 

DELETE CCM FROM DBO.CUSTOM_CCP_MAP CCM JOIN CUSTOM_VIEW_DETAILS CVD ON CVD.CUSTOM_VIEW_DETAILS_SID=CCM.CUSTOM_VIEW_DETAILS_SID AND CVD.CUSTOM_VIEW_MASTER_SID IN(SELECT CUSTOM_VIEW_MASTER_SID FROM CUSTOM_VIEW_MASTER CVM JOIN @PROJECTION_NM B ON B.PROJECTION_MASTER_SID = CVM.PROJECTION_MASTER_SID);
DELETE CVD FROM DBO.CUSTOM_VIEW_DETAILS CVD WHERE CVD.CUSTOM_VIEW_MASTER_SID IN(SELECT CUSTOM_VIEW_MASTER_SID FROM   CUSTOM_VIEW_MASTER CVM JOIN @PROJECTION_NM B ON B.PROJECTION_MASTER_SID= CVM.PROJECTION_MASTER_SID);   
DELETE A FROM CUSTOM_VIEW_MASTER A JOIN (SELECT DISTINCT PROJECTION_MASTER_SID FROM @PROJECTION_NM)B ON A.PROJECTION_MASTER_SID=B.PROJECTION_MASTER_SID; 
DELETE A FROM PROJECTION_DETAILS A JOIN (SELECT DISTINCT PROJECTION_MASTER_SID FROM @PROJECTION_NM)B ON A.PROJECTION_MASTER_SID=B.PROJECTION_MASTER_SID; 
DELETE A FROM PROJECTION_CUST_HIERARCHY A JOIN (SELECT DISTINCT PROJECTION_MASTER_SID FROM @PROJECTION_NM)B ON A.PROJECTION_MASTER_SID=B.PROJECTION_MASTER_SID; 
DELETE A FROM PROJECTION_PROD_HIERARCHY A JOIN (SELECT DISTINCT PROJECTION_MASTER_SID FROM @PROJECTION_NM)B ON A.PROJECTION_MASTER_SID=B.PROJECTION_MASTER_SID;
         ]]>
        </query> 
    </entity>  

</sql>