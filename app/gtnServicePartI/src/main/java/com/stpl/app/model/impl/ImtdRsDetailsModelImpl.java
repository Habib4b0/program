package com.stpl.app.model.impl;

import com.stpl.app.model.ImtdRsDetails;
import com.stpl.app.model.ImtdRsDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ImtdRsDetails service. Represents a row in the &quot;IMTD_RS_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.ImtdRsDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ImtdRsDetailsImpl}.
 * </p>
 *
 * @author
 * @see ImtdRsDetailsImpl
 * @see com.stpl.app.model.ImtdRsDetails
 * @see com.stpl.app.model.ImtdRsDetailsModel
 * @generated
 */
public class ImtdRsDetailsModelImpl extends BaseModelImpl<ImtdRsDetails>
    implements ImtdRsDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a imtd rs details model instance should use the {@link com.stpl.app.model.ImtdRsDetails} interface instead.
     */
    public static final String TABLE_NAME = "IMTD_RS_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "RS_DETAILS_MODIFIED_DATE", Types.TIMESTAMP },
            { "RS_DETAILS_BUNDLE_NO", Types.VARCHAR },
            { "ITEM_MASTER_SID", Types.INTEGER },
            { "IMTD_RS_DETAILS_SID", Types.INTEGER },
            { "ITEM_ID", Types.VARCHAR },
            { "RS_DETAILS_FORMULA_METHOD_ID", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "USERS_SID", Types.VARCHAR },
            { "CONTRACT_MASTER_SID", Types.INTEGER },
            { "RS_DETAILS_FORMULA_ID", Types.VARCHAR },
            { "IMTD_CREATED_DATE", Types.TIMESTAMP },
            { "PS_MODEL_SID", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "RS_DETAILS_CREATED_DATE", Types.TIMESTAMP },
            { "ITEM_NO", Types.VARCHAR },
            { "RS_DETAILS_FORMULA_NAME", Types.VARCHAR },
            { "UDC6", Types.VARCHAR },
            { "RS_DETAILS_CREATED_BY", Types.VARCHAR },
            { "UDC5", Types.VARCHAR },
            { "IFP_MODEL_SID", Types.INTEGER },
            { "UDC4", Types.VARCHAR },
            { "RS_DETAILS_FORMULA_NO", Types.VARCHAR },
            { "CHECK_RECORD", Types.BOOLEAN },
            { "RS_ID", Types.VARCHAR },
            { "UDC1", Types.VARCHAR },
            { "RS_DETAILS_REBATE_AMOUNT", Types.DOUBLE },
            { "UDC2", Types.VARCHAR },
            { "RS_DETAILS_MODIFIED_BY", Types.VARCHAR },
            { "UDC3", Types.VARCHAR },
            { "REBATE_PLAN_MASTER_SID", Types.VARCHAR },
            { "RS_DETAILS_ATTACHED_DATE", Types.TIMESTAMP },
            { "ITEM_REBATE_END_DATE", Types.TIMESTAMP },
            { "RS_DETAILS_REBATE_PLAN_NAME", Types.VARCHAR },
            { "ITEM_REBATE_START_DATE", Types.TIMESTAMP },
            { "RS_DETAILS_FORMULA_TYPE", Types.VARCHAR },
            { "SESSION_ID", Types.VARCHAR },
            { "ITEM_NAME", Types.VARCHAR },
            { "OPERATION", Types.VARCHAR },
            { "CFP_MODEL_SID", Types.INTEGER },
            { "RS_MODEL_SID", Types.INTEGER },
            { "RS_DETAILS_SID", Types.INTEGER },
            { "RS_DETAILS_ATTACHED_STATUS", Types.INTEGER },
            { "RS_DETAILS_NET_SALES_FORMULA_NO", Types.VARCHAR },
            { "RS_DETAILS_NET_SALES_FORMULA_NAME", Types.VARCHAR },
            { "RS_DETAILS_DEDUCTION_CALENDAR_NO", Types.VARCHAR },
            { "RS_DETAILS_DEDUCTION_CALENDAR_NAME", Types.VARCHAR },
            { "DEDUCTION_CALENDAR_MASTER_SID", Types.INTEGER },
            { "NET_SALES_FORMULA_MASTER_SID", Types.INTEGER },
            { "EVALUATION_RULE", Types.VARCHAR },
            { "NET_SALES_RULE", Types.VARCHAR },
            { "FORMULA_TYPE", Types.VARCHAR },
            { "CALCULATION_RULE", Types.VARCHAR },
            { "CALCULATION_RULE_BUNDLE", Types.VARCHAR },
            { "EVALUATION_RULE_BUNDLE", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table IMTD_RS_DETAILS (RS_DETAILS_MODIFIED_DATE DATE null,RS_DETAILS_BUNDLE_NO VARCHAR(75) null,ITEM_MASTER_SID INTEGER,IMTD_RS_DETAILS_SID INTEGER not null primary key IDENTITY,ITEM_ID VARCHAR(75) null,RS_DETAILS_FORMULA_METHOD_ID VARCHAR(75) null,MODIFIED_DATE DATE null,CREATED_DATE DATE null,CREATED_BY INTEGER,USERS_SID VARCHAR(75) null,CONTRACT_MASTER_SID INTEGER,RS_DETAILS_FORMULA_ID VARCHAR(75) null,IMTD_CREATED_DATE DATE null,PS_MODEL_SID INTEGER,MODIFIED_BY INTEGER,RS_DETAILS_CREATED_DATE DATE null,ITEM_NO VARCHAR(75) null,RS_DETAILS_FORMULA_NAME VARCHAR(75) null,UDC6 VARCHAR(75) null,RS_DETAILS_CREATED_BY VARCHAR(75) null,UDC5 VARCHAR(75) null,IFP_MODEL_SID INTEGER,UDC4 VARCHAR(75) null,RS_DETAILS_FORMULA_NO VARCHAR(75) null,CHECK_RECORD BOOLEAN,RS_ID VARCHAR(75) null,UDC1 VARCHAR(75) null,RS_DETAILS_REBATE_AMOUNT DOUBLE,UDC2 VARCHAR(75) null,RS_DETAILS_MODIFIED_BY VARCHAR(75) null,UDC3 VARCHAR(75) null,REBATE_PLAN_MASTER_SID VARCHAR(75) null,RS_DETAILS_ATTACHED_DATE DATE null,ITEM_REBATE_END_DATE DATE null,RS_DETAILS_REBATE_PLAN_NAME VARCHAR(75) null,ITEM_REBATE_START_DATE DATE null,RS_DETAILS_FORMULA_TYPE VARCHAR(75) null,SESSION_ID VARCHAR(75) null,ITEM_NAME VARCHAR(75) null,OPERATION VARCHAR(75) null,CFP_MODEL_SID INTEGER,RS_MODEL_SID INTEGER,RS_DETAILS_SID INTEGER,RS_DETAILS_ATTACHED_STATUS INTEGER,RS_DETAILS_NET_SALES_FORMULA_NO VARCHAR(75) null,RS_DETAILS_NET_SALES_FORMULA_NAME VARCHAR(75) null,RS_DETAILS_DEDUCTION_CALENDAR_NO VARCHAR(75) null,RS_DETAILS_DEDUCTION_CALENDAR_NAME VARCHAR(75) null,DEDUCTION_CALENDAR_MASTER_SID INTEGER,NET_SALES_FORMULA_MASTER_SID INTEGER,EVALUATION_RULE VARCHAR(75) null,NET_SALES_RULE VARCHAR(75) null,FORMULA_TYPE VARCHAR(75) null,CALCULATION_RULE VARCHAR(75) null,CALCULATION_RULE_BUNDLE VARCHAR(75) null,EVALUATION_RULE_BUNDLE VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table IMTD_RS_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY imtdRsDetails.imtdRsDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY IMTD_RS_DETAILS.IMTD_RS_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.ImtdRsDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.ImtdRsDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.stpl.app.model.ImtdRsDetails"),
            true);
    public static long IMTDCREATEDDATE_COLUMN_BITMASK = 1L;
    public static long SESSIONID_COLUMN_BITMASK = 2L;
    public static long USERSSID_COLUMN_BITMASK = 4L;
    public static long IMTDRSDETAILSSID_COLUMN_BITMASK = 8L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.ImtdRsDetails"));
    private static ClassLoader _classLoader = ImtdRsDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            ImtdRsDetails.class
        };
    private Date _rsDetailsModifiedDate;
    private String _rsDetailsBundleNo;
    private int _itemMasterSid;
    private int _imtdRsDetailsSid;
    private String _itemId;
    private String _rsDetailsFormulaMethodId;
    private Date _modifiedDate;
    private Date _createdDate;
    private int _createdBy;
    private String _usersSid;
    private String _originalUsersSid;
    private int _contractMasterSid;
    private String _rsDetailsFormulaId;
    private Date _imtdCreatedDate;
    private Date _originalImtdCreatedDate;
    private int _psModelSid;
    private int _modifiedBy;
    private Date _rsDetailsCreatedDate;
    private String _itemNo;
    private String _rsDetailsFormulaName;
    private String _udc6;
    private String _rsDetailsCreatedBy;
    private String _udc5;
    private int _ifpModelSid;
    private String _udc4;
    private String _rsDetailsFormulaNo;
    private boolean _checkRecord;
    private String _rsId;
    private String _udc1;
    private double _rsDetailsRebateAmount;
    private String _udc2;
    private String _rsDetailsModifiedBy;
    private String _udc3;
    private String _rebatePlanMasterSid;
    private Date _rsDetailsAttachedDate;
    private Date _itemRebateEndDate;
    private String _rsDetailsRebatePlanName;
    private Date _itemRebateStartDate;
    private String _rsDetailsFormulaType;
    private String _sessionId;
    private String _originalSessionId;
    private String _itemName;
    private String _operation;
    private int _cfpModelSid;
    private int _rsModelSid;
    private int _rsDetailsSid;
    private int _rsDetailsAttachedStatus;
    private String _rsDetailsNetSalesFormulaNo;
    private String _rsDetailsNetSalesFormulaName;
    private String _rsDetailsDeductionCalendarNo;
    private String _rsDetailsDeductionCalendarName;
    private int _deductionCalendarMasterSid;
    private int _netSalesFormulaMasterSid;
    private String _evaluationRule;
    private String _netSalesRule;
    private String _formulaType;
    private String _calculationRule;
    private String _calculationRuleBundle;
    private String _evaluationRuleBundle;
    private long _columnBitmask;
    private ImtdRsDetails _escapedModel;

    public ImtdRsDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _imtdRsDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setImtdRsDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _imtdRsDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return ImtdRsDetails.class;
    }

    @Override
    public String getModelClassName() {
        return ImtdRsDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("rsDetailsModifiedDate", getRsDetailsModifiedDate());
        attributes.put("rsDetailsBundleNo", getRsDetailsBundleNo());
        attributes.put("itemMasterSid", getItemMasterSid());
        attributes.put("imtdRsDetailsSid", getImtdRsDetailsSid());
        attributes.put("itemId", getItemId());
        attributes.put("rsDetailsFormulaMethodId", getRsDetailsFormulaMethodId());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("usersSid", getUsersSid());
        attributes.put("contractMasterSid", getContractMasterSid());
        attributes.put("rsDetailsFormulaId", getRsDetailsFormulaId());
        attributes.put("imtdCreatedDate", getImtdCreatedDate());
        attributes.put("psModelSid", getPsModelSid());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("rsDetailsCreatedDate", getRsDetailsCreatedDate());
        attributes.put("itemNo", getItemNo());
        attributes.put("rsDetailsFormulaName", getRsDetailsFormulaName());
        attributes.put("udc6", getUdc6());
        attributes.put("rsDetailsCreatedBy", getRsDetailsCreatedBy());
        attributes.put("udc5", getUdc5());
        attributes.put("ifpModelSid", getIfpModelSid());
        attributes.put("udc4", getUdc4());
        attributes.put("rsDetailsFormulaNo", getRsDetailsFormulaNo());
        attributes.put("checkRecord", getCheckRecord());
        attributes.put("rsId", getRsId());
        attributes.put("udc1", getUdc1());
        attributes.put("rsDetailsRebateAmount", getRsDetailsRebateAmount());
        attributes.put("udc2", getUdc2());
        attributes.put("rsDetailsModifiedBy", getRsDetailsModifiedBy());
        attributes.put("udc3", getUdc3());
        attributes.put("rebatePlanMasterSid", getRebatePlanMasterSid());
        attributes.put("rsDetailsAttachedDate", getRsDetailsAttachedDate());
        attributes.put("itemRebateEndDate", getItemRebateEndDate());
        attributes.put("rsDetailsRebatePlanName", getRsDetailsRebatePlanName());
        attributes.put("itemRebateStartDate", getItemRebateStartDate());
        attributes.put("rsDetailsFormulaType", getRsDetailsFormulaType());
        attributes.put("sessionId", getSessionId());
        attributes.put("itemName", getItemName());
        attributes.put("operation", getOperation());
        attributes.put("cfpModelSid", getCfpModelSid());
        attributes.put("rsModelSid", getRsModelSid());
        attributes.put("rsDetailsSid", getRsDetailsSid());
        attributes.put("rsDetailsAttachedStatus", getRsDetailsAttachedStatus());
        attributes.put("rsDetailsNetSalesFormulaNo",
            getRsDetailsNetSalesFormulaNo());
        attributes.put("rsDetailsNetSalesFormulaName",
            getRsDetailsNetSalesFormulaName());
        attributes.put("rsDetailsDeductionCalendarNo",
            getRsDetailsDeductionCalendarNo());
        attributes.put("rsDetailsDeductionCalendarName",
            getRsDetailsDeductionCalendarName());
        attributes.put("deductionCalendarMasterSid",
            getDeductionCalendarMasterSid());
        attributes.put("netSalesFormulaMasterSid", getNetSalesFormulaMasterSid());
        attributes.put("evaluationRule", getEvaluationRule());
        attributes.put("netSalesRule", getNetSalesRule());
        attributes.put("formulaType", getFormulaType());
        attributes.put("calculationRule", getCalculationRule());
        attributes.put("calculationRuleBundle", getCalculationRuleBundle());
        attributes.put("evaluationRuleBundle", getEvaluationRuleBundle());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Date rsDetailsModifiedDate = (Date) attributes.get(
                "rsDetailsModifiedDate");

        if (rsDetailsModifiedDate != null) {
            setRsDetailsModifiedDate(rsDetailsModifiedDate);
        }

        String rsDetailsBundleNo = (String) attributes.get("rsDetailsBundleNo");

        if (rsDetailsBundleNo != null) {
            setRsDetailsBundleNo(rsDetailsBundleNo);
        }

        Integer itemMasterSid = (Integer) attributes.get("itemMasterSid");

        if (itemMasterSid != null) {
            setItemMasterSid(itemMasterSid);
        }

        Integer imtdRsDetailsSid = (Integer) attributes.get("imtdRsDetailsSid");

        if (imtdRsDetailsSid != null) {
            setImtdRsDetailsSid(imtdRsDetailsSid);
        }

        String itemId = (String) attributes.get("itemId");

        if (itemId != null) {
            setItemId(itemId);
        }

        String rsDetailsFormulaMethodId = (String) attributes.get(
                "rsDetailsFormulaMethodId");

        if (rsDetailsFormulaMethodId != null) {
            setRsDetailsFormulaMethodId(rsDetailsFormulaMethodId);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String usersSid = (String) attributes.get("usersSid");

        if (usersSid != null) {
            setUsersSid(usersSid);
        }

        Integer contractMasterSid = (Integer) attributes.get(
                "contractMasterSid");

        if (contractMasterSid != null) {
            setContractMasterSid(contractMasterSid);
        }

        String rsDetailsFormulaId = (String) attributes.get(
                "rsDetailsFormulaId");

        if (rsDetailsFormulaId != null) {
            setRsDetailsFormulaId(rsDetailsFormulaId);
        }

        Date imtdCreatedDate = (Date) attributes.get("imtdCreatedDate");

        if (imtdCreatedDate != null) {
            setImtdCreatedDate(imtdCreatedDate);
        }

        Integer psModelSid = (Integer) attributes.get("psModelSid");

        if (psModelSid != null) {
            setPsModelSid(psModelSid);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date rsDetailsCreatedDate = (Date) attributes.get(
                "rsDetailsCreatedDate");

        if (rsDetailsCreatedDate != null) {
            setRsDetailsCreatedDate(rsDetailsCreatedDate);
        }

        String itemNo = (String) attributes.get("itemNo");

        if (itemNo != null) {
            setItemNo(itemNo);
        }

        String rsDetailsFormulaName = (String) attributes.get(
                "rsDetailsFormulaName");

        if (rsDetailsFormulaName != null) {
            setRsDetailsFormulaName(rsDetailsFormulaName);
        }

        String udc6 = (String) attributes.get("udc6");

        if (udc6 != null) {
            setUdc6(udc6);
        }

        String rsDetailsCreatedBy = (String) attributes.get(
                "rsDetailsCreatedBy");

        if (rsDetailsCreatedBy != null) {
            setRsDetailsCreatedBy(rsDetailsCreatedBy);
        }

        String udc5 = (String) attributes.get("udc5");

        if (udc5 != null) {
            setUdc5(udc5);
        }

        Integer ifpModelSid = (Integer) attributes.get("ifpModelSid");

        if (ifpModelSid != null) {
            setIfpModelSid(ifpModelSid);
        }

        String udc4 = (String) attributes.get("udc4");

        if (udc4 != null) {
            setUdc4(udc4);
        }

        String rsDetailsFormulaNo = (String) attributes.get(
                "rsDetailsFormulaNo");

        if (rsDetailsFormulaNo != null) {
            setRsDetailsFormulaNo(rsDetailsFormulaNo);
        }

        Boolean checkRecord = (Boolean) attributes.get("checkRecord");

        if (checkRecord != null) {
            setCheckRecord(checkRecord);
        }

        String rsId = (String) attributes.get("rsId");

        if (rsId != null) {
            setRsId(rsId);
        }

        String udc1 = (String) attributes.get("udc1");

        if (udc1 != null) {
            setUdc1(udc1);
        }

        Double rsDetailsRebateAmount = (Double) attributes.get(
                "rsDetailsRebateAmount");

        if (rsDetailsRebateAmount != null) {
            setRsDetailsRebateAmount(rsDetailsRebateAmount);
        }

        String udc2 = (String) attributes.get("udc2");

        if (udc2 != null) {
            setUdc2(udc2);
        }

        String rsDetailsModifiedBy = (String) attributes.get(
                "rsDetailsModifiedBy");

        if (rsDetailsModifiedBy != null) {
            setRsDetailsModifiedBy(rsDetailsModifiedBy);
        }

        String udc3 = (String) attributes.get("udc3");

        if (udc3 != null) {
            setUdc3(udc3);
        }

        String rebatePlanMasterSid = (String) attributes.get(
                "rebatePlanMasterSid");

        if (rebatePlanMasterSid != null) {
            setRebatePlanMasterSid(rebatePlanMasterSid);
        }

        Date rsDetailsAttachedDate = (Date) attributes.get(
                "rsDetailsAttachedDate");

        if (rsDetailsAttachedDate != null) {
            setRsDetailsAttachedDate(rsDetailsAttachedDate);
        }

        Date itemRebateEndDate = (Date) attributes.get("itemRebateEndDate");

        if (itemRebateEndDate != null) {
            setItemRebateEndDate(itemRebateEndDate);
        }

        String rsDetailsRebatePlanName = (String) attributes.get(
                "rsDetailsRebatePlanName");

        if (rsDetailsRebatePlanName != null) {
            setRsDetailsRebatePlanName(rsDetailsRebatePlanName);
        }

        Date itemRebateStartDate = (Date) attributes.get("itemRebateStartDate");

        if (itemRebateStartDate != null) {
            setItemRebateStartDate(itemRebateStartDate);
        }

        String rsDetailsFormulaType = (String) attributes.get(
                "rsDetailsFormulaType");

        if (rsDetailsFormulaType != null) {
            setRsDetailsFormulaType(rsDetailsFormulaType);
        }

        String sessionId = (String) attributes.get("sessionId");

        if (sessionId != null) {
            setSessionId(sessionId);
        }

        String itemName = (String) attributes.get("itemName");

        if (itemName != null) {
            setItemName(itemName);
        }

        String operation = (String) attributes.get("operation");

        if (operation != null) {
            setOperation(operation);
        }

        Integer cfpModelSid = (Integer) attributes.get("cfpModelSid");

        if (cfpModelSid != null) {
            setCfpModelSid(cfpModelSid);
        }

        Integer rsModelSid = (Integer) attributes.get("rsModelSid");

        if (rsModelSid != null) {
            setRsModelSid(rsModelSid);
        }

        Integer rsDetailsSid = (Integer) attributes.get("rsDetailsSid");

        if (rsDetailsSid != null) {
            setRsDetailsSid(rsDetailsSid);
        }

        Integer rsDetailsAttachedStatus = (Integer) attributes.get(
                "rsDetailsAttachedStatus");

        if (rsDetailsAttachedStatus != null) {
            setRsDetailsAttachedStatus(rsDetailsAttachedStatus);
        }

        String rsDetailsNetSalesFormulaNo = (String) attributes.get(
                "rsDetailsNetSalesFormulaNo");

        if (rsDetailsNetSalesFormulaNo != null) {
            setRsDetailsNetSalesFormulaNo(rsDetailsNetSalesFormulaNo);
        }

        String rsDetailsNetSalesFormulaName = (String) attributes.get(
                "rsDetailsNetSalesFormulaName");

        if (rsDetailsNetSalesFormulaName != null) {
            setRsDetailsNetSalesFormulaName(rsDetailsNetSalesFormulaName);
        }

        String rsDetailsDeductionCalendarNo = (String) attributes.get(
                "rsDetailsDeductionCalendarNo");

        if (rsDetailsDeductionCalendarNo != null) {
            setRsDetailsDeductionCalendarNo(rsDetailsDeductionCalendarNo);
        }

        String rsDetailsDeductionCalendarName = (String) attributes.get(
                "rsDetailsDeductionCalendarName");

        if (rsDetailsDeductionCalendarName != null) {
            setRsDetailsDeductionCalendarName(rsDetailsDeductionCalendarName);
        }

        Integer deductionCalendarMasterSid = (Integer) attributes.get(
                "deductionCalendarMasterSid");

        if (deductionCalendarMasterSid != null) {
            setDeductionCalendarMasterSid(deductionCalendarMasterSid);
        }

        Integer netSalesFormulaMasterSid = (Integer) attributes.get(
                "netSalesFormulaMasterSid");

        if (netSalesFormulaMasterSid != null) {
            setNetSalesFormulaMasterSid(netSalesFormulaMasterSid);
        }

        String evaluationRule = (String) attributes.get("evaluationRule");

        if (evaluationRule != null) {
            setEvaluationRule(evaluationRule);
        }

        String netSalesRule = (String) attributes.get("netSalesRule");

        if (netSalesRule != null) {
            setNetSalesRule(netSalesRule);
        }

        String formulaType = (String) attributes.get("formulaType");

        if (formulaType != null) {
            setFormulaType(formulaType);
        }

        String calculationRule = (String) attributes.get("calculationRule");

        if (calculationRule != null) {
            setCalculationRule(calculationRule);
        }

        String calculationRuleBundle = (String) attributes.get(
                "calculationRuleBundle");

        if (calculationRuleBundle != null) {
            setCalculationRuleBundle(calculationRuleBundle);
        }

        String evaluationRuleBundle = (String) attributes.get(
                "evaluationRuleBundle");

        if (evaluationRuleBundle != null) {
            setEvaluationRuleBundle(evaluationRuleBundle);
        }
    }

    @Override
    public Date getRsDetailsModifiedDate() {
        return _rsDetailsModifiedDate;
    }

    @Override
    public void setRsDetailsModifiedDate(Date rsDetailsModifiedDate) {
        _rsDetailsModifiedDate = rsDetailsModifiedDate;
    }

    @Override
    public String getRsDetailsBundleNo() {
        if (_rsDetailsBundleNo == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsBundleNo;
        }
    }

    @Override
    public void setRsDetailsBundleNo(String rsDetailsBundleNo) {
        _rsDetailsBundleNo = rsDetailsBundleNo;
    }

    @Override
    public int getItemMasterSid() {
        return _itemMasterSid;
    }

    @Override
    public void setItemMasterSid(int itemMasterSid) {
        _itemMasterSid = itemMasterSid;
    }

    @Override
    public int getImtdRsDetailsSid() {
        return _imtdRsDetailsSid;
    }

    @Override
    public void setImtdRsDetailsSid(int imtdRsDetailsSid) {
        _imtdRsDetailsSid = imtdRsDetailsSid;
    }

    @Override
    public String getItemId() {
        if (_itemId == null) {
            return StringPool.BLANK;
        } else {
            return _itemId;
        }
    }

    @Override
    public void setItemId(String itemId) {
        _itemId = itemId;
    }

    @Override
    public String getRsDetailsFormulaMethodId() {
        if (_rsDetailsFormulaMethodId == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsFormulaMethodId;
        }
    }

    @Override
    public void setRsDetailsFormulaMethodId(String rsDetailsFormulaMethodId) {
        _rsDetailsFormulaMethodId = rsDetailsFormulaMethodId;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getUsersSid() {
        if (_usersSid == null) {
            return StringPool.BLANK;
        } else {
            return _usersSid;
        }
    }

    @Override
    public void setUsersSid(String usersSid) {
        _columnBitmask |= USERSSID_COLUMN_BITMASK;

        if (_originalUsersSid == null) {
            _originalUsersSid = _usersSid;
        }

        _usersSid = usersSid;
    }

    public String getOriginalUsersSid() {
        return GetterUtil.getString(_originalUsersSid);
    }

    @Override
    public int getContractMasterSid() {
        return _contractMasterSid;
    }

    @Override
    public void setContractMasterSid(int contractMasterSid) {
        _contractMasterSid = contractMasterSid;
    }

    @Override
    public String getRsDetailsFormulaId() {
        if (_rsDetailsFormulaId == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsFormulaId;
        }
    }

    @Override
    public void setRsDetailsFormulaId(String rsDetailsFormulaId) {
        _rsDetailsFormulaId = rsDetailsFormulaId;
    }

    @Override
    public Date getImtdCreatedDate() {
        return _imtdCreatedDate;
    }

    @Override
    public void setImtdCreatedDate(Date imtdCreatedDate) {
        _columnBitmask |= IMTDCREATEDDATE_COLUMN_BITMASK;

        if (_originalImtdCreatedDate == null) {
            _originalImtdCreatedDate = _imtdCreatedDate;
        }

        _imtdCreatedDate = imtdCreatedDate;
    }

    public Date getOriginalImtdCreatedDate() {
        return _originalImtdCreatedDate;
    }

    @Override
    public int getPsModelSid() {
        return _psModelSid;
    }

    @Override
    public void setPsModelSid(int psModelSid) {
        _psModelSid = psModelSid;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getRsDetailsCreatedDate() {
        return _rsDetailsCreatedDate;
    }

    @Override
    public void setRsDetailsCreatedDate(Date rsDetailsCreatedDate) {
        _rsDetailsCreatedDate = rsDetailsCreatedDate;
    }

    @Override
    public String getItemNo() {
        if (_itemNo == null) {
            return StringPool.BLANK;
        } else {
            return _itemNo;
        }
    }

    @Override
    public void setItemNo(String itemNo) {
        _itemNo = itemNo;
    }

    @Override
    public String getRsDetailsFormulaName() {
        if (_rsDetailsFormulaName == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsFormulaName;
        }
    }

    @Override
    public void setRsDetailsFormulaName(String rsDetailsFormulaName) {
        _rsDetailsFormulaName = rsDetailsFormulaName;
    }

    @Override
    public String getUdc6() {
        if (_udc6 == null) {
            return StringPool.BLANK;
        } else {
            return _udc6;
        }
    }

    @Override
    public void setUdc6(String udc6) {
        _udc6 = udc6;
    }

    @Override
    public String getRsDetailsCreatedBy() {
        if (_rsDetailsCreatedBy == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsCreatedBy;
        }
    }

    @Override
    public void setRsDetailsCreatedBy(String rsDetailsCreatedBy) {
        _rsDetailsCreatedBy = rsDetailsCreatedBy;
    }

    @Override
    public String getUdc5() {
        if (_udc5 == null) {
            return StringPool.BLANK;
        } else {
            return _udc5;
        }
    }

    @Override
    public void setUdc5(String udc5) {
        _udc5 = udc5;
    }

    @Override
    public int getIfpModelSid() {
        return _ifpModelSid;
    }

    @Override
    public void setIfpModelSid(int ifpModelSid) {
        _ifpModelSid = ifpModelSid;
    }

    @Override
    public String getUdc4() {
        if (_udc4 == null) {
            return StringPool.BLANK;
        } else {
            return _udc4;
        }
    }

    @Override
    public void setUdc4(String udc4) {
        _udc4 = udc4;
    }

    @Override
    public String getRsDetailsFormulaNo() {
        if (_rsDetailsFormulaNo == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsFormulaNo;
        }
    }

    @Override
    public void setRsDetailsFormulaNo(String rsDetailsFormulaNo) {
        _rsDetailsFormulaNo = rsDetailsFormulaNo;
    }

    @Override
    public boolean getCheckRecord() {
        return _checkRecord;
    }

    @Override
    public boolean isCheckRecord() {
        return _checkRecord;
    }

    @Override
    public void setCheckRecord(boolean checkRecord) {
        _checkRecord = checkRecord;
    }

    @Override
    public String getRsId() {
        if (_rsId == null) {
            return StringPool.BLANK;
        } else {
            return _rsId;
        }
    }

    @Override
    public void setRsId(String rsId) {
        _rsId = rsId;
    }

    @Override
    public String getUdc1() {
        if (_udc1 == null) {
            return StringPool.BLANK;
        } else {
            return _udc1;
        }
    }

    @Override
    public void setUdc1(String udc1) {
        _udc1 = udc1;
    }

    @Override
    public double getRsDetailsRebateAmount() {
        return _rsDetailsRebateAmount;
    }

    @Override
    public void setRsDetailsRebateAmount(double rsDetailsRebateAmount) {
        _rsDetailsRebateAmount = rsDetailsRebateAmount;
    }

    @Override
    public String getUdc2() {
        if (_udc2 == null) {
            return StringPool.BLANK;
        } else {
            return _udc2;
        }
    }

    @Override
    public void setUdc2(String udc2) {
        _udc2 = udc2;
    }

    @Override
    public String getRsDetailsModifiedBy() {
        if (_rsDetailsModifiedBy == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsModifiedBy;
        }
    }

    @Override
    public void setRsDetailsModifiedBy(String rsDetailsModifiedBy) {
        _rsDetailsModifiedBy = rsDetailsModifiedBy;
    }

    @Override
    public String getUdc3() {
        if (_udc3 == null) {
            return StringPool.BLANK;
        } else {
            return _udc3;
        }
    }

    @Override
    public void setUdc3(String udc3) {
        _udc3 = udc3;
    }

    @Override
    public String getRebatePlanMasterSid() {
        return _rebatePlanMasterSid;
    }

    @Override
    public void setRebatePlanMasterSid(String rebatePlanMasterSid) {
        _rebatePlanMasterSid = rebatePlanMasterSid;
    }

    @Override
    public Date getRsDetailsAttachedDate() {
        return _rsDetailsAttachedDate;
    }

    @Override
    public void setRsDetailsAttachedDate(Date rsDetailsAttachedDate) {
        _rsDetailsAttachedDate = rsDetailsAttachedDate;
    }

    @Override
    public Date getItemRebateEndDate() {
        return _itemRebateEndDate;
    }

    @Override
    public void setItemRebateEndDate(Date itemRebateEndDate) {
        _itemRebateEndDate = itemRebateEndDate;
    }

    @Override
    public String getRsDetailsRebatePlanName() {
        if (_rsDetailsRebatePlanName == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsRebatePlanName;
        }
    }

    @Override
    public void setRsDetailsRebatePlanName(String rsDetailsRebatePlanName) {
        _rsDetailsRebatePlanName = rsDetailsRebatePlanName;
    }

    @Override
    public Date getItemRebateStartDate() {
        return _itemRebateStartDate;
    }

    @Override
    public void setItemRebateStartDate(Date itemRebateStartDate) {
        _itemRebateStartDate = itemRebateStartDate;
    }

    @Override
    public String getRsDetailsFormulaType() {
        if (_rsDetailsFormulaType == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsFormulaType;
        }
    }

    @Override
    public void setRsDetailsFormulaType(String rsDetailsFormulaType) {
        _rsDetailsFormulaType = rsDetailsFormulaType;
    }

    @Override
    public String getSessionId() {
        if (_sessionId == null) {
            return StringPool.BLANK;
        } else {
            return _sessionId;
        }
    }

    @Override
    public void setSessionId(String sessionId) {
        _columnBitmask |= SESSIONID_COLUMN_BITMASK;

        if (_originalSessionId == null) {
            _originalSessionId = _sessionId;
        }

        _sessionId = sessionId;
    }

    public String getOriginalSessionId() {
        return GetterUtil.getString(_originalSessionId);
    }

    @Override
    public String getItemName() {
        if (_itemName == null) {
            return StringPool.BLANK;
        } else {
            return _itemName;
        }
    }

    @Override
    public void setItemName(String itemName) {
        _itemName = itemName;
    }

    @Override
    public String getOperation() {
        if (_operation == null) {
            return StringPool.BLANK;
        } else {
            return _operation;
        }
    }

    @Override
    public void setOperation(String operation) {
        _operation = operation;
    }

    @Override
    public int getCfpModelSid() {
        return _cfpModelSid;
    }

    @Override
    public void setCfpModelSid(int cfpModelSid) {
        _cfpModelSid = cfpModelSid;
    }

    @Override
    public int getRsModelSid() {
        return _rsModelSid;
    }

    @Override
    public void setRsModelSid(int rsModelSid) {
        _rsModelSid = rsModelSid;
    }

    @Override
    public int getRsDetailsSid() {
        return _rsDetailsSid;
    }

    @Override
    public void setRsDetailsSid(int rsDetailsSid) {
        _rsDetailsSid = rsDetailsSid;
    }

    @Override
    public int getRsDetailsAttachedStatus() {
        return _rsDetailsAttachedStatus;
    }

    @Override
    public void setRsDetailsAttachedStatus(int rsDetailsAttachedStatus) {
        _rsDetailsAttachedStatus = rsDetailsAttachedStatus;
    }

    @Override
    public String getRsDetailsNetSalesFormulaNo() {
        if (_rsDetailsNetSalesFormulaNo == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsNetSalesFormulaNo;
        }
    }

    @Override
    public void setRsDetailsNetSalesFormulaNo(String rsDetailsNetSalesFormulaNo) {
        _rsDetailsNetSalesFormulaNo = rsDetailsNetSalesFormulaNo;
    }

    @Override
    public String getRsDetailsNetSalesFormulaName() {
        if (_rsDetailsNetSalesFormulaName == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsNetSalesFormulaName;
        }
    }

    @Override
    public void setRsDetailsNetSalesFormulaName(
        String rsDetailsNetSalesFormulaName) {
        _rsDetailsNetSalesFormulaName = rsDetailsNetSalesFormulaName;
    }

    @Override
    public String getRsDetailsDeductionCalendarNo() {
        if (_rsDetailsDeductionCalendarNo == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsDeductionCalendarNo;
        }
    }

    @Override
    public void setRsDetailsDeductionCalendarNo(
        String rsDetailsDeductionCalendarNo) {
        _rsDetailsDeductionCalendarNo = rsDetailsDeductionCalendarNo;
    }

    @Override
    public String getRsDetailsDeductionCalendarName() {
        if (_rsDetailsDeductionCalendarName == null) {
            return StringPool.BLANK;
        } else {
            return _rsDetailsDeductionCalendarName;
        }
    }

    @Override
    public void setRsDetailsDeductionCalendarName(
        String rsDetailsDeductionCalendarName) {
        _rsDetailsDeductionCalendarName = rsDetailsDeductionCalendarName;
    }

    @Override
    public int getDeductionCalendarMasterSid() {
        return _deductionCalendarMasterSid;
    }

    @Override
    public void setDeductionCalendarMasterSid(int deductionCalendarMasterSid) {
        _deductionCalendarMasterSid = deductionCalendarMasterSid;
    }

    @Override
    public int getNetSalesFormulaMasterSid() {
        return _netSalesFormulaMasterSid;
    }

    @Override
    public void setNetSalesFormulaMasterSid(int netSalesFormulaMasterSid) {
        _netSalesFormulaMasterSid = netSalesFormulaMasterSid;
    }

    @Override
    public String getEvaluationRule() {
        return _evaluationRule;
    }

    @Override
    public void setEvaluationRule(String evaluationRule) {
        _evaluationRule = evaluationRule;
    }

    @Override
    public String getNetSalesRule() {
        return _netSalesRule;
    }

    @Override
    public void setNetSalesRule(String netSalesRule) {
        _netSalesRule = netSalesRule;
    }

    @Override
    public String getFormulaType() {
        return _formulaType;
    }

    @Override
    public void setFormulaType(String formulaType) {
        _formulaType = formulaType;
    }

    @Override
    public String getCalculationRule() {
        return _calculationRule;
    }

    @Override
    public void setCalculationRule(String calculationRule) {
        _calculationRule = calculationRule;
    }

    @Override
    public String getCalculationRuleBundle() {
        return _calculationRuleBundle;
    }

    @Override
    public void setCalculationRuleBundle(String calculationRuleBundle) {
        _calculationRuleBundle = calculationRuleBundle;
    }

    @Override
    public String getEvaluationRuleBundle() {
        return _evaluationRuleBundle;
    }

    @Override
    public void setEvaluationRuleBundle(String evaluationRuleBundle) {
        _evaluationRuleBundle = evaluationRuleBundle;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public ImtdRsDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (ImtdRsDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        ImtdRsDetailsImpl imtdRsDetailsImpl = new ImtdRsDetailsImpl();

        imtdRsDetailsImpl.setRsDetailsModifiedDate(getRsDetailsModifiedDate());
        imtdRsDetailsImpl.setRsDetailsBundleNo(getRsDetailsBundleNo());
        imtdRsDetailsImpl.setItemMasterSid(getItemMasterSid());
        imtdRsDetailsImpl.setImtdRsDetailsSid(getImtdRsDetailsSid());
        imtdRsDetailsImpl.setItemId(getItemId());
        imtdRsDetailsImpl.setRsDetailsFormulaMethodId(getRsDetailsFormulaMethodId());
        imtdRsDetailsImpl.setModifiedDate(getModifiedDate());
        imtdRsDetailsImpl.setCreatedDate(getCreatedDate());
        imtdRsDetailsImpl.setCreatedBy(getCreatedBy());
        imtdRsDetailsImpl.setUsersSid(getUsersSid());
        imtdRsDetailsImpl.setContractMasterSid(getContractMasterSid());
        imtdRsDetailsImpl.setRsDetailsFormulaId(getRsDetailsFormulaId());
        imtdRsDetailsImpl.setImtdCreatedDate(getImtdCreatedDate());
        imtdRsDetailsImpl.setPsModelSid(getPsModelSid());
        imtdRsDetailsImpl.setModifiedBy(getModifiedBy());
        imtdRsDetailsImpl.setRsDetailsCreatedDate(getRsDetailsCreatedDate());
        imtdRsDetailsImpl.setItemNo(getItemNo());
        imtdRsDetailsImpl.setRsDetailsFormulaName(getRsDetailsFormulaName());
        imtdRsDetailsImpl.setUdc6(getUdc6());
        imtdRsDetailsImpl.setRsDetailsCreatedBy(getRsDetailsCreatedBy());
        imtdRsDetailsImpl.setUdc5(getUdc5());
        imtdRsDetailsImpl.setIfpModelSid(getIfpModelSid());
        imtdRsDetailsImpl.setUdc4(getUdc4());
        imtdRsDetailsImpl.setRsDetailsFormulaNo(getRsDetailsFormulaNo());
        imtdRsDetailsImpl.setCheckRecord(getCheckRecord());
        imtdRsDetailsImpl.setRsId(getRsId());
        imtdRsDetailsImpl.setUdc1(getUdc1());
        imtdRsDetailsImpl.setRsDetailsRebateAmount(getRsDetailsRebateAmount());
        imtdRsDetailsImpl.setUdc2(getUdc2());
        imtdRsDetailsImpl.setRsDetailsModifiedBy(getRsDetailsModifiedBy());
        imtdRsDetailsImpl.setUdc3(getUdc3());
        imtdRsDetailsImpl.setRebatePlanMasterSid(getRebatePlanMasterSid());
        imtdRsDetailsImpl.setRsDetailsAttachedDate(getRsDetailsAttachedDate());
        imtdRsDetailsImpl.setItemRebateEndDate(getItemRebateEndDate());
        imtdRsDetailsImpl.setRsDetailsRebatePlanName(getRsDetailsRebatePlanName());
        imtdRsDetailsImpl.setItemRebateStartDate(getItemRebateStartDate());
        imtdRsDetailsImpl.setRsDetailsFormulaType(getRsDetailsFormulaType());
        imtdRsDetailsImpl.setSessionId(getSessionId());
        imtdRsDetailsImpl.setItemName(getItemName());
        imtdRsDetailsImpl.setOperation(getOperation());
        imtdRsDetailsImpl.setCfpModelSid(getCfpModelSid());
        imtdRsDetailsImpl.setRsModelSid(getRsModelSid());
        imtdRsDetailsImpl.setRsDetailsSid(getRsDetailsSid());
        imtdRsDetailsImpl.setRsDetailsAttachedStatus(getRsDetailsAttachedStatus());
        imtdRsDetailsImpl.setRsDetailsNetSalesFormulaNo(getRsDetailsNetSalesFormulaNo());
        imtdRsDetailsImpl.setRsDetailsNetSalesFormulaName(getRsDetailsNetSalesFormulaName());
        imtdRsDetailsImpl.setRsDetailsDeductionCalendarNo(getRsDetailsDeductionCalendarNo());
        imtdRsDetailsImpl.setRsDetailsDeductionCalendarName(getRsDetailsDeductionCalendarName());
        imtdRsDetailsImpl.setDeductionCalendarMasterSid(getDeductionCalendarMasterSid());
        imtdRsDetailsImpl.setNetSalesFormulaMasterSid(getNetSalesFormulaMasterSid());
        imtdRsDetailsImpl.setEvaluationRule(getEvaluationRule());
        imtdRsDetailsImpl.setNetSalesRule(getNetSalesRule());
        imtdRsDetailsImpl.setFormulaType(getFormulaType());
        imtdRsDetailsImpl.setCalculationRule(getCalculationRule());
        imtdRsDetailsImpl.setCalculationRuleBundle(getCalculationRuleBundle());
        imtdRsDetailsImpl.setEvaluationRuleBundle(getEvaluationRuleBundle());

        imtdRsDetailsImpl.resetOriginalValues();

        return imtdRsDetailsImpl;
    }

    @Override
    public int compareTo(ImtdRsDetails imtdRsDetails) {
        int primaryKey = imtdRsDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ImtdRsDetails)) {
            return false;
        }

        ImtdRsDetails imtdRsDetails = (ImtdRsDetails) obj;

        int primaryKey = imtdRsDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        ImtdRsDetailsModelImpl imtdRsDetailsModelImpl = this;

        imtdRsDetailsModelImpl._originalUsersSid = imtdRsDetailsModelImpl._usersSid;

        imtdRsDetailsModelImpl._originalImtdCreatedDate = imtdRsDetailsModelImpl._imtdCreatedDate;

        imtdRsDetailsModelImpl._originalSessionId = imtdRsDetailsModelImpl._sessionId;

        imtdRsDetailsModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<ImtdRsDetails> toCacheModel() {
        ImtdRsDetailsCacheModel imtdRsDetailsCacheModel = new ImtdRsDetailsCacheModel();

        Date rsDetailsModifiedDate = getRsDetailsModifiedDate();

        if (rsDetailsModifiedDate != null) {
            imtdRsDetailsCacheModel.rsDetailsModifiedDate = rsDetailsModifiedDate.getTime();
        } else {
            imtdRsDetailsCacheModel.rsDetailsModifiedDate = Long.MIN_VALUE;
        }

        imtdRsDetailsCacheModel.rsDetailsBundleNo = getRsDetailsBundleNo();

        String rsDetailsBundleNo = imtdRsDetailsCacheModel.rsDetailsBundleNo;

        if ((rsDetailsBundleNo != null) && (rsDetailsBundleNo.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsBundleNo = null;
        }

        imtdRsDetailsCacheModel.itemMasterSid = getItemMasterSid();

        imtdRsDetailsCacheModel.imtdRsDetailsSid = getImtdRsDetailsSid();

        imtdRsDetailsCacheModel.itemId = getItemId();

        String itemId = imtdRsDetailsCacheModel.itemId;

        if ((itemId != null) && (itemId.length() == 0)) {
            imtdRsDetailsCacheModel.itemId = null;
        }

        imtdRsDetailsCacheModel.rsDetailsFormulaMethodId = getRsDetailsFormulaMethodId();

        String rsDetailsFormulaMethodId = imtdRsDetailsCacheModel.rsDetailsFormulaMethodId;

        if ((rsDetailsFormulaMethodId != null) &&
                (rsDetailsFormulaMethodId.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsFormulaMethodId = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            imtdRsDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            imtdRsDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            imtdRsDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            imtdRsDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        imtdRsDetailsCacheModel.createdBy = getCreatedBy();

        imtdRsDetailsCacheModel.usersSid = getUsersSid();

        String usersSid = imtdRsDetailsCacheModel.usersSid;

        if ((usersSid != null) && (usersSid.length() == 0)) {
            imtdRsDetailsCacheModel.usersSid = null;
        }

        imtdRsDetailsCacheModel.contractMasterSid = getContractMasterSid();

        imtdRsDetailsCacheModel.rsDetailsFormulaId = getRsDetailsFormulaId();

        String rsDetailsFormulaId = imtdRsDetailsCacheModel.rsDetailsFormulaId;

        if ((rsDetailsFormulaId != null) && (rsDetailsFormulaId.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsFormulaId = null;
        }

        Date imtdCreatedDate = getImtdCreatedDate();

        if (imtdCreatedDate != null) {
            imtdRsDetailsCacheModel.imtdCreatedDate = imtdCreatedDate.getTime();
        } else {
            imtdRsDetailsCacheModel.imtdCreatedDate = Long.MIN_VALUE;
        }

        imtdRsDetailsCacheModel.psModelSid = getPsModelSid();

        imtdRsDetailsCacheModel.modifiedBy = getModifiedBy();

        Date rsDetailsCreatedDate = getRsDetailsCreatedDate();

        if (rsDetailsCreatedDate != null) {
            imtdRsDetailsCacheModel.rsDetailsCreatedDate = rsDetailsCreatedDate.getTime();
        } else {
            imtdRsDetailsCacheModel.rsDetailsCreatedDate = Long.MIN_VALUE;
        }

        imtdRsDetailsCacheModel.itemNo = getItemNo();

        String itemNo = imtdRsDetailsCacheModel.itemNo;

        if ((itemNo != null) && (itemNo.length() == 0)) {
            imtdRsDetailsCacheModel.itemNo = null;
        }

        imtdRsDetailsCacheModel.rsDetailsFormulaName = getRsDetailsFormulaName();

        String rsDetailsFormulaName = imtdRsDetailsCacheModel.rsDetailsFormulaName;

        if ((rsDetailsFormulaName != null) &&
                (rsDetailsFormulaName.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsFormulaName = null;
        }

        imtdRsDetailsCacheModel.udc6 = getUdc6();

        String udc6 = imtdRsDetailsCacheModel.udc6;

        if ((udc6 != null) && (udc6.length() == 0)) {
            imtdRsDetailsCacheModel.udc6 = null;
        }

        imtdRsDetailsCacheModel.rsDetailsCreatedBy = getRsDetailsCreatedBy();

        String rsDetailsCreatedBy = imtdRsDetailsCacheModel.rsDetailsCreatedBy;

        if ((rsDetailsCreatedBy != null) && (rsDetailsCreatedBy.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsCreatedBy = null;
        }

        imtdRsDetailsCacheModel.udc5 = getUdc5();

        String udc5 = imtdRsDetailsCacheModel.udc5;

        if ((udc5 != null) && (udc5.length() == 0)) {
            imtdRsDetailsCacheModel.udc5 = null;
        }

        imtdRsDetailsCacheModel.ifpModelSid = getIfpModelSid();

        imtdRsDetailsCacheModel.udc4 = getUdc4();

        String udc4 = imtdRsDetailsCacheModel.udc4;

        if ((udc4 != null) && (udc4.length() == 0)) {
            imtdRsDetailsCacheModel.udc4 = null;
        }

        imtdRsDetailsCacheModel.rsDetailsFormulaNo = getRsDetailsFormulaNo();

        String rsDetailsFormulaNo = imtdRsDetailsCacheModel.rsDetailsFormulaNo;

        if ((rsDetailsFormulaNo != null) && (rsDetailsFormulaNo.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsFormulaNo = null;
        }

        imtdRsDetailsCacheModel.checkRecord = getCheckRecord();

        imtdRsDetailsCacheModel.rsId = getRsId();

        String rsId = imtdRsDetailsCacheModel.rsId;

        if ((rsId != null) && (rsId.length() == 0)) {
            imtdRsDetailsCacheModel.rsId = null;
        }

        imtdRsDetailsCacheModel.udc1 = getUdc1();

        String udc1 = imtdRsDetailsCacheModel.udc1;

        if ((udc1 != null) && (udc1.length() == 0)) {
            imtdRsDetailsCacheModel.udc1 = null;
        }

        imtdRsDetailsCacheModel.rsDetailsRebateAmount = getRsDetailsRebateAmount();

        imtdRsDetailsCacheModel.udc2 = getUdc2();

        String udc2 = imtdRsDetailsCacheModel.udc2;

        if ((udc2 != null) && (udc2.length() == 0)) {
            imtdRsDetailsCacheModel.udc2 = null;
        }

        imtdRsDetailsCacheModel.rsDetailsModifiedBy = getRsDetailsModifiedBy();

        String rsDetailsModifiedBy = imtdRsDetailsCacheModel.rsDetailsModifiedBy;

        if ((rsDetailsModifiedBy != null) &&
                (rsDetailsModifiedBy.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsModifiedBy = null;
        }

        imtdRsDetailsCacheModel.udc3 = getUdc3();

        String udc3 = imtdRsDetailsCacheModel.udc3;

        if ((udc3 != null) && (udc3.length() == 0)) {
            imtdRsDetailsCacheModel.udc3 = null;
        }

        imtdRsDetailsCacheModel.rebatePlanMasterSid = getRebatePlanMasterSid();

        String rebatePlanMasterSid = imtdRsDetailsCacheModel.rebatePlanMasterSid;

        if ((rebatePlanMasterSid != null) &&
                (rebatePlanMasterSid.length() == 0)) {
            imtdRsDetailsCacheModel.rebatePlanMasterSid = null;
        }

        Date rsDetailsAttachedDate = getRsDetailsAttachedDate();

        if (rsDetailsAttachedDate != null) {
            imtdRsDetailsCacheModel.rsDetailsAttachedDate = rsDetailsAttachedDate.getTime();
        } else {
            imtdRsDetailsCacheModel.rsDetailsAttachedDate = Long.MIN_VALUE;
        }

        Date itemRebateEndDate = getItemRebateEndDate();

        if (itemRebateEndDate != null) {
            imtdRsDetailsCacheModel.itemRebateEndDate = itemRebateEndDate.getTime();
        } else {
            imtdRsDetailsCacheModel.itemRebateEndDate = Long.MIN_VALUE;
        }

        imtdRsDetailsCacheModel.rsDetailsRebatePlanName = getRsDetailsRebatePlanName();

        String rsDetailsRebatePlanName = imtdRsDetailsCacheModel.rsDetailsRebatePlanName;

        if ((rsDetailsRebatePlanName != null) &&
                (rsDetailsRebatePlanName.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsRebatePlanName = null;
        }

        Date itemRebateStartDate = getItemRebateStartDate();

        if (itemRebateStartDate != null) {
            imtdRsDetailsCacheModel.itemRebateStartDate = itemRebateStartDate.getTime();
        } else {
            imtdRsDetailsCacheModel.itemRebateStartDate = Long.MIN_VALUE;
        }

        imtdRsDetailsCacheModel.rsDetailsFormulaType = getRsDetailsFormulaType();

        String rsDetailsFormulaType = imtdRsDetailsCacheModel.rsDetailsFormulaType;

        if ((rsDetailsFormulaType != null) &&
                (rsDetailsFormulaType.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsFormulaType = null;
        }

        imtdRsDetailsCacheModel.sessionId = getSessionId();

        String sessionId = imtdRsDetailsCacheModel.sessionId;

        if ((sessionId != null) && (sessionId.length() == 0)) {
            imtdRsDetailsCacheModel.sessionId = null;
        }

        imtdRsDetailsCacheModel.itemName = getItemName();

        String itemName = imtdRsDetailsCacheModel.itemName;

        if ((itemName != null) && (itemName.length() == 0)) {
            imtdRsDetailsCacheModel.itemName = null;
        }

        imtdRsDetailsCacheModel.operation = getOperation();

        String operation = imtdRsDetailsCacheModel.operation;

        if ((operation != null) && (operation.length() == 0)) {
            imtdRsDetailsCacheModel.operation = null;
        }

        imtdRsDetailsCacheModel.cfpModelSid = getCfpModelSid();

        imtdRsDetailsCacheModel.rsModelSid = getRsModelSid();

        imtdRsDetailsCacheModel.rsDetailsSid = getRsDetailsSid();

        imtdRsDetailsCacheModel.rsDetailsAttachedStatus = getRsDetailsAttachedStatus();

        imtdRsDetailsCacheModel.rsDetailsNetSalesFormulaNo = getRsDetailsNetSalesFormulaNo();

        String rsDetailsNetSalesFormulaNo = imtdRsDetailsCacheModel.rsDetailsNetSalesFormulaNo;

        if ((rsDetailsNetSalesFormulaNo != null) &&
                (rsDetailsNetSalesFormulaNo.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsNetSalesFormulaNo = null;
        }

        imtdRsDetailsCacheModel.rsDetailsNetSalesFormulaName = getRsDetailsNetSalesFormulaName();

        String rsDetailsNetSalesFormulaName = imtdRsDetailsCacheModel.rsDetailsNetSalesFormulaName;

        if ((rsDetailsNetSalesFormulaName != null) &&
                (rsDetailsNetSalesFormulaName.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsNetSalesFormulaName = null;
        }

        imtdRsDetailsCacheModel.rsDetailsDeductionCalendarNo = getRsDetailsDeductionCalendarNo();

        String rsDetailsDeductionCalendarNo = imtdRsDetailsCacheModel.rsDetailsDeductionCalendarNo;

        if ((rsDetailsDeductionCalendarNo != null) &&
                (rsDetailsDeductionCalendarNo.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsDeductionCalendarNo = null;
        }

        imtdRsDetailsCacheModel.rsDetailsDeductionCalendarName = getRsDetailsDeductionCalendarName();

        String rsDetailsDeductionCalendarName = imtdRsDetailsCacheModel.rsDetailsDeductionCalendarName;

        if ((rsDetailsDeductionCalendarName != null) &&
                (rsDetailsDeductionCalendarName.length() == 0)) {
            imtdRsDetailsCacheModel.rsDetailsDeductionCalendarName = null;
        }

        imtdRsDetailsCacheModel.deductionCalendarMasterSid = getDeductionCalendarMasterSid();

        imtdRsDetailsCacheModel.netSalesFormulaMasterSid = getNetSalesFormulaMasterSid();

        imtdRsDetailsCacheModel.evaluationRule = getEvaluationRule();

        String evaluationRule = imtdRsDetailsCacheModel.evaluationRule;

        if ((evaluationRule != null) && (evaluationRule.length() == 0)) {
            imtdRsDetailsCacheModel.evaluationRule = null;
        }

        imtdRsDetailsCacheModel.netSalesRule = getNetSalesRule();

        String netSalesRule = imtdRsDetailsCacheModel.netSalesRule;

        if ((netSalesRule != null) && (netSalesRule.length() == 0)) {
            imtdRsDetailsCacheModel.netSalesRule = null;
        }

        imtdRsDetailsCacheModel.formulaType = getFormulaType();

        String formulaType = imtdRsDetailsCacheModel.formulaType;

        if ((formulaType != null) && (formulaType.length() == 0)) {
            imtdRsDetailsCacheModel.formulaType = null;
        }

        imtdRsDetailsCacheModel.calculationRule = getCalculationRule();

        String calculationRule = imtdRsDetailsCacheModel.calculationRule;

        if ((calculationRule != null) && (calculationRule.length() == 0)) {
            imtdRsDetailsCacheModel.calculationRule = null;
        }

        imtdRsDetailsCacheModel.calculationRuleBundle = getCalculationRuleBundle();

        String calculationRuleBundle = imtdRsDetailsCacheModel.calculationRuleBundle;

        if ((calculationRuleBundle != null) &&
                (calculationRuleBundle.length() == 0)) {
            imtdRsDetailsCacheModel.calculationRuleBundle = null;
        }

        imtdRsDetailsCacheModel.evaluationRuleBundle = getEvaluationRuleBundle();

        String evaluationRuleBundle = imtdRsDetailsCacheModel.evaluationRuleBundle;

        if ((evaluationRuleBundle != null) &&
                (evaluationRuleBundle.length() == 0)) {
            imtdRsDetailsCacheModel.evaluationRuleBundle = null;
        }

        return imtdRsDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(113);

        sb.append("{rsDetailsModifiedDate=");
        sb.append(getRsDetailsModifiedDate());
        sb.append(", rsDetailsBundleNo=");
        sb.append(getRsDetailsBundleNo());
        sb.append(", itemMasterSid=");
        sb.append(getItemMasterSid());
        sb.append(", imtdRsDetailsSid=");
        sb.append(getImtdRsDetailsSid());
        sb.append(", itemId=");
        sb.append(getItemId());
        sb.append(", rsDetailsFormulaMethodId=");
        sb.append(getRsDetailsFormulaMethodId());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", usersSid=");
        sb.append(getUsersSid());
        sb.append(", contractMasterSid=");
        sb.append(getContractMasterSid());
        sb.append(", rsDetailsFormulaId=");
        sb.append(getRsDetailsFormulaId());
        sb.append(", imtdCreatedDate=");
        sb.append(getImtdCreatedDate());
        sb.append(", psModelSid=");
        sb.append(getPsModelSid());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", rsDetailsCreatedDate=");
        sb.append(getRsDetailsCreatedDate());
        sb.append(", itemNo=");
        sb.append(getItemNo());
        sb.append(", rsDetailsFormulaName=");
        sb.append(getRsDetailsFormulaName());
        sb.append(", udc6=");
        sb.append(getUdc6());
        sb.append(", rsDetailsCreatedBy=");
        sb.append(getRsDetailsCreatedBy());
        sb.append(", udc5=");
        sb.append(getUdc5());
        sb.append(", ifpModelSid=");
        sb.append(getIfpModelSid());
        sb.append(", udc4=");
        sb.append(getUdc4());
        sb.append(", rsDetailsFormulaNo=");
        sb.append(getRsDetailsFormulaNo());
        sb.append(", checkRecord=");
        sb.append(getCheckRecord());
        sb.append(", rsId=");
        sb.append(getRsId());
        sb.append(", udc1=");
        sb.append(getUdc1());
        sb.append(", rsDetailsRebateAmount=");
        sb.append(getRsDetailsRebateAmount());
        sb.append(", udc2=");
        sb.append(getUdc2());
        sb.append(", rsDetailsModifiedBy=");
        sb.append(getRsDetailsModifiedBy());
        sb.append(", udc3=");
        sb.append(getUdc3());
        sb.append(", rebatePlanMasterSid=");
        sb.append(getRebatePlanMasterSid());
        sb.append(", rsDetailsAttachedDate=");
        sb.append(getRsDetailsAttachedDate());
        sb.append(", itemRebateEndDate=");
        sb.append(getItemRebateEndDate());
        sb.append(", rsDetailsRebatePlanName=");
        sb.append(getRsDetailsRebatePlanName());
        sb.append(", itemRebateStartDate=");
        sb.append(getItemRebateStartDate());
        sb.append(", rsDetailsFormulaType=");
        sb.append(getRsDetailsFormulaType());
        sb.append(", sessionId=");
        sb.append(getSessionId());
        sb.append(", itemName=");
        sb.append(getItemName());
        sb.append(", operation=");
        sb.append(getOperation());
        sb.append(", cfpModelSid=");
        sb.append(getCfpModelSid());
        sb.append(", rsModelSid=");
        sb.append(getRsModelSid());
        sb.append(", rsDetailsSid=");
        sb.append(getRsDetailsSid());
        sb.append(", rsDetailsAttachedStatus=");
        sb.append(getRsDetailsAttachedStatus());
        sb.append(", rsDetailsNetSalesFormulaNo=");
        sb.append(getRsDetailsNetSalesFormulaNo());
        sb.append(", rsDetailsNetSalesFormulaName=");
        sb.append(getRsDetailsNetSalesFormulaName());
        sb.append(", rsDetailsDeductionCalendarNo=");
        sb.append(getRsDetailsDeductionCalendarNo());
        sb.append(", rsDetailsDeductionCalendarName=");
        sb.append(getRsDetailsDeductionCalendarName());
        sb.append(", deductionCalendarMasterSid=");
        sb.append(getDeductionCalendarMasterSid());
        sb.append(", netSalesFormulaMasterSid=");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append(", evaluationRule=");
        sb.append(getEvaluationRule());
        sb.append(", netSalesRule=");
        sb.append(getNetSalesRule());
        sb.append(", formulaType=");
        sb.append(getFormulaType());
        sb.append(", calculationRule=");
        sb.append(getCalculationRule());
        sb.append(", calculationRuleBundle=");
        sb.append(getCalculationRuleBundle());
        sb.append(", evaluationRuleBundle=");
        sb.append(getEvaluationRuleBundle());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(172);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.ImtdRsDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>rsDetailsModifiedDate</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsBundleNo</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsBundleNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemMasterSid</column-name><column-value><![CDATA[");
        sb.append(getItemMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>imtdRsDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getImtdRsDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemId</column-name><column-value><![CDATA[");
        sb.append(getItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsFormulaMethodId</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsFormulaMethodId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>usersSid</column-name><column-value><![CDATA[");
        sb.append(getUsersSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
        sb.append(getContractMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsFormulaId</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsFormulaId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>imtdCreatedDate</column-name><column-value><![CDATA[");
        sb.append(getImtdCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psModelSid</column-name><column-value><![CDATA[");
        sb.append(getPsModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsCreatedDate</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemNo</column-name><column-value><![CDATA[");
        sb.append(getItemNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsFormulaName</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsFormulaName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>udc6</column-name><column-value><![CDATA[");
        sb.append(getUdc6());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsCreatedBy</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>udc5</column-name><column-value><![CDATA[");
        sb.append(getUdc5());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ifpModelSid</column-name><column-value><![CDATA[");
        sb.append(getIfpModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>udc4</column-name><column-value><![CDATA[");
        sb.append(getUdc4());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsFormulaNo</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsFormulaNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>checkRecord</column-name><column-value><![CDATA[");
        sb.append(getCheckRecord());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsId</column-name><column-value><![CDATA[");
        sb.append(getRsId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>udc1</column-name><column-value><![CDATA[");
        sb.append(getUdc1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsRebateAmount</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsRebateAmount());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>udc2</column-name><column-value><![CDATA[");
        sb.append(getUdc2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsModifiedBy</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>udc3</column-name><column-value><![CDATA[");
        sb.append(getUdc3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanMasterSid</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsAttachedDate</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsAttachedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemRebateEndDate</column-name><column-value><![CDATA[");
        sb.append(getItemRebateEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsRebatePlanName</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsRebatePlanName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemRebateStartDate</column-name><column-value><![CDATA[");
        sb.append(getItemRebateStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsFormulaType</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsFormulaType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sessionId</column-name><column-value><![CDATA[");
        sb.append(getSessionId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemName</column-name><column-value><![CDATA[");
        sb.append(getItemName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>operation</column-name><column-value><![CDATA[");
        sb.append(getOperation());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cfpModelSid</column-name><column-value><![CDATA[");
        sb.append(getCfpModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsModelSid</column-name><column-value><![CDATA[");
        sb.append(getRsModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsAttachedStatus</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsAttachedStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsNetSalesFormulaNo</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsNetSalesFormulaNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsNetSalesFormulaName</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsNetSalesFormulaName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsDeductionCalendarNo</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsDeductionCalendarNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsDetailsDeductionCalendarName</column-name><column-value><![CDATA[");
        sb.append(getRsDetailsDeductionCalendarName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deductionCalendarMasterSid</column-name><column-value><![CDATA[");
        sb.append(getDeductionCalendarMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>netSalesFormulaMasterSid</column-name><column-value><![CDATA[");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>evaluationRule</column-name><column-value><![CDATA[");
        sb.append(getEvaluationRule());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>netSalesRule</column-name><column-value><![CDATA[");
        sb.append(getNetSalesRule());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaType</column-name><column-value><![CDATA[");
        sb.append(getFormulaType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>calculationRule</column-name><column-value><![CDATA[");
        sb.append(getCalculationRule());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>calculationRuleBundle</column-name><column-value><![CDATA[");
        sb.append(getCalculationRuleBundle());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>evaluationRuleBundle</column-name><column-value><![CDATA[");
        sb.append(getEvaluationRuleBundle());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
