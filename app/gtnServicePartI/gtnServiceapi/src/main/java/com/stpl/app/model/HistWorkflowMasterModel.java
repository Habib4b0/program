/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the HistWorkflowMaster service. Represents a row in the &quot;HIST_WORKFLOW_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.HistWorkflowMasterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.HistWorkflowMasterImpl}.
 * </p>
 *
 * @author
 * @see HistWorkflowMaster
 * @see com.stpl.app.model.impl.HistWorkflowMasterImpl
 * @see com.stpl.app.model.impl.HistWorkflowMasterModelImpl
 * @generated
 */
@ProviderType
public interface HistWorkflowMasterModel extends BaseModel<HistWorkflowMaster> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a hist workflow master model instance should use the {@link HistWorkflowMaster} interface instead.
	 */

	/**
	 * Returns the primary key of this hist workflow master.
	 *
	 * @return the primary key of this hist workflow master
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this hist workflow master.
	 *
	 * @param primaryKey the primary key of this hist workflow master
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the created by of this hist workflow master.
	 *
	 * @return the created by of this hist workflow master
	 */
	public int getCreatedBy();

	/**
	 * Sets the created by of this hist workflow master.
	 *
	 * @param createdBy the created by of this hist workflow master
	 */
	public void setCreatedBy(int createdBy);

	/**
	 * Returns the file size of this hist workflow master.
	 *
	 * @return the file size of this hist workflow master
	 */
	@AutoEscape
	public String getFileSize();

	/**
	 * Sets the file size of this hist workflow master.
	 *
	 * @param fileSize the file size of this hist workflow master
	 */
	public void setFileSize(String fileSize);

	/**
	 * Returns the action date of this hist workflow master.
	 *
	 * @return the action date of this hist workflow master
	 */
	public Date getActionDate();

	/**
	 * Sets the action date of this hist workflow master.
	 *
	 * @param actionDate the action date of this hist workflow master
	 */
	public void setActionDate(Date actionDate);

	/**
	 * Returns the workflow status ID of this hist workflow master.
	 *
	 * @return the workflow status ID of this hist workflow master
	 */
	public int getWorkflowStatusId();

	/**
	 * Sets the workflow status ID of this hist workflow master.
	 *
	 * @param workflowStatusId the workflow status ID of this hist workflow master
	 */
	public void setWorkflowStatusId(int workflowStatusId);

	/**
	 * Returns the action flag of this hist workflow master.
	 *
	 * @return the action flag of this hist workflow master
	 */
	@AutoEscape
	public String getActionFlag();

	/**
	 * Sets the action flag of this hist workflow master.
	 *
	 * @param actionFlag the action flag of this hist workflow master
	 */
	public void setActionFlag(String actionFlag);

	/**
	 * Returns the modified by of this hist workflow master.
	 *
	 * @return the modified by of this hist workflow master
	 */
	public int getModifiedBy();

	/**
	 * Sets the modified by of this hist workflow master.
	 *
	 * @param modifiedBy the modified by of this hist workflow master
	 */
	public void setModifiedBy(int modifiedBy);

	/**
	 * Returns the created date of this hist workflow master.
	 *
	 * @return the created date of this hist workflow master
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this hist workflow master.
	 *
	 * @param createdDate the created date of this hist workflow master
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the approval level of this hist workflow master.
	 *
	 * @return the approval level of this hist workflow master
	 */
	public int getApprovalLevel();

	/**
	 * Sets the approval level of this hist workflow master.
	 *
	 * @param approvalLevel the approval level of this hist workflow master
	 */
	public void setApprovalLevel(int approvalLevel);

	/**
	 * Returns the no of approval of this hist workflow master.
	 *
	 * @return the no of approval of this hist workflow master
	 */
	public int getNoOfApproval();

	/**
	 * Sets the no of approval of this hist workflow master.
	 *
	 * @param noOfApproval the no of approval of this hist workflow master
	 */
	public void setNoOfApproval(int noOfApproval);

	/**
	 * Returns the file name of this hist workflow master.
	 *
	 * @return the file name of this hist workflow master
	 */
	@AutoEscape
	public String getFileName();

	/**
	 * Sets the file name of this hist workflow master.
	 *
	 * @param fileName the file name of this hist workflow master
	 */
	public void setFileName(String fileName);

	/**
	 * Returns the uploaded by of this hist workflow master.
	 *
	 * @return the uploaded by of this hist workflow master
	 */
	@AutoEscape
	public String getUploadedBy();

	/**
	 * Sets the uploaded by of this hist workflow master.
	 *
	 * @param uploadedBy the uploaded by of this hist workflow master
	 */
	public void setUploadedBy(String uploadedBy);

	/**
	 * Returns the modified date of this hist workflow master.
	 *
	 * @return the modified date of this hist workflow master
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this hist workflow master.
	 *
	 * @param modifiedDate the modified date of this hist workflow master
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the acc closure master sid of this hist workflow master.
	 *
	 * @return the acc closure master sid of this hist workflow master
	 */
	public int getAccClosureMasterSid();

	/**
	 * Sets the acc closure master sid of this hist workflow master.
	 *
	 * @param accClosureMasterSid the acc closure master sid of this hist workflow master
	 */
	public void setAccClosureMasterSid(int accClosureMasterSid);

	/**
	 * Returns the notes of this hist workflow master.
	 *
	 * @return the notes of this hist workflow master
	 */
	@AutoEscape
	public String getNotes();

	/**
	 * Sets the notes of this hist workflow master.
	 *
	 * @param notes the notes of this hist workflow master
	 */
	public void setNotes(String notes);

	/**
	 * Returns the workflow master sid of this hist workflow master.
	 *
	 * @return the workflow master sid of this hist workflow master
	 */
	public int getWorkflowMasterSid();

	/**
	 * Sets the workflow master sid of this hist workflow master.
	 *
	 * @param workflowMasterSid the workflow master sid of this hist workflow master
	 */
	public void setWorkflowMasterSid(int workflowMasterSid);

	/**
	 * Returns the workflow ID of this hist workflow master.
	 *
	 * @return the workflow ID of this hist workflow master
	 */
	@AutoEscape
	public String getWorkflowId();

	/**
	 * Sets the workflow ID of this hist workflow master.
	 *
	 * @param workflowId the workflow ID of this hist workflow master
	 */
	public void setWorkflowId(String workflowId);

	/**
	 * Returns the projection master sid of this hist workflow master.
	 *
	 * @return the projection master sid of this hist workflow master
	 */
	public int getProjectionMasterSid();

	/**
	 * Sets the projection master sid of this hist workflow master.
	 *
	 * @param projectionMasterSid the projection master sid of this hist workflow master
	 */
	public void setProjectionMasterSid(int projectionMasterSid);

	/**
	 * Returns the uploaded date of this hist workflow master.
	 *
	 * @return the uploaded date of this hist workflow master
	 */
	public Date getUploadedDate();

	/**
	 * Sets the uploaded date of this hist workflow master.
	 *
	 * @param uploadedDate the uploaded date of this hist workflow master
	 */
	public void setUploadedDate(Date uploadedDate);

	/**
	 * Returns the file type of this hist workflow master.
	 *
	 * @return the file type of this hist workflow master
	 */
	@AutoEscape
	public String getFileType();

	/**
	 * Sets the file type of this hist workflow master.
	 *
	 * @param fileType the file type of this hist workflow master
	 */
	public void setFileType(String fileType);

	/**
	 * Returns the approved by of this hist workflow master.
	 *
	 * @return the approved by of this hist workflow master
	 */
	public int getApprovedBy();

	/**
	 * Sets the approved by of this hist workflow master.
	 *
	 * @param approvedBy the approved by of this hist workflow master
	 */
	public void setApprovedBy(int approvedBy);

	/**
	 * Returns the workflow descrption of this hist workflow master.
	 *
	 * @return the workflow descrption of this hist workflow master
	 */
	@AutoEscape
	public String getWorkflowDescrption();

	/**
	 * Sets the workflow descrption of this hist workflow master.
	 *
	 * @param workflowDescrption the workflow descrption of this hist workflow master
	 */
	public void setWorkflowDescrption(String workflowDescrption);

	/**
	 * Returns the approved date of this hist workflow master.
	 *
	 * @return the approved date of this hist workflow master
	 */
	public Date getApprovedDate();

	/**
	 * Sets the approved date of this hist workflow master.
	 *
	 * @param approvedDate the approved date of this hist workflow master
	 */
	public void setApprovedDate(Date approvedDate);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(HistWorkflowMaster histWorkflowMaster);

	@Override
	public int hashCode();

	@Override
	public CacheModel<HistWorkflowMaster> toCacheModel();

	@Override
	public HistWorkflowMaster toEscapedModel();

	@Override
	public HistWorkflowMaster toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}