package com.stpl.app.model;

import com.stpl.portal.kernel.bean.AutoEscape;
import com.stpl.portal.model.BaseModel;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.service.ServiceContext;

import com.stpl.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ModuleSubmoduleMaster service. Represents a row in the &quot;MODULE_SUBMODULE_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.ModuleSubmoduleMasterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.ModuleSubmoduleMasterImpl}.
 * </p>
 *
 * @author
 * @see ModuleSubmoduleMaster
 * @see com.stpl.app.model.impl.ModuleSubmoduleMasterImpl
 * @see com.stpl.app.model.impl.ModuleSubmoduleMasterModelImpl
 * @generated
 */
public interface ModuleSubmoduleMasterModel extends BaseModel<ModuleSubmoduleMaster> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a module submodule master model instance should use the {@link ModuleSubmoduleMaster} interface instead.
     */

    /**
     * Returns the primary key of this module submodule master.
     *
     * @return the primary key of this module submodule master
     */
    public int getPrimaryKey();

    /**
     * Sets the primary key of this module submodule master.
     *
     * @param primaryKey the primary key of this module submodule master
     */
    public void setPrimaryKey(int primaryKey);

    /**
     * Returns the created date of this module submodule master.
     *
     * @return the created date of this module submodule master
     */
    public Date getCreatedDate();

    /**
     * Sets the created date of this module submodule master.
     *
     * @param createdDate the created date of this module submodule master
     */
    public void setCreatedDate(Date createdDate);

    /**
     * Returns the created by of this module submodule master.
     *
     * @return the created by of this module submodule master
     */
    public int getCreatedBy();

    /**
     * Sets the created by of this module submodule master.
     *
     * @param createdBy the created by of this module submodule master
     */
    public void setCreatedBy(int createdBy);

    /**
     * Returns the category of this module submodule master.
     *
     * @return the category of this module submodule master
     */
    @AutoEscape
    public String getCategory();

    /**
     * Sets the category of this module submodule master.
     *
     * @param category the category of this module submodule master
     */
    public void setCategory(String category);

    /**
     * Returns the module submodule sid of this module submodule master.
     *
     * @return the module submodule sid of this module submodule master
     */
    public int getModuleSubmoduleSid();

    /**
     * Sets the module submodule sid of this module submodule master.
     *
     * @param moduleSubmoduleSid the module submodule sid of this module submodule master
     */
    public void setModuleSubmoduleSid(int moduleSubmoduleSid);

    /**
     * Returns the submodule name of this module submodule master.
     *
     * @return the submodule name of this module submodule master
     */
    @AutoEscape
    public String getSubmoduleName();

    /**
     * Sets the submodule name of this module submodule master.
     *
     * @param submoduleName the submodule name of this module submodule master
     */
    public void setSubmoduleName(String submoduleName);

    /**
     * Returns the module name of this module submodule master.
     *
     * @return the module name of this module submodule master
     */
    @AutoEscape
    public String getModuleName();

    /**
     * Sets the module name of this module submodule master.
     *
     * @param moduleName the module name of this module submodule master
     */
    public void setModuleName(String moduleName);

    /**
     * Returns the version no of this module submodule master.
     *
     * @return the version no of this module submodule master
     */
    public int getVersionNo();

    /**
     * Sets the version no of this module submodule master.
     *
     * @param versionNo the version no of this module submodule master
     */
    public void setVersionNo(int versionNo);

    /**
     * Returns the modified by of this module submodule master.
     *
     * @return the modified by of this module submodule master
     */
    public int getModifiedBy();

    /**
     * Sets the modified by of this module submodule master.
     *
     * @param modifiedBy the modified by of this module submodule master
     */
    public void setModifiedBy(int modifiedBy);

    /**
     * Returns the modified date of this module submodule master.
     *
     * @return the modified date of this module submodule master
     */
    public Date getModifiedDate();

    /**
     * Sets the modified date of this module submodule master.
     *
     * @param modifiedDate the modified date of this module submodule master
     */
    public void setModifiedDate(Date modifiedDate);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ModuleSubmoduleMaster moduleSubmoduleMaster);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ModuleSubmoduleMaster> toCacheModel();

    @Override
    public ModuleSubmoduleMaster toEscapedModel();

    @Override
    public ModuleSubmoduleMaster toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
