package com.stpl.app.model.impl;

import com.stpl.app.model.HistItemGroup;
import com.stpl.app.model.HistItemGroupModel;
import com.stpl.app.service.persistence.HistItemGroupPK;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the HistItemGroup service. Represents a row in the &quot;HIST_ITEM_GROUP&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.HistItemGroupModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HistItemGroupImpl}.
 * </p>
 *
 * @author
 * @see HistItemGroupImpl
 * @see com.stpl.app.model.HistItemGroup
 * @see com.stpl.app.model.HistItemGroupModel
 * @generated
 */
public class HistItemGroupModelImpl extends BaseModelImpl<HistItemGroup>
    implements HistItemGroupModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a hist item group model instance should use the {@link com.stpl.app.model.HistItemGroup} interface instead.
     */
    public static final String TABLE_NAME = "HIST_ITEM_GROUP";
    public static final Object[][] TABLE_COLUMNS = {
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "ACTION_FLAG", Types.VARCHAR },
            { "ITEM_GROUP_NO", Types.VARCHAR },
            { "VERSION_NO", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "ITEM_GROUP_DESCRIPTION", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "ITEM_GROUP_NAME", Types.VARCHAR },
            { "ITEM_GROUP_SID", Types.INTEGER },
            { "COMPANY_MASTER_SID", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table HIST_ITEM_GROUP (CREATED_DATE DATE null,CREATED_BY INTEGER,ACTION_FLAG VARCHAR(75) not null,ITEM_GROUP_NO VARCHAR(75) null,VERSION_NO INTEGER not null IDENTITY,MODIFIED_BY INTEGER,ITEM_GROUP_DESCRIPTION VARCHAR(75) null,MODIFIED_DATE DATE null,ITEM_GROUP_NAME VARCHAR(75) null,ITEM_GROUP_SID INTEGER not null IDENTITY,COMPANY_MASTER_SID INTEGER,primary key (ACTION_FLAG, VERSION_NO, ITEM_GROUP_SID))";
    public static final String TABLE_SQL_DROP = "drop table HIST_ITEM_GROUP";
    public static final String ORDER_BY_JPQL = " ORDER BY histItemGroup.id.actionFlag ASC, histItemGroup.id.versionNo ASC, histItemGroup.id.itemGroupSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY HIST_ITEM_GROUP.ACTION_FLAG ASC, HIST_ITEM_GROUP.VERSION_NO ASC, HIST_ITEM_GROUP.ITEM_GROUP_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.HistItemGroup"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.HistItemGroup"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.HistItemGroup"));
    private static ClassLoader _classLoader = HistItemGroup.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            HistItemGroup.class
        };
    private Date _createdDate;
    private int _createdBy;
    private String _actionFlag;
    private String _itemGroupNo;
    private int _versionNo;
    private int _modifiedBy;
    private String _itemGroupDescription;
    private Date _modifiedDate;
    private String _itemGroupName;
    private int _itemGroupSid;
    private int _companyMasterSid;
    private HistItemGroup _escapedModel;

    public HistItemGroupModelImpl() {
    }

    @Override
    public HistItemGroupPK getPrimaryKey() {
        return new HistItemGroupPK(_actionFlag, _versionNo, _itemGroupSid);
    }

    @Override
    public void setPrimaryKey(HistItemGroupPK primaryKey) {
        setActionFlag(primaryKey.actionFlag);
        setVersionNo(primaryKey.versionNo);
        setItemGroupSid(primaryKey.itemGroupSid);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return new HistItemGroupPK(_actionFlag, _versionNo, _itemGroupSid);
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey((HistItemGroupPK) primaryKeyObj);
    }

    @Override
    public Class<?> getModelClass() {
        return HistItemGroup.class;
    }

    @Override
    public String getModelClassName() {
        return HistItemGroup.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("actionFlag", getActionFlag());
        attributes.put("itemGroupNo", getItemGroupNo());
        attributes.put("versionNo", getVersionNo());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("itemGroupDescription", getItemGroupDescription());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("itemGroupName", getItemGroupName());
        attributes.put("itemGroupSid", getItemGroupSid());
        attributes.put("companyMasterSid", getCompanyMasterSid());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String actionFlag = (String) attributes.get("actionFlag");

        if (actionFlag != null) {
            setActionFlag(actionFlag);
        }

        String itemGroupNo = (String) attributes.get("itemGroupNo");

        if (itemGroupNo != null) {
            setItemGroupNo(itemGroupNo);
        }

        Integer versionNo = (Integer) attributes.get("versionNo");

        if (versionNo != null) {
            setVersionNo(versionNo);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String itemGroupDescription = (String) attributes.get(
                "itemGroupDescription");

        if (itemGroupDescription != null) {
            setItemGroupDescription(itemGroupDescription);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String itemGroupName = (String) attributes.get("itemGroupName");

        if (itemGroupName != null) {
            setItemGroupName(itemGroupName);
        }

        Integer itemGroupSid = (Integer) attributes.get("itemGroupSid");

        if (itemGroupSid != null) {
            setItemGroupSid(itemGroupSid);
        }

        Integer companyMasterSid = (Integer) attributes.get("companyMasterSid");

        if (companyMasterSid != null) {
            setCompanyMasterSid(companyMasterSid);
        }
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getActionFlag() {
        if (_actionFlag == null) {
            return StringPool.BLANK;
        } else {
            return _actionFlag;
        }
    }

    @Override
    public void setActionFlag(String actionFlag) {
        _actionFlag = actionFlag;
    }

    @Override
    public String getItemGroupNo() {
        if (_itemGroupNo == null) {
            return StringPool.BLANK;
        } else {
            return _itemGroupNo;
        }
    }

    @Override
    public void setItemGroupNo(String itemGroupNo) {
        _itemGroupNo = itemGroupNo;
    }

    @Override
    public int getVersionNo() {
        return _versionNo;
    }

    @Override
    public void setVersionNo(int versionNo) {
        _versionNo = versionNo;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getItemGroupDescription() {
        if (_itemGroupDescription == null) {
            return StringPool.BLANK;
        } else {
            return _itemGroupDescription;
        }
    }

    @Override
    public void setItemGroupDescription(String itemGroupDescription) {
        _itemGroupDescription = itemGroupDescription;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getItemGroupName() {
        if (_itemGroupName == null) {
            return StringPool.BLANK;
        } else {
            return _itemGroupName;
        }
    }

    @Override
    public void setItemGroupName(String itemGroupName) {
        _itemGroupName = itemGroupName;
    }

    @Override
    public int getItemGroupSid() {
        return _itemGroupSid;
    }

    @Override
    public void setItemGroupSid(int itemGroupSid) {
        _itemGroupSid = itemGroupSid;
    }

    @Override
    public int getCompanyMasterSid() {
        return _companyMasterSid;
    }

    @Override
    public void setCompanyMasterSid(int companyMasterSid) {
        _companyMasterSid = companyMasterSid;
    }

    @Override
    public HistItemGroup toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (HistItemGroup) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        HistItemGroupImpl histItemGroupImpl = new HistItemGroupImpl();

        histItemGroupImpl.setCreatedDate(getCreatedDate());
        histItemGroupImpl.setCreatedBy(getCreatedBy());
        histItemGroupImpl.setActionFlag(getActionFlag());
        histItemGroupImpl.setItemGroupNo(getItemGroupNo());
        histItemGroupImpl.setVersionNo(getVersionNo());
        histItemGroupImpl.setModifiedBy(getModifiedBy());
        histItemGroupImpl.setItemGroupDescription(getItemGroupDescription());
        histItemGroupImpl.setModifiedDate(getModifiedDate());
        histItemGroupImpl.setItemGroupName(getItemGroupName());
        histItemGroupImpl.setItemGroupSid(getItemGroupSid());
        histItemGroupImpl.setCompanyMasterSid(getCompanyMasterSid());

        histItemGroupImpl.resetOriginalValues();

        return histItemGroupImpl;
    }

    @Override
    public int compareTo(HistItemGroup histItemGroup) {
        HistItemGroupPK primaryKey = histItemGroup.getPrimaryKey();

        return getPrimaryKey().compareTo(primaryKey);
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof HistItemGroup)) {
            return false;
        }

        HistItemGroup histItemGroup = (HistItemGroup) obj;

        HistItemGroupPK primaryKey = histItemGroup.getPrimaryKey();

        if (getPrimaryKey().equals(primaryKey)) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey().hashCode();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<HistItemGroup> toCacheModel() {
        HistItemGroupCacheModel histItemGroupCacheModel = new HistItemGroupCacheModel();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            histItemGroupCacheModel.createdDate = createdDate.getTime();
        } else {
            histItemGroupCacheModel.createdDate = Long.MIN_VALUE;
        }

        histItemGroupCacheModel.createdBy = getCreatedBy();

        histItemGroupCacheModel.actionFlag = getActionFlag();

        String actionFlag = histItemGroupCacheModel.actionFlag;

        if ((actionFlag != null) && (actionFlag.length() == 0)) {
            histItemGroupCacheModel.actionFlag = null;
        }

        histItemGroupCacheModel.itemGroupNo = getItemGroupNo();

        String itemGroupNo = histItemGroupCacheModel.itemGroupNo;

        if ((itemGroupNo != null) && (itemGroupNo.length() == 0)) {
            histItemGroupCacheModel.itemGroupNo = null;
        }

        histItemGroupCacheModel.versionNo = getVersionNo();

        histItemGroupCacheModel.modifiedBy = getModifiedBy();

        histItemGroupCacheModel.itemGroupDescription = getItemGroupDescription();

        String itemGroupDescription = histItemGroupCacheModel.itemGroupDescription;

        if ((itemGroupDescription != null) &&
                (itemGroupDescription.length() == 0)) {
            histItemGroupCacheModel.itemGroupDescription = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            histItemGroupCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            histItemGroupCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        histItemGroupCacheModel.itemGroupName = getItemGroupName();

        String itemGroupName = histItemGroupCacheModel.itemGroupName;

        if ((itemGroupName != null) && (itemGroupName.length() == 0)) {
            histItemGroupCacheModel.itemGroupName = null;
        }

        histItemGroupCacheModel.itemGroupSid = getItemGroupSid();

        histItemGroupCacheModel.companyMasterSid = getCompanyMasterSid();

        return histItemGroupCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(23);

        sb.append("{createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", actionFlag=");
        sb.append(getActionFlag());
        sb.append(", itemGroupNo=");
        sb.append(getItemGroupNo());
        sb.append(", versionNo=");
        sb.append(getVersionNo());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", itemGroupDescription=");
        sb.append(getItemGroupDescription());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", itemGroupName=");
        sb.append(getItemGroupName());
        sb.append(", itemGroupSid=");
        sb.append(getItemGroupSid());
        sb.append(", companyMasterSid=");
        sb.append(getCompanyMasterSid());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(37);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.HistItemGroup");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>actionFlag</column-name><column-value><![CDATA[");
        sb.append(getActionFlag());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemGroupNo</column-name><column-value><![CDATA[");
        sb.append(getItemGroupNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>versionNo</column-name><column-value><![CDATA[");
        sb.append(getVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemGroupDescription</column-name><column-value><![CDATA[");
        sb.append(getItemGroupDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemGroupName</column-name><column-value><![CDATA[");
        sb.append(getItemGroupName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemGroupSid</column-name><column-value><![CDATA[");
        sb.append(getItemGroupSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyMasterSid</column-name><column-value><![CDATA[");
        sb.append(getCompanyMasterSid());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
