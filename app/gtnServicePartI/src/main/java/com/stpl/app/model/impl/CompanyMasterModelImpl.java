package com.stpl.app.model.impl;

import com.stpl.app.model.CompanyMaster;
import com.stpl.app.model.CompanyMasterModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CompanyMaster service. Represents a row in the &quot;COMPANY_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.CompanyMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CompanyMasterImpl}.
 * </p>
 *
 * @author
 * @see CompanyMasterImpl
 * @see com.stpl.app.model.CompanyMaster
 * @see com.stpl.app.model.CompanyMasterModel
 * @generated
 */
public class CompanyMasterModelImpl extends BaseModelImpl<CompanyMaster>
    implements CompanyMasterModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a company master model instance should use the {@link com.stpl.app.model.CompanyMaster} interface instead.
     */
    public static final String TABLE_NAME = "COMPANY_MASTER";
    public static final Object[][] TABLE_COLUMNS = {
            { "STATE", Types.INTEGER },
            { "FINANCIAL_SYSTEM", Types.VARCHAR },
            { "COMPANY_GROUP", Types.VARCHAR },
            { "COMPANY_NAME", Types.VARCHAR },
            { "COMPANY_CATEGORY", Types.INTEGER },
            { "LAST_UPDATED_DATE", Types.TIMESTAMP },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "LIVES", Types.INTEGER },
            { "ADDRESS2", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "SOURCE", Types.VARCHAR },
            { "ADDRESS1", Types.VARCHAR },
            { "MODIFIED_BY", Types.INTEGER },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "COMPANY_MASTER_SID", Types.INTEGER },
            { "ZIP_CODE", Types.VARCHAR },
            { "COMPANY_ID", Types.VARCHAR },
            { "COUNTRY", Types.INTEGER },
            { "INTERNAL_NOTES", Types.VARCHAR },
            { "ORGANIZATION_KEY", Types.VARCHAR },
            { "COMPANY_TYPE", Types.INTEGER },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "COMPANY_START_DATE", Types.TIMESTAMP },
            { "COMPANY_NO", Types.VARCHAR },
            { "BATCH_ID", Types.VARCHAR },
            { "COMPANY_STATUS", Types.INTEGER },
            { "COMPANY_END_DATE", Types.TIMESTAMP },
            { "CITY", Types.VARCHAR },
            { "REGION_CODE", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table COMPANY_MASTER (STATE INTEGER,FINANCIAL_SYSTEM VARCHAR(75) null,COMPANY_GROUP VARCHAR(75) null,COMPANY_NAME VARCHAR(75) null,COMPANY_CATEGORY INTEGER,LAST_UPDATED_DATE DATE null,MODIFIED_DATE DATE null,LIVES INTEGER,ADDRESS2 VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY INTEGER,SOURCE VARCHAR(75) null,ADDRESS1 VARCHAR(75) null,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,COMPANY_MASTER_SID INTEGER not null primary key IDENTITY,ZIP_CODE VARCHAR(75) null,COMPANY_ID VARCHAR(75) null,COUNTRY INTEGER,INTERNAL_NOTES VARCHAR(75) null,ORGANIZATION_KEY VARCHAR(75) null,COMPANY_TYPE INTEGER,RECORD_LOCK_STATUS BOOLEAN,COMPANY_START_DATE DATE null,COMPANY_NO VARCHAR(75) null,BATCH_ID VARCHAR(75) null,COMPANY_STATUS INTEGER,COMPANY_END_DATE DATE null,CITY VARCHAR(75) null,REGION_CODE VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table COMPANY_MASTER";
    public static final String ORDER_BY_JPQL = " ORDER BY companyMaster.companyMasterSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY COMPANY_MASTER.COMPANY_MASTER_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.CompanyMaster"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.CompanyMaster"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.stpl.app.model.CompanyMaster"),
            true);
    public static long COMPANYID_COLUMN_BITMASK = 1L;
    public static long COMPANYNAME_COLUMN_BITMASK = 2L;
    public static long COMPANYNO_COLUMN_BITMASK = 4L;
    public static long COMPANYSTATUS_COLUMN_BITMASK = 8L;
    public static long COMPANYTYPE_COLUMN_BITMASK = 16L;
    public static long COMPANYMASTERSID_COLUMN_BITMASK = 32L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.CompanyMaster"));
    private static ClassLoader _classLoader = CompanyMaster.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            CompanyMaster.class
        };
    private int _state;
    private String _financialSystem;
    private String _companyGroup;
    private String _companyName;
    private String _originalCompanyName;
    private int _companyCategory;
    private Date _lastUpdatedDate;
    private Date _modifiedDate;
    private int _lives;
    private String _address2;
    private Date _createdDate;
    private int _createdBy;
    private String _source;
    private String _address1;
    private int _modifiedBy;
    private String _inboundStatus;
    private int _companyMasterSid;
    private String _zipCode;
    private String _companyId;
    private String _originalCompanyId;
    private int _country;
    private String _internalNotes;
    private String _orgKey;
    private int _companyType;
    private int _originalCompanyType;
    private boolean _setOriginalCompanyType;
    private boolean _recordLockStatus;
    private Date _companyStartDate;
    private String _companyNo;
    private String _originalCompanyNo;
    private String _batchId;
    private int _companyStatus;
    private int _originalCompanyStatus;
    private boolean _setOriginalCompanyStatus;
    private Date _companyEndDate;
    private String _city;
    private String _regionCode;
    private long _columnBitmask;
    private CompanyMaster _escapedModel;

    public CompanyMasterModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _companyMasterSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setCompanyMasterSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _companyMasterSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return CompanyMaster.class;
    }

    @Override
    public String getModelClassName() {
        return CompanyMaster.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("state", getState());
        attributes.put("financialSystem", getFinancialSystem());
        attributes.put("companyGroup", getCompanyGroup());
        attributes.put("companyName", getCompanyName());
        attributes.put("companyCategory", getCompanyCategory());
        attributes.put("lastUpdatedDate", getLastUpdatedDate());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("lives", getLives());
        attributes.put("address2", getAddress2());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("source", getSource());
        attributes.put("address1", getAddress1());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("companyMasterSid", getCompanyMasterSid());
        attributes.put("zipCode", getZipCode());
        attributes.put("companyId", getCompanyId());
        attributes.put("country", getCountry());
        attributes.put("internalNotes", getInternalNotes());
        attributes.put("orgKey", getOrgKey());
        attributes.put("companyType", getCompanyType());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("companyStartDate", getCompanyStartDate());
        attributes.put("companyNo", getCompanyNo());
        attributes.put("batchId", getBatchId());
        attributes.put("companyStatus", getCompanyStatus());
        attributes.put("companyEndDate", getCompanyEndDate());
        attributes.put("city", getCity());
        attributes.put("regionCode", getRegionCode());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer state = (Integer) attributes.get("state");

        if (state != null) {
            setState(state);
        }

        String financialSystem = (String) attributes.get("financialSystem");

        if (financialSystem != null) {
            setFinancialSystem(financialSystem);
        }

        String companyGroup = (String) attributes.get("companyGroup");

        if (companyGroup != null) {
            setCompanyGroup(companyGroup);
        }

        String companyName = (String) attributes.get("companyName");

        if (companyName != null) {
            setCompanyName(companyName);
        }

        Integer companyCategory = (Integer) attributes.get("companyCategory");

        if (companyCategory != null) {
            setCompanyCategory(companyCategory);
        }

        Date lastUpdatedDate = (Date) attributes.get("lastUpdatedDate");

        if (lastUpdatedDate != null) {
            setLastUpdatedDate(lastUpdatedDate);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Integer lives = (Integer) attributes.get("lives");

        if (lives != null) {
            setLives(lives);
        }

        String address2 = (String) attributes.get("address2");

        if (address2 != null) {
            setAddress2(address2);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        String address1 = (String) attributes.get("address1");

        if (address1 != null) {
            setAddress1(address1);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        Integer companyMasterSid = (Integer) attributes.get("companyMasterSid");

        if (companyMasterSid != null) {
            setCompanyMasterSid(companyMasterSid);
        }

        String zipCode = (String) attributes.get("zipCode");

        if (zipCode != null) {
            setZipCode(zipCode);
        }

        String companyId = (String) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Integer country = (Integer) attributes.get("country");

        if (country != null) {
            setCountry(country);
        }

        String internalNotes = (String) attributes.get("internalNotes");

        if (internalNotes != null) {
            setInternalNotes(internalNotes);
        }

        String orgKey = (String) attributes.get("orgKey");

        if (orgKey != null) {
            setOrgKey(orgKey);
        }

        Integer companyType = (Integer) attributes.get("companyType");

        if (companyType != null) {
            setCompanyType(companyType);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        Date companyStartDate = (Date) attributes.get("companyStartDate");

        if (companyStartDate != null) {
            setCompanyStartDate(companyStartDate);
        }

        String companyNo = (String) attributes.get("companyNo");

        if (companyNo != null) {
            setCompanyNo(companyNo);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        Integer companyStatus = (Integer) attributes.get("companyStatus");

        if (companyStatus != null) {
            setCompanyStatus(companyStatus);
        }

        Date companyEndDate = (Date) attributes.get("companyEndDate");

        if (companyEndDate != null) {
            setCompanyEndDate(companyEndDate);
        }

        String city = (String) attributes.get("city");

        if (city != null) {
            setCity(city);
        }

        String regionCode = (String) attributes.get("regionCode");

        if (regionCode != null) {
            setRegionCode(regionCode);
        }
    }

    @Override
    public int getState() {
        return _state;
    }

    @Override
    public void setState(int state) {
        _state = state;
    }

    @Override
    public String getFinancialSystem() {
        if (_financialSystem == null) {
            return StringPool.BLANK;
        } else {
            return _financialSystem;
        }
    }

    @Override
    public void setFinancialSystem(String financialSystem) {
        _financialSystem = financialSystem;
    }

    @Override
    public String getCompanyGroup() {
        if (_companyGroup == null) {
            return StringPool.BLANK;
        } else {
            return _companyGroup;
        }
    }

    @Override
    public void setCompanyGroup(String companyGroup) {
        _companyGroup = companyGroup;
    }

    @Override
    public String getCompanyName() {
        if (_companyName == null) {
            return StringPool.BLANK;
        } else {
            return _companyName;
        }
    }

    @Override
    public void setCompanyName(String companyName) {
        _columnBitmask |= COMPANYNAME_COLUMN_BITMASK;

        if (_originalCompanyName == null) {
            _originalCompanyName = _companyName;
        }

        _companyName = companyName;
    }

    public String getOriginalCompanyName() {
        return GetterUtil.getString(_originalCompanyName);
    }

    @Override
    public int getCompanyCategory() {
        return _companyCategory;
    }

    @Override
    public void setCompanyCategory(int companyCategory) {
        _companyCategory = companyCategory;
    }

    @Override
    public Date getLastUpdatedDate() {
        return _lastUpdatedDate;
    }

    @Override
    public void setLastUpdatedDate(Date lastUpdatedDate) {
        _lastUpdatedDate = lastUpdatedDate;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public int getLives() {
        return _lives;
    }

    @Override
    public void setLives(int lives) {
        _lives = lives;
    }

    @Override
    public String getAddress2() {
        if (_address2 == null) {
            return StringPool.BLANK;
        } else {
            return _address2;
        }
    }

    @Override
    public void setAddress2(String address2) {
        _address2 = address2;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public String getAddress1() {
        if (_address1 == null) {
            return StringPool.BLANK;
        } else {
            return _address1;
        }
    }

    @Override
    public void setAddress1(String address1) {
        _address1 = address1;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public int getCompanyMasterSid() {
        return _companyMasterSid;
    }

    @Override
    public void setCompanyMasterSid(int companyMasterSid) {
        _companyMasterSid = companyMasterSid;
    }

    @Override
    public String getZipCode() {
        if (_zipCode == null) {
            return StringPool.BLANK;
        } else {
            return _zipCode;
        }
    }

    @Override
    public void setZipCode(String zipCode) {
        _zipCode = zipCode;
    }

    @Override
    public String getCompanyId() {
        if (_companyId == null) {
            return StringPool.BLANK;
        } else {
            return _companyId;
        }
    }

    @Override
    public void setCompanyId(String companyId) {
        _columnBitmask |= COMPANYID_COLUMN_BITMASK;

        if (_originalCompanyId == null) {
            _originalCompanyId = _companyId;
        }

        _companyId = companyId;
    }

    public String getOriginalCompanyId() {
        return GetterUtil.getString(_originalCompanyId);
    }

    @Override
    public int getCountry() {
        return _country;
    }

    @Override
    public void setCountry(int country) {
        _country = country;
    }

    @Override
    public String getInternalNotes() {
        if (_internalNotes == null) {
            return StringPool.BLANK;
        } else {
            return _internalNotes;
        }
    }

    @Override
    public void setInternalNotes(String internalNotes) {
        _internalNotes = internalNotes;
    }

    @Override
    public String getOrgKey() {
        if (_orgKey == null) {
            return StringPool.BLANK;
        } else {
            return _orgKey;
        }
    }

    @Override
    public void setOrgKey(String orgKey) {
        _orgKey = orgKey;
    }

    @Override
    public int getCompanyType() {
        return _companyType;
    }

    @Override
    public void setCompanyType(int companyType) {
        _columnBitmask |= COMPANYTYPE_COLUMN_BITMASK;

        if (!_setOriginalCompanyType) {
            _setOriginalCompanyType = true;

            _originalCompanyType = _companyType;
        }

        _companyType = companyType;
    }

    public int getOriginalCompanyType() {
        return _originalCompanyType;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public Date getCompanyStartDate() {
        return _companyStartDate;
    }

    @Override
    public void setCompanyStartDate(Date companyStartDate) {
        _companyStartDate = companyStartDate;
    }

    @Override
    public String getCompanyNo() {
        if (_companyNo == null) {
            return StringPool.BLANK;
        } else {
            return _companyNo;
        }
    }

    @Override
    public void setCompanyNo(String companyNo) {
        _columnBitmask |= COMPANYNO_COLUMN_BITMASK;

        if (_originalCompanyNo == null) {
            _originalCompanyNo = _companyNo;
        }

        _companyNo = companyNo;
    }

    public String getOriginalCompanyNo() {
        return GetterUtil.getString(_originalCompanyNo);
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public int getCompanyStatus() {
        return _companyStatus;
    }

    @Override
    public void setCompanyStatus(int companyStatus) {
        _columnBitmask |= COMPANYSTATUS_COLUMN_BITMASK;

        if (!_setOriginalCompanyStatus) {
            _setOriginalCompanyStatus = true;

            _originalCompanyStatus = _companyStatus;
        }

        _companyStatus = companyStatus;
    }

    public int getOriginalCompanyStatus() {
        return _originalCompanyStatus;
    }

    @Override
    public Date getCompanyEndDate() {
        return _companyEndDate;
    }

    @Override
    public void setCompanyEndDate(Date companyEndDate) {
        _companyEndDate = companyEndDate;
    }

    @Override
    public String getCity() {
        if (_city == null) {
            return StringPool.BLANK;
        } else {
            return _city;
        }
    }

    @Override
    public void setCity(String city) {
        _city = city;
    }

    @Override
    public String getRegionCode() {
        if (_regionCode == null) {
            return StringPool.BLANK;
        } else {
            return _regionCode;
        }
    }

    @Override
    public void setRegionCode(String regionCode) {
        _regionCode = regionCode;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public CompanyMaster toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (CompanyMaster) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        CompanyMasterImpl companyMasterImpl = new CompanyMasterImpl();

        companyMasterImpl.setState(getState());
        companyMasterImpl.setFinancialSystem(getFinancialSystem());
        companyMasterImpl.setCompanyGroup(getCompanyGroup());
        companyMasterImpl.setCompanyName(getCompanyName());
        companyMasterImpl.setCompanyCategory(getCompanyCategory());
        companyMasterImpl.setLastUpdatedDate(getLastUpdatedDate());
        companyMasterImpl.setModifiedDate(getModifiedDate());
        companyMasterImpl.setLives(getLives());
        companyMasterImpl.setAddress2(getAddress2());
        companyMasterImpl.setCreatedDate(getCreatedDate());
        companyMasterImpl.setCreatedBy(getCreatedBy());
        companyMasterImpl.setSource(getSource());
        companyMasterImpl.setAddress1(getAddress1());
        companyMasterImpl.setModifiedBy(getModifiedBy());
        companyMasterImpl.setInboundStatus(getInboundStatus());
        companyMasterImpl.setCompanyMasterSid(getCompanyMasterSid());
        companyMasterImpl.setZipCode(getZipCode());
        companyMasterImpl.setCompanyId(getCompanyId());
        companyMasterImpl.setCountry(getCountry());
        companyMasterImpl.setInternalNotes(getInternalNotes());
        companyMasterImpl.setOrgKey(getOrgKey());
        companyMasterImpl.setCompanyType(getCompanyType());
        companyMasterImpl.setRecordLockStatus(getRecordLockStatus());
        companyMasterImpl.setCompanyStartDate(getCompanyStartDate());
        companyMasterImpl.setCompanyNo(getCompanyNo());
        companyMasterImpl.setBatchId(getBatchId());
        companyMasterImpl.setCompanyStatus(getCompanyStatus());
        companyMasterImpl.setCompanyEndDate(getCompanyEndDate());
        companyMasterImpl.setCity(getCity());
        companyMasterImpl.setRegionCode(getRegionCode());

        companyMasterImpl.resetOriginalValues();

        return companyMasterImpl;
    }

    @Override
    public int compareTo(CompanyMaster companyMaster) {
        int primaryKey = companyMaster.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof CompanyMaster)) {
            return false;
        }

        CompanyMaster companyMaster = (CompanyMaster) obj;

        int primaryKey = companyMaster.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        CompanyMasterModelImpl companyMasterModelImpl = this;

        companyMasterModelImpl._originalCompanyName = companyMasterModelImpl._companyName;

        companyMasterModelImpl._originalCompanyId = companyMasterModelImpl._companyId;

        companyMasterModelImpl._originalCompanyType = companyMasterModelImpl._companyType;

        companyMasterModelImpl._setOriginalCompanyType = false;

        companyMasterModelImpl._originalCompanyNo = companyMasterModelImpl._companyNo;

        companyMasterModelImpl._originalCompanyStatus = companyMasterModelImpl._companyStatus;

        companyMasterModelImpl._setOriginalCompanyStatus = false;

        companyMasterModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<CompanyMaster> toCacheModel() {
        CompanyMasterCacheModel companyMasterCacheModel = new CompanyMasterCacheModel();

        companyMasterCacheModel.state = getState();

        companyMasterCacheModel.financialSystem = getFinancialSystem();

        String financialSystem = companyMasterCacheModel.financialSystem;

        if ((financialSystem != null) && (financialSystem.length() == 0)) {
            companyMasterCacheModel.financialSystem = null;
        }

        companyMasterCacheModel.companyGroup = getCompanyGroup();

        String companyGroup = companyMasterCacheModel.companyGroup;

        if ((companyGroup != null) && (companyGroup.length() == 0)) {
            companyMasterCacheModel.companyGroup = null;
        }

        companyMasterCacheModel.companyName = getCompanyName();

        String companyName = companyMasterCacheModel.companyName;

        if ((companyName != null) && (companyName.length() == 0)) {
            companyMasterCacheModel.companyName = null;
        }

        companyMasterCacheModel.companyCategory = getCompanyCategory();

        Date lastUpdatedDate = getLastUpdatedDate();

        if (lastUpdatedDate != null) {
            companyMasterCacheModel.lastUpdatedDate = lastUpdatedDate.getTime();
        } else {
            companyMasterCacheModel.lastUpdatedDate = Long.MIN_VALUE;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            companyMasterCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            companyMasterCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        companyMasterCacheModel.lives = getLives();

        companyMasterCacheModel.address2 = getAddress2();

        String address2 = companyMasterCacheModel.address2;

        if ((address2 != null) && (address2.length() == 0)) {
            companyMasterCacheModel.address2 = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            companyMasterCacheModel.createdDate = createdDate.getTime();
        } else {
            companyMasterCacheModel.createdDate = Long.MIN_VALUE;
        }

        companyMasterCacheModel.createdBy = getCreatedBy();

        companyMasterCacheModel.source = getSource();

        String source = companyMasterCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            companyMasterCacheModel.source = null;
        }

        companyMasterCacheModel.address1 = getAddress1();

        String address1 = companyMasterCacheModel.address1;

        if ((address1 != null) && (address1.length() == 0)) {
            companyMasterCacheModel.address1 = null;
        }

        companyMasterCacheModel.modifiedBy = getModifiedBy();

        companyMasterCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = companyMasterCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            companyMasterCacheModel.inboundStatus = null;
        }

        companyMasterCacheModel.companyMasterSid = getCompanyMasterSid();

        companyMasterCacheModel.zipCode = getZipCode();

        String zipCode = companyMasterCacheModel.zipCode;

        if ((zipCode != null) && (zipCode.length() == 0)) {
            companyMasterCacheModel.zipCode = null;
        }

        companyMasterCacheModel.companyId = getCompanyId();

        String companyId = companyMasterCacheModel.companyId;

        if ((companyId != null) && (companyId.length() == 0)) {
            companyMasterCacheModel.companyId = null;
        }

        companyMasterCacheModel.country = getCountry();

        companyMasterCacheModel.internalNotes = getInternalNotes();

        String internalNotes = companyMasterCacheModel.internalNotes;

        if ((internalNotes != null) && (internalNotes.length() == 0)) {
            companyMasterCacheModel.internalNotes = null;
        }

        companyMasterCacheModel.orgKey = getOrgKey();

        String orgKey = companyMasterCacheModel.orgKey;

        if ((orgKey != null) && (orgKey.length() == 0)) {
            companyMasterCacheModel.orgKey = null;
        }

        companyMasterCacheModel.companyType = getCompanyType();

        companyMasterCacheModel.recordLockStatus = getRecordLockStatus();

        Date companyStartDate = getCompanyStartDate();

        if (companyStartDate != null) {
            companyMasterCacheModel.companyStartDate = companyStartDate.getTime();
        } else {
            companyMasterCacheModel.companyStartDate = Long.MIN_VALUE;
        }

        companyMasterCacheModel.companyNo = getCompanyNo();

        String companyNo = companyMasterCacheModel.companyNo;

        if ((companyNo != null) && (companyNo.length() == 0)) {
            companyMasterCacheModel.companyNo = null;
        }

        companyMasterCacheModel.batchId = getBatchId();

        String batchId = companyMasterCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            companyMasterCacheModel.batchId = null;
        }

        companyMasterCacheModel.companyStatus = getCompanyStatus();

        Date companyEndDate = getCompanyEndDate();

        if (companyEndDate != null) {
            companyMasterCacheModel.companyEndDate = companyEndDate.getTime();
        } else {
            companyMasterCacheModel.companyEndDate = Long.MIN_VALUE;
        }

        companyMasterCacheModel.city = getCity();

        String city = companyMasterCacheModel.city;

        if ((city != null) && (city.length() == 0)) {
            companyMasterCacheModel.city = null;
        }

        companyMasterCacheModel.regionCode = getRegionCode();

        String regionCode = companyMasterCacheModel.regionCode;

        if ((regionCode != null) && (regionCode.length() == 0)) {
            companyMasterCacheModel.regionCode = null;
        }

        return companyMasterCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(61);

        sb.append("{state=");
        sb.append(getState());
        sb.append(", financialSystem=");
        sb.append(getFinancialSystem());
        sb.append(", companyGroup=");
        sb.append(getCompanyGroup());
        sb.append(", companyName=");
        sb.append(getCompanyName());
        sb.append(", companyCategory=");
        sb.append(getCompanyCategory());
        sb.append(", lastUpdatedDate=");
        sb.append(getLastUpdatedDate());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", lives=");
        sb.append(getLives());
        sb.append(", address2=");
        sb.append(getAddress2());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", address1=");
        sb.append(getAddress1());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", companyMasterSid=");
        sb.append(getCompanyMasterSid());
        sb.append(", zipCode=");
        sb.append(getZipCode());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", country=");
        sb.append(getCountry());
        sb.append(", internalNotes=");
        sb.append(getInternalNotes());
        sb.append(", orgKey=");
        sb.append(getOrgKey());
        sb.append(", companyType=");
        sb.append(getCompanyType());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", companyStartDate=");
        sb.append(getCompanyStartDate());
        sb.append(", companyNo=");
        sb.append(getCompanyNo());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", companyStatus=");
        sb.append(getCompanyStatus());
        sb.append(", companyEndDate=");
        sb.append(getCompanyEndDate());
        sb.append(", city=");
        sb.append(getCity());
        sb.append(", regionCode=");
        sb.append(getRegionCode());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(94);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.CompanyMaster");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>state</column-name><column-value><![CDATA[");
        sb.append(getState());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>financialSystem</column-name><column-value><![CDATA[");
        sb.append(getFinancialSystem());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyGroup</column-name><column-value><![CDATA[");
        sb.append(getCompanyGroup());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyName</column-name><column-value><![CDATA[");
        sb.append(getCompanyName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyCategory</column-name><column-value><![CDATA[");
        sb.append(getCompanyCategory());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lastUpdatedDate</column-name><column-value><![CDATA[");
        sb.append(getLastUpdatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lives</column-name><column-value><![CDATA[");
        sb.append(getLives());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address2</column-name><column-value><![CDATA[");
        sb.append(getAddress2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>address1</column-name><column-value><![CDATA[");
        sb.append(getAddress1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyMasterSid</column-name><column-value><![CDATA[");
        sb.append(getCompanyMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>zipCode</column-name><column-value><![CDATA[");
        sb.append(getZipCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>country</column-name><column-value><![CDATA[");
        sb.append(getCountry());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>internalNotes</column-name><column-value><![CDATA[");
        sb.append(getInternalNotes());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>orgKey</column-name><column-value><![CDATA[");
        sb.append(getOrgKey());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyType</column-name><column-value><![CDATA[");
        sb.append(getCompanyType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyStartDate</column-name><column-value><![CDATA[");
        sb.append(getCompanyStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyNo</column-name><column-value><![CDATA[");
        sb.append(getCompanyNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyStatus</column-name><column-value><![CDATA[");
        sb.append(getCompanyStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyEndDate</column-name><column-value><![CDATA[");
        sb.append(getCompanyEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>city</column-name><column-value><![CDATA[");
        sb.append(getCity());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>regionCode</column-name><column-value><![CDATA[");
        sb.append(getRegionCode());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
