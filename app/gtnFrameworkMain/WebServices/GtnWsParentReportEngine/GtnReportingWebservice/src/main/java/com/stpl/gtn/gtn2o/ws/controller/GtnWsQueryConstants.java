package com.stpl.gtn.gtn2o.ws.controller;

public class GtnWsQueryConstants {

	public static final String DATA_ASSUMPTIONS_COUNT_QUERY="DECLARE @PROJECTION_STATUS VARCHAR(100) = 'null'         IF EXISTS(SELECT 1                   FROM   HELPER_TABLE                   WHERE  LIST_NAME = 'WorkFlowStatus'                          AND DESCRIPTION IN( 'Approved', 'Canceled', 'Pending' )                          AND @PROJECTION_STATUS = DESCRIPTION)           BEGIN;        WITH CTE                   AS (SELECT DISTINCT FILE_MANAGEMENT_SID = FT.FILE_MANAGEMENT_SID,                                        FORECAST_NAME = FT.FORECAST_NAME,                                        FORECAST_VERSION = FT.[VERSION],                                        HT.DESCRIPTION                     FILE_TYPE,                                        CMP.COMPANY_NAME                   COMPANY,                                        BU.COMPANY_NAME                    BUSINESS_UNIT,                                        ROW_NUMBER()                                          OVER(                                            PARTITION BY FT.FILE_TYPE                                            ORDER BY FT.FROM_PERIOD DESC ) RN,                                        FT.CREATED_DATE                    ACTIVE_FROM,                                        FT.FROM_PERIOD,                                        FT.TO_PERIOD                        FROM   FILE_MANAGEMENT FT                               INNER JOIN HELPER_TABLE HT                                       ON HT.HELPER_TABLE_SID = FT.FILE_TYPE                               INNER JOIN PROJECTION_MASTER PM                                       ON PM.BUSINESS_UNIT = FT.BUSINESS_UNIT                        AND PM.COMPANY_MASTER_SID = FT.COMPANY                              JOIN COMPANY_MASTER CMP                                 ON CMP.COMPANY_MASTER_SID = FT.COMPANY                               JOIN COMPANY_MASTER BU                                 ON BU.COMPANY_MASTER_SID = FT.BUSINESS_UNIT                        WHERE  PM.PROJECTION_MASTER_SID = 1760                               AND ( CONVERT(DATE, FT.FROM_PERIOD) <= CONVERT(DATE, Getdate()) AND FT.FROM_PERIOD IS NOT NULL )                               AND ( CONVERT(DATE, FT.TO_PERIOD) >= CONVERT(DATE, Getdate()) OR FT.TO_PERIOD IS NULL )                               AND HT.LIST_NAME = 'FILE_TYPE'),                    CTE2                    AS (SELECT PF.FILE_MANAGEMENT_SID,                               FT.FORECAST_NAME,                               CMP.COMPANY_NAME COMPANY,                               BU.COMPANY_NAME  BUSINESS_UNIT,                               HT.DESCRIPTION   FILE_TYPE,                               FT.VERSION       AS FORECAST_VERSION,                               FT.CREATED_DATE  ACTIVE_FROM,                               FT.FROM_PERIOD,                               FT.TO_PERIOD                        FROM   (SELECT DISTINCT PROJECTION_MASTER_SID,FILE_MANAGEMENT_SID,FILE_TYPE FROM PROJECTION_FILE_DETAILS) PF                               JOIN FILE_MANAGEMENT FT                                 ON FT.FILE_MANAGEMENT_SID = PF.FILE_MANAGEMENT_SID                               INNER JOIN HELPER_TABLE HT                                       ON HT.HELPER_TABLE_SID = FT.FILE_TYPE                               INNER JOIN PROJECTION_MASTER PM                                       ON PM.BUSINESS_UNIT = FT.BUSINESS_UNIT                                          AND PM.COMPANY_MASTER_SID = FT.COMPANY                                          AND PF.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID                               JOIN COMPANY_MASTER CMP                                 ON CMP.COMPANY_MASTER_SID = FT.COMPANY                               JOIN COMPANY_MASTER BU                                 ON BU.COMPANY_MASTER_SID = FT.BUSINESS_UNIT                        WHERE  PM.PROJECTION_MASTER_SID = 1760)               SELECT Count(*)               FROM   (SELECT FILE_MANAGEMENT_SID,                              FORECAST_NAME,                              COMPANY,                              BUSINESS_UNIT,                              FILE_TYPE,                              FORECAST_VERSION,                              ACTIVE_FROM,                              FROM_PERIOD,                              TO_PERIOD                       FROM   CTE C                       WHERE  RN = 1                              AND NOT EXISTS(SELECT *                                             FROM   CTE2 C2                                             WHERE  C2.BUSINESS_UNIT = C.BUSINESS_UNIT                                                    AND C2.COMPANY = C.COMPANY                                                    AND C2.FILE_TYPE = C.FILE_TYPE)                       UNION ALL                       SELECT FILE_MANAGEMENT_SID,                              FORECAST_NAME,                              COMPANY,                              BUSINESS_UNIT,                              FILE_TYPE,                              FORECAST_VERSION,                              ACTIVE_FROM,                              FROM_PERIOD,                              TO_PERIOD                       FROM   CTE2 C                       WHERE  EXISTS(SELECT *                                     FROM   CTE C2                                     WHERE  C2.BUSINESS_UNIT = C.BUSINESS_UNIT                                            AND C2.COMPANY = C.COMPANY                                            AND C2.FILE_TYPE = C.FILE_TYPE                                            AND C2.RN = 1)) A           END         ELSE           BEGIN;               WITH CTE                    AS (SELECT DISTINCT FILE_MANAGEMENT_SID = FT.FILE_MANAGEMENT_SID,                                        FORECAST_NAME = FT.FORECAST_NAME,                                        FORECAST_VERSION = FT.[VERSION],                                        HT.DESCRIPTION                     FILE_TYPE,                                        CMP.COMPANY_NAME                   COMPANY,                                        BU.COMPANY_NAME                    BUSINESS_UNIT,                                        ROW_NUMBER()                                          OVER(                                            PARTITION BY FT.FILE_TYPE                                            ORDER BY FT.FROM_PERIOD DESC ) RN,                                        FT.CREATED_DATE                    ACTIVE_FROM,                                        FT.FROM_PERIOD,                                        FT.TO_PERIOD                        FROM   FILE_MANAGEMENT FT                               INNER JOIN HELPER_TABLE HT                                       ON HT.HELPER_TABLE_SID = FT.FILE_TYPE                               INNER JOIN PROJECTION_MASTER PM                                       ON PM.BUSINESS_UNIT = FT.BUSINESS_UNIT                                          AND PM.COMPANY_MASTER_SID = FT.COMPANY                               JOIN COMPANY_MASTER CMP                                 ON CMP.COMPANY_MASTER_SID = FT.COMPANY                               JOIN COMPANY_MASTER BU                                 ON BU.COMPANY_MASTER_SID = FT.BUSINESS_UNIT                        WHERE  PM.PROJECTION_MASTER_SID = 1760                               AND ( CONVERT(DATE, FT.FROM_PERIOD) <= CONVERT(DATE, Getdate()) AND FT.FROM_PERIOD IS NOT NULL )                               AND ( CONVERT(DATE, FT.TO_PERIOD) >= CONVERT(DATE, Getdate()) OR FT.TO_PERIOD IS NULL )                               AND HT.LIST_NAME = 'FILE_TYPE')               SELECT Count(*) from ( SELECT   FILE_MANAGEMENT_SID,                         FORECAST_NAME,                         COMPANY,                         BUSINESS_UNIT,                         FILE_TYPE,                         FORECAST_VERSION,                         ACTIVE_FROM,                         FROM_PERIOD,                         TO_PERIOD               FROM   CTE              WHERE  RN = 1 ) A           END ";
	
	public static final String DATA_ASSUMPTIONS_RESULT_QUERY="        DECLARE @PROJECTION_STATUS VARCHAR(100) = 'null'            IF EXISTS (                     SELECT 1                     FROM   HELPER_TABLE                     WHERE ( LIST_NAME = 'WorkFlowStatus'                                             AND    @PROJECTION_STATUS = DESCRIPTION) or  @PROJECTION_STATUS='View'  )             BEGIN;                WITH CTE AS                (                                SELECT DISTINCT FILE_MANAGEMENT_SID = FT.FILE_MANAGEMENT_SID,                                                FORECAST_NAME =       FT.FORECAST_NAME,                                                FORECAST_VERSION = FT.[VERSION],                                                HT.DESCRIPTION                                                              FILE_TYPE,                                               CMP.COMPANY_NAME                                                            COMPANY,                                               BU.COMPANY_NAME                                                             BUSINESS_UNIT,                                               ROW_NUMBER() OVER( PARTITION BY FT.FILE_TYPE ORDER BY FT.FROM_PERIOD DESC ) RN,                                               FT.CREATED_DATE                                                             ACTIVE_FROM,                                               FT.FROM_PERIOD,                                                FT.TO_PERIOD                                FROM            FILE_MANAGEMENT FT                                INNER JOIN      HELPER_TABLE HT                                ON              HT.HELPER_TABLE_SID = FT.FILE_TYPE                                INNER JOIN      PROJECTION_MASTER PM                                ON              PM.BUSINESS_UNIT = FT.BUSINESS_UNIT                                AND             PM.COMPANY_MASTER_SID = FT.COMPANY                                JOIN            COMPANY_MASTER CMP                                ON              CMP.COMPANY_MASTER_SID = FT.COMPANY                                JOIN            COMPANY_MASTER BU                                ON              BU.COMPANY_MASTER_SID = FT.BUSINESS_UNIT                                WHERE           PM.PROJECTION_MASTER_SID = 1760                                AND            (                                                                CONVERT( DATE, FT.FROM_PERIOD ) <= CONVERT( DATE, Getdate() )                                               AND             FT.FROM_PERIOD IS NOT NULL )                                AND            (                                                                CONVERT( DATE, FT.TO_PERIOD ) >= CONVERT( DATE, Getdate() )                                               OR              FT.TO_PERIOD IS NULL )                                AND             HT.LIST_NAME = 'FILE_TYPE' ), CTE2 AS                (                           SELECT     PF.FILE_MANAGEMENT_SID,                                      FT.FORECAST_NAME,                                      CMP.COMPANY_NAME    COMPANY,                                      BU.COMPANY_NAME     BUSINESS_UNIT,                                      HT.DESCRIPTION      FILE_TYPE,                                      FT.VERSION       AS FORECAST_VERSION,                                      FT.CREATED_DATE     ACTIVE_FROM,                                      FT.FROM_PERIOD,                                      FT.TO_PERIOD                           FROM       (SELECT DISTINCT PROJECTION_MASTER_SID,FILE_MANAGEMENT_SID,FILE_TYPE FROM PROJECTION_FILE_DETAILS) PF                           JOIN       FILE_MANAGEMENT FT                           ON         FT.FILE_MANAGEMENT_SID = PF.FILE_MANAGEMENT_SID                           INNER JOIN HELPER_TABLE HT                           ON         HT.HELPER_TABLE_SID = FT.FILE_TYPE                           INNER JOIN PROJECTION_MASTER PM                           ON         PM.BUSINESS_UNIT = FT.BUSINESS_UNIT                           AND        PM.COMPANY_MASTER_SID = FT.COMPANY                           AND        PF.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID                           JOIN       COMPANY_MASTER CMP                           ON         CMP.COMPANY_MASTER_SID = FT.COMPANY                           JOIN       COMPANY_MASTER BU                           ON         BU.COMPANY_MASTER_SID = FT.BUSINESS_UNIT                           WHERE      PM.PROJECTION_MASTER_SID = 1760 )                SELECT   FILE_MANAGEMENT_SID,                         FORECAST_NAME,                         COMPANY,                         BUSINESS_UNIT,                         FILE_TYPE,                         FORECAST_VERSION,                         ACTIVE_FROM,                         FROM_PERIOD,                         TO_PERIOD                FROM     (                                SELECT FILE_MANAGEMENT_SID,                                       FORECAST_NAME,                                       COMPANY,                                       BUSINESS_UNIT,                                       FILE_TYPE,                                       FORECAST_VERSION,                                       ACTIVE_FROM,                                       FROM_PERIOD,                                       TO_PERIOD                                FROM   CTE C                                WHERE  RN = 1                                AND    NOT EXISTS                                       (                                              SELECT *                                              FROM   CTE2 C2                                              WHERE  C2.BUSINESS_UNIT = C.BUSINESS_UNIT                                              AND    C2.COMPANY = C.COMPANY                                              AND    C2.FILE_TYPE = C.FILE_TYPE )                                UNION ALL                                SELECT FILE_MANAGEMENT_SID,                                       FORECAST_NAME,                                       COMPANY,                                       BUSINESS_UNIT,                                       FILE_TYPE,                                       FORECAST_VERSION,                                       ACTIVE_FROM,                                       FROM_PERIOD,                                       TO_PERIOD                                FROM   CTE2 C                                WHERE  EXISTS                                       (                                              SELECT *                                              FROM   CTE C2                                              WHERE  C2.BUSINESS_UNIT = C.BUSINESS_UNIT                                              AND    C2.COMPANY = C.COMPANY                                              AND    C2.FILE_TYPE = C.FILE_TYPE                                              AND    C2.RN = 1 ) ) A          ORDER BY FILE_MANAGEMENT_SID ASC OFFSET 0  ROWS FETCH NEXT  1  ROWS ONLY;                         END              ELSE              BEGIN;                WITH CTE AS                (                                SELECT DISTINCT FILE_MANAGEMENT_SID = FT.FILE_MANAGEMENT_SID,                                                FORECAST_NAME =       FT.FORECAST_NAME,                                                FORECAST_VERSION = FT.[VERSION],                                                HT.DESCRIPTION                                                              FILE_TYPE,                                               CMP.COMPANY_NAME                                                            COMPANY,                                               BU.COMPANY_NAME                                                             BUSINESS_UNIT,                                               ROW_NUMBER() OVER( PARTITION BY FT.FILE_TYPE ORDER BY FT.FROM_PERIOD DESC ) RN,                                               FT.CREATED_DATE                                                             ACTIVE_FROM,                                               FT.FROM_PERIOD,                                                FT.TO_PERIOD                                FROM            FILE_MANAGEMENT FT                                INNER JOIN      HELPER_TABLE HT                                ON              HT.HELPER_TABLE_SID = FT.FILE_TYPE                                INNER JOIN      PROJECTION_MASTER PM                                ON              PM.BUSINESS_UNIT = FT.BUSINESS_UNIT                                AND             PM.COMPANY_MASTER_SID = FT.COMPANY                                JOIN            COMPANY_MASTER CMP                                ON              CMP.COMPANY_MASTER_SID = FT.COMPANY                                JOIN            COMPANY_MASTER BU                                ON              BU.COMPANY_MASTER_SID = FT.BUSINESS_UNIT                                WHERE           PM.PROJECTION_MASTER_SID = 1760                                AND            (                                                                CONVERT( DATE, FT.FROM_PERIOD ) <= CONVERT( DATE, Getdate() )                                               AND             FT.FROM_PERIOD IS NOT NULL )                                AND            (                                                                CONVERT( DATE, FT.TO_PERIOD ) >= CONVERT( DATE, Getdate() )                                               OR              FT.TO_PERIOD IS NULL )                                AND             HT.LIST_NAME = 'FILE_TYPE' )                SELECT      FORECAST_NAME,                         COMPANY,                         BUSINESS_UNIT,                         FILE_TYPE,                         FORECAST_VERSION,                         ACTIVE_FROM,                         FROM_PERIOD,                         TO_PERIOD                FROM     CTE                  WHERE   RN = 1  ORDER BY FILE_MANAGEMENT_SID ASC OFFSET 0  ROWS FETCH NEXT  10  ROWS ONLY ;                              END";
	
}
