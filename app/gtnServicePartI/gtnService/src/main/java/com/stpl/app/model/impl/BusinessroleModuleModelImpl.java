/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.BusinessroleModule;
import com.stpl.app.model.BusinessroleModuleModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the BusinessroleModule service. Represents a row in the &quot;BUSINESSROLE_MODULE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link BusinessroleModuleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link BusinessroleModuleImpl}.
 * </p>
 *
 * @author
 * @see BusinessroleModuleImpl
 * @see BusinessroleModule
 * @see BusinessroleModuleModel
 * @generated
 */
@ProviderType
public class BusinessroleModuleModelImpl extends BaseModelImpl<BusinessroleModule>
	implements BusinessroleModuleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a businessrole module model instance should use the {@link BusinessroleModule} interface instead.
	 */
	public static final String TABLE_NAME = "BUSINESSROLE_MODULE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CREATED_BY", Types.INTEGER },
			{ "BUSINESSROLE_MODULE_SID", Types.INTEGER },
			{ "BUSINESSROLE_MASTER_SID", Types.INTEGER },
			{ "ADD_FLAG", Types.VARCHAR },
			{ "VIEW_FLAG", Types.VARCHAR },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SUBMODULE_PROPERTY_ID", Types.INTEGER },
			{ "EDIT_FLAG", Types.VARCHAR },
			{ "VERSION_NO", Types.INTEGER },
			{ "ACCESS_MODULE", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("BUSINESSROLE_MODULE_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("BUSINESSROLE_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ADD_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VIEW_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SUBMODULE_PROPERTY_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("EDIT_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VERSION_NO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ACCESS_MODULE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table BUSINESSROLE_MODULE (CREATED_BY INTEGER,BUSINESSROLE_MODULE_SID INTEGER not null primary key IDENTITY,BUSINESSROLE_MASTER_SID INTEGER,ADD_FLAG VARCHAR(75) null,VIEW_FLAG VARCHAR(75) null,MODIFIED_BY INTEGER,CREATED_DATE DATE null,SUBMODULE_PROPERTY_ID INTEGER,EDIT_FLAG VARCHAR(75) null,VERSION_NO INTEGER,ACCESS_MODULE VARCHAR(75) null,MODIFIED_DATE DATE null)";
	public static final String TABLE_SQL_DROP = "drop table BUSINESSROLE_MODULE";
	public static final String ORDER_BY_JPQL = " ORDER BY businessroleModule.businessroleModuleSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY BUSINESSROLE_MODULE.BUSINESSROLE_MODULE_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.BusinessroleModule"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.BusinessroleModule"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.BusinessroleModule"));

	public BusinessroleModuleModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _businessroleModuleSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setBusinessroleModuleSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _businessroleModuleSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return BusinessroleModule.class;
	}

	@Override
	public String getModelClassName() {
		return BusinessroleModule.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("createdBy", getCreatedBy());
		attributes.put("businessroleModuleSid", getBusinessroleModuleSid());
		attributes.put("businessroleMasterSid", getBusinessroleMasterSid());
		attributes.put("addFlag", getAddFlag());
		attributes.put("viewFlag", getViewFlag());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("submodulePropertyId", getSubmodulePropertyId());
		attributes.put("editFlag", getEditFlag());
		attributes.put("versionNo", getVersionNo());
		attributes.put("accessModule", getAccessModule());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer businessroleModuleSid = (Integer)attributes.get(
				"businessroleModuleSid");

		if (businessroleModuleSid != null) {
			setBusinessroleModuleSid(businessroleModuleSid);
		}

		Integer businessroleMasterSid = (Integer)attributes.get(
				"businessroleMasterSid");

		if (businessroleMasterSid != null) {
			setBusinessroleMasterSid(businessroleMasterSid);
		}

		String addFlag = (String)attributes.get("addFlag");

		if (addFlag != null) {
			setAddFlag(addFlag);
		}

		String viewFlag = (String)attributes.get("viewFlag");

		if (viewFlag != null) {
			setViewFlag(viewFlag);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Integer submodulePropertyId = (Integer)attributes.get(
				"submodulePropertyId");

		if (submodulePropertyId != null) {
			setSubmodulePropertyId(submodulePropertyId);
		}

		String editFlag = (String)attributes.get("editFlag");

		if (editFlag != null) {
			setEditFlag(editFlag);
		}

		Integer versionNo = (Integer)attributes.get("versionNo");

		if (versionNo != null) {
			setVersionNo(versionNo);
		}

		String accessModule = (String)attributes.get("accessModule");

		if (accessModule != null) {
			setAccessModule(accessModule);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getBusinessroleModuleSid() {
		return _businessroleModuleSid;
	}

	@Override
	public void setBusinessroleModuleSid(int businessroleModuleSid) {
		_businessroleModuleSid = businessroleModuleSid;
	}

	@Override
	public int getBusinessroleMasterSid() {
		return _businessroleMasterSid;
	}

	@Override
	public void setBusinessroleMasterSid(int businessroleMasterSid) {
		_businessroleMasterSid = businessroleMasterSid;
	}

	@Override
	public String getAddFlag() {
		if (_addFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _addFlag;
		}
	}

	@Override
	public void setAddFlag(String addFlag) {
		_addFlag = addFlag;
	}

	@Override
	public String getViewFlag() {
		if (_viewFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _viewFlag;
		}
	}

	@Override
	public void setViewFlag(String viewFlag) {
		_viewFlag = viewFlag;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public int getSubmodulePropertyId() {
		return _submodulePropertyId;
	}

	@Override
	public void setSubmodulePropertyId(int submodulePropertyId) {
		_submodulePropertyId = submodulePropertyId;
	}

	@Override
	public String getEditFlag() {
		if (_editFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _editFlag;
		}
	}

	@Override
	public void setEditFlag(String editFlag) {
		_editFlag = editFlag;
	}

	@Override
	public int getVersionNo() {
		return _versionNo;
	}

	@Override
	public void setVersionNo(int versionNo) {
		_versionNo = versionNo;
	}

	@Override
	public String getAccessModule() {
		if (_accessModule == null) {
			return StringPool.BLANK;
		}
		else {
			return _accessModule;
		}
	}

	@Override
	public void setAccessModule(String accessModule) {
		_accessModule = accessModule;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public BusinessroleModule toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (BusinessroleModule)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		BusinessroleModuleImpl businessroleModuleImpl = new BusinessroleModuleImpl();

		businessroleModuleImpl.setCreatedBy(getCreatedBy());
		businessroleModuleImpl.setBusinessroleModuleSid(getBusinessroleModuleSid());
		businessroleModuleImpl.setBusinessroleMasterSid(getBusinessroleMasterSid());
		businessroleModuleImpl.setAddFlag(getAddFlag());
		businessroleModuleImpl.setViewFlag(getViewFlag());
		businessroleModuleImpl.setModifiedBy(getModifiedBy());
		businessroleModuleImpl.setCreatedDate(getCreatedDate());
		businessroleModuleImpl.setSubmodulePropertyId(getSubmodulePropertyId());
		businessroleModuleImpl.setEditFlag(getEditFlag());
		businessroleModuleImpl.setVersionNo(getVersionNo());
		businessroleModuleImpl.setAccessModule(getAccessModule());
		businessroleModuleImpl.setModifiedDate(getModifiedDate());

		businessroleModuleImpl.resetOriginalValues();

		return businessroleModuleImpl;
	}

	@Override
	public int compareTo(BusinessroleModule businessroleModule) {
		int primaryKey = businessroleModule.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof BusinessroleModule)) {
			return false;
		}

		BusinessroleModule businessroleModule = (BusinessroleModule)obj;

		int primaryKey = businessroleModule.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<BusinessroleModule> toCacheModel() {
		BusinessroleModuleCacheModel businessroleModuleCacheModel = new BusinessroleModuleCacheModel();

		businessroleModuleCacheModel.createdBy = getCreatedBy();

		businessroleModuleCacheModel.businessroleModuleSid = getBusinessroleModuleSid();

		businessroleModuleCacheModel.businessroleMasterSid = getBusinessroleMasterSid();

		businessroleModuleCacheModel.addFlag = getAddFlag();

		String addFlag = businessroleModuleCacheModel.addFlag;

		if ((addFlag != null) && (addFlag.length() == 0)) {
			businessroleModuleCacheModel.addFlag = null;
		}

		businessroleModuleCacheModel.viewFlag = getViewFlag();

		String viewFlag = businessroleModuleCacheModel.viewFlag;

		if ((viewFlag != null) && (viewFlag.length() == 0)) {
			businessroleModuleCacheModel.viewFlag = null;
		}

		businessroleModuleCacheModel.modifiedBy = getModifiedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			businessroleModuleCacheModel.createdDate = createdDate.getTime();
		}
		else {
			businessroleModuleCacheModel.createdDate = Long.MIN_VALUE;
		}

		businessroleModuleCacheModel.submodulePropertyId = getSubmodulePropertyId();

		businessroleModuleCacheModel.editFlag = getEditFlag();

		String editFlag = businessroleModuleCacheModel.editFlag;

		if ((editFlag != null) && (editFlag.length() == 0)) {
			businessroleModuleCacheModel.editFlag = null;
		}

		businessroleModuleCacheModel.versionNo = getVersionNo();

		businessroleModuleCacheModel.accessModule = getAccessModule();

		String accessModule = businessroleModuleCacheModel.accessModule;

		if ((accessModule != null) && (accessModule.length() == 0)) {
			businessroleModuleCacheModel.accessModule = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			businessroleModuleCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			businessroleModuleCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return businessroleModuleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(25);

		sb.append("{createdBy=");
		sb.append(getCreatedBy());
		sb.append(", businessroleModuleSid=");
		sb.append(getBusinessroleModuleSid());
		sb.append(", businessroleMasterSid=");
		sb.append(getBusinessroleMasterSid());
		sb.append(", addFlag=");
		sb.append(getAddFlag());
		sb.append(", viewFlag=");
		sb.append(getViewFlag());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", submodulePropertyId=");
		sb.append(getSubmodulePropertyId());
		sb.append(", editFlag=");
		sb.append(getEditFlag());
		sb.append(", versionNo=");
		sb.append(getVersionNo());
		sb.append(", accessModule=");
		sb.append(getAccessModule());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(40);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.BusinessroleModule");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>businessroleModuleSid</column-name><column-value><![CDATA[");
		sb.append(getBusinessroleModuleSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>businessroleMasterSid</column-name><column-value><![CDATA[");
		sb.append(getBusinessroleMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addFlag</column-name><column-value><![CDATA[");
		sb.append(getAddFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>viewFlag</column-name><column-value><![CDATA[");
		sb.append(getViewFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>submodulePropertyId</column-name><column-value><![CDATA[");
		sb.append(getSubmodulePropertyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>editFlag</column-name><column-value><![CDATA[");
		sb.append(getEditFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>versionNo</column-name><column-value><![CDATA[");
		sb.append(getVersionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accessModule</column-name><column-value><![CDATA[");
		sb.append(getAccessModule());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = BusinessroleModule.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			BusinessroleModule.class
		};
	private int _createdBy;
	private int _businessroleModuleSid;
	private int _businessroleMasterSid;
	private String _addFlag;
	private String _viewFlag;
	private int _modifiedBy;
	private Date _createdDate;
	private int _submodulePropertyId;
	private String _editFlag;
	private int _versionNo;
	private String _accessModule;
	private Date _modifiedDate;
	private BusinessroleModule _escapedModel;
}