$wnd.com_stpl_app_v8_AppWidgetSet.runAsyncCallback1("var $intern_218 = {55:1, 352:1, 3:1, 26:1, 15:1}, $intern_220 = {56:1, 16:1, 13:1, 14:1, 12:1, 35:1, 38:1, 17:1, 36:1, 11:1, 10:1, 259:1, 24:1}, $intern_221 = {287:1, 8:1}, $intern_222 = {645:1};\nfunction $toSource(this$static){\n  this$static.toSource?this$static.toSource():'NO SOURCE';\n}\n\nfunction $clinit_Style$TextDecoration(){\n  $clinit_Style$TextDecoration = emptyMethod;\n  BLINK = new Style$TextDecoration$1;\n  LINE_THROUGH = new Style$TextDecoration$2;\n  NONE_4 = new Style$TextDecoration$3;\n  OVERLINE = new Style$TextDecoration$4;\n  UNDERLINE = new Style$TextDecoration$5;\n}\n\nfunction Style$TextDecoration(enum$name, enum$ordinal){\n  Enum.call(this, enum$name, enum$ordinal);\n}\n\nfunction valueOf_16(name_0){\n  $clinit_Style$TextDecoration();\n  return valueOf(($clinit_Style$TextDecoration$Map() , $MAP_14), name_0);\n}\n\nfunction values_15(){\n  $clinit_Style$TextDecoration();\n  return stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit, 1), $intern_2, 352, 0, [BLINK, LINE_THROUGH, NONE_4, OVERLINE, UNDERLINE]);\n}\n\ndefineClass(352, 15, $intern_218);\nvar BLINK, LINE_THROUGH, NONE_4, OVERLINE, UNDERLINE;\nvar Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextDecoration', 352, Ljava_lang_Enum_2_classLit, values_15, valueOf_16);\nfunction Style$TextDecoration$1(){\n  Style$TextDecoration.call(this, 'BLINK', 0);\n}\n\ndefineClass(1317, 352, $intern_218, Style$TextDecoration$1);\nvar Lcom_google_gwt_dom_client_Style$TextDecoration$1_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextDecoration/1', 1317, Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit, null, null);\nfunction Style$TextDecoration$2(){\n  Style$TextDecoration.call(this, 'LINE_THROUGH', 1);\n}\n\ndefineClass(1318, 352, $intern_218, Style$TextDecoration$2);\nvar Lcom_google_gwt_dom_client_Style$TextDecoration$2_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextDecoration/2', 1318, Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit, null, null);\nfunction Style$TextDecoration$3(){\n  Style$TextDecoration.call(this, 'NONE', 2);\n}\n\ndefineClass(1319, 352, $intern_218, Style$TextDecoration$3);\nvar Lcom_google_gwt_dom_client_Style$TextDecoration$3_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextDecoration/3', 1319, Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit, null, null);\nfunction Style$TextDecoration$4(){\n  Style$TextDecoration.call(this, 'OVERLINE', 3);\n}\n\ndefineClass(1320, 352, $intern_218, Style$TextDecoration$4);\nvar Lcom_google_gwt_dom_client_Style$TextDecoration$4_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextDecoration/4', 1320, Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit, null, null);\nfunction Style$TextDecoration$5(){\n  Style$TextDecoration.call(this, 'UNDERLINE', 4);\n}\n\ndefineClass(1321, 352, $intern_218, Style$TextDecoration$5);\nvar Lcom_google_gwt_dom_client_Style$TextDecoration$5_2_classLit = createForEnum('com.google.gwt.dom.client', 'Style/TextDecoration/5', 1321, Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit, null, null);\nfunction $clinit_Style$TextDecoration$Map(){\n  $clinit_Style$TextDecoration$Map = emptyMethod;\n  $MAP_14 = createValueOfMap(($clinit_Style$TextDecoration() , stampJavaTypeInfo(getClassLiteralForArray(Lcom_google_gwt_dom_client_Style$TextDecoration_2_classLit, 1), $intern_2, 352, 0, [BLINK, LINE_THROUGH, NONE_4, OVERLINE, UNDERLINE])));\n}\n\nvar $MAP_14;\nfunction inject(css){\n  $clinit_StyleInjector();\n  $push(toInject, css);\n  schedule();\n}\n\nfunction $getDefaultNative(){\n  return ['USD', 'US$', 2, 'US$', '$'];\n}\n\nfunction $getNumberConstants(this$static){\n  !this$static.numberConstants && (this$static.numberConstants = new NumberConstantsImpl_);\n  return this$static.numberConstants;\n}\n\nfunction $clinit_NumberFormat(){\n  $clinit_NumberFormat = emptyMethod;\n  $getNumberConstants(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1));\n}\n\nfunction $addExponent(this$static, digits){\n  var exponentDigits, i_0;\n  digits.string += 'E';\n  if (this$static.exponent < 0) {\n    this$static.exponent = -this$static.exponent;\n    digits.string += '-';\n  }\n  exponentDigits = '' + this$static.exponent;\n  for (i_0 = exponentDigits.length; i_0 < this$static.minExponentDigits; ++i_0) {\n    digits.string += '0';\n  }\n  digits.string += exponentDigits;\n}\n\nfunction $addZeroAndDecimal(this$static, digits, decimalSeparator){\n  if (this$static.digitsLength == 0) {\n    digits.string = digits.string.substr(0, 0) + '0' + digits.string.substr(0);\n    ++this$static.decimalPosition;\n    ++this$static.digitsLength;\n  }\n  if (this$static.decimalPosition < this$static.digitsLength || this$static.decimalSeparatorAlwaysShown) {\n    $insert_4(digits, this$static.decimalPosition, String.fromCharCode(decimalSeparator));\n    ++this$static.digitsLength;\n  }\n}\n\nfunction $adjustFractionDigits(this$static, digits){\n  var requiredDigits, toRemove;\n  requiredDigits = this$static.decimalPosition + this$static.minimumFractionDigits;\n  if (this$static.digitsLength < requiredDigits) {\n    while (this$static.digitsLength < requiredDigits) {\n      digits.string += '0';\n      ++this$static.digitsLength;\n    }\n  }\n   else {\n    toRemove = this$static.decimalPosition + this$static.maximumFractionDigits;\n    toRemove > this$static.digitsLength && (toRemove = this$static.digitsLength);\n    while (toRemove > requiredDigits && $charAt_0(digits.string, toRemove - 1) == 48) {\n      --toRemove;\n    }\n    if (toRemove < this$static.digitsLength) {\n      $delete(digits, toRemove, this$static.digitsLength);\n      this$static.digitsLength = toRemove;\n    }\n  }\n}\n\nfunction $computeExponent(this$static, digits){\n  var remainder, strip;\n  strip = 0;\n  while (strip < this$static.digitsLength - 1 && $charAt_0(digits.string, strip) == 48) {\n    ++strip;\n  }\n  if (strip > 0) {\n    digits.string = digits.string.substr(0, 0) + '' + $substring_0(digits.string, strip);\n    this$static.digitsLength -= strip;\n    this$static.exponent -= strip;\n  }\n  if (this$static.maximumIntegerDigits > this$static.minimumIntegerDigits && this$static.maximumIntegerDigits > 0) {\n    this$static.exponent += this$static.decimalPosition - 1;\n    remainder = this$static.exponent % this$static.maximumIntegerDigits;\n    remainder < 0 && (remainder += this$static.maximumIntegerDigits);\n    this$static.decimalPosition = remainder + 1;\n    this$static.exponent -= remainder;\n  }\n   else {\n    this$static.exponent += this$static.decimalPosition - this$static.minimumIntegerDigits;\n    this$static.decimalPosition = this$static.minimumIntegerDigits;\n  }\n  if (this$static.digitsLength == 1 && $charAt_0(digits.string, 0) == 48) {\n    this$static.exponent = 0;\n    this$static.decimalPosition = this$static.minimumIntegerDigits;\n  }\n}\n\nfunction $format_0(this$static, number){\n  var buf, isNegative, preRound, scale;\n  if (isNaN(number)) {\n    return 'NaN';\n  }\n  isNegative = number < 0 || number == 0 && 1 / number < 0;\n  isNegative && (number = -number);\n  buf = new StringBuilder;\n  if (!isNaN(number) && !isFinite(number)) {\n    $append_5(buf, isNegative?this$static.negativePrefix:this$static.positivePrefix);\n    buf.string += '\\u221E';\n    $append_5(buf, isNegative?this$static.negativeSuffix:this$static.positiveSuffix);\n    return buf.string;\n  }\n  number *= this$static.multiplier;\n  scale = toScaledString(buf, number);\n  preRound = buf.string.length + scale + this$static.maximumFractionDigits + 3;\n  if (preRound > 0 && preRound < buf.string.length && $charAt_0(buf.string, preRound) == 57) {\n    $propagateCarry(this$static, buf, preRound - 1);\n    scale += buf.string.length - preRound;\n    $delete(buf, preRound, buf.string.length);\n  }\n  $format_1(this$static, isNegative, buf, scale);\n  return buf.string;\n}\n\nfunction $format_1(this$static, isNegative, digits, scale){\n  var currentGroupingSize, decimalSeparator, groupingSeparator, useExponent, zeroChar;\n  if (this$static.isCurrencyFormat) {\n    decimalSeparator = (checkCriticalStringElementIndex(0, '.'.length) , '.'.charCodeAt(0));\n    groupingSeparator = (checkCriticalStringElementIndex(0, ','.length) , ','.charCodeAt(0));\n  }\n   else {\n    decimalSeparator = (checkCriticalStringElementIndex(0, '.'.length) , '.'.charCodeAt(0));\n    groupingSeparator = (checkCriticalStringElementIndex(0, ','.length) , ','.charCodeAt(0));\n  }\n  this$static.exponent = 0;\n  this$static.digitsLength = digits.string.length;\n  this$static.decimalPosition = this$static.digitsLength + scale;\n  useExponent = this$static.useExponentialNotation;\n  currentGroupingSize = this$static.groupingSize;\n  this$static.decimalPosition > $intern_45 && (useExponent = true);\n  useExponent && $computeExponent(this$static, digits);\n  $processLeadingZeros(this$static, digits);\n  $roundValue(this$static, digits);\n  $insertGroupingSeparators(this$static, digits, groupingSeparator, currentGroupingSize);\n  $adjustFractionDigits(this$static, digits);\n  $addZeroAndDecimal(this$static, digits, decimalSeparator);\n  useExponent && $addExponent(this$static, digits);\n  zeroChar = (checkCriticalStringElementIndex(0, '0'.length) , '0'.charCodeAt(0));\n  zeroChar != 48 && $localizeDigits(digits, zeroChar);\n  $insert_4(digits, 0, isNegative?this$static.negativePrefix:this$static.positivePrefix);\n  $append_5(digits, isNegative?this$static.negativeSuffix:this$static.positiveSuffix);\n}\n\nfunction $insertGroupingSeparators(this$static, digits, groupingSeparator, g){\n  var i_0;\n  if (g > 0) {\n    for (i_0 = g; i_0 < this$static.decimalPosition; i_0 += g + 1) {\n      $insert_4(digits, this$static.decimalPosition - i_0, String.fromCharCode(groupingSeparator));\n      ++this$static.decimalPosition;\n      ++this$static.digitsLength;\n    }\n  }\n}\n\nfunction $localizeDigits(digits, zero){\n  var ch_0, i_0, n;\n  n = digits.string.length;\n  for (i_0 = 0; i_0 < n; ++i_0) {\n    ch_0 = $charAt_0(digits.string, i_0);\n    ch_0 >= 48 && ch_0 <= 57 && $setCharAt(digits, i_0, ch_0 - 48 + zero & $intern_31);\n  }\n}\n\nfunction $parseAffix(this$static, pattern, start_0, affix, inNegativePattern){\n  var ch_0, inQuote, len, pos;\n  $delete(affix, 0, affix.string.length);\n  inQuote = false;\n  len = pattern.length;\n  for (pos = start_0; pos < len; ++pos) {\n    ch_0 = (checkCriticalStringElementIndex(pos, pattern.length) , pattern.charCodeAt(pos));\n    if (ch_0 == 39) {\n      if (pos + 1 < len && (checkCriticalStringElementIndex(pos + 1, pattern.length) , pattern.charCodeAt(pos + 1) == 39)) {\n        ++pos;\n        affix.string += \"'\";\n      }\n       else {\n        inQuote = !inQuote;\n      }\n      continue;\n    }\n    if (inQuote) {\n      affix.string += String.fromCharCode(ch_0);\n    }\n     else {\n      switch (ch_0) {\n        case 35:\n        case 48:\n        case 44:\n        case 46:\n        case 59:\n          return pos - start_0;\n        case 164:\n          this$static.isCurrencyFormat = true;\n          if (pos + 1 < len && (checkCriticalStringElementIndex(pos + 1, pattern.length) , pattern.charCodeAt(pos + 1) == 164)) {\n            ++pos;\n            if (pos < len - 2 && (checkCriticalStringElementIndex(pos + 1, pattern.length) , pattern.charCodeAt(pos + 1) == 164) && (checkCriticalStringElementIndex(pos + 2, pattern.length) , pattern.charCodeAt(pos + 2) == 164)) {\n              pos += 2;\n              $append_5(affix, $getSimpleCurrencySymbol(this$static.currencyData));\n            }\n             else {\n              $append_5(affix, this$static.currencyData[0]);\n            }\n          }\n           else {\n            $append_5(affix, this$static.currencyData[1]);\n          }\n\n          break;\n        case 37:\n          if (!inNegativePattern) {\n            if (this$static.multiplier != 1) {\n              throw toJs(new IllegalArgumentException_0('Too many percent/per mille characters in pattern \"' + pattern + '\"'));\n            }\n            this$static.multiplier = 100;\n          }\n\n          affix.string += '%';\n          break;\n        case 8240:\n          if (!inNegativePattern) {\n            if (this$static.multiplier != 1) {\n              throw toJs(new IllegalArgumentException_0('Too many percent/per mille characters in pattern \"' + pattern + '\"'));\n            }\n            this$static.multiplier = $intern_30;\n          }\n\n          affix.string += '\\u2030';\n          break;\n        case 45:\n          affix.string += '-';\n          break;\n        default:affix.string += String.fromCharCode(ch_0);\n      }\n    }\n  }\n  return len - start_0;\n}\n\nfunction $parsePattern_0(this$static, pattern){\n  var affix, pos;\n  pos = 0;\n  affix = new StringBuilder;\n  pos += $parseAffix(this$static, pattern, 0, affix, false);\n  this$static.positivePrefix = affix.string;\n  pos += $parseTrunk(this$static, pattern, pos, false);\n  pos += $parseAffix(this$static, pattern, pos, affix, false);\n  this$static.positiveSuffix = affix.string;\n  if (pos < pattern.length && (checkCriticalStringElementIndex(pos, pattern.length) , pattern.charCodeAt(pos) == 59)) {\n    ++pos;\n    pos += $parseAffix(this$static, pattern, pos, affix, true);\n    this$static.negativePrefix = affix.string;\n    pos += $parseTrunk(this$static, pattern, pos, true);\n    pos += $parseAffix(this$static, pattern, pos, affix, true);\n    this$static.negativeSuffix = affix.string;\n  }\n   else {\n    this$static.negativePrefix = '-' + this$static.positivePrefix;\n    this$static.negativeSuffix = this$static.positiveSuffix;\n  }\n}\n\nfunction $parseTrunk(this$static, pattern, start_0, ignorePattern){\n  var ch_0, decimalPos, digitLeftCount, digitRightCount, effectiveDecimalPos, groupingCount, len, loop, n, pos, totalDigits, zeroDigitCount;\n  decimalPos = -1;\n  digitLeftCount = 0;\n  zeroDigitCount = 0;\n  digitRightCount = 0;\n  groupingCount = -1;\n  len = pattern.length;\n  pos = start_0;\n  loop = true;\n  for (; pos < len && loop; ++pos) {\n    ch_0 = (checkCriticalStringElementIndex(pos, pattern.length) , pattern.charCodeAt(pos));\n    switch (ch_0) {\n      case 35:\n        zeroDigitCount > 0?++digitRightCount:++digitLeftCount;\n        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;\n        break;\n      case 48:\n        if (digitRightCount > 0) {\n          throw toJs(new IllegalArgumentException_0(\"Unexpected '0' in pattern \\\"\" + pattern + '\"'));\n        }\n\n        ++zeroDigitCount;\n        groupingCount >= 0 && decimalPos < 0 && ++groupingCount;\n        break;\n      case 44:\n        groupingCount = 0;\n        break;\n      case 46:\n        if (decimalPos >= 0) {\n          throw toJs(new IllegalArgumentException_0('Multiple decimal separators in pattern \"' + pattern + '\"'));\n        }\n\n        decimalPos = digitLeftCount + zeroDigitCount + digitRightCount;\n        break;\n      case 69:\n        if (!ignorePattern) {\n          if (this$static.useExponentialNotation) {\n            throw toJs(new IllegalArgumentException_0('Multiple exponential symbols in pattern \"' + pattern + '\"'));\n          }\n          this$static.useExponentialNotation = true;\n          this$static.minExponentDigits = 0;\n        }\n\n        while (pos + 1 < len && (checkCriticalStringElementIndex(pos + 1, pattern.length) , pattern.charCodeAt(pos + 1) == 48)) {\n          ++pos;\n          ignorePattern || ++this$static.minExponentDigits;\n        }\n\n        if (!ignorePattern && digitLeftCount + zeroDigitCount < 1 || this$static.minExponentDigits < 1) {\n          throw toJs(new IllegalArgumentException_0('Malformed exponential pattern \"' + pattern + '\"'));\n        }\n\n        loop = false;\n        break;\n      default:--pos;\n        loop = false;\n    }\n  }\n  if (zeroDigitCount == 0 && digitLeftCount > 0 && decimalPos >= 0) {\n    n = decimalPos;\n    decimalPos == 0 && ++n;\n    digitRightCount = digitLeftCount - n;\n    digitLeftCount = n - 1;\n    zeroDigitCount = 1;\n  }\n  if (decimalPos < 0 && digitRightCount > 0 || decimalPos >= 0 && (decimalPos < digitLeftCount || decimalPos > digitLeftCount + zeroDigitCount) || groupingCount == 0) {\n    throw toJs(new IllegalArgumentException_0('Malformed pattern \"' + pattern + '\"'));\n  }\n  if (ignorePattern) {\n    return pos - start_0;\n  }\n  totalDigits = digitLeftCount + zeroDigitCount + digitRightCount;\n  this$static.maximumFractionDigits = decimalPos >= 0?totalDigits - decimalPos:0;\n  if (decimalPos >= 0) {\n    this$static.minimumFractionDigits = digitLeftCount + zeroDigitCount - decimalPos;\n    this$static.minimumFractionDigits < 0 && (this$static.minimumFractionDigits = 0);\n  }\n  effectiveDecimalPos = decimalPos >= 0?decimalPos:totalDigits;\n  this$static.minimumIntegerDigits = effectiveDecimalPos - digitLeftCount;\n  if (this$static.useExponentialNotation) {\n    this$static.maximumIntegerDigits = digitLeftCount + this$static.minimumIntegerDigits;\n    this$static.maximumFractionDigits == 0 && this$static.minimumIntegerDigits == 0 && (this$static.minimumIntegerDigits = 1);\n  }\n  this$static.groupingSize = groupingCount > 0?groupingCount:0;\n  this$static.decimalSeparatorAlwaysShown = decimalPos == 0 || decimalPos == totalDigits;\n  return pos - start_0;\n}\n\nfunction $processLeadingZeros(this$static, digits){\n  var i_0, prefix, strip;\n  if (this$static.decimalPosition > this$static.digitsLength) {\n    while (this$static.digitsLength < this$static.decimalPosition) {\n      digits.string += '0';\n      ++this$static.digitsLength;\n    }\n  }\n  if (!this$static.useExponentialNotation) {\n    if (this$static.decimalPosition < this$static.minimumIntegerDigits) {\n      prefix = new StringBuilder;\n      while (this$static.decimalPosition < this$static.minimumIntegerDigits) {\n        prefix.string += '0';\n        ++this$static.decimalPosition;\n        ++this$static.digitsLength;\n      }\n      $insert_4(digits, 0, prefix.string);\n    }\n     else if (this$static.decimalPosition > this$static.minimumIntegerDigits) {\n      strip = this$static.decimalPosition - this$static.minimumIntegerDigits;\n      for (i_0 = 0; i_0 < strip; ++i_0) {\n        if ($charAt_0(digits.string, i_0) != 48) {\n          strip = i_0;\n          break;\n        }\n      }\n      if (strip > 0) {\n        digits.string = digits.string.substr(0, 0) + '' + $substring_0(digits.string, strip);\n        this$static.digitsLength -= strip;\n        this$static.decimalPosition -= strip;\n      }\n    }\n  }\n}\n\nfunction $propagateCarry(this$static, digits, i_0){\n  var carry, digit;\n  carry = true;\n  while (carry && i_0 >= 0) {\n    digit = $charAt_0(digits.string, i_0);\n    if (digit == 57) {\n      $setCharAt(digits, i_0--, 48);\n    }\n     else {\n      $setCharAt(digits, i_0, digit + 1 & $intern_31);\n      carry = false;\n    }\n  }\n  if (carry) {\n    digits.string = digits.string.substr(0, 0) + '1' + digits.string.substr(0);\n    ++this$static.decimalPosition;\n    ++this$static.digitsLength;\n  }\n}\n\nfunction $roundValue(this$static, digits){\n  var i_0;\n  if (this$static.digitsLength > this$static.decimalPosition + this$static.maximumFractionDigits && $charAt(digits, this$static.decimalPosition + this$static.maximumFractionDigits) >= 53) {\n    i_0 = this$static.decimalPosition + this$static.maximumFractionDigits - 1;\n    $propagateCarry(this$static, digits, i_0);\n  }\n}\n\nfunction NumberFormat(pattern, cdata, userSuppliedPattern){\n  if (!cdata) {\n    throw toJs(new IllegalArgumentException_0('Unknown currency code'));\n  }\n  this.pattern = pattern;\n  this.currencyData = cdata;\n  $parsePattern_0(this, this.pattern);\n  if (!userSuppliedPattern && this.isCurrencyFormat) {\n    this.minimumFractionDigits = this.currencyData[2] & 7;\n    this.maximumFractionDigits = this.minimumFractionDigits;\n  }\n}\n\nfunction NumberFormat_0(pattern, cdata){\n  $clinit_NumberFormat();\n  NumberFormat.call(this, pattern, cdata, true);\n}\n\nfunction toScaledString(buf, val){\n  var dot, expDigits, expIdx, scale, startLen;\n  startLen = buf.string.length;\n  $append_5(buf, val.toPrecision(20));\n  scale = 0;\n  expIdx = $indexOf_3(buf.string, 'e', startLen);\n  expIdx < 0 && (expIdx = $indexOf_3(buf.string, 'E', startLen));\n  if (expIdx >= 0) {\n    expDigits = expIdx + 1;\n    expDigits < buf.string.length && $charAt_0(buf.string, expDigits) == 43 && ++expDigits;\n    expDigits < buf.string.length && (scale = __parseAndValidateInt($substring_0(buf.string, expDigits), 10));\n    $delete(buf, expIdx, buf.string.length);\n  }\n  dot = $indexOf_3(buf.string, '.', startLen);\n  if (dot >= 0) {\n    buf.string = $substring_1(buf.string, 0, dot) + '' + $substring_0(buf.string, dot + 1);\n    scale -= buf.string.length - dot;\n  }\n  return scale;\n}\n\ndefineClass(866, 1, {}, NumberFormat_0);\n_.decimalPosition = 0;\n_.decimalSeparatorAlwaysShown = false;\n_.digitsLength = 0;\n_.exponent = 0;\n_.groupingSize = 3;\n_.isCurrencyFormat = false;\n_.maximumFractionDigits = 3;\n_.maximumIntegerDigits = 40;\n_.minExponentDigits = 0;\n_.minimumFractionDigits = 0;\n_.minimumIntegerDigits = 1;\n_.multiplier = 1;\n_.negativePrefix = '-';\n_.negativeSuffix = '';\n_.positivePrefix = '';\n_.positiveSuffix = '';\n_.useExponentialNotation = false;\nvar Lcom_google_gwt_i18n_client_NumberFormat_2_classLit = createForClass('com.google.gwt.i18n.client', 'NumberFormat', 866, Ljava_lang_Object_2_classLit);\nfunction NumberConstantsImpl_(){\n}\n\ndefineClass(2458, 1, {}, NumberConstantsImpl_);\nvar Lcom_google_gwt_i18n_client_constants_NumberConstantsImpl_1_2_classLit = createForClass('com.google.gwt.i18n.client.constants', 'NumberConstantsImpl_', 2458, Ljava_lang_Object_2_classLit);\nfunction $getSimpleCurrencySymbol(this$static){\n  return this$static[4] || this$static[1];\n}\n\nfunction $getColor(logLevel){\n  if (logLevel == ($clinit_Level() , $intern_0)) {\n    return '#000';\n  }\n  if (logLevel >= $intern_30) {\n    return '#F00';\n  }\n  if (logLevel >= 900) {\n    return '#E56717';\n  }\n  if (logLevel >= 800) {\n    return '#20b000';\n  }\n  if (logLevel >= 700) {\n    return '#2B60DE';\n  }\n  if (logLevel >= 500) {\n    return '#F0F';\n  }\n  if (logLevel >= 400) {\n    return '#F0F';\n  }\n  if (logLevel >= 300) {\n    return '#F0F';\n  }\n  return '#000';\n}\n\nfunction $getEscaped(text_0){\n  text_0 = $replaceAll(text_0, '<', '&lt;');\n  text_0 = $replaceAll(text_0, '>', '&gt;');\n  text_0 = $replaceAll(text_0, '\\t', '&nbsp;&nbsp;&nbsp;');\n  return text_0;\n}\n\ndefineClass(1333, 3409, {});\n_.format_0 = function format_0(event_0){\n  var html;\n  html = new StringBuilder;\n  $append_5(html, this.getHtmlPrefix(event_0));\n  $append_5(html, this.getRecordInfo(event_0, '<br>'));\n  $append_5(html, $getEscaped(event_0.msg));\n  if (this.showStackTraces && !!event_0.thrown) {\n    html.string += '<br>';\n    $printStackTraceImpl(event_0.thrown, new HtmlLogFormatter$1(html, html), '', '');\n  }\n  $append_5(html, this.getHtmlSuffix(event_0));\n  return html.string;\n}\n;\n_.getHtmlPrefix = function getHtmlPrefix(event_0){\n  var prefix;\n  prefix = new StringBuilder;\n  prefix.string += \"<span style='color:\";\n  $append_5(prefix, $getColor(event_0.level.intValue()));\n  prefix.string += \"'>\";\n  prefix.string += '<code>';\n  return prefix.string;\n}\n;\n_.getHtmlSuffix = function getHtmlSuffix(event_0){\n  return '<\\/code><\\/span>';\n}\n;\n_.showStackTraces = false;\nvar Lcom_google_gwt_logging_client_HtmlLogFormatter_2_classLit = createForClass('com.google.gwt.logging.client', 'HtmlLogFormatter', 1333, Lcom_google_gwt_logging_impl_FormatterImpl_2_classLit);\nfunction HtmlLogFormatter$1($anonymous0, val$html){\n  this.val$html3 = val$html;\n  StackTracePrintStream.call(this, $anonymous0);\n}\n\ndefineClass(1340, 966, {}, HtmlLogFormatter$1);\n_.append = function append_0(str){\n  $append_5(this.val$html3, $getEscaped(str));\n}\n;\n_.newLine = function newLine_0(){\n  $append_5(this.val$html3, '<br>');\n}\n;\nvar Lcom_google_gwt_logging_client_HtmlLogFormatter$1_2_classLit = createForClass('com.google.gwt.logging.client', 'HtmlLogFormatter/1', 1340, Lcom_google_gwt_logging_impl_StackTracePrintStream_2_classLit);\nfunction DataResourcePrototype(uri_0){\n  this.uri_0 = uri_0;\n}\n\ndefineClass(777, 1, {}, DataResourcePrototype);\nvar Lcom_google_gwt_resources_client_impl_DataResourcePrototype_2_classLit = createForClass('com.google.gwt.resources.client.impl', 'DataResourcePrototype', 777, Ljava_lang_Object_2_classLit);\nfunction $getTitle(this$static){\n  return $getPropertyString(($clinit_DOM() , this$static.element_0), 'title');\n}\n\ndefineClass(130, 10, $intern_61);\n_.addDoubleClickHandler = function addDoubleClickHandler(handler){\n  return $addDomHandler(this, handler, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n}\n;\nfunction $getHTML(this$static){\n  return ($clinit_DOM() , this$static.element_0).innerHTML;\n}\n\ndefineClass(1034, 36, $intern_66);\n_.addDoubleClickHandler = function addDoubleClickHandler_0(handler){\n  return $addDomHandler(this, handler, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n}\n;\ndefineClass(2948, 73, $intern_219);\n_.addDoubleClickHandler = function addDoubleClickHandler_1(handler){\n  return $addDomHandler(this, handler, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n}\n;\ndefineClass(126, 722, $intern_68);\n_.addDoubleClickHandler = function addDoubleClickHandler_2(handler){\n  return $addDomHandler(this, handler, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n}\n;\ndefineClass(344, 10, $intern_71);\n_.addDoubleClickHandler = function addDoubleClickHandler_3(handler){\n  return $addHandler_1(this, handler, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n}\n;\nfunction initDebugWindow(){\n  $clinit_ApplicationConfiguration();\n  var debugParameter, errorNotificationHandler, window_0;\n  window_0 = ($clinit_VDebugWindow() , !instance_3 && (instance_3 = new VDebugWindow) , $clinit_VDebugWindow() , instance_3);\n  loggingIsEnabled() && $addSection(window_0, new LogSection);\n  $addSection(window_0, new InfoSection);\n  $addSection(window_0, new HierarchySection);\n  $addSection(window_0, new NetworkSection);\n  $addSection(window_0, new TestBenchSection);\n  debugParameter = getParameter('debug');\n  if (isDebugAvailable() && debugParameter != null && $equals_10(debugParameter.substr(0, 1), 'q')) {\n    $close_0(window_0);\n  }\n   else {\n    $ensureInjected(($clinit_DebugWindowStyles_default_InlineClientBundleGenerator$cssInitializer() , css_0));\n    $show_1(window_0);\n    $scheduleFinally(($clinit_SchedulerImpl() , INSTANCE), new VDebugWindow$5(window_0));\n  }\n  impl_4 = window_0;\n  errorNotificationHandler = new ErrorNotificationHandler;\n  $addHandler_3(getLogger(''), errorNotificationHandler);\n}\n\ndefineClass(1134, 1, $intern_83);\n_.onSuccess_1 = function onSuccess_1(){\n  initDebugWindow();\n  registerCallback(($clinit_Impl() , $moduleName));\n}\n;\nfunction $getAtmosphereJSVersion(){\n  if ($wnd.vaadinPush && $wnd.vaadinPush.atmosphere) {\n    return $wnd.vaadinPush.atmosphere.version;\n  }\n   else {\n    return null;\n  }\n}\n\nfunction $highlightConnector(this$static, serverConnector){\n  $showServerDebugInfo_0(this$static.uIConnector, serverConnector);\n}\n\nfunction $add_11(this$static, child){\n  $add_13(this$static, child, ($clinit_DOM() , this$static.children));\n}\n\nfunction $add_12(this$static, child, container){\n  $add_13(this$static, child, ($clinit_DOM() , container));\n}\n\nfunction $add_13(this$static, child, container){\n  $add_1(this$static, child, container);\n  this$static.handle.style['display'] = ($clinit_Style$Display() , 'inline-block');\n  ($clinit_DOM() , this$static.element_0).style['paddingLeft'] = ($clinit_Style$Unit() , '3.0px');\n}\n\nfunction $addItem_1(this$static, text_0){\n  var label_0;\n  label_0 = new Label_1(text_0);\n  $add_12(this$static, label_0, this$static.children);\n}\n\nfunction $close(this$static){\n  this$static.children.style['display'] = ($clinit_Style$Display() , 'none');\n  this$static.handle.innerHTML = '+';\n}\n\nfunction $open_0(this$static, recursive){\n  var str, w, w$iterator;\n  this$static.handle.innerHTML = '-';\n  this$static.children.style['display'] = ($clinit_Style$Display() , 'block');\n  if (recursive) {\n    for (w$iterator = new WidgetCollection$WidgetIterator(this$static.children_0); w$iterator.index_0 < w$iterator.this$01.size_0;) {\n      w = $next_1(w$iterator);\n      if (instanceOf(w, 259)) {\n        str = castTo(w, 259);\n        str.open_1(true);\n      }\n    }\n  }\n}\n\nfunction $setText_4(this$static, text_0){\n  $setInnerText(this$static.text_0, text_0);\n}\n\nfunction SimpleTree(){\n  var style;\n  ComplexPanel.call(this);\n  this.children = $doc.createElement('div');\n  this.handle = $doc.createElement('span');\n  this.text_0 = $doc.createElement('span');\n  $setElement(this, $doc.createElement('div'));\n  style = ($clinit_DOM() , this.element_0).style;\n  style['whiteSpace'] = 'nowrap';\n  style['padding'] = ($clinit_Style$Unit() , '3.0px');\n  style['paddingLeft'] = '12.0px';\n  style = this.handle.style;\n  style['display'] = ($clinit_Style$Display() , 'none');\n  style['textAlign'] = ($clinit_Style$TextAlign() , 'center');\n  style['width'] = '0.5em';\n  style['height'] = '0.5em';\n  style['cursor'] = ($clinit_Style$Cursor() , 'pointer');\n  style['backgroundColor'] = 'gray';\n  style['color'] = 'white';\n  style['padding'] = '4.0px';\n  style['marginRight'] = '3.0px';\n  style['lineHeight'] = '0.5em';\n  this.handle.innerHTML = '+';\n  $appendChild(this.element_0, this.handle);\n  $appendChild(this.element_0, this.text_0);\n  style = this.children.style;\n  style['paddingLeft'] = '1.5em';\n  style['display'] = 'none';\n  $appendChild(this.element_0, this.children);\n  $addDomHandler(this, new SimpleTree$1(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n}\n\nfunction SimpleTree_0(caption){\n  SimpleTree.call(this);\n  $setInnerText(this.text_0, caption);\n}\n\ndefineClass(259, 337, $intern_220, SimpleTree_0);\n_.add_1 = function add_10(child){\n  $add_11(this, child);\n}\n;\n_.add_2 = function add_11(child, container){\n  $add_13(this, child, container);\n}\n;\n_.addDoubleClickHandler = function addDoubleClickHandler_4(handler){\n  if (!this.textDoubleClickHandlerManager) {\n    this.textDoubleClickHandlerManager = new HandlerManager(this);\n    $addDomHandler(this, new SimpleTree$2(this), ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n  }\n  return $addHandler(this.textDoubleClickHandlerManager, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3), handler);\n}\n;\n_.open_1 = function open_4(recursive){\n  $open_0(this, recursive);\n}\n;\n_.select_1 = function select_0(event_0){\n}\n;\nvar Lcom_vaadin_client_SimpleTree_2_classLit = createForClass('com.vaadin.client', 'SimpleTree', 259, Lcom_google_gwt_user_client_ui_ComplexPanel_2_classLit);\nfunction SimpleTree$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1408, 1, $intern_63, SimpleTree$1);\n_.onClick = function onClick_3(event_0){\n  $eventGetTarget(event_0.nativeEvent) == this.this$01.handle?$intern(this.this$01.children.style['display']) == ($clinit_Style$Display() , 'none')?this.this$01.open_1(!!event_0.nativeEvent.altKey):$close(this.this$01):$eventGetTarget(event_0.nativeEvent) == this.this$01.text_0 && this.this$01.select_1(event_0);\n}\n;\nvar Lcom_vaadin_client_SimpleTree$1_2_classLit = createForClass('com.vaadin.client', 'SimpleTree/1', 1408, Ljava_lang_Object_2_classLit);\nfunction SimpleTree$2(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1409, 1, $intern_221, SimpleTree$2);\n_.onDoubleClick = function onDoubleClick(event_0){\n  $eventGetTarget(event_0.nativeEvent) == this.this$01.text_0 && $fireEvent(this.this$01.textDoubleClickHandlerManager, event_0);\n}\n;\nvar Lcom_vaadin_client_SimpleTree$2_2_classLit = createForClass('com.vaadin.client', 'SimpleTree/2', 1409, Ljava_lang_Object_2_classLit);\nfunction $getAttributeNames(this$static){\n  var keySet;\n  keySet = $getKeySet(this$static[1]);\n  keySet.map_0.remove_4('v') != null;\n  return keySet;\n}\n\nfunction $getStringArrayAttribute(this$static, name_0){\n  return $getStringArray(this$static[1], name_0);\n}\n\nfunction $clinit_VUIDLBrowser(){\n  $clinit_VUIDLBrowser = emptyMethod;\n  var style;\n  highlight_0 = $doc.createElement('div');\n  style = highlight_0.style;\n  style['position'] = ($clinit_Style$Position() , 'absolute');\n  style['zIndex'] = '11000';\n  style['backgroundColor'] = 'red';\n  style.opacity = 0.2;\n  ($clinit_BrowserInfo() , !instance_2 && (instance_2 = new BrowserInfo) , $clinit_BrowserInfo() , instance_2).browserDetails.isIE && (style['filter'] = 'alpha(opacity=20)' , undefined);\n}\n\nfunction VUIDLBrowser(u, client){\n  $clinit_VUIDLBrowser();\n  var change, connectorId, connectorId$iterator, entry, entry0, i_0, jsValueMapArray, key, key$iterator, keySet, outerIter, outerIter0, stateChanges, stateJson, uidl, valueMap;\n  SimpleTree.call(this);\n  this.client = client;\n  valueMap = u['meta'];\n  'hl' in valueMap && (this.highlightedPid = valueMap['hl']);\n  keySet = $getKeySet(u);\n  for (key$iterator = (outerIter0 = (new AbstractMap$1(keySet.map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter0)); key$iterator.val$outerIter2.hasNext_0();) {\n    key = (entry0 = castTo(key$iterator.val$outerIter2.next_1(), 29) , castToString(entry0.getKey()));\n    if ($equals_10(key, 'state')) {\n      stateJson = u[key];\n      stateChanges = new SimpleTree_0('shared state');\n      for (connectorId$iterator = (outerIter = (new AbstractMap$1($getKeySet(stateJson).map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter)); connectorId$iterator.val$outerIter2.hasNext_0();) {\n        connectorId = (entry = castTo(connectorId$iterator.val$outerIter2.next_1(), 29) , castToString(entry.getKey()));\n        $add_11(stateChanges, new VUIDLBrowser$SharedStateItem(this, connectorId, stateJson[connectorId]));\n      }\n      $add_13(this, stateChanges, ($clinit_DOM() , this.children));\n    }\n     else if ($equals_10(key, 'changes')) {\n      jsValueMapArray = u[key];\n      for (i_0 = 0; i_0 < jsValueMapArray.length; i_0++) {\n        uidl = jsValueMapArray[i_0];\n        change = new VUIDLBrowser$UIDLItem(this, uidl);\n        ('change ' + i_0).length == 0?(($clinit_DOM() , change.element_0).removeAttribute('title') , undefined):$setAttribute(($clinit_DOM() , change.element_0), 'title', 'change ' + i_0);\n        $add_13(this, change, ($clinit_DOM() , this.children));\n      }\n    }\n     else \n      $equals_10(key, 'meta');\n  }\n  $open_0(this, this.highlightedPid != null);\n  'Alt-click handle to open recursively. '.length == 0?(($clinit_DOM() , this.element_0).removeAttribute('title') , undefined):(($clinit_DOM() , this.element_0).setAttribute('title', 'Alt-click handle to open recursively. ') , undefined);\n}\n\nfunction highlight_1(paintable){\n  $clinit_VUIDLBrowser();\n  var style, w;\n  if (paintable) {\n    w = paintable.getWidget_0();\n    style = highlight_0.style;\n    style['top'] = $getAbsoluteTop(($clinit_DOM() , w.element_0)) + ($clinit_Style$Unit() , 'px');\n    style['left'] = $getAbsoluteLeft(w.element_0) + 'px';\n    style['width'] = w.getOffsetWidth() + 'px';\n    style['height'] = w.getOffsetHeight() + 'px';\n    $appendChild(($clinit_RootPanel() , $doc.body), highlight_0);\n  }\n}\n\ndefineClass(2476, 259, $intern_220, VUIDLBrowser);\nvar highlight_0;\nvar Lcom_vaadin_client_VUIDLBrowser_2_classLit = createForClass('com.vaadin.client', 'VUIDLBrowser', 2476, Lcom_vaadin_client_SimpleTree_2_classLit);\nfunction VUIDLBrowser$StateChangeItem(this$0){\n  this.this$01_0 = this$0;\n  SimpleTree.call(this);\n  'Alt-click handle to open recursively. '.length == 0?(($clinit_DOM() , this.element_0).removeAttribute('title') , undefined):(($clinit_DOM() , this.element_0).setAttribute('title', 'Alt-click handle to open recursively. ') , undefined);\n  $addDomHandler(this, new VUIDLBrowser$StateChangeItem$1, ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_11));\n}\n\ndefineClass(1016, 259, $intern_220);\n_.select_1 = function select_1(event_0){\n  var cc, connector;\n  connector = $getConnector_2(this.this$01_0.client.connectorMap, this.getConnectorId());\n  !!connector && $highlightConnector(connector.getConnection(), connector);\n  while (!!connector && !instanceOf(connector, 18)) {\n    connector = connector.getParent_0();\n  }\n  if (connector) {\n    cc = castTo(connector, 18);\n    highlight_1(cc);\n  }\n}\n;\nvar Lcom_vaadin_client_VUIDLBrowser$StateChangeItem_2_classLit = createForClass('com.vaadin.client', 'VUIDLBrowser/StateChangeItem', 1016, Lcom_vaadin_client_SimpleTree_2_classLit);\nfunction $dir(this$static, array, tree){\n  var i_0;\n  for (i_0 = 0; i_0 < array.length; ++i_0) {\n    $dir_1(this$static, '' + i_0, array[i_0], tree);\n  }\n}\n\nfunction $dir_0(this$static, state, tree){\n  var key, key$array, key$index, key$max, str;\n  for (key$array = (str = $keys0(state) , str) , key$index = 0 , key$max = key$array.length; key$index < key$max; ++key$index) {\n    key = key$array[key$index];\n    $dir_1(this$static, key, state[key], tree);\n  }\n}\n\nfunction $dir_1(this$static, key, value_0, tree){\n  var label_0, subtree;\n  if ($getType(value_0) == ($clinit_JsonType() , OBJECT)) {\n    subtree = new SimpleTree_0(key + '=object');\n    $add_13(tree, subtree, ($clinit_DOM() , tree.children));\n    $dir_0(this$static, value_0, subtree);\n  }\n   else if ($getType(value_0) == ARRAY) {\n    subtree = new SimpleTree_0(key + '=array');\n    $dir(this$static, value_0, subtree);\n    $add_13(tree, subtree, ($clinit_DOM() , tree.children));\n  }\n   else {\n    label_0 = new Label_1(key + '=' + value_0);\n    $add_12(tree, label_0, tree.children);\n  }\n}\n\nfunction VUIDLBrowser$SharedStateItem(this$0, connectorId, stateChanges){\n  var connector;\n  VUIDLBrowser$StateChangeItem.call(this, this$0);\n  this.connectorId = connectorId;\n  connector = $getConnector_2(this.this$01_0.client.connectorMap, this.connectorId);\n  connector?$setText_4(this, getConnectorString(connector)):$setInnerText(this.text_0, 'Unknown connector (' + connectorId + ')');\n  $dir_0(this, stateChanges, this);\n}\n\ndefineClass(2477, 1016, $intern_220, VUIDLBrowser$SharedStateItem);\n_.getConnectorId = function getConnectorId_0(){\n  return this.connectorId;\n}\n;\nvar Lcom_vaadin_client_VUIDLBrowser$SharedStateItem_2_classLit = createForClass('com.vaadin.client', 'VUIDLBrowser/SharedStateItem', 2477, Lcom_vaadin_client_VUIDLBrowser$StateChangeItem_2_classLit);\nfunction VUIDLBrowser$StateChangeItem$1(){\n}\n\ndefineClass(2478, 1, $intern_133, VUIDLBrowser$StateChangeItem$1);\n_.onMouseOut = function onMouseOut_0(event_0){\n  $clinit_VUIDLBrowser();\n  !!$getParentElement(highlight_0) && $removeChild($getParentElement(highlight_0), highlight_0);\n}\n;\nvar Lcom_vaadin_client_VUIDLBrowser$StateChangeItem$1_2_classLit = createForClass('com.vaadin.client', 'VUIDLBrowser/StateChangeItem/1', 2478, Ljava_lang_Object_2_classLit);\nfunction $dir_2(this$static){\n  var attributeNames, child, count, entry, i_0, i0, intVal, keyArray, label_0, map_0, name_0, name$iterator, name$iterator0, nodeName, outerIter, outerIter0, stringArrayAttribute, tmp, value_0, variableNames;\n  $remove_2(this$static, $get_3(this$static.children_0, 0));\n  nodeName = this$static.uidl[0];\n  try {\n    nodeName = $getNodeName(this$static.this$01.client.configuration, __parseAndValidateInt(nodeName, 10));\n  }\n   catch ($e0) {\n    $e0 = toJava($e0);\n    if (!instanceOf($e0, 50))\n      throw toJs($e0);\n  }\n  attributeNames = $getAttributeNames(this$static.uidl);\n  for (name$iterator0 = (outerIter0 = (new AbstractMap$1(attributeNames.map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter0)); name$iterator0.val$outerIter2.hasNext_0();) {\n    name_0 = (entry = castTo(name$iterator0.val$outerIter2.next_1(), 29) , castToString(entry.getKey()));\n    if (typeof this$static.uidl[1][name_0] == 'object') {\n      try {\n        map_0 = this$static.uidl[1][name_0];\n        keyArray = $getKeyArray(map_0);\n        nodeName += ' ' + name_0 + '=' + '{';\n        for (i0 = 0; i0 < keyArray.length; i0++) {\n          nodeName += keyArray[i0] + ':' + ('' + map_0[keyArray[i0]]) + ',';\n        }\n        nodeName += '}';\n      }\n       catch ($e1) {\n        $e1 = toJava($e1);\n        if (!instanceOf($e1, 50))\n          throw toJs($e1);\n      }\n    }\n     else {\n      value_0 = '' + this$static.uidl[1][name_0];\n      nodeName += ' ' + name_0 + '=' + value_0;\n    }\n  }\n  $setInnerText(this$static.text_0, nodeName);\n  try {\n    tmp = null;\n    variableNames = $getVariableNames(this$static.uidl);\n    for (name$iterator = (outerIter = (new AbstractMap$1(variableNames.map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter)); name$iterator.val$outerIter2.hasNext_0();) {\n      name_0 = (entry = castTo(name$iterator.val$outerIter2.next_1(), 29) , castToString(entry.getKey()));\n      try {\n        value_0 = '' + this$static.uidl[1]['v'][name_0];\n      }\n       catch ($e4) {\n        $e4 = toJava($e4);\n        if (instanceOf($e4, 50)) {\n          try {\n            stringArrayAttribute = $getStringArrayAttribute(this$static.uidl, name_0);\n            value_0 = toString_10(stringArrayAttribute);\n          }\n           catch ($e3) {\n            $e3 = toJava($e3);\n            if (instanceOf($e3, 50)) {\n              try {\n                intVal = this$static.uidl[1]['v'][name_0];\n                value_0 = '' + intVal;\n              }\n               catch ($e2) {\n                $e2 = toJava($e2);\n                if (instanceOf($e2, 50)) {\n                  value_0 = 'unknown';\n                }\n                 else \n                  throw toJs($e2);\n              }\n            }\n             else \n              throw toJs($e3);\n          }\n        }\n         else \n          throw toJs($e4);\n      }\n      !tmp && (tmp = new SimpleTree_0('variables'));\n      label_0 = new Label_1(name_0 + '=' + value_0);\n      $add_12(tmp, label_0, tmp.children);\n    }\n    !!tmp && $add_13(this$static, tmp, ($clinit_DOM() , this$static.children));\n  }\n   catch ($e5) {\n    $e5 = toJava($e5);\n    if (!instanceOf($e5, 50))\n      throw toJs($e5);\n  }\n  i_0 = new UIDL$1(this$static.uidl);\n  while (count = i_0.this$01.length - 2 , count > i_0.index_0 + 1) {\n    child = $next_2(i_0);\n    try {\n      $add_11(this$static, new VUIDLBrowser$UIDLItem(this$static.this$01, castToJso(child)));\n    }\n     catch ($e6) {\n      $e6 = toJava($e6);\n      if (instanceOf($e6, 50)) {\n        $addItem_1(this$static, toString_10(child));\n      }\n       else \n        throw toJs($e6);\n    }\n  }\n  if (this$static.this$01.highlightedPid != null && $equals_10(this$static.this$01.highlightedPid, this$static.uidl[1]['id'])) {\n    ($clinit_DOM() , this$static.element_0).style['backgroundColor'] = '#fdd';\n    $scheduleDeferred_0(($clinit_SchedulerImpl() , INSTANCE), new VUIDLBrowser$UIDLItem$1(this$static));\n  }\n}\n\nfunction $getNodeName(conf, tag){\n  var widgetClassByDecodedTag;\n  widgetClassByDecodedTag = $getConnectorClassByEncodedTag(conf, tag);\n  return widgetClassByDecodedTag == Lcom_vaadin_client_ui_UnknownComponentConnector_2_classLit || widgetClassByDecodedTag == Lcom_vaadin_client_ui_UnknownExtensionConnector_2_classLit?$getUnknownServerClassNameByTag(conf, tag) + '(NO CLIENT IMPLEMENTATION FOUND)':($ensureNamesAreInitialized(widgetClassByDecodedTag) , widgetClassByDecodedTag.typeName);\n}\n\nfunction VUIDLBrowser$UIDLItem(this$0, uidl){\n  var label_0, name_0;\n  this.this$01 = this$0;\n  VUIDLBrowser$StateChangeItem.call(this, this$0);\n  this.uidl = uidl;\n  try {\n    name_0 = uidl[0];\n    try {\n      name_0 = $getNodeName(this$0.client.configuration, __parseAndValidateInt(name_0, 10));\n    }\n     catch ($e0) {\n      $e0 = toJava($e0);\n      if (!instanceOf($e0, 50))\n        throw toJs($e0);\n    }\n    $setInnerText(this.text_0, name_0);\n    label_0 = new Label_1('LOADING');\n    $add_12(this, label_0, this.children);\n  }\n   catch ($e1) {\n    $e1 = toJava($e1);\n    if (instanceOf($e1, 50)) {\n      $setText_4(this, toStringSimple(uidl));\n    }\n     else \n      throw toJs($e1);\n  }\n}\n\ndefineClass(1017, 1016, $intern_220, VUIDLBrowser$UIDLItem);\n_.getConnectorId = function getConnectorId_1(){\n  return this.uidl[1]['id'];\n}\n;\n_.open_1 = function open_5(recursive){\n  this.children_0.size_0 == 1 && $equals_10($getElement($get_3(this.children_0, 0)).textContent, 'LOADING') && $dir_2(this);\n  $open_0(this, recursive);\n}\n;\nvar Lcom_vaadin_client_VUIDLBrowser$UIDLItem_2_classLit = createForClass('com.vaadin.client', 'VUIDLBrowser/UIDLItem', 1017, Lcom_vaadin_client_VUIDLBrowser$StateChangeItem_2_classLit);\nfunction VUIDLBrowser$UIDLItem$1(this$1){\n  this.this$11 = this$1;\n}\n\ndefineClass(2479, 1, $intern_9, VUIDLBrowser$UIDLItem$1);\n_.execute_1 = function execute_21(){\n  $scrollIntoView($getElement(this.this$11));\n}\n;\nvar Lcom_vaadin_client_VUIDLBrowser$UIDLItem$1_2_classLit = createForClass('com.vaadin.client', 'VUIDLBrowser/UIDLItem/1', 2479, Ljava_lang_Object_2_classLit);\nfunction $getCommunicationMethodName(this$static){\n  var clientToServer, serverToClient;\n  clientToServer = 'XHR';\n  serverToClient = '-';\n  if (this$static.push_0) {\n    serverToClient = this$static.push_0.transport_0;\n    $isBidirectional(this$static.push_0) && (clientToServer = serverToClient);\n  }\n  return 'Client to server: ' + clientToServer + ', ' + 'server to client: ' + serverToClient;\n}\n\nfunction $isValidForLegacyLocator(this$static, path){\n  var ls, ls$iterator;\n  for (ls$iterator = new AbstractList$IteratorImpl(this$static.locatorStrategies); ls$iterator.i < ls$iterator.this$01_0.size_1();) {\n    ls = (checkCriticalElement(ls$iterator.i < ls$iterator.this$01_0.size_1()) , castTo(ls$iterator.this$01_0.get_2(ls$iterator.last = ls$iterator.i++), 583));\n    if (instanceOf(ls, 864)) {\n      return ls.validatePath(path);\n    }\n  }\n  return false;\n}\n\nfunction $addListener(this$static, listener){\n  $add_22(this$static.listeners, listener);\n}\n\nfunction $findZeroSizeComponents(this$static, zeroHeightComponents, zeroWidthComponents, connector){\n  var children, computedStyle, serverConnector, serverConnector$iterator, widget;\n  widget = connector.getWidget_0();\n  computedStyle = new ComputedStyle(($clinit_DOM() , widget.element_0));\n  $getIntProperty(computedStyle, 'height') == 0 && zeroHeightComponents.add_3(connector);\n  $getIntProperty(computedStyle, 'width') == 0 && zeroWidthComponents.add_3(connector);\n  children = connector.getChildren();\n  for (serverConnector$iterator = children.iterator(); serverConnector$iterator.hasNext_0();) {\n    serverConnector = castTo(serverConnector$iterator.next_1(), 25);\n    instanceOf(serverConnector, 18) && $findZeroSizeComponents(this$static, zeroHeightComponents, zeroWidthComponents, castTo(serverConnector, 18));\n  }\n}\n\nfunction $fireSelectEvent(this$static, connector){\n  var listener, listener$iterator;\n  for (listener$iterator = new ArrayList$1(this$static.listeners); listener$iterator.i < listener$iterator.this$01.array.length;) {\n    listener = castTo($next_7(listener$iterator), 1105);\n    listener.select_3(connector, null);\n  }\n}\n\nfunction $meta(this$static, ac, meta){\n  var i_0, root, size_0, valueMapArray, zeroHeightComponents, zeroWidthComponents;\n  $clear_2(this$static);\n  valueMapArray = meta['invalidLayouts'];\n  size_0 = valueMapArray.length;\n  if (size_0 > 0) {\n    root = new SimpleTree_0('Layouts analyzed, ' + size_0 + ' top level problems');\n    for (i_0 = 0; i_0 < size_0; i_0++) {\n      $printLayoutError(this$static, ac, valueMapArray[i_0], root);\n    }\n    $open_0(root, false);\n    $add_1(this$static, root, ($clinit_DOM() , this$static.element_0));\n  }\n   else {\n    $add_5(this$static, new Label_1('Layouts analyzed, no top level problems'));\n  }\n  zeroHeightComponents = new HashSet;\n  zeroWidthComponents = new HashSet;\n  $findZeroSizeComponents(this$static, zeroHeightComponents, zeroWidthComponents, ac.uIConnector);\n  if (zeroHeightComponents.map_0.size_1() > 0 || zeroWidthComponents.map_0.size_1() > 0) {\n    $add_5(this$static, new HTML_1('<h4> Client side notifications<\\/h4> <em>The following relative sized components were rendered to a zero size container on the client side. Note that these are not necessarily invalid states, but reported here as they might be.<\\/em>'));\n    if (zeroHeightComponents.map_0.size_1() > 0) {\n      $add_5(this$static, new HTML_1('<p><strong>Vertically zero size:<\\/strong><\\/p>'));\n      $printClientSideDetectedIssues(this$static, zeroHeightComponents);\n    }\n    if (zeroWidthComponents.map_0.size_1() > 0) {\n      $add_5(this$static, new HTML_1('<p><strong>Horizontally zero size:<\\/strong><\\/p>'));\n      $printClientSideDetectedIssues(this$static, zeroWidthComponents);\n    }\n  }\n}\n\nfunction $printClientSideDetectedIssues(this$static, zeroSized){\n  var connector, connector$iterator, entry, errorDetails, outerIter, parent_0, parentConnector, parentId, parents;\n  parents = new HashSet;\n  for (connector$iterator = (outerIter = (new AbstractMap$1(zeroSized.map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter)); connector$iterator.val$outerIter2.hasNext_0();) {\n    connector = (entry = castTo(connector$iterator.val$outerIter2.next_1(), 29) , castTo(entry.getKey(), 18));\n    parent_0 = connector.getParent_0();\n    parentId = parent_0.getConnectorId();\n    errorDetails = new Label_1($getSimpleName(getClass__Ljava_lang_Class___devirtual$(connector)) + '[' + connector.getConnectorId() + ']' + ' inside ' + $getSimpleName(getClass__Ljava_lang_Class___devirtual$(parent_0)));\n    if (instanceOf(parent_0, 18)) {\n      parentConnector = castTo(parent_0, 18);\n      if (!parents.map_0.containsKey(parentId)) {\n        parents.map_0.put(parentId, parents);\n        show_3(parentConnector, 'yellow');\n      }\n      $addDomHandler(errorDetails, new AnalyzeLayoutsPanel$1(parentConnector, connector, errorDetails), ($clinit_MouseOverEvent() , $clinit_MouseOverEvent() , TYPE_12));\n      $addDomHandler(errorDetails, new AnalyzeLayoutsPanel$2(errorDetails), ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_11));\n      $addDomHandler(errorDetails, new AnalyzeLayoutsPanel$3(this$static, connector), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n    }\n    show_3(connector, 'red');\n    $add_1(this$static, errorDetails, ($clinit_DOM() , this$static.element_0));\n  }\n}\n\nfunction $printLayoutError(this$static, ac, valueMap, root){\n  var connector, errorDetails, errorNode, i_0, l, pid, suberrors, value_0;\n  pid = valueMap['id'];\n  connector = castTo($getConnector_2(ac.connectorMap, pid), 18);\n  if (!connector) {\n    $add_11(root, new SimpleTree_0('[' + pid + '] NOT FOUND'));\n    return;\n  }\n  show_3(connector, 'red');\n  errorNode = new SimpleTree_0($getSimpleName(getClass__Ljava_lang_Class___devirtual$(connector)) + ' id: ' + pid);\n  $addDomHandler(errorNode, new AnalyzeLayoutsPanel$4(connector), ($clinit_MouseOverEvent() , $clinit_MouseOverEvent() , TYPE_12));\n  $addDomHandler(errorNode, new AnalyzeLayoutsPanel$5, ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_11));\n  $addDomHandler(errorNode, new AnalyzeLayoutsPanel$6(this$static, errorNode, connector), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  errorDetails = new VerticalPanel;\n  'heightMsg' in valueMap && $add_8(errorDetails, new Label_1('Height problem: ' + valueMap['heightMsg']));\n  'widthMsg' in valueMap && $add_8(errorDetails, new Label_1('Width problem: ' + valueMap['widthMsg']));\n  errorDetails.children_0.size_0 > 0 && $add_13(errorNode, errorDetails, ($clinit_DOM() , errorNode.children));\n  if ('subErrors' in valueMap) {\n    l = new HTML_1('<em>Expand this node to show problems that may be dependent on this problem.<\\/em>');\n    $add_8(errorDetails, l);\n    suberrors = valueMap['subErrors'];\n    for (i_0 = 0; i_0 < suberrors.length; i_0++) {\n      value_0 = suberrors[i_0];\n      $printLayoutError(this$static, ac, value_0, errorNode);\n    }\n  }\n  $add_13(root, errorNode, ($clinit_DOM() , root.children));\n}\n\nfunction $update_0(this$static){\n  var applicationConnection, applicationConnection$iterator, runningApplications;\n  $clear_2(this$static);\n  $add_5(this$static, new Label_1('Analyzing layouts...'));\n  runningApplications = ($clinit_ApplicationConfiguration() , $clinit_ApplicationConfiguration() , runningApplications_0);\n  for (applicationConnection$iterator = new ArrayList$1(runningApplications); applicationConnection$iterator.i < applicationConnection$iterator.this$01.array.length;) {\n    applicationConnection = castTo($next_7(applicationConnection$iterator), 393);\n    $invoke(castTo(castTo($getRpcProxy(applicationConnection.uIConnector, Lcom_vaadin_shared_ui_ui_DebugWindowServerRpc_2_classLit), 1107), 855).val$handler2, new Method(new Type(Lcom_vaadin_shared_ui_ui_DebugWindowServerRpc_2_classLit), 'analyzeLayouts'), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_2, 1, 5, []));\n  }\n}\n\nfunction AnalyzeLayoutsPanel(){\n  FlowPanel.call(this);\n  this.listeners = new ArrayList;\n}\n\ndefineClass(1410, 81, $intern_60, AnalyzeLayoutsPanel);\nvar Lcom_vaadin_client_debug_internal_AnalyzeLayoutsPanel_2_classLit = createForClass('com.vaadin.client.debug.internal', 'AnalyzeLayoutsPanel', 1410, Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit);\nfunction AnalyzeLayoutsPanel$1(val$parentConnector, val$connector, val$errorDetails){\n  this.val$parentConnector2 = val$parentConnector;\n  this.val$connector3 = val$connector;\n  this.val$errorDetails4 = val$errorDetails;\n}\n\ndefineClass(1411, 1, $intern_132, AnalyzeLayoutsPanel$1);\n_.onMouseOver = function onMouseOver(event_0){\n  hideAll();\n  show_3(this.val$parentConnector2, 'yellow');\n  show_3(this.val$connector3, 'red');\n  $getElement(this.val$errorDetails4).style['textDecoration'] = ($clinit_Style$TextDecoration() , 'underline');\n}\n;\nvar Lcom_vaadin_client_debug_internal_AnalyzeLayoutsPanel$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'AnalyzeLayoutsPanel/1', 1411, Ljava_lang_Object_2_classLit);\nfunction AnalyzeLayoutsPanel$2(val$errorDetails){\n  this.val$errorDetails2 = val$errorDetails;\n}\n\ndefineClass(1412, 1, $intern_133, AnalyzeLayoutsPanel$2);\n_.onMouseOut = function onMouseOut_1(event_0){\n  hideAll();\n  $getElement(this.val$errorDetails2).style['textDecoration'] = ($clinit_Style$TextDecoration() , 'none');\n}\n;\nvar Lcom_vaadin_client_debug_internal_AnalyzeLayoutsPanel$2_2_classLit = createForClass('com.vaadin.client.debug.internal', 'AnalyzeLayoutsPanel/2', 1412, Ljava_lang_Object_2_classLit);\nfunction AnalyzeLayoutsPanel$3(this$0, val$connector){\n  this.this$01 = this$0;\n  this.val$connector2 = val$connector;\n}\n\ndefineClass(1413, 1, $intern_63, AnalyzeLayoutsPanel$3);\n_.onClick = function onClick_7(event_0){\n  $fireSelectEvent(this.this$01, this.val$connector2);\n}\n;\nvar Lcom_vaadin_client_debug_internal_AnalyzeLayoutsPanel$3_2_classLit = createForClass('com.vaadin.client.debug.internal', 'AnalyzeLayoutsPanel/3', 1413, Ljava_lang_Object_2_classLit);\nfunction AnalyzeLayoutsPanel$4(val$connector){\n  this.val$connector2 = val$connector;\n}\n\ndefineClass(1414, 1, $intern_132, AnalyzeLayoutsPanel$4);\n_.onMouseOver = function onMouseOver_0(event_0){\n  showOnly(this.val$connector2);\n  $getElement(castTo(event_0.source_0, 10)).style['textDecoration'] = ($clinit_Style$TextDecoration() , 'underline');\n}\n;\nvar Lcom_vaadin_client_debug_internal_AnalyzeLayoutsPanel$4_2_classLit = createForClass('com.vaadin.client.debug.internal', 'AnalyzeLayoutsPanel/4', 1414, Ljava_lang_Object_2_classLit);\nfunction AnalyzeLayoutsPanel$5(){\n}\n\ndefineClass(1415, 1, $intern_133, AnalyzeLayoutsPanel$5);\n_.onMouseOut = function onMouseOut_2(event_0){\n  hideAll();\n  $getElement(castTo(event_0.source_0, 10)).style['textDecoration'] = ($clinit_Style$TextDecoration() , 'none');\n}\n;\nvar Lcom_vaadin_client_debug_internal_AnalyzeLayoutsPanel$5_2_classLit = createForClass('com.vaadin.client.debug.internal', 'AnalyzeLayoutsPanel/5', 1415, Ljava_lang_Object_2_classLit);\nfunction AnalyzeLayoutsPanel$6(this$0, val$errorNode, val$connector){\n  this.this$01 = this$0;\n  this.val$errorNode2 = val$errorNode;\n  this.val$connector3 = val$connector;\n}\n\ndefineClass(1416, 1, $intern_63, AnalyzeLayoutsPanel$6);\n_.onClick = function onClick_8(event_0){\n  $eventGetTarget(event_0.nativeEvent) == $getElement(this.val$errorNode2).childNodes[1] && $fireSelectEvent(this.this$01, this.val$connector3);\n}\n;\nvar Lcom_vaadin_client_debug_internal_AnalyzeLayoutsPanel$6_2_classLit = createForClass('com.vaadin.client.debug.internal', 'AnalyzeLayoutsPanel/6', 1416, Ljava_lang_Object_2_classLit);\nfunction $getRowHTML(caption, value_0){\n  return '<div class=\"v-debugwindow-row\"><span class=\"caption\">' + caption + '<\\/span><span class=\"value\">' + escapeHTML(value_0 == null?'null':toString_10(value_0)) + '<\\/span><\\/div>';\n}\n\nfunction $update_1(this$static, connector){\n  var component, componentState, e, html, i_0, ignoreProperties, name_0, properties, property, state;\n  state = connector.getState_0();\n  ignoreProperties = new HashSet;\n  ignoreProperties.map_0.put('id', ignoreProperties);\n  html = $getRowHTML('Id', connector.getConnectorId());\n  html += $getRowHTML('Connector', $getSimpleName(getClass__Ljava_lang_Class___devirtual$(connector)));\n  if (instanceOf(connector, 18)) {\n    component = castTo(connector, 18);\n    $addAll_1(ignoreProperties, new Arrays$ArrayList(stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_String_2_classLit, 1), $intern_3, 2, 6, ['caption', 'description', 'width', 'height'])));\n    componentState = component.getState();\n    html += $getRowHTML('Widget', $getSimpleName(component.getWidget_0().___clazz));\n    html += $getRowHTML('Caption', componentState.caption_0);\n    html += $getRowHTML('Description', componentState.description);\n    html += $getRowHTML('Width', componentState.width_0 + ' (actual: ' + component.getWidget_0().getOffsetWidth() + 'px)');\n    html += $getRowHTML('Height', componentState.height_0 + ' (actual: ' + component.getWidget_0().getOffsetHeight() + 'px)');\n  }\n  try {\n    properties = getPropertiesAsArray(getStateType(connector));\n    for (i_0 = 0; i_0 < properties.length; i_0++) {\n      property = castTo(properties[i_0], 381);\n      name_0 = property.name_0;\n      ignoreProperties.map_0.containsKey(name_0) || (html += $getRowHTML($getDisplayName(property), getJsPropertyValue((!impl_5 && (impl_5 = new ConnectorBundleLoaderImpl) , impl_5).datStore.jsTypeData, property.bean.name_0, property.name_0, state)));\n    }\n  }\n   catch ($e0) {\n    $e0 = toJava($e0);\n    if (instanceOf($e0, 235)) {\n      e = $e0;\n      html += '<div>Could not read state, error has been logged to the console<\\/div>';\n      $log_0(getLogger(($ensureNamesAreInitialized(Lcom_vaadin_client_debug_internal_ConnectorInfoPanel_2_classLit) , Lcom_vaadin_client_debug_internal_ConnectorInfoPanel_2_classLit.typeName)), ($clinit_Level() , SEVERE), 'Could not read state', e);\n    }\n     else \n      throw toJs($e0);\n  }\n  $clear_2(this$static);\n  $add_5(this$static, new HTML_1(html));\n}\n\nfunction ConnectorInfoPanel(){\n  FlowPanel.call(this);\n}\n\ndefineClass(1483, 81, $intern_60, ConnectorInfoPanel);\nvar Lcom_vaadin_client_debug_internal_ConnectorInfoPanel_2_classLit = createForClass('com.vaadin.client.debug.internal', 'ConnectorInfoPanel', 1483, Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit);\nfunction ErrorNotificationHandler(){\n  $setLevel(this, ($clinit_Level() , SEVERE));\n  $setFormatter(this, new ErrorNotificationHandler$1);\n}\n\ndefineClass(1141, 530, $intern_42, ErrorNotificationHandler);\n_.publish = function publish_1(record){\n  var connection, exceptionText, n, owner;\n  if ($getLevel(this).intValue() > record.level.intValue() || !record.thrown) {\n    return;\n  }\n  try {\n    exceptionText = this.formatter.format_0(record);\n    owner = null;\n    $clinit_ApplicationConfiguration();\n    if (runningApplications_0.array.length != 0) {\n      connection = castTo($get_9(runningApplications_0, 0), 393);\n      owner = castTo($getWidget_1(connection.uIConnector), 117);\n    }\n    n = createNotification(-1, owner);\n    ($clinit_DOM() , n.element_0).style['textAlign'] = ($clinit_Style$TextAlign() , 'left');\n    $show_4(n, '<h1>Uncaught client side exception<\\/h1><br />' + $replace_1(exceptionText, '\\n', '<br/>\\n'), ($clinit_VNotification() , 4), 'error');\n  }\n   catch ($e0) {\n    $e0 = toJava($e0);\n    if (!instanceOf($e0, 50))\n      throw toJs($e0);\n  }\n}\n;\nvar Lcom_vaadin_client_debug_internal_ErrorNotificationHandler_2_classLit = createForClass('com.vaadin.client.debug.internal', 'ErrorNotificationHandler', 1141, Ljava_util_logging_Handler_2_classLit);\nfunction ErrorNotificationHandler$1(){\n  TextLogFormatter.call(this, true);\n}\n\ndefineClass(1357, 821, {}, ErrorNotificationHandler$1);\n_.getRecordInfo = function getRecordInfo_0(event_0, newline){\n  return '';\n}\n;\nvar Lcom_vaadin_client_debug_internal_ErrorNotificationHandler$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'ErrorNotificationHandler/1', 1357, Lcom_google_gwt_logging_client_TextLogFormatter_2_classLit);\nfunction $addListener_0(this$static, listener){\n  $add_22(this$static.listeners, listener);\n}\n\nfunction $buildConnectorTree(this$static, connector, openNodes){\n  var child, child$iterator, children, connectorString, has, label_0, tree, widget;\n  connectorString = getConnectorString(connector);\n  children = connector.getChildren();\n  if (!children || children.isEmpty()) {\n    label_0 = new Label_1(connectorString);\n    $addDomHandler(label_0, new HierarchyPanel$1(connector), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n    widget = label_0;\n  }\n   else {\n    tree = new HierarchyPanel$2(connectorString, connector);\n    for (child$iterator = children.iterator(); child$iterator.hasNext_0();) {\n      child = castTo(child$iterator.next_1(), 25);\n      $add_11(tree, $buildConnectorTree(this$static, child, openNodes));\n    }\n    openNodes.hasOwnProperty(connectorString) && $open_0(tree, false);\n    widget = tree;\n  }\n  if (instanceOf(widget, 56)) {\n    has = castTo(widget, 56);\n    has.addDoubleClickHandler(new HierarchyPanel$3(this$static, connector));\n  }\n  return widget;\n}\n\nfunction $collectOpenNodes(this$static, widget, openNodes){\n  var it, tree;\n  if (instanceOf(widget, 259)) {\n    tree = castTo(widget, 259);\n    if ($equals_10('-', tree.handle.innerHTML)) {\n      openNodes[tree.text_0.textContent] = true;\n    }\n     else {\n      return;\n    }\n  }\n  if (instanceOf(widget, 35)) {\n    it = castTo(widget, 35).iterator();\n    while (it.hasNext_0()) {\n      $collectOpenNodes(this$static, castTo(it.next_1(), 10), openNodes);\n    }\n  }\n}\n\nfunction $fireSelectEvent_0(this$static, connector){\n  var listener, listener$iterator;\n  for (listener$iterator = new ArrayList$1(this$static.listeners); listener$iterator.i < listener$iterator.this$01.array.length;) {\n    listener = castTo($next_7(listener$iterator), 1105);\n    listener.select_3(connector, null);\n  }\n}\n\nfunction $update_2(this$static){\n  var application, application$iterator, connectorTree, it, openNodes, trees, uiConnector;\n  openNodes = {};\n  it = new WidgetCollection$WidgetIterator(this$static.children_0);\n  while (it.index_0 < it.this$01.size_0) {\n    $collectOpenNodes(this$static, $next_1(it), openNodes);\n  }\n  $clear_2(this$static);\n  trees = new SimplePanel;\n  for (application$iterator = ($clinit_ApplicationConfiguration() , new ArrayList$1(runningApplications_0)); application$iterator.i < application$iterator.this$01.array.length;) {\n    application = castTo($next_7(application$iterator), 393);\n    uiConnector = application.uIConnector;\n    connectorTree = $buildConnectorTree(this$static, uiConnector, openNodes);\n    $add_6(trees, connectorTree);\n  }\n  $add_1(this$static, trees, ($clinit_DOM() , this$static.element_0));\n}\n\nfunction HierarchyPanel(){\n  FlowPanel.call(this);\n  this.listeners = new ArrayList;\n}\n\nfunction showServerDebugInfo(connector){\n  !!connector && $showServerDebugInfo_0(connector.getConnection().uIConnector, connector);\n}\n\ndefineClass(1404, 81, $intern_60, HierarchyPanel);\nvar Lcom_vaadin_client_debug_internal_HierarchyPanel_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchyPanel', 1404, Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit);\nfunction HierarchyPanel$1(val$connector){\n  this.val$connector2 = val$connector;\n}\n\ndefineClass(1405, 1, $intern_63, HierarchyPanel$1);\n_.onClick = function onClick_9(event_0){\n  showOnly(this.val$connector2);\n  showServerDebugInfo(this.val$connector2);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchyPanel$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchyPanel/1', 1405, Ljava_lang_Object_2_classLit);\nfunction HierarchyPanel$2($anonymous0, val$connector){\n  this.val$connector3 = val$connector;\n  SimpleTree_0.call(this, $anonymous0);\n}\n\ndefineClass(1406, 259, $intern_220, HierarchyPanel$2);\n_.select_1 = function select_4(event_0){\n  showOnly(this.val$connector3);\n  showServerDebugInfo(this.val$connector3);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchyPanel$2_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchyPanel/2', 1406, Lcom_vaadin_client_SimpleTree_2_classLit);\nfunction HierarchyPanel$3(this$0, val$connector){\n  this.this$01 = this$0;\n  this.val$connector2 = val$connector;\n}\n\ndefineClass(1407, 1, $intern_221, HierarchyPanel$3);\n_.onDoubleClick = function onDoubleClick_0(event_0){\n  $fireSelectEvent_0(this.this$01, this.val$connector2);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchyPanel$3_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchyPanel/3', 1407, Ljava_lang_Object_2_classLit);\nfunction $analyzeLayouts(this$static){\n  $update_0(this$static.analyzeLayoutsPanel);\n  $setWidget_0(this$static.content_0, this$static.analyzeLayoutsPanel);\n}\n\nfunction $generateWidgetset(this$static){\n  $update_3(this$static.widgetsetPanel);\n  $setWidget_0(this$static.content_0, this$static.widgetsetPanel);\n}\n\nfunction $printState(this$static, connector, serverDebug){\n  hideAll();\n  instanceOf(connector, 18)?show_3(castTo(connector, 18), 'red'):null;\n  serverDebug && !!connector && $showServerDebugInfo_0(connector.getConnection().uIConnector, connector);\n  $update_1(this$static.infoPanel, connector);\n  $setWidget_0(this$static.content_0, this$static.infoPanel);\n}\n\nfunction $showHierarchy(this$static){\n  hideAll();\n  $update_2(this$static.hierarchyPanel);\n  $setWidget_0(this$static.content_0, this$static.hierarchyPanel);\n}\n\nfunction $startFind(this$static, handler){\n  !!this$static.activeFindHandler && $stopFind(this$static);\n  hideAll();\n  this$static.highlightModeRegistration = addNativePreviewHandler(this$static.highlightModeHandler);\n  this$static.activeFindHandler = handler;\n  handler == this$static.inspectComponent?$addStyleDependentName(this$static.find_0, 'active'):handler == this$static.showComponentDesign && $addStyleDependentName(this$static.generateDesign, 'active');\n}\n\nfunction $stopFind(this$static){\n  if (!this$static.activeFindHandler) {\n    return;\n  }\n  $removeHandler_0(this$static.highlightModeRegistration.real);\n  this$static.highlightModeRegistration = null;\n  $removeStyleDependentName(this$static.find_0, 'active');\n  $removeStyleDependentName(this$static.generateDesign, 'active');\n  this$static.activeFindHandler = null;\n}\n\nfunction $toggleFind(this$static, handler){\n  if (this$static.activeFindHandler) {\n    if (this$static.activeFindHandler == handler) {\n      $stopFind(this$static);\n      return;\n    }\n     else {\n      $stopFind(this$static);\n      $startFind(this$static, handler);\n    }\n  }\n   else {\n    $startFind(this$static, handler);\n  }\n}\n\nfunction HierarchySection(){\n  var info;\n  this.tabButton = new DebugButton(($clinit_Icon() , HIERARCHY), 'Examine component hierarchy');\n  this.content_0 = new SimplePanel;\n  this.helpPanel = new FlowPanel;\n  this.infoPanel = new ConnectorInfoPanel;\n  this.hierarchyPanel = new HierarchyPanel;\n  this.widgetsetPanel = new OptimizedWidgetsetPanel;\n  this.analyzeLayoutsPanel = new AnalyzeLayoutsPanel;\n  this.controls = new FlowPanel;\n  this.find_0 = new DebugButton(HIGHLIGHT, 'Select a component on the page to inspect it');\n  this.analyze = new DebugButton(ANALYZE, 'Check layouts for potential problems');\n  this.generateWS = new DebugButton(OPTIMIZE, 'Show used connectors and how to optimize widgetset');\n  this.showHierarchy = new DebugButton(HIERARCHY, 'Show the connector hierarchy tree');\n  this.generateDesign = new DebugButton(SHOW_DESIGN, 'Generate a declarative design for the given component sub tree');\n  this.inspectComponent = new HierarchySection$1(this);\n  this.showComponentDesign = new HierarchySection$2(this);\n  this.highlightModeHandler = new HierarchySection$3(this);\n  $add_5(this.controls, this.showHierarchy);\n  $setStylePrimaryName(this.showHierarchy, 'v-debugwindow-button');\n  $addDomHandler(this.showHierarchy, new HierarchySection$4(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  $add_5(this.controls, this.find_0);\n  $setStylePrimaryName(this.find_0, 'v-debugwindow-button');\n  $addDomHandler(this.find_0, new HierarchySection$5(this), (null , TYPE_1));\n  $add_5(this.controls, this.analyze);\n  $setStylePrimaryName(this.analyze, 'v-debugwindow-button');\n  $addDomHandler(this.analyze, new HierarchySection$6(this), (null , TYPE_1));\n  $add_5(this.controls, this.generateWS);\n  $setStylePrimaryName(this.generateWS, 'v-debugwindow-button');\n  $addDomHandler(this.generateWS, new HierarchySection$7(this), (null , TYPE_1));\n  $add_5(this.controls, this.generateDesign);\n  $setStylePrimaryName(this.generateDesign, 'v-debugwindow-button');\n  $addDomHandler(this.generateDesign, new HierarchySection$8(this), (null , TYPE_1));\n  $addListener_0(this.hierarchyPanel, new HierarchySection$9(this));\n  $addListener(this.analyzeLayoutsPanel, new HierarchySection$10(this));\n  $setStylePrimaryName(this.content_0, 'v-debugwindow-hierarchy');\n  info = new HTML_1($getHTML(this.showHierarchy) + ' ' + $getTitle(this.showHierarchy) + '<br/>' + $getHTML(this.find_0) + ' ' + $getTitle(this.find_0) + '<br/>' + $getHTML(this.analyze) + ' ' + $getTitle(this.analyze) + '<br/>' + $getHTML(this.generateWS) + ' ' + $getTitle(this.generateWS) + '<br/>' + $getHTML(this.generateDesign) + ' ' + $getTitle(this.generateDesign) + '<br/>');\n  ($clinit_DOM() , info.element_0).className = 'v-debugwindow-info';\n  $add_5(this.helpPanel, info);\n  $setWidget_0(this.content_0, this.helpPanel);\n}\n\ndefineClass(1137, 1, $intern_222, HierarchySection);\n_.getContent = function getContent(){\n  return this.content_0;\n}\n;\n_.getControls = function getControls(){\n  return this.controls;\n}\n;\n_.getTabButton = function getTabButton(){\n  return this.tabButton;\n}\n;\n_.hide = function hide_5(){\n  $stopFind(this);\n}\n;\n_.meta = function meta_0(ac, meta){\n  $meta(this.analyzeLayoutsPanel, ac, meta);\n}\n;\n_.show = function show_1(){\n}\n;\n_.uidl_0 = function uidl_0(ac, uidl){\n}\n;\n_.highlightModeRegistration = null;\nvar Lcom_vaadin_client_debug_internal_HierarchySection_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection', 1137, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1342, 1, {}, HierarchySection$1);\n_.onHover = function onHover(connector){\n  !connector?$clear_2(this.this$01.infoPanel):$printState(this.this$01, connector, false);\n}\n;\n_.onSelected = function onSelected(connector){\n  $stopFind(this.this$01);\n  $printState(this.this$01, connector, true);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/1', 1342, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$10(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1351, 1, {1105:1}, HierarchySection$10);\n_.select_3 = function select_5(connector, element){\n  $printState(this.this$01, connector, true);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$10_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/10', 1351, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$2(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1343, 1, {}, HierarchySection$2);\n_.onHover = function onHover_0(connector){\n  hideAll();\n  connector?show_3(connector, 'red'):null;\n}\n;\n_.onSelected = function onSelected_0(connector){\n  $stopFind(this.this$01);\n  $showServerDesign_0(connector.getConnection().uIConnector, connector);\n  $setWidget_0(this.this$01.content_0, new HTML_1('Design file for component sent to server log'));\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$2_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/2', 1343, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$3(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1344, 1, $intern_76, HierarchySection$3);\n_.onPreviewNativeEvent = function onPreviewNativeEvent_3(event_0){\n  var a, a$iterator, connector, eventTarget;\n  if ($getTypeInt(event_0.nativeEvent) == 128 && (event_0.nativeEvent.keyCode | 0) == 27) {\n    $stopFind(this.this$01);\n    hideAll();\n    return;\n  }\n  if ($getTypeInt(event_0.nativeEvent) == 64) {\n    hideAll();\n    eventTarget = getElementFromPoint((event_0.nativeEvent.clientX || 0) | 0, (event_0.nativeEvent.clientY || 0) | 0);\n    if ($isOrHasChild($getElement(($clinit_VDebugWindow() , !instance_3 && (instance_3 = new VDebugWindow) , $clinit_VDebugWindow() , instance_3)), eventTarget)) {\n      $clear_2(this.this$01.infoPanel);\n      return;\n    }\n    for (a$iterator = ($clinit_ApplicationConfiguration() , new ArrayList$1(runningApplications_0)); a$iterator.i < a$iterator.this$01.array.length;) {\n      a = castTo($next_7(a$iterator), 393);\n      connector = getConnectorForElement(a, castTo($getWidget_1(a.uIConnector), 117), eventTarget);\n      !connector && (connector = getConnectorForElement(a, ($clinit_RootPanel() , get_0(null)), eventTarget));\n      if (connector) {\n        this.this$01.activeFindHandler.onHover(connector);\n        event_0.isCanceled = true;\n        event_0.isConsumed = true;\n        event_0.nativeEvent.stopPropagation();\n        return;\n      }\n    }\n    this.this$01.activeFindHandler.onHover(null);\n  }\n  if ($getTypeInt(event_0.nativeEvent) == 1) {\n    hideAll();\n    event_0.isCanceled = true;\n    event_0.isConsumed = true;\n    event_0.nativeEvent.stopPropagation();\n    eventTarget = getElementFromPoint((event_0.nativeEvent.clientX || 0) | 0, (event_0.nativeEvent.clientY || 0) | 0);\n    for (a$iterator = ($clinit_ApplicationConfiguration() , new ArrayList$1(runningApplications_0)); a$iterator.i < a$iterator.this$01.array.length;) {\n      a = castTo($next_7(a$iterator), 393);\n      connector = getConnectorForElement(a, castTo($getWidget_1(a.uIConnector), 117), eventTarget);\n      !connector && (connector = getConnectorForElement(a, ($clinit_RootPanel() , get_0(null)), eventTarget));\n      if (connector) {\n        this.this$01.activeFindHandler.onSelected(connector);\n        return;\n      }\n    }\n    $stopFind(this.this$01);\n  }\n  event_0.isCanceled = true;\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$3_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/3', 1344, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$4(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1345, 1, $intern_63, HierarchySection$4);\n_.onClick = function onClick_10(event_0){\n  $showHierarchy(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$4_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/4', 1345, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$5(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1346, 1, $intern_63, HierarchySection$5);\n_.onClick = function onClick_11(event_0){\n  $toggleFind(this.this$01, this.this$01.inspectComponent);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$5_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/5', 1346, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$6(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1347, 1, $intern_63, HierarchySection$6);\n_.onClick = function onClick_12(event_0){\n  $stopFind(this.this$01);\n  $analyzeLayouts(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$6_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/6', 1347, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$7(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1348, 1, $intern_63, HierarchySection$7);\n_.onClick = function onClick_13(event_0){\n  $generateWidgetset(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$7_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/7', 1348, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$8(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1349, 1, $intern_63, HierarchySection$8);\n_.onClick = function onClick_14(event_0){\n  $setWidget_0(this.this$01.content_0, new HTML_1('Select a layout or component to generate the declarative design'));\n  $toggleFind(this.this$01, this.this$01.showComponentDesign);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$8_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/8', 1349, Ljava_lang_Object_2_classLit);\nfunction HierarchySection$9(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1350, 1, {1105:1}, HierarchySection$9);\n_.select_3 = function select_6(connector, element){\n  $printState(this.this$01, connector, true);\n}\n;\nvar Lcom_vaadin_client_debug_internal_HierarchySection$9_2_classLit = createForClass('com.vaadin.client.debug.internal', 'HierarchySection/9', 1350, Ljava_lang_Object_2_classLit);\nfunction show_2(element, color_0){\n  var height, highlight, style, width_0;\n  if (element) {\n    !highlights && (highlights = new HashSet);\n    highlight = ($clinit_DOM() , $doc.createElement('div'));\n    style = highlight.style;\n    style['top'] = $getAbsoluteTop(element) + ($clinit_Style$Unit() , 'px');\n    style['left'] = $getAbsoluteLeft(element) + 'px';\n    width_0 = (element.offsetWidth || 0) | 0;\n    width_0 < 3 && (width_0 = 3);\n    style['width'] = width_0 + 'px';\n    height = (element.offsetHeight || 0) | 0;\n    height < 3 && (height = 3);\n    style['height'] = height + 'px';\n    $appendChild(($clinit_RootPanel() , $doc.body), highlight);\n    style['position'] = ($clinit_Style$Position() , 'absolute');\n    style['zIndex'] = '11000';\n    style['backgroundColor'] = color_0;\n    style.opacity = 0.3;\n    ($clinit_BrowserInfo() , !instance_2 && (instance_2 = new BrowserInfo) , $clinit_BrowserInfo() , instance_2).browserDetails.isIE && (style['filter'] = 'alpha(opacity=30.0)' , undefined);\n    $add_23(highlights, highlight);\n    return highlight;\n  }\n  return null;\n}\n\nfunction show_3(connector, color_0){\n  var w;\n  if (connector) {\n    w = connector.getWidget_0();\n    return !!w && show_2(($clinit_DOM() , w.element_0), color_0) , null;\n  }\n  return null;\n}\n\nfunction showOnly(connector){\n  hideAll();\n  return instanceOf(connector, 18)?show_3(castTo(connector, 18), 'red'):null;\n}\n\nfunction $clinit_InfoSection(){\n  $clinit_InfoSection = emptyMethod;\n  ERROR_STYLE = ($clinit_Level() , 'SEVERE');\n}\n\nfunction $addRow(this$static, parameter, value_0, className){\n  var row, span_0;\n  row = ($clinit_DOM() , $doc.createElement('div'));\n  $addClassName(row, 'v-debugwindow-row');\n  className != null && $addClassName(row, className);\n  span_0 = $doc.createElement('span');\n  span_0.className = 'caption';\n  span_0.textContent = parameter || '';\n  row.appendChild(span_0);\n  span_0 = $doc.createElement('span');\n  span_0.className = 'value';\n  span_0.textContent = value_0 || '';\n  row.appendChild(span_0);\n  $appendChild($getElement(this$static.content_0), row);\n}\n\nfunction $addVersionInfo(this$static, applicationConfiguration){\n  var atmosphereVersion, clientOk, clientVersion, jsVersion, servletOk, servletVersion, themeOk, themeVersion;\n  clientVersion = ($clinit_Version() , $clinit_Version() , VERSION);\n  servletVersion = getJsoConfiguration(applicationConfiguration.id_0).getConfig('versionInfo').vaadinVersion;\n  atmosphereVersion = getJsoConfiguration(applicationConfiguration.id_0).getConfig('versionInfo').atmosphereVersion;\n  jsVersion = (getJsoConfiguration(applicationConfiguration.id_0) , $getAtmosphereJSVersion());\n  themeVersion = $getThemeVersion();\n  themeOk = $equalsEither(themeVersion, clientVersion, servletVersion);\n  clientOk = $equalsEither(clientVersion, servletVersion, themeVersion);\n  servletOk = $equalsEither(servletVersion, clientVersion, themeVersion);\n  $addRow(this$static, 'Client engine version', clientVersion, clientOk?null:ERROR_STYLE);\n  $addRow(this$static, 'Server engine version', servletVersion, servletOk?null:ERROR_STYLE);\n  $addRow(this$static, 'Theme version', themeVersion, themeOk?null:ERROR_STYLE);\n  if (jsVersion != null) {\n    $addRow(this$static, 'Push server version', atmosphereVersion, null);\n    $addRow(this$static, 'Push client version', jsVersion + ' (note: does not need to match server version)', null);\n  }\n}\n\nfunction $equalsEither(target, reference1, reference2){\n  if (equals_17(target, reference1)) {\n    return true;\n  }\n  if (equals_17(target, reference2)) {\n    return true;\n  }\n  return false;\n}\n\nfunction $getComputedStyle(elem, pseudoElement, property){\n  if ($wnd.document.defaultView && $wnd.document.defaultView.getComputedStyle) {\n    return $wnd.document.defaultView.getComputedStyle(elem, pseudoElement)[property];\n  }\n   else {\n    return null;\n  }\n}\n\nfunction $getThemeVersion(){\n  var div, parent_0, version;\n  div = ($clinit_DOM() , $doc.createElement('div'));\n  div.className = 'v-vaadin-version';\n  $appendChild($getElement(($clinit_RootPanel() , get_0(null))), div);\n  version = $getComputedStyle(div, ':after', 'content');\n  parent_0 = $getParentElement(div);\n  !!parent_0 && parent_0.removeChild(div);\n  if (version != null) {\n    version = $replace_1(version, \"'\", '');\n    version = $replace_1(version, '\"', '');\n  }\n  return version;\n}\n\nfunction $refresh(this$static){\n  var application, application$iterator, apps, configuration, communicationMethodInfo, pollInterval, heartBeatInfo;\n  $getElement(this$static.content_0).innerHTML = '';\n  apps = ($clinit_ApplicationConfiguration() , $clinit_ApplicationConfiguration() , runningApplications_0);\n  if (apps.array.length == 0) {\n    $schedule(this$static.refresher, $intern_30);\n  }\n   else {\n    for (application$iterator = new ArrayList$1(apps); application$iterator.i < application$iterator.this$01.array.length;) {\n      application = castTo($next_7(application$iterator), 393);\n      $getElement(this$static.content_0).innerHTML = '';\n      configuration = application.configuration;\n      $addVersionInfo(this$static, configuration);\n      $addRow(this$static, 'Widget set', ($clinit_Impl() , $moduleName), null);\n      $addRow(this$static, 'Theme', application.uIConnector.activeTheme, null);\n      communicationMethodInfo = $getCommunicationMethodName(application.messageSender);\n      pollInterval = castTo(castTo($getState(application.uIConnector), 6), 150).pollInterval;\n      pollInterval > 0 && (communicationMethodInfo += ' (poll interval ' + pollInterval + 'ms)');\n      $addRow(this$static, 'Communication method', communicationMethodInfo, null);\n      configuration.heartbeatInterval < 0?(heartBeatInfo = 'Disabled'):(heartBeatInfo = configuration.heartbeatInterval + 's');\n      $addRow(this$static, 'Heartbeat', heartBeatInfo, null);\n    }\n  }\n}\n\nfunction InfoSection(){\n  $clinit_InfoSection();\n  this.content_0 = new HTML;\n  this.tabButton = new DebugButton(($clinit_Icon() , INFO), 'General information about the application(s)');\n  this.controls = new HTML_1($getTitle(this.tabButton));\n  this.refresher = new InfoSection$1(this);\n  $setStylePrimaryName(this.content_0, 'v-debugwindow-info');\n  $refresh(this);\n}\n\ndefineClass(1136, 1, $intern_222, InfoSection);\n_.getContent = function getContent_0(){\n  return this.content_0;\n}\n;\n_.getControls = function getControls_0(){\n  return this.controls;\n}\n;\n_.getTabButton = function getTabButton_0(){\n  return this.tabButton;\n}\n;\n_.hide = function hide_6(){\n  $cancel_0(this.refresher);\n}\n;\n_.meta = function meta_1(ac, meta){\n}\n;\n_.show = function show_4(){\n  $refresh(this);\n}\n;\n_.uidl_0 = function uidl_3(ac, uidl){\n}\n;\nvar ERROR_STYLE;\nvar Lcom_vaadin_client_debug_internal_InfoSection_2_classLit = createForClass('com.vaadin.client.debug.internal', 'InfoSection', 1136, Ljava_lang_Object_2_classLit);\nfunction InfoSection$1(this$0){\n  this.this$01 = this$0;\n  Timer.call(this);\n}\n\ndefineClass(1341, 62, {}, InfoSection$1);\n_.run_0 = function run_23(){\n  $refresh(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_InfoSection$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'InfoSection/1', 1341, Lcom_google_gwt_user_client_Timer_2_classLit);\nfunction $addRow_0(this$static, level, msg){\n  var inner, row, sinceReset, sinceStart;\n  sinceReset = ($clinit_VDebugWindow() , $elapsedMillis(lastReset));\n  sinceStart = $elapsedMillis(start_1);\n  row = ($clinit_DOM() , $doc.createElement('div'));\n  $addClassName(row, 'v-debugwindow-row');\n  $addClassName(row, level.getName());\n  inner = \"<span class='v-debugwindow-'><\\/span><span class='v-debugwindow-time' title='\" + getTimingTooltip(sinceStart, sinceReset) + \"'>\" + sinceReset + \"ms<\\/span><span class='\" + 'v-debugwindow' + \"-message'>\" + msg + '<\\/span>';\n  row.innerHTML = inner || '';\n  $appendChild(this$static.contentElement, row);\n  $applyLimit(this$static);\n  $maybeScroll(this$static);\n  return row;\n}\n\nfunction $applyLimit(this$static){\n  while (this$static.contentElement.childNodes.length > this$static.limit) {\n    $removeChild(this$static.contentElement, this$static.contentElement.firstChild);\n  }\n}\n\nfunction $maybeScroll(this$static){\n  if (this$static.scrollTimer) {\n    $cancel_0(this$static.scrollTimer);\n    $schedule(this$static.scrollTimer, 100);\n  }\n}\n\nfunction $resetTimer(this$static){\n  var row, sinceReset, sinceStart, sinceLast;\n  sinceStart = ($clinit_VDebugWindow() , $elapsedMillis(start_1));\n  sinceReset = (sinceLast = $elapsedMillis(lastReset) , lastReset = new Duration , sinceLast);\n  row = ($clinit_DOM() , $doc.createElement('div'));\n  $addClassName(row, 'v-debugwindow-reset');\n  $setInnerHTML(row, ($clinit_Icon() , RESET_TIMER) + ' Timer reset');\n  $setTitle(row, getTimingTooltip(sinceStart, sinceReset));\n  $appendChild(this$static.contentElement, row);\n  $maybeScroll(this$static);\n}\n\nfunction $selectText(el){\n  if ($doc.selection && $doc.selection.createRange) {\n    var r = $doc.selection.createRange();\n    r.moveToElementText(el);\n    r.select();\n  }\n   else if ($doc.createRange && $wnd.getSelection) {\n    var r = $doc.createRange();\n    r.selectNode(el);\n    var selection = $wnd.getSelection();\n    selection.removeAllRanges();\n    selection.addRange(r);\n  }\n}\n\nfunction $setScrollLock(this$static, locked){\n  if (locked && !!this$static.scrollTimer) {\n    $cancel_0(this$static.scrollTimer);\n    this$static.scrollTimer = null;\n  }\n   else \n    !locked && !this$static.scrollTimer && (this$static.scrollTimer = new LogSection$5(this$static));\n  $setStyleDependentName(this$static.scroll_0, 'active', locked);\n}\n\nfunction $toggleScrollLock(this$static){\n  var storage;\n  $setScrollLock(this$static, !!this$static.scrollTimer);\n  storage = (!localStorage_0 && ($clinit_Storage$StorageSupportDetector() , localStorageSupported) && (localStorage_0 = new Storage_0('localStorage')) , localStorage_0);\n  if (!storage) {\n    return;\n  }\n  $clinit_VDebugWindow();\n  $setItem(storage, 'v-debug-log-scrollLock', valueOf_88(($clinit_Boolean() , !this$static.scrollTimer?true:false)));\n}\n\nfunction LogSection(){\n  this.tabButton = new DebugButton(($clinit_Icon() , LOG_0), 'Debug message log');\n  this.content_0 = new HTML;\n  this.controls = new FlowPanel;\n  this.clear_0 = new DebugButton(CLEAR, 'Clear log');\n  this.reset_0 = new DebugButton(RESET_TIMER, 'Reset timer');\n  this.scroll_0 = new DebugButton(SCROLL_LOCK, 'Scroll lock');\n  this.contentElement = $getElement(this.content_0);\n  $setStylePrimaryName(this.content_0, 'v-debugwindow-log');\n  $add_5(this.controls, this.clear_0);\n  $setStylePrimaryName(this.clear_0, 'v-debugwindow-button');\n  $addDomHandler(this.clear_0, new LogSection$1(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  $add_5(this.controls, this.reset_0);\n  $setStylePrimaryName(this.reset_0, 'v-debugwindow-button');\n  $addDomHandler(this.reset_0, new LogSection$2(this), (null , TYPE_1));\n  $add_5(this.controls, this.scroll_0);\n  $setStylePrimaryName(this.scroll_0, 'v-debugwindow-button');\n  $addDomHandler(this.scroll_0, new LogSection$3(this), (null , TYPE_1));\n  $addDomHandler(this.content_0, new LogSection$4(this), (null , TYPE_1));\n  $addHandler_3(getLogger(''), new LogSection$LogSectionHandler(this));\n}\n\ndefineClass(1135, 1, $intern_222, LogSection);\n_.getContent = function getContent_1(){\n  return this.content_0;\n}\n;\n_.getControls = function getControls_1(){\n  return this.controls;\n}\n;\n_.getTabButton = function getTabButton_1(){\n  return this.tabButton;\n}\n;\n_.hide = function hide_7(){\n  $setScrollLock(this, true);\n}\n;\n_.meta = function meta_2(ac, meta){\n  $addRow_0(this, ($clinit_Level() , FINE), 'Meta: ' + $toSource(meta));\n}\n;\n_.show = function show_5(){\n  var storage;\n  storage = (!localStorage_0 && ($clinit_Storage$StorageSupportDetector() , localStorageSupported) && (localStorage_0 = new Storage_0('localStorage')) , localStorage_0);\n  if (!storage) {\n    return;\n  }\n  $setScrollLock(this, readState_0(storage, 'log-scrollLock'));\n}\n;\n_.uidl_0 = function uidl_4(ac, uidl){\n  $addRow_0(this, ($clinit_Level() , FINE), 'UIDL: ' + $toSource(uidl));\n}\n;\n_.limit = 500;\n_.scrollTimer = null;\nvar Lcom_vaadin_client_debug_internal_LogSection_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection', 1135, Ljava_lang_Object_2_classLit);\nfunction LogSection$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1335, 1, $intern_63, LogSection$1);\n_.onClick = function onClick_15(event_0){\n  this.this$01.contentElement.textContent = '';\n}\n;\nvar Lcom_vaadin_client_debug_internal_LogSection$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection/1', 1335, Ljava_lang_Object_2_classLit);\nfunction LogSection$2(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1336, 1, $intern_63, LogSection$2);\n_.onClick = function onClick_16(event_0){\n  $resetTimer(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_LogSection$2_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection/2', 1336, Ljava_lang_Object_2_classLit);\nfunction LogSection$3(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1337, 1, $intern_63, LogSection$3);\n_.onClick = function onClick_17(event_0){\n  $toggleScrollLock(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_LogSection$3_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection/3', 1337, Ljava_lang_Object_2_classLit);\nfunction LogSection$4(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1338, 1, $intern_63, LogSection$4);\n_.onClick = function onClick_18(event_0){\n  var el;\n  el = $eventGetTarget(event_0.nativeEvent);\n  while ((el.className || '').indexOf('v-debugwindow-message') == -1) {\n    if (el == this.this$01.contentElement) {\n      return;\n    }\n    el = $getParentElement(el);\n  }\n  $selectText(el);\n}\n;\nvar Lcom_vaadin_client_debug_internal_LogSection$4_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection/4', 1338, Ljava_lang_Object_2_classLit);\nfunction LogSection$5(this$0){\n  this.this$01 = this$0;\n  Timer.call(this);\n}\n\ndefineClass(1339, 62, {}, LogSection$5);\n_.run_0 = function run_24(){\n  var el;\n  el = this.this$01.contentElement.lastChild;\n  if (el) {\n    el = $getFirstChildElement(el);\n    !!el && $scrollIntoView(el);\n  }\n}\n;\nvar Lcom_vaadin_client_debug_internal_LogSection$5_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection/5', 1339, Lcom_google_gwt_user_client_Timer_2_classLit);\nfunction LogSection$LogSectionHandler(this$0){\n  this.this$01 = this$0;\n  $setLevel(this, ($clinit_Level() , ALL_2));\n  $setFormatter(this, new LogSection$LogSectionHandler$1);\n}\n\ndefineClass(1332, 530, $intern_42, LogSection$LogSectionHandler);\n_.publish = function publish_2(record){\n  var formatter, msg;\n  if ($getLevel(this).intValue() > record.level.intValue()) {\n    return;\n  }\n  record.msg == null && (record.msg = '');\n  formatter = this.formatter;\n  msg = formatter.format_0(record);\n  $addRow_0(this.this$01, record.level, msg);\n}\n;\nvar Lcom_vaadin_client_debug_internal_LogSection$LogSectionHandler_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection/LogSectionHandler', 1332, Ljava_util_logging_Handler_2_classLit);\nfunction LogSection$LogSectionHandler$1(){\n  this.showStackTraces = true;\n}\n\ndefineClass(1334, 1333, {}, LogSection$LogSectionHandler$1);\n_.getHtmlPrefix = function getHtmlPrefix_0(event_0){\n  return '';\n}\n;\n_.getHtmlSuffix = function getHtmlSuffix_0(event_0){\n  return '';\n}\n;\n_.getRecordInfo = function getRecordInfo_1(event_0, newline){\n  return '';\n}\n;\nvar Lcom_vaadin_client_debug_internal_LogSection$LogSectionHandler$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'LogSection/LogSectionHandler/1', 1334, Lcom_google_gwt_logging_client_HtmlLogFormatter_2_classLit);\nfunction NetworkSection(){\n  this.tabButton = new DebugButton(($clinit_Icon() , NETWORK), 'Communication');\n  this.controls = new HTML_1($getTitle(this.tabButton));\n  this.content_0 = new FlowPanel;\n  $setStyleName(this.content_0, 'v-debugwindow-network');\n}\n\ndefineClass(1138, 1, $intern_222, NetworkSection);\n_.getContent = function getContent_2(){\n  return this.content_0;\n}\n;\n_.getControls = function getControls_2(){\n  return this.controls;\n}\n;\n_.getTabButton = function getTabButton_2(){\n  return this.tabButton;\n}\n;\n_.hide = function hide_8(){\n}\n;\n_.meta = function meta_3(ac, meta){\n}\n;\n_.show = function show_6(){\n}\n;\n_.uidl_0 = function uidl_5(ac, uidl){\n  var sinceReset, sinceStart, vuidlBrowser;\n  sinceStart = ($clinit_VDebugWindow() , $elapsedMillis(start_1));\n  sinceReset = $elapsedMillis(lastReset);\n  vuidlBrowser = new VUIDLBrowser(uidl, ac);\n  setStyleName(($clinit_DOM() , vuidlBrowser.element_0), 'v-debugwindow-row', true);\n  $setInnerText(vuidlBrowser.text_0, 'Response @ ' + sinceReset + 'ms');\n  $setTitle_0(vuidlBrowser, getTimingTooltip(sinceStart, sinceReset));\n  vuidlBrowser.children.style['display'] = ($clinit_Style$Display() , 'none');\n  vuidlBrowser.handle.innerHTML = '+';\n  $add_5(this.content_0, vuidlBrowser);\n  while (this.content_0.children_0.size_0 > 10) {\n    $remove_1(this.content_0, 0);\n  }\n}\n;\nvar Lcom_vaadin_client_debug_internal_NetworkSection_2_classLit = createForClass('com.vaadin.client.debug.internal', 'NetworkSection', 1138, Ljava_lang_Object_2_classLit);\nfunction $generateOptimizedWidgetSet(usedConnectors){\n  var c, c$iterator, entry, outerIter, s;\n  s = 'import java.util.HashSet;\\n';\n  s += 'import java.util.Set;\\n';\n  s += 'import com.google.gwt.core.ext.typeinfo.JClassType;\\n';\n  s += 'import com.vaadin.client.ui.ui.UIConnector;\\n';\n  s += 'import com.vaadin.server.widgetsetutils.ConnectorBundleLoaderFactory;\\n';\n  s += 'import com.vaadin.shared.ui.Connect.LoadStyle;\\n\\n';\n  s += 'public class OptimizedConnectorBundleLoaderFactory extends\\n';\n  s += '            ConnectorBundleLoaderFactory {\\n';\n  s += '    private Set<String> eagerConnectors = new HashSet<String>();\\n';\n  s += '    {\\n';\n  for (c$iterator = (outerIter = (new AbstractMap$1(usedConnectors.map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter)); c$iterator.val$outerIter2.hasNext_0();) {\n    c = (entry = castTo(c$iterator.val$outerIter2.next_1(), 29) , castToString(entry.getKey()));\n    s += '            eagerConnectors.add(' + escapeHTML(c) + '.class.getName());\\n';\n  }\n  s += '    }\\n';\n  s += '\\n';\n  s += '    @Override\\n';\n  s += '    protected LoadStyle getLoadStyle(JClassType connectorType) {\\n';\n  s += '            if (eagerConnectors.contains(connectorType.getQualifiedBinaryName())) {\\n';\n  s += '                    return LoadStyle.EAGER;\\n';\n  s += '            } else {\\n';\n  s += '                    // Loads all other connectors immediately after the initial view has\\n';\n  s += '                    // been rendered\\n';\n  s += '                    return LoadStyle.DEFERRED;\\n';\n  s += '            }\\n';\n  s += '    }\\n';\n  s += '}\\n';\n  return s;\n}\n\nfunction $getUsedConnectorNames(configuration){\n  var connectorClass, serverSideClass, tag, usedConnectors;\n  tag = 0;\n  usedConnectors = new HashSet;\n  while (true) {\n    serverSideClass = $getServerSideClassNameForTag(configuration, valueOf_86(tag));\n    if (serverSideClass == null) {\n      break;\n    }\n    connectorClass = $getConnectorClassByEncodedTag(configuration, tag);\n    if (!connectorClass) {\n      break;\n    }\n    connectorClass != Lcom_vaadin_client_ui_UnknownComponentConnector_2_classLit && connectorClass != Lcom_vaadin_client_ui_UnknownExtensionConnector_2_classLit && $add_23(usedConnectors, ($ensureNamesAreInitialized(connectorClass) , connectorClass.typeName));\n    ++tag;\n    if (tag > $intern_35) {\n      $severe(getLogger(($ensureNamesAreInitialized(Lcom_vaadin_client_debug_internal_OptimizedWidgetsetPanel_2_classLit) , Lcom_vaadin_client_debug_internal_OptimizedWidgetsetPanel_2_classLit.typeName)), 'Search for used connector classes was forcefully terminated');\n      break;\n    }\n  }\n  return usedConnectors;\n}\n\nfunction $update_3(this$static){\n  var ac, ac$iterator, conf, connectorName, connectorName$iterator, entry, h, outerIter, s;\n  $clear_2(this$static);\n  h = new HTML_1('Getting used connectors');\n  $add_1(this$static, h, ($clinit_DOM() , this$static.element_0));\n  s = '';\n  for (ac$iterator = ($clinit_ApplicationConfiguration() , new ArrayList$1(runningApplications_0)); ac$iterator.i < ac$iterator.this$01.array.length;) {\n    ac = castTo($next_7(ac$iterator), 393);\n    conf = ac.configuration;\n    s += '<h1>Used connectors for ' + escapeHTML(conf.serviceUrl) + '<\\/h1>';\n    for (connectorName$iterator = (outerIter = (new AbstractMap$1($getUsedConnectorNames(conf).map_0)).this$01.entrySet_0().iterator() , new AbstractMap$1$1(outerIter)); connectorName$iterator.val$outerIter2.hasNext_0();) {\n      connectorName = (entry = castTo(connectorName$iterator.val$outerIter2.next_1(), 29) , castToString(entry.getKey()));\n      s += escapeHTML(connectorName) + '<br/>';\n    }\n    s += '<h2>To make an optimized widgetset based on these connectors:<\\/h2>';\n    s += '<h3>1. Add the following <b>to the end<\\/b> of your widgetset.gwt.xml file:<\\/h3>';\n    s += '<textarea rows=\"3\" style=\"width:90%\">';\n    s += '<generate-with class=\"OptimizedConnectorBundleLoaderFactory\">\\n';\n    s += '      <when-type-assignable class=\"com.vaadin.client.metadata.ConnectorBundleLoader\" />\\n';\n    s += '<\\/generate-with>\\n';\n    s += '<\\/textarea>';\n    s += '<h3>2. Add the following code into OptimizedConnectorBundleLoaderFactory.java:<\\/h3>';\n    s += '<textarea rows=\"5\" style=\"width:90%\">';\n    s += $generateOptimizedWidgetSet($getUsedConnectorNames(conf));\n    s += '<\\/textarea>';\n    s += \"<h3>3. Recompile your widgetset. For example with Maven: 'mvn compile vaadin:compile'<\\/h3>\";\n  }\n  $setTextOrHtml(h.directionalTextHelper, s, true);\n}\n\nfunction OptimizedWidgetsetPanel(){\n  FlowPanel.call(this);\n}\n\ndefineClass(1484, 81, $intern_60, OptimizedWidgetsetPanel);\nvar Lcom_vaadin_client_debug_internal_OptimizedWidgetsetPanel_2_classLit = createForClass('com.vaadin.client.debug.internal', 'OptimizedWidgetsetPanel', 1484, Lcom_google_gwt_user_client_ui_FlowPanel_2_classLit);\nfunction $clinit_SelectorPath(){\n  $clinit_SelectorPath = emptyMethod;\n  counter_0 = new HashMap;\n  legacyNames = new HashMap;\n  $putStringValue(legacyNames, 'FilterSelect', 'ComboBox');\n  $putStringValue(legacyNames, 'ScrollTable', 'Table');\n}\n\nfunction $generateFragment(fragment){\n  var elementClass, p, p$iterator, queryFragment;\n  elementClass = $split_0(fragment, '\\\\[', 0)[0] + 'Element.class';\n  queryFragment = '$(' + elementClass + ')';\n  for (p$iterator = new ArrayList$1(extractPredicates(fragment)); p$iterator.i < p$iterator.this$01.array.length;) {\n    p = castTo($next_7(p$iterator), 380);\n    queryFragment += '.' + p.name_0 + '(\"' + p.value_0 + '\")';\n  }\n  return queryFragment;\n}\n\nfunction $generateJavaVariable(pathFragment){\n  var elementType, name_0, predicates;\n  predicates = extractPredicates(pathFragment);\n  elementType = $split_0(pathFragment, '\\\\[', 0)[0];\n  name_0 = $getNameFromPredicates(predicates, elementType);\n  $equals_10(name_0, elementType) && (name_0 = $getNameWithCount(name_0));\n  name_0 = $replaceAll(name_0, '\\\\W', '');\n  return elementType + 'Element ' + name_0.substr(0, 1).toLowerCase() + name_0.substr(1) + ' = ';\n}\n\nfunction $getElementQuery(this$static){\n  var elementQueryString, fragments, i_0, index_0, p, p$iterator, postFilters, queryFragment, recursive, tmpPath;\n  if (this$static.path.length == 0 || $isValidForLegacyLocator(this$static.locator, this$static.path)) {\n    return $getLegacyLocatorQuery(this$static);\n  }\n  tmpPath = this$static.path;\n  postFilters = extractPostFilterPredicates(this$static.path);\n  if (postFilters.array.length > 0) {\n    tmpPath = $substring_1(tmpPath, 1, $lastIndexOf(tmpPath, fromCodePoint(41)));\n    tmpPath.indexOf('#') != -1 && (tmpPath = $split_0(tmpPath, '#', 0)[0]);\n  }\n  fragments = $split_0(tmpPath, '/', 0);\n  elementQueryString = '';\n  index_0 = 0;\n  for (p$iterator = new ArrayList$1(postFilters); p$iterator.i < p$iterator.this$01.array.length;) {\n    p = castTo($next_7(p$iterator), 380);\n    p.index_0 > 0 && (index_0 = p.index_0);\n  }\n  for (i_0 = 1; i_0 < fragments.length; ++i_0) {\n    if (fragments[i_0].length == 0) {\n      continue;\n    }\n    recursive = i_0 > 1 && fragments[i_0 - 1].length == 0;\n    queryFragment = elementQueryString.length == 0?'':'.';\n    queryFragment += (recursive?'':'$') + $generateFragment(fragments[i_0]);\n    elementQueryString += queryFragment;\n  }\n  $hasId(fragments[fragments.length - 1]) || (index_0 == 0?(elementQueryString += '.first()'):(elementQueryString += '.get(' + index_0 + ')'));\n  return $generateJavaVariable(fragments[fragments.length - 1]) + elementQueryString + ';';\n}\n\nfunction $getLegacyLocatorQuery(this$static){\n  var frags, name_0;\n  if (this$static.path.length == 0) {\n    name_0 = 'root';\n  }\n   else {\n    frags = $split_0(this$static.path, '/', 0);\n    name_0 = $split_0(frags[frags.length - 1], '\\\\[', 0)[0].substr(1);\n  }\n  $hasStringValue(legacyNames, name_0) && (name_0 = castToString($getStringValue(legacyNames, name_0)));\n  name_0 = $getNameWithCount(name_0);\n  return 'WebElement ' + name_0.substr(0, 1).toLowerCase() + name_0.substr(1) + ' = getDriver().findElement(By.vaadin(\"' + this$static.path + '\"));';\n}\n\nfunction $getNameFromPredicates(predicates, elementType){\n  var name_0, p, p$iterator;\n  name_0 = elementType;\n  for (p$iterator = new ArrayList$1(predicates); p$iterator.i < p$iterator.this$01.array.length;) {\n    p = castTo($next_7(p$iterator), 380);\n    if ($equals_10('caption', p.name_0)) {\n      name_0 = p.value_0 + ('' + elementType);\n    }\n     else if ($equals_10('id', p.name_0)) {\n      return p.value_0;\n    }\n  }\n  return name_0;\n}\n\nfunction $getNameWithCount(name_0){\n  $hasStringValue(counter_0, name_0) || $putStringValue(counter_0, name_0, valueOf_86(0));\n  $putStringValue(counter_0, name_0, valueOf_86(castTo($getStringValue(counter_0, name_0), 51).value_0 + 1));\n  name_0 += '' + $getStringValue(counter_0, name_0);\n  return name_0;\n}\n\nfunction $hasId(fragment){\n  var p, p$iterator;\n  for (p$iterator = new ArrayList$1(extractPredicates(fragment)); p$iterator.i < p$iterator.this$01.array.length;) {\n    p = castTo($next_7(p$iterator), 380);\n    if ($equals_10(p.name_0, 'id')) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction SelectorPath(c, e){\n  $clinit_SelectorPath();\n  this.element = e;\n  this.locator = new ComponentLocator(c.getConnection());\n  this.path = $getPathForElement(this.locator, e);\n}\n\ndefineClass(2946, 1, {}, SelectorPath);\nvar counter_0, legacyNames;\nvar Lcom_vaadin_client_debug_internal_SelectorPath_2_classLit = createForClass('com.vaadin.client.debug.internal', 'SelectorPath', 2946, Ljava_lang_Object_2_classLit);\nfunction $findConnector(element){\n  var a, a$iterator, connector;\n  for (a$iterator = ($clinit_ApplicationConfiguration() , new ArrayList$1(runningApplications_0)); a$iterator.i < a$iterator.this$01.array.length;) {\n    a = castTo($next_7(a$iterator), 393);\n    connector = getConnectorForElement(a, castTo($getWidget_1(a.uIConnector), 117), element);\n    !connector && (connector = getConnectorForElement(a, ($clinit_RootPanel() , get_0(null)), element));\n    if (connector) {\n      return connector;\n    }\n  }\n  return null;\n}\n\nfunction $pickSelector(this$static, connector, element){\n  var p, w;\n  p = new SelectorPath(connector, $getElement(findPaintable(connector.getConnection(), element).getWidget_0()));\n  w = new TestBenchSection$SelectorWidget(p);\n  $add_5(this$static.content_0, w);\n}\n\nfunction $startFind_0(this$static){\n  hideAll();\n  if (!this$static.highlightModeRegistration) {\n    this$static.highlightModeRegistration = addNativePreviewHandler(this$static.highlightModeHandler);\n    $addStyleDependentName(this$static.find_0, 'active');\n  }\n}\n\nfunction $stopFind_0(this$static){\n  if (this$static.highlightModeRegistration) {\n    $removeHandler_0(this$static.highlightModeRegistration.real);\n    this$static.highlightModeRegistration = null;\n    $removeStyleDependentName(this$static.find_0, 'active');\n  }\n  hideAll();\n}\n\nfunction $toggleFind_0(this$static){\n  this$static.highlightModeRegistration?$stopFind_0(this$static):$startFind_0(this$static);\n}\n\nfunction TestBenchSection(){\n  this.tabButton = new DebugButton(($clinit_Icon() , TESTBENCH), 'Pick Vaadin TestBench selectors');\n  this.content_0 = new FlowPanel;\n  this.selectorPanel = new FlowPanel;\n  new HashMap;\n  this.controls = new FlowPanel;\n  this.find_0 = new DebugButton(HIGHLIGHT, 'Pick an element and generate a query for it');\n  this.clear_0 = new DebugButton(CLEAR, 'Clear current elements');\n  this.highlightModeHandler = new TestBenchSection$1(this);\n  $add_5(this.controls, this.find_0);\n  $setStylePrimaryName(this.find_0, 'v-debugwindow-button');\n  $addDomHandler(this.find_0, new TestBenchSection$2(this), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  $add_5(this.controls, this.clear_0);\n  $setStylePrimaryName(this.clear_0, 'v-debugwindow-button');\n  $addDomHandler(this.clear_0, new TestBenchSection$3(this), (null , TYPE_1));\n  $setStylePrimaryName(this.content_0, 'v-debugwindow-testbench');\n  $add_5(this.content_0, this.selectorPanel);\n}\n\ndefineClass(1139, 1, $intern_222, TestBenchSection);\n_.getContent = function getContent_3(){\n  return this.content_0;\n}\n;\n_.getControls = function getControls_3(){\n  return this.controls;\n}\n;\n_.getTabButton = function getTabButton_3(){\n  return this.tabButton;\n}\n;\n_.hide = function hide_9(){\n  $stopFind_0(this);\n}\n;\n_.meta = function meta_4(ac, meta){\n}\n;\n_.show = function show_7(){\n}\n;\n_.uidl_0 = function uidl_6(ac, uidl){\n}\n;\n_.highlightModeRegistration = null;\nvar Lcom_vaadin_client_debug_internal_TestBenchSection_2_classLit = createForClass('com.vaadin.client.debug.internal', 'TestBenchSection', 1139, Ljava_lang_Object_2_classLit);\nfunction TestBenchSection$1(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1353, 1, $intern_76, TestBenchSection$1);\n_.onPreviewNativeEvent = function onPreviewNativeEvent_4(event_0){\n  var connector, eventTarget;\n  if ($getTypeInt(event_0.nativeEvent) == 128 && (event_0.nativeEvent.keyCode | 0) == 27) {\n    $stopFind_0(this.this$01);\n    hideAll();\n    return;\n  }\n  if ($getTypeInt(event_0.nativeEvent) == 64 || $getTypeInt(event_0.nativeEvent) == 1) {\n    eventTarget = getElementFromPoint((event_0.nativeEvent.clientX || 0) | 0, (event_0.nativeEvent.clientY || 0) | 0);\n    if ($isOrHasChild($getElement(($clinit_VDebugWindow() , !instance_3 && (instance_3 = new VDebugWindow) , $clinit_VDebugWindow() , instance_3)), eventTarget)) {\n      if (!!this.this$01.highlightModeRegistration && $getTypeInt(event_0.nativeEvent) == 1) {\n        $stopFind_0(this.this$01);\n        event_0.isCanceled = true;\n      }\n      return;\n    }\n    hideAll();\n    eventTarget = getElementFromPoint((event_0.nativeEvent.clientX || 0) | 0, (event_0.nativeEvent.clientY || 0) | 0);\n    connector = $findConnector(eventTarget);\n    if ($getTypeInt(event_0.nativeEvent) == 64) {\n      if (connector) {\n        hideAll();\n        connector?show_3(connector, 'red'):null;\n        event_0.isCanceled = true;\n        event_0.isConsumed = true;\n        event_0.nativeEvent.stopPropagation();\n        return;\n      }\n    }\n     else if ($getTypeInt(event_0.nativeEvent) == 1) {\n      event_0.isCanceled = true;\n      event_0.isConsumed = true;\n      event_0.nativeEvent.stopPropagation();\n      if (connector) {\n        hideAll();\n        connector?show_3(connector, 'red'):null;\n        $pickSelector(this.this$01, connector, eventTarget);\n        return;\n      }\n    }\n  }\n  event_0.isCanceled = true;\n}\n;\nvar Lcom_vaadin_client_debug_internal_TestBenchSection$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'TestBenchSection/1', 1353, Ljava_lang_Object_2_classLit);\nfunction TestBenchSection$2(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1354, 1, $intern_63, TestBenchSection$2);\n_.onClick = function onClick_19(event_0){\n  $toggleFind_0(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_TestBenchSection$2_2_classLit = createForClass('com.vaadin.client.debug.internal', 'TestBenchSection/2', 1354, Ljava_lang_Object_2_classLit);\nfunction TestBenchSection$3(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1355, 1, $intern_63, TestBenchSection$3);\n_.onClick = function onClick_20(event_0){\n  $clear_2(this.this$01.content_0);\n}\n;\nvar Lcom_vaadin_client_debug_internal_TestBenchSection$3_2_classLit = createForClass('com.vaadin.client.debug.internal', 'TestBenchSection/3', 1355, Ljava_lang_Object_2_classLit);\nfunction TestBenchSection$SelectorWidget(path){\n  var html;\n  HTML.call(this);\n  this.path = path;\n  html = '<div class=\"v-debugwindow-selector\"><span class=\"tb-selector\">' + escapeHTML($getElementQuery(path)) + '<\\/span><\\/div>';\n  $setTextOrHtml(this.directionalTextHelper, html, true);\n  $addDomHandler(this, this, ($clinit_MouseOverEvent() , $clinit_MouseOverEvent() , TYPE_12));\n  $addDomHandler(this, this, ($clinit_MouseOutEvent() , $clinit_MouseOutEvent() , TYPE_11));\n}\n\ndefineClass(1352, 106, {63:1, 89:1, 93:1, 99:1, 57:1, 56:1, 64:1, 65:1, 67:1, 66:1, 68:1, 69:1, 70:1, 91:1, 92:1, 90:1, 83:1, 97:1, 95:1, 96:1, 94:1, 98:1, 103:1, 102:1, 101:1, 100:1, 386:1, 646:1, 16:1, 8:1, 13:1, 157:1, 14:1, 144:1, 112:1, 12:1, 17:1, 126:1, 87:1, 88:1, 11:1, 10:1}, TestBenchSection$SelectorWidget);\n_.onMouseOut = function onMouseOut_3(event_0){\n  hideAll();\n}\n;\n_.onMouseOver = function onMouseOver_1(event_0){\n  var element;\n  hideAll();\n  element = this.path.element;\n  !!element && show_2(element, 'red');\n}\n;\nvar Lcom_vaadin_client_debug_internal_TestBenchSection$SelectorWidget_2_classLit = createForClass('com.vaadin.client.debug.internal', 'TestBenchSection/SelectorWidget', 1352, Lcom_google_gwt_user_client_ui_HTML_2_classLit);\nfunction $addSection(this$static, section){\n  var b;\n  b = section.getTabButton();\n  $addDomHandler(b, new VDebugWindow$4(this$static, section), ($clinit_ClickEvent() , $clinit_ClickEvent() , TYPE_1));\n  setStylePrimaryName(($clinit_DOM() , b.element_0), 'v-debugwindow-tab');\n  $add_5(this$static.tabs, b);\n  $add_22(this$static.sections, section);\n  !this$static.activeSection && $activateSection_0(this$static, section);\n}\n\nfunction formatDuration(ms){\n  var fmt, hours, millis, minutes, seconds;\n  fmt = ($clinit_NumberFormat() , new NumberFormat_0('00', $getDefaultNative()));\n  seconds = $format_0(fmt, (ms / $intern_30 | 0) % 60);\n  minutes = $format_0(fmt, (ms / $intern_28 | 0) % 60);\n  hours = $format_0(fmt, (ms / $intern_33 | 0) % 24);\n  millis = $format_0(new NumberFormat_0('000', $getDefaultNative()), ms % $intern_30);\n  return hours + 'h ' + minutes + 'm ' + seconds + 's ' + millis + 'ms';\n}\n\nfunction getTimingTooltip(sinceStart, sinceReset){\n  $clinit_VDebugWindow();\n  var title_0;\n  title_0 = formatDuration(sinceStart) + ' since start';\n  title_0 += ', &#10; ' + formatDuration(sinceReset) + ' since timer reset';\n  title_0 += ' &#10; @ ' + $format(($clinit_DateTimeFormat_0() , getFormat_0('HH:mm:ss.SSS', $getDateTimeFormatInfo(($clinit_LocaleInfo() , $clinit_LocaleInfo() , instance_1)))), new Date_0, null);\n  return title_0;\n}\n\nfunction VDebugWindow$4(this$0, val$section){\n  this.this$01 = this$0;\n  this.val$section2 = val$section;\n}\n\ndefineClass(1206, 1, $intern_63, VDebugWindow$4);\n_.onClick = function onClick_24(event_0){\n  $activateSection_0(this.this$01, this.val$section2);\n  $writeStoredState(this.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_VDebugWindow$4_2_classLit = createForClass('com.vaadin.client.debug.internal', 'VDebugWindow/4', 1206, Ljava_lang_Object_2_classLit);\nfunction VDebugWindow$5(this$0){\n  this.this$01 = this$0;\n}\n\ndefineClass(1140, 1, $intern_9, VDebugWindow$5);\n_.execute_1 = function execute_44(){\n  $readStoredState(this.this$01);\n  addResizeHandler(new VDebugWindow$5$1(this));\n}\n;\nvar Lcom_vaadin_client_debug_internal_VDebugWindow$5_2_classLit = createForClass('com.vaadin.client.debug.internal', 'VDebugWindow/5', 1140, Ljava_lang_Object_2_classLit);\nfunction VDebugWindow$5$1(this$1){\n  this.this$11 = this$1;\n  this.t = new VDebugWindow$5$1$1(this);\n}\n\ndefineClass(1207, 1, $intern_75, VDebugWindow$5$1);\n_.onResize = function onResize_4(event_0){\n  $cancel_0(this.t);\n  $schedule(this.t, $intern_30);\n}\n;\nvar Lcom_vaadin_client_debug_internal_VDebugWindow$5$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'VDebugWindow/5/1', 1207, Ljava_lang_Object_2_classLit);\nfunction VDebugWindow$5$1$1(this$2){\n  this.this$21 = this$2;\n  Timer.call(this);\n}\n\ndefineClass(1208, 62, {}, VDebugWindow$5$1$1);\n_.run_0 = function run_25(){\n  $applyPositionAndSize(this.this$21.this$11.this$01);\n}\n;\nvar Lcom_vaadin_client_debug_internal_VDebugWindow$5$1$1_2_classLit = createForClass('com.vaadin.client.debug.internal', 'VDebugWindow/5/1/1', 1208, Lcom_google_gwt_user_client_Timer_2_classLit);\nvar css_0, iconFontEot, iconFontSvg, iconFontTtf, iconFontWoff;\nfunction $ensureInjected(this$static){\n  if (!this$static.injected) {\n    this$static.injected = true;\n    $clinit_StyleInjector();\n    inject(($clinit_LocaleInfo() , $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontEotInitializer() , '.v-debug-console{background:#fff;opacity:0.9;border:1px solid #000;font-family:sans-serif;}.v-debug-console-caption{background:#000;border-bottom:1px solid grey;color:white;font-weight:bold;}.v-debug-console-content{font-size:x-small;overflow:auto;white-space:' + ('pre;}.v-debug-console-content input{font-size:xx-small;}.v-app .invalidlayout,.v-app .invalidlayout *{background:#f99 !important;}@font-face{font-family:\"vdebugfont\";src:' + (\"url('\" + iconFontEot.uri_0.uri_0 + \"')\") + ';}@font-face{font-family:' + '\"vdebugfont\"' + ';src:' + ($clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontWoffInitializer() , \"url('\" + iconFontWoff.uri_0.uri_0 + \"')\" + ' ' + 'format(' + '\"woff\"' + ')' + ',' + ' ' + \"url('\" + ($clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontTtfInitializer() , iconFontTtf.uri_0.uri_0) + \"')\" + ' ' + 'format(' + '\"truetype\"' + ')' + ',' + ' ' + \"url('\" + ($clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontSvgInitializer() , iconFontSvg.uri_0.uri_0) + \"')\" + ' ' + 'format(' + '\"svg\"' + ')') + ';font-weight:' + 'normal' + ';font-style:' + 'normal' + ';}.v-debugwindow [data-icon]:before,.v-debugwindow-menu [data-icon]:before{font-family:' + '\"vdebugfont\"' + ';content:' + 'attr(data-icon)') + ';speak:none;font-weight:normal;font-variant:normal;text-transform:none;line-height:1;-webkit-font-smoothing:antialiased;font-style:normal;vertical-align:text-bottom;}.v-debugwindow{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:' + 'border-box;opacity:0.8;color:#666;font-family:Arial, Helvetica, Tahoma, Verdana, sans-serif;font-size:13px;}.v-debugwindow-handle{position:absolute;bottom:0;background-color:#fff;opacity:0;z-index:1000;}.v-debugwindow-handle-sw{width:7px' + ';height:7px;}.v-debugwindow-handle-se{right:0;width:14px;height:14px;}.v-debugwindow:hover{opacity:1;}.v-debugwindow *{font-size:inherit !important;}.v-debugwindow-size0,.v-debugwindow-menu .v-debugwindow-button-size0{font-size:10px;}.v-debugwindow-size1,.v-debugwindow-menu .v-debugwindow-button-size1{font-size:13px;}.v-debugwindow-size2,.v-debugwindow-menu .v-debugwindow-button-size2{font-size:16px;}.v-debugwindow-head{text-align:right;background-color:' + 'transparent;}.v-debugwindow-tabs{display:inline-block;}.v-debugwindow-tab,.v-debugwindow-controls>*{width:2em;border:none;margin:0;line-height:1.5em;background-color:#fff;color:#666;}.v-debugwindow-tab{position:relative;top:1px;border-width:1px 0 1px 1px' + ';border-style:solid;border-color:#666;border-radius:2px 2px 0 0;}.v-debugwindow-tab-selected{color:#666;background-color:#fff;border-bottom:1px solid #fff;}.v-debugwindow-controls{position:relative;top:1px;display:inline-block;background-color:#fff;border:' + '1px solid #666;border-radius:2px 2px 0 0;}.v-debugwindow-section-head{text-align:left;background-color:#fff;border:1px solid #666;border-bottom:1px solid #999;box-shadow:0 0 7px 0 rgba(55, 55, 55, 0.6);min-height:1.5em;line-height:1.5em;padding-left:5px;}.v-debugwindow-button{border:none' + ';background-color:transparent;color:#666;}.v-debugwindow-button:hover{color:#000;text-decoration:underline;}.v-debugwindow-button-active{color:#666;box-shadow:1px 1px 3px 0 inset;}.v-debugwindow-content{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;box-shadow:0 0 7px 0 rgba(55, 55, 55, 0.6);background-color:' + '#fff;border:1px solid #666;border-top:none;}.v-debugwindow-menu{background-color:#fff;padding:4px;border:1px solid #999;border-top:none;border-radius:0 0 5px 5px;box-shadow:0 0 7px 0 rgba(55, 55, 55, 0.6);}.v-debugwindow-menu-content{min-width:100px;}.v-debugwindow-menu-content .v-debugwindow-button{line-height:22px' + ';}.v-debugwindow-menu-content>div>.v-debugwindow-button{width:33%;}.v-debugwindow-row{display:table-row;}.v-debugwindow-row:nth-child(odd){background-color:rgba(0, 61, 255, 0.11);}.v-debugwindow-row>span{display:table-cell;padding:4px;}.v-debugwindow-row.SEVERE{color:#500;background-color:#ffc5c5;}.v-debugwindow-row.WARNING{background-color:#ff9;}.v-debugwindow-row.FINE{color:#737373;}.v-debugwindow-row.FINER{color:gray;}.v-debugwindow-row.FINEST{color:' + '#8c8c8c;}.v-debugwindow-row>span.caption{color:#999;text-align:right;white-space:nowrap;}.v-debugwindow-row>span.value,.v-debugwindow-selector>span.value{width:100%;}.v-debugwindow-selector :hover{background:rgba(255, 32, 32, 0.5);}.v-debugwindow-log{font-family:monospace;}.v-debugwindow-log .v-debugwindow-reset{color:#fff;background-color:#4c92ed;padding:4px;}.v-debugwindow-log .v-debugwindow-time{text-align:right' + ';color:#999;}.v-debugwindow-log .v-debugwindow-message{white-space:nowrap;width:100%;}.v-debugwindow-log .v-debugwindow-message:hover{white-space:normal;word-wrap:break-word;}.v-debugwindow-log .v-debugwindow-message em{background-color:#c4e6f8;}.v-debugwindow-hierarchy .v-debugwindow-info{padding:1em;}.v-debugwindow-network .v-debugwindow-row{display:block !important;}.v-debugwindow-network .v-debugwindow-row>span{display:inline;}'));\n    return true;\n  }\n  return false;\n}\n\nfunction DebugWindowStyles_default_InlineClientBundleGenerator$1(){\n}\n\ndefineClass(1356, 1, {}, DebugWindowStyles_default_InlineClientBundleGenerator$1);\n_.injected = false;\nvar Lcom_vaadin_client_debug_internal_theme_DebugWindowStyles_1default_1InlineClientBundleGenerator$1_2_classLit = createForClass('com.vaadin.client.debug.internal.theme', 'DebugWindowStyles_default_InlineClientBundleGenerator/1', 1356, Ljava_lang_Object_2_classLit);\nfunction $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$cssInitializer(){\n  $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$cssInitializer = emptyMethod;\n  css_0 = new DebugWindowStyles_default_InlineClientBundleGenerator$1;\n}\n\nfunction $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontEotInitializer(){\n  $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontEotInitializer = emptyMethod;\n  iconFontEot = new DataResourcePrototype(($clinit_UriUtils() , new SafeUriString(($clinit_Impl() , $moduleBase) + '333A66D5307B1C8C9935C59A877F1993.cache.eot')));\n}\n\nfunction $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontSvgInitializer(){\n  $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontSvgInitializer = emptyMethod;\n  iconFontSvg = new DataResourcePrototype(($clinit_UriUtils() , new SafeUriString(($clinit_Impl() , $moduleBase) + 'C81F8CA7CA7012F31BDE883DF6C99E61.cache.svg')));\n}\n\nfunction $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontTtfInitializer(){\n  $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontTtfInitializer = emptyMethod;\n  iconFontTtf = new DataResourcePrototype(($clinit_UriUtils() , new SafeUriString(($clinit_Impl() , $moduleBase) + 'D03281BC3FDB49177B485D1DC10A13C4.cache.ttf')));\n}\n\nfunction $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontWoffInitializer(){\n  $clinit_DebugWindowStyles_default_InlineClientBundleGenerator$iconFontWoffInitializer = emptyMethod;\n  iconFontWoff = new DataResourcePrototype(($clinit_UriUtils() , new SafeUriString(($clinit_Impl() , $moduleBase) + '51DCB1D3F3D956ACC80F89D3CF0AC5BE.cache.woff')));\n}\n\nfunction $showServerDebugInfo(this$static, p0){\n  $invoke(this$static.val$handler2, new Method(new Type(Lcom_vaadin_shared_ui_ui_DebugWindowServerRpc_2_classLit), 'showServerDebugInfo'), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_2, 1, 5, [p0]));\n}\n\nfunction $showServerDesign(this$static, p0){\n  $invoke(this$static.val$handler2, new Method(new Type(Lcom_vaadin_shared_ui_ui_DebugWindowServerRpc_2_classLit), 'showServerDesign'), stampJavaTypeInfo(getClassLiteralForArray(Ljava_lang_Object_2_classLit, 1), $intern_2, 1, 5, [p0]));\n}\n\nfunction $getDisplayName(this$static){\n  var b, camelCase, charAt, i_0;\n  camelCase = this$static.name_0;\n  b = new StringBuilder_0;\n  for (i_0 = 0; i_0 < camelCase.length; i_0++) {\n    charAt = (checkCriticalStringElementIndex(i_0, camelCase.length) , camelCase.charCodeAt(i_0));\n    if (i_0 == 0) {\n      $append_0(b, $charAt_0(String.fromCharCode(charAt).toUpperCase(), 0));\n    }\n     else if ($charAt_0(String.fromCharCode(charAt).toUpperCase(), 0) == charAt && (leterRegex == null && (leterRegex = new RegExp('[A-Z]', 'i')) , leterRegex.test(String.fromCharCode(charAt)))) {\n      b.string += ' ';\n      $append_0(b, $charAt_0(String.fromCharCode(charAt).toLowerCase(), 0));\n    }\n     else {\n      b.string += String.fromCharCode(charAt);\n    }\n  }\n  return b.string;\n}\n\ndefineClass(1048, 218, $intern_72);\n_.addDoubleClickHandler = function addDoubleClickHandler_5(handler){\n  return $addDomHandler(this, handler, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n}\n;\nfunction $showServerDebugInfo_0(this$static, serverConnector){\n  $showServerDebugInfo(castTo($getRpcProxy(this$static, Lcom_vaadin_shared_ui_ui_DebugWindowServerRpc_2_classLit), 1107), serverConnector);\n}\n\nfunction $showServerDesign_0(this$static, connector){\n  $showServerDesign(castTo($getRpcProxy(this$static, Lcom_vaadin_shared_ui_ui_DebugWindowServerRpc_2_classLit), 1107), connector);\n}\n\ndefineClass(1058, 218, $intern_72);\n_.addDoubleClickHandler = function addDoubleClickHandler_6(handler){\n  return $addDomHandler(this, handler, ($clinit_DoubleClickEvent() , $clinit_DoubleClickEvent() , TYPE_3));\n}\n;\nfunction $charAt(this$static, index_0){\n  return $charAt_0(this$static.string, index_0);\n}\n\nfunction $replace0(this$static, start_0, end, toInsert){\n  this$static.string = $substring_1(this$static.string, 0, start_0) + ('' + toInsert) + $substring_0(this$static.string, end);\n}\n\nfunction $setCharAt(this$static, index_0, x_0){\n  $replace0(this$static, index_0, index_0 + 1, String.fromCharCode(x_0));\n}\n\nvar leterRegex;\nfunction $delete(this$static, start_0, end){\n  this$static.string = $substring_1(this$static.string, 0, start_0) + '' + $substring_0(this$static.string, end);\n  return this$static;\n}\n\nfunction $insert_4(this$static, index_0, x_0){\n  this$static.string = $substring_1(this$static.string, 0, index_0) + ('' + x_0) + $substring_0(this$static.string, index_0);\n  return this$static;\n}\n\n$entry(onLoad)(1);\n\n//# sourceURL=com.stpl.app.v8.AppWidgetSet-1.js\n")
