/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.IvldBestPrice;
import com.stpl.app.model.IvldBestPriceModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldBestPrice service. Represents a row in the &quot;IVLD_BEST_PRICE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link IvldBestPriceModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldBestPriceImpl}.
 * </p>
 *
 * @author
 * @see IvldBestPriceImpl
 * @see IvldBestPrice
 * @see IvldBestPriceModel
 * @generated
 */
@ProviderType
public class IvldBestPriceModelImpl extends BaseModelImpl<IvldBestPrice>
	implements IvldBestPriceModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ivld best price model instance should use the {@link IvldBestPrice} interface instead.
	 */
	public static final String TABLE_NAME = "IVLD_BEST_PRICE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ITEM_DESC", Types.VARCHAR },
			{ "BEST_PRICE_INTFID", Types.VARCHAR },
			{ "ACCOUNT_ID", Types.VARCHAR },
			{ "SELLING_PRICE", Types.VARCHAR },
			{ "PERIOD", Types.VARCHAR },
			{ "ITEM_ID", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SOURCE", Types.VARCHAR },
			{ "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
			{ "INITIAL_DISCOUNT", Types.VARCHAR },
			{ "ERROR_CODE", Types.VARCHAR },
			{ "MODIFIED_BY", Types.VARCHAR },
			{ "INTF_INSERTED_DATE", Types.TIMESTAMP },
			{ "ITEM_NO", Types.VARCHAR },
			{ "REPROCESSED_FLAG", Types.VARCHAR },
			{ "CONTRACT_END_DATE", Types.VARCHAR },
			{ "IVLD_BEST_PRICE_SID", Types.INTEGER },
			{ "CONTRACT_ID", Types.VARCHAR },
			{ "BEGINNING_WAC_PACKAGE", Types.VARCHAR },
			{ "REASON_FOR_FAILURE", Types.VARCHAR },
			{ "CONTRACT_START_DATE", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "ERROR_FIELD", Types.VARCHAR },
			{ "INITIAL_BEST_PRICE", Types.VARCHAR },
			{ "CONTRACT_NO", Types.VARCHAR },
			{ "CHECK_RECORD", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ITEM_DESC", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BEST_PRICE_INTFID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCOUNT_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SELLING_PRICE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PERIOD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ADD_CHG_DEL_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INITIAL_DISCOUNT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INTF_INSERTED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REPROCESSED_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_END_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IVLD_BEST_PRICE_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CONTRACT_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BEGINNING_WAC_PACKAGE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REASON_FOR_FAILURE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_START_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_FIELD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INITIAL_BEST_PRICE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table IVLD_BEST_PRICE (ITEM_DESC VARCHAR(75) null,BEST_PRICE_INTFID VARCHAR(75) null,ACCOUNT_ID VARCHAR(75) null,SELLING_PRICE VARCHAR(75) null,PERIOD VARCHAR(75) null,ITEM_ID VARCHAR(75) null,MODIFIED_DATE DATE null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,SOURCE VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,INITIAL_DISCOUNT VARCHAR(75) null,ERROR_CODE VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,INTF_INSERTED_DATE DATE null,ITEM_NO VARCHAR(75) null,REPROCESSED_FLAG VARCHAR(75) null,CONTRACT_END_DATE VARCHAR(75) null,IVLD_BEST_PRICE_SID INTEGER not null primary key IDENTITY,CONTRACT_ID VARCHAR(75) null,BEGINNING_WAC_PACKAGE VARCHAR(75) null,REASON_FOR_FAILURE VARCHAR(75) null,CONTRACT_START_DATE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,ERROR_FIELD VARCHAR(75) null,INITIAL_BEST_PRICE VARCHAR(75) null,CONTRACT_NO VARCHAR(75) null,CHECK_RECORD BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table IVLD_BEST_PRICE";
	public static final String ORDER_BY_JPQL = " ORDER BY ivldBestPrice.ivldBestPriceSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IVLD_BEST_PRICE.IVLD_BEST_PRICE_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.IvldBestPrice"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.IvldBestPrice"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.IvldBestPrice"));

	public IvldBestPriceModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ivldBestPriceSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setIvldBestPriceSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ivldBestPriceSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return IvldBestPrice.class;
	}

	@Override
	public String getModelClassName() {
		return IvldBestPrice.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("itemDesc", getItemDesc());
		attributes.put("bestPriceIntfid", getBestPriceIntfid());
		attributes.put("accountId", getAccountId());
		attributes.put("sellingPrice", getSellingPrice());
		attributes.put("period", getPeriod());
		attributes.put("itemId", getItemId());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("source", getSource());
		attributes.put("addChgDelIndicator", getAddChgDelIndicator());
		attributes.put("initialDiscount", getInitialDiscount());
		attributes.put("errorCode", getErrorCode());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("intfInsertedDate", getIntfInsertedDate());
		attributes.put("itemNo", getItemNo());
		attributes.put("reprocessedFlag", getReprocessedFlag());
		attributes.put("contractEndDate", getContractEndDate());
		attributes.put("ivldBestPriceSid", getIvldBestPriceSid());
		attributes.put("contractId", getContractId());
		attributes.put("beginningWacPackage", getBeginningWacPackage());
		attributes.put("reasonForFailure", getReasonForFailure());
		attributes.put("contractStartDate", getContractStartDate());
		attributes.put("batchId", getBatchId());
		attributes.put("errorField", getErrorField());
		attributes.put("initialBestPrice", getInitialBestPrice());
		attributes.put("contractNo", getContractNo());
		attributes.put("checkRecord", getCheckRecord());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String itemDesc = (String)attributes.get("itemDesc");

		if (itemDesc != null) {
			setItemDesc(itemDesc);
		}

		String bestPriceIntfid = (String)attributes.get("bestPriceIntfid");

		if (bestPriceIntfid != null) {
			setBestPriceIntfid(bestPriceIntfid);
		}

		String accountId = (String)attributes.get("accountId");

		if (accountId != null) {
			setAccountId(accountId);
		}

		String sellingPrice = (String)attributes.get("sellingPrice");

		if (sellingPrice != null) {
			setSellingPrice(sellingPrice);
		}

		String period = (String)attributes.get("period");

		if (period != null) {
			setPeriod(period);
		}

		String itemId = (String)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		String addChgDelIndicator = (String)attributes.get("addChgDelIndicator");

		if (addChgDelIndicator != null) {
			setAddChgDelIndicator(addChgDelIndicator);
		}

		String initialDiscount = (String)attributes.get("initialDiscount");

		if (initialDiscount != null) {
			setInitialDiscount(initialDiscount);
		}

		String errorCode = (String)attributes.get("errorCode");

		if (errorCode != null) {
			setErrorCode(errorCode);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date intfInsertedDate = (Date)attributes.get("intfInsertedDate");

		if (intfInsertedDate != null) {
			setIntfInsertedDate(intfInsertedDate);
		}

		String itemNo = (String)attributes.get("itemNo");

		if (itemNo != null) {
			setItemNo(itemNo);
		}

		String reprocessedFlag = (String)attributes.get("reprocessedFlag");

		if (reprocessedFlag != null) {
			setReprocessedFlag(reprocessedFlag);
		}

		String contractEndDate = (String)attributes.get("contractEndDate");

		if (contractEndDate != null) {
			setContractEndDate(contractEndDate);
		}

		Integer ivldBestPriceSid = (Integer)attributes.get("ivldBestPriceSid");

		if (ivldBestPriceSid != null) {
			setIvldBestPriceSid(ivldBestPriceSid);
		}

		String contractId = (String)attributes.get("contractId");

		if (contractId != null) {
			setContractId(contractId);
		}

		String beginningWacPackage = (String)attributes.get(
				"beginningWacPackage");

		if (beginningWacPackage != null) {
			setBeginningWacPackage(beginningWacPackage);
		}

		String reasonForFailure = (String)attributes.get("reasonForFailure");

		if (reasonForFailure != null) {
			setReasonForFailure(reasonForFailure);
		}

		String contractStartDate = (String)attributes.get("contractStartDate");

		if (contractStartDate != null) {
			setContractStartDate(contractStartDate);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String errorField = (String)attributes.get("errorField");

		if (errorField != null) {
			setErrorField(errorField);
		}

		String initialBestPrice = (String)attributes.get("initialBestPrice");

		if (initialBestPrice != null) {
			setInitialBestPrice(initialBestPrice);
		}

		String contractNo = (String)attributes.get("contractNo");

		if (contractNo != null) {
			setContractNo(contractNo);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}
	}

	@Override
	public String getItemDesc() {
		if (_itemDesc == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemDesc;
		}
	}

	@Override
	public void setItemDesc(String itemDesc) {
		_itemDesc = itemDesc;
	}

	@Override
	public String getBestPriceIntfid() {
		if (_bestPriceIntfid == null) {
			return StringPool.BLANK;
		}
		else {
			return _bestPriceIntfid;
		}
	}

	@Override
	public void setBestPriceIntfid(String bestPriceIntfid) {
		_bestPriceIntfid = bestPriceIntfid;
	}

	@Override
	public String getAccountId() {
		if (_accountId == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountId;
		}
	}

	@Override
	public void setAccountId(String accountId) {
		_accountId = accountId;
	}

	@Override
	public String getSellingPrice() {
		if (_sellingPrice == null) {
			return StringPool.BLANK;
		}
		else {
			return _sellingPrice;
		}
	}

	@Override
	public void setSellingPrice(String sellingPrice) {
		_sellingPrice = sellingPrice;
	}

	@Override
	public String getPeriod() {
		if (_period == null) {
			return StringPool.BLANK;
		}
		else {
			return _period;
		}
	}

	@Override
	public void setPeriod(String period) {
		_period = period;
	}

	@Override
	public String getItemId() {
		if (_itemId == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemId;
		}
	}

	@Override
	public void setItemId(String itemId) {
		_itemId = itemId;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public String getAddChgDelIndicator() {
		if (_addChgDelIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _addChgDelIndicator;
		}
	}

	@Override
	public void setAddChgDelIndicator(String addChgDelIndicator) {
		_addChgDelIndicator = addChgDelIndicator;
	}

	@Override
	public String getInitialDiscount() {
		if (_initialDiscount == null) {
			return StringPool.BLANK;
		}
		else {
			return _initialDiscount;
		}
	}

	@Override
	public void setInitialDiscount(String initialDiscount) {
		_initialDiscount = initialDiscount;
	}

	@Override
	public String getErrorCode() {
		if (_errorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorCode;
		}
	}

	@Override
	public void setErrorCode(String errorCode) {
		_errorCode = errorCode;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getIntfInsertedDate() {
		return _intfInsertedDate;
	}

	@Override
	public void setIntfInsertedDate(Date intfInsertedDate) {
		_intfInsertedDate = intfInsertedDate;
	}

	@Override
	public String getItemNo() {
		if (_itemNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemNo;
		}
	}

	@Override
	public void setItemNo(String itemNo) {
		_itemNo = itemNo;
	}

	@Override
	public String getReprocessedFlag() {
		if (_reprocessedFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _reprocessedFlag;
		}
	}

	@Override
	public void setReprocessedFlag(String reprocessedFlag) {
		_reprocessedFlag = reprocessedFlag;
	}

	@Override
	public String getContractEndDate() {
		if (_contractEndDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractEndDate;
		}
	}

	@Override
	public void setContractEndDate(String contractEndDate) {
		_contractEndDate = contractEndDate;
	}

	@Override
	public int getIvldBestPriceSid() {
		return _ivldBestPriceSid;
	}

	@Override
	public void setIvldBestPriceSid(int ivldBestPriceSid) {
		_ivldBestPriceSid = ivldBestPriceSid;
	}

	@Override
	public String getContractId() {
		if (_contractId == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractId;
		}
	}

	@Override
	public void setContractId(String contractId) {
		_contractId = contractId;
	}

	@Override
	public String getBeginningWacPackage() {
		if (_beginningWacPackage == null) {
			return StringPool.BLANK;
		}
		else {
			return _beginningWacPackage;
		}
	}

	@Override
	public void setBeginningWacPackage(String beginningWacPackage) {
		_beginningWacPackage = beginningWacPackage;
	}

	@Override
	public String getReasonForFailure() {
		if (_reasonForFailure == null) {
			return StringPool.BLANK;
		}
		else {
			return _reasonForFailure;
		}
	}

	@Override
	public void setReasonForFailure(String reasonForFailure) {
		_reasonForFailure = reasonForFailure;
	}

	@Override
	public String getContractStartDate() {
		if (_contractStartDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractStartDate;
		}
	}

	@Override
	public void setContractStartDate(String contractStartDate) {
		_contractStartDate = contractStartDate;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getErrorField() {
		if (_errorField == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorField;
		}
	}

	@Override
	public void setErrorField(String errorField) {
		_errorField = errorField;
	}

	@Override
	public String getInitialBestPrice() {
		if (_initialBestPrice == null) {
			return StringPool.BLANK;
		}
		else {
			return _initialBestPrice;
		}
	}

	@Override
	public void setInitialBestPrice(String initialBestPrice) {
		_initialBestPrice = initialBestPrice;
	}

	@Override
	public String getContractNo() {
		if (_contractNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractNo;
		}
	}

	@Override
	public void setContractNo(String contractNo) {
		_contractNo = contractNo;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public IvldBestPrice toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (IvldBestPrice)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		IvldBestPriceImpl ivldBestPriceImpl = new IvldBestPriceImpl();

		ivldBestPriceImpl.setItemDesc(getItemDesc());
		ivldBestPriceImpl.setBestPriceIntfid(getBestPriceIntfid());
		ivldBestPriceImpl.setAccountId(getAccountId());
		ivldBestPriceImpl.setSellingPrice(getSellingPrice());
		ivldBestPriceImpl.setPeriod(getPeriod());
		ivldBestPriceImpl.setItemId(getItemId());
		ivldBestPriceImpl.setModifiedDate(getModifiedDate());
		ivldBestPriceImpl.setCreatedBy(getCreatedBy());
		ivldBestPriceImpl.setCreatedDate(getCreatedDate());
		ivldBestPriceImpl.setSource(getSource());
		ivldBestPriceImpl.setAddChgDelIndicator(getAddChgDelIndicator());
		ivldBestPriceImpl.setInitialDiscount(getInitialDiscount());
		ivldBestPriceImpl.setErrorCode(getErrorCode());
		ivldBestPriceImpl.setModifiedBy(getModifiedBy());
		ivldBestPriceImpl.setIntfInsertedDate(getIntfInsertedDate());
		ivldBestPriceImpl.setItemNo(getItemNo());
		ivldBestPriceImpl.setReprocessedFlag(getReprocessedFlag());
		ivldBestPriceImpl.setContractEndDate(getContractEndDate());
		ivldBestPriceImpl.setIvldBestPriceSid(getIvldBestPriceSid());
		ivldBestPriceImpl.setContractId(getContractId());
		ivldBestPriceImpl.setBeginningWacPackage(getBeginningWacPackage());
		ivldBestPriceImpl.setReasonForFailure(getReasonForFailure());
		ivldBestPriceImpl.setContractStartDate(getContractStartDate());
		ivldBestPriceImpl.setBatchId(getBatchId());
		ivldBestPriceImpl.setErrorField(getErrorField());
		ivldBestPriceImpl.setInitialBestPrice(getInitialBestPrice());
		ivldBestPriceImpl.setContractNo(getContractNo());
		ivldBestPriceImpl.setCheckRecord(getCheckRecord());

		ivldBestPriceImpl.resetOriginalValues();

		return ivldBestPriceImpl;
	}

	@Override
	public int compareTo(IvldBestPrice ivldBestPrice) {
		int primaryKey = ivldBestPrice.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof IvldBestPrice)) {
			return false;
		}

		IvldBestPrice ivldBestPrice = (IvldBestPrice)obj;

		int primaryKey = ivldBestPrice.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<IvldBestPrice> toCacheModel() {
		IvldBestPriceCacheModel ivldBestPriceCacheModel = new IvldBestPriceCacheModel();

		ivldBestPriceCacheModel.itemDesc = getItemDesc();

		String itemDesc = ivldBestPriceCacheModel.itemDesc;

		if ((itemDesc != null) && (itemDesc.length() == 0)) {
			ivldBestPriceCacheModel.itemDesc = null;
		}

		ivldBestPriceCacheModel.bestPriceIntfid = getBestPriceIntfid();

		String bestPriceIntfid = ivldBestPriceCacheModel.bestPriceIntfid;

		if ((bestPriceIntfid != null) && (bestPriceIntfid.length() == 0)) {
			ivldBestPriceCacheModel.bestPriceIntfid = null;
		}

		ivldBestPriceCacheModel.accountId = getAccountId();

		String accountId = ivldBestPriceCacheModel.accountId;

		if ((accountId != null) && (accountId.length() == 0)) {
			ivldBestPriceCacheModel.accountId = null;
		}

		ivldBestPriceCacheModel.sellingPrice = getSellingPrice();

		String sellingPrice = ivldBestPriceCacheModel.sellingPrice;

		if ((sellingPrice != null) && (sellingPrice.length() == 0)) {
			ivldBestPriceCacheModel.sellingPrice = null;
		}

		ivldBestPriceCacheModel.period = getPeriod();

		String period = ivldBestPriceCacheModel.period;

		if ((period != null) && (period.length() == 0)) {
			ivldBestPriceCacheModel.period = null;
		}

		ivldBestPriceCacheModel.itemId = getItemId();

		String itemId = ivldBestPriceCacheModel.itemId;

		if ((itemId != null) && (itemId.length() == 0)) {
			ivldBestPriceCacheModel.itemId = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ivldBestPriceCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ivldBestPriceCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ivldBestPriceCacheModel.createdBy = getCreatedBy();

		String createdBy = ivldBestPriceCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			ivldBestPriceCacheModel.createdBy = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			ivldBestPriceCacheModel.createdDate = createdDate.getTime();
		}
		else {
			ivldBestPriceCacheModel.createdDate = Long.MIN_VALUE;
		}

		ivldBestPriceCacheModel.source = getSource();

		String source = ivldBestPriceCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			ivldBestPriceCacheModel.source = null;
		}

		ivldBestPriceCacheModel.addChgDelIndicator = getAddChgDelIndicator();

		String addChgDelIndicator = ivldBestPriceCacheModel.addChgDelIndicator;

		if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
			ivldBestPriceCacheModel.addChgDelIndicator = null;
		}

		ivldBestPriceCacheModel.initialDiscount = getInitialDiscount();

		String initialDiscount = ivldBestPriceCacheModel.initialDiscount;

		if ((initialDiscount != null) && (initialDiscount.length() == 0)) {
			ivldBestPriceCacheModel.initialDiscount = null;
		}

		ivldBestPriceCacheModel.errorCode = getErrorCode();

		String errorCode = ivldBestPriceCacheModel.errorCode;

		if ((errorCode != null) && (errorCode.length() == 0)) {
			ivldBestPriceCacheModel.errorCode = null;
		}

		ivldBestPriceCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = ivldBestPriceCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			ivldBestPriceCacheModel.modifiedBy = null;
		}

		Date intfInsertedDate = getIntfInsertedDate();

		if (intfInsertedDate != null) {
			ivldBestPriceCacheModel.intfInsertedDate = intfInsertedDate.getTime();
		}
		else {
			ivldBestPriceCacheModel.intfInsertedDate = Long.MIN_VALUE;
		}

		ivldBestPriceCacheModel.itemNo = getItemNo();

		String itemNo = ivldBestPriceCacheModel.itemNo;

		if ((itemNo != null) && (itemNo.length() == 0)) {
			ivldBestPriceCacheModel.itemNo = null;
		}

		ivldBestPriceCacheModel.reprocessedFlag = getReprocessedFlag();

		String reprocessedFlag = ivldBestPriceCacheModel.reprocessedFlag;

		if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
			ivldBestPriceCacheModel.reprocessedFlag = null;
		}

		ivldBestPriceCacheModel.contractEndDate = getContractEndDate();

		String contractEndDate = ivldBestPriceCacheModel.contractEndDate;

		if ((contractEndDate != null) && (contractEndDate.length() == 0)) {
			ivldBestPriceCacheModel.contractEndDate = null;
		}

		ivldBestPriceCacheModel.ivldBestPriceSid = getIvldBestPriceSid();

		ivldBestPriceCacheModel.contractId = getContractId();

		String contractId = ivldBestPriceCacheModel.contractId;

		if ((contractId != null) && (contractId.length() == 0)) {
			ivldBestPriceCacheModel.contractId = null;
		}

		ivldBestPriceCacheModel.beginningWacPackage = getBeginningWacPackage();

		String beginningWacPackage = ivldBestPriceCacheModel.beginningWacPackage;

		if ((beginningWacPackage != null) &&
				(beginningWacPackage.length() == 0)) {
			ivldBestPriceCacheModel.beginningWacPackage = null;
		}

		ivldBestPriceCacheModel.reasonForFailure = getReasonForFailure();

		String reasonForFailure = ivldBestPriceCacheModel.reasonForFailure;

		if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
			ivldBestPriceCacheModel.reasonForFailure = null;
		}

		ivldBestPriceCacheModel.contractStartDate = getContractStartDate();

		String contractStartDate = ivldBestPriceCacheModel.contractStartDate;

		if ((contractStartDate != null) && (contractStartDate.length() == 0)) {
			ivldBestPriceCacheModel.contractStartDate = null;
		}

		ivldBestPriceCacheModel.batchId = getBatchId();

		String batchId = ivldBestPriceCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			ivldBestPriceCacheModel.batchId = null;
		}

		ivldBestPriceCacheModel.errorField = getErrorField();

		String errorField = ivldBestPriceCacheModel.errorField;

		if ((errorField != null) && (errorField.length() == 0)) {
			ivldBestPriceCacheModel.errorField = null;
		}

		ivldBestPriceCacheModel.initialBestPrice = getInitialBestPrice();

		String initialBestPrice = ivldBestPriceCacheModel.initialBestPrice;

		if ((initialBestPrice != null) && (initialBestPrice.length() == 0)) {
			ivldBestPriceCacheModel.initialBestPrice = null;
		}

		ivldBestPriceCacheModel.contractNo = getContractNo();

		String contractNo = ivldBestPriceCacheModel.contractNo;

		if ((contractNo != null) && (contractNo.length() == 0)) {
			ivldBestPriceCacheModel.contractNo = null;
		}

		ivldBestPriceCacheModel.checkRecord = getCheckRecord();

		return ivldBestPriceCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(57);

		sb.append("{itemDesc=");
		sb.append(getItemDesc());
		sb.append(", bestPriceIntfid=");
		sb.append(getBestPriceIntfid());
		sb.append(", accountId=");
		sb.append(getAccountId());
		sb.append(", sellingPrice=");
		sb.append(getSellingPrice());
		sb.append(", period=");
		sb.append(getPeriod());
		sb.append(", itemId=");
		sb.append(getItemId());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", addChgDelIndicator=");
		sb.append(getAddChgDelIndicator());
		sb.append(", initialDiscount=");
		sb.append(getInitialDiscount());
		sb.append(", errorCode=");
		sb.append(getErrorCode());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", intfInsertedDate=");
		sb.append(getIntfInsertedDate());
		sb.append(", itemNo=");
		sb.append(getItemNo());
		sb.append(", reprocessedFlag=");
		sb.append(getReprocessedFlag());
		sb.append(", contractEndDate=");
		sb.append(getContractEndDate());
		sb.append(", ivldBestPriceSid=");
		sb.append(getIvldBestPriceSid());
		sb.append(", contractId=");
		sb.append(getContractId());
		sb.append(", beginningWacPackage=");
		sb.append(getBeginningWacPackage());
		sb.append(", reasonForFailure=");
		sb.append(getReasonForFailure());
		sb.append(", contractStartDate=");
		sb.append(getContractStartDate());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", errorField=");
		sb.append(getErrorField());
		sb.append(", initialBestPrice=");
		sb.append(getInitialBestPrice());
		sb.append(", contractNo=");
		sb.append(getContractNo());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(88);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.IvldBestPrice");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>itemDesc</column-name><column-value><![CDATA[");
		sb.append(getItemDesc());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bestPriceIntfid</column-name><column-value><![CDATA[");
		sb.append(getBestPriceIntfid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountId</column-name><column-value><![CDATA[");
		sb.append(getAccountId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sellingPrice</column-name><column-value><![CDATA[");
		sb.append(getSellingPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>period</column-name><column-value><![CDATA[");
		sb.append(getPeriod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
		sb.append(getAddChgDelIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>initialDiscount</column-name><column-value><![CDATA[");
		sb.append(getInitialDiscount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorCode</column-name><column-value><![CDATA[");
		sb.append(getErrorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
		sb.append(getIntfInsertedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemNo</column-name><column-value><![CDATA[");
		sb.append(getItemNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
		sb.append(getReprocessedFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractEndDate</column-name><column-value><![CDATA[");
		sb.append(getContractEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ivldBestPriceSid</column-name><column-value><![CDATA[");
		sb.append(getIvldBestPriceSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractId</column-name><column-value><![CDATA[");
		sb.append(getContractId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>beginningWacPackage</column-name><column-value><![CDATA[");
		sb.append(getBeginningWacPackage());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
		sb.append(getReasonForFailure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractStartDate</column-name><column-value><![CDATA[");
		sb.append(getContractStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorField</column-name><column-value><![CDATA[");
		sb.append(getErrorField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>initialBestPrice</column-name><column-value><![CDATA[");
		sb.append(getInitialBestPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractNo</column-name><column-value><![CDATA[");
		sb.append(getContractNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = IvldBestPrice.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			IvldBestPrice.class
		};
	private String _itemDesc;
	private String _bestPriceIntfid;
	private String _accountId;
	private String _sellingPrice;
	private String _period;
	private String _itemId;
	private Date _modifiedDate;
	private String _createdBy;
	private Date _createdDate;
	private String _source;
	private String _addChgDelIndicator;
	private String _initialDiscount;
	private String _errorCode;
	private String _modifiedBy;
	private Date _intfInsertedDate;
	private String _itemNo;
	private String _reprocessedFlag;
	private String _contractEndDate;
	private int _ivldBestPriceSid;
	private String _contractId;
	private String _beginningWacPackage;
	private String _reasonForFailure;
	private String _contractStartDate;
	private String _batchId;
	private String _errorField;
	private String _initialBestPrice;
	private String _contractNo;
	private boolean _checkRecord;
	private IvldBestPrice _escapedModel;
}