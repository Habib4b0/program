package com.stpl.app.parttwo.model.impl;

import com.stpl.app.parttwo.model.CffApprovalDetails;
import com.stpl.app.parttwo.model.CffApprovalDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CffApprovalDetails service. Represents a row in the &quot;CFF_APPROVAL_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.parttwo.model.CffApprovalDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CffApprovalDetailsImpl}.
 * </p>
 *
 * @author
 * @see CffApprovalDetailsImpl
 * @see com.stpl.app.parttwo.model.CffApprovalDetails
 * @see com.stpl.app.parttwo.model.CffApprovalDetailsModel
 * @generated
 */
public class CffApprovalDetailsModelImpl extends BaseModelImpl<CffApprovalDetails>
    implements CffApprovalDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a cff approval details model instance should use the {@link com.stpl.app.parttwo.model.CffApprovalDetails} interface instead.
     */
    public static final String TABLE_NAME = "CFF_APPROVAL_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "APPROVAL_SEQUENCE", Types.INTEGER },
            { "APPROVED_DATE", Types.TIMESTAMP },
            { "APPROVED_BY", Types.INTEGER },
            { "APPROVAL_STATUS", Types.INTEGER },
            { "CFF_MASTER_SID", Types.INTEGER },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "CFF_APPROVAL_DETAILS_SID", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table CFF_APPROVAL_DETAILS (APPROVAL_SEQUENCE INTEGER,APPROVED_DATE DATE null,APPROVED_BY INTEGER,APPROVAL_STATUS INTEGER,CFF_MASTER_SID INTEGER,INBOUND_STATUS VARCHAR(75) null,CFF_APPROVAL_DETAILS_SID INTEGER not null primary key IDENTITY)";
    public static final String TABLE_SQL_DROP = "drop table CFF_APPROVAL_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY cffApprovalDetails.cffApprovalDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY CFF_APPROVAL_DETAILS.CFF_APPROVAL_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.parttwo.model.CffApprovalDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.parttwo.model.CffApprovalDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.parttwo.model.CffApprovalDetails"));
    private static ClassLoader _classLoader = CffApprovalDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            CffApprovalDetails.class
        };
    private int _approvalSequence;
    private Date _approvedDate;
    private int _approvedBy;
    private int _approvalStatus;
    private int _cffMasterSid;
    private String _inboundStatus;
    private int _cffApprovalDetailsSid;
    private CffApprovalDetails _escapedModel;

    public CffApprovalDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _cffApprovalDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setCffApprovalDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _cffApprovalDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return CffApprovalDetails.class;
    }

    @Override
    public String getModelClassName() {
        return CffApprovalDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("approvalSequence", getApprovalSequence());
        attributes.put("approvedDate", getApprovedDate());
        attributes.put("approvedBy", getApprovedBy());
        attributes.put("approvalStatus", getApprovalStatus());
        attributes.put("cffMasterSid", getCffMasterSid());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("cffApprovalDetailsSid", getCffApprovalDetailsSid());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer approvalSequence = (Integer) attributes.get("approvalSequence");

        if (approvalSequence != null) {
            setApprovalSequence(approvalSequence);
        }

        Date approvedDate = (Date) attributes.get("approvedDate");

        if (approvedDate != null) {
            setApprovedDate(approvedDate);
        }

        Integer approvedBy = (Integer) attributes.get("approvedBy");

        if (approvedBy != null) {
            setApprovedBy(approvedBy);
        }

        Integer approvalStatus = (Integer) attributes.get("approvalStatus");

        if (approvalStatus != null) {
            setApprovalStatus(approvalStatus);
        }

        Integer cffMasterSid = (Integer) attributes.get("cffMasterSid");

        if (cffMasterSid != null) {
            setCffMasterSid(cffMasterSid);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        Integer cffApprovalDetailsSid = (Integer) attributes.get(
                "cffApprovalDetailsSid");

        if (cffApprovalDetailsSid != null) {
            setCffApprovalDetailsSid(cffApprovalDetailsSid);
        }
    }

    @Override
    public int getApprovalSequence() {
        return _approvalSequence;
    }

    @Override
    public void setApprovalSequence(int approvalSequence) {
        _approvalSequence = approvalSequence;
    }

    @Override
    public Date getApprovedDate() {
        return _approvedDate;
    }

    @Override
    public void setApprovedDate(Date approvedDate) {
        _approvedDate = approvedDate;
    }

    @Override
    public int getApprovedBy() {
        return _approvedBy;
    }

    @Override
    public void setApprovedBy(int approvedBy) {
        _approvedBy = approvedBy;
    }

    @Override
    public int getApprovalStatus() {
        return _approvalStatus;
    }

    @Override
    public void setApprovalStatus(int approvalStatus) {
        _approvalStatus = approvalStatus;
    }

    @Override
    public int getCffMasterSid() {
        return _cffMasterSid;
    }

    @Override
    public void setCffMasterSid(int cffMasterSid) {
        _cffMasterSid = cffMasterSid;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public int getCffApprovalDetailsSid() {
        return _cffApprovalDetailsSid;
    }

    @Override
    public void setCffApprovalDetailsSid(int cffApprovalDetailsSid) {
        _cffApprovalDetailsSid = cffApprovalDetailsSid;
    }

    @Override
    public CffApprovalDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (CffApprovalDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        CffApprovalDetailsImpl cffApprovalDetailsImpl = new CffApprovalDetailsImpl();

        cffApprovalDetailsImpl.setApprovalSequence(getApprovalSequence());
        cffApprovalDetailsImpl.setApprovedDate(getApprovedDate());
        cffApprovalDetailsImpl.setApprovedBy(getApprovedBy());
        cffApprovalDetailsImpl.setApprovalStatus(getApprovalStatus());
        cffApprovalDetailsImpl.setCffMasterSid(getCffMasterSid());
        cffApprovalDetailsImpl.setInboundStatus(getInboundStatus());
        cffApprovalDetailsImpl.setCffApprovalDetailsSid(getCffApprovalDetailsSid());

        cffApprovalDetailsImpl.resetOriginalValues();

        return cffApprovalDetailsImpl;
    }

    @Override
    public int compareTo(CffApprovalDetails cffApprovalDetails) {
        int primaryKey = cffApprovalDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof CffApprovalDetails)) {
            return false;
        }

        CffApprovalDetails cffApprovalDetails = (CffApprovalDetails) obj;

        int primaryKey = cffApprovalDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<CffApprovalDetails> toCacheModel() {
        CffApprovalDetailsCacheModel cffApprovalDetailsCacheModel = new CffApprovalDetailsCacheModel();

        cffApprovalDetailsCacheModel.approvalSequence = getApprovalSequence();

        Date approvedDate = getApprovedDate();

        if (approvedDate != null) {
            cffApprovalDetailsCacheModel.approvedDate = approvedDate.getTime();
        } else {
            cffApprovalDetailsCacheModel.approvedDate = Long.MIN_VALUE;
        }

        cffApprovalDetailsCacheModel.approvedBy = getApprovedBy();

        cffApprovalDetailsCacheModel.approvalStatus = getApprovalStatus();

        cffApprovalDetailsCacheModel.cffMasterSid = getCffMasterSid();

        cffApprovalDetailsCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = cffApprovalDetailsCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            cffApprovalDetailsCacheModel.inboundStatus = null;
        }

        cffApprovalDetailsCacheModel.cffApprovalDetailsSid = getCffApprovalDetailsSid();

        return cffApprovalDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(15);

        sb.append("{approvalSequence=");
        sb.append(getApprovalSequence());
        sb.append(", approvedDate=");
        sb.append(getApprovedDate());
        sb.append(", approvedBy=");
        sb.append(getApprovedBy());
        sb.append(", approvalStatus=");
        sb.append(getApprovalStatus());
        sb.append(", cffMasterSid=");
        sb.append(getCffMasterSid());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", cffApprovalDetailsSid=");
        sb.append(getCffApprovalDetailsSid());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(25);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.parttwo.model.CffApprovalDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>approvalSequence</column-name><column-value><![CDATA[");
        sb.append(getApprovalSequence());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>approvedDate</column-name><column-value><![CDATA[");
        sb.append(getApprovedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>approvedBy</column-name><column-value><![CDATA[");
        sb.append(getApprovedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>approvalStatus</column-name><column-value><![CDATA[");
        sb.append(getApprovalStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cffMasterSid</column-name><column-value><![CDATA[");
        sb.append(getCffMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cffApprovalDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getCffApprovalDetailsSid());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
