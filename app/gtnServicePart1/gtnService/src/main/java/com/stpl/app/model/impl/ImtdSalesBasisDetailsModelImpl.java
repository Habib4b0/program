/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.ImtdSalesBasisDetails;
import com.stpl.app.model.ImtdSalesBasisDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ImtdSalesBasisDetails service. Represents a row in the &quot;IMTD_SALES_BASIS_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ImtdSalesBasisDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ImtdSalesBasisDetailsImpl}.
 * </p>
 *
 * @author
 * @see ImtdSalesBasisDetailsImpl
 * @see ImtdSalesBasisDetails
 * @see ImtdSalesBasisDetailsModel
 * @generated
 */
@ProviderType
public class ImtdSalesBasisDetailsModelImpl extends BaseModelImpl<ImtdSalesBasisDetails>
	implements ImtdSalesBasisDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a imtd sales basis details model instance should use the {@link ImtdSalesBasisDetails} interface instead.
	 */
	public static final String TABLE_NAME = "IMTD_SALES_BASIS_DETAILS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CREATED_BY", Types.INTEGER },
			{ "NET_SALES_FORMULA_MASTER_SID", Types.INTEGER },
			{ "USERS_SID", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CONTRACT_MASTER_SID", Types.INTEGER },
			{ "CFP_NO", Types.VARCHAR },
			{ "IMTD_CREATED_DATE", Types.VARCHAR },
			{ "CONTRACT_NO", Types.VARCHAR },
			{ "CONTRACT_NAME", Types.VARCHAR },
			{ "SALES_BASIS_DETAILS_SID", Types.INTEGER },
			{ "CHECK_RECORD", Types.BOOLEAN },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "CUSTOMER_NAME", Types.VARCHAR },
			{ "OPERATION", Types.VARCHAR },
			{ "CUSTOMER_NO", Types.VARCHAR },
			{ "IMTD_SALES_BASIS_DETAILS_SID", Types.INTEGER },
			{ "CFP_NAME", Types.VARCHAR },
			{ "CDR_MODEL_SID", Types.INTEGER },
			{ "SESSION_ID", Types.VARCHAR },
			{ "CFP_CONTRACT_DETAILS_SID", Types.INTEGER },
			{ "INBOUND_STATUS", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("NET_SALES_FORMULA_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("USERS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CONTRACT_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IMTD_CREATED_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SALES_BASIS_DETAILS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CUSTOMER_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("OPERATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CUSTOMER_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IMTD_SALES_BASIS_DETAILS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CDR_MODEL_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("SESSION_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_CONTRACT_DETAILS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table IMTD_SALES_BASIS_DETAILS (CREATED_BY INTEGER,NET_SALES_FORMULA_MASTER_SID INTEGER,USERS_SID INTEGER,MODIFIED_BY INTEGER,CREATED_DATE DATE null,CONTRACT_MASTER_SID INTEGER,CFP_NO VARCHAR(75) null,IMTD_CREATED_DATE VARCHAR(75) null,CONTRACT_NO VARCHAR(75) null,CONTRACT_NAME VARCHAR(75) null,SALES_BASIS_DETAILS_SID INTEGER,CHECK_RECORD BOOLEAN,MODIFIED_DATE DATE null,CUSTOMER_NAME VARCHAR(75) null,OPERATION VARCHAR(75) null,CUSTOMER_NO VARCHAR(75) null,IMTD_SALES_BASIS_DETAILS_SID INTEGER not null primary key IDENTITY,CFP_NAME VARCHAR(75) null,CDR_MODEL_SID INTEGER,SESSION_ID VARCHAR(75) null,CFP_CONTRACT_DETAILS_SID INTEGER,INBOUND_STATUS VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table IMTD_SALES_BASIS_DETAILS";
	public static final String ORDER_BY_JPQL = " ORDER BY imtdSalesBasisDetails.imtdSalesBasisDetailsSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IMTD_SALES_BASIS_DETAILS.IMTD_SALES_BASIS_DETAILS_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.ImtdSalesBasisDetails"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.ImtdSalesBasisDetails"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.ImtdSalesBasisDetails"));

	public ImtdSalesBasisDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _imtdSalesBasisDetailsSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setImtdSalesBasisDetailsSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _imtdSalesBasisDetailsSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ImtdSalesBasisDetails.class;
	}

	@Override
	public String getModelClassName() {
		return ImtdSalesBasisDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("createdBy", getCreatedBy());
		attributes.put("netSalesFormulaMasterSid", getNetSalesFormulaMasterSid());
		attributes.put("usersSid", getUsersSid());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("contractMasterSid", getContractMasterSid());
		attributes.put("cfpNo", getCfpNo());
		attributes.put("imtdCreatedDate", getImtdCreatedDate());
		attributes.put("contractNo", getContractNo());
		attributes.put("contractName", getContractName());
		attributes.put("salesBasisDetailsSid", getSalesBasisDetailsSid());
		attributes.put("checkRecord", getCheckRecord());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("customerName", getCustomerName());
		attributes.put("operation", getOperation());
		attributes.put("customerNo", getCustomerNo());
		attributes.put("imtdSalesBasisDetailsSid", getImtdSalesBasisDetailsSid());
		attributes.put("cfpName", getCfpName());
		attributes.put("cdrModelSid", getCdrModelSid());
		attributes.put("sessionId", getSessionId());
		attributes.put("cfpContractDetailsSid", getCfpContractDetailsSid());
		attributes.put("inboundStatus", getInboundStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer netSalesFormulaMasterSid = (Integer)attributes.get(
				"netSalesFormulaMasterSid");

		if (netSalesFormulaMasterSid != null) {
			setNetSalesFormulaMasterSid(netSalesFormulaMasterSid);
		}

		Integer usersSid = (Integer)attributes.get("usersSid");

		if (usersSid != null) {
			setUsersSid(usersSid);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Integer contractMasterSid = (Integer)attributes.get("contractMasterSid");

		if (contractMasterSid != null) {
			setContractMasterSid(contractMasterSid);
		}

		String cfpNo = (String)attributes.get("cfpNo");

		if (cfpNo != null) {
			setCfpNo(cfpNo);
		}

		String imtdCreatedDate = (String)attributes.get("imtdCreatedDate");

		if (imtdCreatedDate != null) {
			setImtdCreatedDate(imtdCreatedDate);
		}

		String contractNo = (String)attributes.get("contractNo");

		if (contractNo != null) {
			setContractNo(contractNo);
		}

		String contractName = (String)attributes.get("contractName");

		if (contractName != null) {
			setContractName(contractName);
		}

		Integer salesBasisDetailsSid = (Integer)attributes.get(
				"salesBasisDetailsSid");

		if (salesBasisDetailsSid != null) {
			setSalesBasisDetailsSid(salesBasisDetailsSid);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String customerName = (String)attributes.get("customerName");

		if (customerName != null) {
			setCustomerName(customerName);
		}

		String operation = (String)attributes.get("operation");

		if (operation != null) {
			setOperation(operation);
		}

		String customerNo = (String)attributes.get("customerNo");

		if (customerNo != null) {
			setCustomerNo(customerNo);
		}

		Integer imtdSalesBasisDetailsSid = (Integer)attributes.get(
				"imtdSalesBasisDetailsSid");

		if (imtdSalesBasisDetailsSid != null) {
			setImtdSalesBasisDetailsSid(imtdSalesBasisDetailsSid);
		}

		String cfpName = (String)attributes.get("cfpName");

		if (cfpName != null) {
			setCfpName(cfpName);
		}

		Integer cdrModelSid = (Integer)attributes.get("cdrModelSid");

		if (cdrModelSid != null) {
			setCdrModelSid(cdrModelSid);
		}

		String sessionId = (String)attributes.get("sessionId");

		if (sessionId != null) {
			setSessionId(sessionId);
		}

		Integer cfpContractDetailsSid = (Integer)attributes.get(
				"cfpContractDetailsSid");

		if (cfpContractDetailsSid != null) {
			setCfpContractDetailsSid(cfpContractDetailsSid);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getNetSalesFormulaMasterSid() {
		return _netSalesFormulaMasterSid;
	}

	@Override
	public void setNetSalesFormulaMasterSid(int netSalesFormulaMasterSid) {
		_netSalesFormulaMasterSid = netSalesFormulaMasterSid;
	}

	@Override
	public int getUsersSid() {
		return _usersSid;
	}

	@Override
	public void setUsersSid(int usersSid) {
		_usersSid = usersSid;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public int getContractMasterSid() {
		return _contractMasterSid;
	}

	@Override
	public void setContractMasterSid(int contractMasterSid) {
		_contractMasterSid = contractMasterSid;
	}

	@Override
	public String getCfpNo() {
		if (_cfpNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _cfpNo;
		}
	}

	@Override
	public void setCfpNo(String cfpNo) {
		_cfpNo = cfpNo;
	}

	@Override
	public String getImtdCreatedDate() {
		if (_imtdCreatedDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _imtdCreatedDate;
		}
	}

	@Override
	public void setImtdCreatedDate(String imtdCreatedDate) {
		_imtdCreatedDate = imtdCreatedDate;
	}

	@Override
	public String getContractNo() {
		if (_contractNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractNo;
		}
	}

	@Override
	public void setContractNo(String contractNo) {
		_contractNo = contractNo;
	}

	@Override
	public String getContractName() {
		if (_contractName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractName;
		}
	}

	@Override
	public void setContractName(String contractName) {
		_contractName = contractName;
	}

	@Override
	public int getSalesBasisDetailsSid() {
		return _salesBasisDetailsSid;
	}

	@Override
	public void setSalesBasisDetailsSid(int salesBasisDetailsSid) {
		_salesBasisDetailsSid = salesBasisDetailsSid;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getCustomerName() {
		if (_customerName == null) {
			return StringPool.BLANK;
		}
		else {
			return _customerName;
		}
	}

	@Override
	public void setCustomerName(String customerName) {
		_customerName = customerName;
	}

	@Override
	public String getOperation() {
		if (_operation == null) {
			return StringPool.BLANK;
		}
		else {
			return _operation;
		}
	}

	@Override
	public void setOperation(String operation) {
		_operation = operation;
	}

	@Override
	public String getCustomerNo() {
		if (_customerNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _customerNo;
		}
	}

	@Override
	public void setCustomerNo(String customerNo) {
		_customerNo = customerNo;
	}

	@Override
	public int getImtdSalesBasisDetailsSid() {
		return _imtdSalesBasisDetailsSid;
	}

	@Override
	public void setImtdSalesBasisDetailsSid(int imtdSalesBasisDetailsSid) {
		_imtdSalesBasisDetailsSid = imtdSalesBasisDetailsSid;
	}

	@Override
	public String getCfpName() {
		if (_cfpName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cfpName;
		}
	}

	@Override
	public void setCfpName(String cfpName) {
		_cfpName = cfpName;
	}

	@Override
	public int getCdrModelSid() {
		return _cdrModelSid;
	}

	@Override
	public void setCdrModelSid(int cdrModelSid) {
		_cdrModelSid = cdrModelSid;
	}

	@Override
	public String getSessionId() {
		if (_sessionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _sessionId;
		}
	}

	@Override
	public void setSessionId(String sessionId) {
		_sessionId = sessionId;
	}

	@Override
	public int getCfpContractDetailsSid() {
		return _cfpContractDetailsSid;
	}

	@Override
	public void setCfpContractDetailsSid(int cfpContractDetailsSid) {
		_cfpContractDetailsSid = cfpContractDetailsSid;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	@Override
	public ImtdSalesBasisDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ImtdSalesBasisDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ImtdSalesBasisDetailsImpl imtdSalesBasisDetailsImpl = new ImtdSalesBasisDetailsImpl();

		imtdSalesBasisDetailsImpl.setCreatedBy(getCreatedBy());
		imtdSalesBasisDetailsImpl.setNetSalesFormulaMasterSid(getNetSalesFormulaMasterSid());
		imtdSalesBasisDetailsImpl.setUsersSid(getUsersSid());
		imtdSalesBasisDetailsImpl.setModifiedBy(getModifiedBy());
		imtdSalesBasisDetailsImpl.setCreatedDate(getCreatedDate());
		imtdSalesBasisDetailsImpl.setContractMasterSid(getContractMasterSid());
		imtdSalesBasisDetailsImpl.setCfpNo(getCfpNo());
		imtdSalesBasisDetailsImpl.setImtdCreatedDate(getImtdCreatedDate());
		imtdSalesBasisDetailsImpl.setContractNo(getContractNo());
		imtdSalesBasisDetailsImpl.setContractName(getContractName());
		imtdSalesBasisDetailsImpl.setSalesBasisDetailsSid(getSalesBasisDetailsSid());
		imtdSalesBasisDetailsImpl.setCheckRecord(getCheckRecord());
		imtdSalesBasisDetailsImpl.setModifiedDate(getModifiedDate());
		imtdSalesBasisDetailsImpl.setCustomerName(getCustomerName());
		imtdSalesBasisDetailsImpl.setOperation(getOperation());
		imtdSalesBasisDetailsImpl.setCustomerNo(getCustomerNo());
		imtdSalesBasisDetailsImpl.setImtdSalesBasisDetailsSid(getImtdSalesBasisDetailsSid());
		imtdSalesBasisDetailsImpl.setCfpName(getCfpName());
		imtdSalesBasisDetailsImpl.setCdrModelSid(getCdrModelSid());
		imtdSalesBasisDetailsImpl.setSessionId(getSessionId());
		imtdSalesBasisDetailsImpl.setCfpContractDetailsSid(getCfpContractDetailsSid());
		imtdSalesBasisDetailsImpl.setInboundStatus(getInboundStatus());

		imtdSalesBasisDetailsImpl.resetOriginalValues();

		return imtdSalesBasisDetailsImpl;
	}

	@Override
	public int compareTo(ImtdSalesBasisDetails imtdSalesBasisDetails) {
		int primaryKey = imtdSalesBasisDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ImtdSalesBasisDetails)) {
			return false;
		}

		ImtdSalesBasisDetails imtdSalesBasisDetails = (ImtdSalesBasisDetails)obj;

		int primaryKey = imtdSalesBasisDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<ImtdSalesBasisDetails> toCacheModel() {
		ImtdSalesBasisDetailsCacheModel imtdSalesBasisDetailsCacheModel = new ImtdSalesBasisDetailsCacheModel();

		imtdSalesBasisDetailsCacheModel.createdBy = getCreatedBy();

		imtdSalesBasisDetailsCacheModel.netSalesFormulaMasterSid = getNetSalesFormulaMasterSid();

		imtdSalesBasisDetailsCacheModel.usersSid = getUsersSid();

		imtdSalesBasisDetailsCacheModel.modifiedBy = getModifiedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			imtdSalesBasisDetailsCacheModel.createdDate = createdDate.getTime();
		}
		else {
			imtdSalesBasisDetailsCacheModel.createdDate = Long.MIN_VALUE;
		}

		imtdSalesBasisDetailsCacheModel.contractMasterSid = getContractMasterSid();

		imtdSalesBasisDetailsCacheModel.cfpNo = getCfpNo();

		String cfpNo = imtdSalesBasisDetailsCacheModel.cfpNo;

		if ((cfpNo != null) && (cfpNo.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.cfpNo = null;
		}

		imtdSalesBasisDetailsCacheModel.imtdCreatedDate = getImtdCreatedDate();

		String imtdCreatedDate = imtdSalesBasisDetailsCacheModel.imtdCreatedDate;

		if ((imtdCreatedDate != null) && (imtdCreatedDate.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.imtdCreatedDate = null;
		}

		imtdSalesBasisDetailsCacheModel.contractNo = getContractNo();

		String contractNo = imtdSalesBasisDetailsCacheModel.contractNo;

		if ((contractNo != null) && (contractNo.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.contractNo = null;
		}

		imtdSalesBasisDetailsCacheModel.contractName = getContractName();

		String contractName = imtdSalesBasisDetailsCacheModel.contractName;

		if ((contractName != null) && (contractName.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.contractName = null;
		}

		imtdSalesBasisDetailsCacheModel.salesBasisDetailsSid = getSalesBasisDetailsSid();

		imtdSalesBasisDetailsCacheModel.checkRecord = getCheckRecord();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			imtdSalesBasisDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			imtdSalesBasisDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		imtdSalesBasisDetailsCacheModel.customerName = getCustomerName();

		String customerName = imtdSalesBasisDetailsCacheModel.customerName;

		if ((customerName != null) && (customerName.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.customerName = null;
		}

		imtdSalesBasisDetailsCacheModel.operation = getOperation();

		String operation = imtdSalesBasisDetailsCacheModel.operation;

		if ((operation != null) && (operation.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.operation = null;
		}

		imtdSalesBasisDetailsCacheModel.customerNo = getCustomerNo();

		String customerNo = imtdSalesBasisDetailsCacheModel.customerNo;

		if ((customerNo != null) && (customerNo.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.customerNo = null;
		}

		imtdSalesBasisDetailsCacheModel.imtdSalesBasisDetailsSid = getImtdSalesBasisDetailsSid();

		imtdSalesBasisDetailsCacheModel.cfpName = getCfpName();

		String cfpName = imtdSalesBasisDetailsCacheModel.cfpName;

		if ((cfpName != null) && (cfpName.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.cfpName = null;
		}

		imtdSalesBasisDetailsCacheModel.cdrModelSid = getCdrModelSid();

		imtdSalesBasisDetailsCacheModel.sessionId = getSessionId();

		String sessionId = imtdSalesBasisDetailsCacheModel.sessionId;

		if ((sessionId != null) && (sessionId.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.sessionId = null;
		}

		imtdSalesBasisDetailsCacheModel.cfpContractDetailsSid = getCfpContractDetailsSid();

		imtdSalesBasisDetailsCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = imtdSalesBasisDetailsCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			imtdSalesBasisDetailsCacheModel.inboundStatus = null;
		}

		return imtdSalesBasisDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(45);

		sb.append("{createdBy=");
		sb.append(getCreatedBy());
		sb.append(", netSalesFormulaMasterSid=");
		sb.append(getNetSalesFormulaMasterSid());
		sb.append(", usersSid=");
		sb.append(getUsersSid());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", contractMasterSid=");
		sb.append(getContractMasterSid());
		sb.append(", cfpNo=");
		sb.append(getCfpNo());
		sb.append(", imtdCreatedDate=");
		sb.append(getImtdCreatedDate());
		sb.append(", contractNo=");
		sb.append(getContractNo());
		sb.append(", contractName=");
		sb.append(getContractName());
		sb.append(", salesBasisDetailsSid=");
		sb.append(getSalesBasisDetailsSid());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", customerName=");
		sb.append(getCustomerName());
		sb.append(", operation=");
		sb.append(getOperation());
		sb.append(", customerNo=");
		sb.append(getCustomerNo());
		sb.append(", imtdSalesBasisDetailsSid=");
		sb.append(getImtdSalesBasisDetailsSid());
		sb.append(", cfpName=");
		sb.append(getCfpName());
		sb.append(", cdrModelSid=");
		sb.append(getCdrModelSid());
		sb.append(", sessionId=");
		sb.append(getSessionId());
		sb.append(", cfpContractDetailsSid=");
		sb.append(getCfpContractDetailsSid());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(70);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.ImtdSalesBasisDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>netSalesFormulaMasterSid</column-name><column-value><![CDATA[");
		sb.append(getNetSalesFormulaMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usersSid</column-name><column-value><![CDATA[");
		sb.append(getUsersSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
		sb.append(getContractMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpNo</column-name><column-value><![CDATA[");
		sb.append(getCfpNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imtdCreatedDate</column-name><column-value><![CDATA[");
		sb.append(getImtdCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractNo</column-name><column-value><![CDATA[");
		sb.append(getContractNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractName</column-name><column-value><![CDATA[");
		sb.append(getContractName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>salesBasisDetailsSid</column-name><column-value><![CDATA[");
		sb.append(getSalesBasisDetailsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerName</column-name><column-value><![CDATA[");
		sb.append(getCustomerName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>operation</column-name><column-value><![CDATA[");
		sb.append(getOperation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerNo</column-name><column-value><![CDATA[");
		sb.append(getCustomerNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>imtdSalesBasisDetailsSid</column-name><column-value><![CDATA[");
		sb.append(getImtdSalesBasisDetailsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpName</column-name><column-value><![CDATA[");
		sb.append(getCfpName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cdrModelSid</column-name><column-value><![CDATA[");
		sb.append(getCdrModelSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sessionId</column-name><column-value><![CDATA[");
		sb.append(getSessionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpContractDetailsSid</column-name><column-value><![CDATA[");
		sb.append(getCfpContractDetailsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ImtdSalesBasisDetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ImtdSalesBasisDetails.class
		};
	private int _createdBy;
	private int _netSalesFormulaMasterSid;
	private int _usersSid;
	private int _modifiedBy;
	private Date _createdDate;
	private int _contractMasterSid;
	private String _cfpNo;
	private String _imtdCreatedDate;
	private String _contractNo;
	private String _contractName;
	private int _salesBasisDetailsSid;
	private boolean _checkRecord;
	private Date _modifiedDate;
	private String _customerName;
	private String _operation;
	private String _customerNo;
	private int _imtdSalesBasisDetailsSid;
	private String _cfpName;
	private int _cdrModelSid;
	private String _sessionId;
	private int _cfpContractDetailsSid;
	private String _inboundStatus;
	private ImtdSalesBasisDetails _escapedModel;
}