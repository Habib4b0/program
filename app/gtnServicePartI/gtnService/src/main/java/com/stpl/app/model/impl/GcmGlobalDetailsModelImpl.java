/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.GcmGlobalDetails;
import com.stpl.app.model.GcmGlobalDetailsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the GcmGlobalDetails service. Represents a row in the &quot;GCM_GLOBAL_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link GcmGlobalDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GcmGlobalDetailsImpl}.
 * </p>
 *
 * @author
 * @see GcmGlobalDetailsImpl
 * @see GcmGlobalDetails
 * @see GcmGlobalDetailsModel
 * @generated
 */
@ProviderType
public class GcmGlobalDetailsModelImpl extends BaseModelImpl<GcmGlobalDetails>
	implements GcmGlobalDetailsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a gcm global details model instance should use the {@link GcmGlobalDetails} interface instead.
	 */
	public static final String TABLE_NAME = "GCM_GLOBAL_DETAILS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ITEM_STATUS", Types.VARCHAR },
			{ "FORMULA_METHOD_ID", Types.VARCHAR },
			{ "MODULE_NAME", Types.VARCHAR },
			{ "PAYMENT_FREQUENCY", Types.VARCHAR },
			{ "END_DATE", Types.TIMESTAMP },
			{ "CFP_START_DATE", Types.TIMESTAMP },
			{ "PRICE_PROTECTION_START_DATE", Types.TIMESTAMP },
			{ "TEMP_ITEM_MASTER_SID", Types.VARCHAR },
			{ "BRAND_NAME", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "CONTRACT_MASTER_SID", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "SUB_MODULE_NAME", Types.VARCHAR },
			{ "THERAPUTIC_CLASS", Types.VARCHAR },
			{ "GCM_GLOBAL_DETAILS_SID", Types.INTEGER },
			{ "CHECK_RECORD", Types.BOOLEAN },
			{ "PAYMENT_METHOD", Types.VARCHAR },
			{ "CONTRACT_PRICE_END_DATE", Types.TIMESTAMP },
			{ "PS_CONTRACT_SID", Types.INTEGER },
			{ "PRICE_PROTECTION_END_DATE", Types.TIMESTAMP },
			{ "START_DATE", Types.TIMESTAMP },
			{ "SCREEN_NAME", Types.VARCHAR },
			{ "RS_CONTRACT_SID", Types.INTEGER },
			{ "ITEM_NAME", Types.VARCHAR },
			{ "SESSION_ID", Types.VARCHAR },
			{ "CFP_STATUS", Types.VARCHAR },
			{ "RS_MODEL_SID", Types.INTEGER },
			{ "CFP_CONTRACT_SID", Types.INTEGER },
			{ "PRICE", Types.DOUBLE },
			{ "TEMP_END_DATE", Types.TIMESTAMP },
			{ "ITEM_MASTER_SID", Types.INTEGER },
			{ "ITEM_TYPE", Types.VARCHAR },
			{ "FORECASTING_TYPE", Types.VARCHAR },
			{ "ITEM_ID", Types.VARCHAR },
			{ "BASE_PRICE", Types.DOUBLE },
			{ "STATUS", Types.VARCHAR },
			{ "FORMULA_NAME", Types.VARCHAR },
			{ "WORKFLOW_MASTER_SID", Types.INTEGER },
			{ "PRICE_TOLERANCE", Types.DOUBLE },
			{ "CREATED_BY", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "TEMP_START_DATE", Types.TIMESTAMP },
			{ "CFP_END_DATE", Types.TIMESTAMP },
			{ "PS_MODEL_SID", Types.INTEGER },
			{ "FORMULA_ID", Types.VARCHAR },
			{ "ITEM_NO", Types.VARCHAR },
			{ "CONTRACT_PRICE", Types.DOUBLE },
			{ "IFP_MODEL_SID", Types.INTEGER },
			{ "PRICE_TOLERANCE_TYPE", Types.INTEGER },
			{ "REBATE_AMOUNT", Types.INTEGER },
			{ "USER_ID", Types.INTEGER },
			{ "PROJECTION_MASTER_SID", Types.INTEGER },
			{ "CONTRACT_PRICE_START_DATE", Types.TIMESTAMP },
			{ "PRICE_TOLERANCE_FREQUENCY", Types.INTEGER },
			{ "IFP_CONTRACT_ATTACHED_STATUS", Types.VARCHAR },
			{ "REBATE_PLAN_SYSTEM_ID", Types.INTEGER },
			{ "REBATE_PLAN_NAME", Types.VARCHAR },
			{ "CALENDAR", Types.VARCHAR },
			{ "PRICING_QUALIFIER_SID", Types.VARCHAR },
			{ "TEMP_STATUS", Types.VARCHAR },
			{ "ITEM_REBATE_END_DATE", Types.TIMESTAMP },
			{ "PRICE_TOLERANCE_INTERVAL", Types.INTEGER },
			{ "ITEM_REBATE_START_DATE", Types.TIMESTAMP },
			{ "OPERATION", Types.VARCHAR },
			{ "CFP_MODEL_SID", Types.INTEGER },
			{ "ITEM_STATUS_SID", Types.INTEGER },
			{ "IFP_CONTRACT_SID", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ITEM_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_METHOD_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODULE_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PAYMENT_FREQUENCY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CFP_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_PROTECTION_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("TEMP_ITEM_MASTER_SID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BRAND_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CONTRACT_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("SUB_MODULE_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("THERAPUTIC_CLASS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("GCM_GLOBAL_DETAILS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("PAYMENT_METHOD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PS_CONTRACT_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRICE_PROTECTION_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SCREEN_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RS_CONTRACT_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SESSION_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RS_MODEL_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFP_CONTRACT_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRICE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("TEMP_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORECASTING_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BASE_PRICE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("WORKFLOW_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("TEMP_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CFP_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PS_MODEL_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("FORMULA_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("IFP_MODEL_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE_TYPE", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("REBATE_AMOUNT", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("USER_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PROJECTION_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CONTRACT_PRICE_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE_FREQUENCY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("IFP_CONTRACT_ATTACHED_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REBATE_PLAN_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("REBATE_PLAN_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CALENDAR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICING_QUALIFIER_SID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TEMP_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_REBATE_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_TOLERANCE_INTERVAL", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_REBATE_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("OPERATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CFP_MODEL_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_STATUS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("IFP_CONTRACT_SID", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table GCM_GLOBAL_DETAILS (ITEM_STATUS VARCHAR(75) null,FORMULA_METHOD_ID VARCHAR(75) null,MODULE_NAME VARCHAR(75) null,PAYMENT_FREQUENCY VARCHAR(75) null,END_DATE DATE null,CFP_START_DATE DATE null,PRICE_PROTECTION_START_DATE DATE null,TEMP_ITEM_MASTER_SID VARCHAR(75) null,BRAND_NAME VARCHAR(75) null,MODIFIED_DATE DATE null,CONTRACT_MASTER_SID INTEGER,MODIFIED_BY INTEGER,SUB_MODULE_NAME VARCHAR(75) null,THERAPUTIC_CLASS VARCHAR(75) null,GCM_GLOBAL_DETAILS_SID INTEGER not null primary key IDENTITY,CHECK_RECORD BOOLEAN,PAYMENT_METHOD VARCHAR(75) null,CONTRACT_PRICE_END_DATE DATE null,PS_CONTRACT_SID INTEGER,PRICE_PROTECTION_END_DATE DATE null,START_DATE DATE null,SCREEN_NAME VARCHAR(75) null,RS_CONTRACT_SID INTEGER,ITEM_NAME VARCHAR(75) null,SESSION_ID VARCHAR(75) null,CFP_STATUS VARCHAR(75) null,RS_MODEL_SID INTEGER,CFP_CONTRACT_SID INTEGER,PRICE DOUBLE,TEMP_END_DATE DATE null,ITEM_MASTER_SID INTEGER,ITEM_TYPE VARCHAR(75) null,FORECASTING_TYPE VARCHAR(75) null,ITEM_ID VARCHAR(75) null,BASE_PRICE DOUBLE,STATUS VARCHAR(75) null,FORMULA_NAME VARCHAR(75) null,WORKFLOW_MASTER_SID INTEGER,PRICE_TOLERANCE DOUBLE,CREATED_BY INTEGER,CREATED_DATE DATE null,TEMP_START_DATE DATE null,CFP_END_DATE DATE null,PS_MODEL_SID INTEGER,FORMULA_ID VARCHAR(75) null,ITEM_NO VARCHAR(75) null,CONTRACT_PRICE DOUBLE,IFP_MODEL_SID INTEGER,PRICE_TOLERANCE_TYPE INTEGER,REBATE_AMOUNT INTEGER,USER_ID INTEGER,PROJECTION_MASTER_SID INTEGER,CONTRACT_PRICE_START_DATE DATE null,PRICE_TOLERANCE_FREQUENCY INTEGER,IFP_CONTRACT_ATTACHED_STATUS VARCHAR(75) null,REBATE_PLAN_SYSTEM_ID INTEGER,REBATE_PLAN_NAME VARCHAR(75) null,CALENDAR VARCHAR(75) null,PRICING_QUALIFIER_SID VARCHAR(75) null,TEMP_STATUS VARCHAR(75) null,ITEM_REBATE_END_DATE DATE null,PRICE_TOLERANCE_INTERVAL INTEGER,ITEM_REBATE_START_DATE DATE null,OPERATION VARCHAR(75) null,CFP_MODEL_SID INTEGER,ITEM_STATUS_SID INTEGER,IFP_CONTRACT_SID INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table GCM_GLOBAL_DETAILS";
	public static final String ORDER_BY_JPQL = " ORDER BY gcmGlobalDetails.gcmGlobalDetailsSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY GCM_GLOBAL_DETAILS.GCM_GLOBAL_DETAILS_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.GcmGlobalDetails"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.GcmGlobalDetails"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.GcmGlobalDetails"));

	public GcmGlobalDetailsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _gcmGlobalDetailsSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setGcmGlobalDetailsSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _gcmGlobalDetailsSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return GcmGlobalDetails.class;
	}

	@Override
	public String getModelClassName() {
		return GcmGlobalDetails.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("itemStatus", getItemStatus());
		attributes.put("formulaMethodId", getFormulaMethodId());
		attributes.put("moduleName", getModuleName());
		attributes.put("paymentFrequency", getPaymentFrequency());
		attributes.put("endDate", getEndDate());
		attributes.put("cfpStartDate", getCfpStartDate());
		attributes.put("priceProtectionStartDate", getPriceProtectionStartDate());
		attributes.put("tempItemMasterSid", getTempItemMasterSid());
		attributes.put("brandName", getBrandName());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("contractMasterSid", getContractMasterSid());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("subModuleName", getSubModuleName());
		attributes.put("theraputicClass", getTheraputicClass());
		attributes.put("gcmGlobalDetailsSid", getGcmGlobalDetailsSid());
		attributes.put("checkRecord", getCheckRecord());
		attributes.put("paymentMethod", getPaymentMethod());
		attributes.put("contractPriceEndDate", getContractPriceEndDate());
		attributes.put("psContractSid", getPsContractSid());
		attributes.put("priceProtectionEndDate", getPriceProtectionEndDate());
		attributes.put("startDate", getStartDate());
		attributes.put("screenName", getScreenName());
		attributes.put("rsContractSid", getRsContractSid());
		attributes.put("itemName", getItemName());
		attributes.put("sessionId", getSessionId());
		attributes.put("cfpStatus", getCfpStatus());
		attributes.put("rsModelSid", getRsModelSid());
		attributes.put("cfpContractSid", getCfpContractSid());
		attributes.put("price", getPrice());
		attributes.put("tempEndDate", getTempEndDate());
		attributes.put("itemMasterSid", getItemMasterSid());
		attributes.put("itemType", getItemType());
		attributes.put("forecastingType", getForecastingType());
		attributes.put("itemId", getItemId());
		attributes.put("basePrice", getBasePrice());
		attributes.put("status", getStatus());
		attributes.put("formulaName", getFormulaName());
		attributes.put("workflowMasterSid", getWorkflowMasterSid());
		attributes.put("priceTolerance", getPriceTolerance());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("tempStartDate", getTempStartDate());
		attributes.put("cfpEndDate", getCfpEndDate());
		attributes.put("psModelSid", getPsModelSid());
		attributes.put("formulaId", getFormulaId());
		attributes.put("itemNo", getItemNo());
		attributes.put("contractPrice", getContractPrice());
		attributes.put("ifpModelSid", getIfpModelSid());
		attributes.put("priceToleranceType", getPriceToleranceType());
		attributes.put("rebateAmount", getRebateAmount());
		attributes.put("userId", getUserId());
		attributes.put("projectionMasterSid", getProjectionMasterSid());
		attributes.put("contractPriceStartDate", getContractPriceStartDate());
		attributes.put("priceToleranceFrequency", getPriceToleranceFrequency());
		attributes.put("ifpContractAttachedStatus",
			getIfpContractAttachedStatus());
		attributes.put("rebatePlanSystemId", getRebatePlanSystemId());
		attributes.put("rebatePlanName", getRebatePlanName());
		attributes.put("calendar", getCalendar());
		attributes.put("pricingQualifierSid", getPricingQualifierSid());
		attributes.put("tempStatus", getTempStatus());
		attributes.put("itemRebateEndDate", getItemRebateEndDate());
		attributes.put("priceToleranceInterval", getPriceToleranceInterval());
		attributes.put("itemRebateStartDate", getItemRebateStartDate());
		attributes.put("operation", getOperation());
		attributes.put("cfpModelSid", getCfpModelSid());
		attributes.put("itemStatusSid", getItemStatusSid());
		attributes.put("ifpContractSid", getIfpContractSid());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String itemStatus = (String)attributes.get("itemStatus");

		if (itemStatus != null) {
			setItemStatus(itemStatus);
		}

		String formulaMethodId = (String)attributes.get("formulaMethodId");

		if (formulaMethodId != null) {
			setFormulaMethodId(formulaMethodId);
		}

		String moduleName = (String)attributes.get("moduleName");

		if (moduleName != null) {
			setModuleName(moduleName);
		}

		String paymentFrequency = (String)attributes.get("paymentFrequency");

		if (paymentFrequency != null) {
			setPaymentFrequency(paymentFrequency);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Date cfpStartDate = (Date)attributes.get("cfpStartDate");

		if (cfpStartDate != null) {
			setCfpStartDate(cfpStartDate);
		}

		Date priceProtectionStartDate = (Date)attributes.get(
				"priceProtectionStartDate");

		if (priceProtectionStartDate != null) {
			setPriceProtectionStartDate(priceProtectionStartDate);
		}

		String tempItemMasterSid = (String)attributes.get("tempItemMasterSid");

		if (tempItemMasterSid != null) {
			setTempItemMasterSid(tempItemMasterSid);
		}

		String brandName = (String)attributes.get("brandName");

		if (brandName != null) {
			setBrandName(brandName);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer contractMasterSid = (Integer)attributes.get("contractMasterSid");

		if (contractMasterSid != null) {
			setContractMasterSid(contractMasterSid);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String subModuleName = (String)attributes.get("subModuleName");

		if (subModuleName != null) {
			setSubModuleName(subModuleName);
		}

		String theraputicClass = (String)attributes.get("theraputicClass");

		if (theraputicClass != null) {
			setTheraputicClass(theraputicClass);
		}

		Integer gcmGlobalDetailsSid = (Integer)attributes.get(
				"gcmGlobalDetailsSid");

		if (gcmGlobalDetailsSid != null) {
			setGcmGlobalDetailsSid(gcmGlobalDetailsSid);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}

		String paymentMethod = (String)attributes.get("paymentMethod");

		if (paymentMethod != null) {
			setPaymentMethod(paymentMethod);
		}

		Date contractPriceEndDate = (Date)attributes.get("contractPriceEndDate");

		if (contractPriceEndDate != null) {
			setContractPriceEndDate(contractPriceEndDate);
		}

		Integer psContractSid = (Integer)attributes.get("psContractSid");

		if (psContractSid != null) {
			setPsContractSid(psContractSid);
		}

		Date priceProtectionEndDate = (Date)attributes.get(
				"priceProtectionEndDate");

		if (priceProtectionEndDate != null) {
			setPriceProtectionEndDate(priceProtectionEndDate);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		String screenName = (String)attributes.get("screenName");

		if (screenName != null) {
			setScreenName(screenName);
		}

		Integer rsContractSid = (Integer)attributes.get("rsContractSid");

		if (rsContractSid != null) {
			setRsContractSid(rsContractSid);
		}

		String itemName = (String)attributes.get("itemName");

		if (itemName != null) {
			setItemName(itemName);
		}

		String sessionId = (String)attributes.get("sessionId");

		if (sessionId != null) {
			setSessionId(sessionId);
		}

		String cfpStatus = (String)attributes.get("cfpStatus");

		if (cfpStatus != null) {
			setCfpStatus(cfpStatus);
		}

		Integer rsModelSid = (Integer)attributes.get("rsModelSid");

		if (rsModelSid != null) {
			setRsModelSid(rsModelSid);
		}

		Integer cfpContractSid = (Integer)attributes.get("cfpContractSid");

		if (cfpContractSid != null) {
			setCfpContractSid(cfpContractSid);
		}

		Double price = (Double)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}

		Date tempEndDate = (Date)attributes.get("tempEndDate");

		if (tempEndDate != null) {
			setTempEndDate(tempEndDate);
		}

		Integer itemMasterSid = (Integer)attributes.get("itemMasterSid");

		if (itemMasterSid != null) {
			setItemMasterSid(itemMasterSid);
		}

		String itemType = (String)attributes.get("itemType");

		if (itemType != null) {
			setItemType(itemType);
		}

		String forecastingType = (String)attributes.get("forecastingType");

		if (forecastingType != null) {
			setForecastingType(forecastingType);
		}

		String itemId = (String)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		Double basePrice = (Double)attributes.get("basePrice");

		if (basePrice != null) {
			setBasePrice(basePrice);
		}

		String status = (String)attributes.get("status");

		if (status != null) {
			setStatus(status);
		}

		String formulaName = (String)attributes.get("formulaName");

		if (formulaName != null) {
			setFormulaName(formulaName);
		}

		Integer workflowMasterSid = (Integer)attributes.get("workflowMasterSid");

		if (workflowMasterSid != null) {
			setWorkflowMasterSid(workflowMasterSid);
		}

		Double priceTolerance = (Double)attributes.get("priceTolerance");

		if (priceTolerance != null) {
			setPriceTolerance(priceTolerance);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Date tempStartDate = (Date)attributes.get("tempStartDate");

		if (tempStartDate != null) {
			setTempStartDate(tempStartDate);
		}

		Date cfpEndDate = (Date)attributes.get("cfpEndDate");

		if (cfpEndDate != null) {
			setCfpEndDate(cfpEndDate);
		}

		Integer psModelSid = (Integer)attributes.get("psModelSid");

		if (psModelSid != null) {
			setPsModelSid(psModelSid);
		}

		String formulaId = (String)attributes.get("formulaId");

		if (formulaId != null) {
			setFormulaId(formulaId);
		}

		String itemNo = (String)attributes.get("itemNo");

		if (itemNo != null) {
			setItemNo(itemNo);
		}

		Double contractPrice = (Double)attributes.get("contractPrice");

		if (contractPrice != null) {
			setContractPrice(contractPrice);
		}

		Integer ifpModelSid = (Integer)attributes.get("ifpModelSid");

		if (ifpModelSid != null) {
			setIfpModelSid(ifpModelSid);
		}

		Integer priceToleranceType = (Integer)attributes.get(
				"priceToleranceType");

		if (priceToleranceType != null) {
			setPriceToleranceType(priceToleranceType);
		}

		Integer rebateAmount = (Integer)attributes.get("rebateAmount");

		if (rebateAmount != null) {
			setRebateAmount(rebateAmount);
		}

		Integer userId = (Integer)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Integer projectionMasterSid = (Integer)attributes.get(
				"projectionMasterSid");

		if (projectionMasterSid != null) {
			setProjectionMasterSid(projectionMasterSid);
		}

		Date contractPriceStartDate = (Date)attributes.get(
				"contractPriceStartDate");

		if (contractPriceStartDate != null) {
			setContractPriceStartDate(contractPriceStartDate);
		}

		Integer priceToleranceFrequency = (Integer)attributes.get(
				"priceToleranceFrequency");

		if (priceToleranceFrequency != null) {
			setPriceToleranceFrequency(priceToleranceFrequency);
		}

		String ifpContractAttachedStatus = (String)attributes.get(
				"ifpContractAttachedStatus");

		if (ifpContractAttachedStatus != null) {
			setIfpContractAttachedStatus(ifpContractAttachedStatus);
		}

		Integer rebatePlanSystemId = (Integer)attributes.get(
				"rebatePlanSystemId");

		if (rebatePlanSystemId != null) {
			setRebatePlanSystemId(rebatePlanSystemId);
		}

		String rebatePlanName = (String)attributes.get("rebatePlanName");

		if (rebatePlanName != null) {
			setRebatePlanName(rebatePlanName);
		}

		String calendar = (String)attributes.get("calendar");

		if (calendar != null) {
			setCalendar(calendar);
		}

		String pricingQualifierSid = (String)attributes.get(
				"pricingQualifierSid");

		if (pricingQualifierSid != null) {
			setPricingQualifierSid(pricingQualifierSid);
		}

		String tempStatus = (String)attributes.get("tempStatus");

		if (tempStatus != null) {
			setTempStatus(tempStatus);
		}

		Date itemRebateEndDate = (Date)attributes.get("itemRebateEndDate");

		if (itemRebateEndDate != null) {
			setItemRebateEndDate(itemRebateEndDate);
		}

		Integer priceToleranceInterval = (Integer)attributes.get(
				"priceToleranceInterval");

		if (priceToleranceInterval != null) {
			setPriceToleranceInterval(priceToleranceInterval);
		}

		Date itemRebateStartDate = (Date)attributes.get("itemRebateStartDate");

		if (itemRebateStartDate != null) {
			setItemRebateStartDate(itemRebateStartDate);
		}

		String operation = (String)attributes.get("operation");

		if (operation != null) {
			setOperation(operation);
		}

		Integer cfpModelSid = (Integer)attributes.get("cfpModelSid");

		if (cfpModelSid != null) {
			setCfpModelSid(cfpModelSid);
		}

		Integer itemStatusSid = (Integer)attributes.get("itemStatusSid");

		if (itemStatusSid != null) {
			setItemStatusSid(itemStatusSid);
		}

		Integer ifpContractSid = (Integer)attributes.get("ifpContractSid");

		if (ifpContractSid != null) {
			setIfpContractSid(ifpContractSid);
		}
	}

	@Override
	public String getItemStatus() {
		if (_itemStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemStatus;
		}
	}

	@Override
	public void setItemStatus(String itemStatus) {
		_itemStatus = itemStatus;
	}

	@Override
	public String getFormulaMethodId() {
		if (_formulaMethodId == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaMethodId;
		}
	}

	@Override
	public void setFormulaMethodId(String formulaMethodId) {
		_formulaMethodId = formulaMethodId;
	}

	@Override
	public String getModuleName() {
		if (_moduleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _moduleName;
		}
	}

	@Override
	public void setModuleName(String moduleName) {
		_moduleName = moduleName;
	}

	@Override
	public String getPaymentFrequency() {
		if (_paymentFrequency == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentFrequency;
		}
	}

	@Override
	public void setPaymentFrequency(String paymentFrequency) {
		_paymentFrequency = paymentFrequency;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public Date getCfpStartDate() {
		return _cfpStartDate;
	}

	@Override
	public void setCfpStartDate(Date cfpStartDate) {
		_cfpStartDate = cfpStartDate;
	}

	@Override
	public Date getPriceProtectionStartDate() {
		return _priceProtectionStartDate;
	}

	@Override
	public void setPriceProtectionStartDate(Date priceProtectionStartDate) {
		_priceProtectionStartDate = priceProtectionStartDate;
	}

	@Override
	public String getTempItemMasterSid() {
		if (_tempItemMasterSid == null) {
			return StringPool.BLANK;
		}
		else {
			return _tempItemMasterSid;
		}
	}

	@Override
	public void setTempItemMasterSid(String tempItemMasterSid) {
		_tempItemMasterSid = tempItemMasterSid;
	}

	@Override
	public String getBrandName() {
		if (_brandName == null) {
			return StringPool.BLANK;
		}
		else {
			return _brandName;
		}
	}

	@Override
	public void setBrandName(String brandName) {
		_brandName = brandName;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getContractMasterSid() {
		return _contractMasterSid;
	}

	@Override
	public void setContractMasterSid(int contractMasterSid) {
		_contractMasterSid = contractMasterSid;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getSubModuleName() {
		if (_subModuleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _subModuleName;
		}
	}

	@Override
	public void setSubModuleName(String subModuleName) {
		_subModuleName = subModuleName;
	}

	@Override
	public String getTheraputicClass() {
		if (_theraputicClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _theraputicClass;
		}
	}

	@Override
	public void setTheraputicClass(String theraputicClass) {
		_theraputicClass = theraputicClass;
	}

	@Override
	public int getGcmGlobalDetailsSid() {
		return _gcmGlobalDetailsSid;
	}

	@Override
	public void setGcmGlobalDetailsSid(int gcmGlobalDetailsSid) {
		_gcmGlobalDetailsSid = gcmGlobalDetailsSid;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public String getPaymentMethod() {
		if (_paymentMethod == null) {
			return StringPool.BLANK;
		}
		else {
			return _paymentMethod;
		}
	}

	@Override
	public void setPaymentMethod(String paymentMethod) {
		_paymentMethod = paymentMethod;
	}

	@Override
	public Date getContractPriceEndDate() {
		return _contractPriceEndDate;
	}

	@Override
	public void setContractPriceEndDate(Date contractPriceEndDate) {
		_contractPriceEndDate = contractPriceEndDate;
	}

	@Override
	public int getPsContractSid() {
		return _psContractSid;
	}

	@Override
	public void setPsContractSid(int psContractSid) {
		_psContractSid = psContractSid;
	}

	@Override
	public Date getPriceProtectionEndDate() {
		return _priceProtectionEndDate;
	}

	@Override
	public void setPriceProtectionEndDate(Date priceProtectionEndDate) {
		_priceProtectionEndDate = priceProtectionEndDate;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@Override
	public String getScreenName() {
		if (_screenName == null) {
			return StringPool.BLANK;
		}
		else {
			return _screenName;
		}
	}

	@Override
	public void setScreenName(String screenName) {
		_screenName = screenName;
	}

	@Override
	public int getRsContractSid() {
		return _rsContractSid;
	}

	@Override
	public void setRsContractSid(int rsContractSid) {
		_rsContractSid = rsContractSid;
	}

	@Override
	public String getItemName() {
		if (_itemName == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemName;
		}
	}

	@Override
	public void setItemName(String itemName) {
		_itemName = itemName;
	}

	@Override
	public String getSessionId() {
		if (_sessionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _sessionId;
		}
	}

	@Override
	public void setSessionId(String sessionId) {
		_sessionId = sessionId;
	}

	@Override
	public String getCfpStatus() {
		if (_cfpStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _cfpStatus;
		}
	}

	@Override
	public void setCfpStatus(String cfpStatus) {
		_cfpStatus = cfpStatus;
	}

	@Override
	public int getRsModelSid() {
		return _rsModelSid;
	}

	@Override
	public void setRsModelSid(int rsModelSid) {
		_rsModelSid = rsModelSid;
	}

	@Override
	public int getCfpContractSid() {
		return _cfpContractSid;
	}

	@Override
	public void setCfpContractSid(int cfpContractSid) {
		_cfpContractSid = cfpContractSid;
	}

	@Override
	public double getPrice() {
		return _price;
	}

	@Override
	public void setPrice(double price) {
		_price = price;
	}

	@Override
	public Date getTempEndDate() {
		return _tempEndDate;
	}

	@Override
	public void setTempEndDate(Date tempEndDate) {
		_tempEndDate = tempEndDate;
	}

	@Override
	public int getItemMasterSid() {
		return _itemMasterSid;
	}

	@Override
	public void setItemMasterSid(int itemMasterSid) {
		_itemMasterSid = itemMasterSid;
	}

	@Override
	public String getItemType() {
		if (_itemType == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemType;
		}
	}

	@Override
	public void setItemType(String itemType) {
		_itemType = itemType;
	}

	@Override
	public String getForecastingType() {
		if (_forecastingType == null) {
			return StringPool.BLANK;
		}
		else {
			return _forecastingType;
		}
	}

	@Override
	public void setForecastingType(String forecastingType) {
		_forecastingType = forecastingType;
	}

	@Override
	public String getItemId() {
		if (_itemId == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemId;
		}
	}

	@Override
	public void setItemId(String itemId) {
		_itemId = itemId;
	}

	@Override
	public double getBasePrice() {
		return _basePrice;
	}

	@Override
	public void setBasePrice(double basePrice) {
		_basePrice = basePrice;
	}

	@Override
	public String getStatus() {
		if (_status == null) {
			return StringPool.BLANK;
		}
		else {
			return _status;
		}
	}

	@Override
	public void setStatus(String status) {
		_status = status;
	}

	@Override
	public String getFormulaName() {
		if (_formulaName == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaName;
		}
	}

	@Override
	public void setFormulaName(String formulaName) {
		_formulaName = formulaName;
	}

	@Override
	public int getWorkflowMasterSid() {
		return _workflowMasterSid;
	}

	@Override
	public void setWorkflowMasterSid(int workflowMasterSid) {
		_workflowMasterSid = workflowMasterSid;
	}

	@Override
	public double getPriceTolerance() {
		return _priceTolerance;
	}

	@Override
	public void setPriceTolerance(double priceTolerance) {
		_priceTolerance = priceTolerance;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public Date getTempStartDate() {
		return _tempStartDate;
	}

	@Override
	public void setTempStartDate(Date tempStartDate) {
		_tempStartDate = tempStartDate;
	}

	@Override
	public Date getCfpEndDate() {
		return _cfpEndDate;
	}

	@Override
	public void setCfpEndDate(Date cfpEndDate) {
		_cfpEndDate = cfpEndDate;
	}

	@Override
	public int getPsModelSid() {
		return _psModelSid;
	}

	@Override
	public void setPsModelSid(int psModelSid) {
		_psModelSid = psModelSid;
	}

	@Override
	public String getFormulaId() {
		if (_formulaId == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaId;
		}
	}

	@Override
	public void setFormulaId(String formulaId) {
		_formulaId = formulaId;
	}

	@Override
	public String getItemNo() {
		if (_itemNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemNo;
		}
	}

	@Override
	public void setItemNo(String itemNo) {
		_itemNo = itemNo;
	}

	@Override
	public double getContractPrice() {
		return _contractPrice;
	}

	@Override
	public void setContractPrice(double contractPrice) {
		_contractPrice = contractPrice;
	}

	@Override
	public int getIfpModelSid() {
		return _ifpModelSid;
	}

	@Override
	public void setIfpModelSid(int ifpModelSid) {
		_ifpModelSid = ifpModelSid;
	}

	@Override
	public int getPriceToleranceType() {
		return _priceToleranceType;
	}

	@Override
	public void setPriceToleranceType(int priceToleranceType) {
		_priceToleranceType = priceToleranceType;
	}

	@Override
	public int getRebateAmount() {
		return _rebateAmount;
	}

	@Override
	public void setRebateAmount(int rebateAmount) {
		_rebateAmount = rebateAmount;
	}

	@Override
	public int getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(int userId) {
		_userId = userId;
	}

	@Override
	public int getProjectionMasterSid() {
		return _projectionMasterSid;
	}

	@Override
	public void setProjectionMasterSid(int projectionMasterSid) {
		_projectionMasterSid = projectionMasterSid;
	}

	@Override
	public Date getContractPriceStartDate() {
		return _contractPriceStartDate;
	}

	@Override
	public void setContractPriceStartDate(Date contractPriceStartDate) {
		_contractPriceStartDate = contractPriceStartDate;
	}

	@Override
	public int getPriceToleranceFrequency() {
		return _priceToleranceFrequency;
	}

	@Override
	public void setPriceToleranceFrequency(int priceToleranceFrequency) {
		_priceToleranceFrequency = priceToleranceFrequency;
	}

	@Override
	public String getIfpContractAttachedStatus() {
		if (_ifpContractAttachedStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _ifpContractAttachedStatus;
		}
	}

	@Override
	public void setIfpContractAttachedStatus(String ifpContractAttachedStatus) {
		_ifpContractAttachedStatus = ifpContractAttachedStatus;
	}

	@Override
	public int getRebatePlanSystemId() {
		return _rebatePlanSystemId;
	}

	@Override
	public void setRebatePlanSystemId(int rebatePlanSystemId) {
		_rebatePlanSystemId = rebatePlanSystemId;
	}

	@Override
	public String getRebatePlanName() {
		if (_rebatePlanName == null) {
			return StringPool.BLANK;
		}
		else {
			return _rebatePlanName;
		}
	}

	@Override
	public void setRebatePlanName(String rebatePlanName) {
		_rebatePlanName = rebatePlanName;
	}

	@Override
	public String getCalendar() {
		if (_calendar == null) {
			return StringPool.BLANK;
		}
		else {
			return _calendar;
		}
	}

	@Override
	public void setCalendar(String calendar) {
		_calendar = calendar;
	}

	@Override
	public String getPricingQualifierSid() {
		if (_pricingQualifierSid == null) {
			return StringPool.BLANK;
		}
		else {
			return _pricingQualifierSid;
		}
	}

	@Override
	public void setPricingQualifierSid(String pricingQualifierSid) {
		_pricingQualifierSid = pricingQualifierSid;
	}

	@Override
	public String getTempStatus() {
		if (_tempStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _tempStatus;
		}
	}

	@Override
	public void setTempStatus(String tempStatus) {
		_tempStatus = tempStatus;
	}

	@Override
	public Date getItemRebateEndDate() {
		return _itemRebateEndDate;
	}

	@Override
	public void setItemRebateEndDate(Date itemRebateEndDate) {
		_itemRebateEndDate = itemRebateEndDate;
	}

	@Override
	public int getPriceToleranceInterval() {
		return _priceToleranceInterval;
	}

	@Override
	public void setPriceToleranceInterval(int priceToleranceInterval) {
		_priceToleranceInterval = priceToleranceInterval;
	}

	@Override
	public Date getItemRebateStartDate() {
		return _itemRebateStartDate;
	}

	@Override
	public void setItemRebateStartDate(Date itemRebateStartDate) {
		_itemRebateStartDate = itemRebateStartDate;
	}

	@Override
	public String getOperation() {
		if (_operation == null) {
			return StringPool.BLANK;
		}
		else {
			return _operation;
		}
	}

	@Override
	public void setOperation(String operation) {
		_operation = operation;
	}

	@Override
	public int getCfpModelSid() {
		return _cfpModelSid;
	}

	@Override
	public void setCfpModelSid(int cfpModelSid) {
		_cfpModelSid = cfpModelSid;
	}

	@Override
	public int getItemStatusSid() {
		return _itemStatusSid;
	}

	@Override
	public void setItemStatusSid(int itemStatusSid) {
		_itemStatusSid = itemStatusSid;
	}

	@Override
	public int getIfpContractSid() {
		return _ifpContractSid;
	}

	@Override
	public void setIfpContractSid(int ifpContractSid) {
		_ifpContractSid = ifpContractSid;
	}

	@Override
	public GcmGlobalDetails toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (GcmGlobalDetails)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		GcmGlobalDetailsImpl gcmGlobalDetailsImpl = new GcmGlobalDetailsImpl();

		gcmGlobalDetailsImpl.setItemStatus(getItemStatus());
		gcmGlobalDetailsImpl.setFormulaMethodId(getFormulaMethodId());
		gcmGlobalDetailsImpl.setModuleName(getModuleName());
		gcmGlobalDetailsImpl.setPaymentFrequency(getPaymentFrequency());
		gcmGlobalDetailsImpl.setEndDate(getEndDate());
		gcmGlobalDetailsImpl.setCfpStartDate(getCfpStartDate());
		gcmGlobalDetailsImpl.setPriceProtectionStartDate(getPriceProtectionStartDate());
		gcmGlobalDetailsImpl.setTempItemMasterSid(getTempItemMasterSid());
		gcmGlobalDetailsImpl.setBrandName(getBrandName());
		gcmGlobalDetailsImpl.setModifiedDate(getModifiedDate());
		gcmGlobalDetailsImpl.setContractMasterSid(getContractMasterSid());
		gcmGlobalDetailsImpl.setModifiedBy(getModifiedBy());
		gcmGlobalDetailsImpl.setSubModuleName(getSubModuleName());
		gcmGlobalDetailsImpl.setTheraputicClass(getTheraputicClass());
		gcmGlobalDetailsImpl.setGcmGlobalDetailsSid(getGcmGlobalDetailsSid());
		gcmGlobalDetailsImpl.setCheckRecord(getCheckRecord());
		gcmGlobalDetailsImpl.setPaymentMethod(getPaymentMethod());
		gcmGlobalDetailsImpl.setContractPriceEndDate(getContractPriceEndDate());
		gcmGlobalDetailsImpl.setPsContractSid(getPsContractSid());
		gcmGlobalDetailsImpl.setPriceProtectionEndDate(getPriceProtectionEndDate());
		gcmGlobalDetailsImpl.setStartDate(getStartDate());
		gcmGlobalDetailsImpl.setScreenName(getScreenName());
		gcmGlobalDetailsImpl.setRsContractSid(getRsContractSid());
		gcmGlobalDetailsImpl.setItemName(getItemName());
		gcmGlobalDetailsImpl.setSessionId(getSessionId());
		gcmGlobalDetailsImpl.setCfpStatus(getCfpStatus());
		gcmGlobalDetailsImpl.setRsModelSid(getRsModelSid());
		gcmGlobalDetailsImpl.setCfpContractSid(getCfpContractSid());
		gcmGlobalDetailsImpl.setPrice(getPrice());
		gcmGlobalDetailsImpl.setTempEndDate(getTempEndDate());
		gcmGlobalDetailsImpl.setItemMasterSid(getItemMasterSid());
		gcmGlobalDetailsImpl.setItemType(getItemType());
		gcmGlobalDetailsImpl.setForecastingType(getForecastingType());
		gcmGlobalDetailsImpl.setItemId(getItemId());
		gcmGlobalDetailsImpl.setBasePrice(getBasePrice());
		gcmGlobalDetailsImpl.setStatus(getStatus());
		gcmGlobalDetailsImpl.setFormulaName(getFormulaName());
		gcmGlobalDetailsImpl.setWorkflowMasterSid(getWorkflowMasterSid());
		gcmGlobalDetailsImpl.setPriceTolerance(getPriceTolerance());
		gcmGlobalDetailsImpl.setCreatedBy(getCreatedBy());
		gcmGlobalDetailsImpl.setCreatedDate(getCreatedDate());
		gcmGlobalDetailsImpl.setTempStartDate(getTempStartDate());
		gcmGlobalDetailsImpl.setCfpEndDate(getCfpEndDate());
		gcmGlobalDetailsImpl.setPsModelSid(getPsModelSid());
		gcmGlobalDetailsImpl.setFormulaId(getFormulaId());
		gcmGlobalDetailsImpl.setItemNo(getItemNo());
		gcmGlobalDetailsImpl.setContractPrice(getContractPrice());
		gcmGlobalDetailsImpl.setIfpModelSid(getIfpModelSid());
		gcmGlobalDetailsImpl.setPriceToleranceType(getPriceToleranceType());
		gcmGlobalDetailsImpl.setRebateAmount(getRebateAmount());
		gcmGlobalDetailsImpl.setUserId(getUserId());
		gcmGlobalDetailsImpl.setProjectionMasterSid(getProjectionMasterSid());
		gcmGlobalDetailsImpl.setContractPriceStartDate(getContractPriceStartDate());
		gcmGlobalDetailsImpl.setPriceToleranceFrequency(getPriceToleranceFrequency());
		gcmGlobalDetailsImpl.setIfpContractAttachedStatus(getIfpContractAttachedStatus());
		gcmGlobalDetailsImpl.setRebatePlanSystemId(getRebatePlanSystemId());
		gcmGlobalDetailsImpl.setRebatePlanName(getRebatePlanName());
		gcmGlobalDetailsImpl.setCalendar(getCalendar());
		gcmGlobalDetailsImpl.setPricingQualifierSid(getPricingQualifierSid());
		gcmGlobalDetailsImpl.setTempStatus(getTempStatus());
		gcmGlobalDetailsImpl.setItemRebateEndDate(getItemRebateEndDate());
		gcmGlobalDetailsImpl.setPriceToleranceInterval(getPriceToleranceInterval());
		gcmGlobalDetailsImpl.setItemRebateStartDate(getItemRebateStartDate());
		gcmGlobalDetailsImpl.setOperation(getOperation());
		gcmGlobalDetailsImpl.setCfpModelSid(getCfpModelSid());
		gcmGlobalDetailsImpl.setItemStatusSid(getItemStatusSid());
		gcmGlobalDetailsImpl.setIfpContractSid(getIfpContractSid());

		gcmGlobalDetailsImpl.resetOriginalValues();

		return gcmGlobalDetailsImpl;
	}

	@Override
	public int compareTo(GcmGlobalDetails gcmGlobalDetails) {
		int primaryKey = gcmGlobalDetails.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof GcmGlobalDetails)) {
			return false;
		}

		GcmGlobalDetails gcmGlobalDetails = (GcmGlobalDetails)obj;

		int primaryKey = gcmGlobalDetails.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<GcmGlobalDetails> toCacheModel() {
		GcmGlobalDetailsCacheModel gcmGlobalDetailsCacheModel = new GcmGlobalDetailsCacheModel();

		gcmGlobalDetailsCacheModel.itemStatus = getItemStatus();

		String itemStatus = gcmGlobalDetailsCacheModel.itemStatus;

		if ((itemStatus != null) && (itemStatus.length() == 0)) {
			gcmGlobalDetailsCacheModel.itemStatus = null;
		}

		gcmGlobalDetailsCacheModel.formulaMethodId = getFormulaMethodId();

		String formulaMethodId = gcmGlobalDetailsCacheModel.formulaMethodId;

		if ((formulaMethodId != null) && (formulaMethodId.length() == 0)) {
			gcmGlobalDetailsCacheModel.formulaMethodId = null;
		}

		gcmGlobalDetailsCacheModel.moduleName = getModuleName();

		String moduleName = gcmGlobalDetailsCacheModel.moduleName;

		if ((moduleName != null) && (moduleName.length() == 0)) {
			gcmGlobalDetailsCacheModel.moduleName = null;
		}

		gcmGlobalDetailsCacheModel.paymentFrequency = getPaymentFrequency();

		String paymentFrequency = gcmGlobalDetailsCacheModel.paymentFrequency;

		if ((paymentFrequency != null) && (paymentFrequency.length() == 0)) {
			gcmGlobalDetailsCacheModel.paymentFrequency = null;
		}

		Date endDate = getEndDate();

		if (endDate != null) {
			gcmGlobalDetailsCacheModel.endDate = endDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.endDate = Long.MIN_VALUE;
		}

		Date cfpStartDate = getCfpStartDate();

		if (cfpStartDate != null) {
			gcmGlobalDetailsCacheModel.cfpStartDate = cfpStartDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.cfpStartDate = Long.MIN_VALUE;
		}

		Date priceProtectionStartDate = getPriceProtectionStartDate();

		if (priceProtectionStartDate != null) {
			gcmGlobalDetailsCacheModel.priceProtectionStartDate = priceProtectionStartDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.priceProtectionStartDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.tempItemMasterSid = getTempItemMasterSid();

		String tempItemMasterSid = gcmGlobalDetailsCacheModel.tempItemMasterSid;

		if ((tempItemMasterSid != null) && (tempItemMasterSid.length() == 0)) {
			gcmGlobalDetailsCacheModel.tempItemMasterSid = null;
		}

		gcmGlobalDetailsCacheModel.brandName = getBrandName();

		String brandName = gcmGlobalDetailsCacheModel.brandName;

		if ((brandName != null) && (brandName.length() == 0)) {
			gcmGlobalDetailsCacheModel.brandName = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			gcmGlobalDetailsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.contractMasterSid = getContractMasterSid();

		gcmGlobalDetailsCacheModel.modifiedBy = getModifiedBy();

		gcmGlobalDetailsCacheModel.subModuleName = getSubModuleName();

		String subModuleName = gcmGlobalDetailsCacheModel.subModuleName;

		if ((subModuleName != null) && (subModuleName.length() == 0)) {
			gcmGlobalDetailsCacheModel.subModuleName = null;
		}

		gcmGlobalDetailsCacheModel.theraputicClass = getTheraputicClass();

		String theraputicClass = gcmGlobalDetailsCacheModel.theraputicClass;

		if ((theraputicClass != null) && (theraputicClass.length() == 0)) {
			gcmGlobalDetailsCacheModel.theraputicClass = null;
		}

		gcmGlobalDetailsCacheModel.gcmGlobalDetailsSid = getGcmGlobalDetailsSid();

		gcmGlobalDetailsCacheModel.checkRecord = getCheckRecord();

		gcmGlobalDetailsCacheModel.paymentMethod = getPaymentMethod();

		String paymentMethod = gcmGlobalDetailsCacheModel.paymentMethod;

		if ((paymentMethod != null) && (paymentMethod.length() == 0)) {
			gcmGlobalDetailsCacheModel.paymentMethod = null;
		}

		Date contractPriceEndDate = getContractPriceEndDate();

		if (contractPriceEndDate != null) {
			gcmGlobalDetailsCacheModel.contractPriceEndDate = contractPriceEndDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.contractPriceEndDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.psContractSid = getPsContractSid();

		Date priceProtectionEndDate = getPriceProtectionEndDate();

		if (priceProtectionEndDate != null) {
			gcmGlobalDetailsCacheModel.priceProtectionEndDate = priceProtectionEndDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.priceProtectionEndDate = Long.MIN_VALUE;
		}

		Date startDate = getStartDate();

		if (startDate != null) {
			gcmGlobalDetailsCacheModel.startDate = startDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.startDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.screenName = getScreenName();

		String screenName = gcmGlobalDetailsCacheModel.screenName;

		if ((screenName != null) && (screenName.length() == 0)) {
			gcmGlobalDetailsCacheModel.screenName = null;
		}

		gcmGlobalDetailsCacheModel.rsContractSid = getRsContractSid();

		gcmGlobalDetailsCacheModel.itemName = getItemName();

		String itemName = gcmGlobalDetailsCacheModel.itemName;

		if ((itemName != null) && (itemName.length() == 0)) {
			gcmGlobalDetailsCacheModel.itemName = null;
		}

		gcmGlobalDetailsCacheModel.sessionId = getSessionId();

		String sessionId = gcmGlobalDetailsCacheModel.sessionId;

		if ((sessionId != null) && (sessionId.length() == 0)) {
			gcmGlobalDetailsCacheModel.sessionId = null;
		}

		gcmGlobalDetailsCacheModel.cfpStatus = getCfpStatus();

		String cfpStatus = gcmGlobalDetailsCacheModel.cfpStatus;

		if ((cfpStatus != null) && (cfpStatus.length() == 0)) {
			gcmGlobalDetailsCacheModel.cfpStatus = null;
		}

		gcmGlobalDetailsCacheModel.rsModelSid = getRsModelSid();

		gcmGlobalDetailsCacheModel.cfpContractSid = getCfpContractSid();

		gcmGlobalDetailsCacheModel.price = getPrice();

		Date tempEndDate = getTempEndDate();

		if (tempEndDate != null) {
			gcmGlobalDetailsCacheModel.tempEndDate = tempEndDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.tempEndDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.itemMasterSid = getItemMasterSid();

		gcmGlobalDetailsCacheModel.itemType = getItemType();

		String itemType = gcmGlobalDetailsCacheModel.itemType;

		if ((itemType != null) && (itemType.length() == 0)) {
			gcmGlobalDetailsCacheModel.itemType = null;
		}

		gcmGlobalDetailsCacheModel.forecastingType = getForecastingType();

		String forecastingType = gcmGlobalDetailsCacheModel.forecastingType;

		if ((forecastingType != null) && (forecastingType.length() == 0)) {
			gcmGlobalDetailsCacheModel.forecastingType = null;
		}

		gcmGlobalDetailsCacheModel.itemId = getItemId();

		String itemId = gcmGlobalDetailsCacheModel.itemId;

		if ((itemId != null) && (itemId.length() == 0)) {
			gcmGlobalDetailsCacheModel.itemId = null;
		}

		gcmGlobalDetailsCacheModel.basePrice = getBasePrice();

		gcmGlobalDetailsCacheModel.status = getStatus();

		String status = gcmGlobalDetailsCacheModel.status;

		if ((status != null) && (status.length() == 0)) {
			gcmGlobalDetailsCacheModel.status = null;
		}

		gcmGlobalDetailsCacheModel.formulaName = getFormulaName();

		String formulaName = gcmGlobalDetailsCacheModel.formulaName;

		if ((formulaName != null) && (formulaName.length() == 0)) {
			gcmGlobalDetailsCacheModel.formulaName = null;
		}

		gcmGlobalDetailsCacheModel.workflowMasterSid = getWorkflowMasterSid();

		gcmGlobalDetailsCacheModel.priceTolerance = getPriceTolerance();

		gcmGlobalDetailsCacheModel.createdBy = getCreatedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			gcmGlobalDetailsCacheModel.createdDate = createdDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.createdDate = Long.MIN_VALUE;
		}

		Date tempStartDate = getTempStartDate();

		if (tempStartDate != null) {
			gcmGlobalDetailsCacheModel.tempStartDate = tempStartDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.tempStartDate = Long.MIN_VALUE;
		}

		Date cfpEndDate = getCfpEndDate();

		if (cfpEndDate != null) {
			gcmGlobalDetailsCacheModel.cfpEndDate = cfpEndDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.cfpEndDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.psModelSid = getPsModelSid();

		gcmGlobalDetailsCacheModel.formulaId = getFormulaId();

		String formulaId = gcmGlobalDetailsCacheModel.formulaId;

		if ((formulaId != null) && (formulaId.length() == 0)) {
			gcmGlobalDetailsCacheModel.formulaId = null;
		}

		gcmGlobalDetailsCacheModel.itemNo = getItemNo();

		String itemNo = gcmGlobalDetailsCacheModel.itemNo;

		if ((itemNo != null) && (itemNo.length() == 0)) {
			gcmGlobalDetailsCacheModel.itemNo = null;
		}

		gcmGlobalDetailsCacheModel.contractPrice = getContractPrice();

		gcmGlobalDetailsCacheModel.ifpModelSid = getIfpModelSid();

		gcmGlobalDetailsCacheModel.priceToleranceType = getPriceToleranceType();

		gcmGlobalDetailsCacheModel.rebateAmount = getRebateAmount();

		gcmGlobalDetailsCacheModel.userId = getUserId();

		gcmGlobalDetailsCacheModel.projectionMasterSid = getProjectionMasterSid();

		Date contractPriceStartDate = getContractPriceStartDate();

		if (contractPriceStartDate != null) {
			gcmGlobalDetailsCacheModel.contractPriceStartDate = contractPriceStartDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.contractPriceStartDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.priceToleranceFrequency = getPriceToleranceFrequency();

		gcmGlobalDetailsCacheModel.ifpContractAttachedStatus = getIfpContractAttachedStatus();

		String ifpContractAttachedStatus = gcmGlobalDetailsCacheModel.ifpContractAttachedStatus;

		if ((ifpContractAttachedStatus != null) &&
				(ifpContractAttachedStatus.length() == 0)) {
			gcmGlobalDetailsCacheModel.ifpContractAttachedStatus = null;
		}

		gcmGlobalDetailsCacheModel.rebatePlanSystemId = getRebatePlanSystemId();

		gcmGlobalDetailsCacheModel.rebatePlanName = getRebatePlanName();

		String rebatePlanName = gcmGlobalDetailsCacheModel.rebatePlanName;

		if ((rebatePlanName != null) && (rebatePlanName.length() == 0)) {
			gcmGlobalDetailsCacheModel.rebatePlanName = null;
		}

		gcmGlobalDetailsCacheModel.calendar = getCalendar();

		String calendar = gcmGlobalDetailsCacheModel.calendar;

		if ((calendar != null) && (calendar.length() == 0)) {
			gcmGlobalDetailsCacheModel.calendar = null;
		}

		gcmGlobalDetailsCacheModel.pricingQualifierSid = getPricingQualifierSid();

		String pricingQualifierSid = gcmGlobalDetailsCacheModel.pricingQualifierSid;

		if ((pricingQualifierSid != null) &&
				(pricingQualifierSid.length() == 0)) {
			gcmGlobalDetailsCacheModel.pricingQualifierSid = null;
		}

		gcmGlobalDetailsCacheModel.tempStatus = getTempStatus();

		String tempStatus = gcmGlobalDetailsCacheModel.tempStatus;

		if ((tempStatus != null) && (tempStatus.length() == 0)) {
			gcmGlobalDetailsCacheModel.tempStatus = null;
		}

		Date itemRebateEndDate = getItemRebateEndDate();

		if (itemRebateEndDate != null) {
			gcmGlobalDetailsCacheModel.itemRebateEndDate = itemRebateEndDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.itemRebateEndDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.priceToleranceInterval = getPriceToleranceInterval();

		Date itemRebateStartDate = getItemRebateStartDate();

		if (itemRebateStartDate != null) {
			gcmGlobalDetailsCacheModel.itemRebateStartDate = itemRebateStartDate.getTime();
		}
		else {
			gcmGlobalDetailsCacheModel.itemRebateStartDate = Long.MIN_VALUE;
		}

		gcmGlobalDetailsCacheModel.operation = getOperation();

		String operation = gcmGlobalDetailsCacheModel.operation;

		if ((operation != null) && (operation.length() == 0)) {
			gcmGlobalDetailsCacheModel.operation = null;
		}

		gcmGlobalDetailsCacheModel.cfpModelSid = getCfpModelSid();

		gcmGlobalDetailsCacheModel.itemStatusSid = getItemStatusSid();

		gcmGlobalDetailsCacheModel.ifpContractSid = getIfpContractSid();

		return gcmGlobalDetailsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(135);

		sb.append("{itemStatus=");
		sb.append(getItemStatus());
		sb.append(", formulaMethodId=");
		sb.append(getFormulaMethodId());
		sb.append(", moduleName=");
		sb.append(getModuleName());
		sb.append(", paymentFrequency=");
		sb.append(getPaymentFrequency());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", cfpStartDate=");
		sb.append(getCfpStartDate());
		sb.append(", priceProtectionStartDate=");
		sb.append(getPriceProtectionStartDate());
		sb.append(", tempItemMasterSid=");
		sb.append(getTempItemMasterSid());
		sb.append(", brandName=");
		sb.append(getBrandName());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", contractMasterSid=");
		sb.append(getContractMasterSid());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", subModuleName=");
		sb.append(getSubModuleName());
		sb.append(", theraputicClass=");
		sb.append(getTheraputicClass());
		sb.append(", gcmGlobalDetailsSid=");
		sb.append(getGcmGlobalDetailsSid());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append(", paymentMethod=");
		sb.append(getPaymentMethod());
		sb.append(", contractPriceEndDate=");
		sb.append(getContractPriceEndDate());
		sb.append(", psContractSid=");
		sb.append(getPsContractSid());
		sb.append(", priceProtectionEndDate=");
		sb.append(getPriceProtectionEndDate());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", screenName=");
		sb.append(getScreenName());
		sb.append(", rsContractSid=");
		sb.append(getRsContractSid());
		sb.append(", itemName=");
		sb.append(getItemName());
		sb.append(", sessionId=");
		sb.append(getSessionId());
		sb.append(", cfpStatus=");
		sb.append(getCfpStatus());
		sb.append(", rsModelSid=");
		sb.append(getRsModelSid());
		sb.append(", cfpContractSid=");
		sb.append(getCfpContractSid());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append(", tempEndDate=");
		sb.append(getTempEndDate());
		sb.append(", itemMasterSid=");
		sb.append(getItemMasterSid());
		sb.append(", itemType=");
		sb.append(getItemType());
		sb.append(", forecastingType=");
		sb.append(getForecastingType());
		sb.append(", itemId=");
		sb.append(getItemId());
		sb.append(", basePrice=");
		sb.append(getBasePrice());
		sb.append(", status=");
		sb.append(getStatus());
		sb.append(", formulaName=");
		sb.append(getFormulaName());
		sb.append(", workflowMasterSid=");
		sb.append(getWorkflowMasterSid());
		sb.append(", priceTolerance=");
		sb.append(getPriceTolerance());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", tempStartDate=");
		sb.append(getTempStartDate());
		sb.append(", cfpEndDate=");
		sb.append(getCfpEndDate());
		sb.append(", psModelSid=");
		sb.append(getPsModelSid());
		sb.append(", formulaId=");
		sb.append(getFormulaId());
		sb.append(", itemNo=");
		sb.append(getItemNo());
		sb.append(", contractPrice=");
		sb.append(getContractPrice());
		sb.append(", ifpModelSid=");
		sb.append(getIfpModelSid());
		sb.append(", priceToleranceType=");
		sb.append(getPriceToleranceType());
		sb.append(", rebateAmount=");
		sb.append(getRebateAmount());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", projectionMasterSid=");
		sb.append(getProjectionMasterSid());
		sb.append(", contractPriceStartDate=");
		sb.append(getContractPriceStartDate());
		sb.append(", priceToleranceFrequency=");
		sb.append(getPriceToleranceFrequency());
		sb.append(", ifpContractAttachedStatus=");
		sb.append(getIfpContractAttachedStatus());
		sb.append(", rebatePlanSystemId=");
		sb.append(getRebatePlanSystemId());
		sb.append(", rebatePlanName=");
		sb.append(getRebatePlanName());
		sb.append(", calendar=");
		sb.append(getCalendar());
		sb.append(", pricingQualifierSid=");
		sb.append(getPricingQualifierSid());
		sb.append(", tempStatus=");
		sb.append(getTempStatus());
		sb.append(", itemRebateEndDate=");
		sb.append(getItemRebateEndDate());
		sb.append(", priceToleranceInterval=");
		sb.append(getPriceToleranceInterval());
		sb.append(", itemRebateStartDate=");
		sb.append(getItemRebateStartDate());
		sb.append(", operation=");
		sb.append(getOperation());
		sb.append(", cfpModelSid=");
		sb.append(getCfpModelSid());
		sb.append(", itemStatusSid=");
		sb.append(getItemStatusSid());
		sb.append(", ifpContractSid=");
		sb.append(getIfpContractSid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(205);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.GcmGlobalDetails");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>itemStatus</column-name><column-value><![CDATA[");
		sb.append(getItemStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaMethodId</column-name><column-value><![CDATA[");
		sb.append(getFormulaMethodId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moduleName</column-name><column-value><![CDATA[");
		sb.append(getModuleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentFrequency</column-name><column-value><![CDATA[");
		sb.append(getPaymentFrequency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpStartDate</column-name><column-value><![CDATA[");
		sb.append(getCfpStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceProtectionStartDate</column-name><column-value><![CDATA[");
		sb.append(getPriceProtectionStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tempItemMasterSid</column-name><column-value><![CDATA[");
		sb.append(getTempItemMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>brandName</column-name><column-value><![CDATA[");
		sb.append(getBrandName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
		sb.append(getContractMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>subModuleName</column-name><column-value><![CDATA[");
		sb.append(getSubModuleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>theraputicClass</column-name><column-value><![CDATA[");
		sb.append(getTheraputicClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>gcmGlobalDetailsSid</column-name><column-value><![CDATA[");
		sb.append(getGcmGlobalDetailsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>paymentMethod</column-name><column-value><![CDATA[");
		sb.append(getPaymentMethod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPriceEndDate</column-name><column-value><![CDATA[");
		sb.append(getContractPriceEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>psContractSid</column-name><column-value><![CDATA[");
		sb.append(getPsContractSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceProtectionEndDate</column-name><column-value><![CDATA[");
		sb.append(getPriceProtectionEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>screenName</column-name><column-value><![CDATA[");
		sb.append(getScreenName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsContractSid</column-name><column-value><![CDATA[");
		sb.append(getRsContractSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemName</column-name><column-value><![CDATA[");
		sb.append(getItemName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sessionId</column-name><column-value><![CDATA[");
		sb.append(getSessionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpStatus</column-name><column-value><![CDATA[");
		sb.append(getCfpStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsModelSid</column-name><column-value><![CDATA[");
		sb.append(getRsModelSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpContractSid</column-name><column-value><![CDATA[");
		sb.append(getCfpContractSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tempEndDate</column-name><column-value><![CDATA[");
		sb.append(getTempEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemMasterSid</column-name><column-value><![CDATA[");
		sb.append(getItemMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemType</column-name><column-value><![CDATA[");
		sb.append(getItemType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>forecastingType</column-name><column-value><![CDATA[");
		sb.append(getForecastingType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>basePrice</column-name><column-value><![CDATA[");
		sb.append(getBasePrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>status</column-name><column-value><![CDATA[");
		sb.append(getStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaName</column-name><column-value><![CDATA[");
		sb.append(getFormulaName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowMasterSid</column-name><column-value><![CDATA[");
		sb.append(getWorkflowMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceTolerance</column-name><column-value><![CDATA[");
		sb.append(getPriceTolerance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tempStartDate</column-name><column-value><![CDATA[");
		sb.append(getTempStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpEndDate</column-name><column-value><![CDATA[");
		sb.append(getCfpEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>psModelSid</column-name><column-value><![CDATA[");
		sb.append(getPsModelSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaId</column-name><column-value><![CDATA[");
		sb.append(getFormulaId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemNo</column-name><column-value><![CDATA[");
		sb.append(getItemNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPrice</column-name><column-value><![CDATA[");
		sb.append(getContractPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpModelSid</column-name><column-value><![CDATA[");
		sb.append(getIfpModelSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceToleranceType</column-name><column-value><![CDATA[");
		sb.append(getPriceToleranceType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebateAmount</column-name><column-value><![CDATA[");
		sb.append(getRebateAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>projectionMasterSid</column-name><column-value><![CDATA[");
		sb.append(getProjectionMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractPriceStartDate</column-name><column-value><![CDATA[");
		sb.append(getContractPriceStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceToleranceFrequency</column-name><column-value><![CDATA[");
		sb.append(getPriceToleranceFrequency());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpContractAttachedStatus</column-name><column-value><![CDATA[");
		sb.append(getIfpContractAttachedStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePlanSystemId</column-name><column-value><![CDATA[");
		sb.append(getRebatePlanSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePlanName</column-name><column-value><![CDATA[");
		sb.append(getRebatePlanName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>calendar</column-name><column-value><![CDATA[");
		sb.append(getCalendar());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pricingQualifierSid</column-name><column-value><![CDATA[");
		sb.append(getPricingQualifierSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tempStatus</column-name><column-value><![CDATA[");
		sb.append(getTempStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemRebateEndDate</column-name><column-value><![CDATA[");
		sb.append(getItemRebateEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceToleranceInterval</column-name><column-value><![CDATA[");
		sb.append(getPriceToleranceInterval());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemRebateStartDate</column-name><column-value><![CDATA[");
		sb.append(getItemRebateStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>operation</column-name><column-value><![CDATA[");
		sb.append(getOperation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cfpModelSid</column-name><column-value><![CDATA[");
		sb.append(getCfpModelSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemStatusSid</column-name><column-value><![CDATA[");
		sb.append(getItemStatusSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ifpContractSid</column-name><column-value><![CDATA[");
		sb.append(getIfpContractSid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = GcmGlobalDetails.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			GcmGlobalDetails.class
		};
	private String _itemStatus;
	private String _formulaMethodId;
	private String _moduleName;
	private String _paymentFrequency;
	private Date _endDate;
	private Date _cfpStartDate;
	private Date _priceProtectionStartDate;
	private String _tempItemMasterSid;
	private String _brandName;
	private Date _modifiedDate;
	private int _contractMasterSid;
	private int _modifiedBy;
	private String _subModuleName;
	private String _theraputicClass;
	private int _gcmGlobalDetailsSid;
	private boolean _checkRecord;
	private String _paymentMethod;
	private Date _contractPriceEndDate;
	private int _psContractSid;
	private Date _priceProtectionEndDate;
	private Date _startDate;
	private String _screenName;
	private int _rsContractSid;
	private String _itemName;
	private String _sessionId;
	private String _cfpStatus;
	private int _rsModelSid;
	private int _cfpContractSid;
	private double _price;
	private Date _tempEndDate;
	private int _itemMasterSid;
	private String _itemType;
	private String _forecastingType;
	private String _itemId;
	private double _basePrice;
	private String _status;
	private String _formulaName;
	private int _workflowMasterSid;
	private double _priceTolerance;
	private int _createdBy;
	private Date _createdDate;
	private Date _tempStartDate;
	private Date _cfpEndDate;
	private int _psModelSid;
	private String _formulaId;
	private String _itemNo;
	private double _contractPrice;
	private int _ifpModelSid;
	private int _priceToleranceType;
	private int _rebateAmount;
	private int _userId;
	private int _projectionMasterSid;
	private Date _contractPriceStartDate;
	private int _priceToleranceFrequency;
	private String _ifpContractAttachedStatus;
	private int _rebatePlanSystemId;
	private String _rebatePlanName;
	private String _calendar;
	private String _pricingQualifierSid;
	private String _tempStatus;
	private Date _itemRebateEndDate;
	private int _priceToleranceInterval;
	private Date _itemRebateStartDate;
	private String _operation;
	private int _cfpModelSid;
	private int _itemStatusSid;
	private int _ifpContractSid;
	private GcmGlobalDetails _escapedModel;
}