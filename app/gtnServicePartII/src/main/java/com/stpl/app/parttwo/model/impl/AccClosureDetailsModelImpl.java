package com.stpl.app.parttwo.model.impl;

import com.stpl.app.parttwo.model.AccClosureDetails;
import com.stpl.app.parttwo.model.AccClosureDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AccClosureDetails service. Represents a row in the &quot;ACC_CLOSURE_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.parttwo.model.AccClosureDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccClosureDetailsImpl}.
 * </p>
 *
 * @author
 * @see AccClosureDetailsImpl
 * @see com.stpl.app.parttwo.model.AccClosureDetails
 * @see com.stpl.app.parttwo.model.AccClosureDetailsModel
 * @generated
 */
public class AccClosureDetailsModelImpl extends BaseModelImpl<AccClosureDetails>
    implements AccClosureDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a acc closure details model instance should use the {@link com.stpl.app.parttwo.model.AccClosureDetails} interface instead.
     */
    public static final String TABLE_NAME = "ACC_CLOSURE_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "ACC_CLOSURE_DETAILS_SID", Types.INTEGER },
            { "CCP_DETAILS_SID", Types.INTEGER },
            { "ACC_CLOSURE_MASTER_SID", Types.INTEGER },
            { "RS_MODEL_SID", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table ACC_CLOSURE_DETAILS (ACC_CLOSURE_DETAILS_SID INTEGER not null primary key IDENTITY,CCP_DETAILS_SID INTEGER,ACC_CLOSURE_MASTER_SID INTEGER,RS_MODEL_SID INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table ACC_CLOSURE_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY accClosureDetails.accClosureDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY ACC_CLOSURE_DETAILS.ACC_CLOSURE_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.parttwo.model.AccClosureDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.parttwo.model.AccClosureDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.parttwo.model.AccClosureDetails"));
    private static ClassLoader _classLoader = AccClosureDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            AccClosureDetails.class
        };
    private int _accClosureDetailsSid;
    private int _ccpDetailsSid;
    private int _accClosureMasterSid;
    private int _rsModelSid;
    private AccClosureDetails _escapedModel;

    public AccClosureDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _accClosureDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setAccClosureDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _accClosureDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return AccClosureDetails.class;
    }

    @Override
    public String getModelClassName() {
        return AccClosureDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("accClosureDetailsSid", getAccClosureDetailsSid());
        attributes.put("ccpDetailsSid", getCcpDetailsSid());
        attributes.put("accClosureMasterSid", getAccClosureMasterSid());
        attributes.put("rsModelSid", getRsModelSid());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer accClosureDetailsSid = (Integer) attributes.get(
                "accClosureDetailsSid");

        if (accClosureDetailsSid != null) {
            setAccClosureDetailsSid(accClosureDetailsSid);
        }

        Integer ccpDetailsSid = (Integer) attributes.get("ccpDetailsSid");

        if (ccpDetailsSid != null) {
            setCcpDetailsSid(ccpDetailsSid);
        }

        Integer accClosureMasterSid = (Integer) attributes.get(
                "accClosureMasterSid");

        if (accClosureMasterSid != null) {
            setAccClosureMasterSid(accClosureMasterSid);
        }

        Integer rsModelSid = (Integer) attributes.get("rsModelSid");

        if (rsModelSid != null) {
            setRsModelSid(rsModelSid);
        }
    }

    @Override
    public int getAccClosureDetailsSid() {
        return _accClosureDetailsSid;
    }

    @Override
    public void setAccClosureDetailsSid(int accClosureDetailsSid) {
        _accClosureDetailsSid = accClosureDetailsSid;
    }

    @Override
    public int getCcpDetailsSid() {
        return _ccpDetailsSid;
    }

    @Override
    public void setCcpDetailsSid(int ccpDetailsSid) {
        _ccpDetailsSid = ccpDetailsSid;
    }

    @Override
    public int getAccClosureMasterSid() {
        return _accClosureMasterSid;
    }

    @Override
    public void setAccClosureMasterSid(int accClosureMasterSid) {
        _accClosureMasterSid = accClosureMasterSid;
    }

    @Override
    public int getRsModelSid() {
        return _rsModelSid;
    }

    @Override
    public void setRsModelSid(int rsModelSid) {
        _rsModelSid = rsModelSid;
    }

    @Override
    public AccClosureDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (AccClosureDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        AccClosureDetailsImpl accClosureDetailsImpl = new AccClosureDetailsImpl();

        accClosureDetailsImpl.setAccClosureDetailsSid(getAccClosureDetailsSid());
        accClosureDetailsImpl.setCcpDetailsSid(getCcpDetailsSid());
        accClosureDetailsImpl.setAccClosureMasterSid(getAccClosureMasterSid());
        accClosureDetailsImpl.setRsModelSid(getRsModelSid());

        accClosureDetailsImpl.resetOriginalValues();

        return accClosureDetailsImpl;
    }

    @Override
    public int compareTo(AccClosureDetails accClosureDetails) {
        int primaryKey = accClosureDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof AccClosureDetails)) {
            return false;
        }

        AccClosureDetails accClosureDetails = (AccClosureDetails) obj;

        int primaryKey = accClosureDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<AccClosureDetails> toCacheModel() {
        AccClosureDetailsCacheModel accClosureDetailsCacheModel = new AccClosureDetailsCacheModel();

        accClosureDetailsCacheModel.accClosureDetailsSid = getAccClosureDetailsSid();

        accClosureDetailsCacheModel.ccpDetailsSid = getCcpDetailsSid();

        accClosureDetailsCacheModel.accClosureMasterSid = getAccClosureMasterSid();

        accClosureDetailsCacheModel.rsModelSid = getRsModelSid();

        return accClosureDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(9);

        sb.append("{accClosureDetailsSid=");
        sb.append(getAccClosureDetailsSid());
        sb.append(", ccpDetailsSid=");
        sb.append(getCcpDetailsSid());
        sb.append(", accClosureMasterSid=");
        sb.append(getAccClosureMasterSid());
        sb.append(", rsModelSid=");
        sb.append(getRsModelSid());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(16);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.parttwo.model.AccClosureDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>accClosureDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getAccClosureDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ccpDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getCcpDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>accClosureMasterSid</column-name><column-value><![CDATA[");
        sb.append(getAccClosureMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsModelSid</column-name><column-value><![CDATA[");
        sb.append(getRsModelSid());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
