/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.IvldReturns;
import com.stpl.app.model.IvldReturnsModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldReturns service. Represents a row in the &quot;IVLD_RETURNS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link IvldReturnsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldReturnsImpl}.
 * </p>
 *
 * @author
 * @see IvldReturnsImpl
 * @see IvldReturns
 * @see IvldReturnsModel
 * @generated
 */
@ProviderType
public class IvldReturnsModelImpl extends BaseModelImpl<IvldReturns>
	implements IvldReturnsModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ivld returns model instance should use the {@link IvldReturns} interface instead.
	 */
	public static final String TABLE_NAME = "IVLD_RETURNS";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ADJ_VALUE_AT_ORIG_ASP", Types.VARCHAR },
			{ "FIRST_RETURN", Types.VARCHAR },
			{ "ASP", Types.VARCHAR },
			{ "MAX_EXPIRED_MONS_PLUSCUTOFF", Types.VARCHAR },
			{ "POS_ESTIMATED_RETURN_UNITS", Types.VARCHAR },
			{ "ORIG_SALE_MONTH_CUT_OFF", Types.VARCHAR },
			{ "CALC_USED", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "LAST_RETURN", Types.VARCHAR },
			{ "ESTIMATED_RETURN_UNITS", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.VARCHAR },
			{ "SOURCE", Types.VARCHAR },
			{ "VERSION", Types.VARCHAR },
			{ "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
			{ "WEIGHTED_AVG_MONTHS", Types.VARCHAR },
			{ "ERROR_CODE", Types.VARCHAR },
			{ "MODIFIED_BY", Types.VARCHAR },
			{ "IVLD_RETURNS_SID", Types.INTEGER },
			{ "INTF_INSERTED_DATE", Types.TIMESTAMP },
			{ "PCT_25TH", Types.VARCHAR },
			{ "LOAD_DATE", Types.VARCHAR },
			{ "MAX_EXPIRED_MONTH", Types.VARCHAR },
			{ "REPROCESSED_FLAG", Types.VARCHAR },
			{ "ACTUAL_RETURN_RATE", Types.VARCHAR },
			{ "RRESERVE_ID", Types.VARCHAR },
			{ "RETURN_COMPLETE", Types.VARCHAR },
			{ "EXPECTED_RETURN_RATE", Types.VARCHAR },
			{ "PCT_50TH", Types.VARCHAR },
			{ "WITHIN_50QRTILE", Types.VARCHAR },
			{ "RRESERVE_INTERFACE_ID", Types.INTEGER },
			{ "CUM_RETURN_UNITS", Types.VARCHAR },
			{ "REASON_FOR_FAILURE", Types.VARCHAR },
			{ "ORIG_SALE_MONTH", Types.VARCHAR },
			{ "DESCRIPTION", Types.VARCHAR },
			{ "SKU", Types.VARCHAR },
			{ "UPPER_LIMIT", Types.VARCHAR },
			{ "LOWER_LIMIT", Types.VARCHAR },
			{ "VALUE_AT_ORIG_ASP", Types.VARCHAR },
			{ "ADJ_ESTIMATED_RETURN_UNITS", Types.VARCHAR },
			{ "PCT_75TH", Types.VARCHAR },
			{ "PAST_EXPIRATION", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "MAXIMUM", Types.VARCHAR },
			{ "ORIG_SALE_UNITS", Types.VARCHAR },
			{ "ERROR_FIELD", Types.VARCHAR },
			{ "BRAND", Types.VARCHAR },
			{ "ORIG_SALE_DOLLARS", Types.VARCHAR },
			{ "CHECK_RECORD", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ADJ_VALUE_AT_ORIG_ASP", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FIRST_RETURN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ASP", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MAX_EXPIRED_MONS_PLUSCUTOFF", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("POS_ESTIMATED_RETURN_UNITS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORIG_SALE_MONTH_CUT_OFF", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CALC_USED", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("LAST_RETURN", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ESTIMATED_RETURN_UNITS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VERSION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ADD_CHG_DEL_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("WEIGHTED_AVG_MONTHS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IVLD_RETURNS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("INTF_INSERTED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PCT_25TH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LOAD_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MAX_EXPIRED_MONTH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REPROCESSED_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACTUAL_RETURN_RATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RRESERVE_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RETURN_COMPLETE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("EXPECTED_RETURN_RATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PCT_50TH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("WITHIN_50QRTILE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RRESERVE_INTERFACE_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CUM_RETURN_UNITS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REASON_FOR_FAILURE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORIG_SALE_MONTH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DESCRIPTION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SKU", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("UPPER_LIMIT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LOWER_LIMIT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("VALUE_AT_ORIG_ASP", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ADJ_ESTIMATED_RETURN_UNITS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PCT_75TH", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PAST_EXPIRATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MAXIMUM", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORIG_SALE_UNITS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_FIELD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BRAND", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORIG_SALE_DOLLARS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table IVLD_RETURNS (ADJ_VALUE_AT_ORIG_ASP VARCHAR(75) null,FIRST_RETURN VARCHAR(75) null,ASP VARCHAR(75) null,MAX_EXPIRED_MONS_PLUSCUTOFF VARCHAR(75) null,POS_ESTIMATED_RETURN_UNITS VARCHAR(75) null,ORIG_SALE_MONTH_CUT_OFF VARCHAR(75) null,CALC_USED VARCHAR(75) null,MODIFIED_DATE DATE null,LAST_RETURN VARCHAR(75) null,ESTIMATED_RETURN_UNITS VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY VARCHAR(75) null,SOURCE VARCHAR(75) null,VERSION VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,WEIGHTED_AVG_MONTHS VARCHAR(75) null,ERROR_CODE VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,IVLD_RETURNS_SID INTEGER not null primary key IDENTITY,INTF_INSERTED_DATE DATE null,PCT_25TH VARCHAR(75) null,LOAD_DATE VARCHAR(75) null,MAX_EXPIRED_MONTH VARCHAR(75) null,REPROCESSED_FLAG VARCHAR(75) null,ACTUAL_RETURN_RATE VARCHAR(75) null,RRESERVE_ID VARCHAR(75) null,RETURN_COMPLETE VARCHAR(75) null,EXPECTED_RETURN_RATE VARCHAR(75) null,PCT_50TH VARCHAR(75) null,WITHIN_50QRTILE VARCHAR(75) null,RRESERVE_INTERFACE_ID INTEGER,CUM_RETURN_UNITS VARCHAR(75) null,REASON_FOR_FAILURE VARCHAR(75) null,ORIG_SALE_MONTH VARCHAR(75) null,DESCRIPTION VARCHAR(75) null,SKU VARCHAR(75) null,UPPER_LIMIT VARCHAR(75) null,LOWER_LIMIT VARCHAR(75) null,VALUE_AT_ORIG_ASP VARCHAR(75) null,ADJ_ESTIMATED_RETURN_UNITS VARCHAR(75) null,PCT_75TH VARCHAR(75) null,PAST_EXPIRATION VARCHAR(75) null,BATCH_ID VARCHAR(75) null,MAXIMUM VARCHAR(75) null,ORIG_SALE_UNITS VARCHAR(75) null,ERROR_FIELD VARCHAR(75) null,BRAND VARCHAR(75) null,ORIG_SALE_DOLLARS VARCHAR(75) null,CHECK_RECORD BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table IVLD_RETURNS";
	public static final String ORDER_BY_JPQL = " ORDER BY ivldReturns.ivldReturnsSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IVLD_RETURNS.IVLD_RETURNS_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.IvldReturns"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.IvldReturns"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.IvldReturns"));

	public IvldReturnsModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ivldReturnsSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setIvldReturnsSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ivldReturnsSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return IvldReturns.class;
	}

	@Override
	public String getModelClassName() {
		return IvldReturns.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("adjValueAtOrigAsp", getAdjValueAtOrigAsp());
		attributes.put("firstReturn", getFirstReturn());
		attributes.put("asp", getAsp());
		attributes.put("maxExpiredMonthPlusCutoff",
			getMaxExpiredMonthPlusCutoff());
		attributes.put("posEstimatedReturnUnits", getPosEstimatedReturnUnits());
		attributes.put("origSaleMonthCutOff", getOrigSaleMonthCutOff());
		attributes.put("calcUsed", getCalcUsed());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("lastReturn", getLastReturn());
		attributes.put("expectedReturnUnits", getExpectedReturnUnits());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("source", getSource());
		attributes.put("version", getVersion());
		attributes.put("addChgDelIndicator", getAddChgDelIndicator());
		attributes.put("weightedAvgMonths", getWeightedAvgMonths());
		attributes.put("errorCode", getErrorCode());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("ivldReturnsSid", getIvldReturnsSid());
		attributes.put("intfInsertedDate", getIntfInsertedDate());
		attributes.put("pct25th", getPct25th());
		attributes.put("loadDate", getLoadDate());
		attributes.put("maxExpiredMonth", getMaxExpiredMonth());
		attributes.put("reprocessedFlag", getReprocessedFlag());
		attributes.put("actualReturnRate", getActualReturnRate());
		attributes.put("rreserveId", getRreserveId());
		attributes.put("returnComplete", getReturnComplete());
		attributes.put("expectedReturnRate", getExpectedReturnRate());
		attributes.put("pct50th", getPct50th());
		attributes.put("within50qrtile", getWithin50qrtile());
		attributes.put("rreserveInterfaceId", getRreserveInterfaceId());
		attributes.put("cumReturnUnits", getCumReturnUnits());
		attributes.put("reasonForFailure", getReasonForFailure());
		attributes.put("origSaleMonth", getOrigSaleMonth());
		attributes.put("description", getDescription());
		attributes.put("sku", getSku());
		attributes.put("upperLimit", getUpperLimit());
		attributes.put("lowerLimit", getLowerLimit());
		attributes.put("valueAtOrigAsp", getValueAtOrigAsp());
		attributes.put("adjEstimatedReturnUnits", getAdjEstimatedReturnUnits());
		attributes.put("pct75th", getPct75th());
		attributes.put("pastExpiration", getPastExpiration());
		attributes.put("batchId", getBatchId());
		attributes.put("maximum", getMaximum());
		attributes.put("origSaleUnits", getOrigSaleUnits());
		attributes.put("errorField", getErrorField());
		attributes.put("brand", getBrand());
		attributes.put("origSaleDollars", getOrigSaleDollars());
		attributes.put("checkRecord", getCheckRecord());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String adjValueAtOrigAsp = (String)attributes.get("adjValueAtOrigAsp");

		if (adjValueAtOrigAsp != null) {
			setAdjValueAtOrigAsp(adjValueAtOrigAsp);
		}

		String firstReturn = (String)attributes.get("firstReturn");

		if (firstReturn != null) {
			setFirstReturn(firstReturn);
		}

		String asp = (String)attributes.get("asp");

		if (asp != null) {
			setAsp(asp);
		}

		String maxExpiredMonthPlusCutoff = (String)attributes.get(
				"maxExpiredMonthPlusCutoff");

		if (maxExpiredMonthPlusCutoff != null) {
			setMaxExpiredMonthPlusCutoff(maxExpiredMonthPlusCutoff);
		}

		String posEstimatedReturnUnits = (String)attributes.get(
				"posEstimatedReturnUnits");

		if (posEstimatedReturnUnits != null) {
			setPosEstimatedReturnUnits(posEstimatedReturnUnits);
		}

		String origSaleMonthCutOff = (String)attributes.get(
				"origSaleMonthCutOff");

		if (origSaleMonthCutOff != null) {
			setOrigSaleMonthCutOff(origSaleMonthCutOff);
		}

		String calcUsed = (String)attributes.get("calcUsed");

		if (calcUsed != null) {
			setCalcUsed(calcUsed);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String lastReturn = (String)attributes.get("lastReturn");

		if (lastReturn != null) {
			setLastReturn(lastReturn);
		}

		String expectedReturnUnits = (String)attributes.get(
				"expectedReturnUnits");

		if (expectedReturnUnits != null) {
			setExpectedReturnUnits(expectedReturnUnits);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		String version = (String)attributes.get("version");

		if (version != null) {
			setVersion(version);
		}

		String addChgDelIndicator = (String)attributes.get("addChgDelIndicator");

		if (addChgDelIndicator != null) {
			setAddChgDelIndicator(addChgDelIndicator);
		}

		String weightedAvgMonths = (String)attributes.get("weightedAvgMonths");

		if (weightedAvgMonths != null) {
			setWeightedAvgMonths(weightedAvgMonths);
		}

		String errorCode = (String)attributes.get("errorCode");

		if (errorCode != null) {
			setErrorCode(errorCode);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Integer ivldReturnsSid = (Integer)attributes.get("ivldReturnsSid");

		if (ivldReturnsSid != null) {
			setIvldReturnsSid(ivldReturnsSid);
		}

		Date intfInsertedDate = (Date)attributes.get("intfInsertedDate");

		if (intfInsertedDate != null) {
			setIntfInsertedDate(intfInsertedDate);
		}

		String pct25th = (String)attributes.get("pct25th");

		if (pct25th != null) {
			setPct25th(pct25th);
		}

		String loadDate = (String)attributes.get("loadDate");

		if (loadDate != null) {
			setLoadDate(loadDate);
		}

		String maxExpiredMonth = (String)attributes.get("maxExpiredMonth");

		if (maxExpiredMonth != null) {
			setMaxExpiredMonth(maxExpiredMonth);
		}

		String reprocessedFlag = (String)attributes.get("reprocessedFlag");

		if (reprocessedFlag != null) {
			setReprocessedFlag(reprocessedFlag);
		}

		String actualReturnRate = (String)attributes.get("actualReturnRate");

		if (actualReturnRate != null) {
			setActualReturnRate(actualReturnRate);
		}

		String rreserveId = (String)attributes.get("rreserveId");

		if (rreserveId != null) {
			setRreserveId(rreserveId);
		}

		String returnComplete = (String)attributes.get("returnComplete");

		if (returnComplete != null) {
			setReturnComplete(returnComplete);
		}

		String expectedReturnRate = (String)attributes.get("expectedReturnRate");

		if (expectedReturnRate != null) {
			setExpectedReturnRate(expectedReturnRate);
		}

		String pct50th = (String)attributes.get("pct50th");

		if (pct50th != null) {
			setPct50th(pct50th);
		}

		String within50qrtile = (String)attributes.get("within50qrtile");

		if (within50qrtile != null) {
			setWithin50qrtile(within50qrtile);
		}

		Integer rreserveInterfaceId = (Integer)attributes.get(
				"rreserveInterfaceId");

		if (rreserveInterfaceId != null) {
			setRreserveInterfaceId(rreserveInterfaceId);
		}

		String cumReturnUnits = (String)attributes.get("cumReturnUnits");

		if (cumReturnUnits != null) {
			setCumReturnUnits(cumReturnUnits);
		}

		String reasonForFailure = (String)attributes.get("reasonForFailure");

		if (reasonForFailure != null) {
			setReasonForFailure(reasonForFailure);
		}

		String origSaleMonth = (String)attributes.get("origSaleMonth");

		if (origSaleMonth != null) {
			setOrigSaleMonth(origSaleMonth);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String sku = (String)attributes.get("sku");

		if (sku != null) {
			setSku(sku);
		}

		String upperLimit = (String)attributes.get("upperLimit");

		if (upperLimit != null) {
			setUpperLimit(upperLimit);
		}

		String lowerLimit = (String)attributes.get("lowerLimit");

		if (lowerLimit != null) {
			setLowerLimit(lowerLimit);
		}

		String valueAtOrigAsp = (String)attributes.get("valueAtOrigAsp");

		if (valueAtOrigAsp != null) {
			setValueAtOrigAsp(valueAtOrigAsp);
		}

		String adjEstimatedReturnUnits = (String)attributes.get(
				"adjEstimatedReturnUnits");

		if (adjEstimatedReturnUnits != null) {
			setAdjEstimatedReturnUnits(adjEstimatedReturnUnits);
		}

		String pct75th = (String)attributes.get("pct75th");

		if (pct75th != null) {
			setPct75th(pct75th);
		}

		String pastExpiration = (String)attributes.get("pastExpiration");

		if (pastExpiration != null) {
			setPastExpiration(pastExpiration);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String maximum = (String)attributes.get("maximum");

		if (maximum != null) {
			setMaximum(maximum);
		}

		String origSaleUnits = (String)attributes.get("origSaleUnits");

		if (origSaleUnits != null) {
			setOrigSaleUnits(origSaleUnits);
		}

		String errorField = (String)attributes.get("errorField");

		if (errorField != null) {
			setErrorField(errorField);
		}

		String brand = (String)attributes.get("brand");

		if (brand != null) {
			setBrand(brand);
		}

		String origSaleDollars = (String)attributes.get("origSaleDollars");

		if (origSaleDollars != null) {
			setOrigSaleDollars(origSaleDollars);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}
	}

	@Override
	public String getAdjValueAtOrigAsp() {
		if (_adjValueAtOrigAsp == null) {
			return StringPool.BLANK;
		}
		else {
			return _adjValueAtOrigAsp;
		}
	}

	@Override
	public void setAdjValueAtOrigAsp(String adjValueAtOrigAsp) {
		_adjValueAtOrigAsp = adjValueAtOrigAsp;
	}

	@Override
	public String getFirstReturn() {
		if (_firstReturn == null) {
			return StringPool.BLANK;
		}
		else {
			return _firstReturn;
		}
	}

	@Override
	public void setFirstReturn(String firstReturn) {
		_firstReturn = firstReturn;
	}

	@Override
	public String getAsp() {
		if (_asp == null) {
			return StringPool.BLANK;
		}
		else {
			return _asp;
		}
	}

	@Override
	public void setAsp(String asp) {
		_asp = asp;
	}

	@Override
	public String getMaxExpiredMonthPlusCutoff() {
		if (_maxExpiredMonthPlusCutoff == null) {
			return StringPool.BLANK;
		}
		else {
			return _maxExpiredMonthPlusCutoff;
		}
	}

	@Override
	public void setMaxExpiredMonthPlusCutoff(String maxExpiredMonthPlusCutoff) {
		_maxExpiredMonthPlusCutoff = maxExpiredMonthPlusCutoff;
	}

	@Override
	public String getPosEstimatedReturnUnits() {
		if (_posEstimatedReturnUnits == null) {
			return StringPool.BLANK;
		}
		else {
			return _posEstimatedReturnUnits;
		}
	}

	@Override
	public void setPosEstimatedReturnUnits(String posEstimatedReturnUnits) {
		_posEstimatedReturnUnits = posEstimatedReturnUnits;
	}

	@Override
	public String getOrigSaleMonthCutOff() {
		if (_origSaleMonthCutOff == null) {
			return StringPool.BLANK;
		}
		else {
			return _origSaleMonthCutOff;
		}
	}

	@Override
	public void setOrigSaleMonthCutOff(String origSaleMonthCutOff) {
		_origSaleMonthCutOff = origSaleMonthCutOff;
	}

	@Override
	public String getCalcUsed() {
		if (_calcUsed == null) {
			return StringPool.BLANK;
		}
		else {
			return _calcUsed;
		}
	}

	@Override
	public void setCalcUsed(String calcUsed) {
		_calcUsed = calcUsed;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getLastReturn() {
		if (_lastReturn == null) {
			return StringPool.BLANK;
		}
		else {
			return _lastReturn;
		}
	}

	@Override
	public void setLastReturn(String lastReturn) {
		_lastReturn = lastReturn;
	}

	@Override
	public String getExpectedReturnUnits() {
		if (_expectedReturnUnits == null) {
			return StringPool.BLANK;
		}
		else {
			return _expectedReturnUnits;
		}
	}

	@Override
	public void setExpectedReturnUnits(String expectedReturnUnits) {
		_expectedReturnUnits = expectedReturnUnits;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public String getVersion() {
		if (_version == null) {
			return StringPool.BLANK;
		}
		else {
			return _version;
		}
	}

	@Override
	public void setVersion(String version) {
		_version = version;
	}

	@Override
	public String getAddChgDelIndicator() {
		if (_addChgDelIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _addChgDelIndicator;
		}
	}

	@Override
	public void setAddChgDelIndicator(String addChgDelIndicator) {
		_addChgDelIndicator = addChgDelIndicator;
	}

	@Override
	public String getWeightedAvgMonths() {
		if (_weightedAvgMonths == null) {
			return StringPool.BLANK;
		}
		else {
			return _weightedAvgMonths;
		}
	}

	@Override
	public void setWeightedAvgMonths(String weightedAvgMonths) {
		_weightedAvgMonths = weightedAvgMonths;
	}

	@Override
	public String getErrorCode() {
		if (_errorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorCode;
		}
	}

	@Override
	public void setErrorCode(String errorCode) {
		_errorCode = errorCode;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public int getIvldReturnsSid() {
		return _ivldReturnsSid;
	}

	@Override
	public void setIvldReturnsSid(int ivldReturnsSid) {
		_ivldReturnsSid = ivldReturnsSid;
	}

	@Override
	public Date getIntfInsertedDate() {
		return _intfInsertedDate;
	}

	@Override
	public void setIntfInsertedDate(Date intfInsertedDate) {
		_intfInsertedDate = intfInsertedDate;
	}

	@Override
	public String getPct25th() {
		if (_pct25th == null) {
			return StringPool.BLANK;
		}
		else {
			return _pct25th;
		}
	}

	@Override
	public void setPct25th(String pct25th) {
		_pct25th = pct25th;
	}

	@Override
	public String getLoadDate() {
		if (_loadDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _loadDate;
		}
	}

	@Override
	public void setLoadDate(String loadDate) {
		_loadDate = loadDate;
	}

	@Override
	public String getMaxExpiredMonth() {
		if (_maxExpiredMonth == null) {
			return StringPool.BLANK;
		}
		else {
			return _maxExpiredMonth;
		}
	}

	@Override
	public void setMaxExpiredMonth(String maxExpiredMonth) {
		_maxExpiredMonth = maxExpiredMonth;
	}

	@Override
	public String getReprocessedFlag() {
		if (_reprocessedFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _reprocessedFlag;
		}
	}

	@Override
	public void setReprocessedFlag(String reprocessedFlag) {
		_reprocessedFlag = reprocessedFlag;
	}

	@Override
	public String getActualReturnRate() {
		if (_actualReturnRate == null) {
			return StringPool.BLANK;
		}
		else {
			return _actualReturnRate;
		}
	}

	@Override
	public void setActualReturnRate(String actualReturnRate) {
		_actualReturnRate = actualReturnRate;
	}

	@Override
	public String getRreserveId() {
		if (_rreserveId == null) {
			return StringPool.BLANK;
		}
		else {
			return _rreserveId;
		}
	}

	@Override
	public void setRreserveId(String rreserveId) {
		_rreserveId = rreserveId;
	}

	@Override
	public String getReturnComplete() {
		if (_returnComplete == null) {
			return StringPool.BLANK;
		}
		else {
			return _returnComplete;
		}
	}

	@Override
	public void setReturnComplete(String returnComplete) {
		_returnComplete = returnComplete;
	}

	@Override
	public String getExpectedReturnRate() {
		if (_expectedReturnRate == null) {
			return StringPool.BLANK;
		}
		else {
			return _expectedReturnRate;
		}
	}

	@Override
	public void setExpectedReturnRate(String expectedReturnRate) {
		_expectedReturnRate = expectedReturnRate;
	}

	@Override
	public String getPct50th() {
		if (_pct50th == null) {
			return StringPool.BLANK;
		}
		else {
			return _pct50th;
		}
	}

	@Override
	public void setPct50th(String pct50th) {
		_pct50th = pct50th;
	}

	@Override
	public String getWithin50qrtile() {
		if (_within50qrtile == null) {
			return StringPool.BLANK;
		}
		else {
			return _within50qrtile;
		}
	}

	@Override
	public void setWithin50qrtile(String within50qrtile) {
		_within50qrtile = within50qrtile;
	}

	@Override
	public int getRreserveInterfaceId() {
		return _rreserveInterfaceId;
	}

	@Override
	public void setRreserveInterfaceId(int rreserveInterfaceId) {
		_rreserveInterfaceId = rreserveInterfaceId;
	}

	@Override
	public String getCumReturnUnits() {
		if (_cumReturnUnits == null) {
			return StringPool.BLANK;
		}
		else {
			return _cumReturnUnits;
		}
	}

	@Override
	public void setCumReturnUnits(String cumReturnUnits) {
		_cumReturnUnits = cumReturnUnits;
	}

	@Override
	public String getReasonForFailure() {
		if (_reasonForFailure == null) {
			return StringPool.BLANK;
		}
		else {
			return _reasonForFailure;
		}
	}

	@Override
	public void setReasonForFailure(String reasonForFailure) {
		_reasonForFailure = reasonForFailure;
	}

	@Override
	public String getOrigSaleMonth() {
		if (_origSaleMonth == null) {
			return StringPool.BLANK;
		}
		else {
			return _origSaleMonth;
		}
	}

	@Override
	public void setOrigSaleMonth(String origSaleMonth) {
		_origSaleMonth = origSaleMonth;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getSku() {
		if (_sku == null) {
			return StringPool.BLANK;
		}
		else {
			return _sku;
		}
	}

	@Override
	public void setSku(String sku) {
		_sku = sku;
	}

	@Override
	public String getUpperLimit() {
		if (_upperLimit == null) {
			return StringPool.BLANK;
		}
		else {
			return _upperLimit;
		}
	}

	@Override
	public void setUpperLimit(String upperLimit) {
		_upperLimit = upperLimit;
	}

	@Override
	public String getLowerLimit() {
		if (_lowerLimit == null) {
			return StringPool.BLANK;
		}
		else {
			return _lowerLimit;
		}
	}

	@Override
	public void setLowerLimit(String lowerLimit) {
		_lowerLimit = lowerLimit;
	}

	@Override
	public String getValueAtOrigAsp() {
		if (_valueAtOrigAsp == null) {
			return StringPool.BLANK;
		}
		else {
			return _valueAtOrigAsp;
		}
	}

	@Override
	public void setValueAtOrigAsp(String valueAtOrigAsp) {
		_valueAtOrigAsp = valueAtOrigAsp;
	}

	@Override
	public String getAdjEstimatedReturnUnits() {
		if (_adjEstimatedReturnUnits == null) {
			return StringPool.BLANK;
		}
		else {
			return _adjEstimatedReturnUnits;
		}
	}

	@Override
	public void setAdjEstimatedReturnUnits(String adjEstimatedReturnUnits) {
		_adjEstimatedReturnUnits = adjEstimatedReturnUnits;
	}

	@Override
	public String getPct75th() {
		if (_pct75th == null) {
			return StringPool.BLANK;
		}
		else {
			return _pct75th;
		}
	}

	@Override
	public void setPct75th(String pct75th) {
		_pct75th = pct75th;
	}

	@Override
	public String getPastExpiration() {
		if (_pastExpiration == null) {
			return StringPool.BLANK;
		}
		else {
			return _pastExpiration;
		}
	}

	@Override
	public void setPastExpiration(String pastExpiration) {
		_pastExpiration = pastExpiration;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getMaximum() {
		if (_maximum == null) {
			return StringPool.BLANK;
		}
		else {
			return _maximum;
		}
	}

	@Override
	public void setMaximum(String maximum) {
		_maximum = maximum;
	}

	@Override
	public String getOrigSaleUnits() {
		if (_origSaleUnits == null) {
			return StringPool.BLANK;
		}
		else {
			return _origSaleUnits;
		}
	}

	@Override
	public void setOrigSaleUnits(String origSaleUnits) {
		_origSaleUnits = origSaleUnits;
	}

	@Override
	public String getErrorField() {
		if (_errorField == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorField;
		}
	}

	@Override
	public void setErrorField(String errorField) {
		_errorField = errorField;
	}

	@Override
	public String getBrand() {
		if (_brand == null) {
			return StringPool.BLANK;
		}
		else {
			return _brand;
		}
	}

	@Override
	public void setBrand(String brand) {
		_brand = brand;
	}

	@Override
	public String getOrigSaleDollars() {
		if (_origSaleDollars == null) {
			return StringPool.BLANK;
		}
		else {
			return _origSaleDollars;
		}
	}

	@Override
	public void setOrigSaleDollars(String origSaleDollars) {
		_origSaleDollars = origSaleDollars;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public IvldReturns toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (IvldReturns)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		IvldReturnsImpl ivldReturnsImpl = new IvldReturnsImpl();

		ivldReturnsImpl.setAdjValueAtOrigAsp(getAdjValueAtOrigAsp());
		ivldReturnsImpl.setFirstReturn(getFirstReturn());
		ivldReturnsImpl.setAsp(getAsp());
		ivldReturnsImpl.setMaxExpiredMonthPlusCutoff(getMaxExpiredMonthPlusCutoff());
		ivldReturnsImpl.setPosEstimatedReturnUnits(getPosEstimatedReturnUnits());
		ivldReturnsImpl.setOrigSaleMonthCutOff(getOrigSaleMonthCutOff());
		ivldReturnsImpl.setCalcUsed(getCalcUsed());
		ivldReturnsImpl.setModifiedDate(getModifiedDate());
		ivldReturnsImpl.setLastReturn(getLastReturn());
		ivldReturnsImpl.setExpectedReturnUnits(getExpectedReturnUnits());
		ivldReturnsImpl.setCreatedDate(getCreatedDate());
		ivldReturnsImpl.setCreatedBy(getCreatedBy());
		ivldReturnsImpl.setSource(getSource());
		ivldReturnsImpl.setVersion(getVersion());
		ivldReturnsImpl.setAddChgDelIndicator(getAddChgDelIndicator());
		ivldReturnsImpl.setWeightedAvgMonths(getWeightedAvgMonths());
		ivldReturnsImpl.setErrorCode(getErrorCode());
		ivldReturnsImpl.setModifiedBy(getModifiedBy());
		ivldReturnsImpl.setIvldReturnsSid(getIvldReturnsSid());
		ivldReturnsImpl.setIntfInsertedDate(getIntfInsertedDate());
		ivldReturnsImpl.setPct25th(getPct25th());
		ivldReturnsImpl.setLoadDate(getLoadDate());
		ivldReturnsImpl.setMaxExpiredMonth(getMaxExpiredMonth());
		ivldReturnsImpl.setReprocessedFlag(getReprocessedFlag());
		ivldReturnsImpl.setActualReturnRate(getActualReturnRate());
		ivldReturnsImpl.setRreserveId(getRreserveId());
		ivldReturnsImpl.setReturnComplete(getReturnComplete());
		ivldReturnsImpl.setExpectedReturnRate(getExpectedReturnRate());
		ivldReturnsImpl.setPct50th(getPct50th());
		ivldReturnsImpl.setWithin50qrtile(getWithin50qrtile());
		ivldReturnsImpl.setRreserveInterfaceId(getRreserveInterfaceId());
		ivldReturnsImpl.setCumReturnUnits(getCumReturnUnits());
		ivldReturnsImpl.setReasonForFailure(getReasonForFailure());
		ivldReturnsImpl.setOrigSaleMonth(getOrigSaleMonth());
		ivldReturnsImpl.setDescription(getDescription());
		ivldReturnsImpl.setSku(getSku());
		ivldReturnsImpl.setUpperLimit(getUpperLimit());
		ivldReturnsImpl.setLowerLimit(getLowerLimit());
		ivldReturnsImpl.setValueAtOrigAsp(getValueAtOrigAsp());
		ivldReturnsImpl.setAdjEstimatedReturnUnits(getAdjEstimatedReturnUnits());
		ivldReturnsImpl.setPct75th(getPct75th());
		ivldReturnsImpl.setPastExpiration(getPastExpiration());
		ivldReturnsImpl.setBatchId(getBatchId());
		ivldReturnsImpl.setMaximum(getMaximum());
		ivldReturnsImpl.setOrigSaleUnits(getOrigSaleUnits());
		ivldReturnsImpl.setErrorField(getErrorField());
		ivldReturnsImpl.setBrand(getBrand());
		ivldReturnsImpl.setOrigSaleDollars(getOrigSaleDollars());
		ivldReturnsImpl.setCheckRecord(getCheckRecord());

		ivldReturnsImpl.resetOriginalValues();

		return ivldReturnsImpl;
	}

	@Override
	public int compareTo(IvldReturns ivldReturns) {
		int primaryKey = ivldReturns.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof IvldReturns)) {
			return false;
		}

		IvldReturns ivldReturns = (IvldReturns)obj;

		int primaryKey = ivldReturns.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<IvldReturns> toCacheModel() {
		IvldReturnsCacheModel ivldReturnsCacheModel = new IvldReturnsCacheModel();

		ivldReturnsCacheModel.adjValueAtOrigAsp = getAdjValueAtOrigAsp();

		String adjValueAtOrigAsp = ivldReturnsCacheModel.adjValueAtOrigAsp;

		if ((adjValueAtOrigAsp != null) && (adjValueAtOrigAsp.length() == 0)) {
			ivldReturnsCacheModel.adjValueAtOrigAsp = null;
		}

		ivldReturnsCacheModel.firstReturn = getFirstReturn();

		String firstReturn = ivldReturnsCacheModel.firstReturn;

		if ((firstReturn != null) && (firstReturn.length() == 0)) {
			ivldReturnsCacheModel.firstReturn = null;
		}

		ivldReturnsCacheModel.asp = getAsp();

		String asp = ivldReturnsCacheModel.asp;

		if ((asp != null) && (asp.length() == 0)) {
			ivldReturnsCacheModel.asp = null;
		}

		ivldReturnsCacheModel.maxExpiredMonthPlusCutoff = getMaxExpiredMonthPlusCutoff();

		String maxExpiredMonthPlusCutoff = ivldReturnsCacheModel.maxExpiredMonthPlusCutoff;

		if ((maxExpiredMonthPlusCutoff != null) &&
				(maxExpiredMonthPlusCutoff.length() == 0)) {
			ivldReturnsCacheModel.maxExpiredMonthPlusCutoff = null;
		}

		ivldReturnsCacheModel.posEstimatedReturnUnits = getPosEstimatedReturnUnits();

		String posEstimatedReturnUnits = ivldReturnsCacheModel.posEstimatedReturnUnits;

		if ((posEstimatedReturnUnits != null) &&
				(posEstimatedReturnUnits.length() == 0)) {
			ivldReturnsCacheModel.posEstimatedReturnUnits = null;
		}

		ivldReturnsCacheModel.origSaleMonthCutOff = getOrigSaleMonthCutOff();

		String origSaleMonthCutOff = ivldReturnsCacheModel.origSaleMonthCutOff;

		if ((origSaleMonthCutOff != null) &&
				(origSaleMonthCutOff.length() == 0)) {
			ivldReturnsCacheModel.origSaleMonthCutOff = null;
		}

		ivldReturnsCacheModel.calcUsed = getCalcUsed();

		String calcUsed = ivldReturnsCacheModel.calcUsed;

		if ((calcUsed != null) && (calcUsed.length() == 0)) {
			ivldReturnsCacheModel.calcUsed = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ivldReturnsCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ivldReturnsCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ivldReturnsCacheModel.lastReturn = getLastReturn();

		String lastReturn = ivldReturnsCacheModel.lastReturn;

		if ((lastReturn != null) && (lastReturn.length() == 0)) {
			ivldReturnsCacheModel.lastReturn = null;
		}

		ivldReturnsCacheModel.expectedReturnUnits = getExpectedReturnUnits();

		String expectedReturnUnits = ivldReturnsCacheModel.expectedReturnUnits;

		if ((expectedReturnUnits != null) &&
				(expectedReturnUnits.length() == 0)) {
			ivldReturnsCacheModel.expectedReturnUnits = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			ivldReturnsCacheModel.createdDate = createdDate.getTime();
		}
		else {
			ivldReturnsCacheModel.createdDate = Long.MIN_VALUE;
		}

		ivldReturnsCacheModel.createdBy = getCreatedBy();

		String createdBy = ivldReturnsCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			ivldReturnsCacheModel.createdBy = null;
		}

		ivldReturnsCacheModel.source = getSource();

		String source = ivldReturnsCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			ivldReturnsCacheModel.source = null;
		}

		ivldReturnsCacheModel.version = getVersion();

		String version = ivldReturnsCacheModel.version;

		if ((version != null) && (version.length() == 0)) {
			ivldReturnsCacheModel.version = null;
		}

		ivldReturnsCacheModel.addChgDelIndicator = getAddChgDelIndicator();

		String addChgDelIndicator = ivldReturnsCacheModel.addChgDelIndicator;

		if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
			ivldReturnsCacheModel.addChgDelIndicator = null;
		}

		ivldReturnsCacheModel.weightedAvgMonths = getWeightedAvgMonths();

		String weightedAvgMonths = ivldReturnsCacheModel.weightedAvgMonths;

		if ((weightedAvgMonths != null) && (weightedAvgMonths.length() == 0)) {
			ivldReturnsCacheModel.weightedAvgMonths = null;
		}

		ivldReturnsCacheModel.errorCode = getErrorCode();

		String errorCode = ivldReturnsCacheModel.errorCode;

		if ((errorCode != null) && (errorCode.length() == 0)) {
			ivldReturnsCacheModel.errorCode = null;
		}

		ivldReturnsCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = ivldReturnsCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			ivldReturnsCacheModel.modifiedBy = null;
		}

		ivldReturnsCacheModel.ivldReturnsSid = getIvldReturnsSid();

		Date intfInsertedDate = getIntfInsertedDate();

		if (intfInsertedDate != null) {
			ivldReturnsCacheModel.intfInsertedDate = intfInsertedDate.getTime();
		}
		else {
			ivldReturnsCacheModel.intfInsertedDate = Long.MIN_VALUE;
		}

		ivldReturnsCacheModel.pct25th = getPct25th();

		String pct25th = ivldReturnsCacheModel.pct25th;

		if ((pct25th != null) && (pct25th.length() == 0)) {
			ivldReturnsCacheModel.pct25th = null;
		}

		ivldReturnsCacheModel.loadDate = getLoadDate();

		String loadDate = ivldReturnsCacheModel.loadDate;

		if ((loadDate != null) && (loadDate.length() == 0)) {
			ivldReturnsCacheModel.loadDate = null;
		}

		ivldReturnsCacheModel.maxExpiredMonth = getMaxExpiredMonth();

		String maxExpiredMonth = ivldReturnsCacheModel.maxExpiredMonth;

		if ((maxExpiredMonth != null) && (maxExpiredMonth.length() == 0)) {
			ivldReturnsCacheModel.maxExpiredMonth = null;
		}

		ivldReturnsCacheModel.reprocessedFlag = getReprocessedFlag();

		String reprocessedFlag = ivldReturnsCacheModel.reprocessedFlag;

		if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
			ivldReturnsCacheModel.reprocessedFlag = null;
		}

		ivldReturnsCacheModel.actualReturnRate = getActualReturnRate();

		String actualReturnRate = ivldReturnsCacheModel.actualReturnRate;

		if ((actualReturnRate != null) && (actualReturnRate.length() == 0)) {
			ivldReturnsCacheModel.actualReturnRate = null;
		}

		ivldReturnsCacheModel.rreserveId = getRreserveId();

		String rreserveId = ivldReturnsCacheModel.rreserveId;

		if ((rreserveId != null) && (rreserveId.length() == 0)) {
			ivldReturnsCacheModel.rreserveId = null;
		}

		ivldReturnsCacheModel.returnComplete = getReturnComplete();

		String returnComplete = ivldReturnsCacheModel.returnComplete;

		if ((returnComplete != null) && (returnComplete.length() == 0)) {
			ivldReturnsCacheModel.returnComplete = null;
		}

		ivldReturnsCacheModel.expectedReturnRate = getExpectedReturnRate();

		String expectedReturnRate = ivldReturnsCacheModel.expectedReturnRate;

		if ((expectedReturnRate != null) && (expectedReturnRate.length() == 0)) {
			ivldReturnsCacheModel.expectedReturnRate = null;
		}

		ivldReturnsCacheModel.pct50th = getPct50th();

		String pct50th = ivldReturnsCacheModel.pct50th;

		if ((pct50th != null) && (pct50th.length() == 0)) {
			ivldReturnsCacheModel.pct50th = null;
		}

		ivldReturnsCacheModel.within50qrtile = getWithin50qrtile();

		String within50qrtile = ivldReturnsCacheModel.within50qrtile;

		if ((within50qrtile != null) && (within50qrtile.length() == 0)) {
			ivldReturnsCacheModel.within50qrtile = null;
		}

		ivldReturnsCacheModel.rreserveInterfaceId = getRreserveInterfaceId();

		ivldReturnsCacheModel.cumReturnUnits = getCumReturnUnits();

		String cumReturnUnits = ivldReturnsCacheModel.cumReturnUnits;

		if ((cumReturnUnits != null) && (cumReturnUnits.length() == 0)) {
			ivldReturnsCacheModel.cumReturnUnits = null;
		}

		ivldReturnsCacheModel.reasonForFailure = getReasonForFailure();

		String reasonForFailure = ivldReturnsCacheModel.reasonForFailure;

		if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
			ivldReturnsCacheModel.reasonForFailure = null;
		}

		ivldReturnsCacheModel.origSaleMonth = getOrigSaleMonth();

		String origSaleMonth = ivldReturnsCacheModel.origSaleMonth;

		if ((origSaleMonth != null) && (origSaleMonth.length() == 0)) {
			ivldReturnsCacheModel.origSaleMonth = null;
		}

		ivldReturnsCacheModel.description = getDescription();

		String description = ivldReturnsCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			ivldReturnsCacheModel.description = null;
		}

		ivldReturnsCacheModel.sku = getSku();

		String sku = ivldReturnsCacheModel.sku;

		if ((sku != null) && (sku.length() == 0)) {
			ivldReturnsCacheModel.sku = null;
		}

		ivldReturnsCacheModel.upperLimit = getUpperLimit();

		String upperLimit = ivldReturnsCacheModel.upperLimit;

		if ((upperLimit != null) && (upperLimit.length() == 0)) {
			ivldReturnsCacheModel.upperLimit = null;
		}

		ivldReturnsCacheModel.lowerLimit = getLowerLimit();

		String lowerLimit = ivldReturnsCacheModel.lowerLimit;

		if ((lowerLimit != null) && (lowerLimit.length() == 0)) {
			ivldReturnsCacheModel.lowerLimit = null;
		}

		ivldReturnsCacheModel.valueAtOrigAsp = getValueAtOrigAsp();

		String valueAtOrigAsp = ivldReturnsCacheModel.valueAtOrigAsp;

		if ((valueAtOrigAsp != null) && (valueAtOrigAsp.length() == 0)) {
			ivldReturnsCacheModel.valueAtOrigAsp = null;
		}

		ivldReturnsCacheModel.adjEstimatedReturnUnits = getAdjEstimatedReturnUnits();

		String adjEstimatedReturnUnits = ivldReturnsCacheModel.adjEstimatedReturnUnits;

		if ((adjEstimatedReturnUnits != null) &&
				(adjEstimatedReturnUnits.length() == 0)) {
			ivldReturnsCacheModel.adjEstimatedReturnUnits = null;
		}

		ivldReturnsCacheModel.pct75th = getPct75th();

		String pct75th = ivldReturnsCacheModel.pct75th;

		if ((pct75th != null) && (pct75th.length() == 0)) {
			ivldReturnsCacheModel.pct75th = null;
		}

		ivldReturnsCacheModel.pastExpiration = getPastExpiration();

		String pastExpiration = ivldReturnsCacheModel.pastExpiration;

		if ((pastExpiration != null) && (pastExpiration.length() == 0)) {
			ivldReturnsCacheModel.pastExpiration = null;
		}

		ivldReturnsCacheModel.batchId = getBatchId();

		String batchId = ivldReturnsCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			ivldReturnsCacheModel.batchId = null;
		}

		ivldReturnsCacheModel.maximum = getMaximum();

		String maximum = ivldReturnsCacheModel.maximum;

		if ((maximum != null) && (maximum.length() == 0)) {
			ivldReturnsCacheModel.maximum = null;
		}

		ivldReturnsCacheModel.origSaleUnits = getOrigSaleUnits();

		String origSaleUnits = ivldReturnsCacheModel.origSaleUnits;

		if ((origSaleUnits != null) && (origSaleUnits.length() == 0)) {
			ivldReturnsCacheModel.origSaleUnits = null;
		}

		ivldReturnsCacheModel.errorField = getErrorField();

		String errorField = ivldReturnsCacheModel.errorField;

		if ((errorField != null) && (errorField.length() == 0)) {
			ivldReturnsCacheModel.errorField = null;
		}

		ivldReturnsCacheModel.brand = getBrand();

		String brand = ivldReturnsCacheModel.brand;

		if ((brand != null) && (brand.length() == 0)) {
			ivldReturnsCacheModel.brand = null;
		}

		ivldReturnsCacheModel.origSaleDollars = getOrigSaleDollars();

		String origSaleDollars = ivldReturnsCacheModel.origSaleDollars;

		if ((origSaleDollars != null) && (origSaleDollars.length() == 0)) {
			ivldReturnsCacheModel.origSaleDollars = null;
		}

		ivldReturnsCacheModel.checkRecord = getCheckRecord();

		return ivldReturnsCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(99);

		sb.append("{adjValueAtOrigAsp=");
		sb.append(getAdjValueAtOrigAsp());
		sb.append(", firstReturn=");
		sb.append(getFirstReturn());
		sb.append(", asp=");
		sb.append(getAsp());
		sb.append(", maxExpiredMonthPlusCutoff=");
		sb.append(getMaxExpiredMonthPlusCutoff());
		sb.append(", posEstimatedReturnUnits=");
		sb.append(getPosEstimatedReturnUnits());
		sb.append(", origSaleMonthCutOff=");
		sb.append(getOrigSaleMonthCutOff());
		sb.append(", calcUsed=");
		sb.append(getCalcUsed());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", lastReturn=");
		sb.append(getLastReturn());
		sb.append(", expectedReturnUnits=");
		sb.append(getExpectedReturnUnits());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", version=");
		sb.append(getVersion());
		sb.append(", addChgDelIndicator=");
		sb.append(getAddChgDelIndicator());
		sb.append(", weightedAvgMonths=");
		sb.append(getWeightedAvgMonths());
		sb.append(", errorCode=");
		sb.append(getErrorCode());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", ivldReturnsSid=");
		sb.append(getIvldReturnsSid());
		sb.append(", intfInsertedDate=");
		sb.append(getIntfInsertedDate());
		sb.append(", pct25th=");
		sb.append(getPct25th());
		sb.append(", loadDate=");
		sb.append(getLoadDate());
		sb.append(", maxExpiredMonth=");
		sb.append(getMaxExpiredMonth());
		sb.append(", reprocessedFlag=");
		sb.append(getReprocessedFlag());
		sb.append(", actualReturnRate=");
		sb.append(getActualReturnRate());
		sb.append(", rreserveId=");
		sb.append(getRreserveId());
		sb.append(", returnComplete=");
		sb.append(getReturnComplete());
		sb.append(", expectedReturnRate=");
		sb.append(getExpectedReturnRate());
		sb.append(", pct50th=");
		sb.append(getPct50th());
		sb.append(", within50qrtile=");
		sb.append(getWithin50qrtile());
		sb.append(", rreserveInterfaceId=");
		sb.append(getRreserveInterfaceId());
		sb.append(", cumReturnUnits=");
		sb.append(getCumReturnUnits());
		sb.append(", reasonForFailure=");
		sb.append(getReasonForFailure());
		sb.append(", origSaleMonth=");
		sb.append(getOrigSaleMonth());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", sku=");
		sb.append(getSku());
		sb.append(", upperLimit=");
		sb.append(getUpperLimit());
		sb.append(", lowerLimit=");
		sb.append(getLowerLimit());
		sb.append(", valueAtOrigAsp=");
		sb.append(getValueAtOrigAsp());
		sb.append(", adjEstimatedReturnUnits=");
		sb.append(getAdjEstimatedReturnUnits());
		sb.append(", pct75th=");
		sb.append(getPct75th());
		sb.append(", pastExpiration=");
		sb.append(getPastExpiration());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", maximum=");
		sb.append(getMaximum());
		sb.append(", origSaleUnits=");
		sb.append(getOrigSaleUnits());
		sb.append(", errorField=");
		sb.append(getErrorField());
		sb.append(", brand=");
		sb.append(getBrand());
		sb.append(", origSaleDollars=");
		sb.append(getOrigSaleDollars());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(151);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.IvldReturns");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>adjValueAtOrigAsp</column-name><column-value><![CDATA[");
		sb.append(getAdjValueAtOrigAsp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>firstReturn</column-name><column-value><![CDATA[");
		sb.append(getFirstReturn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>asp</column-name><column-value><![CDATA[");
		sb.append(getAsp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maxExpiredMonthPlusCutoff</column-name><column-value><![CDATA[");
		sb.append(getMaxExpiredMonthPlusCutoff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>posEstimatedReturnUnits</column-name><column-value><![CDATA[");
		sb.append(getPosEstimatedReturnUnits());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>origSaleMonthCutOff</column-name><column-value><![CDATA[");
		sb.append(getOrigSaleMonthCutOff());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>calcUsed</column-name><column-value><![CDATA[");
		sb.append(getCalcUsed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lastReturn</column-name><column-value><![CDATA[");
		sb.append(getLastReturn());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expectedReturnUnits</column-name><column-value><![CDATA[");
		sb.append(getExpectedReturnUnits());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>version</column-name><column-value><![CDATA[");
		sb.append(getVersion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
		sb.append(getAddChgDelIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>weightedAvgMonths</column-name><column-value><![CDATA[");
		sb.append(getWeightedAvgMonths());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorCode</column-name><column-value><![CDATA[");
		sb.append(getErrorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ivldReturnsSid</column-name><column-value><![CDATA[");
		sb.append(getIvldReturnsSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
		sb.append(getIntfInsertedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pct25th</column-name><column-value><![CDATA[");
		sb.append(getPct25th());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>loadDate</column-name><column-value><![CDATA[");
		sb.append(getLoadDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maxExpiredMonth</column-name><column-value><![CDATA[");
		sb.append(getMaxExpiredMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
		sb.append(getReprocessedFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actualReturnRate</column-name><column-value><![CDATA[");
		sb.append(getActualReturnRate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rreserveId</column-name><column-value><![CDATA[");
		sb.append(getRreserveId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>returnComplete</column-name><column-value><![CDATA[");
		sb.append(getReturnComplete());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>expectedReturnRate</column-name><column-value><![CDATA[");
		sb.append(getExpectedReturnRate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pct50th</column-name><column-value><![CDATA[");
		sb.append(getPct50th());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>within50qrtile</column-name><column-value><![CDATA[");
		sb.append(getWithin50qrtile());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rreserveInterfaceId</column-name><column-value><![CDATA[");
		sb.append(getRreserveInterfaceId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cumReturnUnits</column-name><column-value><![CDATA[");
		sb.append(getCumReturnUnits());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
		sb.append(getReasonForFailure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>origSaleMonth</column-name><column-value><![CDATA[");
		sb.append(getOrigSaleMonth());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sku</column-name><column-value><![CDATA[");
		sb.append(getSku());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>upperLimit</column-name><column-value><![CDATA[");
		sb.append(getUpperLimit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>lowerLimit</column-name><column-value><![CDATA[");
		sb.append(getLowerLimit());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>valueAtOrigAsp</column-name><column-value><![CDATA[");
		sb.append(getValueAtOrigAsp());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adjEstimatedReturnUnits</column-name><column-value><![CDATA[");
		sb.append(getAdjEstimatedReturnUnits());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pct75th</column-name><column-value><![CDATA[");
		sb.append(getPct75th());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>pastExpiration</column-name><column-value><![CDATA[");
		sb.append(getPastExpiration());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>maximum</column-name><column-value><![CDATA[");
		sb.append(getMaximum());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>origSaleUnits</column-name><column-value><![CDATA[");
		sb.append(getOrigSaleUnits());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorField</column-name><column-value><![CDATA[");
		sb.append(getErrorField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>brand</column-name><column-value><![CDATA[");
		sb.append(getBrand());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>origSaleDollars</column-name><column-value><![CDATA[");
		sb.append(getOrigSaleDollars());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = IvldReturns.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			IvldReturns.class
		};
	private String _adjValueAtOrigAsp;
	private String _firstReturn;
	private String _asp;
	private String _maxExpiredMonthPlusCutoff;
	private String _posEstimatedReturnUnits;
	private String _origSaleMonthCutOff;
	private String _calcUsed;
	private Date _modifiedDate;
	private String _lastReturn;
	private String _expectedReturnUnits;
	private Date _createdDate;
	private String _createdBy;
	private String _source;
	private String _version;
	private String _addChgDelIndicator;
	private String _weightedAvgMonths;
	private String _errorCode;
	private String _modifiedBy;
	private int _ivldReturnsSid;
	private Date _intfInsertedDate;
	private String _pct25th;
	private String _loadDate;
	private String _maxExpiredMonth;
	private String _reprocessedFlag;
	private String _actualReturnRate;
	private String _rreserveId;
	private String _returnComplete;
	private String _expectedReturnRate;
	private String _pct50th;
	private String _within50qrtile;
	private int _rreserveInterfaceId;
	private String _cumReturnUnits;
	private String _reasonForFailure;
	private String _origSaleMonth;
	private String _description;
	private String _sku;
	private String _upperLimit;
	private String _lowerLimit;
	private String _valueAtOrigAsp;
	private String _adjEstimatedReturnUnits;
	private String _pct75th;
	private String _pastExpiration;
	private String _batchId;
	private String _maximum;
	private String _origSaleUnits;
	private String _errorField;
	private String _brand;
	private String _origSaleDollars;
	private boolean _checkRecord;
	private IvldReturns _escapedModel;
}