/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.HistHierarchyLevelDefn;
import com.stpl.app.model.HistHierarchyLevelDefnModel;
import com.stpl.app.service.persistence.HistHierarchyLevelDefnPK;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the HistHierarchyLevelDefn service. Represents a row in the &quot;HIST_HIERARCHY_LEVEL_DEFN&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link HistHierarchyLevelDefnModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HistHierarchyLevelDefnImpl}.
 * </p>
 *
 * @author
 * @see HistHierarchyLevelDefnImpl
 * @see HistHierarchyLevelDefn
 * @see HistHierarchyLevelDefnModel
 * @generated
 */
@ProviderType
public class HistHierarchyLevelDefnModelImpl extends BaseModelImpl<HistHierarchyLevelDefn>
	implements HistHierarchyLevelDefnModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a hist hierarchy level defn model instance should use the {@link HistHierarchyLevelDefn} interface instead.
	 */
	public static final String TABLE_NAME = "HIST_HIERARCHY_LEVEL_DEFN";
	public static final Object[][] TABLE_COLUMNS = {
			{ "TABLE_NAME", Types.VARCHAR },
			{ "ACTION_DATE", Types.TIMESTAMP },
			{ "FIELD_NAME", Types.VARCHAR },
			{ "HIERARCHY_LEVEL_DEFINITION_SID", Types.INTEGER },
			{ "VERSION_NO", Types.INTEGER },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "LEVEL_VALUE_REFERENCE", Types.VARCHAR },
			{ "LEVEL_NO", Types.INTEGER },
			{ "ACTION_FLAG", Types.VARCHAR },
			{ "HIERARCHY_DEFINITION_SID", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "LEVEL_NAME", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("TABLE_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACTION_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("FIELD_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("HIERARCHY_LEVEL_DEFINITION_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("VERSION_NO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("LEVEL_VALUE_REFERENCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("LEVEL_NO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ACTION_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("HIERARCHY_DEFINITION_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("LEVEL_NAME", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table HIST_HIERARCHY_LEVEL_DEFN (TABLE_NAME VARCHAR(75) null,ACTION_DATE DATE null,FIELD_NAME VARCHAR(75) null,HIERARCHY_LEVEL_DEFINITION_SID INTEGER not null IDENTITY,VERSION_NO INTEGER not null IDENTITY,MODIFIED_DATE DATE null,CREATED_BY INTEGER,CREATED_DATE DATE null,LEVEL_VALUE_REFERENCE VARCHAR(75) null,LEVEL_NO INTEGER,ACTION_FLAG VARCHAR(75) not null,HIERARCHY_DEFINITION_SID INTEGER,MODIFIED_BY INTEGER,LEVEL_NAME VARCHAR(75) null,primary key (HIERARCHY_LEVEL_DEFINITION_SID, VERSION_NO, ACTION_FLAG))";
	public static final String TABLE_SQL_DROP = "drop table HIST_HIERARCHY_LEVEL_DEFN";
	public static final String ORDER_BY_JPQL = " ORDER BY histHierarchyLevelDefn.id.hierarchyLevelDefinitionSid ASC, histHierarchyLevelDefn.id.versionNo ASC, histHierarchyLevelDefn.id.actionFlag ASC";
	public static final String ORDER_BY_SQL = " ORDER BY HIST_HIERARCHY_LEVEL_DEFN.HIERARCHY_LEVEL_DEFINITION_SID ASC, HIST_HIERARCHY_LEVEL_DEFN.VERSION_NO ASC, HIST_HIERARCHY_LEVEL_DEFN.ACTION_FLAG ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.HistHierarchyLevelDefn"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.HistHierarchyLevelDefn"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.HistHierarchyLevelDefn"));

	public HistHierarchyLevelDefnModelImpl() {
	}

	@Override
	public HistHierarchyLevelDefnPK getPrimaryKey() {
		return new HistHierarchyLevelDefnPK(_hierarchyLevelDefinitionSid,
			_versionNo, _actionFlag);
	}

	@Override
	public void setPrimaryKey(HistHierarchyLevelDefnPK primaryKey) {
		setHierarchyLevelDefinitionSid(primaryKey.hierarchyLevelDefinitionSid);
		setVersionNo(primaryKey.versionNo);
		setActionFlag(primaryKey.actionFlag);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return new HistHierarchyLevelDefnPK(_hierarchyLevelDefinitionSid,
			_versionNo, _actionFlag);
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey((HistHierarchyLevelDefnPK)primaryKeyObj);
	}

	@Override
	public Class<?> getModelClass() {
		return HistHierarchyLevelDefn.class;
	}

	@Override
	public String getModelClassName() {
		return HistHierarchyLevelDefn.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("tableName", getTableName());
		attributes.put("actionDate", getActionDate());
		attributes.put("fieldName", getFieldName());
		attributes.put("hierarchyLevelDefinitionSid",
			getHierarchyLevelDefinitionSid());
		attributes.put("versionNo", getVersionNo());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("levelValueReference", getLevelValueReference());
		attributes.put("levelNo", getLevelNo());
		attributes.put("actionFlag", getActionFlag());
		attributes.put("hierarchyDefinitionSid", getHierarchyDefinitionSid());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("levelName", getLevelName());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String tableName = (String)attributes.get("tableName");

		if (tableName != null) {
			setTableName(tableName);
		}

		Date actionDate = (Date)attributes.get("actionDate");

		if (actionDate != null) {
			setActionDate(actionDate);
		}

		String fieldName = (String)attributes.get("fieldName");

		if (fieldName != null) {
			setFieldName(fieldName);
		}

		Integer hierarchyLevelDefinitionSid = (Integer)attributes.get(
				"hierarchyLevelDefinitionSid");

		if (hierarchyLevelDefinitionSid != null) {
			setHierarchyLevelDefinitionSid(hierarchyLevelDefinitionSid);
		}

		Integer versionNo = (Integer)attributes.get("versionNo");

		if (versionNo != null) {
			setVersionNo(versionNo);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String levelValueReference = (String)attributes.get(
				"levelValueReference");

		if (levelValueReference != null) {
			setLevelValueReference(levelValueReference);
		}

		Integer levelNo = (Integer)attributes.get("levelNo");

		if (levelNo != null) {
			setLevelNo(levelNo);
		}

		String actionFlag = (String)attributes.get("actionFlag");

		if (actionFlag != null) {
			setActionFlag(actionFlag);
		}

		Integer hierarchyDefinitionSid = (Integer)attributes.get(
				"hierarchyDefinitionSid");

		if (hierarchyDefinitionSid != null) {
			setHierarchyDefinitionSid(hierarchyDefinitionSid);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String levelName = (String)attributes.get("levelName");

		if (levelName != null) {
			setLevelName(levelName);
		}
	}

	@Override
	public String getTableName() {
		if (_tableName == null) {
			return StringPool.BLANK;
		}
		else {
			return _tableName;
		}
	}

	@Override
	public void setTableName(String tableName) {
		_tableName = tableName;
	}

	@Override
	public Date getActionDate() {
		return _actionDate;
	}

	@Override
	public void setActionDate(Date actionDate) {
		_actionDate = actionDate;
	}

	@Override
	public String getFieldName() {
		if (_fieldName == null) {
			return StringPool.BLANK;
		}
		else {
			return _fieldName;
		}
	}

	@Override
	public void setFieldName(String fieldName) {
		_fieldName = fieldName;
	}

	@Override
	public int getHierarchyLevelDefinitionSid() {
		return _hierarchyLevelDefinitionSid;
	}

	@Override
	public void setHierarchyLevelDefinitionSid(int hierarchyLevelDefinitionSid) {
		_hierarchyLevelDefinitionSid = hierarchyLevelDefinitionSid;
	}

	@Override
	public int getVersionNo() {
		return _versionNo;
	}

	@Override
	public void setVersionNo(int versionNo) {
		_versionNo = versionNo;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getLevelValueReference() {
		if (_levelValueReference == null) {
			return StringPool.BLANK;
		}
		else {
			return _levelValueReference;
		}
	}

	@Override
	public void setLevelValueReference(String levelValueReference) {
		_levelValueReference = levelValueReference;
	}

	@Override
	public int getLevelNo() {
		return _levelNo;
	}

	@Override
	public void setLevelNo(int levelNo) {
		_levelNo = levelNo;
	}

	@Override
	public String getActionFlag() {
		if (_actionFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _actionFlag;
		}
	}

	@Override
	public void setActionFlag(String actionFlag) {
		_actionFlag = actionFlag;
	}

	@Override
	public int getHierarchyDefinitionSid() {
		return _hierarchyDefinitionSid;
	}

	@Override
	public void setHierarchyDefinitionSid(int hierarchyDefinitionSid) {
		_hierarchyDefinitionSid = hierarchyDefinitionSid;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getLevelName() {
		if (_levelName == null) {
			return StringPool.BLANK;
		}
		else {
			return _levelName;
		}
	}

	@Override
	public void setLevelName(String levelName) {
		_levelName = levelName;
	}

	@Override
	public HistHierarchyLevelDefn toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (HistHierarchyLevelDefn)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		HistHierarchyLevelDefnImpl histHierarchyLevelDefnImpl = new HistHierarchyLevelDefnImpl();

		histHierarchyLevelDefnImpl.setTableName(getTableName());
		histHierarchyLevelDefnImpl.setActionDate(getActionDate());
		histHierarchyLevelDefnImpl.setFieldName(getFieldName());
		histHierarchyLevelDefnImpl.setHierarchyLevelDefinitionSid(getHierarchyLevelDefinitionSid());
		histHierarchyLevelDefnImpl.setVersionNo(getVersionNo());
		histHierarchyLevelDefnImpl.setModifiedDate(getModifiedDate());
		histHierarchyLevelDefnImpl.setCreatedBy(getCreatedBy());
		histHierarchyLevelDefnImpl.setCreatedDate(getCreatedDate());
		histHierarchyLevelDefnImpl.setLevelValueReference(getLevelValueReference());
		histHierarchyLevelDefnImpl.setLevelNo(getLevelNo());
		histHierarchyLevelDefnImpl.setActionFlag(getActionFlag());
		histHierarchyLevelDefnImpl.setHierarchyDefinitionSid(getHierarchyDefinitionSid());
		histHierarchyLevelDefnImpl.setModifiedBy(getModifiedBy());
		histHierarchyLevelDefnImpl.setLevelName(getLevelName());

		histHierarchyLevelDefnImpl.resetOriginalValues();

		return histHierarchyLevelDefnImpl;
	}

	@Override
	public int compareTo(HistHierarchyLevelDefn histHierarchyLevelDefn) {
		HistHierarchyLevelDefnPK primaryKey = histHierarchyLevelDefn.getPrimaryKey();

		return getPrimaryKey().compareTo(primaryKey);
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof HistHierarchyLevelDefn)) {
			return false;
		}

		HistHierarchyLevelDefn histHierarchyLevelDefn = (HistHierarchyLevelDefn)obj;

		HistHierarchyLevelDefnPK primaryKey = histHierarchyLevelDefn.getPrimaryKey();

		if (getPrimaryKey().equals(primaryKey)) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey().hashCode();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<HistHierarchyLevelDefn> toCacheModel() {
		HistHierarchyLevelDefnCacheModel histHierarchyLevelDefnCacheModel = new HistHierarchyLevelDefnCacheModel();

		histHierarchyLevelDefnCacheModel.histHierarchyLevelDefnPK = getPrimaryKey();

		histHierarchyLevelDefnCacheModel.tableName = getTableName();

		String tableName = histHierarchyLevelDefnCacheModel.tableName;

		if ((tableName != null) && (tableName.length() == 0)) {
			histHierarchyLevelDefnCacheModel.tableName = null;
		}

		Date actionDate = getActionDate();

		if (actionDate != null) {
			histHierarchyLevelDefnCacheModel.actionDate = actionDate.getTime();
		}
		else {
			histHierarchyLevelDefnCacheModel.actionDate = Long.MIN_VALUE;
		}

		histHierarchyLevelDefnCacheModel.fieldName = getFieldName();

		String fieldName = histHierarchyLevelDefnCacheModel.fieldName;

		if ((fieldName != null) && (fieldName.length() == 0)) {
			histHierarchyLevelDefnCacheModel.fieldName = null;
		}

		histHierarchyLevelDefnCacheModel.hierarchyLevelDefinitionSid = getHierarchyLevelDefinitionSid();

		histHierarchyLevelDefnCacheModel.versionNo = getVersionNo();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			histHierarchyLevelDefnCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			histHierarchyLevelDefnCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		histHierarchyLevelDefnCacheModel.createdBy = getCreatedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			histHierarchyLevelDefnCacheModel.createdDate = createdDate.getTime();
		}
		else {
			histHierarchyLevelDefnCacheModel.createdDate = Long.MIN_VALUE;
		}

		histHierarchyLevelDefnCacheModel.levelValueReference = getLevelValueReference();

		String levelValueReference = histHierarchyLevelDefnCacheModel.levelValueReference;

		if ((levelValueReference != null) &&
				(levelValueReference.length() == 0)) {
			histHierarchyLevelDefnCacheModel.levelValueReference = null;
		}

		histHierarchyLevelDefnCacheModel.levelNo = getLevelNo();

		histHierarchyLevelDefnCacheModel.actionFlag = getActionFlag();

		String actionFlag = histHierarchyLevelDefnCacheModel.actionFlag;

		if ((actionFlag != null) && (actionFlag.length() == 0)) {
			histHierarchyLevelDefnCacheModel.actionFlag = null;
		}

		histHierarchyLevelDefnCacheModel.hierarchyDefinitionSid = getHierarchyDefinitionSid();

		histHierarchyLevelDefnCacheModel.modifiedBy = getModifiedBy();

		histHierarchyLevelDefnCacheModel.levelName = getLevelName();

		String levelName = histHierarchyLevelDefnCacheModel.levelName;

		if ((levelName != null) && (levelName.length() == 0)) {
			histHierarchyLevelDefnCacheModel.levelName = null;
		}

		return histHierarchyLevelDefnCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(29);

		sb.append("{tableName=");
		sb.append(getTableName());
		sb.append(", actionDate=");
		sb.append(getActionDate());
		sb.append(", fieldName=");
		sb.append(getFieldName());
		sb.append(", hierarchyLevelDefinitionSid=");
		sb.append(getHierarchyLevelDefinitionSid());
		sb.append(", versionNo=");
		sb.append(getVersionNo());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", levelValueReference=");
		sb.append(getLevelValueReference());
		sb.append(", levelNo=");
		sb.append(getLevelNo());
		sb.append(", actionFlag=");
		sb.append(getActionFlag());
		sb.append(", hierarchyDefinitionSid=");
		sb.append(getHierarchyDefinitionSid());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", levelName=");
		sb.append(getLevelName());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(46);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.HistHierarchyLevelDefn");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>tableName</column-name><column-value><![CDATA[");
		sb.append(getTableName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionDate</column-name><column-value><![CDATA[");
		sb.append(getActionDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fieldName</column-name><column-value><![CDATA[");
		sb.append(getFieldName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hierarchyLevelDefinitionSid</column-name><column-value><![CDATA[");
		sb.append(getHierarchyLevelDefinitionSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>versionNo</column-name><column-value><![CDATA[");
		sb.append(getVersionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levelValueReference</column-name><column-value><![CDATA[");
		sb.append(getLevelValueReference());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levelNo</column-name><column-value><![CDATA[");
		sb.append(getLevelNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actionFlag</column-name><column-value><![CDATA[");
		sb.append(getActionFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>hierarchyDefinitionSid</column-name><column-value><![CDATA[");
		sb.append(getHierarchyDefinitionSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>levelName</column-name><column-value><![CDATA[");
		sb.append(getLevelName());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = HistHierarchyLevelDefn.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			HistHierarchyLevelDefn.class
		};
	private String _tableName;
	private Date _actionDate;
	private String _fieldName;
	private int _hierarchyLevelDefinitionSid;
	private int _versionNo;
	private Date _modifiedDate;
	private int _createdBy;
	private Date _createdDate;
	private String _levelValueReference;
	private int _levelNo;
	private String _actionFlag;
	private int _hierarchyDefinitionSid;
	private int _modifiedBy;
	private String _levelName;
	private HistHierarchyLevelDefn _escapedModel;
}