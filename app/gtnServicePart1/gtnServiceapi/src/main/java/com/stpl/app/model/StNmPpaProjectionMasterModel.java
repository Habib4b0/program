/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import com.stpl.app.service.persistence.StNmPpaProjectionMasterPK;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the StNmPpaProjectionMaster service. Represents a row in the &quot;ST_NM_PPA_PROJECTION_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.StNmPpaProjectionMasterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.StNmPpaProjectionMasterImpl}.
 * </p>
 *
 * @author
 * @see StNmPpaProjectionMaster
 * @see com.stpl.app.model.impl.StNmPpaProjectionMasterImpl
 * @see com.stpl.app.model.impl.StNmPpaProjectionMasterModelImpl
 * @generated
 */
@ProviderType
public interface StNmPpaProjectionMasterModel extends BaseModel<StNmPpaProjectionMaster> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a st nm ppa projection master model instance should use the {@link StNmPpaProjectionMaster} interface instead.
	 */

	/**
	 * Returns the primary key of this st nm ppa projection master.
	 *
	 * @return the primary key of this st nm ppa projection master
	 */
	public StNmPpaProjectionMasterPK getPrimaryKey();

	/**
	 * Sets the primary key of this st nm ppa projection master.
	 *
	 * @param primaryKey the primary key of this st nm ppa projection master
	 */
	public void setPrimaryKey(StNmPpaProjectionMasterPK primaryKey);

	/**
	 * Returns the last modified date of this st nm ppa projection master.
	 *
	 * @return the last modified date of this st nm ppa projection master
	 */
	public Date getLastModifiedDate();

	/**
	 * Sets the last modified date of this st nm ppa projection master.
	 *
	 * @param lastModifiedDate the last modified date of this st nm ppa projection master
	 */
	public void setLastModifiedDate(Date lastModifiedDate);

	/**
	 * Returns the check record of this st nm ppa projection master.
	 *
	 * @return the check record of this st nm ppa projection master
	 */
	public boolean getCheckRecord();

	/**
	 * Returns <code>true</code> if this st nm ppa projection master is check record.
	 *
	 * @return <code>true</code> if this st nm ppa projection master is check record; <code>false</code> otherwise
	 */
	public boolean isCheckRecord();

	/**
	 * Sets whether this st nm ppa projection master is check record.
	 *
	 * @param checkRecord the check record of this st nm ppa projection master
	 */
	public void setCheckRecord(boolean checkRecord);

	/**
	 * Returns the user group of this st nm ppa projection master.
	 *
	 * @return the user group of this st nm ppa projection master
	 */
	@AutoEscape
	public String getUserGroup();

	/**
	 * Sets the user group of this st nm ppa projection master.
	 *
	 * @param userGroup the user group of this st nm ppa projection master
	 */
	public void setUserGroup(String userGroup);

	/**
	 * Returns the projection details sid of this st nm ppa projection master.
	 *
	 * @return the projection details sid of this st nm ppa projection master
	 */
	public int getProjectionDetailsSid();

	/**
	 * Sets the projection details sid of this st nm ppa projection master.
	 *
	 * @param projectionDetailsSid the projection details sid of this st nm ppa projection master
	 */
	public void setProjectionDetailsSid(int projectionDetailsSid);

	/**
	 * Returns the user ID of this st nm ppa projection master.
	 *
	 * @return the user ID of this st nm ppa projection master
	 */
	public int getUserId();

	/**
	 * Sets the user ID of this st nm ppa projection master.
	 *
	 * @param userId the user ID of this st nm ppa projection master
	 */
	public void setUserId(int userId);

	/**
	 * Returns the session ID of this st nm ppa projection master.
	 *
	 * @return the session ID of this st nm ppa projection master
	 */
	public int getSessionId();

	/**
	 * Sets the session ID of this st nm ppa projection master.
	 *
	 * @param sessionId the session ID of this st nm ppa projection master
	 */
	public void setSessionId(int sessionId);

	/**
	 * Returns the price basis of this st nm ppa projection master.
	 *
	 * @return the price basis of this st nm ppa projection master
	 */
	@AutoEscape
	public String getPriceBasis();

	/**
	 * Sets the price basis of this st nm ppa projection master.
	 *
	 * @param priceBasis the price basis of this st nm ppa projection master
	 */
	public void setPriceBasis(String priceBasis);

	/**
	 * Returns the price protection end date of this st nm ppa projection master.
	 *
	 * @return the price protection end date of this st nm ppa projection master
	 */
	public Date getPriceProtectionEndDate();

	/**
	 * Sets the price protection end date of this st nm ppa projection master.
	 *
	 * @param priceProtectionEndDate the price protection end date of this st nm ppa projection master
	 */
	public void setPriceProtectionEndDate(Date priceProtectionEndDate);

	/**
	 * Returns the price protection start date of this st nm ppa projection master.
	 *
	 * @return the price protection start date of this st nm ppa projection master
	 */
	public Date getPriceProtectionStartDate();

	/**
	 * Sets the price protection start date of this st nm ppa projection master.
	 *
	 * @param priceProtectionStartDate the price protection start date of this st nm ppa projection master
	 */
	public void setPriceProtectionStartDate(Date priceProtectionStartDate);

	/**
	 * Returns the actual price cap of this st nm ppa projection master.
	 *
	 * @return the actual price cap of this st nm ppa projection master
	 */
	public double getActualPriceCap();

	/**
	 * Sets the actual price cap of this st nm ppa projection master.
	 *
	 * @param actualPriceCap the actual price cap of this st nm ppa projection master
	 */
	public void setActualPriceCap(double actualPriceCap);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(StNmPpaProjectionMaster stNmPpaProjectionMaster);

	@Override
	public int hashCode();

	@Override
	public CacheModel<StNmPpaProjectionMaster> toCacheModel();

	@Override
	public StNmPpaProjectionMaster toEscapedModel();

	@Override
	public StNmPpaProjectionMaster toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}