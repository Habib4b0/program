<?xml version="1.0" encoding="UTF-8"?>
<sql>
    <entity id="Existing.saveCFP">        
        <query>
        <![CDATA[
            
        
         MERGE CFP_CONTRACT_DETAILS AS Target USING 
         (SELECT '?' CFP_CONTRACT_SID, COMPANY_MASTER_SID, COMPANY_START_DATE, COMPANY_END_DATE, COMPANY_CFP_ATTACHED_STATUS,
        TRADE_CLASS, TRADE_CLASS_START_DATE, TRADE_CLASS_END_DATE, '?' CREATED_BY, '?' CREATED_DATE, '?' MODIFIED_BY, '?' MODIFIED_DATE, 'A' INBOUND_STATUS, 'false' RECORD_LOCK_STATUS
        FROM dbo.CFP_DETAILS
        WHERE INBOUND_STATUS NOT IN('D') AND CFP_MODEL_SID=?) AS Source
        
        ON (Target.CFP_CONTRACT_SID = Source.CFP_CONTRACT_SID AND Target.COMPANY_MASTER_SID=Source.COMPANY_MASTER_SID  AND 
        	Target.COMPANY_START_DATE=Source.COMPANY_START_DATE AND Target.INBOUND_STATUS = 'D')
        WHEN MATCHED THEN
        
        UPDATE SET 
        Target.COMPANY_END_DATE = Source.COMPANY_END_DATE, 
        Target.CFP_CONTRACT_ATTACHED_STATUS=Source.COMPANY_CFP_ATTACHED_STATUS,
        Target.TRADE_CLASS = Source.TRADE_CLASS, 
       	Target.TRADE_CLASS_START_DATE = Source.TRADE_CLASS_START_DATE, 
        Target.TRADE_CLASS_END_DATE = Source.TRADE_CLASS_END_DATE, 
        Target.CREATED_BY = Source.CREATED_BY,
        Target.CREATED_DATE = Source.CREATED_DATE,
        Target.MODIFIED_BY = Source.MODIFIED_BY,
        Target.MODIFIED_DATE = Source.MODIFIED_DATE,
        Target.INBOUND_STATUS = 'A',
        Target.RECORD_LOCK_STATUS = 0, 
        Target."SOURCE"='BPI'
        WHEN NOT matched THEN
        
  		INSERT(CFP_CONTRACT_SID, COMPANY_MASTER_SID, COMPANY_START_DATE, COMPANY_END_DATE,CFP_CONTRACT_ATTACHED_STATUS,
        TRADE_CLASS, TRADE_CLASS_START_DATE, TRADE_CLASS_END_DATE, CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, INBOUND_STATUS, RECORD_LOCK_STATUS,"SOURCE")
  		VALUES(Source.CFP_CONTRACT_SID, Source.COMPANY_MASTER_SID, Source.COMPANY_START_DATE,Source.COMPANY_END_DATE,Source.COMPANY_CFP_ATTACHED_STATUS,
        Source.TRADE_CLASS, Source.TRADE_CLASS_START_DATE, Source.TRADE_CLASS_END_DATE, Source.CREATED_BY, Source.CREATED_DATE, Source.MODIFIED_BY,
         Source.MODIFIED_DATE, 'A', 0,'BPI');
        
        
        
        ]]>
        </query>    
    </entity>
    <entity id="Existing.saveIFP">        
        <query>
       <![CDATA[
       
        
         MERGE IFP_CONTRACT_DETAILS AS Target USING 
         (SELECT '?' IFP_CONTRACT_SID, ITEM_MASTER_SID, START_DATE, END_DATE,  
        '?' CREATED_BY, '?' CREATED_DATE, '?' MODIFIED_BY, '?' MODIFIED_DATE, 'A' INBOUND_STATUS, 'false' RECORD_LOCK_STATUS 
        FROM dbo.IFP_DETAILS 
        WHERE INBOUND_STATUS NOT IN('D') AND IFP_MODEL_SID=?) AS Source
        
        ON (Target.IFP_CONTRACT_SID = Source.IFP_CONTRACT_SID AND Target.ITEM_MASTER_SID=Source.ITEM_MASTER_SID  AND 
        	Target.ITEM_START_DATE=Source.START_DATE AND Target.INBOUND_STATUS = 'D')
       
        WHEN MATCHED THEN
        
        UPDATE SET 
        
        Target.ITEM_START_DATE = Source.START_DATE, 
       	Target.ITEM_END_DATE = Source.END_DATE, 
        Target.CREATED_BY = Source.CREATED_BY,
        Target.CREATED_DATE = Source.CREATED_DATE,
        Target.MODIFIED_BY = Source.MODIFIED_BY,
        Target.MODIFIED_DATE = Source.MODIFIED_DATE,
        Target.INBOUND_STATUS = 'A',
        Target.RECORD_LOCK_STATUS = 0,
        Target."SOURCE"='BPI' 
       
        WHEN NOT matched THEN
        
  		INSERT(IFP_CONTRACT_SID, ITEM_MASTER_SID, ITEM_START_DATE, ITEM_END_DATE,  
        CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, INBOUND_STATUS, RECORD_LOCK_STATUS,"SOURCE")
  		VALUES(Source.IFP_CONTRACT_SID, Source.ITEM_MASTER_SID, Source.START_DATE,Source.END_DATE,
        Source.CREATED_BY, Source.CREATED_DATE, Source.MODIFIED_BY, Source.MODIFIED_DATE, 'A', 0,'BPI');
       
        ]]>
        </query>    
    </entity>
    <entity id="Existing.savePS">        
        <query>
        <![CDATA[
        
         MERGE PS_CONTRACT_DETAILS AS Target USING 
         (SELECT '?' PS_CONTRACT_SID, ITEM_MASTER_SID, CONTRACT_PRICE_START_DATE, CONTRACT_PRICE_END_DATE, CONTRACT_PRICE, 
        PRICE_REVISION, REVISION_DATE, PRICE_PROTECTION_START_DATE ,PRICE_PROTECTION_END_DATE, PRICE_TOLERANCE_TYPE, PRICE_TOLERANCE, BASE_PRICE, PRICE_TOLERANCE_FREQUENCY ,
        PRICE_TOLERANCE_INTERVAL, SUGGESTED_PRICE, ITEM_PRICING_QUALIFIER_SID,  
        '?' CREATED_BY, '?' CREATED_DATE, '?' MODIFIED_BY, '?' MODIFIED_DATE, PRICE, 'A' INBOUND_STATUS, 'false' RECORD_LOCK_STATUS 
        FROM dbo.PS_DETAILS
        WHERE INBOUND_STATUS NOT IN('D') AND PS_MODEL_SID=?) AS Source
        
        ON (Target.PS_CONTRACT_SID = Source.PS_CONTRACT_SID AND Target.ITEM_MASTER_SID=Source.ITEM_MASTER_SID  AND 
        	Target.CONTRACT_PRICE_START_DATE=Source.CONTRACT_PRICE_START_DATE AND Target.INBOUND_STATUS = 'D')
       
        WHEN MATCHED THEN
        
        UPDATE SET 
        
        Target.CONTRACT_PRICE_END_DATE = Source.CONTRACT_PRICE_END_DATE,
        Target.CONTRACT_PRICE = Source.CONTRACT_PRICE, 
       	Target.PRICE_REVISION = Source.PRICE_REVISION, 
        Target.REVISION_DATE = Source.REVISION_DATE, 
        Target.PRICE_PROTECTION_START_DATE = Source.PRICE_PROTECTION_START_DATE,
        Target.PRICE_TOLERANCE_TYPE = Source.PRICE_TOLERANCE_TYPE,
        Target.PRICE_TOLERANCE = Source.PRICE_TOLERANCE,
        Target.BASE_PRICE = Source.BASE_PRICE,
        Target.PRICE_TOLERANCE_FREQUENCY = Source.PRICE_TOLERANCE_FREQUENCY,
        Target.PRICE_TOLERANCE_INTERVAL = Source.PRICE_TOLERANCE_INTERVAL,
        Target.SUGGESTED_PRICE = Source.SUGGESTED_PRICE,
        Target.ITEM_PRICING_QUALIFIER_SID = Source.ITEM_PRICING_QUALIFIER_SID,
        Target.CREATED_BY = Source.CREATED_BY,
        Target.CREATED_DATE = Source.CREATED_DATE,
        Target.MODIFIED_BY = Source.MODIFIED_BY,
        Target.MODIFIED_DATE = Source.MODIFIED_DATE,
        Target.INBOUND_STATUS = 'A',
        Target.RECORD_LOCK_STATUS = 0, 
        Target."SOURCE"='BPI' 
        WHEN NOT matched THEN
        
  		INSERT(PS_CONTRACT_SID, ITEM_MASTER_SID, CONTRACT_PRICE_START_DATE, CONTRACT_PRICE_END_DATE, CONTRACT_PRICE, 
        PRICE_REVISION, REVISION_DATE, PRICE_PROTECTION_START_DATE ,PRICE_PROTECTION_END_DATE, PRICE_TOLERANCE_TYPE, PRICE_TOLERANCE, BASE_PRICE, PRICE_TOLERANCE_FREQUENCY ,
        PRICE_TOLERANCE_INTERVAL, SUGGESTED_PRICE, ITEM_PRICING_QUALIFIER_SID,   
        CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, PRICE, INBOUND_STATUS, RECORD_LOCK_STATUS,"SOURCE")
        
  		VALUES(Source.PS_CONTRACT_SID, Source.ITEM_MASTER_SID, Source.CONTRACT_PRICE_START_DATE, Source.CONTRACT_PRICE_END_DATE, Source.CONTRACT_PRICE, 
        Source.PRICE_REVISION, Source.REVISION_DATE, Source.PRICE_PROTECTION_START_DATE ,Source.PRICE_PROTECTION_END_DATE, Source.PRICE_TOLERANCE_TYPE,
         Source.PRICE_TOLERANCE, Source.BASE_PRICE, Source.PRICE_TOLERANCE_FREQUENCY ,
        Source.PRICE_TOLERANCE_INTERVAL, Source.SUGGESTED_PRICE, Source.ITEM_PRICING_QUALIFIER_SID,   
        Source.CREATED_BY, Source.CREATED_DATE, Source.MODIFIED_BY, Source.MODIFIED_DATE, Source.PRICE,'A', 0,'BPI');
        
        
        
        ]]>
        </query>    
    </entity>
    
    <entity id="Existing.saveRS">        
        <query>
        <![CDATA[
       
        
         MERGE RS_CONTRACT_DETAILS AS Target USING 
         (SELECT '?' RS_CONTRACT_SID, ITEM_MASTER_SID, ITEM_REBATE_START_DATE, ITEM_REBATE_END_DATE, FORMULA_ID, REBATE_PLAN_MASTER_SID, 
        REBATE_AMOUNT, BUNDLE_NO,  
        '?' CREATED_BY, '?' CREATED_DATE, '?' MODIFIED_BY, '?' MODIFIED_DATE, 'A' INBOUND_STATUS, FORMULA_METHOD_ID, 'false' RECORD_LOCK_STATUS
        FROM dbo.RS_DETAILS
        WHERE INBOUND_STATUS NOT IN('D') AND RS_MODEL_SID=?) AS Source
        
        ON (Target.RS_CONTRACT_SID = Source.RS_CONTRACT_SID AND Target.ITEM_MASTER_SID=Source.ITEM_MASTER_SID  AND 
        	Target.ITEM_REBATE_START_DATE=Source.ITEM_REBATE_START_DATE AND Target.INBOUND_STATUS = 'D')
       
        WHEN MATCHED THEN
        
        UPDATE SET 
        
        Target.ITEM_REBATE_END_DATE = Source.ITEM_REBATE_END_DATE,
        Target.FORMULA_ID = Source.FORMULA_ID, 
       	Target.REBATE_PLAN_MASTER_SID = Source.REBATE_PLAN_MASTER_SID, 
        Target.REBATE_AMOUNT = Source.REBATE_AMOUNT, 
        Target.BUNDLE_NO = Source.BUNDLE_NO,
        
        Target.CREATED_BY = Source.CREATED_BY,
        Target.CREATED_DATE = Source.CREATED_DATE,
        Target.MODIFIED_BY = Source.MODIFIED_BY,
        Target.MODIFIED_DATE = Source.MODIFIED_DATE,
        Target.INBOUND_STATUS = 'A',
        Target.FORMULA_METHOD_ID=Source.FORMULA_METHOD_ID,
        Target.RECORD_LOCK_STATUS = 0,
        Target."SOURCE"='BPI' 
        WHEN NOT matched THEN
        
  		INSERT(RS_CONTRACT_SID, ITEM_MASTER_SID, ITEM_REBATE_START_DATE, ITEM_REBATE_END_DATE, FORMULA_ID, REBATE_PLAN_MASTER_SID, 
        REBATE_AMOUNT, BUNDLE_NO,  
        CREATED_BY, CREATED_DATE, MODIFIED_BY, MODIFIED_DATE, INBOUND_STATUS, FORMULA_METHOD_ID, RECORD_LOCK_STATUS,"SOURCE")
        
  		VALUES(Source.RS_CONTRACT_SID, Source.ITEM_MASTER_SID, Source.ITEM_REBATE_START_DATE, Source.ITEM_REBATE_END_DATE,
  		 Source.FORMULA_ID, Source.REBATE_PLAN_MASTER_SID, Source.REBATE_AMOUNT, Source.BUNDLE_NO,  
        Source.CREATED_BY, Source.CREATED_DATE, Source.MODIFIED_BY, Source.MODIFIED_DATE, 'A', Source.FORMULA_METHOD_ID, 0,'BPI');
        
        ]]>
        </query>    
    </entity>
    
    
    <entity id="Copy Contract-contract Search">        
        <query>
        <![CDATA[
       
        
       SELECT
CM.CONT_HOLD_COMPANY_MASTER_SID AS contractHolder,
                COMP.COMPANY_NAME               AS companyName,
                CM.CONTRACT_NAME                AS contractName,
                CM.CONTRACT_NO                  AS contractNo,
                H1.DESCRIPTION                  AS marketTypeValue,
                CM.START_DATE                   AS startDate,
                CM.END_DATE                     AS endDate,
                CCT.CFP_NAME                    AS companyFamilyPlan,
                IFP_CONT.IFP_NAME               AS itemFamilyPlan,
                PSC.PS_NAME                     AS priceSchedule,
                RSC.RS_NAME                     AS rebateSchedule,
                CM.CONTRACT_MASTER_SID,
                CCT.CFP_CONTRACT_SID,
                IFP_CONT.IFP_CONTRACT_SID,
                PSC.PS_CONTRACT_SID,
                RSC.RS_CONTRACT_SID,
                TEMP.CHECK_RECORD
FROM   CONTRACT_MASTER CM
        LEFT JOIN dbo.CONTRACT_ALIAS_MASTER CAM
              ON CM.CONTRACT_MASTER_SID = CAM.CONTRACT_MASTER_SID
                 AND CAM.CONTRACT_ALIAS_NO LIKE '?'
                 AND CAM.CONTRACT_ALIAS_TYPE LIKE '?'
       LEFT JOIN CFP_CONTRACT CCT
              ON CM.CONTRACT_MASTER_SID = CCT.CONTRACT_MASTER_SID
                 AND CM.INBOUND_STATUS <> 'D'
                 AND CCT.INBOUND_STATUS <> 'D'
                 AND CCT.CFP_NAME LIKE '?'
       LEFT JOIN CFP_CONTRACT_DETAILS CCD
              ON CCT.CFP_CONTRACT_SID = CCD.CFP_CONTRACT_SID
       LEFT JOIN COMPANY_MASTER CMP_MAS
              ON CMP_MAS.COMPANY_MASTER_SID = CCD.COMPANY_MASTER_SID
                 AND CMP_MAS.INBOUND_STATUS <> 'D'
       LEFT JOIN IFP_CONTRACT IFP_CONT
              ON IFP_CONT.CFP_CONTRACT_SID = CCT.CFP_CONTRACT_SID
                 AND IFP_CONT.INBOUND_STATUS <> 'D'
                 AND CM.CONTRACT_MASTER_SID = IFP_CONT.CONTRACT_MASTER_SID
                 AND IFP_CONT.IFP_NAME LIKE '?'
     
       LEFT JOIN PS_CONTRACT PSC
              ON PSC.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID
                 AND PSC.INBOUND_STATUS <> 'D'
                 AND PSC.PS_NAME LIKE '?' AND PSC.CFP_CONTRACT_SID=CCT.CFP_CONTRACT_SID AND PSC.IFP_CONTRACT_SID=IFP_CONT.IFP_CONTRACT_SID
      
       LEFT JOIN RS_CONTRACT RSC
              ON RSC.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID
                 AND RSC.INBOUND_STATUS <> 'D' AND PSC.CFP_CONTRACT_SID=CCT.CFP_CONTRACT_SID AND PSC.IFP_CONTRACT_SID=IFP_CONT.IFP_CONTRACT_SID
				 AND RSC.PS_CONTRACT_SID=PSC.PS_CONTRACT_SID
       LEFT JOIN HELPER_TABLE H1
              ON CM.CONTRACT_TYPE = H1.HELPER_TABLE_SID
       LEFT JOIN IMTD_ITEM_PRICE_REBATE_DETAILS TEMP
              ON TEMP.CONTRACT_master_sid = CM.CONTRACT_MASTER_SID
                 AND TEMP.CFP_MODEL_SID = CCT.CFP_CONTRACT_SID
                 AND IFP_CONT.CFP_CONTRACT_SID = TEMP.IFP_MODEL_SID
                 AND PSC.PS_CONTRACT_SID = TEMP.PS_MODEL_SID
                 AND Temp.RS_MODEL_SID = RSC.RS_CONTRACT_SID
                 AND TEMP.SESSION_ID = '?'
                 AND TEMP.USERS_SID = '?'
       LEFT JOIN COMPANY_MASTER COMP
              ON CM.CONT_HOLD_COMPANY_MASTER_SID = COMP.COMPANY_MASTER_SID
WHERE  Isnull(CM.CONT_HOLD_COMPANY_MASTER_SID, '0') LIKE '?'
       AND CM.CONTRACT_NO LIKE '?'
       AND CM.CONTRACT_NAME LIKE '?'
       AND CM.CONTRACT_TYPE LIKE '?'
            ? ? ? ?   ?;
        ]]>
        </query>    
    </entity>
    
    
    <entity id="Copy Contract-contract Search Count">        
        <query>
        <![CDATA[
       SELECT COUNT(*) FROM (
        
       SELECT
CM.CONT_HOLD_COMPANY_MASTER_SID AS contractHolder,
                COMP.COMPANY_NAME               AS companyName,
                CM.CONTRACT_NAME                AS contractName,
                CM.CONTRACT_NO                  AS contractNo,
                H1.DESCRIPTION                  AS marketTypeValue,
                CM.START_DATE                   AS startDate,
                CM.END_DATE                     AS endDate,
                CCT.CFP_NAME                    AS companyFamilyPlan,
                IFP_CONT.IFP_NAME               AS itemFamilyPlan,
                PSC.PS_NAME                     AS priceSchedule,
                RSC.RS_NAME                     AS rebateSchedule,
                CM.CONTRACT_MASTER_SID,
                CCT.CFP_CONTRACT_SID,
                IFP_CONT.IFP_CONTRACT_SID,
                PSC.PS_CONTRACT_SID,
                RSC.RS_CONTRACT_SID,
                TEMP.CHECK_RECORD
FROM   CONTRACT_MASTER CM
        LEFT JOIN dbo.CONTRACT_ALIAS_MASTER CAM
              ON CM.CONTRACT_MASTER_SID = CAM.CONTRACT_MASTER_SID
                 AND CAM.CONTRACT_ALIAS_NO LIKE '?'
                 AND CAM.CONTRACT_ALIAS_TYPE LIKE '?'
       LEFT JOIN CFP_CONTRACT CCT
              ON CM.CONTRACT_MASTER_SID = CCT.CONTRACT_MASTER_SID
                 AND CM.INBOUND_STATUS <> 'D'
                 AND CCT.INBOUND_STATUS <> 'D'
                 AND CCT.CFP_NAME LIKE '?'
       LEFT JOIN CFP_CONTRACT_DETAILS CCD
              ON CCT.CFP_CONTRACT_SID = CCD.CFP_CONTRACT_SID
       LEFT JOIN COMPANY_MASTER CMP_MAS
              ON CMP_MAS.COMPANY_MASTER_SID = CCD.COMPANY_MASTER_SID
                 AND CMP_MAS.INBOUND_STATUS <> 'D'
       LEFT JOIN IFP_CONTRACT IFP_CONT
              ON IFP_CONT.CFP_CONTRACT_SID = CCT.CFP_CONTRACT_SID
                 AND IFP_CONT.INBOUND_STATUS <> 'D'
                 AND CM.CONTRACT_MASTER_SID = IFP_CONT.CONTRACT_MASTER_SID
                 AND IFP_CONT.IFP_NAME LIKE '?'
     
       LEFT JOIN PS_CONTRACT PSC
              ON PSC.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID
                 AND PSC.INBOUND_STATUS <> 'D'
                 AND PSC.PS_NAME LIKE '?' AND PSC.CFP_CONTRACT_SID=CCT.CFP_CONTRACT_SID AND PSC.IFP_CONTRACT_SID=IFP_CONT.IFP_CONTRACT_SID
      
       LEFT JOIN RS_CONTRACT RSC
              ON RSC.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID
                 AND RSC.INBOUND_STATUS <> 'D' AND PSC.CFP_CONTRACT_SID=CCT.CFP_CONTRACT_SID AND PSC.IFP_CONTRACT_SID=IFP_CONT.IFP_CONTRACT_SID
				 AND RSC.PS_CONTRACT_SID=PSC.PS_CONTRACT_SID
       LEFT JOIN HELPER_TABLE H1
              ON CM.CONTRACT_TYPE = H1.HELPER_TABLE_SID
       LEFT JOIN IMTD_ITEM_PRICE_REBATE_DETAILS TEMP
              ON TEMP.CONTRACT_master_sid = CM.CONTRACT_MASTER_SID
                 AND TEMP.CFP_MODEL_SID = CCT.CFP_CONTRACT_SID
                 AND IFP_CONT.CFP_CONTRACT_SID = TEMP.IFP_MODEL_SID
                 AND PSC.PS_CONTRACT_SID = TEMP.PS_MODEL_SID
                 AND Temp.RS_MODEL_SID = RSC.RS_CONTRACT_SID
                 AND TEMP.SESSION_ID = '?'
                 AND TEMP.USERS_SID = '?'
       LEFT JOIN COMPANY_MASTER COMP
              ON CM.CONT_HOLD_COMPANY_MASTER_SID = COMP.COMPANY_MASTER_SID
WHERE  Isnull(CM.CONT_HOLD_COMPANY_MASTER_SID, '0') LIKE '?'
       AND CM.CONTRACT_NO LIKE '?'
       AND CM.CONTRACT_NAME LIKE '?'
       AND CM.CONTRACT_TYPE LIKE '?'
            ? ? ? ?   ) A;
        ]]>
        </query>    
    </entity>
    
    
    
    <entity id="Copy Contract-Check Record Insert">        
        <query>
        <![CDATA[
   INSERT INTO GCM_GLOBAL_DETAILS
            (SCREEN_NAME,
             SESSION_ID,
             USER_ID,
             CHECK_RECORD,
			 CONTRACT_MASTER_SID,
			 CFP_MODEL_SID,
			 IFP_MODEL_SID,
			 PS_MODEL_SID,
			 RS_MODEL_SID)
VALUES      ('COPY_CONTRACT',
             '${sessionId}',
             '${userId}',
             1,
			 '${contractSid}',
			'${cfpContractSid}',
			 '${ifpContractSid}',
			 '${psContractSid}',
			 '${rsContractSid}') 
        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract-Check Record Delete">        
        <query>
        <![CDATA[
DELETE FROM GCM_GLOBAL_DETAILS
WHERE  SCREEN_NAME = 'COPY_CONTRACT'
       AND SESSION_ID = '${sessionId}'
       AND USER_ID = '${userId}'
       AND CHECK_RECORD = 1
       AND CONTRACT_MASTER_SID = '${contractSid}'
       AND CFP_MODEL_SID = '${cfpContractSid}'
       AND IFP_MODEL_SID = '${ifpContractSid}'
       AND PS_MODEL_SID = '${psContractSid}'
       AND RS_MODEL_SID = '${rsContractSid}'
        ]]>
        </query>    
    </entity>
    
    
    
      
    <entity id="Copy Contract-Components Details CFP Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  cm.COMPANY_MASTER_SID,
  cm.COMPANY_ID,
  cm.COMPANY_NO,
  cm.COMPANY_NAME,
  COMPANY_TYPE.DESCRIPTION AS type,
  cm.COMPANY_START_DATE,
cm.COMPANY_END_DATE,
  Status.DESCRIPTION AS status,
  tradeclass.DESCRIPTION AS tradeclassvalue,
  getdate()
FROM COMPANY_MASTER cm
INNER JOIN HELPER_TABLE Status
  ON Status.HELPER_TABLE_SID = cm.COMPANY_STATUS
INNER JOIN HELPER_TABLE COMPANY_TYPE
  ON COMPANY_TYPE.HELPER_TABLE_SID = cm.COMPANY_TYPE
INNER JOIN COMPANY_TRADE_CLASS CT
  ON CT.COMPANY_MASTER_SID = cm.COMPANY_MASTER_SID
INNER JOIN HELPER_TABLE tradeclass
  ON tradeclass.HELPER_TABLE_SID = CT.COMPANY_TRADE_CLASS
LEFT JOIN HELPER_TABLE CATEGORY
  ON CATEGORY.HELPER_TABLE_SID = cm.COMPANY_CATEGORY
WHERE cm.INBOUND_STATUS <> 'D'
AND CT.INBOUND_STATUS <> 'D'
AND cm.COMPANY_ID LIKE '${companyId}'
AND cm.COMPANY_STATUS LIKE '${companyStatus}'
AND cm.Company_NO Like '${companyNo}'
AND cm.company_name Like '${companyName}'
AND isnull(cm.company_category , '0') like   '${companyCategory}'
AND cm.company_type Like '${companyType}'
AND CT.COMPANY_TRADE_CLASS Like '${tradeClass}' order by cm.COMPANY_MASTER_SID 
OFFSET ${start} ROWS FETCH NEXT ${offset} ROWS ONLY;

        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract-Components Details CFP Search COUNT">        
        <query>
        <![CDATA[
        SELECT count(*) FROM (
SELECT DISTINCT
  cm.COMPANY_MASTER_SID,
  cm.COMPANY_ID,
  cm.COMPANY_NO,
  cm.COMPANY_NAME,
  COMPANY_TYPE.DESCRIPTION AS type,
  cm.COMPANY_START_DATE,
cm.COMPANY_END_DATE,
  Status.DESCRIPTION AS status,
  tradeclass.DESCRIPTION AS tradeclassvalue,
  getdate() AS DATE1
FROM COMPANY_MASTER cm
INNER JOIN HELPER_TABLE Status
  ON Status.HELPER_TABLE_SID = cm.COMPANY_STATUS
INNER JOIN HELPER_TABLE COMPANY_TYPE
  ON COMPANY_TYPE.HELPER_TABLE_SID = cm.COMPANY_TYPE
INNER JOIN COMPANY_TRADE_CLASS CT
  ON CT.COMPANY_MASTER_SID = cm.COMPANY_MASTER_SID
INNER JOIN HELPER_TABLE tradeclass
  ON tradeclass.HELPER_TABLE_SID = CT.COMPANY_TRADE_CLASS
LEFT JOIN HELPER_TABLE CATEGORY
  ON CATEGORY.HELPER_TABLE_SID = cm.COMPANY_CATEGORY
WHERE cm.INBOUND_STATUS <> 'D'
AND CT.INBOUND_STATUS <> 'D'
AND cm.COMPANY_ID LIKE '${companyId}'
AND cm.COMPANY_STATUS LIKE '${companyStatus}'
AND cm.Company_NO Like '${companyNo}'
AND cm.company_name Like '${companyName}'
AND isnull(cm.company_category , '0') like   '${companyCategory}'
AND cm.company_type Like '${companyType}'
AND CT.COMPANY_TRADE_CLASS Like '${tradeClass}')A

        ]]>
        </query>    
    </entity>
    
    
    <entity id="Copy Contract-Components Details IFP Search COUNT">        
        <query>
        <![CDATA[
        SELECT count(*) FROM (
SELECT
  ITEM_ID,
  ITEM_NAME,
  ITEM_NO,
  status.DESCRIPTION AS status,
  itype.DESCRIPTION AS type,
  br.BRAND_NAME,
  HT.DESCRIPTION AS form,
  str.DESCRIPTION AS atrength,
  tc.DESCRIPTION AS tc,
  ITEM_START_DATE,
  ITEM_END_DATE,
  im.ITEM_MASTER_SID,
  getdate() AS DATE
FROM ITEM_MASTER im
JOIN HELPER_TABLE HT
  ON HT.HELPER_TABLE_SID = im.FORM
INNER JOIN HELPER_TABLE status
  ON status.HELPER_TABLE_SID = im.ITEM_STATUS
INNER JOIN HELPER_TABLE str
  ON str.HELPER_TABLE_SID = im.STRENGTH
LEFT JOIN HELPER_TABLE itype
  ON itype.HELPER_TABLE_SID = im.ITEM_TYPE
LEFT JOIN HELPER_TABLE tc
  ON tc.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER br
  ON br.BRAND_MASTER_SID = im.BRAND_MASTER_SID
WHERE 
 im.INBOUND_STATUS <> 'D'
AND br.INBOUND_STATUS <> 'D'
AND ITEM_ID LIKE '${itemId}'
AND item_name LIKE '${itemName}'
AND item_NO LIke '${itemNo}'
AND item_status LIKe '${itemStatus}'
AND isnull(item_type,'0') LIKe '${itemType}'
AND isnull(im.BRAND_MASTER_SID,'0') LIKe '${brand}'
AND im.FORM LIKe '${form}'
AND strength LIKe '${strength}'
AND isnull(im.THERAPEUTIC_CLASS,'0') Like '${therapyClass}' )A


        ]]>
        </query>    
    </entity>
    
    
    
    <entity id="Copy Contract-Components Details IFP Search">        
        <query>
        <![CDATA[
SELECT
  ITEM_ID,
  ITEM_NAME,
  ITEM_NO,
  status.DESCRIPTION AS status,
  itype.DESCRIPTION AS type,
  br.BRAND_NAME,
  HT.DESCRIPTION AS form,
  str.DESCRIPTION AS atrength,
  tc.DESCRIPTION AS tc,
  ITEM_START_DATE,
  ITEM_END_DATE,
  im.ITEM_MASTER_SID,
  getdate()
FROM ITEM_MASTER im
JOIN HELPER_TABLE HT
  ON HT.HELPER_TABLE_SID = im.FORM
INNER JOIN HELPER_TABLE status
  ON status.HELPER_TABLE_SID = im.ITEM_STATUS
INNER JOIN HELPER_TABLE str
  ON str.HELPER_TABLE_SID = im.STRENGTH
LEFT JOIN HELPER_TABLE itype
  ON itype.HELPER_TABLE_SID = im.ITEM_TYPE
LEFT JOIN HELPER_TABLE tc
  ON tc.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER br
  ON br.BRAND_MASTER_SID = im.BRAND_MASTER_SID
WHERE 
 im.INBOUND_STATUS <> 'D'
AND br.INBOUND_STATUS <> 'D'
AND ITEM_ID LIKE '${itemId}'
AND item_name LIKE '${itemName}'
AND item_NO LIke '${itemNo}'
AND item_status LIKe '${itemStatus}'
AND isnull(item_type,'0') LIKe '${itemType}'
AND isnull(im.BRAND_MASTER_SID,'0') LIKe '${brand}'
AND im.FORM LIKe '${form}'
AND strength LIKe '${strength}'
AND isnull(im.THERAPEUTIC_CLASS,'0') Like '${therapyClass}' order by im.ITEM_MASTER_SID  OFFSET ${start} ROWS FETCH NEXT ${offset} ROWS ONLY;


        ]]>
        </query>    
    </entity>
    
    
    
    
    
    
    <entity id="Copy Contract-Components Details RS Search">        
        <query>
        <![CDATA[
SELECT distinct
IFP_M.IFP_NO,
IFP_M.IFP_NAME,
Bm.BRAND_NAME,
CASE when h.HELPER_TABLE_SID=0 then '' else h.DESCRIPTION END  AS TYPE,
IM.ITEM_START_DATE,
IM.ITEM_END_DATE,
'formula Type',
RS_D.FORMULA_ID,
' ',
RPM.REBATE_PLAN_ID,
RPM.REBATE_PLAN_NAME,
RS_D.REBATE_AMOUNT,
RS_D.BUNDLE_NO,
IFP_M.IFP_MODEL_SID
FROM RS_MODEL RS_M
JOIN RS_DETAILS RS_D on RS_M.RS_MODEL_SID=RS_D.RS_MODEL_SID
JOIN ITEM_MASTER IM on IM.ITEM_MASTER_SID=RS_D.ITEM_MASTER_SID
JOIN BRAND_MASTER Bm on Bm.BRAND_MASTER_SID=im.BRAND_MASTER_SID
JOIN IFP_MODEL IFP_M on IFP_M.IFP_MODEL_SID=RS_D.IFP_MODEL_SID
JOIN HELPER_TABLE h ON h.HELPER_TABLE_SID = IFP_M.IFP_STATUS
LEFT JOIN REBATE_PLAN_MASTER RPM on RPM.REBATE_PLAN_MASTER_SID=RS_D.REBATE_PLAN_MASTER_SID
LEFT JOIN HELPER_TABLE h1 ON h1.HELPER_TABLE_SID = IFP_M.IFP_TYPE
WHERE IFP_M.IFP_ID LIKE '${ifpId}'
AND IFP_M.IFP_NO LIKE '${ifpNo}'
AND IFP_M.IFP_NAME LIKE '${ifpName}'
AND IFP_M.IFP_STATUS LIKE '${ifpStatus}'
AND isnull(IFP_M.IFP_TYPE,'0') LIKE '${ifpType}' order by IFP_M.IFP_MODEL_SID  OFFSET ${start} ROWS FETCH NEXT ${offset} ROWS ONLY;

        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract-Components Details PS Search">        
        <query>
        <![CDATA[
SELECT distinct
IFP_M.IFP_NO,
IFP_M.IFP_NAME,
Bm.BRAND_NAME,
h.DESCRIPTION AS STATUS,
IM.ITEM_START_DATE,
IM.ITEM_END_DATE,
CASE when h1.HELPER_TABLE_SID=0 then '' else h1.DESCRIPTION END AS TYPE,
PS_M.PS_NO,
PS_M.PS_NAME,
PS_Status.DESCRIPTION as PSStatus,
PS_D.PRICE_PROTECTION_START_DATE,
PS_D.PRICE_PROTECTION_END_DATE,
PT_Type.DESCRIPTION as TYPE,
PS_D.PRICE_TOLERANCE_INTERVAL,
PS_D.PRICE_TOLERANCE_FREQUENCY,
PS_D.PRICE_TOLERANCE_TYPE,
PS_D.MAX_INCREMENTAL_CHANGE,
PS_D.PRICE_TOLERANCE,
'0' ,
PS_D.RESET_ELIGIBLE,
ResetTy.DESCRIPTION as ResetTy,
PS_D.RESET_DATE,
R_IN.DESCRIPTION as R_IN,
R_FR.DESCRIPTION as R_FR,
getdate() as attachedDate,
IFP_M.IFP_MODEL_SID
FROM 
 PS_MODEL PS_M 
JOIN PS_DETAILS PS_D on PS_D.PS_MODEL_SID=PS_M.PS_MODEL_SID
JOIN IFP_MODEL IFP_M on IFP_M.IFP_MODEL_SID=PS_D.IFP_MODEL_SID
JOIN ITEM_MASTER IM on IM.ITEM_MASTER_SID=PS_D.ITEM_MASTER_SID
JOIN BRAND_MASTER BM on BM.BRAND_MASTER_SID=IM.BRAND_MASTER_SID
JOIN HELPER_TABLE h ON h.HELPER_TABLE_SID = IFP_M.IFP_STATUS
LEFT JOIN HELPER_TABLE h1 ON h1.HELPER_TABLE_SID = IFP_M.IFP_TYPE
Left JOIN HELPER_TABLE PS_Status ON PS_Status.HELPER_TABLE_SID = PS_M.PS_STATUS
Left JOIN HELPER_TABLE PT_Type ON PT_Type.HELPER_TABLE_SID = PS_M.PS_TYPE
Left JOIN HELPER_TABLE ResetTy ON ResetTy.HELPER_TABLE_SID = PS_D.RESET_TYPE
Left JOIN HELPER_TABLE R_IN ON R_IN.HELPER_TABLE_SID = PS_D.RESET_INTERVAL
Left JOIN HELPER_TABLE R_FR ON R_FR.HELPER_TABLE_SID = PS_D.RESET_FREQUENCY
WHERE IFP_M.IFP_ID LIKE '?'
AND IFP_M.IFP_NO LIKE '?'
AND IFP_M.IFP_NAME LIKE '?'
AND IFP_M.IFP_STATUS LIKE '?'
AND isnull(IFP_M.IFP_TYPE,'0') LIKE '?' order by IFP_M.IFP_MODEL_SID  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;

        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract-Components Details PS Search COUNT">        
        <query>
        <![CDATA[
        SELECT distinct count(*) FROM (
SELECT distinct
IFP_M.IFP_NO,
IFP_M.IFP_NAME,
Bm.BRAND_NAME,
h.DESCRIPTION AS STATUS,
IM.ITEM_START_DATE,
IM.ITEM_END_DATE,
CASE when h1.HELPER_TABLE_SID=0 then '' else h1.DESCRIPTION END AS TYPE,
PS_M.PS_NO,
PS_M.PS_NAME,
PS_Status.DESCRIPTION as PSStatus,
PS_D.PRICE_PROTECTION_START_DATE,
PS_D.PRICE_PROTECTION_END_DATE,
PT_Type.DESCRIPTION as PS_TYPE,
PS_D.PRICE_TOLERANCE_INTERVAL,
PS_D.PRICE_TOLERANCE_FREQUENCY,
PS_D.PRICE_TOLERANCE_TYPE,
PS_D.MAX_INCREMENTAL_CHANGE,
PS_D.PRICE_TOLERANCE,
'0' as ZE,
PS_D.RESET_ELIGIBLE,
ResetTy.DESCRIPTION as ResetTy,
PS_D.RESET_DATE,
R_IN.DESCRIPTION as R_IN,
R_FR.DESCRIPTION as R_FR,
getdate() as attachedDate,
IFP_M.IFP_MODEL_SID
FROM 
 PS_MODEL PS_M 
JOIN PS_DETAILS PS_D on PS_D.PS_MODEL_SID=PS_M.PS_MODEL_SID
JOIN IFP_MODEL IFP_M on IFP_M.IFP_MODEL_SID=PS_D.IFP_MODEL_SID
JOIN ITEM_MASTER IM on IM.ITEM_MASTER_SID=PS_D.ITEM_MASTER_SID
JOIN BRAND_MASTER BM on BM.BRAND_MASTER_SID=IM.BRAND_MASTER_SID
JOIN HELPER_TABLE h ON h.HELPER_TABLE_SID = IFP_M.IFP_STATUS
LEFT JOIN HELPER_TABLE h1 ON h1.HELPER_TABLE_SID = IFP_M.IFP_TYPE
Left JOIN HELPER_TABLE PS_Status ON PS_Status.HELPER_TABLE_SID = PS_M.PS_STATUS
Left JOIN HELPER_TABLE PT_Type ON PT_Type.HELPER_TABLE_SID = PS_M.PS_TYPE
Left JOIN HELPER_TABLE ResetTy ON ResetTy.HELPER_TABLE_SID = PS_D.RESET_TYPE
Left JOIN HELPER_TABLE R_IN ON R_IN.HELPER_TABLE_SID = PS_D.RESET_INTERVAL
Left JOIN HELPER_TABLE R_FR ON R_FR.HELPER_TABLE_SID = PS_D.RESET_FREQUENCY
 WHERE IFP_M.IFP_ID LIKE '?'
AND IFP_M.IFP_NO LIKE '?'
AND IFP_M.IFP_NAME LIKE '?'
AND IFP_M.IFP_STATUS LIKE '?'
AND isnull(IFP_M.IFP_TYPE,'0') LIKE '?')A;

        ]]>
        </query>    
    </entity>
    
    
    <entity id="Copy Contract-Components Details RS Search COUNT">        
        <query>
        <![CDATA[
        SELECT distinct count(*) FROM (
SELECT distinct
IFP_M.IFP_NO,
IFP_M.IFP_NAME,
Bm.BRAND_NAME,
CASE when h.HELPER_TABLE_SID=0 then '' else h.DESCRIPTION END  AS TYPE,
IM.ITEM_START_DATE,
IM.ITEM_END_DATE,
'formula Type' AS forMU,
RS_D.FORMULA_ID,
' ' AS EMP,
RPM.REBATE_PLAN_ID,
RPM.REBATE_PLAN_NAME,
RS_D.REBATE_AMOUNT,
RS_D.BUNDLE_NO,
IFP_M.IFP_MODEL_SID
FROM RS_MODEL RS_M
JOIN RS_DETAILS RS_D on RS_M.RS_MODEL_SID=RS_D.RS_MODEL_SID
JOIN ITEM_MASTER IM on IM.ITEM_MASTER_SID=RS_D.ITEM_MASTER_SID
JOIN BRAND_MASTER Bm on Bm.BRAND_MASTER_SID=im.BRAND_MASTER_SID
JOIN IFP_MODEL IFP_M on IFP_M.IFP_MODEL_SID=RS_D.IFP_MODEL_SID
JOIN HELPER_TABLE h ON h.HELPER_TABLE_SID = IFP_M.IFP_STATUS
LEFT JOIN REBATE_PLAN_MASTER RPM on RPM.REBATE_PLAN_MASTER_SID=RS_D.REBATE_PLAN_MASTER_SID
LEFT JOIN HELPER_TABLE h1 ON h1.HELPER_TABLE_SID = IFP_M.IFP_TYPE
WHERE IFP_M.IFP_ID LIKE '${ifpId}'
AND IFP_M.IFP_NO LIKE '${ifpNo}'
AND IFP_M.IFP_NAME LIKE '${ifpName}'
AND IFP_M.IFP_STATUS LIKE '${ifpStatus}'
AND isnull(IFP_M.IFP_TYPE,'0') LIKE '${ifpType}')A

        ]]>
        </query>    
    </entity>
    
    
    <entity id="Copy Contract- Existing Components Details CFP Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  cfp.CFP_ID,
  cfp.CFP_NO,
  cfp.CFP_NAME,
  cfp.CFP_TYPE,
  cfp.CFP_STATUS,
  cfp.CFP_START_DATE,
  cfp.CFP_END_DATE,
  cfp.CFP_TRADE_CLASS,
  cfp.CFP_CATEGORY,
  cfp.CFP_DESIGNATION,
  cfp.PARENT_CFP_NAME,
  parenCfp.CFP_ID AS PARENT_ID,
  htype.DESCRIPTION AS ctype,
  hstatus.DESCRIPTION AS cstatus,
  htrade.DESCRIPTION AS trade,
  hcategory.DESCRIPTION AS category,
  cfp.CFP_MODEL_SID
FROM CFP_MODEL cfp
LEFT JOIN CFP_MODEL parenCfp
  ON parenCfp.CFP_MODEL_SID = cfp.PARENT_CFP_ID
LEFT JOIN HELPER_TABLE htrade
  ON htrade.HELPER_TABLE_SID = cfp.CFP_TRADE_CLASS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = cfp.CFP_CATEGORY
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = cfp.CFP_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = cfp.CFP_STATUS
JOIN CFP_DETAILS cfd
  ON cfp.CFP_MODEL_SID = cfd.CFP_MODEL_SID
WHERE cfp.INBOUND_STATUS <> 'D'
AND cfp.CFP_ID LIKE '?' 
AND cfp.CFP_NO LIKE '?' 
AND cfp.CFP_NAME LIKE '?' 
AND cfp.CFP_TYPE LIKE '?' ?
AND cfp.CFP_STATUS LIKE '?' order by cfp.CFP_MODEL_sid  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;

        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract- Existing Components Details CFP Search COUNT">        
        <query>
        <![CDATA[
SELECT  count( cfp.CFP_MODEL_sid)
  
FROM CFP_MODEL cfp
LEFT JOIN CFP_MODEL parenCfp
  ON parenCfp.CFP_MODEL_SID = cfp.PARENT_CFP_ID
LEFT JOIN HELPER_TABLE htrade
  ON htrade.HELPER_TABLE_SID = cfp.CFP_TRADE_CLASS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = cfp.CFP_CATEGORY
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = cfp.CFP_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = cfp.CFP_STATUS
JOIN CFP_DETAILS cfd
  ON cfp.CFP_MODEL_SID = cfd.CFP_MODEL_SID
WHERE cfp.INBOUND_STATUS <> 'D'
AND cfp.CFP_ID LIKE '?' 
AND cfp.CFP_NO LIKE '?' 
AND cfp.CFP_NAME LIKE '?' 
AND cfp.CFP_TYPE LIKE '?' ?
AND cfp.CFP_STATUS LIKE '?' 

        ]]>
        </query>    
    </entity>
    
    
    
    <entity id="Copy Contract- Existing Components Details IFP Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  ifp.IFP_MODEL_SID,
  ifp.IFP_ID,
  ifp.IFP_NO,
  ifp.IFP_NAME,
  ifp.IFP_STATUS,
  ifp.IFP_TYPE,
  ifp.IFP_CATEGORY,
  ifp.IFP_START_DATE,
  ifp.IFP_END_DATE,
  ifp.IFP_DESIGNATION,
  ifp.PARENT_IFP_ID,
  ifp.PARENT_IFP_NAME,
  ifp.TOTAL_DOLLAR_COMMITMENT,
  ifp.COMMITMENT_PERIOD,
  ifp.TOTAL_VOLUME_COMMITMENT,
  ifp.TOTAL_MARKETSHARE_COMMITMENT,
  ifp.CREATED_BY,
  ifp.CREATED_DATE,
  htype.DESCRIPTION AS itype,
  hstatus.DESCRIPTION AS istatus,
  hcategory.DESCRIPTION AS icategory,
  hdegin.DESCRIPTION AS idesign,
  ifp.RECORD_LOCK_STATUS
FROM IFP_MODEL ifp
JOIN IFP_DETAILS ifd
  ON ifp.IFP_MODEL_SID = ifd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON ifd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ifp.IFP_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ifp.IFP_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ifp.IFP_CATEGORY
LEFT JOIN HELPER_TABLE hdegin
  ON hdegin.HELPER_TABLE_SID = ifp.IFP_DESIGNATION
WHERE ifp.INBOUND_STATUS <> 'D'
AND ifp.IFP_ID LIKE '?' 
 and  ifp.IFP_NO like'?' 
and  ifp.IFP_NAME like '?' 
 and  ifp.IFP_TYPE LIKE '?' ?
and  ifp.IFP_STATUS LIKE '?' order by ifp.IFP_MODEL_SID  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;

        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Details IFP Search COUNT">        
        <query>
        <![CDATA[
SELECT 
 COUNT (ifp.IFP_MODEL_SID)
FROM IFP_MODEL ifp
JOIN IFP_DETAILS ifd
  ON ifp.IFP_MODEL_SID = ifd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON ifd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ifp.IFP_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ifp.IFP_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ifp.IFP_CATEGORY
LEFT JOIN HELPER_TABLE hdegin
  ON hdegin.HELPER_TABLE_SID = ifp.IFP_DESIGNATION
WHERE ifp.INBOUND_STATUS <> 'D'
AND ifp.IFP_ID LIKE '?' 
 and  ifp.IFP_NO like'?' 
and  ifp.IFP_NAME like '?' 
and   ifp.IFP_TYPE LIKE '?' ?
and  ifp.IFP_STATUS LIKE '?'
     

        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Details PS Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  ps.PS_MODEL_SID,
  ps.PS_ID,
  ps.PS_NO,
  ps.PS_NAME,
  ps.PS_TYPE,
  ps.PS_STATUS,
  ps.PS_CATEGORY,
  ps.PS_START_DATE,
  ps.PS_END_DATE,
  ps.PS_DESIGNATION,
  ps.PARENT_PS_ID,
  ps.PARENT_PS_NAME,
  ps.PS_TRADE_CLASS,
  htype.DESCRIPTION AS type,
  hstatus.DESCRIPTION AS status,
  hcategory.DESCRIPTION AS category,
  hdesign.DESCRIPTION AS designation,
  htrade.DESCRIPTION AS trade,
  ps.RECORD_LOCK_STATUS,
  ifp.IFP_NAME,
  ifp.IFP_MODEL_SID
FROM PS_MODEL ps
JOIN PS_DETAILS psd
  ON ps.PS_MODEL_SID = psd.PS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = psd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON psd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ps.PS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ps.PS_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ps.PS_CATEGORY
LEFT JOIN HELPER_TABLE hdesign
  ON hdesign.HELPER_TABLE_SID = ps.PS_DESIGNATION
LEFT JOIN HELPER_TABLE htrade
  ON htrade.HELPER_TABLE_SID = ps.PS_TRADE_CLASS
WHERE ps.INBOUND_STATUS <> 'D'
AND ps.PS_ID LIKE '?' 
and  ps.PS_NO like '?' 
and  ps.PS_NAME like'?' 
and  ps.PS_TYPE LIKE '?' ?
and  ps.PS_STATUS LIKE '?'  order by ps.PS_MODEL_SID  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Details PS Search COUNT">        
        <query>
        <![CDATA[
SELECT  count(
  ps.PS_MODEL_SID)

FROM PS_MODEL ps
JOIN PS_DETAILS psd
  ON ps.PS_MODEL_SID = psd.PS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = psd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON psd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ps.PS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ps.PS_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ps.PS_CATEGORY
LEFT JOIN HELPER_TABLE hdesign
  ON hdesign.HELPER_TABLE_SID = ps.PS_DESIGNATION
LEFT JOIN HELPER_TABLE htrade
  ON htrade.HELPER_TABLE_SID = ps.PS_TRADE_CLASS
WHERE ps.INBOUND_STATUS <> 'D'
AND ps.PS_ID LIKE '?' 
and  ps.PS_NO like '?' 
and  ps.PS_NAME like '?' 
and  ps.PS_TYPE LIKE '?' ?
and  ps.PS_STATUS LIKE '?' 
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Details RS Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  rs.RS_MODEL_SID,
  rs.RS_ID,
  rs.RS_NO,
  rs.RS_NAME,
  rs.RS_STATUS,
  rs.RS_TYPE,
  rs.REBATE_PROGRAM_TYPE,
  htype.DESCRIPTION AS rtype,
  hstatus.DESCRIPTION AS rstatus,
  hpstatus.DESCRIPTION AS rptype,
  hcategory.DESCRIPTION AS rscategory,
  rs.RS_START_DATE,
  rs.RS_END_DATE,
  hdesignation.DESCRIPTION AS rsdesignation,
  rs.PARENT_RS_ID,
  rs.PARENT_RS_NAME,
  rs.RECORD_LOCK_STATUS,
  ifp.IFP_NAME
FROM RS_MODEL rs
LEFT JOIN RS_DETAILS rsd
  ON rsd.RS_MODEL_SID = rs.RS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = rsd.IFP_MODEL_SID
LEFT JOIN HelPER_TABLE htype
  ON htype.HELPER_TABLE_SID = rs.RS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = rs.RS_STATUS
LEFT JOIN HELPER_TABLE hpstatus
  ON hpstatus.HELPER_TABLE_SID = rs.REBATE_PROGRAM_TYPE
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = rs.RS_CATEGORY
LEFT JOIN HELPER_TABLE hdesignation
  ON hdesignation.HELPER_TABLE_SID = rs.RS_DESIGNATION
WHERE rs.INBOUND_STATUS != 'D'
 and  rs.RS_ID like '?' 
and  rs.RS_NO like '?'
and  rs.RS_NAME like '?' 
and  rs.RS_TYPE LIKE '?' ?
and  rs.RS_STATUS LIKE '?' order by rs.RS_MODEL_SID  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Details RS Search COUNT">        
        <query>
        <![CDATA[
SELECT COUNT (*) FROM (SELECT 
  DISTINCT rs.RS_MODEL_SID,ifp.IFP_NAME
FROM RS_MODEL rs
LEFT JOIN RS_DETAILS rsd
  ON rsd.RS_MODEL_SID = rs.RS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = rsd.IFP_MODEL_SID
LEFT JOIN HelPER_TABLE htype
  ON htype.HELPER_TABLE_SID = rs.RS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = rs.RS_STATUS
LEFT JOIN HELPER_TABLE hpstatus
  ON hpstatus.HELPER_TABLE_SID = rs.REBATE_PROGRAM_TYPE
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = rs.RS_CATEGORY
LEFT JOIN HELPER_TABLE hdesignation
  ON hdesignation.HELPER_TABLE_SID = rs.RS_DESIGNATION
WHERE rs.INBOUND_STATUS != 'D'
 and  rs.RS_ID like '?' 
and  rs.RS_NO like '?' 
and  rs.RS_NAME like '?' 
and  rs.RS_TYPE LIKE '?' ?
and  rs.RS_STATUS LIKE '?') X
        ]]>
        </query>    
    </entity>
    
    
    
    
    <entity id="Copy Contract- Existing Components Data Company Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  cm.COMPANY_ID,
  cm.COMPANY_NO,
  cm.COMPANY_NAME,
  cm.COMPANY_START_DATE,
  cm.COMPANY_END_DATE,
  hstatus.DESCRIPTION AS cstatus,
  tradeclass.DESCRIPTION as tradeclass,
  GETDATE()
FROM CFP_MODEL cfp
JOIN CFP_DETAILS cfd
  ON cfp.CFP_MODEL_SID = cfd.CFP_MODEL_SID
JOIN COMPANY_MASTER cm
  ON cfd.COMPANY_MASTER_SID = cm.COMPANY_MASTER_SID
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = cm.COMPANY_STATUS
INNER JOIN COMPANY_TRADE_CLASS CT
  ON CT.COMPANY_MASTER_SID = cm.COMPANY_MASTER_SID
INNER JOIN HELPER_TABLE tradeclass
  ON tradeclass.HELPER_TABLE_SID = CT.COMPANY_TRADE_CLASS
WHERE cfp.INBOUND_STATUS <> 'D'
AND cfd.CFP_MODEL_SID = '?' order by cm.COMPANY_ID  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract- Existing Components Data Company Search COUNT">        
        <query>
        <![CDATA[
SELECT count(cm.company_master_sid)
FROM CFP_MODEL cfp
JOIN CFP_DETAILS cfd
  ON cfp.CFP_MODEL_SID = cfd.CFP_MODEL_SID
JOIN COMPANY_MASTER cm
  ON cfd.COMPANY_MASTER_SID = cm.COMPANY_MASTER_SID
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = cm.COMPANY_STATUS
INNER JOIN COMPANY_TRADE_CLASS CT
  ON CT.COMPANY_MASTER_SID = cm.COMPANY_MASTER_SID
INNER JOIN HELPER_TABLE tradeclass
  ON tradeclass.HELPER_TABLE_SID = CT.COMPANY_TRADE_CLASS
WHERE cfp.INBOUND_STATUS <> 'D'
AND cfd.CFP_MODEL_SID = '?'
        ]]>
        </query>    
    </entity>
    
    
    
    <entity id="Copy Contract- Existing Components Data item Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  im.ITEM_NO,
  im.ITEM_NAME,
  theclass.DESCRIPTION AS tclass,
  bm.BRAND_NAME,
  im.ITEM_START_DATE,
  im.ITEM_END_DATE,
  itemsatus.DESCRIPTION,
  GETDATE()
FROM IFP_MODEL ifp
JOIN IFP_DETAILS ifd
  ON ifp.IFP_MODEL_SID = ifd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON ifd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ifp.IFP_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ifp.IFP_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ifp.IFP_CATEGORY
LEFT JOIN HELPER_TABLE hdegin
  ON hdegin.HELPER_TABLE_SID = ifp.IFP_DESIGNATION
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE itemsatus
  ON itemsatus.HELPER_TABLE_SID = im.ITEM_STATUS
WHERE ifp.INBOUND_STATUS <> 'D'
AND ifd.IFP_MODEL_SID = '?' order by im.ITEM_NO  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract- Existing Components Data item Search COUNT">        
        <query>
        <![CDATA[
SELECT count (Distinct im.item_master_sid)
FROM IFP_MODEL ifp
JOIN IFP_DETAILS ifd
  ON ifp.IFP_MODEL_SID = ifd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON ifd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ifp.IFP_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ifp.IFP_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ifp.IFP_CATEGORY
LEFT JOIN HELPER_TABLE hdegin
  ON hdegin.HELPER_TABLE_SID = ifp.IFP_DESIGNATION
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE itemsatus
  ON itemsatus.HELPER_TABLE_SID = im.ITEM_STATUS
WHERE ifp.INBOUND_STATUS <> 'D'
AND ifd.IFP_MODEL_SID = '?'
        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract- Existing Components Data PS Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  im.ITEM_NO,
  im.ITEM_NAME,
  theclass.DESCRIPTION AS tclass,
  bm.BRAND_NAME,
  im.ITEM_START_DATE,
  im.ITEM_END_DATE,
  itemsatus.DESCRIPTION,
  IPQ.ITEM_PRICING_QUALIFIER_NAME,
  psd.PRICE_PROTECTION_START_DATE,
 ps.PS_NO,
 ps.PS_NAME,
 PS_Status.DESCRIPTION ,
 psd.PRICE_PROTECTION_END_DATE,
 PT_Type.DESCRIPTION,
  psd.PRICE_TOLERANCE_INTERVAL,
  psd.PRICE_TOLERANCE_FREQUENCY,
  psd.PRICE_TOLERANCE_TYPE,
  psd.MAX_INCREMENTAL_CHANGE,
  psd.PRICE_TOLERANCE,
 '0',
 psd.RESET_ELIGIBLE,
 ResetTy.DESCRIPTION as ResetTy,
 psd.RESET_DATE,
 R_IN.DESCRIPTION as R_IN,
 R_FR.DESCRIPTION as R_FR,
 getdate() as attachedDate
FROM PS_MODEL ps
JOIN PS_DETAILS psd
  ON ps.PS_MODEL_SID = psd.PS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = psd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON psd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ps.PS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ps.PS_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ps.PS_CATEGORY
LEFT JOIN HELPER_TABLE hdesign
  ON hdesign.HELPER_TABLE_SID = ps.PS_DESIGNATION
LEFT JOIN HELPER_TABLE htrade
  ON htrade.HELPER_TABLE_SID = ps.PS_TRADE_CLASS
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE itemsatus
  ON itemsatus.HELPER_TABLE_SID = im.ITEM_STATUS
JOIN ITEM_PRICING_QUALIFIER IPQ
  ON IPQ.ITEM_PRICING_QUALIFIER_SID = psd.ITEM_PRICING_QUALIFIER_SID
Left JOIN HELPER_TABLE PS_Status ON  PS_Status.HELPER_TABLE_SID = ps.PS_STATUS
Left JOIN HELPER_TABLE PT_Type ON PT_Type.HELPER_TABLE_SID = ps.PS_TYPE
Left JOIN HELPER_TABLE ResetTy ON ResetTy.HELPER_TABLE_SID = psd.RESET_TYPE
Left JOIN HELPER_TABLE R_IN ON R_IN.HELPER_TABLE_SID = psd.RESET_INTERVAL
Left JOIN HELPER_TABLE R_FR ON R_FR.HELPER_TABLE_SID = psd.RESET_FREQUENCY
WHERE ps.INBOUND_STATUS <> 'D'
AND psd.PS_MODEL_SID = '?' order by im.ITEM_NO  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Data PS Search COUNT">        
        <query>
        <![CDATA[
SELECT count(DISTINCT im.item_master_sid)
  
FROM PS_MODEL ps
JOIN PS_DETAILS psd
  ON ps.PS_MODEL_SID = psd.PS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = psd.IFP_MODEL_SID
JOIN ITEM_MASTER im
  ON psd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
LEFT JOIN HELPER_TABLE htype
  ON htype.HELPER_TABLE_SID = ps.PS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = ps.PS_STATUS
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = ps.PS_CATEGORY
LEFT JOIN HELPER_TABLE hdesign
  ON hdesign.HELPER_TABLE_SID = ps.PS_DESIGNATION
LEFT JOIN HELPER_TABLE htrade
  ON htrade.HELPER_TABLE_SID = ps.PS_TRADE_CLASS
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE itemsatus
  ON itemsatus.HELPER_TABLE_SID = im.ITEM_STATUS
JOIN ITEM_PRICING_QUALIFIER IPQ
  ON IPQ.ITEM_PRICING_QUALIFIER_SID = psd.ITEM_PRICING_QUALIFIER_SID
WHERE ps.INBOUND_STATUS <> 'D'
AND psd.PS_MODEL_SID = '?';
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Data RS Search">        
        <query>
        <![CDATA[
SELECT DISTINCT
  im.ITEM_NO,
  im.ITEM_NAME,
  theclass.DESCRIPTION AS tclass,
  bm.BRAND_NAME,
  im.ITEM_START_DATE,
  im.ITEM_END_DATE,
  itemsatus.DESCRIPTION,
  rsd.FORMULA_ID,
  RPM.REBATE_PLAN_NAME,
  rsd.FORMULA_TYPE,
  ' ',
  RPM.REBATE_PLAN_ID,
  rsd.REBATE_AMOUNT,
  rsd.BUNDLE_NO
  FROM RS_MODEL rs
LEFT JOIN RS_DETAILS rsd
  ON rsd.RS_MODEL_SID = rs.RS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = rsd.IFP_MODEL_SID
LEFT JOIN ITEM_MASTER im
  ON im.ITEM_MASTER_SID = rsd.ITEM_MASTER_SID
LEFT JOIN HelPER_TABLE htype
  ON htype.HELPER_TABLE_SID = rs.RS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = rs.RS_STATUS
LEFT JOIN HELPER_TABLE hpstatus
  ON hpstatus.HELPER_TABLE_SID = rs.REBATE_PROGRAM_TYPE
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = rs.RS_CATEGORY
LEFT JOIN HELPER_TABLE hdesignation
  ON hdesignation.HELPER_TABLE_SID = rs.RS_DESIGNATION
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE itemsatus
  ON itemsatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN REBATE_PLAN_MASTER RPM
  ON RPM.REBATE_PLAN_MASTER_SID = rsd.REBATE_PLAN_MASTER_SID
WHERE rs.INBOUND_STATUS != 'D'
AND rs.RS_MODEL_SID = '?' order by im.ITEM_NO  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Components Data RS Search COUNT">        
        <query>
        <![CDATA[
SELECT COUNT(DISTINCT im.item_master_sid)
 
FROM RS_MODEL rs
LEFT JOIN RS_DETAILS rsd
  ON rsd.RS_MODEL_SID = rs.RS_MODEL_SID
JOIN IFP_MODEL ifp
  ON ifp.IFP_MODEL_SID = rsd.IFP_MODEL_SID
LEFT JOIN ITEM_MASTER im
  ON im.ITEM_MASTER_SID = rsd.ITEM_MASTER_SID
LEFT JOIN HelPER_TABLE htype
  ON htype.HELPER_TABLE_SID = rs.RS_TYPE
LEFT JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = rs.RS_STATUS
LEFT JOIN HELPER_TABLE hpstatus
  ON hpstatus.HELPER_TABLE_SID = rs.REBATE_PROGRAM_TYPE
LEFT JOIN HELPER_TABLE hcategory
  ON hcategory.HELPER_TABLE_SID = rs.RS_CATEGORY
LEFT JOIN HELPER_TABLE hdesignation
  ON hdesignation.HELPER_TABLE_SID = rs.RS_DESIGNATION
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE itemsatus
  ON itemsatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN REBATE_PLAN_MASTER RPM
  ON RPM.REBATE_PLAN_MASTER_SID = rsd.REBATE_PLAN_MASTER_SID
WHERE rs.INBOUND_STATUS != 'D'
AND rs.RS_MODEL_SID = '?' 
        ]]>
        </query>    
    </entity>
    
    
    <entity id="Copy Contract- Existing Leve Data CFP Search">        
        <query>
        <![CDATA[
SELECT DIstinct
  COMPANY_NO,
  COMPANY_NAME,
  hstatus.DESCRIPTION,
  cm.COMPANY_START_DATE,
  cm.COMPANY_END_DATE
FROM COMPANY_MASTER cm
JOIN CFP_DETAILS cd
  ON cm.COMPANY_MASTER_SID = cd.COMPANY_MASTER_SID
  AND cd.CFP_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = cm.COMPANY_STATUS order by COMPANY_NO  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract- Existing Leve Data CFP Search COUNT">        
        <query>
        <![CDATA[
SELECT count(
  cm.company_master_sid)
FROM COMPANY_MASTER cm
JOIN CFP_DETAILS cd
  ON cm.COMPANY_MASTER_SID = cd.COMPANY_MASTER_SID
  AND cd.CFP_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = cm.COMPANY_STATUS
        ]]>
        </query>    
    </entity>
    
    
    <entity id="Copy Contract- Existing Leve Data IFP Search">        
        <query>
        <![CDATA[
SELECT
  ITEM_NO,
  ITEM_NAME,
  theclass.DESCRIPTION,
  bm.BRAND_NAME,
  hstatus.DESCRIPTION AS status,
  ITEM_START_DATE,
  ITEM_END_DATE
FROM ITEM_MASTER im
JOIN IFP_DETAILS id
  ON im.ITEM_MASTER_SID = id.ITEM_MASTER_SID
  AND id.IFP_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS order by ITEM_NO  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Leve Data IFP Search COUNT">        
        <query>
        <![CDATA[
SELECT count(im.item_master_sid)
 
FROM ITEM_MASTER im
JOIN IFP_DETAILS id
  ON im.ITEM_MASTER_SID = id.ITEM_MASTER_SID
  AND id.IFP_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
        ]]>
        </query>    
    </entity>
    
    <entity id="Copy Contract- Existing Leve Data PS Search">        
        <query>
        <![CDATA[
SELECT
  im.ITEM_NO,
  im.ITEM_NAME,
  theclass.DESCRIPTION,
  bm.BRAND_NAME,
  hstatus.DESCRIPTION AS status,
  im.ITEM_START_DATE,
  im.ITEM_END_DATE,
  pd.PRICE_TOLERANCE_TYPE,
  pd.PRICE_PROTECTION_START_DATE
FROM ITEM_MASTER im
JOIN PS_DETAILS pd
  ON im.ITEM_MASTER_SID = pd.ITEM_MASTER_SID
  AND pd.PS_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS order by ITEM_NO  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Leve Data PS Search COUNT">        
        <query>
        <![CDATA[
SELECT
  count(im.item_master_sid)
FROM ITEM_MASTER im
JOIN PS_DETAILS pd
  ON im.ITEM_MASTER_SID = pd.ITEM_MASTER_SID
  AND pd.PS_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Leve Data RS Search">        
        <query>
        <![CDATA[
SELECT
  im.ITEM_NO,
  im.ITEM_NAME,
  theclass.DESCRIPTION,
  bm.BRAND_NAME,
  hstatus.DESCRIPTION AS status,
  im.ITEM_START_DATE,
  im.ITEM_END_DATE,
  rd.FORMULA_ID
FROM dbo.ITEM_MASTER im
JOIN dbo.RS_DETAILS rd
  ON im.ITEM_MASTER_SID = rd.ITEM_MASTER_SID
  AND rd.RS_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS order by ITEM_NO  OFFSET ? ROWS FETCH NEXT ? ROWS ONLY;
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Existing Leve Data RS Search COUNT">        
        <query>
        <![CDATA[
SELECT
   count(im.item_master_sid)
FROM dbo.ITEM_MASTER im
JOIN dbo.RS_DETAILS rd
  ON im.ITEM_MASTER_SID = rd.ITEM_MASTER_SID
  AND rd.RS_MODEL_SID = '?'
JOIN HELPER_TABLE hstatus
  ON hstatus.HELPER_TABLE_SID = im.ITEM_STATUS
LEFT JOIN BRAND_MASTER bm
  ON bm.BRAND_MASTER_SID = im.BRAND_MASTER_SID
LEFT JOIN HELPER_TABLE theclass
  ON theclass.HELPER_TABLE_SID = im.THERAPEUTIC_CLASS
        ]]>
        </query>    
    </entity>
    <entity id="Copy Contract-copy Contract selected contracts">        
        <query>
        <![CDATA[
             SELECT DISTINCT CM.CONT_HOLD_COMPANY_MASTER_SID,
                COMP.COMPANY_NAME,
                CM.CONTRACT_NAME,
                CM.CONTRACT_NO,
                H1.DESCRIPTION AS MARKET_TYPE,
                CM.START_DATE,
                CM.END_DATE,
                CCT.CFP_NAME,
                IFP_CONT.IFP_NAME,
                PSC.PS_NAME,
                RSC.RS_NAME,
                CM.CONTRACT_MASTER_SID,
                CCT.CFP_CONTRACT_SID,
                IFP_CONT.IFP_CONTRACT_SID,
                PSC.PS_CONTRACT_SID,
                RSC.RS_CONTRACT_SID,
                TEMP.CHECK_RECORD
FROM   CONTRACT_ALIAS_MASTER CAM
       JOIN CONTRACT_MASTER CM
         ON CAM.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID
       INNER JOIN CFP_CONTRACT CCT
               ON CM.CONTRACT_MASTER_SID = CCT.CONTRACT_MASTER_SID
                  AND CM.INBOUND_STATUS <> 'D'
                  AND CCT.INBOUND_STATUS <> 'D'
       LEFT JOIN CFP_CONTRACT_DETAILS CCD
              ON CCT.CFP_CONTRACT_SID = CCD.CFP_CONTRACT_SID
       LEFT JOIN COMPANY_MASTER CMP_MAS
              ON CMP_MAS.COMPANY_MASTER_SID = CCD.COMPANY_MASTER_SID
                 AND CMP_MAS.INBOUND_STATUS <> 'D'
       LEFT JOIN IFP_CONTRACT IFP_CONT
              ON IFP_CONT.CFP_CONTRACT_SID = CCT.CFP_CONTRACT_SID
                 AND IFP_CONT.INBOUND_STATUS <> 'D'
                 AND CM.CONTRACT_MASTER_SID = IFP_CONT.CONTRACT_MASTER_SID
       LEFT JOIN IFP_CONTRACT_DETAILS ICD
              ON IFP_CONT.IFP_CONTRACT_SID = ICD.IFP_CONTRACT_SID
       LEFT JOIN ITEM_MASTER IM
              ON IM.ITEM_MASTER_SID = ICD.ITEM_MASTER_SID
                 AND IM.INBOUND_STATUS <> 'D'
       LEFT JOIN PS_CONTRACT PSC
              ON PSC.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID
                 AND PSC.INBOUND_STATUS <> 'D'
       LEFT JOIN PS_CONTRACT_DETAILS PSCD
              ON PSC.PS_CONTRACT_SID = PSCD.PS_CONTRACT_SID
                 AND PSCD.ITEM_MASTER_SID = ICD.ITEM_MASTER_SID
       LEFT JOIN RS_CONTRACT RSC
              ON RSC.CONTRACT_MASTER_SID = CM.CONTRACT_MASTER_SID
                 AND RSC.INBOUND_STATUS <> 'D'
       LEFT JOIN RS_CONTRACT_DETAILS RSCD
              ON RSC.RS_CONTRACT_SID = RSCD.RS_CONTRACT_SID
                 AND RSCD.ITEM_MASTER_SID = ICD.ITEM_MASTER_SID
       JOIN HELPER_TABLE H1
         ON CM.CONTRACT_TYPE = H1.HELPER_TABLE_SID
          LEFT JOIN IMTD_ITEM_PRICE_REBATE_DETAILS TEMP
              ON TEMP.CONTRACT_master_sid = CM.CONTRACT_MASTER_SID
                 AND TEMP.CFP_MODEL_SID = CCT.CFP_CONTRACT_SID
                 AND IFP_CONT.CFP_CONTRACT_SID = TEMP.IFP_MODEL_SID
                 AND PSC.PS_CONTRACT_SID = TEMP.PS_MODEL_SID
                 AND Temp.RS_MODEL_SID = RSCD.RS_CONTRACT_SID
                 AND TEMP.SESSION_ID = '?'
                 AND TEMP.USERS_SID = '?' AND TEMP.CONTRACT_master_sid in(?) AND TEMP.UDC1='COPY_CONTRACT'
      AND  TEMP.CHECK_RECORD=1  LEFT JOIN COMPANY_MASTER COMP
              ON CM.CONT_HOLD_COMPANY_MASTER_SID = COMP.COMPANY_MASTER_SID
 
        ]]>
        </query>    
    </entity>
    <entity id="UPdate PS-IFP details">        
        <query>
       <![CDATA[

update IMTD_PS_DETAILS set IFP_MODEL_SID='?'
where PS_MODEL_SID='?'


       ]]>
        </query>    
    </entity>
    <entity id="Copy Contract- Insert Rs details">        
        <query>
       <![CDATA[


insert into PS_DETAILS
(
   PS_MODEL_SID,
   IFP_MODEL_SID,
   ITEM_MASTER_SID,
   CONTRACT_PRICE_START_DATE,
   CONTRACT_PRICE_END_DATE,
   PRICE,
   INBOUND_STATUS,
   ITEM_PRICING_QUALIFIER_SID,
   CREATED_BY,
   CREATED_DATE,
   MODIFIED_BY,
   MODIFIED_DATE
)select DISTINCT
'?' as PSM,
IFP_MODEL_SID,
ITEM_MASTER_SID,
PS_DTLS_CONT_PRICE_STARTDATE,
PS_DETAILS_PRIC_PRTCN_EDDATE,
PS_DETAILS_PRICE,
'A' as inbu ,
1 as quasid,
'?' as usid,
getDate() as cdate,
'?' as moby,
getDate()as mdate
from IMTD_PS_DETAILS
where PS_MODEL_SID='?'


       ]]>
        </query>    
    </entity>
    <entity id="temp Table IFP Select">        
        <query>
       <![CDATA[

 SELECT ITEM_MASTER_SID FROM   GCM_ITEM_DETAILS where IFP_MODEL_SID='?'

       ]]>
        </query>    
    </entity>
    <entity id="temp Table PS Select">        
        <query>
       <![CDATA[

SELECT ITEM_MASTER_SID FROM IMTD_PS_DETAILS where PS_MODEL_SID='?'

       ]]>
        </query>    
    </entity>

</sql>