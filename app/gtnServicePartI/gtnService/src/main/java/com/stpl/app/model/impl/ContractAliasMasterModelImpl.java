/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.ContractAliasMaster;
import com.stpl.app.model.ContractAliasMasterModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ContractAliasMaster service. Represents a row in the &quot;CONTRACT_ALIAS_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link ContractAliasMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ContractAliasMasterImpl}.
 * </p>
 *
 * @author
 * @see ContractAliasMasterImpl
 * @see ContractAliasMaster
 * @see ContractAliasMasterModel
 * @generated
 */
@ProviderType
public class ContractAliasMasterModelImpl extends BaseModelImpl<ContractAliasMaster>
	implements ContractAliasMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a contract alias master model instance should use the {@link ContractAliasMaster} interface instead.
	 */
	public static final String TABLE_NAME = "CONTRACT_ALIAS_MASTER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CONTRACT_ALIAS_TYPE", Types.INTEGER },
			{ "TP_COMPANY_MASTER_SID", Types.INTEGER },
			{ "END_DATE", Types.TIMESTAMP },
			{ "CONTRACT_ALIAS_MASTER_SID", Types.INTEGER },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "CONTRACT_ALIAS_NO", Types.VARCHAR },
			{ "RECORD_LOCK_STATUS", Types.BOOLEAN },
			{ "START_DATE", Types.TIMESTAMP },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SOURCE", Types.VARCHAR },
			{ "CREATED_BY", Types.INTEGER },
			{ "CONTRACT_MASTER_SID", Types.INTEGER },
			{ "BATCH_ID", Types.VARCHAR },
			{ "CONTRACT_ALIAS_NAME", Types.VARCHAR },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "INBOUND_STATUS", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CONTRACT_ALIAS_TYPE", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("TP_COMPANY_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CONTRACT_ALIAS_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CONTRACT_ALIAS_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RECORD_LOCK_STATUS", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CONTRACT_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_ALIAS_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table CONTRACT_ALIAS_MASTER (CONTRACT_ALIAS_TYPE INTEGER,TP_COMPANY_MASTER_SID INTEGER,END_DATE DATE null,CONTRACT_ALIAS_MASTER_SID INTEGER not null primary key IDENTITY,MODIFIED_DATE DATE null,CONTRACT_ALIAS_NO VARCHAR(75) null,RECORD_LOCK_STATUS BOOLEAN,START_DATE DATE null,CREATED_DATE DATE null,SOURCE VARCHAR(75) null,CREATED_BY INTEGER,CONTRACT_MASTER_SID INTEGER,BATCH_ID VARCHAR(75) null,CONTRACT_ALIAS_NAME VARCHAR(75) null,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table CONTRACT_ALIAS_MASTER";
	public static final String ORDER_BY_JPQL = " ORDER BY contractAliasMaster.contractAliasMasterSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CONTRACT_ALIAS_MASTER.CONTRACT_ALIAS_MASTER_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.ContractAliasMaster"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.ContractAliasMaster"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.stpl.app.model.ContractAliasMaster"),
			true);
	public static final long CONTRACTMASTERSID_COLUMN_BITMASK = 1L;
	public static final long CONTRACTALIASMASTERSID_COLUMN_BITMASK = 2L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.ContractAliasMaster"));

	public ContractAliasMasterModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _contractAliasMasterSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setContractAliasMasterSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _contractAliasMasterSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return ContractAliasMaster.class;
	}

	@Override
	public String getModelClassName() {
		return ContractAliasMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("contractAliasType", getContractAliasType());
		attributes.put("tpCompanyMasterSid", getTpCompanyMasterSid());
		attributes.put("endDate", getEndDate());
		attributes.put("contractAliasMasterSid", getContractAliasMasterSid());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("contractAliasNo", getContractAliasNo());
		attributes.put("recordLockStatus", getRecordLockStatus());
		attributes.put("startDate", getStartDate());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("source", getSource());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("contractMasterSid", getContractMasterSid());
		attributes.put("batchId", getBatchId());
		attributes.put("contractAliasName", getContractAliasName());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("inboundStatus", getInboundStatus());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer contractAliasType = (Integer)attributes.get("contractAliasType");

		if (contractAliasType != null) {
			setContractAliasType(contractAliasType);
		}

		Integer tpCompanyMasterSid = (Integer)attributes.get(
				"tpCompanyMasterSid");

		if (tpCompanyMasterSid != null) {
			setTpCompanyMasterSid(tpCompanyMasterSid);
		}

		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Integer contractAliasMasterSid = (Integer)attributes.get(
				"contractAliasMasterSid");

		if (contractAliasMasterSid != null) {
			setContractAliasMasterSid(contractAliasMasterSid);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String contractAliasNo = (String)attributes.get("contractAliasNo");

		if (contractAliasNo != null) {
			setContractAliasNo(contractAliasNo);
		}

		Boolean recordLockStatus = (Boolean)attributes.get("recordLockStatus");

		if (recordLockStatus != null) {
			setRecordLockStatus(recordLockStatus);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer contractMasterSid = (Integer)attributes.get("contractMasterSid");

		if (contractMasterSid != null) {
			setContractMasterSid(contractMasterSid);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String contractAliasName = (String)attributes.get("contractAliasName");

		if (contractAliasName != null) {
			setContractAliasName(contractAliasName);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}
	}

	@Override
	public int getContractAliasType() {
		return _contractAliasType;
	}

	@Override
	public void setContractAliasType(int contractAliasType) {
		_contractAliasType = contractAliasType;
	}

	@Override
	public int getTpCompanyMasterSid() {
		return _tpCompanyMasterSid;
	}

	@Override
	public void setTpCompanyMasterSid(int tpCompanyMasterSid) {
		_tpCompanyMasterSid = tpCompanyMasterSid;
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public int getContractAliasMasterSid() {
		return _contractAliasMasterSid;
	}

	@Override
	public void setContractAliasMasterSid(int contractAliasMasterSid) {
		_contractAliasMasterSid = contractAliasMasterSid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getContractAliasNo() {
		if (_contractAliasNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractAliasNo;
		}
	}

	@Override
	public void setContractAliasNo(String contractAliasNo) {
		_contractAliasNo = contractAliasNo;
	}

	@Override
	public boolean getRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public boolean isRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public void setRecordLockStatus(boolean recordLockStatus) {
		_recordLockStatus = recordLockStatus;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_startDate = startDate;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getContractMasterSid() {
		return _contractMasterSid;
	}

	@Override
	public void setContractMasterSid(int contractMasterSid) {
		_columnBitmask |= CONTRACTMASTERSID_COLUMN_BITMASK;

		if (!_setOriginalContractMasterSid) {
			_setOriginalContractMasterSid = true;

			_originalContractMasterSid = _contractMasterSid;
		}

		_contractMasterSid = contractMasterSid;
	}

	public int getOriginalContractMasterSid() {
		return _originalContractMasterSid;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getContractAliasName() {
		if (_contractAliasName == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractAliasName;
		}
	}

	@Override
	public void setContractAliasName(String contractAliasName) {
		_contractAliasName = contractAliasName;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ContractAliasMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (ContractAliasMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		ContractAliasMasterImpl contractAliasMasterImpl = new ContractAliasMasterImpl();

		contractAliasMasterImpl.setContractAliasType(getContractAliasType());
		contractAliasMasterImpl.setTpCompanyMasterSid(getTpCompanyMasterSid());
		contractAliasMasterImpl.setEndDate(getEndDate());
		contractAliasMasterImpl.setContractAliasMasterSid(getContractAliasMasterSid());
		contractAliasMasterImpl.setModifiedDate(getModifiedDate());
		contractAliasMasterImpl.setContractAliasNo(getContractAliasNo());
		contractAliasMasterImpl.setRecordLockStatus(getRecordLockStatus());
		contractAliasMasterImpl.setStartDate(getStartDate());
		contractAliasMasterImpl.setCreatedDate(getCreatedDate());
		contractAliasMasterImpl.setSource(getSource());
		contractAliasMasterImpl.setCreatedBy(getCreatedBy());
		contractAliasMasterImpl.setContractMasterSid(getContractMasterSid());
		contractAliasMasterImpl.setBatchId(getBatchId());
		contractAliasMasterImpl.setContractAliasName(getContractAliasName());
		contractAliasMasterImpl.setModifiedBy(getModifiedBy());
		contractAliasMasterImpl.setInboundStatus(getInboundStatus());

		contractAliasMasterImpl.resetOriginalValues();

		return contractAliasMasterImpl;
	}

	@Override
	public int compareTo(ContractAliasMaster contractAliasMaster) {
		int primaryKey = contractAliasMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof ContractAliasMaster)) {
			return false;
		}

		ContractAliasMaster contractAliasMaster = (ContractAliasMaster)obj;

		int primaryKey = contractAliasMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		ContractAliasMasterModelImpl contractAliasMasterModelImpl = this;

		contractAliasMasterModelImpl._originalContractMasterSid = contractAliasMasterModelImpl._contractMasterSid;

		contractAliasMasterModelImpl._setOriginalContractMasterSid = false;

		contractAliasMasterModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<ContractAliasMaster> toCacheModel() {
		ContractAliasMasterCacheModel contractAliasMasterCacheModel = new ContractAliasMasterCacheModel();

		contractAliasMasterCacheModel.contractAliasType = getContractAliasType();

		contractAliasMasterCacheModel.tpCompanyMasterSid = getTpCompanyMasterSid();

		Date endDate = getEndDate();

		if (endDate != null) {
			contractAliasMasterCacheModel.endDate = endDate.getTime();
		}
		else {
			contractAliasMasterCacheModel.endDate = Long.MIN_VALUE;
		}

		contractAliasMasterCacheModel.contractAliasMasterSid = getContractAliasMasterSid();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			contractAliasMasterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			contractAliasMasterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		contractAliasMasterCacheModel.contractAliasNo = getContractAliasNo();

		String contractAliasNo = contractAliasMasterCacheModel.contractAliasNo;

		if ((contractAliasNo != null) && (contractAliasNo.length() == 0)) {
			contractAliasMasterCacheModel.contractAliasNo = null;
		}

		contractAliasMasterCacheModel.recordLockStatus = getRecordLockStatus();

		Date startDate = getStartDate();

		if (startDate != null) {
			contractAliasMasterCacheModel.startDate = startDate.getTime();
		}
		else {
			contractAliasMasterCacheModel.startDate = Long.MIN_VALUE;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			contractAliasMasterCacheModel.createdDate = createdDate.getTime();
		}
		else {
			contractAliasMasterCacheModel.createdDate = Long.MIN_VALUE;
		}

		contractAliasMasterCacheModel.source = getSource();

		String source = contractAliasMasterCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			contractAliasMasterCacheModel.source = null;
		}

		contractAliasMasterCacheModel.createdBy = getCreatedBy();

		contractAliasMasterCacheModel.contractMasterSid = getContractMasterSid();

		contractAliasMasterCacheModel.batchId = getBatchId();

		String batchId = contractAliasMasterCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			contractAliasMasterCacheModel.batchId = null;
		}

		contractAliasMasterCacheModel.contractAliasName = getContractAliasName();

		String contractAliasName = contractAliasMasterCacheModel.contractAliasName;

		if ((contractAliasName != null) && (contractAliasName.length() == 0)) {
			contractAliasMasterCacheModel.contractAliasName = null;
		}

		contractAliasMasterCacheModel.modifiedBy = getModifiedBy();

		contractAliasMasterCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = contractAliasMasterCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			contractAliasMasterCacheModel.inboundStatus = null;
		}

		return contractAliasMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{contractAliasType=");
		sb.append(getContractAliasType());
		sb.append(", tpCompanyMasterSid=");
		sb.append(getTpCompanyMasterSid());
		sb.append(", endDate=");
		sb.append(getEndDate());
		sb.append(", contractAliasMasterSid=");
		sb.append(getContractAliasMasterSid());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", contractAliasNo=");
		sb.append(getContractAliasNo());
		sb.append(", recordLockStatus=");
		sb.append(getRecordLockStatus());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", contractMasterSid=");
		sb.append(getContractMasterSid());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", contractAliasName=");
		sb.append(getContractAliasName());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.ContractAliasMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>contractAliasType</column-name><column-value><![CDATA[");
		sb.append(getContractAliasType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tpCompanyMasterSid</column-name><column-value><![CDATA[");
		sb.append(getTpCompanyMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractAliasMasterSid</column-name><column-value><![CDATA[");
		sb.append(getContractAliasMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractAliasNo</column-name><column-value><![CDATA[");
		sb.append(getContractAliasNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
		sb.append(getRecordLockStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
		sb.append(getContractMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractAliasName</column-name><column-value><![CDATA[");
		sb.append(getContractAliasName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = ContractAliasMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			ContractAliasMaster.class
		};
	private int _contractAliasType;
	private int _tpCompanyMasterSid;
	private Date _endDate;
	private int _contractAliasMasterSid;
	private Date _modifiedDate;
	private String _contractAliasNo;
	private boolean _recordLockStatus;
	private Date _startDate;
	private Date _createdDate;
	private String _source;
	private int _createdBy;
	private int _contractMasterSid;
	private int _originalContractMasterSid;
	private boolean _setOriginalContractMasterSid;
	private String _batchId;
	private String _contractAliasName;
	private int _modifiedBy;
	private String _inboundStatus;
	private long _columnBitmask;
	private ContractAliasMaster _escapedModel;
}