<?xml version="1.0" encoding="UTF-8"?>
<sql>
<!--    <sql id="viewCount">
        <query> 
	<![CDATA[
            SELECT COUNT(WORKFLOW_ID) FROM WORKFLOW_INBOX WHERE VIEW_TYPE like '?' and VIEW_NAME LIKE '?'
            ?
            
        ]]>
        </query>
    </sql>
    <sql id="viewSearch">
        <query> 
	<![CDATA[
            SELECT
    VIEW_NAME,
    VIEW_TYPE,
    BUSINESS_PROCESS,
    GL_COMPANY_MASTER_SID,
    WORKFLOW_ID,
    WORKFLOW_NAME,
    WORKFLOW_STATUS,
    APPROVED_BY,
    WF_CREATED_BY,
    CREATION_FROM_DATE,
    CREATION_TO_DATE,
    WORKFLOW_INBOX_SID,
    WI.CREATED_BY,
    CM.COMPANY_NAME,
      HT.DESCRIPTION AS STATUS
FROM
    WORKFLOW_INBOX WI JOIN COMPANY_MASTER CM
        ON CM.COMPANY_MASTER_SID = WI.GL_COMPANY_MASTER_SID
          LEFT JOIN HELPER_TABLE HT
        ON HT.HELPER_TABLE_SID=WI.WORKFLOW_STATUS
        WHERE VIEW_TYPE = '?' and VIEW_NAME LIKE '?' 
        ?
        ? OFFSET ? ROWS FETCH NEXT ? ROWS ONLY ;
        ]]>
        </query>
    </sql>
    <sql id="insertView">
        <query> 
	<![CDATA[
            INSERT
    INTO
        WORKFLOW_INBOX(
            VIEW_NAME,
            VIEW_TYPE,
            BUSINESS_PROCESS,
            GL_COMPANY_MASTER_SID,
            WORKFLOW_ID,
            WORKFLOW_NAME,
            WORKFLOW_STATUS,
            APPROVED_BY,
            CREATION_FROM_DATE,
            CREATION_TO_DATE,
            CREATED_BY,
            CREATED_DATE,
            MODIFIED_BY,
            MODIFIED_DATE
        )
    VALUES(
        '?',
        '?',
        '?',
        '?',
        '?',
        '?',
        '?',
        ?,'?','?',?,'?',?,'?'
    );
        ]]>
        </query>
    </sql>
    <sql id="updateView">
        <query> 
	<![CDATA[
        UPDATE
    WORKFLOW_INBOX
SET
    VIEW_NAME = '?',
    VIEW_TYPE = '?',
    BUSINESS_PROCESS = '?',
    GL_COMPANY_MASTER_SID = '?',
    WORKFLOW_ID = '?',
    WORKFLOW_NAME = '?',
    WORKFLOW_STATUS = '?',
    APPROVED_BY = ?,
    CREATION_FROM_DATE = '?',
    CREATION_TO_DATE = '?', CREATED_BY = ?,
    CREATED_DATE = '?',
    MODIFIED_BY = ?,
    MODIFIED_DATE = '?'
WHERE
    WORKFLOW_INBOX_SID = '?';
        ]]>
        </query>
    </sql>
    
    <sql id="deleteView">
        <query> 
        <![CDATA[
          delete from WORKFLOW_INBOX where WORKFLOW_INBOX_SID = ?
        ]]>
        </query>
    </sql>-->
    <entity id="getCffSearchCount">
        <query> 
        <![CDATA[
            ;WITH CFF
   AS (SELECT cm.CFF_MASTER_SID,
            cff_name,
            cff_type,
            rn = Row_number()OVER(partition BY cm.cff_master_sid ORDER BY APPROVED_DATE DESC),
            approval_status,
            APPROVED_DATE,
            APPROVED_BY,
            ACTIVE_FROM_DATE,
            ACTIVE_TO_DATE,
            cm.inbound_status,
            CM.CREATED_DATE,
            cm.CREATED_BY,
            h.description,
            usr.firstname
            FROM   cff_master cm
                INNER JOIN CFF_APPROVAL_DETAILS cad
                           ON cm.CFF_MASTER_SID = cad.CFF_MASTER_SID
                INNER JOIN helper_table ht
                           ON cm.CFF_TYPE = ht.helper_table_sid
                INNER JOIN HELPER_TABLE h
                           ON h.HELPER_TABLE_SID = cad.APPROVAL_STATUS
                INNER JOIN ?.dbo.User_ usr
                         ON usr.UserId = cad.APPROVED_BY),
                Pagination
        AS (SELECT CFF_MASTER_SID,
            cff_name,
            cff_type,
            approval_status,
            APPROVED_DATE,
            APPROVED_BY,
            ACTIVE_FROM_DATE,
            ACTIVE_TO_DATE,
            inbound_status,
            CREATED_DATE,
            CREATED_BY,
            description,
            firstname,
            pag=Row_number()OVER(ORDER BY CFF_MASTER_SID)
            FROM   CFF
            WHERE  rn = 1)
    SELECT distinct count(CFF_MASTER_SID)
    FROM   Pagination where inbound_status <> 'D' 
AND (CFF_MASTER_SID like '?' or CFF_MASTER_SID IS NULL) AND  (CFF_NAME like '?' OR CFF_NAME IS NULL) AND (CFF_TYPE like '?' OR CFF_TYPE IS NULL) AND (APPROVAL_STATUS like '?' OR APPROVAL_STATUS IS NULL)
 ? ? ? ?
    ?
        ]]>
        </query>
    </entity>
  
    <entity id="getCffSearchResults">
        <query>
             
        <![CDATA[
         ;WITH CFF
 AS (SELECT cm.CFF_MASTER_SID,
          cff_name,
          cff_type,
          rn = Row_number()OVER(partition BY cm.cff_master_sid ORDER BY CFF_APPROVAL_DETAILS_sid DESC),
          approval_status,
          APPROVED_DATE,            
           APPROVED_BY,
          ACTIVE_FROM_DATE,
          ACTIVE_TO_DATE,
          cm.inbound_status,
            CM.CREATED_DATE,
            cm.CREATED_BY,
            h.description,
            usr.firstname
          FROM   cff_master cm
              INNER JOIN CFF_APPROVAL_DETAILS cad
                         ON cm.CFF_MASTER_SID = cad.CFF_MASTER_SID
              INNER JOIN helper_table ht
                         ON cm.CFF_TYPE = ht.helper_table_sid
              INNER JOIN HELPER_TABLE h
                         ON h.HELPER_TABLE_SID = cad.APPROVAL_STATUS
            INNER JOIN ?.dbo.User_ usr
                         ON usr.UserId = cad.APPROVED_BY
                ),
              Pagination
      AS (SELECT CFF_MASTER_SID,
          cff_name,
          cff_type,
          approval_status,
          APPROVED_DATE,
          APPROVED_BY,
          ACTIVE_FROM_DATE,
          ACTIVE_TO_DATE,
          inbound_status,
          CREATED_DATE,
          CREATED_BY,
          description,
          firstname,
          pag=Row_number()OVER(ORDER BY CFF_MASTER_SID)
          FROM   CFF
          WHERE  rn = 1)
   SELECT CFF_MASTER_SID,
                 cff_name,
                 cff_type,
                 approval_status,
                 APPROVED_DATE,
                 APPROVED_BY,
                 ACTIVE_FROM_DATE,
                 ACTIVE_TO_DATE,
                 inbound_status,
                 CREATED_DATE,
                 CREATED_BY,
                 description,
                 firstname
       FROM   Pagination where inbound_status <> 'D' 
AND (CFF_MASTER_SID like '?' or CFF_MASTER_SID IS NULL) AND  (CFF_NAME like '?' OR CFF_NAME IS NULL) AND (CFF_TYPE like '?' OR CFF_TYPE IS NULL) AND (APPROVAL_STATUS like '?' OR APPROVAL_STATUS IS NULL)
  ? ? ? ?
    ? ? OFFSET ? ROWS FETCH NEXT ? ROWS ONLY
   
        ]]>
        </query>
    </entity>
    <entity id="updateapprovaldetails">
        <query>
             <![CDATA[ 
            INSERT INTO CFF_APPROVAL_DETAILS( APPROVED_BY, CFF_MASTER_SID, INBOUND_STATUS, APPROVAL_SEQUENCE, APPROVED_DATE, APPROVAL_STATUS, NO_OF_LEVEL )
            SELECT DISTINCT '?','?','A',?, ?, HT.HELPER_TABLE_SID,CFF.NO_OF_LEVEL 
             FROM dbo.CFF_APPROVAL_DETAILS CFF JOIN dbo.HELPER_TABLE HT 
             ON (HT.DESCRIPTION = '?' OR HT.DESCRIPTION = '?' ) AND HT.LIST_NAME LIKE 'WorkFlowStatus' 
             WHERE CFF.CFF_MASTER_SID = '?' 
                      ]]>
        </query>
    </entity> 
    <entity id="updatecffdetails">
        <query>
             <![CDATA[ 
             
                   UPDATE CFF_MASTER
                   SET MODIFIED_BY = ?,
                   MODIFIED_DATE = GETDATE(),
                   ACTIVE_FROM_DATE = GETDATE(),
                   INBOUND_STATUS = 'C'
                   WHERE
                    CFF_MASTER_SID = ?
                    
         ]]>
        </query>
    </entity> 
    <entity id="insertaddinfo">
        <query>
             <![CDATA[ 
             
                   INSERT INTO CFF_ADDITIONAL_INFO 
                    (CREATED_DATE,CREATED_BY,CFF_MASTER_SID,NOTES) 
                VALUES(GETDATE(),?, ? , ' ? ' )
                    
         ]]>
        </query>
    </entity> 
    <entity id="selectdocdetails">
        <query>
             <![CDATA[ 
             
                   SELECT * FROM CFF_DOC_DETAILS WHERE CFF_MASTER_SID = ? ? ?
                    
         ]]>
        </query>
    </entity> 
    <entity id="insertdocdetails">
        <query>
             <![CDATA[ 
             
                  INSERT INTO CFF_DOC_DETAILS (FILE_NAME,FILE_TYPE,UPLOAD_BY,
                    CFF_MASTER_SID,UPLOAD_DATE,FILE_SIZE) VALUES ('?' ,'?' ,?, ?, GETDATE() ,'?')
                    
         ]]>
        </query>
    </entity> 
    <entity id="updatedocdetails">
        <query>
             <![CDATA[ 
             
                  UPDATE CFF_DOC_DETAILS SET FILE_NAME = '?' ,FILE_TYPE = '?', ,UPLOAD_BY = ? ,CFF_MASTER_SID = ?
                  ,UPLOAD_DATE =  GETDATE() ,FILE_SIZE like '?'
                    
         ]]>
        </query>
    </entity> 
    <entity id="selectCFFAPP">
        <query>
             <![CDATA[ 
             SELECT
    APPROVAL_SEQUENCE
FROM
    CFF_APPROVAL_DETAILS CAD
WHERE
    CAD.CFF_MASTER_SID = '?'
    AND CAD.INBOUND_STATUS <> 'D'
ORDER BY
    APPROVAL_SEQUENCE DESC
         ]]>
        </query>
    </entity>
    <entity id="updatePendingdetails">
        <query>
             <![CDATA[ 
            INSERT INTO CFF_APPROVAL_DETAILS( APPROVED_BY, CFF_MASTER_SID,INBOUND_STATUS,APPROVAL_SEQUENCE,APPROVAL_STATUS,NO_OF_LEVEL ) 
            VALUES( '?', '?' ,'A','?','?','?' )
                      ]]>
        </query>
    </entity> 
    
    <entity id="getWorkFlowStatusId">
        <query>
             <![CDATA[ 
            SELECT HELPER_TABLE_SID FROM HELPER_TABLE WHERE DESCRIPTION = '?'
 AND LIST_NAME LIKE 'WorkFlowStatus'
             
                      ]]>
        </query>
    </entity> 
    
    
    <entity id="searchDS">
        <query>
             <![CDATA[ 
             SELECT
    PM.CFF_MASTER_SID projectionId,
    HDC.HIERARCHY_DEFINITION_SID customerHierSid,
    HDP.HIERARCHY_DEFINITION_SID prodHierSid,
    PM.CUST_RELATIONSHIP_BUILDER_SID custRelationshipBuilderSid,
    PM.PROD_RELATIONSHIP_BUILDER_SID prodRelationshipBuilderSid,
    PM.PRODUCT_HIERARCHY_LEVEL productHierarchyLevel,
    HDC.HIERARCHY_NAME customerHierarchy,
    PM.CUSTOMER_HIERARCHY_LEVEL customerHierarchyLevel,
    HDP.HIERARCHY_NAME productHierarchy,
    PM.CREATED_BY createdBy,
    PM.CREATED_DATE createdDate,
    PM.MODIFIED_DATE modifiedBy,
    PM.COMPANY_MASTER_SID companySid,
    PM.COMPANY_GROUP_SID customerGrpSid,
    CG.COMPANY_GROUP_NAME customerGroup,
    PM.ITEM_GROUP_SID prodGrpSid,
    IG.ITEM_GROUP_NAME productGroup,
    PM.CUSTOMER_HIERARCHY_INNER_LEVEL customerHierarchyInnerLevel,
    PM.PRODUCT_HIERARCHY_INNER_LEVEL productHierarchyInnerLevel,
    PM.CUSTOMER_HIER_VERSION_NO,PM.PRODUCT_HIER_VERSION_NO,PM.COMPANY_MASTER_SID,
    PM.BUSINESS_UNIT  businessUnit
    ,PM.DEDUCTION_HIERARCHY_SID dedHierSid,PM.DED_RELATIONSHIP_BULDER_SID dedRelSid,
    PM.CUSTOMER_HIER_VERSION_NO,
    PM.PRODUCT_HIER_VERSION_NO,
    PM.PROJECTION_CUST_VERSION,
    PM.PROJECTION_PROD_VERSION
FROM
    dbo.CFF_MASTER PM JOIN HIERARCHY_DEFINITION HDC
        ON HDC.HIERARCHY_DEFINITION_SID = PM.CUSTOMER_HIERARCHY_SID JOIN HIERARCHY_DEFINITION HDP
        ON HDP.HIERARCHY_DEFINITION_SID = PM.PRODUCT_HIERARCHY_SID LEFT JOIN COMPANY_GROUP CG
        ON CG.COMPANY_GROUP_SID = PM.COMPANY_GROUP_SID LEFT JOIN ITEM_GROUP IG
        ON IG.ITEM_GROUP_SID = PM.ITEM_GROUP_SID 
WHERE
    PM.CFF_MASTER_SID = ?
                      ]]>
        </query>
    </entity>
    <entity id="loadSelectedContainer">
        <query>
             <![CDATA[ 
             SELECT
    DISTINCT RLD.level_No,
    RLD.relationship_Level_Values,
    RLD.parent_Node,
    RLD.level_Name,
    RLD.relationship_Level_Sid,
    HLD."TABLE_NAME",
    HLD.FIELD_NAME,
    RLD.HIERARCHY_NO
FROM
    Relationship_Level_Definition RLD JOIN HIERARCHY_LEVEL_DEFINITION HLD
        ON RLD.HIERARCHY_LEVEL_DEFINITION_SID = HLD.HIERARCHY_LEVEL_DEFINITION_SID JOIN CFF_?_HIERARCHY PH
        ON RLD.RELATIONSHIP_LEVEL_SID = PH.RELATIONSHIP_LEVEL_SID
WHERE
    PH.CFF_MASTER_SID = '?'
    ?
ORDER BY
    RLD.level_No
                      ]]>
        </query>
    </entity>
    <entity id="deleteCffMaster">
        <query>
             <![CDATA[ 
      UPDATE CFF_MASTER SET
            INBOUND_STATUS = 'D' WHERE
    CFF_MASTER_SID = '?'
                      ]]>
        </query>
    </entity>
    <entity id="deleteCff">
        <query>
             <![CDATA[ 
               UPDATE ?
               SET INBOUND_STATUS = 'D'
               WHERE
               CFF_MASTER_SID = '?'
                      ]]>
        </query>
    </entity>
    <entity id="insertCustomViewMaster">
        <query>
             <![CDATA[ 
DECLARE  @identity_val VARCHAR (50)
INSERT
    INTO
        CFF_CUSTOM_VIEW_MASTER(
            CFF_MASTER_SID,
            VIEW_NAME,
            CREATED_BY,
            CREATED_DATE
        )
    VALUES(
        ?,
        '?',
        '?',
        GETDATE())
select @identity_val = SCOPE_IDENTITY()


     ]]>
        </query>
    </entity>  
    <entity id="updateCustomViewMaster">
        <query>
             <![CDATA[ 
UPDATE
    CFF_CUSTOM_VIEW_MASTER
SET
    CFF_MASTER_SID = '?',
    VIEW_NAME = '?',
    MODIFIED_BY = '?',
    MODIFIED_DATE = GETDATE()
WHERE
    CFF_CUSTOM_VIEW_MASTER_SID = '?'
     ]]>
        </query>
    </entity> 
    <entity id="deleteCustomViewDetails">
        <query>
             <![CDATA[ 
        delete from CFF_CUSTOM_VIEW_DETAILS WHERE CFF_CUSTOM_VIEW_MASTER_SID='?' ORDER BY LEVEL_NO ASC
     ]]>
        </query>
    </entity> 
    <entity id="updateProjection">
        <query>
             <![CDATA[ 
       UPDATE
    CFF_MASTER
SET
    MODIFIED_BY = @MODIFIED_BY,
   
    MODIFIED_DATE = GETDATE(),
  
    CUSTOMER_HIERARCHY_SID = @CUSTOMER_HIERARCHY_SID,
    PRODUCT_HIERARCHY_SID = @PRODUCT_HIERARCHY_SID,
    CUSTOMER_HIERARCHY_LEVEL = @CUSTOMER_HIERARCHY_LEVEL,
    PRODUCT_HIERARCHY_LEVEL = @PRODUCT_HIERARCHY_LEVEL,
    CUSTOMER_HIERARCHY_INNER_LEVEL = @CUSTOMER_HIERARCHY_INNER_LEVEL,
    PRODUCT_HIERARCHY_INNER_LEVEL = @PRODUCT_HIERARCHY_INNER_LEVEL,
    CUSTOMER_HIER_VERSION_NO = @CUSTOMER_HIER_VERSION_NO,
    PRODUCT_HIER_VERSION_NO = @PRODUCT_HIER_VERSION_NO,
    COMPANY_GROUP_SID = @COMPANY_GROUP_SID,
    ITEM_GROUP_SID = @ITEM_GROUP_SID,
    COMPANY_MASTER_SID = @COMPANY_MASTER_SID,
    ACTIVE_FROM_DATE = GETDATE(),
    CUST_RELATIONSHIP_BUILDER_SID = @CUST_RELATIONSHIP_BUILDER_SID,
    PROD_RELATIONSHIP_BUILDER_SID = @PROD_RELATIONSHIP_BUILDER_SID,
    BUSINESS_UNIT=@BUSINESS_UNIT,
    DEDUCTION_HIERARCHY_SID = @DEDUCTION_HIERARCHY_SID,
    DED_RELATIONSHIP_BULDER_SID = @DED_RELATIONSHIP_BULDER_SID
WHERE
    CFF_MASTER_SID = '?'
     ]]>
        </query>
    </entity> 
    <entity id="searchView">
        <query>
             <![CDATA[ 
       SELECT
    FVM.VIEW_NAME viewName,
    FVM.VIEW_NAME description,
    FVM.VIEW_NAME projectionName,
    FVM.VIEW_NAME brandType,
    PM.MODIFIED_DATE modifiedDate,
    PM.CREATED_BY createdBy,
    PM.CREATED_DATE createdDate,
    PM.PRODUCT_HIERARCHY_LEVEL productLevel,
    PM.CUSTOMER_HIERARCHY_LEVEL customerLevel,
    CUST_HD.HIERARCHY_NAME customerHierarchy,
    PROD_HD.HIERARCHY_NAME productHierarchy,
    CM.COMPANY_NAME company,
    CMG.COMPANY_GROUP_NAME customerGroup,
    IG.ITEM_GROUP_NAME productGroup,
    PM.CFF_MASTER_SID projectionId,
    FVM.CFF_VIEW_MASTER_SID viewId,
    PM.CUSTOMER_HIERARCHY_SID customerHierarchySid,
    PM.PRODUCT_HIERARCHY_SID productHierarchySid,
    PM.COMPANY_GROUP_SID companyGroupSid,
    PM.ITEM_GROUP_SID productGroupSid,
    PM.COMPANY_MASTER_SID companyMasterSid,
    PM.ACTIVE_FROM_DATE fromDate,
    PM.ACTIVE_TO_DATE toDate,
    PM.CUSTOMER_HIERARCHY_INNER_LEVEL customerInnerLevel,
    PM.PRODUCT_HIERARCHY_INNER_LEVEL productInnerLevel,
    PM.CUST_RELATIONSHIP_BUILDER_SID custRelationshipBuilderSid,
    PM.PROD_RELATIONSHIP_BUILDER_SID prodRelationshipBuilderSid,
    PM.BUSINESS_UNIT businessUnit,
    CMD.COMPANY_NAME businessUnitName,
    PM.CUSTOMER_HIER_VERSION_NO,
    PM.PRODUCT_HIER_VERSION_NO
FROM
    CFF_MASTER PM  JOIN CFF_VIEW_MASTER FVM
        ON FVM.CFF_MASTER_SID = PM.CFF_MASTER_SID LEFT JOIN HIERARCHY_DEFINITION CUST_HD
        ON CUST_HD.HIERARCHY_DEFINITION_SID = PM.CUSTOMER_HIERARCHY_SID LEFT JOIN HIERARCHY_DEFINITION PROD_HD
        ON PROD_HD.HIERARCHY_DEFINITION_SID = PM.PRODUCT_HIERARCHY_SID LEFT JOIN COMPANY_GROUP CMG
        ON CMG.COMPANY_GROUP_SID = PM.COMPANY_GROUP_SID LEFT JOIN ITEM_GROUP IG
        ON IG.ITEM_GROUP_SID = PM.ITEM_GROUP_SID LEFT JOIN COMPANY_MASTER CM
        ON PM.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
        LEFT JOIN COMPANY_MASTER CMD
        ON PM.BUSINESS_UNIT = CMD.COMPANY_MASTER_SID
        WHERE FVM.view_Type = '?' AND FVM.view_Name LIKE '?' ?  
     ]]>
        </query>
    </entity>  
    <entity id="fileselectiondistinct">
        <query>
             <![CDATA[ 
 SELECT FILE_MANAGEMENT_SID,
       FORECAST_NAME,
       FILE_TYPE,
       VERSION,
       FROM_PERIOD,
       TO_PERIOD,
       ID=H.HELPER_TABLE_SID
FROM   (SELECT FILE_MANAGEMENT_SID,
               FORECAST_NAME,
               FILE_TYPE,
               VERSION,
               FROM_PERIOD,
               TO_PERIOD,
               ID
        FROM   (SELECT FT.FORECAST_NAME,
                       FT.[VERSION],
                       FILE_MANAGEMENT_SID,
                       HT.[ALIAS_NAME]                       AS FILE_TYPE,
                       FT.FROM_PERIOD,
                       FT.TO_PERIOD,
                       FT.FILE_TYPE                           AS ID,
                       Row_number()
                         OVER(
                           PARTITION BY FILE_TYPE
                           ORDER BY FILE_MANAGEMENT_SID DESC) AS RN
                FROM   FILE_MANAGEMENT FT
                       INNER JOIN HELPER_TABLE HT
                               ON HT.HELPER_TABLE_SID = FT.FILE_TYPE
                WHERE  ( CONVERT(DATE, FT.FROM_PERIOD) <= CONVERT(DATE, Getdate())
                         AND FT.FROM_PERIOD IS NOT NULL )
                       AND ( CONVERT(DATE, FT.TO_PERIOD) >= CONVERT(DATE, Getdate())
                              OR FT.TO_PERIOD IS NULL )

                       AND HT.LIST_NAME = 'FILE_TYPE'
                   AND FT.BUSINESS_UNIT LIKE '%?%'
                   AND FT.COMPANY = ? ) AS A
        WHERE  RN = 1 ?)A
       INNER JOIN HELPER_TABLE H
               ON A.FILE_TYPE = H.[ALIAS_NAME]
                  AND H.LIST_NAME = 'FILE_TYPE'  

     ]]>
        </query>
    </entity>
    <entity id="deleteView">
        <query>
             <![CDATA[ 
            delete from dbo.CFF_VIEW_MASTER where CFF_VIEW_MASTER_SID=?
     ]]>
        </query>
    </entity>
    <entity id="getDiscountName">
        <query>
             <![CDATA[ 
            
            DECLARE @CFF_MASTER_SID  INT =?, 
                    @IS_NON_MANDATED BIT=0, 
                    @IS_MANDATED     BIT=0 
            DECLARE @TEMP TABLE 
              ( 
                 TYPE VARCHAR(100) 
              ); 

            INSERT INTO @TEMP 
            SELECT DISTINCT FORECASTING_TYPE 
            FROM   PROJECTION_MASTER PM 
            WHERE  EXISTS (SELECT 1 
                           FROM   DBO.CFF_MASTER M 
                                  JOIN CFF_DETAILS D 
                                    ON D.CFF_MASTER_SID = M.CFF_MASTER_SID 
                                       AND PM.PROJECTION_MASTER_SID = 
                                           D.PROJECTION_MASTER_SID 
                           WHERE  M.CFF_MASTER_SID = @CFF_MASTER_SID); 

            SELECT @IS_NON_MANDATED = 1 
            FROM   @TEMP 
            WHERE  TYPE = 'NON MANDATED'; 

            SELECT @IS_MANDATED = 1 
            FROM   @TEMP 
            WHERE  TYPE = 'MANDATED'; 

            DECLARE @TEMP_MANDATED_DISCOUNTS TABLE 
              ( 
                 RS_MODEL_SID INT, 
                 DISCOUNT     VARCHAR(100), 
                 CHECK_RECORD BIT 
              ) 

            INSERT INTO @TEMP_MANDATED_DISCOUNTS 
            VALUES      (0, 
                         'MANDATED', 
                         @IS_MANDATED), 
                        (0, 
                         'SUPPLEMENTAL', 
                         @IS_MANDATED); 

            DECLARE @TEMP_NM_DISCOUNTS TABLE 
              ( 
                 RS_MODEL_SID INT, 
                 DISCOUNT     VARCHAR(500), 
                 CHECK_RECORD BIT 
              ); 

            INSERT INTO @TEMP_NM_DISCOUNTS 
            SELECT DISTINCT NMDP.RS_MODEL_SID, 
                            RS_NAME, 
                            @IS_NON_MANDATED 
            FROM   CFF_DETAILS CFF 
                   JOIN PROJECTION_DETAILS PD 
                     ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                        AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                   JOIN NM_DISCOUNT_PROJ_MASTER NMDP 
                     ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                   JOIN RS_CONTRACT RM 
                     ON RM.RS_CONTRACT_SID=NMDP.RS_CONTRACT_SID
					 JOIN CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID=CFF.CCP_DETAILS_SID
            WHERE  CFF.CFF_MASTER_SID = @CFF_MASTER_SID 
            UNION ALL 
            SELECT DISTINCT RM.RS_MODEL_SID, 
                            RM.RS_NAME, 
                            @IS_NON_MANDATED 
            FROM   RS_CONTRACT  RM 
            WHERE  EXISTS(SELECT 1 
                          FROM   CFF_DETAILS CFF 
                                 JOIN PROJECTION_DETAILS PD 
                                   ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                                      AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                                 JOIN NM_PPA_PROJECTION_MASTER NMDP 
                                   ON NMDP.PROJECTION_DETAILS_SID = 
                                      PD.PROJECTION_DETAILS_SID 
                          WHERE  CFF.CFF_MASTER_SID = @CFF_MASTER_SID 
                                 AND RM.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID) 

            SELECT RS_MODEL_SID, 
                   DISCOUNT 
            FROM   (SELECT * 
                    FROM   @TEMP_MANDATED_DISCOUNTS 
                    UNION ALL 
                    SELECT * 
                    FROM   @TEMP_NM_DISCOUNTS) A 
            WHERE  CHECK_RECORD = 1 
            ORDER  BY DISCOUNT 
	
     ]]>
        </query>
    </entity>
    
    <entity id="getProgramCategoryDiscountName">
        <query>
             <![CDATA[ 
            DECLARE @CFF_MASTER_SID  INT =?, 
                    @IS_NON_MANDATED BIT=0, 
                    @IS_MANDATED     BIT=0 
            DECLARE @TEMP TABLE 
              ( 
                 TYPE VARCHAR(100) 
              ); 

            INSERT INTO @TEMP 
            SELECT DISTINCT FORECASTING_TYPE 
            FROM   PROJECTION_MASTER PM 
            WHERE  EXISTS (SELECT 1 
                           FROM   DBO.CFF_MASTER M 
                                  JOIN CFF_DETAILS D 
                                    ON D.CFF_MASTER_SID = M.CFF_MASTER_SID 
                                       AND PM.PROJECTION_MASTER_SID = 
                                           D.PROJECTION_MASTER_SID 
                           WHERE  M.CFF_MASTER_SID = @CFF_MASTER_SID); 

            SELECT @IS_NON_MANDATED = 1 
            FROM   @TEMP 
            WHERE  TYPE = 'NON MANDATED'; 

            SELECT @IS_MANDATED = 1 
            FROM   @TEMP 
            WHERE  TYPE = 'MANDATED'; 

            DECLARE @TEMP_MANDATED_DISCOUNTS TABLE 
              ( 
                 DISCOUNT     VARCHAR(100), 
                 CHECK_RECORD BIT 
              ) 

            INSERT INTO @TEMP_MANDATED_DISCOUNTS 
            VALUES      ('MANDATED', 
                         @IS_MANDATED), 
                        ('SUPPLEMENTAL', 
                         @IS_MANDATED); 

            DECLARE @TEMP_NM_DISCOUNTS TABLE 
              ( 
                 DISCOUNT     VARCHAR(500), 
                 CHECK_RECORD BIT 
              ); 

            INSERT INTO @TEMP_NM_DISCOUNTS 
            SELECT DISTINCT PRICE_GROUP_TYPE AS DISCOUNT, 
                            @IS_NON_MANDATED 
            FROM   CFF_DETAILS CFF 
                   JOIN PROJECTION_DETAILS PD 
                     ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                        AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                   JOIN NM_DISCOUNT_PROJ_MASTER NMDP 
                     ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                   JOIN RS_CONTRACT RM 
                     ON RM.RS_CONTRACT_SID=NMDP.RS_CONTRACT_SID
					JOIN CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID=CFF.CCP_DETAILS_SID
            WHERE  CFF.CFF_MASTER_SID = @CFF_MASTER_SID 
                   AND PRICE_GROUP_TYPE IS NOT NULL 
                   AND PRICE_GROUP_TYPE NOT IN( '-SELECT ONE-' ) 
            UNION ALL 
            SELECT DISTINCT HT.DESCRIPTION AS DISCOUNT, 
                            @IS_NON_MANDATED 
            FROM   RS_CONTRACT  RM 
                   JOIN HELPER_TABLE HT 
                     ON HT.HELPER_TABLE_SID = RM.REBATE_PROGRAM_TYPE 
                        AND HT.HELPER_TABLE_SID <> 0 
                        AND HT.LIST_NAME = 'REBATE_PROGRAM_TYPE' 
            WHERE  EXISTS (SELECT 1 
                           FROM   CFF_DETAILS CFF 
                                  JOIN PROJECTION_DETAILS PD 
                                    ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                                       AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                                  JOIN NM_PPA_PROJECTION_MASTER NMDP 
                                    ON NMDP.PROJECTION_DETAILS_SID = 
                                       PD.PROJECTION_DETAILS_SID 
                           WHERE  CFF.CFF_MASTER_SID = @CFF_MASTER_SID 
                                  AND RM.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID) 

            SELECT DISCOUNT
            FROM   (SELECT * 
                    FROM   @TEMP_MANDATED_DISCOUNTS 
                    UNION ALL 
                    SELECT * 
                    FROM   @TEMP_NM_DISCOUNTS) A 
            WHERE  CHECK_RECORD = 1 
            ORDER  BY DISCOUNT

            ]]>
        </query>
    </entity>
    
    <entity id="saveCffResults">
        <query>	
     <![CDATA[
        ;WITH CTE
                  AS (SELECT Row_number()OVER(PARTITION BY CCP_DETAILS_SID ORDER BY WM.CREATED_DATE DESC) RN,
                             WORKFLOW_MASTER_SID,
                             WORKFLOW_ID,
                             WM.PROJECTION_MASTER_SID,
                             PM.PROJECTION_NAME,
                             PM.FORECASTING_TYPE,
                             CCP_DETAILS_SID,
                             WORKFLOW_STATUS=HT.[DESCRIPTION],
                             APPROVED_BY,
                             WM.MODIFIED_DATE,
                             WM.CREATED_BY,
                             WM.CREATED_DATE
                      FROM   PROJECTION_MASTER PM, WORKFLOW_MASTER WM
                             INNER JOIN PROJECTION_DETAILS PD
                                     ON PD.PROJECTION_MASTER_SID = WM.PROJECTION_MASTER_SID
                             INNER JOIN HELPER_TABLE HT
                                     ON WM.WORKFLOW_STATUS_ID = HT.HELPER_TABLE_SID
                      WHERE  HT.[DESCRIPTION] = 'Approved' and PM.PROJECTION_MASTER_SID = WM.PROJECTION_MASTER_SID
       AND CCP_DETAILS_SID in (?))
              SELECT CCP_DETAILS_SID,
                    PROJECTION_MASTER_SID 
              FROM  CTE
              WHERE  RN = 1

    ]]>
        </query>
    </entity>
    
    
    <entity id="getCFFLevel">
        <query>
             <![CDATA[ 
             select * from dbo.CFF_APPROVAL_DETAILS WHERE CFF_MASTER_SID='?' order by CFF_APPROVAL_DETAILS_SID DESC
                      ]]>
        </query>
    </entity>  
    
    <entity id="getCFFCurrentLevel">
        <query>
             <![CDATA[ 
              select * from dbo.CFF_APPROVAL_DETAILS WHERE CFF_MASTER_SID='?'  order by CFF_APPROVAL_DETAILS_SID DESC
                      ]]>
        </query>
    </entity> 
       
    <entity id="getLatestCCPProjection">
        <query>
             <![CDATA[ 
              SELECT WORKFLOW_MASTER_SID,
       WORKFLOW_ID,
       PROJECTION_MASTER_SID,
       PROJECTION_NAME,
       FORECASTING_TYPE,
       STATUS,
       CREATED_BY,
       APPROVED_DATE,
       APPROVED_BY,
       CREATED_DATE,
       CFF_NAME,
       CFf_TYPE
FROM   (SELECT *,
               Row_number()
                 OVER(
                   partition BY projection_master_sid
                   ORDER BY CFF_APPROVED_DATE DESC) rno
        FROM   (SELECT DISTINCT WM.WORKFLOW_MASTER_SID,
                                WM.WORKFLOW_ID,
                                PM.PROJECTION_MASTER_SID,
                                PM.PROJECTION_NAME,
                                PM.FORECASTING_TYPE,
                                HT.DESCRIPTION   AS STATUS,
                                PM.CREATED_BY,
                                WM.APPROVED_DATE,
                                WM.APPROVED_BY,
                                WM.CREATED_DATE,
                                OU.CFF_NAME,
                                OU.APPROVED_DATE AS CFF_APPROVED_DATE,
                                CFF.CREATED_DATE AS cff_date,
                                OU.CFF_TYPE
                FROM   DBO.CFF_DETAILS CFFD
                       JOIN DBO.WORKFLOW_MASTER WM
                         ON WM.PROJECTION_MASTER_SID = CFFD.PROJECTION_MASTER_SID
                       JOIN DBO.PROJECTION_MASTER PM
                         ON CFFD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
                       JOIN DBO.HELPER_TABLE HT
                         ON HT.HELPER_TABLE_SID = WM.WORKFLOW_STATUS_ID
                           AND CFFD.CFF_MASTER_SID = '?'
                       OUTER APPLY (SELECT TOP 1 CFF_NAME, C.APPROVED_DATE,CM.CFF_TYPE
                                    FROM   CFF_APPROVAL_DETAILS C
                                           JOIN HELPER_TABLE HT
                                             ON C.APPROVAL_STATUS = HT.HELPER_TABLE_SID
                                           JOIN CFF_DETAILS CD
                                             ON CD.CFF_MASTER_SID = C.CFF_MASTER_SID
                                           JOIN CFF_MASTER CM
                                             ON CM.CFF_MASTER_SID = CD.CFF_MASTER_SID
                                    WHERE  DESCRIPTION = 'APPROVED'
                                           AND CFFD.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
                                    ORDER  BY CFF_APPROVAL_DETAILS_SID DESC) OU
                       LEFT JOIN CFF_MASTER CFF
                              ON CFF.CFF_NAME = OU.CFF_NAME)a)b
WHERE  rno = 1
ORDER  BY PROJECTION_MASTER_SID
                      ]]>
        </query>
    </entity>
    <entity id="comparisonSearchCount">
        <query>
             <![CDATA[ 
             IF Object_id('TEMPDB.DBO.#CFF_APPROVAL_DETAILS', 'U') IS NOT NULL
             DROP TABLE #CFF_APPROVAL_DETAILS;
	
	select * into #CFF_APPROVAL_DETAILS from (
		select *,row_number()over(partition by cff_master_sid order by CFF_APPROVAL_DETAILS_sid desc)as rn from CFF_APPROVAL_DETAILS )a
		 JOIN HELPER_TABLE HT1 ON HT1.HELPER_TABLE_SID = a.APPROVAL_STATUS
	AND HT1.DESCRIPTION = '?'
		where rn=1
    ; WITH CTE AS (SELECT PM.CFF_NAME,
               PM.CFF_NAME AS CFF_DESCRIPTION,
               CASE
                 WHEN COUNT(DISTINCT HT.DESCRIPTION) > 1 THEN 'MULTIPLE'
                 ELSE MAX(HT.DESCRIPTION)
               END         AS MARKET_TYPE,
               CASE
                 WHEN COUNT(DISTINCT CM.COMPANY_NO) > 1 THEN 'MULTIPLE'
                 ELSE MAX(CM.COMPANY_NO)
               END         AS CONTRACT_HOLDER,
               CASE
                 WHEN COUNT(DISTINCT C.CONTRACT_NO) > 1 THEN 'MULTIPLE'
                 ELSE MAX(C.CONTRACT_NO)
               END         AS CONTRACT,
               CASE
                 WHEN COUNT(DISTINCT BM.BRAND_NAME) > 1 THEN 'MULTIPLE'
                 ELSE MAX(BM.BRAND_NAME)
               END         AS BRAND,
               CASE
                 WHEN COUNT(DISTINCT IM.ITEM_NO) > 1 THEN 'MULTIPLE'
                 ELSE MAX(IM.ITEM_NO)
               END         AS ITEM_NO,
               CASE
                 WHEN COUNT(DISTINCT IM.ITEM_NAME) > 1 THEN 'MULTIPLE'
                 ELSE MAX(IM.ITEM_NAME)
               END         AS ITEM_NAME,
               PM.CFF_MASTER_SID,
               PM.CREATED_DATE,
               PM.CREATED_BY
        FROM   CFF_MASTER PM
               INNER JOIN CFF_DETAILS PD
                       ON PD.CFF_MASTER_SID = PM.CFF_MASTER_SID
                AND PM.CFF_MASTER_SID NOT IN( ? )
                AND PM.CFF_NAME  LIKE '?'
                AND PM.CFF_NAME  LIKE '?'
                ? ?
               JOIN #CFF_APPROVAL_DETAILS CAD
                 ON CAD.CFF_MASTER_SID = PM.CFF_MASTER_SID               
               INNER JOIN CCP_DETAILS CCP
                       ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
               INNER JOIN CONTRACT_MASTER C
                       ON C.CONTRACT_MASTER_SID = CCP.CONTRACT_MASTER_SID
                       AND C.CONTRACT_NAME LIKE '%'
                       AND EXISTS (
                     SELECT 1
                     FROM CFF_DETAILS CD
                     WHERE PD.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
                           AND CFF_MASTER_SID IN ( ? )
                     )
               LEFT JOIN HELPER_TABLE HT
                      ON C.CONTRACT_TYPE = HT.HELPER_TABLE_SID
                         AND ( HT.LIST_NAME = 'CONTRACT_TYPE'
                               AND HT.DESCRIPTION LIKE '%' )
               LEFT JOIN COMPANY_MASTER CM
                      ON C.CONT_HOLD_COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
                         AND ( CM.COMPANY_NO LIKE '%'
                                OR CM.COMPANY_NO IS NULL )
               JOIN ITEM_MASTER IM
                 ON CCP.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
                 AND IM.ITEM_NAME LIKE '%'
                 AND IM.ITEM_NO LIKE '%'
               LEFT JOIN BRAND_MASTER BM
                      ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID
                         AND ( BM.BRAND_NAME LIKE '%'
                                OR BM.BRAND_NAME IS NULL )
       ?
        GROUP  BY PM.CFF_NAME,
                  PM.CFF_MASTER_SID,
                  PM.CREATED_DATE,
                  PM.CREATED_BY
        ) 
        SELECT count(*) FROM CTE

                      ]]>
        </query>
    </entity>   
    <entity id="comparisonLoadData">
        <query>
             <![CDATA[ 
             IF Object_id('TEMPDB.DBO.#CFF_APPROVAL_DETAILS', 'U') IS NOT NULL
                  DROP TABLE #CFF_APPROVAL_DETAILS;
	
                select * into #CFF_APPROVAL_DETAILS from (
		select *,row_number()over(partition by cff_master_sid order by CFF_APPROVAL_DETAILS_sid desc)as rn from CFF_APPROVAL_DETAILS )a
		 JOIN HELPER_TABLE HT1 ON HT1.HELPER_TABLE_SID = a.APPROVAL_STATUS
                AND HT1.DESCRIPTION = '?'
		where rn=1
              ; WITH CTE AS (SELECT PM.CFF_NAME,
               PM.CFF_NAME AS CFF_DESCRIPTION,
               CASE
                 WHEN COUNT(DISTINCT HT.DESCRIPTION) > 1 THEN 'MULTIPLE'
                 ELSE MAX(HT.DESCRIPTION)
               END         AS MARKET_TYPE,
               CASE
                 WHEN COUNT(DISTINCT CM.COMPANY_NO) > 1 THEN 'MULTIPLE'
                 ELSE MAX(CM.COMPANY_NO)
               END         AS CONTRACT_HOLDER,
               CASE
                 WHEN COUNT(DISTINCT C.CONTRACT_NO) > 1 THEN 'MULTIPLE'
                 ELSE MAX(C.CONTRACT_NO)
               END         AS CONTRACT,
               CASE
                 WHEN COUNT(DISTINCT BM.BRAND_NAME) > 1 THEN 'MULTIPLE'
                 ELSE MAX(BM.BRAND_NAME)
               END         AS BRAND,
               CASE
                 WHEN COUNT(DISTINCT IM.ITEM_NO) > 1 THEN 'MULTIPLE'
                 ELSE MAX(IM.ITEM_NO)
               END         AS ITEM_NO,
               CASE
                 WHEN COUNT(DISTINCT IM.ITEM_NAME) > 1 THEN 'MULTIPLE'
                 ELSE MAX(IM.ITEM_NAME)
               END         AS ITEM_NAME,
               PM.CFF_MASTER_SID,
               PM.CREATED_DATE,
               PM.CREATED_BY
        FROM   CFF_MASTER PM
               INNER JOIN CFF_DETAILS PD
                       ON PD.CFF_MASTER_SID = PM.CFF_MASTER_SID
                AND PM.CFF_MASTER_SID NOT IN( ? )
                AND PM.CFF_NAME  LIKE '?'
                AND PM.CFF_NAME  LIKE '?'
                ? ?
               JOIN #CFF_APPROVAL_DETAILS CAD
                 ON CAD.CFF_MASTER_SID = PM.CFF_MASTER_SID               
               INNER JOIN CCP_DETAILS CCP
                       ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
               INNER JOIN CONTRACT_MASTER C
                       ON C.CONTRACT_MASTER_SID = CCP.CONTRACT_MASTER_SID
                       AND C.CONTRACT_NAME LIKE '%'
                       AND EXISTS (
                     SELECT 1
                     FROM CFF_DETAILS CD
                     WHERE PD.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
                           AND CFF_MASTER_SID IN ( ? )
                     )

               LEFT JOIN HELPER_TABLE HT
                      ON C.CONTRACT_TYPE = HT.HELPER_TABLE_SID
                         AND ( HT.LIST_NAME = 'CONTRACT_TYPE'
                               AND HT.DESCRIPTION LIKE '%' )
               LEFT JOIN COMPANY_MASTER CM
                      ON C.CONT_HOLD_COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
                         AND ( CM.COMPANY_NO LIKE '%'
                                OR CM.COMPANY_NO IS NULL )
               JOIN ITEM_MASTER IM
                 ON CCP.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
                 AND IM.ITEM_NAME LIKE '%'
                 AND IM.ITEM_NO LIKE '%'
               LEFT JOIN BRAND_MASTER BM
                      ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID
                         AND ( BM.BRAND_NAME LIKE '%'
                                OR BM.BRAND_NAME IS NULL )
       ?
        GROUP  BY PM.CFF_NAME,
                  PM.CFF_MASTER_SID,
                  PM.CREATED_DATE,
                  PM.CREATED_BY
      
          )
          SELECT * FROM CTE 
                      ]]>
        </query>
    </entity> 
    

  <entity id="getCffDiscountExpandCount">
        <query>
             <![CDATA[ 

            DECLARE @TEMP TABLE 
              ( 
                 TYPE VARCHAR(100) 
              ) 
            DECLARE @CFF_MASTER_SID  INT =?, 
                    @IS_NON_MANDATED BIT=0, 
                    @IS_MANDATED     BIT=0, 
                    @NM_RS_COUNT     INT=0, 
                    @NM_PPA_COUNT    INT=0, 
                    @M_COUNT         INT=0,
                    @CCP_IDS VARCHAR(MAX) = '?',
                    @RS_IDS VARCHAR(MAX) = '?'
            INSERT INTO @TEMP 
            SELECT DISTINCT FORECASTING_TYPE 
            FROM   PROJECTION_MASTER PM 
            WHERE  EXISTS (SELECT 1 
                           FROM   DBO.CFF_MASTER M 
                                  JOIN CFF_DETAILS D 
                                    ON D.CFF_MASTER_SID = M.CFF_MASTER_SID 
                                       AND 
                          PM.PROJECTION_MASTER_SID = D.PROJECTION_MASTER_SID 
                           WHERE  M.CFF_MASTER_SID = @CFF_MASTER_SID); 

            SELECT @IS_NON_MANDATED = 1 
            FROM   @TEMP 
            WHERE  TYPE = 'Non Mandated'; 

            SELECT @IS_MANDATED = 1 
            FROM   @TEMP 
            WHERE  TYPE = 'Mandated'; 

            SET @M_COUNT =CASE 
                            WHEN @IS_MANDATED = 1 THEN 2 
                            WHEN @IS_MANDATED = 0 THEN 0 
                          END 
                      ]]>
        </query>
    </entity>
    <entity id="getCffDiscountExpandCount_PROGRAM">
        <query>
             <![CDATA[ 
            SELECT @NM_RS_COUNT = ISNULL(COUNT(DISTINCT RS_MODEL_SID) ,0)
            FROM   NM_DISCOUNT_PROJ_MASTER NMDP 
            WHERE  EXISTS (SELECT 1 
                           FROM   CFF_DETAILS CFF 
                                  JOIN PROJECTION_DETAILS PD 
                                    ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                                       AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                                       ?
                                       @RSQUERY
                                  JOIN RS_MODEL RM 
                                    ON RM.RS_MODEL_SID = NMDP.RS_MODEL_SID 
                           WHERE  NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                                  AND CFF.CFF_MASTER_SID = @CFF_MASTER_SID); 

            

            -- PPA PROGRAM TYPE 
            SELECT @NM_PPA_COUNT = ISNULL(COUNT(DISTINCT RM.RS_MODEL_SID),0) 
            FROM   RS_MODEL RM 
            WHERE  EXISTS (SELECT 1 
                           FROM   CFF_DETAILS CFF 
                                  JOIN PROJECTION_DETAILS PD 
                                    ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                                       AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                                       ?
                                  JOIN NM_PPA_PROJECTION_MASTER NMDP 
                                    ON RM.RS_MODEL_SID = NMDP.RS_MODEL_SID 
                           WHERE  NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                                  AND CFF.CFF_MASTER_SID = @CFF_MASTER_SID); 

           

            SELECT @M_COUNT + @NM_RS_COUNT + @NM_PPA_COUNT; 
                      ]]>
        </query>
    </entity>
    <entity id="getCffDiscountExpandCount_PROGRAM_CATTEGORY">
        <query>
             <![CDATA[ 
            SELECT @NM_RS_COUNT = ISNULL(COUNT(DISTINCT PRICE_GROUP_TYPE) ,0)
            FROM   NM_DISCOUNT_PROJ_MASTER NMDP 
            WHERE  EXISTS (SELECT 1 
                           FROM   CFF_DETAILS CFF 
                                  JOIN PROJECTION_DETAILS PD 
                                    ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                                       AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                                       ?
                                  JOIN RS_MODEL RM 
                                    ON RM.RS_MODEL_SID = NMDP.RS_MODEL_SID 
                           WHERE  NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                                  AND CFF.CFF_MASTER_SID = @CFF_MASTER_SID); 

            
            -- PPA PROGRAM CATEGORY  
            SELECT @NM_PPA_COUNT = ISNULL(COUNT(DISTINCT RM.REBATE_PROGRAM_TYPE) ,0)
            FROM   RS_MODEL RM 
            WHERE  EXISTS (SELECT 1 
                           FROM   CFF_DETAILS CFF 
                                  JOIN PROJECTION_DETAILS PD 
                                    ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID 
                                       AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID 
                                       ?
                                  JOIN NM_PPA_PROJECTION_MASTER NMDP 
                                    ON RM.RS_MODEL_SID = NMDP.RS_MODEL_SID 
                           WHERE  NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                                  AND CFF.CFF_MASTER_SID = @CFF_MASTER_SID); 

            SELECT @M_COUNT + @NM_RS_COUNT + @NM_PPA_COUNT; 
                      ]]>
        </query>
    </entity>

         <entity id="getFileSelectionCount">
        <query>
             <![CDATA[ 
             select count(A.FILE_NAME) from CFF_FILE_SELECTION A
             LEFT join HELPER_TABLE HT on HT.HELPER_TABLE_SID = A.FILE_TYPE WHERE CFF_MASTER_SID=?
                      ]]>
        </query>
    </entity>      
        
        
    <entity id="getFileSelection">
        <query>
             <![CDATA[ 
             SELECT    A.CFF_FILE_SELECTION_SID,
          A.CFF_MASTER_SID,
          A.FILE_MANAGEMENT_SID,
          A.[FILE_NAME],
          A.[VERSION],
          ACTIVE_FROM=CASE
                        WHEN A.FILE_MANAGEMENT_SID IS NULL THEN A.ACTIVE_FROM
                        ELSE B.FROM_PERIOD
                      END,
          ACTIVE_TO=CASE
                      WHEN A.FILE_MANAGEMENT_SID IS NULL THEN A.ACTIVE_TO
                      ELSE B.TO_PERIOD
                    END,
          HT.ALIAS_NAME AS FILE_TYPE
FROM      CFF_FILE_SELECTION A
LEFT JOIN FILE_MANAGEMENT B ON A.FILE_MANAGEMENT_SID = B.FILE_MANAGEMENT_SID
LEFT JOIN HELPER_TABLE HT ON A.FILE_TYPE=HT.HELPER_TABLE_SID 
WHERE A.CFF_MASTER_SID=?
                      ]]>
        </query>
    </entity>    
    
        <entity id="fileselectiondistinctcount">
        <query>
             <![CDATA[ 
     select count(*) from (SELECT FILE_MANAGEMENT_SID,
       FORECAST_NAME,
       FILE_TYPE,
       VERSION,
       FROM_PERIOD,
       TO_PERIOD,
       ID=H.HELPER_TABLE_SID
FROM   (SELECT FILE_MANAGEMENT_SID,
               FORECAST_NAME,
               FILE_TYPE,
               VERSION,
               FROM_PERIOD,
               TO_PERIOD,
               ID
        FROM   (SELECT FT.FORECAST_NAME,
                       FT.[VERSION],
                       FILE_MANAGEMENT_SID,
                       HT.[ALIAS_NAME]                        AS FILE_TYPE,
                       FT.FROM_PERIOD,
                       FT.TO_PERIOD,
                       FT.FILE_TYPE                           AS ID,
                       Row_number()
                         OVER(
                           PARTITION BY FILE_TYPE
                           ORDER BY FILE_MANAGEMENT_SID DESC) AS RN
                FROM   FILE_MANAGEMENT FT
                       INNER JOIN HELPER_TABLE HT
                               ON HT.HELPER_TABLE_SID = FT.FILE_TYPE
                WHERE  ( CONVERT(DATE, FT.FROM_PERIOD) <= CONVERT(DATE, Getdate())
                         AND FT.FROM_PERIOD IS NOT NULL )
                       AND ( CONVERT(DATE, FT.TO_PERIOD) >= CONVERT(DATE, Getdate())
                              OR FT.TO_PERIOD IS NULL )
                        AND HT.LIST_NAME = 'FILE_TYPE'
                        AND FT.BUSINESS_UNIT LIKE '%?%'
                        AND FT.COMPANY = ? ) AS A
        WHERE  RN = 1 ?)A
       INNER JOIN HELPER_TABLE H
               ON A.FILE_TYPE = H.[ALIAS_NAME]
                  AND H.LIST_NAME = 'FILE_TYPE'  ) as co

     ]]>
        </query>
    </entity> 
    
    
        <entity id="updateActiveFromDate">
        <query>
             <![CDATA[ 
              Update dbo.CFF_MASTER SET ACTIVE_FROM_DATE=GEtDATE() WHERE CFF_MASTER_SID=?
                      ]]>
        </query>
    </entity>
   
    
    
       <entity id="updateActiveToDate">
        <query>
             <![CDATA[ 
                UPDATE CFF_MASTER
SET    ACTIVE_TO_DATE = Getdate()
WHERE  CFF_MASTER_SID IN (SELECT TOP 1 CFF_MASTER_SID
                          FROM   CFF_APPROVAL_DETAILS CD
                                 JOIN HELPER_TABLE H
                                   ON H.HELPER_TABLE_SID = CD.APPROVAL_STATUS
                          WHERE  DESCRIPTION = 'Approved'
                          ORDER  BY CFF_APPROVAL_DETAILS_SID DESC)
                      ]]>
        </query>
    </entity>
    
      <entity id="inclusionFlagUpdate">
         <query>
 <![CDATA[ 
     DECLARE @CFF_MASTER_SID INT = ?

UPDATE CD
SET    CD.SALES_INCLUSION = isnull(A.SALES_INCLUSION,'N')
FROM   CFF_DETAILS CD
       left JOIN (SELECT DISTINCT CF.CFF_DETAILS_SID,
                                   CF.CCP_DETAILS_SID,
                                   CASE
                                     WHEN DESCRIPTION = 'YES' THEN 'Y'
                                     ELSE 'N'
                                   END AS SALES_INCLUSION
                   -----INTO #SALES_INFORMATION
                   FROM   CFP_CONTRACT CFP
                          JOIN DBO.CFP_CONTRACT_DETAILS CFPD
                            ON CFPD.CFP_CONTRACT_SID = CFP.CFP_CONTRACT_SID
                          JOIN RS_CONTRACT RC
                            ON RC.CFP_CONTRACT_SID = CFP.CFP_CONTRACT_SID
                               AND CFP.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                         left JOIN RS_CONTRACT_DETAILS RCD
                            ON RCD.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
                          LEFT JOIN HELPER_TABLE HTC
                                 ON HTC.HELPER_TABLE_SID = CFP.SALES_INCLUSION
                          JOIN CCP_DETAILS CC
                            ON CFP.CONTRACT_MASTER_SID = CC.CONTRACT_MASTER_SID
                               AND CFPD.COMPANY_MASTER_SID = CC.COMPANY_MASTER_SID
                               AND RC.CONTRACT_MASTER_SID = CC.CONTRACT_MASTER_SID
                               AND RCD.ITEM_MASTER_SID = CC.ITEM_MASTER_SID
                          JOIN CFF_DETAILS CF
                            ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
                          JOIN PROJECTION_DETAILS PD
                            ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
                               AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
                   WHERE  CF.CFF_MASTER_SID = @CFF_MASTER_SID) A
               ON A.CFF_DETAILS_SID = CD.CFF_DETAILS_SID
where CD.CFF_MASTER_SID = @CFF_MASTER_SID

INSERT INTO CFF_DEDUCTION_INCLUSION
            (CFF_DETAILS_SID,
             RS_MODEL_SID,
             DEDUCTION_INCLUSION)
SELECT DISTINCT CFF_DETAILS_SID,
                RC.RS_MODEL_SID,
                CASE
                  WHEN DESCRIPTION = 'YES' THEN 'Y'
                  ELSE 'N'
                END AS DEDUCTION_INCLUSION
FROM   CFF_DETAILS CF
       JOIN PROJECTION_DETAILS PD
         ON CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
          AND PD.CCP_DETAILS_SID = CF.CCP_DETAILS_SID 
       JOIN CCP_DETAILS CC
         ON cc.CCP_DETAILS_SID = cf.CCP_DETAILS_SID
       JOIN RS_CONTRACT RC
         ON rc.CONTRACT_MASTER_SID = cc.CONTRACT_MASTER_SID
       JOIN RS_CONTRACT_DETAILS RCD
         ON RCD.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
            AND RCD.ITEM_MASTER_SID = CC.ITEM_MASTER_SID
       LEFT JOIN HELPER_TABLE HTC
              ON HTC.HELPER_TABLE_SID = RC.DEDUCTION_INCLUSION
WHERE  CF.CFF_MASTER_SID = @CFF_MASTER_SID
AND EXISTS (SELECT 1
            FROM   CFP_CONTRACT CFP1
                   JOIN CFP_CONTRACT_DETAILS CFP2
                     ON CFP1.CFP_CONTRACT_SID = CFP2.CFP_CONTRACT_SID
                        AND RC.CFP_CONTRACT_SID = CFP1.CFP_CONTRACT_SID
            WHERE  COMPANY_MASTER_SID =CC.COMPANY_MASTER_SID
                   AND CFP1.CONTRACT_MASTER_SID =CC.CONTRACT_MASTER_SID)



     ]]>
          </query>
    </entity>
    <entity id="get-business-units">
        <query>
    		<![CDATA[
                    SELECT
                            CM.COMPANY_MASTER_SID,
                            CM.COMPANY_ID,
                            CM.COMPANY_NO,
                            CM.COMPANY_NAME
                    FROM
                            COMPANY_MASTER CM
                    JOIN HELPER_TABLE HT ON
                            HT.HELPER_TABLE_SID = CM.COMPANY_TYPE
                    WHERE
                            HT.LIST_NAME LIKE 'COMPANY_TYPE'
                            AND HT.DESCRIPTION LIKE 'BUSINESS UNIT'
                            AND CM.INBOUND_STATUS <> 'D'
                            AND CM.COMPANY_MASTER_SID = @ORGANIZATION_KEY
                    ORDER BY COMPANY_NO;
		]]>
        </query>
    </entity>
    
    <entity id="get-companies">
        <query>
            <![CDATA[
                SELECT
                        CM.COMPANY_MASTER_SID,
                        CM.COMPANY_ID,
                        CM.COMPANY_NO,
                        CM.COMPANY_NAME
                FROM
                        COMPANY_MASTER CM
                JOIN HELPER_TABLE HT ON
                        HT.HELPER_TABLE_SID = CM.COMPANY_TYPE
                WHERE
                        HT.LIST_NAME LIKE 'COMPANY_TYPE'
                        AND HT.DESCRIPTION LIKE 'GLCOMP'
                        AND CM.INBOUND_STATUS <> 'D'
                        AND CM.COMPANY_MASTER_SID = @GLCOMP
                ORDER BY COMPANY_NO;
            ]]>
        </query>
    </entity>
    
    
    <entity id="get-inner-level-companies">
        <query>
            <![CDATA[
                SELECT DISTINCT
                    RLD.RELATIONSHIP_LEVEL_VALUES RELATIONSHIPLEVELVALUES,
                    RLD.LEVEL_NO LEVELNO,
                    RLD.PARENT_NODE PARENTNODE,
                    RLD.RELATIONSHIP_LEVEL_SID RELATIONSHIPSID,
                    HLD."TABLE_NAME" TABLENAME,
                    HLD.FIELD_NAME FIELDNAME,
                    RLD.HIERARCHY_NO HIERARCHYNO,
                    CM.COMPANY_MASTER_SID COMPANYSID,
                    RB.RELATIONSHIP_BUILDER_SID
                FROM
                    RELATIONSHIP_LEVEL_DEFINITION RLD,
                    RELATIONSHIP_BUILDER RB,
                    HIERARCHY_LEVEL_DEFINITION HLD,
                    COMPANY_MASTER CM,
                    GL_COST_CENTER_MASTER GLC,
                    ITEM_MASTER IM
                WHERE
                    RLD.RELATIONSHIP_BUILDER_SID = RB.RELATIONSHIP_BUILDER_SID
                    AND HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                    AND CM.COMPANY_MASTER_SID = RLD.RELATIONSHIP_LEVEL_VALUES
                    AND CM.INBOUND_STATUS <> 'D'
            ]]>
        </query>
    </entity>
    
    <entity id="get-inner-level-brand-therapeutic-class">
        <query>
            <![CDATA[
                select
                    distinct RLD.relationship_Level_Values,
                    RLD.level_No,
                    RLD.parent_Node,
                    RLD.relationship_Level_Sid,
                    HLD.table_Name,
                    HLD.field_Name,
                    RLD.hierarchy_No,
                    RB.relationship_Builder_Sid,
                    RLD.level_Name
                from
                    Relationship_Level_Definition RLD,
                    Relationship_Builder RB,
                    Hierarchy_Level_Definition HLD,
                    COMPANY_MASTER CM,
                    GL_COST_CENTER_MASTER GLC,
                    ITEM_MASTER IM
                where
                    RLD.relationship_Builder_Sid = RB.relationship_Builder_Sid
                    and HLD.hierarchy_Level_Definition_Sid = RLD.hierarchy_Level_Definition_Sid
      ]]>
        </query>
    </entity>
    
        <entity id="get-inner-level-products">
        <query>
            <![CDATA[
    SELECT
	DISTINCT RLD.RELATIONSHIP_LEVEL_VALUES RELATIONSHIPLEVELVALUES,
	RLD.LEVEL_NO LEVELNO,
	RLD.PARENT_NODE PARENTNODE,
	RLD.RELATIONSHIP_LEVEL_SID RELATIONSHIPSID,
	HLD."TABLE_NAME" TABLENAME,
	HLD.FIELD_NAME FIELDNAME,
	RLD.HIERARCHY_NO HIERARCHYNO,
	IM.ITEM_MASTER_SID ITEMSID,
	H1.DESCRIPTION FORM,
	H2.DESCRIPTION STRENGTH,
	RB.RELATIONSHIP_BUILDER_SID
from
	RELATIONSHIP_LEVEL_DEFINITION RLD,
	RELATIONSHIP_BUILDER RB,
	HIERARCHY_LEVEL_DEFINITION HLD,
	ITEM_MASTER IM,
	HELPER_TABLE H1,
	HELPER_TABLE H2,
        COMPANY_MASTER CM,
        GL_COST_CENTER_MASTER GLC
WHERE
	RLD.RELATIONSHIP_BUILDER_SID = RB.RELATIONSHIP_BUILDER_SID
	AND HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
	AND IM.ITEM_MASTER_SID = RLD.RELATIONSHIP_LEVEL_VALUES
	AND IM.INBOUND_STATUS <> 'D'
	AND H1.HELPER_TABLE_SID = IM.FORM
	AND H2.HELPER_TABLE_SID = IM.STRENGTH
        ]]>
        </query>
    </entity>
    
    
        <entity id="getFileEndDate">
        <query>
            <![CDATA[
            WITH CTE
             AS (SELECT FORECAST_NAME,
                        [VERSION],
                        DESCRIPTION AS FILE_TYPE
                 FROM   (SELECT FT.FORECAST_NAME,
                                FT.[VERSION],
                                HT.DESCRIPTION,
                                FT.FROM_PERIOD,
                                Row_number()
                                  OVER (
                                    PARTITION BY FT.FILE_TYPE
                                    ORDER BY FT.FROM_PERIOD DESC) RN
                         FROM   FILE_MANAGEMENT FT
                                INNER JOIN HELPER_TABLE HT
                                        ON HT.HELPER_TABLE_SID = FT.FILE_TYPE
                         WHERE  ( CONVERT(DATE, FT.FROM_PERIOD) <= CONVERT(DATE, Getdate())
                                  AND FT.FROM_PERIOD IS NOT NULL )
                                AND ( CONVERT(DATE, FT.TO_PERIOD) >= CONVERT(DATE, Getdate())
                                       OR FT.TO_PERIOD IS NULL )
                                AND HT.LIST_NAME = 'FILE_TYPE'
                                AND HT.DESCRIPTION IN ( 'EX-FACTORY SALES', 'DEMAND', 'INVENTORY WITHDRAWAL - FORECAST SUMMARY' )
                                AND FT.BUSINESS_UNIT = [?BUSINESS_UNIT] )A
                 WHERE  RN = 1)
            SELECT TOP 1 FORECAST_YEAR,
                         FORECAST_MONTH
            FROM   (SELECT Cast(FORECAST_YEAR AS INT)  FORECAST_YEAR,
                           Cast(FORECAST_MONTH AS INT) FORECAST_MONTH
                    FROM   FORECASTING_MASTER f
                           INNER JOIN CTE c
                                   ON c.FORECAST_NAME = f.FORECAST_NAME
                                      AND FORECAST_VER IN ( c.[VERSION], Floor(c.VERSION) )
                    UNION ALL
                    SELECT FORECAST_YEAR,
                           FORECAST_MONTH
                    FROM   DEMAND_FORECAST f
                           INNER JOIN CTE c
                                   ON c.FORECAST_NAME = f.FORECAST_NAME
                                      AND FORECAST_VER IN ( c.[VERSION], Floor(c.VERSION) )
                    UNION ALL
                    SELECT YEAR,
                           MONTH
                    FROM   INVENTORY_WD_PROJ_MAS f
                           INNER JOIN CTE c
                                   ON c.FORECAST_NAME = f.FORECAST_NAME
                                      AND FORECAST_VER IN ( c.[VERSION], Floor(c.VERSION) )) A
            ORDER  BY FORECAST_YEAR DESC,
                      FORECAST_MONTH DESC;
         ]]>
        </query>
    </entity>
    
       
    
    <entity id="CFFDETAILSINSERT">
        <query> 
            <![CDATA[
    DECLARE @CFF_MASTER_SID INT = ?

IF Object_id('TEMPDB.DBO.#CCP_DETAILS_SID') IS NOT NULL
  DROP TABLE #CCP_DETAILS_SID

SELECT CCP_DETAILS_SID
INTO   #CCP_DETAILS_SID
FROM   ST_CCP_HIERARCHY

;
WITH CTE
     AS (SELECT Row_number()
                  OVER(
                    PARTITION BY PD.CCP_DETAILS_SID
                    ORDER BY WM.CREATED_DATE DESC) RN,
                WORKFLOW_MASTER_SID,
                WORKFLOW_ID,
                WM.PROJECTION_MASTER_SID,
                PM.PROJECTION_NAME,
                PM.FORECASTING_TYPE,
                PD.CCP_DETAILS_SID,
                WORKFLOW_STATUS=HT.[DESCRIPTION],
                APPROVED_BY,
                WM.MODIFIED_DATE,
                WM.CREATED_BY,
                WM.CREATED_DATE
         FROM   PROJECTION_MASTER PM
                INNER JOIN WORKFLOW_MASTER WM
                        ON PM.PROJECTION_MASTER_SID = WM.PROJECTION_MASTER_SID
                INNER JOIN PROJECTION_DETAILS PD
                        ON PD.PROJECTION_MASTER_SID = WM.PROJECTION_MASTER_SID
                INNER JOIN HELPER_TABLE HT
                        ON WM.WORKFLOW_STATUS_ID = HT.HELPER_TABLE_SID
                JOIN #CCP_DETAILS_SID CD
                  ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
         WHERE  HT.[DESCRIPTION] = 'Approved'
         			AND NOT EXISTS(
					SELECT
						1
					FROM
						CFF_APPROVAL_DETAILS CAD
					JOIN CFF_DETAILS CFD ON
						CFD.CFF_MASTER_SID = CAD.CFF_MASTER_SID
					JOIN HELPER_TABLE HTE ON
						HTE.HELPER_TABLE_SID = CAD.APPROVAL_STATUS
						AND HTE.LIST_NAME = 'WORKFLOWSTATUS'
						AND HTE.[DESCRIPTION] IN('Approved')
					WHERE
						PD.PROJECTION_MASTER_SID = CFD.PROJECTION_MASTER_SID
						AND PD.CCP_DETAILS_SID = CFD.CCP_DETAILS_SID
				)
)
INSERT INTO CFF_DETAILS
            (CFF_MASTER_SID,
             PROJECTION_MASTER_SID,
             CCP_DETAILS_SID,
             INBOUND_STATUS)
SELECT @CFF_MASTER_SID,
       PROJECTION_MASTER_SID,
       CCP_DETAILS_SID,
       INBOUND_STATUS = 'A'
FROM   CTE
WHERE  RN = 1 
   ]]>
        </query> 
    </entity> 
    
      <entity id="DEDUCTION_LEVEL_NO">
        <query>
            <![CDATA[   
                select
      *
 from
      (
              select
                      LEVEL_NO,
                      dense_rank() 
                      OVER(                  
                      order by
                              CAST(LEVEL_NO AS INT)asc
                      ) rn
              from
                      dbo.RELATIONSHIP_LEVEL_DEFINITION
              where
                      RELATIONSHIP_BUILDER_SID = ?
      ) A
 where
     a.rn =1
   
   ]]>
        </query>
    </entity>
    
      <entity  id="DeductionRelationshipId">
         <query> 
        <![CDATA[            
        select
	RELATIONSHIP_BUILDER_SID,
	HIERARCHY_DEFINITION_SID
from
	dbo.RELATIONSHIP_BUILDER
where
	DEDUCTION_RELATION = ?;
         ]]>        
    </query>
    </entity> 
    
     <entity id="relation-ship-level-details">
        <query>
            <![CDATA[
                SELECT
                    DISTINCT RLD.LEVEL_NO,
                    convert(int,RLD.LEVEL_NO) as TREE_LEVEL_NO,
                    '?' as HIERARCHY_INDICATOR,
                    RLD.LEVEL_NAME,
                    RLD.HIERARCHY_LEVEL_DEFINITION_SID
                FROM
                    CFF_MASTER CFF
                JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON
                    RLD.RELATIONSHIP_BUILDER_SID = CFF.?
                WHERE
                    CFF.CFF_MASTER_SID = ?
                    AND RLD.LEVEL_NO >= ?
                    order by convert(int, RLD.level_no) ;
            ]]>
        </query>
    </entity>
    
    <entity id="discount-join">
        <query>
            <![CDATA[
                LEFT JOIN ( SELECT * FROM ST_CCP_DEDUCTION_HIERARCHY WHERE FILTER_CCPD=1 ) SPM ON SPM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID ?DEDJOIN 
            ]]>
        </query>
    </entity>
    
                                                                                  
    <entity id="sales-filter-customer">
        <query>
            <![CDATA[
SELECT HLD.FIELD_NAME,HLD.TABLE_NAME FROM dbo.CFF_MASTER PM 
 JOIN  HIERARCHY_LEVEL_DEFINITION HLD on HLD.HIERARCHY_DEFINITION_SID=PM.CUSTOMER_HIERARCHY_SID 
WHERE CFF_MASTER_SID=@PROJECTION_MASTER_SID AND HLD.LEVEL_NO=@LEVEL    
            ]]>
        </query>
    </entity>       
                              
    <entity id="sales-filter-product">
        <query>
            <![CDATA[
SELECT HLD.FIELD_NAME,HLD.TABLE_NAME FROM dbo.CFF_MASTER PM 
 JOIN  HIERARCHY_LEVEL_DEFINITION HLD on HLD.HIERARCHY_DEFINITION_SID=PM.PRODUCT_HIERARCHY_SID 
WHERE CFF_MASTER_SID=@PROJECTION_MASTER_SID AND HLD.LEVEL_NO=@LEVEL    
            ]]>
        </query>
    </entity>     
                                
    <entity id="primary-Key">
        <query>
            <![CDATA[
SELECT  DISTINCT PRIMARY_KEY_COLUMN_NAME FROM dbo.HIERARCHY_SINGLE_COLUMN_RELATION WHERE ACTUAL_TABLE_NAME='@TABLENAME'
            ]]>
        </query>
    </entity>           
                                 
                          
    <entity id="user-defined-join">
        <query>
            <![CDATA[
SELECT LEVEL_VALUE_REFERENCE FROM dbo.HIERARCHY_LEVEL_DEFINITION HLD 
JOIN dbo.CFF_MASTER  PM ON PM.@HIERARCHY_SID=HLD.HIERARCHY_DEFINITION_SID WHERE PM.CFF_MASTER_SID=@PROJECTION_MASTER_SID AND HLD.LEVEL_NO=@LEVEL
            ]]>
        </query>
    </entity>         
                            
    <entity id="user-defined-level-values">
        <query>
            <![CDATA[
SELECT
	DISTINCT 
	HLV.LEVEL_VALUES,HLV.HIERARCHY_LEVEL_VALUES_SID
FROM
	RELATIONSHIP_LEVEL_DEFINITION as RELATIONSHIP_LEVEL_DEFINITION
JOIN dbo.HIERARCHY_LEVEL_VALUES as HLV on
	RELATIONSHIP_LEVEL_DEFINITION.HIERARCHY_LEVEL_DEFINITION_SID = HLV.HIERARCHY_LEVEL_DEFINITION_SID
	and RELATIONSHIP_LEVEL_DEFINITION.RELATIONSHIP_LEVEL_VALUES=HLV.HIERARCHY_LEVEL_VALUES_SID
JOIN dbo.CFF_MASTER PM ON PM.CUST_RELATIONSHIP_BUILDER_SID=RELATIONSHIP_LEVEL_DEFINITION.RELATIONSHIP_BUILDER_SID
	WHERE RELATIONSHIP_LEVEL_DEFINITION.LEVEL_NO = @LEVEL AND PM.CFF_MASTER_SID=@PROJECTION_MASTER_SID
            ]]>
        </query>
    </entity>   
                                  
    <entity id="uom-dropdown-loading">
        <query>
            <![CDATA[
                  DECLARE @CFF_MASTER_SID INT = ?CFFMASTERSID
                  SELECT DISTINCT HT.DESCRIPTION
                  FROM CFF_DETAILS CD
                  JOIN CCP_DETAILS CD1 ON CD.CCP_DETAILS_SID = CD1.CCP_DETAILS_SID
                  JOIN ITEM_UOM IU ON IU.ITEM_MASTER_SID = CD1.ITEM_MASTER_SID
                  JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = IU.SECONDARY_UOM_CODE
                  WHERE CFF_MASTER_SID = @CFF_MASTER_SID 
            ]]>
        </query>
    </entity>                                 
    <entity id="update-Customer">
        <query>
            <![CDATA[
                    IF OBJECT_ID('TEMPDB..#CUSTOMER') IS NOT NULL
DROP TABLE #CUSTOMER
CREATE TABLE #CUSTOMER (HIERARCHY_NO VARCHAR(8000))
 
INSERT INTO #CUSTOMER (HIERARCHY_NO)
SELECT HIERARCHY_NO
FROM RELATIONSHIP_LEVEL_DEFINITION
WHERE RELATIONSHIP_LEVEL_VALUES IN (
              @RELATIONSIDS
              )
       AND RELATIONSHIP_BUILDER_SID = @BUILDERSID  
 

            ]]>
        </query>
    </entity>                                 
    <entity id="update-Product">
        <query>
            <![CDATA[
                    IF OBJECT_ID('TEMPDB..#PRODUCT') IS NOT NULL
                    DROP TABLE #PRODUCT

                    CREATE TABLE #PRODUCT (HIERARCHY_NO VARCHAR(8000))

                    INSERT INTO #PRODUCT (HIERARCHY_NO)
                    SELECT HIERARCHY_NO
                    FROM RELATIONSHIP_LEVEL_DEFINITION
                    WHERE RELATIONSHIP_LEVEL_VALUES IN (
                                  @RELATIONSIDS
                                  )
                    AND RELATIONSHIP_BUILDER_SID = @BUILDERSID   
            ]]>
        </query>
    </entity>                                 
    <entity id="update-Filter-CCP">
        <query>
            <![CDATA[
                    UPDATE SPM
                    SET SPM.FILTER_CCPD = 1 FROM ST_CCP_HIERARCHY ST
            ]]>
        </query>
    </entity>   
                                  
    <entity id="product-dynamic-filter">
        <query>
            <![CDATA[
                  IF OBJECT_ID('TEMPDB..#HIER_PRODUCT') IS NOT NULL
            DROP TABLE #HIER_PRODUCT


            CREATE TABLE #HIER_PRODUCT
            (
            HIERARCHY_NO VARCHAR(1000)
            )
            INSERT #HIER_PRODUCT
            (
            HIERARCHY_NO
            )

            SELECT HIERARCHY_NO FROM RELATIONSHIP_LEVEL_DEFINITION WHERE RELATIONSHIP_LEVEL_VALUES IN
            (
            @LEVELVALUES
            )
            and RELATIONSHIP_BUILDER_SID=@RELBUILDSID 
            ]]>
        </query>
    </entity>           
                          
    <entity id="customer-dynamic-filter">
        <query>
            <![CDATA[
                  IF OBJECT_ID('TEMPDB..#HIER_CUST') IS NOT NULL
                DROP TABLE #HIER_CUST
 
 
                CREATE TABLE #HIER_CUST
                (
               HIERARCHY_NO VARCHAR(1000)
                )
              INSERT #HIER_CUST
              (
              HIERARCHY_NO
              )

              SELECT HIERARCHY_NO FROM RELATIONSHIP_LEVEL_DEFINITION WHERE RELATIONSHIP_LEVEL_VALUES IN
              (
              @LEVELVALUES
              )
                and RELATIONSHIP_BUILDER_SID=@RELBUILDSID 
 
 
            ]]>
        </query>
    </entity>         
    <entity id="deduction-dynamic-filter">
        <query>
            <![CDATA[
                  IF OBJECT_ID('TEMPDB..#HIER_DEDUCTION_PROD') IS NOT NULL
                DROP TABLE #HIER_DEDUCTION_PROD


                CREATE TABLE #HIER_DEDUCTION_PROD
                (
                HIERARCHY_NO VARCHAR(1000)
                )
              INSERT #HIER_DEDUCTION_PROD
              (
              HIERARCHY_NO
              )

              SELECT HIERARCHY_NO FROM RELATIONSHIP_LEVEL_DEFINITION WHERE RELATIONSHIP_LEVEL_VALUES IN
              (
              @DEDLEVELVALUES
              )
              and RELATIONSHIP_BUILDER_SID=@DEDRELBUILDSID
              
              
            ]]>
        </query>
    </entity>         
                            
    <entity id="deduction-loading">
        <query>
            <![CDATA[
            
                  SELECT distinct LEVEL_NO,LEVEL_NAME FROM dbo.HIERARCHY_LEVEL_DEFINITION HLD 
                  JOIN dbo.CFF_MASTER PM ON PM.DEDUCTION_HIERARCHY_SID=HLD.HIERARCHY_DEFINITION_SID WHERE PM.CFF_MASTER_SID=@PROJID
 
 
            ]]>
        </query>
    </entity>    
    
     <entity id="discount-join-filter">
        <query>
            <![CDATA[
                LEFT JOIN ( SELECT * FROM ST_CCP_DEDUCTION_HIERARCHY WHERE FILTER_CCPD = 1 ) SPM ON SPM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
            ]]>
        </query>
    </entity>
    
    
    <entity id="getCffDiscountExpandDeductionCount">
        <query>
             <![CDATA[ 

            DECLARE @TEMP TABLE 
              ( 
                 TYPE VARCHAR(100) 
              ) 
            DECLARE @CFF_MASTER_SID  INT =?, 
                    @IS_NON_MANDATED BIT=0, 
                    @IS_MANDATED     BIT=0, 
                    @NM_RS_COUNT     INT=0, 
                    @NM_PPA_COUNT    INT=0, 
                    @M_COUNT         INT=0,
                    @CCP_IDS VARCHAR(MAX) = '?',
                    @RS_IDS VARCHAR(MAX) = '?'
            SELECT COUNT(DISTINCT @RS_SELECTION)
     FROM ST_CCP_DEDUCTION_HIERARCHY ST

     JOIN RS_CONTRACT RS ON RS.RS_CONTRACT_SID = ST.RS_CONTRACT_SID
       AND ST.FILTER_CCPD = 1
       @UDCJOIN
       @HELPERTABLEJOIN
       WHERE EXISTS(SELECT 1 FROM UDF_SPLITSTRING(@CCP_IDS,',') B WHERE B.TOKEN=ST.CCP_DETAILS_SID)
       AND EXISTS(SELECT 1 FROM UDF_SPLITSTRING(@RS_IDS,',') B WHERE B.TOKEN=ST.RS_CONTRACT_SID)

                      ]]>
        </query>
    </entity>
    
    <entity id="get-file-type-query">
        <query>
            <![CDATA[
        select
	HT.DESCRIPTION
        from
	dbo.FILE_MANAGEMENT FT
        JOIN dbo.HELPER_TABLE HT on
	FT.FILE_TYPE = HT.HELPER_TABLE_SID
        where
	TO_PERIOD is null
            ]]>
        </query>
    </entity>
    
</sql>