<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->


<sql>
    
    <entity id="getCountCustAndProdHier">
        <query> 
            <![CDATA[
                SELECT
                    Count(c.HIERARCHY_DEFINITION_SID)
                FROM
                    dbo.HIERARCHY_LEVEL_DEFINITION A,
                    HIERARCHY_LEVEL_DEFINITION b,
                    dbo.HIERARCHY_DEFINITION C
                WHERE
                    a.HIERARCHY_DEFINITION_SID = b.HIERARCHY_DEFINITION_SID
                    AND a.HIERARCHY_DEFINITION_SID = c.HIERARCHY_DEFINITION_SID
                    AND c.HIERARCHY_CATEGORY IN(
                        SELECT
                            ht.HELPER_TABLE_SID
                        FROM
                            dbo.HELPER_TABLE ht
                        WHERE
                            ht.LIST_NAME = 'HIERARCHY_CATEGORY'
                            AND ht.DESCRIPTION LIKE '$Hierarchy$'
                    )
                    AND b.HIERARCHY_DEFINITION_SID = c.HIERARCHY_DEFINITION_SID
                    AND a.LEVEL_NO IN(
                        SELECT
                            MAX(h.LEVEL_NO)
                        FROM
                            HIERARCHY_LEVEL_DEFINITION h
                        WHERE
                            h.HIERARCHY_DEFINITION_SID = a.HIERARCHY_DEFINITION_SID
                    )
                    AND b.LEVEL_NO IN(
                        SELECT
                            MIN(h.LEVEL_NO)
                        FROM
                            HIERARCHY_LEVEL_DEFINITION h
                        WHERE
                            h.HIERARCHY_DEFINITION_SID = b.HIERARCHY_DEFINITION_SID
                    )
                    AND c.HIERARCHY_NAME LIKE '$Hierarchy_Name$'
                    AND c.HIERARCHY_TYPE IN(
                        SELECT
                            ht.HELPER_TABLE_SID
                        FROM
                            dbo.HELPER_TABLE ht
                        WHERE
                            ht.DESCRIPTION LIKE '$Hierarchy_Type$'
                    )
                    ]]>    
        </query>
    </entity>
    <entity id="getCustAndProdHier">
        <query> 
            <![CDATA[
                SELECT 
                    DISTINCT c.HIERARCHY_DEFINITION_SID,
                    c.HIERARCHY_NAME,
                    a.LEVEL_NAME,
                    a.LEVEL_NO,
                    b.LEVEL_NO AS LOWEST_LEVEL,
                    c.CREATED_DATE,
                    c.MODIFIED_DATE,
                    c.VERSION_NO
                FROM
                    dbo.HIERARCHY_LEVEL_DEFINITION A,
                    HIERARCHY_LEVEL_DEFINITION b,
                    dbo.HIERARCHY_DEFINITION C
                WHERE
                    a.HIERARCHY_DEFINITION_SID = b.HIERARCHY_DEFINITION_SID
                    AND a.HIERARCHY_DEFINITION_SID = c.HIERARCHY_DEFINITION_SID
                    AND c.HIERARCHY_CATEGORY IN(
                        SELECT
                            ht.HELPER_TABLE_SID
                        FROM
                            dbo.HELPER_TABLE ht
                        WHERE
                            ht.LIST_NAME = 'HIERARCHY_CATEGORY'
                            AND ht.DESCRIPTION LIKE '$Hierarchy$'
                    )
                    AND b.HIERARCHY_DEFINITION_SID = c.HIERARCHY_DEFINITION_SID
                    AND a.LEVEL_NO IN(
                        SELECT
                            MAX(h.LEVEL_NO)
                        FROM
                            HIERARCHY_LEVEL_DEFINITION h
                        WHERE
                            h.HIERARCHY_DEFINITION_SID = a.HIERARCHY_DEFINITION_SID
                    )
                    AND b.LEVEL_NO IN(
                        SELECT
                            MIN(h.LEVEL_NO)
                        FROM
                            HIERARCHY_LEVEL_DEFINITION h
                        WHERE
                            h.HIERARCHY_DEFINITION_SID = b.HIERARCHY_DEFINITION_SID
                    )
                    AND c.HIERARCHY_NAME LIKE '$Hierarchy_Name$'
                    AND c.HIERARCHY_TYPE IN(
                        SELECT
                            ht.HELPER_TABLE_SID
                        FROM
                            dbo.HELPER_TABLE ht
                        WHERE
                            ht.DESCRIPTION LIKE '$Hierarchy_Type$'
                    )
            ]]>    
        </query>
    </entity>
    <entity id="getCustRelation">
        <query> 
            <![CDATA[
                SELECT
                    DISTINCT RELATIONSHIP_BUILDER_SID,
                    RELATIONSHIP_NAME,VERSION_NO
                FROM
                    dbo.RELATIONSHIP_BUILDER
                WHERE
                    HIERARCHY_DEFINITION_SID = 
            ]]>    
        </query>
    </entity>    
    <entity id="getParentLevels">
        <query> 
            <![CDATA[
                SELECT
                        DISTINCT RLD.LEVEL_NO,
                        RLD.RELATIONSHIP_LEVEL_VALUES,
                        RLD.PARENT_NODE,
                        RLD.LEVEL_NAME,
                        HLD.LEVEL_VALUE_REFERENCE,
                        HLD.TABLE_NAME,
                        HLD.FIELD_NAME,
                        RLD.RELATIONSHIP_LEVEL_SID,
                        RLD.HIERARCHY_NO,
                        RLD.RELATIONSHIP_BUILDER_SID
                FROM
                        dbo.RELATIONSHIP_LEVEL_DEFINITION RLD,
                        dbo.HIERARCHY_LEVEL_DEFINITION HLD,
                        dbo.RELATIONSHIP_BUILDER RB
                WHERE
                        RLD.HIERARCHY_LEVEL_DEFINITION_SID = HLD.HIERARCHY_LEVEL_DEFINITION_SID
                        AND RLD.RELATIONSHIP_BUILDER_SID = @RELATION_SID
                        AND RLD.HIERARCHY_NO in (?)                                         
                        AND RLD.RELATIONSHIP_BUILDER_SID=RB.RELATIONSHIP_BUILDER_SID
                        AND RLD.VERSION_NO=RB.VERSION_NO
                ORDER by RLD.HIERARCHY_NO ASC
            ]]>    
        </query>
    </entity>
    <entity id="getParentLevelsWithoutHier">
        <query> 
            <![CDATA[
                    SELECT
                            DISTINCT RLD.LEVEL_NO,
                            RLD.RELATIONSHIP_LEVEL_VALUES,
                            RLD.PARENT_NODE,
                            RLD.LEVEL_NAME,
                            HLD.LEVEL_VALUE_REFERENCE,
                            HLD.TABLE_NAME,
                            HLD.FIELD_NAME,
                            RLD.RELATIONSHIP_LEVEL_SID,
                            RLD.HIERARCHY_NO,
                            RLD.RELATIONSHIP_BUILDER_SID
                    FROM
                            dbo.RELATIONSHIP_LEVEL_DEFINITION RLD,
                            dbo.HIERARCHY_LEVEL_DEFINITION HLD
                    WHERE
                            RLD.HIERARCHY_LEVEL_DEFINITION_SID = HLD.HIERARCHY_LEVEL_DEFINITION_SID
                            AND RLD.RELATIONSHIP_LEVEL_SID =(
                                    select
                                            RBLD.RELATIONSHIP_BUILDER_SID
                                    from
                                            dbo.RELATIONSHIP_LEVEL_DEFINITION RBLD
                                    where
            ]]>    
        </query>
    </entity>
    <entity id="getDeductionAvailableLevels">
        <query> 
            <![CDATA[
                    SELECT DISTINCT 
                        @PARAMETERS
                    FROM   RS_CONTRACT A
                     JOIN   HELPER_TABLE H1 ON H1.HELPER_TABLE_SID = A.RS_CATEGORY
                     JOIN   HELPER_TABLE H2 ON H2.HELPER_TABLE_SID = A.RS_TYPE
                     JOIN   HELPER_TABLE H3 ON H3.HELPER_TABLE_SID = A.REBATE_PROGRAM_TYPE
                     LEFT JOIN   UDCS U ON U.MASTER_SID=A.RS_CONTRACT_SID AND U.MASTER_TYPE='RS_CONTRACT'
                     LEFT JOIN   HELPER_TABLE H5 ON H5.HELPER_TABLE_SID = U.UDC2
                     LEFT JOIN   HELPER_TABLE H6 ON H6.HELPER_TABLE_SID = U.UDC3
                     LEFT JOIN   HELPER_TABLE H7 ON H7.HELPER_TABLE_SID = U.UDC4
                     LEFT JOIN   HELPER_TABLE H8 ON H8.HELPER_TABLE_SID = U.UDC5
                     LEFT JOIN   HELPER_TABLE H9 ON H9.HELPER_TABLE_SID = U.UDC6

                     WHERE  A.RS_CATEGORY NOT IN ( 0)
                        AND A.RS_TYPE NOT IN ( 0 )
                        AND A.REBATE_PROGRAM_TYPE NOT IN ( 0 )
                        AND A.INBOUND_STATUS <> 'D'
                        --@UDCS NOT IN ( 0 ) 

                    ORDER BY 
            ]]>    
        </query>
    </entity>
    <entity id="getDeductionAvailableLevelsWithWhere">
        <query> 
            <![CDATA[
                    SELECT DISTINCT 
                        @PARAMETERS
                    FROM   RS_CONTRACT A
                        JOIN   HELPER_TABLE H1 ON H1.HELPER_TABLE_SID = A.RS_CATEGORY
                        JOIN   HELPER_TABLE H2 ON H2.HELPER_TABLE_SID = A.RS_TYPE
                        JOIN   HELPER_TABLE H3 ON H3.HELPER_TABLE_SID = A.REBATE_PROGRAM_TYPE
                        JOIN   UDCS U ON U.MASTER_SID=A.RS_CONTRACT_SID AND U.MASTER_TYPE='RS_CONTRACT'
                        JOIN   HELPER_TABLE H5 ON H5.HELPER_TABLE_SID = U.UDC2
                        JOIN   HELPER_TABLE H6 ON H6.HELPER_TABLE_SID = U.UDC3
                        JOIN   HELPER_TABLE H7 ON H7.HELPER_TABLE_SID = U.UDC4
                        JOIN   HELPER_TABLE H8 ON H8.HELPER_TABLE_SID = U.UDC5
                        JOIN   HELPER_TABLE H9 ON H9.HELPER_TABLE_SID = U.UDC6
                        WHERE $$$FILTER$$$  AND A.RS_CATEGORY NOT IN ( 0)
                        AND A.RS_TYPE NOT IN ( 0 )
                        AND A.REBATE_PROGRAM_TYPE NOT IN ( 0 )
                        AND A.INBOUND_STATUS <> 'D'
            ]]>    
        </query>
    </entity>
    <entity id="getViewSearchCount">
        <query> 
            <![CDATA[
          SELECT COUNT(*)
   FROM
    PROJECTION_MASTER PM 
          LEFT JOIN ARM_ADJUSTMENT_MASTER AM ON AM.PROJECTION_MASTER_SID=PM.PROJECTION_MASTER_SID
          LEFT JOIN HIERARCHY_DEFINITION HD1 ON HD1.HIERARCHY_DEFINITION_SID=PM.CUSTOMER_HIERARCHY_SID
          LEFT JOIN HIERARCHY_DEFINITION HD2 ON HD2.HIERARCHY_DEFINITION_SID=PM.PRODUCT_HIERARCHY_SID
          LEFT JOIN FORECASTING_VIEW_MASTER FVM ON FVM.PROJECTION_ID=PM.PROJECTION_MASTER_SID
          LEFT JOIN COMPANY_MASTER CM ON CM.COMPANY_MASTER_SID=PM.COMPANY_MASTER_SID
          LEFT JOIN COMPANY_MASTER CM_BU ON CM_BU.COMPANY_MASTER_SID=AM.BU_COMPANY_MASTER_SID
          LEFT JOIN RELATIONSHIP_BUILDER CUST_RB ON CUST_RB.RELATIONSHIP_BUILDER_SID=PM.CUST_RELATIONSHIP_BUILDER_SID
          LEFT JOIN RELATIONSHIP_BUILDER PROD_RB ON PROD_RB.RELATIONSHIP_BUILDER_SID=PM.PROD_RELATIONSHIP_BUILDER_SID
          JOIN ?.dbo.User_ usr
                         ON usr.UserId = FVM.CREATED_BY
where
            ]]>    
        </query>
    </entity>
    
    <entity id="insertProdHierarchy">
        <query> 
            <![CDATA[
                INSERT
                    INTO
                            PROJECTION_PROD_HIERARCHY(
                                    PROJECTION_MASTER_SID,
                                    RELATIONSHIP_LEVEL_SID
                            )
                    VALUES $$$$VALUES$$$
            ]]>    
        </query>
    </entity>
    
    <entity id="insertcustHierarchy">
        <query> 
            <![CDATA[
                INSERT
                    INTO
                            PROJECTION_CUST_HIERARCHY(
                                    PROJECTION_MASTER_SID,
                                    RELATIONSHIP_LEVEL_SID
                            )
                    VALUES $$$$VALUES$$$
            ]]>    
        </query>
    </entity>
    
    <entity id="insertProjectionMaster">
        <query> 
            <![CDATA[
                INSERT 
                    INTO 
                        PROJECTION_MASTER (
                            PROJECTION_NAME,
                            PROJECTION_DESCRIPTION,
                            FORECASTING_TYPE,
                            CREATED_BY,
                            CREATED_DATE,
                            CUSTOMER_HIERARCHY_SID,
                            PRODUCT_HIERARCHY_SID ,
                            CUSTOMER_HIERARCHY_LEVEL,
                            PRODUCT_HIERARCHY_LEVEL,
                            CUSTOMER_HIER_VERSION_NO,
                            PRODUCT_HIER_VERSION_NO,
                            COMPANY_MASTER_SID,
                            FROM_DATE ,
                            TO_DATE ,
                            SAVE_FLAG,
                            CUST_RELATIONSHIP_BUILDER_SID,
                            PROD_RELATIONSHIP_BUILDER_SID) 
                        VALUES ( $$$$VALUE$$$$ )
                        
                        SELECT SCOPE_IDENTITY();
            ]]>    
        </query>
    </entity>
    
    <entity id="selectProjectionMasterSid">
        <query> 
            <![CDATA[
                        SELECT PROJECTION_MASTER_SID FROM PROJECTION_MASTER 
                        WHERE PROJECTION_NAME = '$PROJECTION_NAME$' 
                        AND PROJECTION_DESCRIPTION = '$PROJECTION_DESCRIPTION$' 
                        AND FORECASTING_TYPE = '$FORECASTING_TYPE$' 
                        AND CREATED_BY = '$CREATED_BY$'
                        AND CREATED_DATE = '$CREATED_DATE$' ORDER BY PROJECTION_MASTER_SID DESC
            ]]>    
        </query>
    </entity>
    
    <entity id="insertArmAdjustmentMaster">
        <query> 
            <![CDATA[
                INSERT
                    INTO
                        ARM_ADJUSTMENT_MASTER(
                            PROJECTION_MASTER_SID,
                            BU_COMPANY_MASTER_SID,
                            DEDUCTION_LEVEL,
                            TRANSACTION_TYPE
                        )
                    VALUES( $$$$VALUES$$$$ );
            ]]>    
        </query>
    </entity>
    
    <entity id="duplicateViewCheck">
        <query> 
            <![CDATA[
                SELECT
                    FVM.VIEW_NAME
                FROM
                    FORECASTING_VIEW_MASTER FVM
                    JOIN PROJECTION_MASTER PM ON FVM.PROJECTION_ID = PM.PROJECTION_MASTER_SID
                    AND PM.FORECASTING_TYPE IN(@VIEWMODE)
                WHERE
                    VIEW_TYPE LIKE '@VIEW_TYPE' AND
                    VIEW_NAME = '$$$VN$$$'
            ]]>    
        </query>
    </entity>
    <entity id="getCCPMapQuery_Product">
        <query> 
            <![CDATA[
                DECLARE @HIERARCHY_DEFINITION_SID INT = @HDSID@,
                @RELATIONSHIP_BUILDER_SID INT = @RBSID@,
                @LEVEL_NO                 INT

                SELECT @LEVEL_NO = Max(LEVEL_NO)
                FROM   HIERARCHY_LEVEL_DEFINITION
                WHERE  HIERARCHY_DEFINITION_sid = @HIERARCHY_DEFINITION_SID

                IF Object_id('TEMPDB..#DETAILS') IS NOT NULL
                  DROP TABLE #DETAILS

                CREATE TABLE #DETAILS
                  (
                     RELATIONSHIP_LEVEL_SID INT,
                     MASTER_SID             INT,
                     LEVEL_NAME             VARCHAR(50)
                  )
                INSERT INTO #DETAILS
                SELECT RELATIONSHIP_LEVEL_SID,
                       RELATIONSHIP_LEVEL_VALUES AS MASTER_SID,
                       RLD.LEVEL_NAME
                FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                       JOIN HIERARCHY_LEVEL_DEFINITION HLD
                         ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                WHERE  RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID
                       AND HLD.HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID
                       AND RLD.LEVEL_NO = @LEVEL_NO

                IF EXISTS (SELECT 1
                           FROM   #DETAILS
                           WHERE  LEVEL_NAME = 'COMPANY')
                  INSERT INTO @TEMP_CCP_MAP@
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   GL_COST_CENTER_MASTER GL
                         JOIN COMPANY_MASTER CM
                           ON GL.COMPANY_CODE = CM.COMPANY_ID
                         JOIN ITEM_MASTER IM
                           ON IM.NDC8 = GL.NDC8
                         JOIN #DETAILS D
                           ON D.MASTER_SID = CM.COMPANY_MASTER_SID
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
                  WHERE  GL.INBOUND_STATUS <> 'D'
                         AND NOT EXISTS (SELECT 1
                                         FROM   @TEMP_CCP_MAP@ CC
                                         WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID)

                IF EXISTS (SELECT 1
                           FROM   #DETAILS
                           WHERE  LEVEL_NAME = 'BRAND')
                  INSERT INTO @TEMP_CCP_MAP@
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   ITEM_MASTER IM
                         JOIN #DETAILS D
                           ON D.MASTER_SID = IM.BRAND_MASTER_SID
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
                              AND NOT EXISTS (SELECT 1
                                              FROM   @TEMP_CCP_MAP@ CC
                                              WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                     AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID)

                IF EXISTS (SELECT 1
                           FROM   #DETAILS
                           WHERE  LEVEL_NAME IN ('NDC','N.D.C.'))
                  INSERT INTO @TEMP_CCP_MAP@
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   #DETAILS D
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = D.MASTER_SID
                              AND NOT EXISTS (SELECT 1
                                              FROM   @TEMP_CCP_MAP@ CC
                                              WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                     AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID)

                IF EXISTS (SELECT 1
                           FROM   #DETAILS
                           WHERE  LEVEL_NAME LIKE '%THERAPEUTIC%CLASS%')
                  INSERT INTO @TEMP_CCP_MAP@
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   ITEM_MASTER IM
                         JOIN #DETAILS D
                           ON D.MASTER_SID = IM.THERAPEUTIC_CLASS
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
                              AND NOT EXISTS (SELECT 1
                                              FROM   @TEMP_CCP_MAP@ CC
                                              WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                     AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID) 

            ]]>    
        </query>
    </entity>
    <entity id="ccpMergeQuery">
        <query> 
            <![CDATA[
              DECLARE @PROJECTION_MASTER_SID INT=[$PROJECTION_MASTER_SID]
         
            MERGE ARM_ADJUSTMENT_DETAILS AS TARGET
            USING (SELECT DISTINCT CCP_PROJ.PROJECTION_MASTER_SID,
                                   CCP_PROJ.CCP_DETAILS_SID,
                                   R1.RS_MODEL_SID
                   FROM   (SELECT @PROJECTION_MASTER_SID AS PROJECTION_MASTER_SID,
                                  CCP_DETAILS_SID
                FROM   [$ST_CCP_HIERARCHY])CCP_PROJ
                          JOIN CCP_DETAILS B
                            ON CCP_PROJ.CCP_DETAILS_SID = B.CCP_DETAILS_SID
                          JOIN RS_CONTRACT R1
                            ON R1.CONTRACT_MASTER_SID = B.CONTRACT_MASTER_SID
                          JOIN RS_CONTRACT_DETAILS R2
                            ON R2.RS_CONTRACT_SID = R1.RS_CONTRACT_SID
                               AND R2.ITEM_MASTER_SID = B.ITEM_MASTER_SID
                          JOIN ARM_DEDUCTION_SELECTION ADS
                            ON ADS.PROJECTION_MASTER_SID = CCP_PROJ.PROJECTION_MASTER_SID
                               AND R1.RS_CONTRACT_SID = ADS.RS_CONTRACT_SID
                   WHERE  R1.INBOUND_STATUS <> 'D'
                          AND R2.INBOUND_STATUS <> 'D'
                                   AND EXISTS(SELECT 1
                                     FROM   CFP_CONTRACT CFP1
                                            JOIN CFP_CONTRACT_DETAILS CFP2
                                   ON CFP1.CFP_CONTRACT_SID =
                                      CFP2.CFP_CONTRACT_SID
                                      AND R1.CFP_CONTRACT_SID =
                                          CFP1.CFP_CONTRACT_SID
                                     WHERE  COMPANY_MASTER_SID = B.COMPANY_MASTER_SID
                                 AND CFP1.CONTRACT_MASTER_SID =
                                     B.CONTRACT_MASTER_SID)) AS SOURCE
            ON ( TARGET.PROJECTION_MASTER_SID = SOURCE.PROJECTION_MASTER_SID
                 AND TARGET.CCP_DETAILS_SID = SOURCE.CCP_DETAILS_SID
                 AND TARGET.RS_MODEL_SID = SOURCE.RS_MODEL_SID )
            WHEN NOT MATCHED THEN
              INSERT (PROJECTION_MASTER_SID,
                      CCP_DETAILS_SID,
                      RS_MODEL_SID)
              VALUES (SOURCE.PROJECTION_MASTER_SID,
                      SOURCE.CCP_DETAILS_SID,
                      SOURCE.RS_MODEL_SID);

            ]]>    
        </query>
    </entity>
    
    <entity id="FETCH_SAVED_PROJECTION">
        <query> 
            <![CDATA[
                    SELECT    PM.PROJECTION_DESCRIPTION, 
                        AM.TRANSACTION_TYPE, 
                        ARC.TRANSACTION_NAME             AS ADJUSTMENT_TYPE, 
                        PM.COMPANY_MASTER_SID            AS GL_COMP, 
                        AM.BU_COMPANY_MASTER_SID         AS BUSINESS_UNIT_SID, 
                        AM.DEDUCTION_LEVEL               AS DETECTION_LEVEL, 
                        PM.CUSTOMER_HIERARCHY_SID           CUST_HIEARARCHY_SID, 
                        HD1.HIERARCHY_NAME               AS CUST_HIERARCHY_NAME, 
                        PM.CUST_RELATIONSHIP_BUILDER_SID AS CUST_RERLATION, 
                        PM.CUSTOMER_HIERARCHY_LEVEL      AS CUST_LEVEL_NO, 
                        PM.PRODUCT_HIERARCHY_SID         AS PROD_HIERARCHY_SID, 
                        HD2.HIERARCHY_NAME               AS PROD_HIERARCHY_NAME, 
                        PM.PROD_RELATIONSHIP_BUILDER_SID AS PROD_RERLATION, 
                        PM.PRODUCT_HIERARCHY_LEVEL       AS PROD_LEVEL_NO, 
                        FVM.VIEW_NAME                    AS VIEW_NAME, 
                        CASE WHEN HT_GL.DESCRIPTION='GLCOMP' THEN CM.COMPANY_NAME ELSE NULL END AS COMPANY_NAME, 
                        PM.PROJECTION_MASTER_SID, 
                        FVM.VIEW_ID, 
                        HD1.VERSION_NO, 
                        HD1.NO_OF_LEVELS, 
                        HD2.VERSION_NO, 
                        HD2.NO_OF_LEVELS, 
                        FVM.CREATED_BY, 
                        FVM.VIEW_TYPE, 
                        CASE WHEN HT_BU.DESCRIPTION='Business Unit' THEN CM_BU.COMPANY_NAME ELSE NULL END AS BUSINESS_UNIT, 
                        PM.FROM_DATE, 
                        PM.TO_DATE, 
                        FVM.CREATED_DATE, 
                        FVM.MODIFIED_DATE , 
                        CUST_RB.RELATIONSHIP_NAME AS CUST_RELATIONSHIP_NAME, 
                        PROD_RB.RELATIONSHIP_NAME AS PROD_RELATIONSHIP_NAME, 
                        USR.FIRSTNAME, 
                        AM.CALCULATION_PROFILE_MASTER_SID, 
                        CPM.PROFILE_NAME 
                    FROM      PROJECTION_MASTER PM 
                    LEFT JOIN ARM_ADJUSTMENT_MASTER AM 
                    ON        AM.PROJECTION_MASTER_SID=PM.PROJECTION_MASTER_SID
                    LEFT JOIN ARM_ADJUSTMENT_CONFIG ARC 
                    ON        ARC.ARM_ADJUSTMENT_CONFIG_SID=AM.TRANSACTION_TYPE 
                    LEFT JOIN HIERARCHY_DEFINITION HD1 
                    ON        HD1.HIERARCHY_DEFINITION_SID=PM.CUSTOMER_HIERARCHY_SID 
                    LEFT JOIN HIERARCHY_DEFINITION HD2 
                    ON        HD2.HIERARCHY_DEFINITION_SID=PM.PRODUCT_HIERARCHY_SID 
                    LEFT JOIN FORECASTING_VIEW_MASTER FVM 
                    ON        FVM.PROJECTION_ID=PM.PROJECTION_MASTER_SID 
                    LEFT JOIN COMPANY_MASTER CM 
                    ON        CM.COMPANY_MASTER_SID=PM.COMPANY_MASTER_SID
                    LEFT JOIN HELPER_TABLE HT_GL
                    ON        CM.COMPANY_TYPE=HT_GL.HELPER_TABLE_SID 
                    LEFT JOIN COMPANY_MASTER CM_BU 
                    ON        CM_BU.COMPANY_MASTER_SID=AM.BU_COMPANY_MASTER_SID
                    LEFT JOIN HELPER_TABLE HT_BU
                    ON        CM_BU.COMPANY_TYPE=HT_BU.HELPER_TABLE_SID
                    LEFT JOIN RELATIONSHIP_BUILDER CUST_RB 
                    ON        CUST_RB.RELATIONSHIP_BUILDER_SID=PM.CUST_RELATIONSHIP_BUILDER_SID 
                    LEFT JOIN RELATIONSHIP_BUILDER PROD_RB 
                    ON        PROD_RB.RELATIONSHIP_BUILDER_SID=PM.PROD_RELATIONSHIP_BUILDER_SID 
                    JOIN  ?.DBO.USER_ USR 
                    ON        USR.USERID = FVM.CREATED_BY 
                    LEFT JOIN DBO.CALCULATION_PROFILE_MASTER CPM 
                    ON        CPM.CALCULATION_PROFILE_MASTER_SID=AM.CALCULATION_PROFILE_MASTER_SID 
                where
            ]]>    
        </query>
    </entity>
    <entity id="DEDUCTION_SAVED_PROJECTION">
        <query> 
            <![CDATA[
                Insert INTO ARM_DEDUCTION_SELECTION(PROJECTION_MASTER_SID,RS_CONTRACT_SID) Values
            ]]>    
        </query>
    </entity>
    <entity id="ARM_ADJUSTMENT_MASTER_SAVED_PROJECTION">
        <query> 
            <![CDATA[
                Insert INTO ARM_ADJUSTMENT_MASTER 

               (PROJECTION_MASTER_SID,BU_COMPANY_MASTER_SID,DEDUCTION_LEVEL,TRANSACTION_TYPE,CALCULATION_PROFILE_MASTER_SID) Values(@PROJECTION_MASTER_SID,@BU_COMPANY_MASTER_SID,@DEDUCTION_LEVEL,@ADJ_TYPE,@CALCULATION_PROFILE_MASTER_SID)
            ]]>    
        </query>
    </entity> 
    <entity id="updateSelectedView">
        <query> 
            <![CDATA[

               Update ARM_ADJUSTMENT_MASTER set DEDUCTION_LEVEL=@DEDUCTION_LEVEL , BU_COMPANY_MASTER_SID=@BU_COMPANY_MASTER_SID,TRANSACTION_TYPE=@ADJ_TYPE
               @CALCULATION_PROFILE_MASTER_SID
               where PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
               Delete PROJECTION_CUST_HIERARCHY where PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
               Delete PROJECTION_PROD_HIERARCHY  where PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
               Delete ARM_DEDUCTION_SELECTION  where PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
               Update dbo.FORECASTING_VIEW_MASTER set MODIFIED_BY=@MODIFIED_BY ,MODIFIED_DATE='@MODIFIED_DATE'
               where VIEW_ID=@VIEW_ID;
            ]]>    
        </query>
    </entity> 
    <entity id="updateProjectionMaster">
        <query> 
            <![CDATA[
               Update Projection_Master 
Set PROJECTION_DESCRIPTION=@PROJECTION_DESCRIPTION,FORECASTING_TYPE=@FORECASTING_TYPE,COMPANY_MASTER_SID=@COMPANY_MASTER_SID,CUSTOMER_HIERARCHY_SID=@CUSTOMER_HIERARCHY_SID,
    PRODUCT_HIERARCHY_SID=@PRODUCT_HIERARCHY_SID,CUSTOMER_HIERARCHY_LEVEL=@CUSTOMER_HIERARCHY_LEVEL,PRODUCT_HIERARCHY_LEVEL=@PRODUCT_HIERARCHY_LEVEL,
    CUST_RELATIONSHIP_BUILDER_SID=@CUST_RELATIONSHIP_BUILDER_SID,PROD_RELATIONSHIP_BUILDER_SID=@PROD_RELATIONSHIP_BUILDER_SID,FROM_DATE = @FROM_DATE,TO_DATE = @TO_DATE, MODIFIED_DATE = '@MODIFIED_DATE'
where PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID  ;
            ]]>    
        </query>
    </entity>
    <entity id="deletePrivatePublicViews">
        <query> 
            <![CDATA[
            delete from dbo.FORECASTING_VIEW_MASTER where  PROJECTION_ID=@PROJECTION_MASTER_SID;
            delete from dbo.PROJECTION_CUST_HIERARCHY where  PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
            delete from dbo.PROJECTION_PROD_HIERARCHY where  PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
            delete from dbo.ARM_DEDUCTION_SELECTION where  PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
            delete from dbo.ARM_ADJUSTMENT_MASTER where  PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
            delete from dbo.PROJECTION_MASTER where  PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
            ]]>    
        </query>
    </entity>
    
    <entity id="fetchDataSelectionForWorkflow">
        <query> 
            <![CDATA[
            SELECT
                    PM.PROJECTION_DESCRIPTION,
                    PM.FORECASTING_TYPE AS FORECAST_TYPE,
                    PM.COMPANY_MASTER_SID as GL_COMP,
                    AM.BU_COMPANY_MASTER_SID AS BUSINESS_UNIT,
                    AM.DEDUCTION_LEVEL AS DETECTION_LEVEL,
                    PM.CUSTOMER_HIERARCHY_SID CUST_HIEARARCHY_SID,
                    HD1.HIERARCHY_NAME AS CUST_HIERARCHY_NAME,
                    PM.CUST_RELATIONSHIP_BUILDER_SID AS CUST_RERLATION,
                    PM.CUSTOMER_HIERARCHY_LEVEL AS CUST_LEVEL_NO,
                    PM.PRODUCT_HIERARCHY_SID AS PROD_HIERARCHY_SID,
                    HD2.HIERARCHY_NAME AS PROD_HIERARCHY_NAME,
                    PM.PROD_RELATIONSHIP_BUILDER_SID AS PROD_RERLATION,
                    PM.PRODUCT_HIERARCHY_LEVEL AS PROD_LEVEL_NO,
                    FORMAT(PM.FROM_DATE, 'yyyy-MM-dd') AS FROM_PERIOD,
                    FORMAT(PM.TO_DATE, 'yyyy-MM-dd') AS TO_PERIOD,
                    PM.CUSTOMER_HIER_VERSION_NO AS CUST_HIERARCHY_VERSION,
                    PM.PRODUCT_HIER_VERSION_NO AS PROD_HIERARCHY_VERSION
                FROM
                    PROJECTION_MASTER PM
                JOIN ARM_ADJUSTMENT_MASTER AM ON
                    AM.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
                JOIN HIERARCHY_DEFINITION HD1 ON
                    HD1.HIERARCHY_DEFINITION_SID = PM.CUSTOMER_HIERARCHY_SID
                JOIN HIERARCHY_DEFINITION HD2 ON
                    HD2.HIERARCHY_DEFINITION_SID = PM.PRODUCT_HIERARCHY_SID
                JOIN COMPANY_MASTER CM ON
                    CM.COMPANY_MASTER_SID = PM.COMPANY_MASTER_SID
                JOIN COMPANY_MASTER CM_BU ON
                    CM_BU.COMPANY_MASTER_SID = AM.BU_COMPANY_MASTER_SID
                where PM.PROJECTION_MASTER_SID = ?
            ]]>    
        </query>
    </entity>
    
    <entity id="LoadAdjustmentType">
        <query> 
     <![CDATA[
     SELECT ADJ.ARM_ADJUSTMENT_CONFIG_SID,HT.DESCRIPTION,ADJ.TRANSACTION_NAME FROM ARM_ADJUSTMENT_CONFIG ADJ
     JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = ADJ.METHODOLGY
     ]]>    
        </query>
    </entity>
    
    <entity id="LoadAdjustmentTypeForRateConfig">
        <query> 
     <![CDATA[
     SELECT ADJ.ARM_ADJUSTMENT_CONFIG_SID,HT.DESCRIPTION,ADJ.TRANSACTION_NAME FROM ARM_ADJUSTMENT_CONFIG ADJ
     JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = ADJ.METHODOLGY
     where HT.DESCRIPTION in ('Transaction 1 - Pipeline Accrual','Transaction 3 - Pipeline Inventory True-up','Transaction 6 - Inflation Adjustment','Transaction 7 - Distribution Fees','Transaction 8 - Return Reserve')
     ]]>    
        </query>
    </entity>
    <entity id="getProductHierarchyInnerLevel">
        <query> 
     <![CDATA[
     DECLARE @PROD_RELATION INT = ?,
@PROD_HIER INT = ?,
@TEST_LEVEL_NO INT = ? 

$$CREATETEMPDEDUCTION$$ 

$$CREATETEMPCUSTSELECTION$$

$$USETEMPCUSTSELECTION$$

SELECT
        DISTINCT RLD.RELATIONSHIP_LEVEL_VALUES AS RELATIONSHIP_LEVEL_VALUES,
	RLD.LEVEL_NO AS LEVEL_NO,
	RLD.PARENT_NODE AS PARENT_NODE,
        RLD.RELATIONSHIP_LEVEL_SID AS RELATIONSHIP_LEVEL_SID,
	HLD."TABLE_NAME" AS TABLE_NAME,
	HLD.FIELD_NAME AS FIELD_NAME,
	RLD.HIERARCHY_NO AS HIERARCHY_NO,
        RLD.RELATIONSHIP_BUILDER_SID AS RELATIONSHIP_BUILDER_SID,
        RLD.LEVEL_NAME AS LEVEL_NAME
        $$SELECTPRODNDC$$
from
	#ccp_map CP
$$JOINTEMPCUSTSELECTION$$
JOIN RELATIONSHIP_LEVEL_DEFINITION RD on
	CP.RELATIONSHIP_LEVEL_SID = RD.RELATIONSHIP_LEVEL_SID
	and RD.RELATIONSHIP_BUILDER_SID = @PROD_RELATION
JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON
	RD.HIERARCHY_NO LIKE RLD.HIERARCHY_NO + '%'
                        AND RLD.LEVEL_NO = @TEST_LEVEL_NO
                        AND RLD.RELATIONSHIP_BUILDER_SID = RD.RELATIONSHIP_BUILDER_SID
JOIN HIERARCHY_LEVEL_DEFINITION HLD ON
	HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                        AND HLD.HIERARCHY_DEFINITION_SID = @PROD_HIER
JOIN RELATIONSHIP_BUILDER RB ON RB.RELATIONSHIP_BUILDER_SID = RLD.RELATIONSHIP_BUILDER_SID
AND RB.VERSION_NO = RLD.VERSION_NO                        
JOIN CCP_DETAILS CCP on
	CCP.CCP_DETAILS_SID = CP.CCP_DETAILS_SID 
JOIN RS_CONTRACT RS ON
	RS.CONTRACT_MASTER_SID = CCP.CONTRACT_MASTER_SID
JOIN RS_CONTRACT_DETAILS R2
         ON R2.RS_CONTRACT_SID = RS.RS_CONTRACT_SID
            AND R2.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID 
$$JOINTEMPDEDUCTION$$
                       JOIN IFP_CONTRACT_DETAILS IFP ON
                    IFP.IFP_CONTRACT_SID = RS.IFP_CONTRACT_SID
                    AND CCP.ITEM_MASTER_SID = IFP.ITEM_MASTER_SID
            JOIN ITEM_MASTER IM ON CCP.ITEM_MASTER_SID=IM.ITEM_MASTER_SID
                    $$JOINGLCOMP$$
                    $$JOINBUSINESSUNIT$$
                    $$JOINPRODNDC$$

     ]]>    
        </query>
    </entity>
    <entity id="createTempDeduction">
        <query> 
     <![CDATA[
     DECLARE @RS_CON           VARCHAR(MAX)='?'
     IF OBJECT_ID('TEMPDB..#TEMP_DEDUCTION')IS NOT NULL 
  DROP TABLE #TEMP_DEDUCTION 

CREATE TABLE #TEMP_DEDUCTION 
  ( 
     RS_CONTRACT_SID INT 
  ) 

INSERT INTO #TEMP_DEDUCTION 
            (RS_CONTRACT_SID) 
SELECT CAST(TOKEN AS INT) 
FROM   UDF_SPLITSTRING(@RS_CON, ',');
     ]]>    
        </query>
    </entity>
    <entity id="createSelTempCustRelation">
        <query> 
     <![CDATA[
     DECLARE @CUST_REL_SID           VARCHAR(MAX)='?'
     IF OBJECT_ID('TEMPDB..#TEMP_CUST_REL')IS NOT NULL 
  DROP TABLE #TEMP_CUST_REL 

CREATE TABLE #TEMP_CUST_REL 
  ( 
     RELATIONSHIP_LEVEL_SID INT 
  ) 

INSERT INTO #TEMP_CUST_REL 
            (RELATIONSHIP_LEVEL_SID) 
SELECT CAST(TOKEN AS INT) 
FROM   UDF_SPLITSTRING(@CUST_REL_SID, ',');
     ]]>    
        </query>
    </entity>
    <entity id="joinTempDeduction">
        <query> 
     <![CDATA[
     JOIN #TEMP_DEDUCTION TD on RS.RS_CONTRACT_SID=TD.RS_CONTRACT_SID
     ]]>    
        </query>
    </entity>
    <entity id="joinSelTempCustRelation">
        <query> 
     <![CDATA[
     JOIN #CTE CT ON CT.CCP_DETAILS_SID=CP.CCP_DETAILS_SID
     ]]>    
        </query>
    </entity>
    <entity id="useSelTempCustRelation">
        <query> 
     <![CDATA[
     DECLARE @CUST_RELATION INT=?
       IF OBJECT_ID('TEMPDB..#cte')IS NOT NULL
   DROP TABLE #cte
 SELECT
                       CP.* into #cte
		from
			#ccp_map CP JOIN RELATIONSHIP_LEVEL_DEFINITION RLD on
			RLD.RELATIONSHIP_BUILDER_SID = @CUST_RELATION
			JOIN #TEMP_CUST_REL TCR on RLD.RELATIONSHIP_LEVEL_SID=TCR.RELATIONSHIP_LEVEL_SID
			join RELATIONSHIP_LEVEL_DEFINITION RLD1 on
			RLD1.RELATIONSHIP_BUILDER_SID = RLD.RELATIONSHIP_BUILDER_SID
			and RLD1.HIERARCHY_NO like RLD.HIERARCHY_NO + '%'
			AND RLD1.RELATIONSHIP_LEVEL_SID = CP.RELATIONSHIP_LEVEL_SID
     ]]>    
        </query>
    </entity>
    <entity id="joinBusinessUnit">
        <query> 
     <![CDATA[ 
	AND IM.ORGANIZATION_KEY=?
     ]]>    
        </query>
    </entity>
    <entity id="joinGlComp">
        <query> 
     <![CDATA[
	JOIN GL_COST_CENTER_MASTER GL ON GL.NDC8=IM.NDC8
        JOIN COMPANY_MASTER GLCM ON COMPANY_CODE=GLCM.COMPANY_ID AND GLCM.COMPANY_MASTER_SID=?
     ]]>    
        </query>
    </entity>
    <entity id="getCustomerHierarchyInnerLevel">
        <query> 
     <![CDATA[
            DECLARE @CUST_RELATION INT=?,
        @CUST_HIER     INT=?, 
                    @TEST_LEVEL_NO     INT=?

$$CREATETEMPDEDUCTION$$

select
	DISTINCT RLD.RELATIONSHIP_LEVEL_VALUES AS RELATIONSHIP_LEVEL_VALUES,
	RLD.LEVEL_NO AS LEVEL_NO,
	RLD.PARENT_NODE AS PARENT_NODE,
        RLD.RELATIONSHIP_LEVEL_SID AS RELATIONSHIP_LEVEL_SID,
	HLD."TABLE_NAME" AS TABLE_NAME,
	HLD.FIELD_NAME AS FIELD_NAME,
	RLD.HIERARCHY_NO AS HIERARCHY_NO,
        RLD.RELATIONSHIP_BUILDER_SID AS RELATIONSHIP_BUILDER_SID,
        RLD.LEVEL_NAME AS LEVEL_NAME
from
	#ccp_map CP 
join RELATIONSHIP_LEVEL_DEFINITION RD on
	CP.RELATIONSHIP_LEVEL_SID = RD.RELATIONSHIP_LEVEL_SID
	and RD.RELATIONSHIP_BUILDER_SID = @CUST_RELATION
JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON
	RD.HIERARCHY_NO LIKE RLD.HIERARCHY_NO + '%'
                        AND RLD.LEVEL_NO = @TEST_LEVEL_NO
                        AND RLD.RELATIONSHIP_BUILDER_SID = RD.RELATIONSHIP_BUILDER_SID
JOIN HIERARCHY_LEVEL_DEFINITION HLD ON
	HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                        AND HLD.HIERARCHY_DEFINITION_SID = @CUST_HIER
JOIN RELATIONSHIP_BUILDER RB ON RB.RELATIONSHIP_BUILDER_SID = RLD.RELATIONSHIP_BUILDER_SID
AND RB.VERSION_NO = RLD.VERSION_NO
JOIN CCP_DETAILS CCP on
	CCP.CCP_DETAILS_SID = CP.CCP_DETAILS_SID 
JOIN RS_CONTRACT RS ON
	RS.CONTRACT_MASTER_SID = CCP.CONTRACT_MASTER_SID
$$JOINTEMPDEDUCTION$$
JOIN CFP_CONTRACT_DETAILS CFP ON
	CFP.CFP_CONTRACT_SID = RS.CFP_CONTRACT_SID
                        AND CCP.COMPANY_MASTER_SID = CFP.COMPANY_MASTER_SID
     ]]>    
        </query>
    </entity>
    <entity id="getProdRelation">
        <query> 
            <![CDATA[
                SELECT DISTINCT RB.RELATIONSHIP_BUILDER_SID,RB.RELATIONSHIP_NAME,RB.VERSION_NO FROM RELATIONSHIP_BUILDER RB JOIN RELATIONSHIP_LEVEL_DEFINITION R 
                ON RB.RELATIONSHIP_BUILDER_SID=R.RELATIONSHIP_BUILDER_SID
                AND RB.HIERARCHY_DEFINITION_SID=
            ]]>    
        </query>
    </entity>  
    <entity id="joinGLComp">
        <query> 
            <![CDATA[
                AND R.LEVEL_NAME LIKE '%Com%'
AND R.RELATIONSHIP_LEVEL_VALUES=
            ]]>    
        </query>
    </entity>     
    <entity id="joinProdNDC">
        <query> 
            <![CDATA[
                JOIN HELPER_TABLE H1 ON
	H1.HELPER_TABLE_SID = IM.FORM
JOIN HELPER_TABLE H2 ON
	H2.HELPER_TABLE_SID = IM.STRENGTH
            ]]>    
        </query>
    </entity>   
    <entity id="selectProdNDC">
        <query> 
            <![CDATA[
                ,H1.DESCRIPTION FORM,
	H2.DESCRIPTION STRENGTH
            ]]>    
        </query>
    </entity>
    <entity id="periodLoadQuery">
        <query> 
            <![CDATA[
               SELECT  PERIOD_VIEW.DESCRIPTION as PV,FROM_MODE.DESCRIPTION as FROM_MODE,
                FROM_FRE.DESCRIPTION as FROM_FRE,
                PCD.FROM_PERIOD ,
                PCD.FROM_PERIOD_DATE,
                FROM_DEF_MODE.DESCRIPTION as FROM_DEF_MODE ,
                FROM_DEF_FRE.DESCRIPTION as FROM_DEF_FRE,
                PCD.FROM_DEFAULT_PERIOD AS FROM_DEF_PERIOD,
                PCD.FROM_DEFAULT_PERIOD_DATE AS FROM_DEF_PERIOD_DATE,
                TO_MODE.DESCRIPTION as TO_MODE ,
                TO_FRE.DESCRIPTION as TO_FRE,
                PCD.TO_PERIOD AS TO_PERIOD,
                PCD.TO_PERIOD_DATE AS TO_PERIOD_DATE,
                TO_DEF_MODE.DESCRIPTION as TO_DEF_MODE,
                TO_DEF_FRE.DESCRIPTION as TO_DEF_FRE,
                PCD.TO_DEFAULT_PERIOD AS TO_DEF_PERIOD,
                PCD.TO_DEFUALT_PERIOD_DATE AS TO_DEF_PERIOD_DATE
               FROM PERIOD_CONFIG_DETAILS PCD 
               LEFT join PERIOD_CONFIG_MASTER PCM ON PCM.PERIOD_CONFIG_MASTER_SID=PCD.PERIOD_CONFIG_MASTER_SID
               LEFT JOIN HELPER_TABLE MODULES ON PCM.MODULE=MODULES.HELPER_TABLE_SID AND MODULES.LIST_NAME='PERIODCONFIG_MODULES'
               LEFT JOIN HELPER_TABLE FROM_MODE ON PCD.FROM_MODE=FROM_MODE.HELPER_TABLE_SID AND FROM_MODE.LIST_NAME='PERIODCONFIG_MODE'
               LEFT JOIN HELPER_TABLE FROM_DEF_MODE ON PCD.FROM_DEFAULT_MODE=FROM_DEF_MODE.HELPER_TABLE_SID AND FROM_DEF_MODE.LIST_NAME='PERIODCONFIG_MODE'
               LEFT JOIN HELPER_TABLE TO_MODE ON PCD.TO_MODE=TO_MODE.HELPER_TABLE_SID AND TO_MODE.LIST_NAME='PERIODCONFIG_MODE'
               LEFT JOIN HELPER_TABLE TO_DEF_MODE ON PCD.TO_DEFAULT_MODE=TO_DEF_MODE.HELPER_TABLE_SID AND TO_DEF_MODE.LIST_NAME='PERIODCONFIG_MODE'
               LEFT JOIN HELPER_TABLE FROM_FRE ON PCD.FROM_FREQUENCY=FROM_FRE.HELPER_TABLE_SID AND FROM_FRE.LIST_NAME='PERIODCONFIG_FREQUENCY'
               LEFT JOIN HELPER_TABLE FROM_DEF_FRE ON PCD.FROM_DEFAULT_FREQUERNCY=FROM_DEF_FRE.HELPER_TABLE_SID AND FROM_DEF_FRE.LIST_NAME='PERIODCONFIG_FREQUENCY'
               LEFT JOIN HELPER_TABLE TO_FRE ON PCD.TO_FREQUENCY=TO_FRE.HELPER_TABLE_SID AND TO_FRE.LIST_NAME='PERIODCONFIG_FREQUENCY'
               LEFT JOIN HELPER_TABLE TO_DEF_FRE ON PCD.TO_DEFAULT_FREQUERNCY=TO_DEF_FRE.HELPER_TABLE_SID AND TO_DEF_FRE.LIST_NAME='PERIODCONFIG_FREQUENCY'
               LEFT JOIN HELPER_TABLE PERIOD_VIEW ON PCD.PERIOD_VIEW=PERIOD_VIEW.HELPER_TABLE_SID AND PERIOD_VIEW.LIST_NAME='PERIODCONFIG_VIEW'
            ]]>    
        </query>
    </entity> 
    <entity id="LoadSelectedDeductions">
        <query> 
            <![CDATA[
     IF OBJECT_ID('TEMPDB..#TEMP_TABLE') IS NOT NULL 
  DROP TABLE #TEMP_TABLE 

CREATE TABLE #TEMP_TABLE 
  ( 
     RS_CATEGORY      VARCHAR(200), 
     RS_TYPE          VARCHAR(200), 
     RS_PROGRAM_TYPE  VARCHAR(200), 
     RS_ID            VARCHAR(200), 
     UDC_2            VARCHAR(100), 
     UDC_3            VARCHAR(100), 
     UDC_4            VARCHAR(100), 
     UDC_5            VARCHAR(100), 
     UDC_6            VARCHAR(100), 
     RS_CONTRACT_SIDS INT 
  ) 

INSERT INTO #TEMP_TABLE 
            (RS_CATEGORY, 
             RS_TYPE, 
             RS_PROGRAM_TYPE, 
             RS_ID, 
             UDC_2, 
             UDC_3, 
             UDC_4, 
             UDC_5, 
             UDC_6, 
             RS_CONTRACT_SIDS) 
SELECT CONCAT(B.RS_CATEGORY, '~', H1.DESCRIPTION)           AS CATEGORY, 
       CONCAT(B.RS_TYPE, '~', H2.DESCRIPTION)               AS TYPE, 
       CONCAT(B.REBATE_PROGRAM_TYPE, '~', H3.DESCRIPTION)   AS PROGRAM_TYPE, 
       CONCAT(B.RS_MODEL_SID, '~', B.RS_ID, '-', B.RS_NAME) AS RS, 
       UDC_2 = CASE 
                 WHEN U.UDC2 IS NULL 
                       OR U.UDC2 = 0 THEN '0~NO UDC2' 
                 ELSE CONCAT(U.UDC2, '~', H5.DESCRIPTION) 
               END, 
       UDC_3 = CASE 
                 WHEN U.UDC3 IS NULL 
                       OR U.UDC3 = 0 THEN '0~NO UDC3' 
                 ELSE CONCAT(U.UDC3, '~', H6.DESCRIPTION) 
               END, 
       UDC_4 = CASE 
                 WHEN U.UDC4 IS NULL 
                       OR U.UDC4 = 0 THEN '0~NO UDC4' 
                 ELSE CONCAT(U.UDC4, '~', H7.DESCRIPTION) 
               END, 
       UDC_5 = CASE 
                 WHEN U.UDC5 IS NULL 
                       OR U.UDC5 = 0 THEN '0~NO UDC5' 
                 ELSE CONCAT(U.UDC5, '~', H8.DESCRIPTION) 
               END, 
       UDC_6 = CASE 
                 WHEN U.UDC6 IS NULL 
                       OR U.UDC6 = 0 THEN '0~NO UDC6' 
                 ELSE CONCAT(U.UDC6, '~', H9.DESCRIPTION) 
               END, 
       B.RS_CONTRACT_SID 
FROM   RS_CONTRACT B 
       JOIN HELPER_TABLE H1 
         ON H1.HELPER_TABLE_SID = B.RS_CATEGORY 
            AND B.RS_CATEGORY <> 0 
       JOIN HELPER_TABLE H2 
         ON H2.HELPER_TABLE_SID = B.RS_TYPE 
            AND B.RS_TYPE <> 0 
       JOIN HELPER_TABLE H3 
         ON H3.HELPER_TABLE_SID = B.REBATE_PROGRAM_TYPE 
            AND B.REBATE_PROGRAM_TYPE <> 0 
       LEFT JOIN UDCS U 
              ON U.MASTER_SID = B.RS_CONTRACT_SID 
                 AND U.MASTER_TYPE = 'RS_CONTRACT' 
       LEFT JOIN HELPER_TABLE H5 
              ON H5.HELPER_TABLE_SID = U.UDC2 
       LEFT JOIN HELPER_TABLE H6 
              ON H6.HELPER_TABLE_SID = U.UDC3 
       LEFT JOIN HELPER_TABLE H7 
              ON H7.HELPER_TABLE_SID = U.UDC4 
       LEFT JOIN HELPER_TABLE H8 
              ON H8.HELPER_TABLE_SID = U.UDC5 
       LEFT JOIN HELPER_TABLE H9 
              ON H9.HELPER_TABLE_SID = U.UDC6 
WHERE  B.RS_CONTRACT_SID IN(@RS_CONTRACT_SID) AND B.INBOUND_STATUS <> 'D'
ORDER  BY RS_MODEL_SID 
    SELECT DISTINCT RS_CATEGORY, 
                    RS_TYPE, 
                    RS_PROGRAM_TYPE, 
                    RS_ID, 
                    UDC_2, 
                    UDC_3, 
                    UDC_4, 
                    UDC_5, 
                    UDC_6, 
                    CONVERT(VARCHAR(8000), STUFF((SELECT 
                                           CONCAT(',', RS_CONTRACT_SIDS) 
                                                  FROM   #TEMP_TABLE U 
                                                  WHERE  U.RS_CATEGORY = 
                                                         A.RS_CATEGORY 
                                                         AND U.RS_TYPE = A.RS_TYPE 
                                                         AND U. RS_PROGRAM_TYPE =  A.RS_PROGRAM_TYPE 
                                                         AND U.RS_ID = A.RS_ID 
                                                         AND U.UDC_2 = A.UDC_2 
                                                         AND U.UDC_3 = A.UDC_3 
                                                         AND U.UDC_4 = A.UDC_4 
                                                         AND U.UDC_5 = A.UDC_5 
                                                         AND U.UDC_6 = A.UDC_6 
                                                  ORDER  BY U.RS_CONTRACT_SIDS 
                                                  FOR XML PATH('')), 1, 1, '')) 
    FROM   #TEMP_TABLE A 
            ]]>    
        </query>
    </entity>   
    
    <entity id="LoadSelectedRSContract">
        <query> 
            <![CDATA[
              SELECT DISTINCT RS_CONTRACT_SID FROM RS_CONTRACT B  
              LEFT JOIN UDCS U ON U.MASTER_SID=B.RS_CONTRACT_SID AND U.MASTER_TYPE='RS_CONTRACT'
              WHERE B.INBOUND_STATUS <> 'D' AND
            ]]>    
        </query>
    </entity>  
    <entity id="LoadRsContractSid">
        <query> 
            <![CDATA[
              Select  RS.RS_CONTRACT_SID from ARM_DEDUCTION_SELECTION ADS JOIN RS_CONTRACT RS 
               ON RS.RS_CONTRACT_SID = ADS.RS_CONTRACT_SID
                 where PROJECTION_MASTER_SID=? AND RS.INBOUND_STATUS <> 'D'
            ]]>    
        </query>
    </entity>     
    <entity id="UPDATE_PROJECTION_MASTER_IN_SUBMIT">
        <query> 
            <![CDATA[
            UPDATE  PROJECTION_MASTER SET SAVE_FLAG = 1 , IS_APPROVED = 'Y', MODIFIED_DATE =GETDATE(),MODIFIED_BY=? WHERE PROJECTION_MASTER_SID =?
            ]]>    
        </query>
    </entity>  
    
       
    
    <entity id="getRelationshipValuesView">
        <query>  
         <![CDATA[
                ;WITH CTE 
     AS ( select distinct RLD.level_No, RLD.relationship_Level_Values, RLD.parent_Node, RLD.level_Name, RLD.relationship_Level_Sid, HLD."TABLE_NAME", HLD.FIELD_NAME,  RLD.HIERARCHY_NO, 
     SUBSTRING( RLD.PARENT_NODE,CHARINDEX('~', RLD.PARENT_NODE)+1,LEN( RLD.PARENT_NODE)-CHARINDEX('~', RLD.PARENT_NODE)) AS SID
                FROM Relationship_Level_Definition RLD JOIN HIERARCHY_LEVEL_DEFINITION HLD ON RLD.HIERARCHY_LEVEL_DEFINITION_SID=HLD.HIERARCHY_LEVEL_DEFINITION_SID
                JOIN ? PH ON RLD.RELATIONSHIP_LEVEL_SID = PH.RELATIONSHIP_LEVEL_SID 
        ]]>
        </query>
    </entity>   
    
    
    
    <entity id="loadFromAndToBasedOnPeriodConfig">
        <query>
            <![CDATA[
            SELECT top 1 HT.DESCRIPTION FROM HELPER_TABLE HT 
            JOIN PERIOD_CONFIG_DETAILS PCD on HT.HELPER_TABLE_SID = PCD.PERIOD_VIEW and HT.LIST_NAME = 'PERIODCONFIG_VIEW'
            JOIN PERIOD_CONFIG_MASTER PCM on PCM.PERIOD_CONFIG_MASTER_SID = PCD.PERIOD_CONFIG_MASTER_SID 
            and PCM.BUSINESS_PROCESS_TYPE = ? and PCM.COMPANY_MASTER_SID = ? 
            and PCM.BU_COMPANY_MASTER_SID = ? order by VERSION_NO DESC
            ]]>
        </query>
    </entity>
    <entity id="LoadBalanceSummaryType">
        <query> 
     <![CDATA[
     SELECT
	HT.HELPER_TABLE_SID,
        'Balance Summary Report',
	HT.DESCRIPTION
	
FROM
	HELPER_TABLE HT
	where HT.LIST_NAME = 'ARM_REPORT_TYPE'
     ]]>    
        </query>
    </entity>
    <entity id="countForCalculationView">
        <query> 
     <![CDATA[
   SELECT
	COUNT(*)
FROM
	CALCULATION_PROFILE_MASTER CPM
JOIN CALCULATION_PROFILE_DETAILS CPD ON
	CPM.CALCULATION_PROFILE_MASTER_SID = CPD.CALCULATION_PROFILE_MASTER_SID
JOIN dbo.CALCULATION_PROFILE_VIEW_MASTER FVM ON
	FVM.CALCULATION_PROFILE_MASTER_SID = CPM.CALCULATION_PROFILE_MASTER_SID
	JOIN ?.dbo.User_ usr
                         ON usr.UserId = FVM.CREATED_BY
     ]]>    
        </query>
    </entity>
    <entity id="loadDataForCalculationView">
        <query> 
     <![CDATA[
SELECT distinct
	FVM.CALCULATION_PROFILE_VIEW_MASTER_SID as viewid ,
	FVM.VIEW_NAME AS VNAME,
	FVM.VIEW_TYPE AS VTYPE,
	FVM.CREATED_DATE AS CREATED_DATE,
	FVM.MODIFIED_DATE AS MODIFIED_DATE,
	usr.firstName AS CREATED_BY_name,
        FVM.CREATED_BY as CREATED_BY,
        CPM.CALCULATION_PROFILE_MASTER_SID as calculationSid,
         CPM.PROFILE_NAME AS PNAME,CPM.PROFILE_DESCRIPTION AS DES
	
FROM
	CALCULATION_PROFILE_MASTER CPM
JOIN CALCULATION_PROFILE_DETAILS CPD ON
	CPM.CALCULATION_PROFILE_MASTER_SID = CPD.CALCULATION_PROFILE_MASTER_SID
JOIN dbo.CALCULATION_PROFILE_VIEW_MASTER FVM ON
	FVM.CALCULATION_PROFILE_MASTER_SID = CPM.CALCULATION_PROFILE_MASTER_SID
	JOIN ?.dbo.User_ usr
                         ON usr.UserId = FVM.CREATED_BY
     ]]>    
        </query>
    </entity>
     
    <entity id="LoadAdjustmentType_BSR">
        <query> 
     <![CDATA[
     SELECT
	ADJ.ARM_ADJUSTMENT_CONFIG_SID,
	'BSR',
	ADJ.TRANSACTION_NAME
FROM
	ARM_ADJUSTMENT_CONFIG ADJ
JOIN CALCULATION_PROFILE_DETAILS CAD ON
	CAD.ADJUSTMENT_TYPE = ADJ.ARM_ADJUSTMENT_CONFIG_SID
	WHERE CAD.CALCULATION_PROFILE_MASTER_SID = ?
     ]]>    
        </query>
    </entity>
    <entity id="buttonSecurity">
        <query>
    		<![CDATA[
                        select DISTINCT
				MP.PROPERTY_NAME,
				BMM.ACCESS_MODULE
	
			from
				USERGROUP_BUSINESSROLE UBM
			JOIN BUSINESSROLE_MODULE BMM ON
				UBM.BUSINESSROLE_MASTER_SID = BMM.BUSINESSROLE_MASTER_SID
			JOIN MODULE_PROPERTIES MP ON
				BMM.SUBMODULE_PROPERTY_ID = MP.MODULE_PROPERTY_SID
			JOIN MODULE_SUBMODULE_MASTER SMM ON
				SMM.MODULE_SUBMODULE_SID = MP.MODULE_SUBMODULE_SID
			AND MP.CATEGORY_NAME = '?'
			AND SMM.MODULE_NAME = '?'
			AND SMM.SUBMODULE_NAME = '?'
			AND MP.TAB_NAME = '?'
                        ?
		]]>
        </query>
    </entity>
    <entity id="Save Account Config-Data">
        <query>
    		<![CDATA[
                      
 DECLARE @PROJECTION_MASTER_SID INT =?; 

IF OBJECT_ID('TEMPDB..#TEMP_CCP_PLUS_D') IS NOT NULL 
  DROP TABLE #TEMP_CCP_PLUS_D 

CREATE TABLE #TEMP_CCP_PLUS_D 
  ( 
     ARM_ADJUSTMENT_MASTER_SID  INT, 
     ARM_ADJUSTMENT_DETAILS_SID INT, 
     PROJECTION_MASTER_SID      INT, 
     CCP_DETAILS_SID            INT, 
     RS_MODEL_SID               INT, 
     GL_COMPANY_MASTER_SID      INT, 
     BU_COMPANY_MASTER_SID      INT, 
     TRANSACTION_TYPE           VARCHAR(50), 
     BRAND_MASTER_SID           INT 
     PRIMARY KEY ( ARM_ADJUSTMENT_DETAILS_SID, CCP_DETAILS_SID, RS_MODEL_SID ) 
  ) 

INSERT INTO #TEMP_CCP_PLUS_D 
            (BU_COMPANY_MASTER_SID, 
             GL_COMPANY_MASTER_SID, 
             ARM_ADJUSTMENT_MASTER_SID, 
             ARM_ADJUSTMENT_DETAILS_SID, 
             PROJECTION_MASTER_SID, 
             CCP_DETAILS_SID, 
             RS_MODEL_SID, 
             TRANSACTION_TYPE, 
             BRAND_MASTER_SID) 
SELECT AM.BU_COMPANY_MASTER_SID, 
       PM.COMPANY_MASTER_SID AS GL_COMPANY_MASTER_SID, 
       AM.ARM_ADJUSTMENT_MASTER_SID, 
       ARM_ADJUSTMENT_DETAILS_SID, 
       AD.PROJECTION_MASTER_SID, 
       AD.CCP_DETAILS_SID, 
       AD.RS_MODEL_SID, 
       AM.TRANSACTION_TYPE, 
       IM.BRAND_MASTER_SID 
FROM   PROJECTION_MASTER PM 
       INNER JOIN ARM_ADJUSTMENT_MASTER AM 
               ON PM.PROJECTION_MASTER_SID = AM.PROJECTION_MASTER_SID 
       INNER JOIN ARM_ADJUSTMENT_DETAILS AD 
               ON PM.PROJECTION_MASTER_SID = AD.PROJECTION_MASTER_SID 
       INNER JOIN CCP_DETAILS CD 
               ON AD.CCP_DETAILS_SID = CD.CCP_DETAILS_SID 
       INNER JOIN ITEM_MASTER IM 
               ON CD.ITEM_MASTER_SID = IM.ITEM_MASTER_SID 
WHERE  PM.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID 

IF OBJECT_ID('TEMPDB..#ACC_CONFIG_TEMP') IS NOT NULL 
  DROP TABLE #ACC_CONFIG_TEMP 

CREATE TABLE #ACC_CONFIG_TEMP 
  ( 
     GL_COMPANY_MASTER_SID INT, 
     BU_COMPANY_MASTER_SID INT, 
     ACCOUNT               VARCHAR(50), 
     BRAND_MASTER_SID      INT, 
     COST_CENTER           VARCHAR(50) 
  ) 

INSERT INTO #ACC_CONFIG_TEMP 
            (GL_COMPANY_MASTER_SID, 
             BU_COMPANY_MASTER_SID, 
             ACCOUNT, 
             BRAND_MASTER_SID, 
             COST_CENTER) 
SELECT DISTINCT AAC.GL_COMPANY_MASTER_SID, 
                AAC.BU_COMPANY_MASTER_SID, 
                AAC.ACCOUNT, 
                AAC.BRAND_MASTER_SID, 
                AAC.COST_CENTER 
FROM   #TEMP_CCP_PLUS_D TD 
       JOIN CCP_DETAILS C 
         ON C.CCP_DETAILS_SID = TD.CCP_DETAILS_SID 
       JOIN RS_CONTRACT R 
         ON R.RS_MODEL_SID = TD.RS_MODEL_SID 
            AND R.CONTRACT_MASTER_SID = C.CONTRACT_MASTER_SID 
       JOIN ARM_DEDUCTION_SELECTION ADS 
         ON ADS.PROJECTION_MASTER_SID = TD.PROJECTION_MASTER_SID 
            AND ADS.RS_CONTRACT_SID = R.RS_CONTRACT_SID 
       JOIN ARM_ADJ_RES_CONFIG_MASTER AAM 
         ON AAM.RS_CATEGORY = R.RS_CATEGORY 
            AND AAM.RS_TYPE = R.RS_TYPE 
            AND AAM.REBATE_PROGRAM_TYPE = R.REBATE_PROGRAM_TYPE 
            AND TD.GL_COMPANY_MASTER_SID = AAM.GL_COMPANY_MASTER_SID 
            AND TD.BU_COMPANY_MASTER_SID = AAM.BU_COMPANY_MASTER_SID 
       JOIN ARM_ADJ_RES_CONFIG_DETAIL AAD 
         ON AAD.ADJUSTMENT_TYPE = TD.TRANSACTION_TYPE 
            AND AAD.ARM_ADJ_RES_CONFIG_MASTER_SID = AAM.ARM_ADJ_RES_CONFIG_MASTER_SID 
       JOIN HELPER_TABLE HT 
         ON AAD.ADJUSTMENT_LEVEL = HT.HELPER_TABLE_SID 
       LEFT JOIN ARM_ACC_CONFIG AAC 
              ON AAC.GL_COMPANY_MASTER_SID = TD.GL_COMPANY_MASTER_SID 
                 AND AAC.BU_COMPANY_MASTER_SID = TD.BU_COMPANY_MASTER_SID 
                 AND AAC.ACCOUNT = AAD.ACCOUNT 
                 AND AAC.BRAND_MASTER_SID = TD.BRAND_MASTER_SID 
WHERE  AAC.COST_CENTER IS NOT NULL 
       AND ( AAC.DELETE_CHECK_RECORD = 0 
              OR AAC.DELETE_CHECK_RECORD IS NULL ) 
--Updation of Account Config table for Delete_Record Starts here
UPDATE AAC 
SET    AAC.DELETE_CHECK_RECORD = 1 
FROM   ARM_ACC_CONFIG AAC 
       JOIN #ACC_CONFIG_TEMP AAT 
         ON AAC.GL_COMPANY_MASTER_SID = AAT.GL_COMPANY_MASTER_SID 
            AND AAC.BU_COMPANY_MASTER_SID = AAT.BU_COMPANY_MASTER_SID 
            AND AAC.ACCOUNT = AAT.ACCOUNT 
            AND AAC.BRAND_MASTER_SID = AAT.BRAND_MASTER_SID 
            AND AAC.COST_CENTER = AAT.COST_CENTER 
		]]>
        </query>
    </entity>
    <entity id="temp-deduction-join">
        <query>
    		<![CDATA[
                    JOIN #TEMP_DEDUCTION TD
                        ON RS.RS_CONTRACT_SID = TD.RS_CONTRACT_SID
		]]>
        </query>
    </entity>
    <entity id="ccp_map_insert">
        <query>
            <![CDATA[
                --CUSTOMER
                DECLARE @HIERARCHY_DEFINITION_SID INT = @Customer_hierarchy,
                        @RELATIONSHIP_BUILDER_SID INT = @Customer_relation,
                        @LEVEL_NO                 INT
                SELECT @LEVEL_NO = Max(LEVEL_NO)
                FROM   HIERARCHY_LEVEL_DEFINITION
                WHERE  HIERARCHY_DEFINITION_sid = @HIERARCHY_DEFINITION_SID

                IF Object_id('TEMPDB..#DETAILS') IS NOT NULL
                  DROP TABLE #DETAILS

                CREATE TABLE #DETAILS
                  (
                     RELATIONSHIP_LEVEL_SID INT,
                     MASTER_SID             INT,
                     LEVEL_NO               INT,
                     PARENT                 INT,
                     LEVEL_NAME             VARCHAR(50),
                     CONTRACT_MASTER_SID    INT
                  )

                IF EXISTS (SELECT 1
                           FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                                  JOIN HIERARCHY_LEVEL_DEFINITION HLD
                                    ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                           WHERE  HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID
                                  AND RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID
                                  AND RLD.LEVEL_NAME IN ( 'Trading Partner', 'Customer' ))
                  BEGIN
                      INSERT INTO #DETAILS
                                  (RELATIONSHIP_LEVEL_SID,
                                   MASTER_SID,
                                   LEVEL_NO,
                                   PARENT,
                                   LEVEL_NAME)
                      SELECT RELATIONSHIP_LEVEL_SID,
                             RELATIONSHIP_LEVEL_VALUES AS COMPANY_MASTER_SID,
                             RLD.LEVEL_NO,
                             Substring(RLD.PARENT_NODE, Charindex('~', RLD.PARENT_NODE) + 1, Len(RLD.PARENT_NODE)) AS PARENT,
                             RLD.LEVEL_NAME
                      FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                             JOIN HIERARCHY_LEVEL_DEFINITION HLD
                               ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                      WHERE  RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID
                             AND HLD.HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID
                             AND RLD.LEVEL_NAME IN ( 'Trading Partner', 'Customer' )
                  END

                IF EXISTS (SELECT 1
                           FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                                  JOIN HIERARCHY_LEVEL_DEFINITION HLD
                                    ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                           WHERE  HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID
                                  AND RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID
                                  AND RLD.LEVEL_NAME IN ( 'Contract' ))
                  BEGIN
                      INSERT INTO #DETAILS
                                  (RELATIONSHIP_LEVEL_SID,
                                   MASTER_SID,
                                   LEVEL_NO,
                                   PARENT,
                                   LEVEL_NAME)
                      SELECT RELATIONSHIP_LEVEL_SID,
                             RELATIONSHIP_LEVEL_VALUES  AS CONTRACT_MASTER_SID,
                             RLD.LEVEL_NO,
                             Substring(RLD.PARENT_NODE, Charindex('~', RLD.PARENT_NODE) + 1, Len(RLD.PARENT_NODE)) AS PARENT,
                             RLD.LEVEL_NAME
                      FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                             JOIN HIERARCHY_LEVEL_DEFINITION HLD
                               ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                      WHERE  RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID
                             AND HLD.HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID
                             AND RLD.LEVEL_NAME IN ( 'Contract' )
                  END

                IF EXISTS (SELECT 1
                           FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                                  JOIN HIERARCHY_LEVEL_DEFINITION HLD
                                    ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                           WHERE  HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID
                                  AND RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID
                                  AND RLD.LEVEL_NAME IN ( 'Market Type', 'Contract Type' ))
                  BEGIN
                      INSERT INTO #DETAILS
                                  (RELATIONSHIP_LEVEL_SID,
                                   CONTRACT_MASTER_SID,
                                   MASTER_SID,
                                   LEVEL_NO,
                                   PARENT,
                                   LEVEL_NAME)
                      SELECT RELATIONSHIP_LEVEL_SID,
                             CONTRACT_MASTER_SID,
                             RELATIONSHIP_LEVEL_VALUES                                                             AS MASTER_SID,
                             RLD.LEVEL_NO,
                             Substring(RLD.PARENT_NODE, Charindex('~', RLD.PARENT_NODE) + 1, Len(RLD.PARENT_NODE)) AS PARENT,
                             RLD.LEVEL_NAME
                      FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                             JOIN HIERARCHY_LEVEL_DEFINITION HLD
                               ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                             JOIN CONTRACT_MASTER CM
                               ON CM.CONTRACT_TYPE = RLD.RELATIONSHIP_LEVEL_VALUES
                      WHERE  RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID
                             AND HLD.HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID
                             AND RLD.LEVEL_NAME IN ( 'Market Type', 'Contract Type' )
                  END

                IF Object_id('tempdb..#result') IS NOT NULL
                  DROP TABLE #RESULT;

                WITH CTE
                     AS (SELECT Dense_rank()
                                  OVER(
                                    ORDER BY C.level_no) AS RN,
                                C.*
                         FROM   #DETAILS C)
                SELECT DISTINCT p1.RELATIONSHIP_LEVEL_SID,
                                CASE
                                  WHEN P1.LEVEL_NAME IN ( 'Trading Partner', 'Customer' ) THEN p1.MASTER_SID
                                  WHEN P2.LEVEL_NAME IN ( 'Trading Partner', 'Customer' ) THEN p2.MASTER_SID
                                  WHEN P3.LEVEL_NAME IN ( 'Trading Partner', 'Customer' ) THEN p3.MASTER_SID
                                END AS COMPANY_MASTER_SID,
                                CASE
                                  WHEN P1.LEVEL_NAME IN ( 'Contract' ) THEN p1.MASTER_SID
                                  WHEN P2.LEVEL_NAME IN ( 'Contract' ) THEN p2.MASTER_SID
                                  WHEN P3.LEVEL_NAME IN ( 'Contract' ) THEN p3.MASTER_SID
                                END AS CONTRACT_MASTER_SID,
                                CASE
                                  WHEN P1.LEVEL_NAME IN ( 'Market Type', 'Contract Type' ) THEN p1.MASTER_SID
                                  WHEN P2.LEVEL_NAME IN ( 'Market Type', 'Contract Type' ) THEN p2.MASTER_SID
                                  WHEN P3.LEVEL_NAME IN ( 'Market Type', 'Contract Type' ) THEN p3.MASTER_SID
                                END AS MARKET_TYPE,
                                P1.LEVEL_NO
                INTO   #RESULT
                FROM   CTE P1
                       LEFT JOIN CTE P2
                              ON P1.PARENT = P2.MASTER_SID
                                 AND P1.RN = P2.RN + 1
                       LEFT JOIN CTE P3
                              ON P2.PARENT = P3.MASTER_SID
                                 AND P2.RN = P3.RN + 1
                WHERE  P1.LEVEL_NO = @LEVEL_NO

IF Object_id('TEMPDB..#CCP_MAP') IS NOT NULL
  DROP TABLE #CCP_MAP;
 
CREATE TABLE #CCP_MAP
  (
     CCP_MAP_SID            INT IDENTITY(1, 1),
     CCP_DETAILS_SID        INT,
     RELATIONSHIP_LEVEL_SID INT
  )


                IF EXISTS (SELECT 1
                           FROM   #result
                           WHERE  CONTRACT_MASTER_SID IS NOT NULL
                                  AND COMPANY_MASTER_SID IS NOT NULL)
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT RELATIONSHIP_LEVEL_SID,
                         CCP_DETAILS_SID
                  FROM   CCP_DETAILS c
                         JOIN #result r
                           ON r.COMPANY_MASTER_SID = c.COMPANY_MASTER_SID
                              AND r.CONTRACT_MASTER_SID = c.CONTRACT_MASTER_SID
                  WHERE  NOT EXISTS (SELECT 1
                                     FROM   #CCP_MAP cm
                                     WHERE  cm.RELATIONSHIP_LEVEL_SID = r.RELATIONSHIP_LEVEL_SID
                                            AND c.CCP_DETAILS_SID = cm.CCP_DETAILS_SID)
                ELSE IF EXISTS (SELECT 1
                           FROM   #result
                           WHERE  CONTRACT_MASTER_SID IS NULL
                                  AND COMPANY_MASTER_SID IS NOT NULL)
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT RELATIONSHIP_LEVEL_SID,
                         CCP_DETAILS_SID
                  FROM   CCP_DETAILS c
                         JOIN #result r
                           ON r.COMPANY_MASTER_SID = c.COMPANY_MASTER_SID
                  WHERE  NOT EXISTS (SELECT 1
                                     FROM   #CCP_MAP cm
                                     WHERE  cm.RELATIONSHIP_LEVEL_SID = r.RELATIONSHIP_LEVEL_SID
                                            AND c.CCP_DETAILS_SID = cm.CCP_DETAILS_SID)
                ELSE IF EXISTS (SELECT 1
                           FROM   #result
                           WHERE  CONTRACT_MASTER_SID IS NOT NULL
                                  AND MARKET_TYPE IS NOT NULL
                                  AND COMPANY_MASTER_SID IS NULL)
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT RELATIONSHIP_LEVEL_SID,
                         CCP_DETAILS_SID
                  FROM   CCP_DETAILS c
                         JOIN #result r
                           ON r.CONTRACT_MASTER_SID = c.CONTRACT_MASTER_SID
                  WHERE  NOT EXISTS (SELECT 1
                                     FROM   #CCP_MAP cm
                                     WHERE  cm.RELATIONSHIP_LEVEL_SID = r.RELATIONSHIP_LEVEL_SID
                                            AND c.CCP_DETAILS_SID = cm.CCP_DETAILS_SID)
                ELSE IF EXISTS (SELECT 1
                           FROM   #result
                           WHERE  CONTRACT_MASTER_SID IS NULL
                                  AND MARKET_TYPE IS NOT NULL
                                  AND COMPANY_MASTER_SID IS NOT NULL)
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT RELATIONSHIP_LEVEL_SID,
                         CCP_DETAILS_SID
                  FROM   CCP_DETAILS c
                         JOIN (SELECT RELATIONSHIP_LEVEL_SID,
                                      cm.contract_master_sid,
                                      r.COMPANY_MASTER_SID
                               FROM   #result r
                                      JOIN contract_master cm
                                        ON cm.CONTRACT_TYPE = r.MARKET_TYPE) r
                           ON r.CONTRACT_MASTER_SID = c.CONTRACT_MASTER_SID
                              AND r.COMPANY_MASTER_SID = c.COMPANY_MASTER_SID
                  WHERE  NOT EXISTS (SELECT 1
                                     FROM   #CCP_MAP cm
                                     WHERE  cm.RELATIONSHIP_LEVEL_SID = r.RELATIONSHIP_LEVEL_SID
                                            AND c.CCP_DETAILS_SID = cm.CCP_DETAILS_SID)
                ELSE IF EXISTS (SELECT 1
                           FROM   #result
                           WHERE  CONTRACT_MASTER_SID IS NULL
                                  AND MARKET_TYPE IS NOT NULL
                                  AND COMPANY_MASTER_SID IS NULL)
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT RELATIONSHIP_LEVEL_SID,
                         CCP_DETAILS_SID
                  FROM   CCP_DETAILS c
                         JOIN (SELECT RELATIONSHIP_LEVEL_SID,
                                      cm.contract_master_sid
                               FROM   #result r
                                      JOIN contract_master cm
                                        ON cm.CONTRACT_TYPE = r.MARKET_TYPE) r
                           ON r.CONTRACT_MASTER_SID = c.CONTRACT_MASTER_SID
                  WHERE  NOT EXISTS (SELECT 1
                                     FROM   #CCP_MAP cm
                                     WHERE  cm.RELATIONSHIP_LEVEL_SID = r.RELATIONSHIP_LEVEL_SID
                                            AND c.CCP_DETAILS_SID = cm.CCP_DETAILS_SID) 

--------product relation inserting into #ccp_map

   DECLARE @HIERARCHY_DEFINITION_SID_PRO INT = @Product_hierarchy,
                @RELATIONSHIP_BUILDER_SID_PRO INT = @Product_relation,
                @LEVEL_NO_PRO                INT

                SELECT @LEVEL_NO_PRO = Max(LEVEL_NO)
                FROM   HIERARCHY_LEVEL_DEFINITION
                WHERE  HIERARCHY_DEFINITION_sid = @HIERARCHY_DEFINITION_SID_PRO

                IF Object_id('TEMPDB..#DETAILS_PRO') IS NOT NULL
                  DROP TABLE #DETAILS_PRO

                CREATE TABLE #DETAILS_PRO
                  (
                     RELATIONSHIP_LEVEL_SID INT,
                     MASTER_SID             INT,
                     LEVEL_NAME             VARCHAR(50)
                  )
                INSERT INTO #DETAILS_PRO
                SELECT RELATIONSHIP_LEVEL_SID,
                       RELATIONSHIP_LEVEL_VALUES AS MASTER_SID,
                       RLD.LEVEL_NAME
                FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                       JOIN HIERARCHY_LEVEL_DEFINITION HLD
                         ON HLD.HIERARCHY_LEVEL_DEFINITION_SID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
                WHERE  RLD.RELATIONSHIP_BUILDER_SID = @RELATIONSHIP_BUILDER_SID_PRO
                       AND HLD.HIERARCHY_DEFINITION_SID = @HIERARCHY_DEFINITION_SID_PRO
                       AND RLD.LEVEL_NO = @LEVEL_NO_PRO

                IF EXISTS (SELECT 1
                           FROM   #DETAILS_PRO
                           WHERE  LEVEL_NAME = 'COMPANY')
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   GL_COST_CENTER_MASTER GL
                         JOIN COMPANY_MASTER CM
                           ON GL.COMPANY_CODE = CM.COMPANY_ID
                         JOIN ITEM_MASTER IM
                           ON IM.NDC8 = GL.NDC8
                         JOIN #DETAILS_PRO D
                           ON D.MASTER_SID = CM.COMPANY_MASTER_SID
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
                  WHERE  GL.INBOUND_STATUS <> 'D'
                         AND NOT EXISTS (SELECT 1
                                         FROM   #CCP_MAP CC
                                         WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID)

                IF EXISTS (SELECT 1
                           FROM   #DETAILS_PRO
                           WHERE  LEVEL_NAME = 'BRAND')
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   ITEM_MASTER IM
                         JOIN #DETAILS_PRO D
                           ON D.MASTER_SID = IM.BRAND_MASTER_SID
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
                              AND NOT EXISTS (SELECT 1
                                              FROM   #CCP_MAP CC
                                              WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                     AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID)

                IF EXISTS (SELECT 1
                           FROM   #DETAILS_PRO
                           WHERE  LEVEL_NAME IN ('NDC','N.D.C.'))
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   #DETAILS_PRO D
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = D.MASTER_SID
                              AND NOT EXISTS (SELECT 1
                                              FROM   #CCP_MAP CC
                                              WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                     AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID)

                IF EXISTS (SELECT 1
                           FROM   #DETAILS_PRO
                           WHERE  LEVEL_NAME LIKE '%THERAPEUTIC%CLASS%')
                  INSERT INTO #CCP_MAP
                              (RELATIONSHIP_LEVEL_SID,
                               CCP_DETAILS_SID)
                  SELECT d.RELATIONSHIP_LEVEL_SID,
                         cd.CCP_DETAILS_SID
                  FROM   ITEM_MASTER IM
                         JOIN #DETAILS_PRO D
                           ON D.MASTER_SID = IM.THERAPEUTIC_CLASS
                         JOIN CCP_DETAILS cd
                           ON cd.ITEM_MASTER_SID = im.ITEM_MASTER_SID
                              AND NOT EXISTS (SELECT 1
                                              FROM   #CCP_MAP CC
                                              WHERE  CC.RELATIONSHIP_LEVEL_SID = D.RELATIONSHIP_LEVEL_SID
                                                     AND CC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID) ;
            ]]>    
        </query>
    </entity>
    <entity id="armSummaryInsertCcp">
        <query>
    		<![CDATA[
                DECLARE @PROJECTION_MASTER_SID INT = ? ; 

                IF OBJECT_ID('TEMPDB..#TEMP_CCP_PLUS_D') IS NOT NULL 
                    DROP TABLE #TEMP_CCP_PLUS_D 

                CREATE TABLE #TEMP_CCP_PLUS_D 
                  ( 
                    ARM_ADJUSTMENT_MASTER_SID  INT, 
                    ARM_ADJUSTMENT_DETAILS_SID INT, 
                    PROJECTION_MASTER_SID      INT, 
                    CCP_DETAILS_SID            INT, 
                    RS_MODEL_SID               INT, 
                    GL_COMPANY_MASTER_SID      INT, 
                    BU_COMPANY_MASTER_SID      INT, 
                    TRANSACTION_TYPE           VARCHAR(50), 
                    BRAND_MASTER_SID           INT,
                    RS_TYPE                    INT,
                    REBATE_PROGRAM_TYPE        INT,
                    RS_CATEGORY                INT, 
                    PRIMARY KEY ( ARM_ADJUSTMENT_DETAILS_SID, CCP_DETAILS_SID, RS_MODEL_SID ) 
                  ) 

                INSERT INTO #TEMP_CCP_PLUS_D 
                            (BU_COMPANY_MASTER_SID, 
                            GL_COMPANY_MASTER_SID, 
                            ARM_ADJUSTMENT_MASTER_SID, 
                            ARM_ADJUSTMENT_DETAILS_SID, 
                            PROJECTION_MASTER_SID, 
                            CCP_DETAILS_SID, 
                            RS_MODEL_SID, 
                            TRANSACTION_TYPE, 
                            BRAND_MASTER_SID,
                            RS_TYPE,
                            REBATE_PROGRAM_TYPE,
                            RS_CATEGORY) 
                SELECT AM.BU_COMPANY_MASTER_SID, 
                        PM.COMPANY_MASTER_SID AS GL_COMPANY_MASTER_SID, 
                        AM.ARM_ADJUSTMENT_MASTER_SID, 
                        ARM_ADJUSTMENT_DETAILS_SID, 
                        AD.PROJECTION_MASTER_SID, 
                        AD.CCP_DETAILS_SID, 
                        AD.RS_MODEL_SID, 
                        AM.TRANSACTION_TYPE, 
                        IM.BRAND_MASTER_SID ,
                        RS_TYPE,
                        REBATE_PROGRAM_TYPE,
                        RS_CATEGORY
                FROM   PROJECTION_MASTER PM 
                        INNER JOIN ARM_ADJUSTMENT_MASTER AM 
                                ON PM.PROJECTION_MASTER_SID = AM.PROJECTION_MASTER_SID 
                        INNER JOIN ARM_ADJUSTMENT_DETAILS AD 
                                ON PM.PROJECTION_MASTER_SID = AD.PROJECTION_MASTER_SID 
                        INNER JOIN CCP_DETAILS CD 
                                ON AD.CCP_DETAILS_SID = CD.CCP_DETAILS_SID 
                        INNER JOIN ITEM_MASTER IM 
                                ON CD.ITEM_MASTER_SID = IM.ITEM_MASTER_SID 
                        INNER JOIN RS_CONTRACT R
                                ON R.RS_MODEL_SID = AD.RS_MODEL_SID
                                AND R.CONTRACT_MASTER_SID = CD.CONTRACT_MASTER_SID
                        INNER JOIN RS_CONTRACT_DETAILS RD
                                ON RD.RS_CONTRACT_SID=R.RS_CONTRACT_SID
                                AND RD.ITEM_MASTER_SID=IM.ITEM_MASTER_SID
                                AND RD.INBOUND_STATUS <> 'D'
                        JOIN ARM_DEDUCTION_SELECTION ADS
                                ON ADS.PROJECTION_MASTER_SID = AD.PROJECTION_MASTER_SID
                                AND ADS.RS_CONTRACT_SID = R.RS_CONTRACT_SID
                WHERE  PM.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID 

                INSERT INTO ARM_ADJ_SUMMARY_CCP 
                            (ARM_ADJUSTMENT_DETAILS_SID, 
                             ARM_ADJ_RES_CONFIG_MASTER_SID, 
                             ADJUSTMENT_TYPE, 
                             CURRENT_BALANCE, 
                             CURRENT_BALANCE_ACC, 
                             DEMAND_ACCRUAL, 
                             DEMAND_ACCRUAL_ACC, 
                             DEMAND_REFORECAST, 
                             DEMAND_REFORECAST_ACC, 
                             DEMAND_PAYMENT_RECON, 
                             DEMAND_PAYMENT_RECON_ACC) 
                SELECT TD.ARM_ADJUSTMENT_DETAILS_SID, 
                        AAM.ARM_ADJ_RES_CONFIG_MASTER_SID, 
                        ASD.ADJUSTMENT_TYPE, 
                        ASD.CURRENT_BALANCE, 
                        ASD.CURRENT_BALANCE_ACC, 
                        ASD.DEMAND_ACCRUAL, 
                        ASD.DEMAND_ACCRUAL_ACC, 
                       ASD.DEMAND_REFORECAST, 
                        ASD.DEMAND_REFORECAST_ACC, 
                        ASD.DEMAND_PAYMENT_RECON, 
                        ASD.DEMAND_PAYMENT_RECON_ACC 
                FROM   #TEMP_CCP_PLUS_D TD
                        --JOIN CCP_DETAILS C
                        --  ON C.CCP_DETAILS_SID = TD.CCP_DETAILS_SID
                        --JOIN RS_CONTRACT R
                        --  ON R.RS_MODEL_SID = TD.RS_MODEL_SID
                        --     AND R.CONTRACT_MASTER_SID = C.CONTRACT_MASTER_SID
                        --JOIN ARM_DEDUCTION_SELECTION ADS
                        --  ON ADS.PROJECTION_MASTER_SID = TD.PROJECTION_MASTER_SID
                        --     AND ADS.RS_CONTRACT_SID = R.RS_CONTRACT_SID
                        JOIN ARM_ADJ_RES_CONFIG_MASTER AAM
                          ON AAM.RS_CATEGORY = TD.RS_CATEGORY
                             AND AAM.RS_TYPE = TD.RS_TYPE
                             AND AAM.REBATE_PROGRAM_TYPE = TD.REBATE_PROGRAM_TYPE
                             AND TD.GL_COMPANY_MASTER_SID = AAM.GL_COMPANY_MASTER_SID
                             AND TD.BU_COMPANY_MASTER_SID = AAM.BU_COMPANY_MASTER_SID
                        JOIN ARM_ADJ_SUMMARY_CONFIG_DETAILS ASD
                          ON ASD.ADJUSTMENT_TYPE = TD.TRANSACTION_TYPE
                             AND ASD.ARM_ADJ_RES_CONFIG_MASTER_SID = AAM.ARM_ADJ_RES_CONFIG_MASTER_SID 
		]]>
        </query>
    </entity>
    <entity id="checkSelectedAdjustmentType">
        <query>
            select ht.DESCRIPTION from ARM_ADJUSTMENT_CONFIG ac 
            JOIN HELPER_TABLE ht on ht.HELPER_TABLE_SID=ac.METHODOLGY 
            where ARM_ADJUSTMENT_CONFIG_SID = ?
        </query>
    </entity>
    <entity id="getHierarchyLevelVlaues">
		<query> 
        <![CDATA[            
            SELECT
                    distinct LEVEL_NO,
                    LEVEL_VALUE_REFERENCE,
                    "TABLE_NAME",
                    FIELD_NAME,
                    LEVEL_NAME,
                    HLD.HIERARCHY_LEVEL_DEFINITION_SID,
                    HLD.HIERARCHY_DEFINITION_SID,
                    HT.DESCRIPTION
            from
                    HIERARCHY_LEVEL_DEFINITION HLD
            JOIN dbo.HIERARCHY_DEFINITION HD on
                    HD.HIERARCHY_DEFINITION_SID = hld.HIERARCHY_DEFINITION_SID
            JOIN dbo.HELPER_TABLE HT on
                    HT.HELPER_TABLE_SID = HD.HIERARCHY_CATEGORY
            where
                    hld.HIERARCHY_DEFINITION_SID =? and HLD.VERSION_NO =?;
         ]]>
		</query>
	</entity>
</sql>