<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->

<sql>
    <entity id="isReportTypeAvailableInTemp">
        <query> 
            <![CDATA[
            select count(*) from ? WHERE REPORT_TYPE = ?
            ]]>
        </query>
    </entity>
    <entity id="insertBalanceSummaryToTempTable">
        <query> 
            <![CDATA[
            INSERT
	INTO
		?(
			ARM_ADJ_RES_CONFIG_MASTER_SID,
			REPORT_TYPE,
			CREATED_BY,
			CREATED_DATE
		)
	VALUES(
		?,
		?,
		?,
		getdate()
	)
        UPDATE ? SET  VERSION_NO = ARM_BALANCE_SUMMARY_CONFIG_SID FROM ?
              WHERE VERSION_NO IS NULL
            ]]>
        </query>
    </entity>
    <entity id="getBalanceSummaryCount">
        <query> 
            <![CDATA[
           SELECT
	ARM_BALANCE_SUMMARY_CONFIG_SID,
	CHECK_RECORD,
	ACCOUNT,
	PIPELINE_ACCRUAL,
	DEMAND_ACCRUAL,
	PIPELINE_INVENTORY,
	DEMAND_REFORECAST,
	DEMAND_PAYMENT_TRUE_UP,
	FEES_ACCRUAL,
	INFLATION_ADJ,
	CREDIT_CARD_FEES,
	OTHER_FIXED_DOLLAR_FEES,
	INVENTORY_VALULATION,
	RETURN_RESERVE,
	VERSION_NO
FROM
	? A ?
	WHERE REPORT_TYPE = ?
	?
            ]]>
        </query>
    </entity>
    <entity id="getBalanceSummaryData">
        <query> 
            <![CDATA[
           SELECT
	ARM_BALANCE_SUMMARY_CONFIG_SID,
	CHECK_RECORD,
	ACCOUNT,
	PIPELINE_ACCRUAL,
	DEMAND_ACCRUAL,
	PIPELINE_INVENTORY,
	DEMAND_REFORECAST,
	DEMAND_PAYMENT_TRUE_UP,
	FEES_ACCRUAL,
	INFLATION_ADJ,
	CREDIT_CARD_FEES,
	OTHER_FIXED_DOLLAR_FEES,
	INVENTORY_VALULATION,
	RETURN_RESERVE,
	VERSION_NO
FROM
	? A ?
	WHERE REPORT_TYPE = ?
	?
	? OFFSET ? ROWS FETCH NEXT ? ROWS ONLY
            ]]>
        </query>
    </entity>
    <entity id="getBalanceSummaryExcelData">
        <query> 
            <![CDATA[
         
           SELECT
   ARM_BALANCE_SUMMARY_CONFIG_SID,
   CHECK_RECORD,
   ACCOUNT,
   AM.TRANSACTION_NAME AS TRANSACTION_NAME1,
   AM1.TRANSACTION_NAME AS TRANSACTION_NAME2,
   AM2.TRANSACTION_NAME AS TRANSACTION_NAME3,
   AM3.TRANSACTION_NAME AS TRANSACTION_NAME4,
   AM4.TRANSACTION_NAME AS TRANSACTION_NAME5,
   AM5.TRANSACTION_NAME AS TRANSACTION_NAME6,
   AM6.TRANSACTION_NAME AS TRANSACTION_NAME7,
   AM7.TRANSACTION_NAME AS TRANSACTION_NAME8,
   AM8.TRANSACTION_NAME AS TRANSACTION_NAME9,
   AM9.TRANSACTION_NAME AS TRANSACTION_NAME10,
   AM10.TRANSACTION_NAME AS TRANSACTION_NAME11,
   VERSION_NO
FROM
   ? temp
  LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM ON
    AM.ARM_ADJUSTMENT_CONFIG_SID = TEMP.PIPELINE_ACCRUAL
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM1 ON
    AM1.ARM_ADJUSTMENT_CONFIG_SID = TEMP.DEMAND_ACCRUAL
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM2 ON
    AM2.ARM_ADJUSTMENT_CONFIG_SID = TEMP.PIPELINE_INVENTORY
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM3 ON
    AM3.ARM_ADJUSTMENT_CONFIG_SID = TEMP.DEMAND_REFORECAST
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM4 ON
    AM4.ARM_ADJUSTMENT_CONFIG_SID = TEMP.DEMAND_PAYMENT_TRUE_UP
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM5 ON
    AM5.ARM_ADJUSTMENT_CONFIG_SID = TEMP.FEES_ACCRUAL
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM6 ON
    AM6.ARM_ADJUSTMENT_CONFIG_SID = TEMP.INFLATION_ADJ
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM7 ON
    AM7.ARM_ADJUSTMENT_CONFIG_SID = TEMP.CREDIT_CARD_FEES
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM8 ON
    AM8.ARM_ADJUSTMENT_CONFIG_SID = TEMP.OTHER_FIXED_DOLLAR_FEES
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM9 ON
    AM9.ARM_ADJUSTMENT_CONFIG_SID = TEMP.INVENTORY_VALULATION
    LEFT JOIN dbo.ARM_ADJUSTMENT_CONFIG AM10 ON
    AM10.ARM_ADJUSTMENT_CONFIG_SID = TEMP.RETURN_RESERVE
    
	WHERE REPORT_TYPE = ?
	?
    ? OFFSET ? ROWS FETCH NEXT ? ROWS ONLY
            ]]>
        </query>
    </entity>
    <entity id="update_Balance_Summary_Temp_TableData">
        <query> 
            <![CDATA[
        UPDATE ? SET ? = ? WHERE ARM_BALANCE_SUMMARY_CONFIG_SID = ? 
            ]]>
        </query>
    </entity>
    <entity id="loadDistinctAccounts">
        <query> 
            <![CDATA[
        select
	MIN( ARM_ADJ_RES_CONFIG_DETAIL_SID ) AS ID,
	ACCOUNT
from
	ST_ARM_ADJ_RES_CONFIG_MASTER TMP1
JOIN ? TMP2 ON
	TMP1.ARM_ADJ_RES_CONFIG_MASTER_SID = TMP2.ARM_ADJ_RES_CONFIG_MASTER_SID
WHERE
	CONFIGURATION_TYPE = 0
	AND ACCOUNT IS NOT NULL
GROUP BY
	ACCOUNT
            ]]>
        </query>
    </entity>
    <entity id="addLine_Balance_Summary_Temp_TableData">
        <query> 
            <![CDATA[
       
    INSERT
    INTO
		?
                (
                  ARM_ADJ_RES_CONFIG_MASTER_SID,
                  REPORT_TYPE,
                  VERSION_NO,
                  CHECK_RECORD,
                  CREATED_BY,
                  CREATED_DATE,
                  PARENT_VERSION_NO
                 )

        SELECT 

    ARM_ADJ_RES_CONFIG_MASTER_SID,
    REPORT_TYPE,
    VERSION_NO,
    CHECK_RECORD,
    CREATED_BY,
    CREATED_DATE,
    PARENT_VERSION_NO
    FROM(
    SELECT ARM_ADJ_RES_CONFIG_MASTER_SID,REPORT_TYPE,Concat(VERSION_NO, '.', Count(parent_version_no) OVER(partition BY ARM_ADJ_RES_CONFIG_MASTER_SID, REPORT_TYPE, COALESCE(parent_version_no, VERSION_NO))
    + 1) AS VERSION_NO,CHECK_RECORD,USERID AS CREATED_BY,CREATED_DATE,VERSION_NO AS parent_version_no FROM 
		  (
             SELECT
                  DISTINCT ARM_ADJ_RES_CONFIG_MASTER_SID,
                  REPORT_TYPE,
                  VERSION_NO AS VERSION_NO,
                  CHECK_RECORD,
                  '?' AS USERID,
                  getDate() AS CREATED_DATE,
				  PARENT_VERSION_NO
          FROM
                  ?
				  WHERE REPORT_TYPE = ?)A)B
		  WHERE
                  CHECK_RECORD = 1

            ]]>
        </query>
    </entity>
    <entity id="saveBalanceSummaryTempToMain">
        <query> 
            <![CDATA[
      MERGE ARM_BALANCE_SUMMARY_CONFIG AS TARGET USING
(
    SELECT ARM_ADJ_RES_CONFIG_MASTER_SID,
	ACCOUNT,
	REPORT_TYPE,
	PIPELINE_ACCRUAL,
	DEMAND_ACCRUAL,
	PIPELINE_INVENTORY,
	DEMAND_REFORECAST,
	DEMAND_PAYMENT_TRUE_UP,
	FEES_ACCRUAL,
	INFLATION_ADJ,
	CREDIT_CARD_FEES,
	OTHER_FIXED_DOLLAR_FEES,
	INVENTORY_VALULATION,
	RETURN_RESERVE,
	VERSION_NO
  FROM ?

)
SOURCE

        ON  TARGET.ARM_ADJ_RES_CONFIG_MASTER_SID = SOURCE.ARM_ADJ_RES_CONFIG_MASTER_SID
             AND TARGET.REPORT_TYPE = SOURCE.REPORT_TYPE
                    AND TARGET.VERSION_NO = SOURCE.VERSION_NO
                                  WHEN MATCHED THEN 
                                  UPDATE SET TARGET.ARM_ADJ_RES_CONFIG_MASTER_SID = SOURCE.ARM_ADJ_RES_CONFIG_MASTER_SID
            , TARGET.ACCOUNT = SOURCE.ACCOUNT
             , TARGET.REPORT_TYPE = SOURCE.REPORT_TYPE
                 ,  TARGET.PIPELINE_ACCRUAL = SOURCE.PIPELINE_ACCRUAL
                 ,  TARGET.DEMAND_ACCRUAL = SOURCE.DEMAND_ACCRUAL
                 ,  TARGET.PIPELINE_INVENTORY = SOURCE.PIPELINE_INVENTORY
                 ,  TARGET.DEMAND_REFORECAST = SOURCE.DEMAND_REFORECAST
                 ,  TARGET.DEMAND_PAYMENT_TRUE_UP = SOURCE.DEMAND_PAYMENT_TRUE_UP
                 ,  TARGET.FEES_ACCRUAL = SOURCE.FEES_ACCRUAL
                 ,  TARGET.INFLATION_ADJ = SOURCE.INFLATION_ADJ
                 ,  TARGET.CREDIT_CARD_FEES = SOURCE.CREDIT_CARD_FEES
                 ,  TARGET.OTHER_FIXED_DOLLAR_FEES = SOURCE.OTHER_FIXED_DOLLAR_FEES
                 ,  TARGET.INVENTORY_VALULATION = SOURCE.INVENTORY_VALULATION
                 ,  TARGET.RETURN_RESERVE = SOURCE.RETURN_RESERVE
                 ,  TARGET.VERSION_NO = SOURCE.VERSION_NO
WHEN NOT MATCHED BY SOURCE AND TARGET.ARM_ADJ_RES_CONFIG_MASTER_SID = ?  THEN
DELETE WHEN NOT MATCHED BY TARGET THEN
INSERT
(
   ARM_ADJ_RES_CONFIG_MASTER_SID,
	ACCOUNT,
	REPORT_TYPE,
	PIPELINE_ACCRUAL,
	DEMAND_ACCRUAL,
	PIPELINE_INVENTORY,
	DEMAND_REFORECAST,
	DEMAND_PAYMENT_TRUE_UP,
	FEES_ACCRUAL,
	INFLATION_ADJ,
	CREDIT_CARD_FEES,
	OTHER_FIXED_DOLLAR_FEES,
	INVENTORY_VALULATION,
	RETURN_RESERVE,
	VERSION_NO
)
VALUES
(
ARM_ADJ_RES_CONFIG_MASTER_SID,
	ACCOUNT,
	REPORT_TYPE,
	PIPELINE_ACCRUAL,
	DEMAND_ACCRUAL,
	PIPELINE_INVENTORY,
	DEMAND_REFORECAST,
	DEMAND_PAYMENT_TRUE_UP,
	FEES_ACCRUAL,
	INFLATION_ADJ,
	CREDIT_CARD_FEES,
	OTHER_FIXED_DOLLAR_FEES,
	INVENTORY_VALULATION,
	RETURN_RESERVE,
	VERSION_NO ) ;


            ]]>
        </query>
    </entity>
    <entity id="insertBalanceSummaryToTempTableFromMainTable">
        <query> 
            <![CDATA[
      INSERT
	INTO
		?(
			ARM_ADJ_RES_CONFIG_MASTER_SID,
			REPORT_TYPE,
			ACCOUNT,
			PIPELINE_ACCRUAL,
			DEMAND_ACCRUAL,
			PIPELINE_INVENTORY,
			DEMAND_REFORECAST,
			DEMAND_PAYMENT_TRUE_UP,
			FEES_ACCRUAL,
			INFLATION_ADJ,
			CREDIT_CARD_FEES,
			OTHER_FIXED_DOLLAR_FEES,
			INVENTORY_VALULATION,
			RETURN_RESERVE,
			CHECK_RECORD,
			VERSION_NO,
			CREATED_BY,
			CREATED_DATE,
			MODIFIED_BY,
			MODIFIED_DATE
		) SELECT
			ARM_ADJ_RES_CONFIG_MASTER_SID,
			REPORT_TYPE,
			ACCOUNT,
			PIPELINE_ACCRUAL,
			DEMAND_ACCRUAL,
			PIPELINE_INVENTORY,
			DEMAND_REFORECAST,
			DEMAND_PAYMENT_TRUE_UP,
			FEES_ACCRUAL,
			INFLATION_ADJ,
			CREDIT_CARD_FEES,
			OTHER_FIXED_DOLLAR_FEES,
			INVENTORY_VALULATION,
			RETURN_RESERVE,
			CHECK_RECORD,
			VERSION_NO,
			CREATED_BY,
			CREATED_DATE,
			MODIFIED_BY,
			MODIFIED_DATE
		FROM
			ARM_BALANCE_SUMMARY_CONFIG
		WHERE
			ARM_ADJ_RES_CONFIG_MASTER_SID =?
                          ?
            ]]>
        </query>
    </entity>
    <entity id="BalanceSummary_DeleteAddedLines">
        <query> 
            <![CDATA[
    delete from ? where REPORT_TYPE = ? AND VERSION_NO LIKE '%[.]%'

            ]]>
        </query>
    </entity>
    <entity id="deleteTempTableBalSummaryRecords">
        <query> 
            <![CDATA[
    delete from ? where REPORT_TYPE = ? 

            ]]>
        </query>
    </entity>
</sql>
