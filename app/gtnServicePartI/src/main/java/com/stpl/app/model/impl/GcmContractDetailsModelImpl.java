package com.stpl.app.model.impl;

import com.stpl.app.model.GcmContractDetails;
import com.stpl.app.model.GcmContractDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the GcmContractDetails service. Represents a row in the &quot;GCM_CONTRACT_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.GcmContractDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link GcmContractDetailsImpl}.
 * </p>
 *
 * @author
 * @see GcmContractDetailsImpl
 * @see com.stpl.app.model.GcmContractDetails
 * @see com.stpl.app.model.GcmContractDetailsModel
 * @generated
 */
public class GcmContractDetailsModelImpl extends BaseModelImpl<GcmContractDetails>
    implements GcmContractDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a gcm contract details model instance should use the {@link com.stpl.app.model.GcmContractDetails} interface instead.
     */
    public static final String TABLE_NAME = "GCM_CONTRACT_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "PAYMENT_METHOD", Types.VARCHAR },
            { "USER_ID", Types.INTEGER },
            { "END_DATE", Types.TIMESTAMP },
            { "PAYMENT_FREQUENCY", Types.VARCHAR },
            { "GCM_CONTRACT_DETAILS_SID", Types.INTEGER },
            { "COMPONENT_ID", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "COMPONENT_NAME", Types.VARCHAR },
            { "RS_CALENDAR", Types.VARCHAR },
            { "FILE_NAME", Types.VARCHAR },
            { "START_DATE", Types.TIMESTAMP },
            { "PLAN_LEVEL", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "COMPONENT_NO", Types.VARCHAR },
            { "PROGRAM_TYPE", Types.VARCHAR },
            { "SESSION_ID", Types.VARCHAR },
            { "MODIFIED_BY", Types.INTEGER },
            { "COMPONENT_STATUS", Types.VARCHAR },
            { "COMPONENT_TYPE", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table GCM_CONTRACT_DETAILS (PAYMENT_METHOD VARCHAR(75) null,USER_ID INTEGER,END_DATE DATE null,PAYMENT_FREQUENCY VARCHAR(75) null,GCM_CONTRACT_DETAILS_SID INTEGER not null primary key IDENTITY,COMPONENT_ID VARCHAR(75) null,MODIFIED_DATE DATE null,COMPONENT_NAME VARCHAR(75) null,RS_CALENDAR VARCHAR(75) null,FILE_NAME VARCHAR(75) null,START_DATE DATE null,PLAN_LEVEL VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY INTEGER,COMPONENT_NO VARCHAR(75) null,PROGRAM_TYPE VARCHAR(75) null,SESSION_ID VARCHAR(75) null,MODIFIED_BY INTEGER,COMPONENT_STATUS VARCHAR(75) null,COMPONENT_TYPE VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table GCM_CONTRACT_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY gcmContractDetails.gcmContractDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY GCM_CONTRACT_DETAILS.GCM_CONTRACT_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.GcmContractDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.GcmContractDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.GcmContractDetails"));
    private static ClassLoader _classLoader = GcmContractDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            GcmContractDetails.class
        };
    private String _paymentMethod;
    private int _userId;
    private Date _endDate;
    private String _paymentFrequency;
    private int _gcmContractDetailsSid;
    private String _componentId;
    private Date _modifiedDate;
    private String _componentName;
    private String _rsCalendar;
    private String _fileName;
    private Date _startDate;
    private String _planLevel;
    private Date _createdDate;
    private int _createdBy;
    private String _componentNo;
    private String _programType;
    private String _sessionId;
    private int _modifiedBy;
    private String _componentStatus;
    private String _componentType;
    private GcmContractDetails _escapedModel;

    public GcmContractDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _gcmContractDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setGcmContractDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _gcmContractDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return GcmContractDetails.class;
    }

    @Override
    public String getModelClassName() {
        return GcmContractDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("paymentMethod", getPaymentMethod());
        attributes.put("userId", getUserId());
        attributes.put("endDate", getEndDate());
        attributes.put("paymentFrequency", getPaymentFrequency());
        attributes.put("gcmContractDetailsSid", getGcmContractDetailsSid());
        attributes.put("componentId", getComponentId());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("componentName", getComponentName());
        attributes.put("rsCalendar", getRsCalendar());
        attributes.put("fileName", getFileName());
        attributes.put("startDate", getStartDate());
        attributes.put("planLevel", getPlanLevel());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("componentNo", getComponentNo());
        attributes.put("programType", getProgramType());
        attributes.put("sessionId", getSessionId());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("componentStatus", getComponentStatus());
        attributes.put("componentType", getComponentType());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String paymentMethod = (String) attributes.get("paymentMethod");

        if (paymentMethod != null) {
            setPaymentMethod(paymentMethod);
        }

        Integer userId = (Integer) attributes.get("userId");

        if (userId != null) {
            setUserId(userId);
        }

        Date endDate = (Date) attributes.get("endDate");

        if (endDate != null) {
            setEndDate(endDate);
        }

        String paymentFrequency = (String) attributes.get("paymentFrequency");

        if (paymentFrequency != null) {
            setPaymentFrequency(paymentFrequency);
        }

        Integer gcmContractDetailsSid = (Integer) attributes.get(
                "gcmContractDetailsSid");

        if (gcmContractDetailsSid != null) {
            setGcmContractDetailsSid(gcmContractDetailsSid);
        }

        String componentId = (String) attributes.get("componentId");

        if (componentId != null) {
            setComponentId(componentId);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String componentName = (String) attributes.get("componentName");

        if (componentName != null) {
            setComponentName(componentName);
        }

        String rsCalendar = (String) attributes.get("rsCalendar");

        if (rsCalendar != null) {
            setRsCalendar(rsCalendar);
        }

        String fileName = (String) attributes.get("fileName");

        if (fileName != null) {
            setFileName(fileName);
        }

        Date startDate = (Date) attributes.get("startDate");

        if (startDate != null) {
            setStartDate(startDate);
        }

        String planLevel = (String) attributes.get("planLevel");

        if (planLevel != null) {
            setPlanLevel(planLevel);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String componentNo = (String) attributes.get("componentNo");

        if (componentNo != null) {
            setComponentNo(componentNo);
        }

        String programType = (String) attributes.get("programType");

        if (programType != null) {
            setProgramType(programType);
        }

        String sessionId = (String) attributes.get("sessionId");

        if (sessionId != null) {
            setSessionId(sessionId);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String componentStatus = (String) attributes.get("componentStatus");

        if (componentStatus != null) {
            setComponentStatus(componentStatus);
        }

        String componentType = (String) attributes.get("componentType");

        if (componentType != null) {
            setComponentType(componentType);
        }
    }

    @Override
    public String getPaymentMethod() {
        if (_paymentMethod == null) {
            return StringPool.BLANK;
        } else {
            return _paymentMethod;
        }
    }

    @Override
    public void setPaymentMethod(String paymentMethod) {
        _paymentMethod = paymentMethod;
    }

    @Override
    public int getUserId() {
        return _userId;
    }

    @Override
    public void setUserId(int userId) {
        _userId = userId;
    }

    @Override
    public Date getEndDate() {
        return _endDate;
    }

    @Override
    public void setEndDate(Date endDate) {
        _endDate = endDate;
    }

    @Override
    public String getPaymentFrequency() {
        if (_paymentFrequency == null) {
            return StringPool.BLANK;
        } else {
            return _paymentFrequency;
        }
    }

    @Override
    public void setPaymentFrequency(String paymentFrequency) {
        _paymentFrequency = paymentFrequency;
    }

    @Override
    public int getGcmContractDetailsSid() {
        return _gcmContractDetailsSid;
    }

    @Override
    public void setGcmContractDetailsSid(int gcmContractDetailsSid) {
        _gcmContractDetailsSid = gcmContractDetailsSid;
    }

    @Override
    public String getComponentId() {
        if (_componentId == null) {
            return StringPool.BLANK;
        } else {
            return _componentId;
        }
    }

    @Override
    public void setComponentId(String componentId) {
        _componentId = componentId;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getComponentName() {
        if (_componentName == null) {
            return StringPool.BLANK;
        } else {
            return _componentName;
        }
    }

    @Override
    public void setComponentName(String componentName) {
        _componentName = componentName;
    }

    @Override
    public String getRsCalendar() {
        if (_rsCalendar == null) {
            return StringPool.BLANK;
        } else {
            return _rsCalendar;
        }
    }

    @Override
    public void setRsCalendar(String rsCalendar) {
        _rsCalendar = rsCalendar;
    }

    @Override
    public String getFileName() {
        if (_fileName == null) {
            return StringPool.BLANK;
        } else {
            return _fileName;
        }
    }

    @Override
    public void setFileName(String fileName) {
        _fileName = fileName;
    }

    @Override
    public Date getStartDate() {
        return _startDate;
    }

    @Override
    public void setStartDate(Date startDate) {
        _startDate = startDate;
    }

    @Override
    public String getPlanLevel() {
        if (_planLevel == null) {
            return StringPool.BLANK;
        } else {
            return _planLevel;
        }
    }

    @Override
    public void setPlanLevel(String planLevel) {
        _planLevel = planLevel;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getComponentNo() {
        if (_componentNo == null) {
            return StringPool.BLANK;
        } else {
            return _componentNo;
        }
    }

    @Override
    public void setComponentNo(String componentNo) {
        _componentNo = componentNo;
    }

    @Override
    public String getProgramType() {
        if (_programType == null) {
            return StringPool.BLANK;
        } else {
            return _programType;
        }
    }

    @Override
    public void setProgramType(String programType) {
        _programType = programType;
    }

    @Override
    public String getSessionId() {
        if (_sessionId == null) {
            return StringPool.BLANK;
        } else {
            return _sessionId;
        }
    }

    @Override
    public void setSessionId(String sessionId) {
        _sessionId = sessionId;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getComponentStatus() {
        if (_componentStatus == null) {
            return StringPool.BLANK;
        } else {
            return _componentStatus;
        }
    }

    @Override
    public void setComponentStatus(String componentStatus) {
        _componentStatus = componentStatus;
    }

    @Override
    public String getComponentType() {
        if (_componentType == null) {
            return StringPool.BLANK;
        } else {
            return _componentType;
        }
    }

    @Override
    public void setComponentType(String componentType) {
        _componentType = componentType;
    }

    @Override
    public GcmContractDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (GcmContractDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        GcmContractDetailsImpl gcmContractDetailsImpl = new GcmContractDetailsImpl();

        gcmContractDetailsImpl.setPaymentMethod(getPaymentMethod());
        gcmContractDetailsImpl.setUserId(getUserId());
        gcmContractDetailsImpl.setEndDate(getEndDate());
        gcmContractDetailsImpl.setPaymentFrequency(getPaymentFrequency());
        gcmContractDetailsImpl.setGcmContractDetailsSid(getGcmContractDetailsSid());
        gcmContractDetailsImpl.setComponentId(getComponentId());
        gcmContractDetailsImpl.setModifiedDate(getModifiedDate());
        gcmContractDetailsImpl.setComponentName(getComponentName());
        gcmContractDetailsImpl.setRsCalendar(getRsCalendar());
        gcmContractDetailsImpl.setFileName(getFileName());
        gcmContractDetailsImpl.setStartDate(getStartDate());
        gcmContractDetailsImpl.setPlanLevel(getPlanLevel());
        gcmContractDetailsImpl.setCreatedDate(getCreatedDate());
        gcmContractDetailsImpl.setCreatedBy(getCreatedBy());
        gcmContractDetailsImpl.setComponentNo(getComponentNo());
        gcmContractDetailsImpl.setProgramType(getProgramType());
        gcmContractDetailsImpl.setSessionId(getSessionId());
        gcmContractDetailsImpl.setModifiedBy(getModifiedBy());
        gcmContractDetailsImpl.setComponentStatus(getComponentStatus());
        gcmContractDetailsImpl.setComponentType(getComponentType());

        gcmContractDetailsImpl.resetOriginalValues();

        return gcmContractDetailsImpl;
    }

    @Override
    public int compareTo(GcmContractDetails gcmContractDetails) {
        int primaryKey = gcmContractDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof GcmContractDetails)) {
            return false;
        }

        GcmContractDetails gcmContractDetails = (GcmContractDetails) obj;

        int primaryKey = gcmContractDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<GcmContractDetails> toCacheModel() {
        GcmContractDetailsCacheModel gcmContractDetailsCacheModel = new GcmContractDetailsCacheModel();

        gcmContractDetailsCacheModel.paymentMethod = getPaymentMethod();

        String paymentMethod = gcmContractDetailsCacheModel.paymentMethod;

        if ((paymentMethod != null) && (paymentMethod.length() == 0)) {
            gcmContractDetailsCacheModel.paymentMethod = null;
        }

        gcmContractDetailsCacheModel.userId = getUserId();

        Date endDate = getEndDate();

        if (endDate != null) {
            gcmContractDetailsCacheModel.endDate = endDate.getTime();
        } else {
            gcmContractDetailsCacheModel.endDate = Long.MIN_VALUE;
        }

        gcmContractDetailsCacheModel.paymentFrequency = getPaymentFrequency();

        String paymentFrequency = gcmContractDetailsCacheModel.paymentFrequency;

        if ((paymentFrequency != null) && (paymentFrequency.length() == 0)) {
            gcmContractDetailsCacheModel.paymentFrequency = null;
        }

        gcmContractDetailsCacheModel.gcmContractDetailsSid = getGcmContractDetailsSid();

        gcmContractDetailsCacheModel.componentId = getComponentId();

        String componentId = gcmContractDetailsCacheModel.componentId;

        if ((componentId != null) && (componentId.length() == 0)) {
            gcmContractDetailsCacheModel.componentId = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            gcmContractDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            gcmContractDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        gcmContractDetailsCacheModel.componentName = getComponentName();

        String componentName = gcmContractDetailsCacheModel.componentName;

        if ((componentName != null) && (componentName.length() == 0)) {
            gcmContractDetailsCacheModel.componentName = null;
        }

        gcmContractDetailsCacheModel.rsCalendar = getRsCalendar();

        String rsCalendar = gcmContractDetailsCacheModel.rsCalendar;

        if ((rsCalendar != null) && (rsCalendar.length() == 0)) {
            gcmContractDetailsCacheModel.rsCalendar = null;
        }

        gcmContractDetailsCacheModel.fileName = getFileName();

        String fileName = gcmContractDetailsCacheModel.fileName;

        if ((fileName != null) && (fileName.length() == 0)) {
            gcmContractDetailsCacheModel.fileName = null;
        }

        Date startDate = getStartDate();

        if (startDate != null) {
            gcmContractDetailsCacheModel.startDate = startDate.getTime();
        } else {
            gcmContractDetailsCacheModel.startDate = Long.MIN_VALUE;
        }

        gcmContractDetailsCacheModel.planLevel = getPlanLevel();

        String planLevel = gcmContractDetailsCacheModel.planLevel;

        if ((planLevel != null) && (planLevel.length() == 0)) {
            gcmContractDetailsCacheModel.planLevel = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            gcmContractDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            gcmContractDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        gcmContractDetailsCacheModel.createdBy = getCreatedBy();

        gcmContractDetailsCacheModel.componentNo = getComponentNo();

        String componentNo = gcmContractDetailsCacheModel.componentNo;

        if ((componentNo != null) && (componentNo.length() == 0)) {
            gcmContractDetailsCacheModel.componentNo = null;
        }

        gcmContractDetailsCacheModel.programType = getProgramType();

        String programType = gcmContractDetailsCacheModel.programType;

        if ((programType != null) && (programType.length() == 0)) {
            gcmContractDetailsCacheModel.programType = null;
        }

        gcmContractDetailsCacheModel.sessionId = getSessionId();

        String sessionId = gcmContractDetailsCacheModel.sessionId;

        if ((sessionId != null) && (sessionId.length() == 0)) {
            gcmContractDetailsCacheModel.sessionId = null;
        }

        gcmContractDetailsCacheModel.modifiedBy = getModifiedBy();

        gcmContractDetailsCacheModel.componentStatus = getComponentStatus();

        String componentStatus = gcmContractDetailsCacheModel.componentStatus;

        if ((componentStatus != null) && (componentStatus.length() == 0)) {
            gcmContractDetailsCacheModel.componentStatus = null;
        }

        gcmContractDetailsCacheModel.componentType = getComponentType();

        String componentType = gcmContractDetailsCacheModel.componentType;

        if ((componentType != null) && (componentType.length() == 0)) {
            gcmContractDetailsCacheModel.componentType = null;
        }

        return gcmContractDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(41);

        sb.append("{paymentMethod=");
        sb.append(getPaymentMethod());
        sb.append(", userId=");
        sb.append(getUserId());
        sb.append(", endDate=");
        sb.append(getEndDate());
        sb.append(", paymentFrequency=");
        sb.append(getPaymentFrequency());
        sb.append(", gcmContractDetailsSid=");
        sb.append(getGcmContractDetailsSid());
        sb.append(", componentId=");
        sb.append(getComponentId());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", componentName=");
        sb.append(getComponentName());
        sb.append(", rsCalendar=");
        sb.append(getRsCalendar());
        sb.append(", fileName=");
        sb.append(getFileName());
        sb.append(", startDate=");
        sb.append(getStartDate());
        sb.append(", planLevel=");
        sb.append(getPlanLevel());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", componentNo=");
        sb.append(getComponentNo());
        sb.append(", programType=");
        sb.append(getProgramType());
        sb.append(", sessionId=");
        sb.append(getSessionId());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", componentStatus=");
        sb.append(getComponentStatus());
        sb.append(", componentType=");
        sb.append(getComponentType());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(64);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.GcmContractDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>paymentMethod</column-name><column-value><![CDATA[");
        sb.append(getPaymentMethod());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>userId</column-name><column-value><![CDATA[");
        sb.append(getUserId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>endDate</column-name><column-value><![CDATA[");
        sb.append(getEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>paymentFrequency</column-name><column-value><![CDATA[");
        sb.append(getPaymentFrequency());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>gcmContractDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getGcmContractDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>componentId</column-name><column-value><![CDATA[");
        sb.append(getComponentId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>componentName</column-name><column-value><![CDATA[");
        sb.append(getComponentName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsCalendar</column-name><column-value><![CDATA[");
        sb.append(getRsCalendar());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fileName</column-name><column-value><![CDATA[");
        sb.append(getFileName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>startDate</column-name><column-value><![CDATA[");
        sb.append(getStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>planLevel</column-name><column-value><![CDATA[");
        sb.append(getPlanLevel());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>componentNo</column-name><column-value><![CDATA[");
        sb.append(getComponentNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>programType</column-name><column-value><![CDATA[");
        sb.append(getProgramType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>sessionId</column-name><column-value><![CDATA[");
        sb.append(getSessionId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>componentStatus</column-name><column-value><![CDATA[");
        sb.append(getComponentStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>componentType</column-name><column-value><![CDATA[");
        sb.append(getComponentType());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
