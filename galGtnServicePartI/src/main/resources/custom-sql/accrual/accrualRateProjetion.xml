<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->
<custom-sql>
  
     <sql          
        id="AccrualMainSave">

<![CDATA[ 

MERGE    ACCRUAL_SALES_ACTUALS	 AS TARGET
		USING ( 
		SELECT PROJECTION_MASTER_SID,
ITEM_MASTER_SID,
PERIOD_SID,
TOTAL_UNITS,
EXCLUDED_UNITS,
NET_UNITS,
PRICE,
SALES,
EXCLUDED_DOLLARS,
DEMAND,
ADJUSTED_DEMAND
		FROM dbo.ST_ACCRUAL_SALES_ACTUALS
		WHERE USER_ID=@USER_ID AND SESSION_ID=@SESSION_ID
		) AS SOURCE 
		ON (TARGET.PROJECTION_MASTER_SID=SOURCE.PROJECTION_MASTER_SID
                    AND TARGET.ITEM_MASTER_SID = SOURCE.ITEM_MASTER_SID 
                    AND TARGET.PERIOD_SID = SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
TARGET.ITEM_MASTER_SID=SOURCE.ITEM_MASTER_SID,
TARGET.PERIOD_SID=SOURCE.PERIOD_SID,
TARGET.TOTAL_UNITS=SOURCE.TOTAL_UNITS,
TARGET.EXCLUDED_UNITS=SOURCE.EXCLUDED_UNITS,
TARGET.NET_UNITS=SOURCE.NET_UNITS,
TARGET.PRICE=SOURCE.PRICE,
TARGET.SALES=SOURCE.SALES,
TARGET.EXCLUDED_DOLLARS = SOURCE.EXCLUDED_DOLLARS,
TARGET.DEMAND=SOURCE.DEMAND,
TARGET.ADJUSTED_DEMAND=SOURCE.ADJUSTED_DEMAND

		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_MASTER_SID,
SOURCE.ITEM_MASTER_SID,
SOURCE.PERIOD_SID,
SOURCE.TOTAL_UNITS,
SOURCE.EXCLUDED_UNITS,
SOURCE.NET_UNITS,
SOURCE.PRICE,
SOURCE.SALES,
SOURCE.EXCLUDED_DOLLARS,
SOURCE.DEMAND,
SOURCE.ADJUSTED_DEMAND);;


MERGE    ACCRUAL_SALES_DETAILS	 AS TARGET
		USING ( 
		SELECT PROJECTION_MASTER_SID,
ITEM_MASTER_SID,
PERIOD_SID,
TOTAL_UNITS,
EXCLUDED_UNITS,
NET_UNITS,
PRICE,
SALES,
EXCLUDED_DOLLARS,
DEMAND,
ADJUSTED_DEMAND
		FROM dbo.ST_ACCRUAL_SALES_DETAILS
		WHERE USER_ID=@USER_ID AND SESSION_ID=@SESSION_ID
		) AS SOURCE 
		ON (TARGET.PROJECTION_MASTER_SID=SOURCE.PROJECTION_MASTER_SID
                    AND TARGET.ITEM_MASTER_SID = SOURCE.ITEM_MASTER_SID 
                    AND TARGET.PERIOD_SID = SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
TARGET.ITEM_MASTER_SID=SOURCE.ITEM_MASTER_SID,
TARGET.PERIOD_SID=SOURCE.PERIOD_SID,
TARGET.TOTAL_UNITS=SOURCE.TOTAL_UNITS,
TARGET.EXCLUDED_UNITS=SOURCE.EXCLUDED_UNITS,
TARGET.NET_UNITS=SOURCE.NET_UNITS,
TARGET.PRICE=SOURCE.PRICE,
TARGET.SALES=SOURCE.SALES,
TARGET.EXCLUDED_DOLLARS = SOURCE.EXCLUDED_DOLLARS,
TARGET.DEMAND=SOURCE.DEMAND,
TARGET.ADJUSTED_DEMAND=SOURCE.ADJUSTED_DEMAND

		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_MASTER_SID,
SOURCE.ITEM_MASTER_SID,
SOURCE.PERIOD_SID,
SOURCE.TOTAL_UNITS,
SOURCE.EXCLUDED_UNITS,
SOURCE.NET_UNITS,
SOURCE.PRICE,
SOURCE.SALES,
SOURCE.EXCLUDED_DOLLARS,
SOURCE.DEMAND,
SOURCE.ADJUSTED_DEMAND);;

    

MERGE    ACCRUAL_RATE_ACTUALS	 AS TARGET
		USING ( 
		SELECT ACCRUAL_PROJ_DETAILS_SID,PERIOD_SID,ACCRUAL_RATE,ACCRUAL_AMOUNT,PAYMENTS,DETAILS_ACCRUAL_RATE,DETAILS_ACCRUAL_AMOUNT,EFFECTIVE_ACCRUAL_RATE

		FROM dbo.ST_ACCRUAL_RATE_ACTUALS
		WHERE USER_ID=@USER_ID AND SESSION_ID=@SESSION_ID
		) AS SOURCE 
		ON (TARGET.ACCRUAL_PROJ_DETAILS_SID=SOURCE.ACCRUAL_PROJ_DETAILS_SID
                AND TARGET.PERIOD_SID = SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
TARGET.PERIOD_SID=SOURCE.PERIOD_SID,
TARGET.ACCRUAL_RATE=SOURCE.ACCRUAL_RATE,
TARGET.ACCRUAL_AMOUNT=SOURCE.ACCRUAL_AMOUNT,
TARGET.PAYMENTS=SOURCE.PAYMENTS,
TARGET.DETAILS_ACCRUAL_RATE=SOURCE.DETAILS_ACCRUAL_RATE,
TARGET.DETAILS_ACCRUAL_AMOUNT=SOURCE.DETAILS_ACCRUAL_AMOUNT,
TARGET.EFFECTIVE_ACCRUAL_RATE=SOURCE.EFFECTIVE_ACCRUAL_RATE


WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.ACCRUAL_PROJ_DETAILS_SID,
SOURCE.PERIOD_SID,
SOURCE.ACCRUAL_RATE,
SOURCE.ACCRUAL_AMOUNT,
SOURCE.PAYMENTS,
SOURCE.DETAILS_ACCRUAL_RATE,
SOURCE.DETAILS_ACCRUAL_AMOUNT,
SOURCE.EFFECTIVE_ACCRUAL_RATE);;


MERGE    ACCRUAL_RATE_DETAILS	 AS TARGET
		USING ( 
		SELECT ACCRUAL_PROJ_DETAILS_SID,PERIOD_SID,ACCRUAL_RATE,ACCRUAL_AMOUNT,PAYMENTS,DETAILS_ACCRUAL_RATE,DETAILS_ACCRUAL_AMOUNT,EFFECTIVE_ACCRUAL_RATE
                        
		FROM dbo.ST_ACCRUAL_RATE_DETAILS
		WHERE USER_ID=@USER_ID AND SESSION_ID=@SESSION_ID
		) AS SOURCE 
		ON (TARGET.ACCRUAL_PROJ_DETAILS_SID=SOURCE.ACCRUAL_PROJ_DETAILS_SID
                AND TARGET.PERIOD_SID = SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
TARGET.PERIOD_SID=SOURCE.PERIOD_SID,
TARGET.ACCRUAL_RATE=SOURCE.ACCRUAL_RATE,
TARGET.ACCRUAL_AMOUNT=SOURCE.ACCRUAL_AMOUNT,
TARGET.PAYMENTS=SOURCE.PAYMENTS,
TARGET.DETAILS_ACCRUAL_RATE=SOURCE.DETAILS_ACCRUAL_RATE,
TARGET.DETAILS_ACCRUAL_AMOUNT=SOURCE.DETAILS_ACCRUAL_AMOUNT,
TARGET.EFFECTIVE_ACCRUAL_RATE=SOURCE.EFFECTIVE_ACCRUAL_RATE


WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.ACCRUAL_PROJ_DETAILS_SID,
SOURCE.PERIOD_SID,
SOURCE.ACCRUAL_RATE,
SOURCE.ACCRUAL_AMOUNT,
SOURCE.PAYMENTS,
SOURCE.DETAILS_ACCRUAL_RATE,
SOURCE.DETAILS_ACCRUAL_AMOUNT,
SOURCE.EFFECTIVE_ACCRUAL_RATE);;
       

MERGE    EXCLUSION_DETAILS	 AS TARGET
		USING ( 
		SELECT PROJECTION_MASTER_SID,COMPANY_MASTER_SID
		FROM dbo.ST_EXCLUSION_DETAILS
		WHERE USER_ID=@USER_ID AND SESSION_ID=@SESSION_ID
		) AS SOURCE 
		ON (TARGET.PROJECTION_MASTER_SID=SOURCE.PROJECTION_MASTER_SID
                AND TARGET.COMPANY_MASTER_SID = SOURCE.COMPANY_MASTER_SID)
		
		WHEN MATCHED 
		
		THEN 
		UPDATE SET 
TARGET.COMPANY_MASTER_SID=SOURCE.COMPANY_MASTER_SID
WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_MASTER_SID,
SOURCE.COMPANY_MASTER_SID);;
       


       MERGE    ACCRUAL_DETAILS_ACTUALS	 AS TARGET
		USING ( 
		SELECT PROJECTION_MASTER_SID,
                ITEM_MASTER_SID,
                PERIOD_SID,
                COMPANY_MASTER_SID,
                GROSS_TRADE_SALES,
                INVENTORY_WITHDRAWALS,
                ELIGIBLE_GROSS_TRADE_SALES,
                PERIOD_BASIS_PRICE_CHANGE,
                GTS_ACCRUAL_BASIS
		FROM dbo.ST_ACCRUAL_DETAILS_ACTUALS
		WHERE USER_ID=@USER_ID AND SESSION_ID=@SESSION_ID
		) AS SOURCE 
		ON (TARGET.PROJECTION_MASTER_SID=SOURCE.PROJECTION_MASTER_SID
                    AND TARGET.ITEM_MASTER_SID = SOURCE.ITEM_MASTER_SID
                    AND TARGET.COMPANY_MASTER_SID = SOURCE.COMPANY_MASTER_SID
                    AND TARGET.PERIOD_SID = SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
TARGET.ITEM_MASTER_SID=SOURCE.ITEM_MASTER_SID,
TARGET.PERIOD_SID=SOURCE.PERIOD_SID,
TARGET.COMPANY_MASTER_SID=SOURCE.COMPANY_MASTER_SID,
TARGET.GROSS_TRADE_SALES=SOURCE.GROSS_TRADE_SALES,
TARGET.INVENTORY_WITHDRAWALS=SOURCE.INVENTORY_WITHDRAWALS,
TARGET.ELIGIBLE_GROSS_TRADE_SALES=SOURCE.ELIGIBLE_GROSS_TRADE_SALES,
TARGET.PERIOD_BASIS_PRICE_CHANGE=SOURCE.PERIOD_BASIS_PRICE_CHANGE,
TARGET.GTS_ACCRUAL_BASIS=SOURCE.GTS_ACCRUAL_BASIS

		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_MASTER_SID,
SOURCE.ITEM_MASTER_SID,
SOURCE.PERIOD_SID,
SOURCE.COMPANY_MASTER_SID,
SOURCE.GROSS_TRADE_SALES,
SOURCE.INVENTORY_WITHDRAWALS,
SOURCE.ELIGIBLE_GROSS_TRADE_SALES,
SOURCE.PERIOD_BASIS_PRICE_CHANGE,
SOURCE.GTS_ACCRUAL_BASIS);;



MERGE    ACCRUAL_DETAILS_INFO	 AS TARGET
		USING ( 
		SELECT  PROJECTION_MASTER_SID,
                        ITEM_MASTER_SID,
                        PERIOD_SID,
                        COMPANY_MASTER_SID,
                        GROSS_TRADE_SALES,
                        INVENTORY_WITHDRAWALS,
                        ELIGIBLE_GROSS_TRADE_SALES,
                        PERIOD_BASIS_PRICE_CHANGE,
                        GTS_ACCRUAL_BASIS
		FROM dbo.ST_ACCRUAL_DETAILS_INFO
		WHERE USER_ID=@USER_ID AND SESSION_ID=@SESSION_ID
		) AS SOURCE 
		ON (TARGET.PROJECTION_MASTER_SID=SOURCE.PROJECTION_MASTER_SID
                    AND TARGET.ITEM_MASTER_SID = SOURCE.ITEM_MASTER_SID
                    AND TARGET.COMPANY_MASTER_SID = SOURCE.COMPANY_MASTER_SID
                    AND TARGET.PERIOD_SID = SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
TARGET.ITEM_MASTER_SID=SOURCE.ITEM_MASTER_SID,
TARGET.PERIOD_SID=SOURCE.PERIOD_SID,
TARGET.COMPANY_MASTER_SID=SOURCE.COMPANY_MASTER_SID,
TARGET.GROSS_TRADE_SALES=SOURCE.GROSS_TRADE_SALES,
TARGET.INVENTORY_WITHDRAWALS=SOURCE.INVENTORY_WITHDRAWALS,
TARGET.ELIGIBLE_GROSS_TRADE_SALES=SOURCE.ELIGIBLE_GROSS_TRADE_SALES,
TARGET.PERIOD_BASIS_PRICE_CHANGE=SOURCE.PERIOD_BASIS_PRICE_CHANGE,
TARGET.GTS_ACCRUAL_BASIS=SOURCE.GTS_ACCRUAL_BASIS

		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_MASTER_SID,
SOURCE.ITEM_MASTER_SID,
SOURCE.PERIOD_SID,
SOURCE.COMPANY_MASTER_SID,
SOURCE.GROSS_TRADE_SALES,
SOURCE.INVENTORY_WITHDRAWALS,
SOURCE.ELIGIBLE_GROSS_TRADE_SALES,
SOURCE.PERIOD_BASIS_PRICE_CHANGE,
SOURCE.GTS_ACCRUAL_BASIS);;
       ]]>

    </sql>   
    
    
    
    <sql    id="InsertAccrualCCPValue">

<![CDATA[ 
MERGE ACCRUAL_PROJ_DETAILS AS TARGET
USING (SELECT  DISTINCT  CCP_PROJ.PROJECTION_MASTER_SID,
              CCP_PROJ.CCP_DETAILS_SID,
              R1.RS_MODEL_SID
       FROM   (SELECT DISTINCT @PROJECTION_MASTER_SID  PROJECTION_MASTER_SID,
                               CCP1.CCP_DETAILS_SID
               FROM   (SELECT CCP.CCP_DETAILS_SID
                       FROM   RELATIONSHIP_LEVEL_DEFINITION RLD,
                              CCP_MAP CCP
                       WHERE  RLD.HIERARCHY_NO LIKE '@HIERARCHY_NO'
                              AND CCP.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID) CCP1
               JOIN   (SELECT DISTINCT CCPD.CCP_DETAILS_SID
                       FROM   CCP_MAP CCP
                       JOIN   RELATIONSHIP_LEVEL_DEFINITION RLD ON CCP.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID
                       JOIN   PROJECTION_PROD_HIERARCHY PPH ON PPH.RELATIONSHIP_LEVEL_SID = RLD.RELATIONSHIP_LEVEL_SID
                                                           AND PPH.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                       JOIN   CCP_DETAILS CCPD ON CCP.CCP_DETAILS_SID = CCPD.CCP_DETAILS_SID) CCP2 ON CCP1.CCP_DETAILS_SID = CCP2.CCP_DETAILS_SID)CCP_PROJ
       JOIN   CCP_DETAILS B ON CCP_PROJ.CCP_DETAILS_SID = B.CCP_DETAILS_SID
       JOIN   RS_CONTRACT R1 ON R1.CONTRACT_MASTER_SID = B.CONTRACT_MASTER_SID
       JOIN   RS_CONTRACT_DETAILS R2 ON R2.RS_CONTRACT_SID = R1.RS_CONTRACT_SID
                                    AND R2.ITEM_MASTER_SID = B.ITEM_MASTER_SID
       WHERE  R1.INBOUND_STATUS <> 'D'
              AND R2.INBOUND_STATUS <> 'D'
              AND EXISTS(SELECT 1
                         FROM   CFP_CONTRACT CFP1
                         JOIN   CFP_CONTRACT_DETAILS CFP2 ON CFP1.CFP_CONTRACT_SID = CFP2.CFP_CONTRACT_SID
                                                         AND R1.CFP_CONTRACT_SID = CFP1.CFP_CONTRACT_SID
                         WHERE  COMPANY_MASTER_SID = B.COMPANY_MASTER_SID
                                AND CFP1.CONTRACT_MASTER_SID = B.CONTRACT_MASTER_SID)) AS SOURCE
ON ( TARGET.PROJECTION_MASTER_SID = SOURCE.PROJECTION_MASTER_SID
     AND TARGET.CCP_DETAILS_SID = SOURCE.CCP_DETAILS_SID
     AND TARGET.RS_MODEL_SID = SOURCE.RS_MODEL_SID )
WHEN NOT MATCHED THEN
  INSERT (PROJECTION_MASTER_SID,
          CCP_DETAILS_SID,
          RS_MODEL_SID)
  VALUES (SOURCE.PROJECTION_MASTER_SID,
          SOURCE.CCP_DETAILS_SID,
          SOURCE.RS_MODEL_SID);;
       
       ]]>

    </sql>  
    
    <sql          
        id="InsertAccrualTempSale">

<![CDATA[ 

INSERT INTO ST_ACCRUAL_SALES_ACTUALS(PROJECTION_MASTER_SID,
ITEM_MASTER_SID,
PERIOD_SID,
TOTAL_UNITS,
EXCLUDED_UNITS,
NET_UNITS,
PRICE,
SALES,
EXCLUDED_DOLLARS,
DEMAND,
ADJUSTED_DEMAND,

			USER_ID,
			SESSION_ID
			)
		SELECT A.PROJECTION_MASTER_SID,
			A.ITEM_MASTER_SID,
A.PERIOD_SID,
A.TOTAL_UNITS,
A.EXCLUDED_UNITS,
A.NET_UNITS,
A.PRICE,
A.SALES,
A.EXCLUDED_DOLLARS,
A.DEMAND,
A.ADJUSTED_DEMAND,

			@USER_ID USER_ID,
			@SESSION_ID  SESSION_ID

		FROM dbo.ACCRUAL_SALES_ACTUALS A
			
		WHERE A.PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;


INSERT INTO ST_ACCRUAL_SALES_DETAILS(PROJECTION_MASTER_SID,
ITEM_MASTER_SID,
PERIOD_SID,
TOTAL_UNITS,
EXCLUDED_UNITS,
NET_UNITS,
PRICE,
SALES,
EXCLUDED_DOLLARS,
DEMAND,
ADJUSTED_DEMAND,
			USER_ID,
			SESSION_ID
			)
		SELECT A.PROJECTION_MASTER_SID,
			A.ITEM_MASTER_SID,
A.PERIOD_SID,
A.TOTAL_UNITS,
A.EXCLUDED_UNITS,
A.NET_UNITS,
A.PRICE,
A.SALES,
A.EXCLUDED_DOLLARS,
A.DEMAND,
A.ADJUSTED_DEMAND,

			@USER_ID USER_ID,
			@SESSION_ID  SESSION_ID

		FROM dbo.ACCRUAL_SALES_DETAILS A
			
		WHERE A.PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
                
  
INSERT INTO ST_ACCRUAL_RATE_ACTUALS(ACCRUAL_PROJ_DETAILS_SID,
PERIOD_SID,
ACCRUAL_RATE,
ACCRUAL_AMOUNT,
PAYMENTS,
DETAILS_ACCRUAL_RATE,
DETAILS_ACCRUAL_AMOUNT,
EFFECTIVE_ACCRUAL_RATE,
USER_ID,
SESSION_ID)
SELECT  A.ACCRUAL_PROJ_DETAILS_SID,
A.PERIOD_SID,
A.ACCRUAL_RATE,
A.ACCRUAL_AMOUNT,
A.PAYMENTS,
A.DETAILS_ACCRUAL_RATE,
A.DETAILS_ACCRUAL_AMOUNT,
A.EFFECTIVE_ACCRUAL_RATE,
@USER_ID USER_ID,
@SESSION_ID  SESSION_ID
FROM dbo.ACCRUAL_RATE_ACTUALS A,ACCRUAL_PROJ_DETAILS B
WHERE A.ACCRUAL_PROJ_DETAILS_SID=B.ACCRUAL_PROJ_DETAILS_SID  AND 
  B.PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;              
 

INSERT INTO ST_ACCRUAL_RATE_DETAILS(ACCRUAL_PROJ_DETAILS_SID,
PERIOD_SID,
ACCRUAL_RATE,
ACCRUAL_AMOUNT,
PAYMENTS,
DETAILS_ACCRUAL_RATE,
DETAILS_ACCRUAL_AMOUNT,
EFFECTIVE_ACCRUAL_RATE,
USER_ID,
SESSION_ID)
SELECT  A.ACCRUAL_PROJ_DETAILS_SID,
A.PERIOD_SID,
A.ACCRUAL_RATE,
A.ACCRUAL_AMOUNT,
A.PAYMENTS,
A.DETAILS_ACCRUAL_RATE,
A.DETAILS_ACCRUAL_AMOUNT,
A.EFFECTIVE_ACCRUAL_RATE,
@USER_ID USER_ID,
@SESSION_ID  SESSION_ID
FROM dbo.ACCRUAL_RATE_DETAILS A,ACCRUAL_PROJ_DETAILS B
WHERE A.ACCRUAL_PROJ_DETAILS_SID=B.ACCRUAL_PROJ_DETAILS_SID  AND 
  B.PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;


INSERT INTO ST_EXCLUSION_DETAILS(PROJECTION_MASTER_SID,
COMPANY_MASTER_SID,
USER_ID,
SESSION_ID
			)
		SELECT A.PROJECTION_MASTER_SID,
			A.COMPANY_MASTER_SID,
                        @USER_ID USER_ID,
			@SESSION_ID SESSION_ID

		FROM dbo.EXCLUSION_DETAILS A
			
		WHERE A.PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;
                
INSERT INTO ST_ACCRUAL_DETAILS_ACTUALS (PROJECTION_MASTER_SID,
ITEM_MASTER_SID,PERIOD_SID,COMPANY_MASTER_SID,GROSS_TRADE_SALES,INVENTORY_WITHDRAWALS,ELIGIBLE_GROSS_TRADE_SALES,
PERIOD_BASIS_PRICE_CHANGE,
GTS_ACCRUAL_BASIS,
USER_ID,
SESSION_ID
			)
		SELECT A.PROJECTION_MASTER_SID,
		       A.ITEM_MASTER_SID,
                       A.PERIOD_SID,
                       A.COMPANY_MASTER_SID,
                       A.GROSS_TRADE_SALES,
                       A.INVENTORY_WITHDRAWALS,
                       A.ELIGIBLE_GROSS_TRADE_SALES,
                        A.PERIOD_BASIS_PRICE_CHANGE,
                        A.GTS_ACCRUAL_BASIS,
                        @USER_ID USER_ID,
			@SESSION_ID SESSION_ID

		FROM dbo.ACCRUAL_DETAILS_ACTUALS A
		WHERE A.PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;

INSERT INTO ST_ACCRUAL_DETAILS_INFO (PROJECTION_MASTER_SID,
ITEM_MASTER_SID,PERIOD_SID,COMPANY_MASTER_SID,GROSS_TRADE_SALES,INVENTORY_WITHDRAWALS,ELIGIBLE_GROSS_TRADE_SALES,
PERIOD_BASIS_PRICE_CHANGE,
GTS_ACCRUAL_BASIS,
USER_ID,
SESSION_ID
			)
		SELECT  A.PROJECTION_MASTER_SID,
                        A.ITEM_MASTER_SID,
                        A.PERIOD_SID,
                        A.COMPANY_MASTER_SID,
                        A.GROSS_TRADE_SALES,
                        A.INVENTORY_WITHDRAWALS,
                        A.ELIGIBLE_GROSS_TRADE_SALES,
                        A.PERIOD_BASIS_PRICE_CHANGE,
                        A.GTS_ACCRUAL_BASIS,
                        @USER_ID USER_ID,
			@SESSION_ID SESSION_ID

		FROM dbo.ACCRUAL_DETAILS_INFO A
		WHERE A.PROJECTION_MASTER_SID=@PROJECTION_MASTER_SID;                
       
       ]]>

    </sql>
    

    <sql id="load-customers">
        <![CDATA[ 
            SELECT DISTINCT CM.COMPANY_MASTER_SID,CM.COMPANY_NAME 
            FROM ACCRUAL_PROJ_DETAILS ARD
            JOIN CCP_DETAILS CCP ON ARD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID AND CCP.CCP_DETAILS_SID = ARD.CCP_DETAILS_SID
            JOIN COMPANY_MASTER CM ON CM.COMPANY_MASTER_SID = CCP.COMPANY_MASTER_SID;       
       ]]>
    </sql>
    
    <sql id="load-brands">
        <![CDATA[ 
            SELECT DISTINCT BM.BRAND_MASTER_SID,BM.BRAND_NAME FROM ACCRUAL_PROJ_DETAILS ARD
            JOIN CCP_DETAILS CCP ON ARD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID AND CCP.CCP_DETAILS_SID = ARD.CCP_DETAILS_SID
            JOIN COMPANY_MASTER CM ON CM.COMPANY_MASTER_SID = CCP.COMPANY_MASTER_SID AND CM.COMPANY_MASTER_SID = @COMPANY_MASTER_SID
            JOIN ITEM_MASTER IM ON IM.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID 
            JOIN BRAND_MASTER BM ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID;
        ]]>
    </sql>
    
    <sql  id="load-products">
        <![CDATA[ 
            SELECT DISTINCT IM.ITEM_MASTER_SID,IM.ITEM_NAME 
            FROM ACCRUAL_PROJ_DETAILS ARD
            JOIN CCP_DETAILS CCP ON ARD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID AND CCP.CCP_DETAILS_SID = ARD.CCP_DETAILS_SID
            JOIN COMPANY_MASTER CM ON CM.COMPANY_MASTER_SID = CCP.COMPANY_MASTER_SID AND CM.COMPANY_MASTER_SID = @COMPANY_MASTER_SID
            JOIN ITEM_MASTER IM ON IM.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID AND IM.BRAND_MASTER_SID = @BRAND_MASTER_SID;       
        ]]>
    </sql>
    
    <sql  id="products-count">
        <![CDATA[ 
            SELECT
                COUNT(DISTINCT ITEM_NO)
            FROM
                ACCRUAL_PROJ_DETAILS APD 
            JOIN CCP_DETAILS CCP
                ON CCP.CCP_DETAILS_SID = APD.CCP_DETAILS_SID AND APD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID 
            JOIN ITEM_MASTER IM
                ON IM.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID;      
        ]]>
    </sql>
    
    <sql  id="get-data-for-rates">
       <![CDATA[ 
            ;WITH ITEM
                AS (SELECT DISTINCT ITEM_MASTER_SID
            FROM   ACCRUAL_PROJ_DETAILS APD
            JOIN   CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID = APD.CCP_DETAILS_SID
                                  AND APD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
            ORDER  BY ITEM_MASTER_SID OFFSET @START ROWS FETCH NEXT @OFFSET ROWS ONLY) 
            SELECT IM.ITEM_NO AS NDC11,P."MONTH" AS MONTH,P."YEAR" AS YEAR,SUM(ACCRUAL_RATE)*100 AS ACCRUAL_RATE,SUM(ACCRUAL_AMOUNT) AS ACCRUAL_AMOUNT FROM 
            ACCRUAL_PROJ_DETAILS APD JOIN
            ST_ACCRUAL_RATE_ACTUALS ARA ON APD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID AND USER_ID = @USER_ID AND SESSION_ID = @SESSION_ID
            AND APD.ACCRUAL_PROJ_DETAILS_SID = ARA.ACCRUAL_PROJ_DETAILS_SID
            JOIN CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID = APD.CCP_DETAILS_SID 
            JOIN ITEM_MASTER IM ON IM.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID
            JOIN ITEM I ON I.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
            JOIN "PERIOD" P ON P.PERIOD_SID = ARA.PERIOD_SID AND P.PERIOD_DATE >= '@START_TIME_STAMP'
            GROUP BY IM.ITEM_NO,P."YEAR",P."MONTH"
            UNION
            SELECT IM.ITEM_NO AS NDC11,P."MONTH" AS MONTH,P."YEAR" AS YEAR,SUM(ACCRUAL_RATE)*100 AS ACCRUAL_RATE,SUM(ACCRUAL_AMOUNT) AS ACCRUAL_AMOUNT FROM 
            ACCRUAL_PROJ_DETAILS APD JOIN
            ST_ACCRUAL_RATE_DETAILS ARA ON APD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID AND USER_ID = @USER_ID AND SESSION_ID = @SESSION_ID
            AND APD.ACCRUAL_PROJ_DETAILS_SID = ARA.ACCRUAL_PROJ_DETAILS_SID
            JOIN CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID = APD.CCP_DETAILS_SID 
            JOIN ITEM_MASTER IM ON IM.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID
            JOIN ITEM I ON I.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
            JOIN "PERIOD" P ON P.PERIOD_SID = ARA.PERIOD_SID AND P.PERIOD_DATE <= '@END_TIME_STAMP'
            GROUP BY IM.ITEM_NO,P."YEAR",P."MONTH"
            ORDER BY IM.ITEM_NO,P."YEAR",P."MONTH";
        ]]>
    </sql>
    
    <sql  id="get-data-for-details">
        <![CDATA[ 

            DECLARE @SALES TABLE
                (
                   PERIOD_SID                 INT,
                   EXCLUDED_DOLLARS           NUMERIC(22, 6),                   
                   DEMAND                     NUMERIC(22, 6),
                   ADJUSTED_DEMAND            NUMERIC(22, 6),
                   USER_ID                    INT,
                   SESSION_ID                 INT
                )

            INSERT INTO @SALES
                        (PERIOD_SID,
                         EXCLUDED_DOLLARS,                         
                         DEMAND,
                         ADJUSTED_DEMAND,
                         USER_ID,
                         SESSION_ID)
            SELECT PERIOD_SID,
                   Sum(EXCLUDED_DOLLARS),                   
                   Sum(DEMAND),
                   Sum(ADJUSTED_DEMAND),
                   USER_ID,
                   SESSION_ID
            FROM   ST_ACCRUAL_SALES_ACTUALS STA
            JOIN   ITEM_MASTER IM ON IM.ITEM_MASTER_SID = STA.ITEM_MASTER_SID AND IM.BRAND_MASTER_SID = @BRAND_MASTER_SID                   
            WHERE  PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                   AND USER_ID = @USER_ID
                   AND SESSION_ID = @SESSION_ID       
                   AND STA.ITEM_MASTER_SID = @ITEM_MASTER_SID
            GROUP  BY PERIOD_SID,
                      USER_ID,
                      SESSION_ID
            UNION ALL
            SELECT PERIOD_SID,
                   Sum(EXCLUDED_DOLLARS),                  
                   Sum(DEMAND),
                   Sum(ADJUSTED_DEMAND),
                   USER_ID,
                   SESSION_ID
            FROM   dbo.ST_ACCRUAL_SALES_DETAILS STA
            JOIN   ITEM_MASTER IM ON IM.ITEM_MASTER_SID = STA.ITEM_MASTER_SID AND IM.BRAND_MASTER_SID = @BRAND_MASTER_SID                   
            WHERE  PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                   AND USER_ID = @USER_ID
                   AND SESSION_ID = @SESSION_ID       
                   AND STA.ITEM_MASTER_SID = @ITEM_MASTER_SID
            GROUP  BY PERIOD_SID,
                      USER_ID,
                      SESSION_ID
            ORDER  BY PERIOD_SID;

            DECLARE @DETAILS TABLE
              (
                PERIOD_SID            INT,
                GROSS_TRADE_SALES     NUMERIC(22, 6),
                INVENTORY_WITHDRAWALS NUMERIC(22, 6),
                ELIGIBLE_GROSS_TRADE_SALES NUMERIC(22, 6),
                PERIOD_BASIS_PRICE_CHANGE  NUMERIC(22, 6),
                GTS_ACCRUAL_BASIS          NUMERIC(22, 6),
                USER_ID               INT,
                SESSION_ID            INT
              )

            INSERT INTO @DETAILS
                        (PERIOD_SID,
                         GROSS_TRADE_SALES,
                         INVENTORY_WITHDRAWALS,
                         ELIGIBLE_GROSS_TRADE_SALES,
                         PERIOD_BASIS_PRICE_CHANGE,
                         GTS_ACCRUAL_BASIS,
                         USER_ID,
                         SESSION_ID)
            SELECT PERIOD_SID,
                   Sum(GROSS_TRADE_SALES),
                   Sum(INVENTORY_WITHDRAWALS),
                   Sum(ELIGIBLE_GROSS_TRADE_SALES),
                   Avg(PERIOD_BASIS_PRICE_CHANGE),
                   Sum(GTS_ACCRUAL_BASIS),
                   USER_ID,
                   SESSION_ID
            FROM   ST_ACCRUAL_DETAILS_ACTUALS STA
            JOIN   ITEM_MASTER IM ON IM.ITEM_MASTER_SID = STA.ITEM_MASTER_SID AND IM.BRAND_MASTER_SID = @BRAND_MASTER_SID
            WHERE  PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                   AND USER_ID = @USER_ID
                   AND SESSION_ID = @SESSION_ID                   
                   AND STA.ITEM_MASTER_SID = @ITEM_MASTER_SID       
            GROUP  BY PERIOD_SID,
                      USER_ID,
                      SESSION_ID
            UNION ALL
            SELECT PERIOD_SID,
                   Sum(GROSS_TRADE_SALES),
                   Sum(INVENTORY_WITHDRAWALS),
                   Sum(ELIGIBLE_GROSS_TRADE_SALES),
                   Avg(PERIOD_BASIS_PRICE_CHANGE),
                   Sum(GTS_ACCRUAL_BASIS),
                   USER_ID,
                   SESSION_ID
            FROM   dbo.ST_ACCRUAL_DETAILS_INFO STA
            JOIN   ITEM_MASTER IM ON IM.ITEM_MASTER_SID = STA.ITEM_MASTER_SID AND IM.BRAND_MASTER_SID = @BRAND_MASTER_SID
            WHERE  PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                   AND USER_ID = @USER_ID
                   AND SESSION_ID = @SESSION_ID                   
                   AND STA.ITEM_MASTER_SID = @ITEM_MASTER_SID       
            GROUP  BY PERIOD_SID,
                      USER_ID,
                      SESSION_ID
            ORDER  BY PERIOD_SID;

            DECLARE @RATES TABLE
              (
                 PERIOD_SID             INT,
                 PAYMENTS               NUMERIC(22, 6),
                 DETAILS_ACCRUAL_RATE   NUMERIC(22, 6),
                 DETAILS_ACCRUAL_AMOUNT NUMERIC(22, 6),
                 EFFECTIVE_ACCRUAL_RATE NUMERIC(22, 6),
                 USER_ID                INT,
                 SESSION_ID             INT
              )

            INSERT INTO @RATES
                        (PERIOD_SID,
                         PAYMENTS,
                         DETAILS_ACCRUAL_RATE,
                         DETAILS_ACCRUAL_AMOUNT,
                         EFFECTIVE_ACCRUAL_RATE,
                         USER_ID,
                         SESSION_ID)
            SELECT PERIOD_SID,
                   Sum(PAYMENTS),
                   Sum(DETAILS_ACCRUAL_RATE),
                   Sum(DETAILS_ACCRUAL_AMOUNT),
                   Sum(EFFECTIVE_ACCRUAL_RATE),
                   USER_ID,
                   SESSION_ID
            FROM   dbo.ACCRUAL_PROJ_DETAILS AD
            JOIN   ST_ACCRUAL_RATE_ACTUALS ARA ON AD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                                              AND AD.ACCRUAL_PROJ_DETAILS_SID = ARA.ACCRUAL_PROJ_DETAILS_SID
            JOIN   CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID = AD.CCP_DETAILS_SID
            JOIN   ITEM_MASTER IM ON IM.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID AND IM.BRAND_MASTER_SID = @BRAND_MASTER_SID
            WHERE  USER_ID = @USER_ID
                   AND SESSION_ID = @SESSION_ID
                   AND CCP.COMPANY_MASTER_SID = @COMPANY_MASTER_SID
                   AND CCP.ITEM_MASTER_SID = @ITEM_MASTER_SID       
            GROUP  BY PERIOD_SID,
                      USER_ID,
                      SESSION_ID
            UNION ALL
            SELECT PERIOD_SID,
                   Sum(PAYMENTS),
                   Sum(DETAILS_ACCRUAL_RATE),
                   Sum(DETAILS_ACCRUAL_AMOUNT),
                   Sum(EFFECTIVE_ACCRUAL_RATE),
                   USER_ID,
                   SESSION_ID
            FROM   dbo.ACCRUAL_PROJ_DETAILS AD
            JOIN   dbo.ST_ACCRUAL_RATE_DETAILS ARD ON AD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                                                  AND AD.ACCRUAL_PROJ_DETAILS_SID = ARD.ACCRUAL_PROJ_DETAILS_SID
            JOIN   CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID = AD.CCP_DETAILS_SID
            JOIN   ITEM_MASTER IM ON IM.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID AND IM.BRAND_MASTER_SID = @BRAND_MASTER_SID
            WHERE  USER_ID = @USER_ID
                   AND SESSION_ID = @SESSION_ID
                   AND CCP.COMPANY_MASTER_SID = @COMPANY_MASTER_SID
                   AND CCP.ITEM_MASTER_SID = @ITEM_MASTER_SID       
            GROUP  BY PERIOD_SID,
                      USER_ID,
                      SESSION_ID
            ORDER  BY PERIOD_SID;

            SELECT    P."MONTH",
          P."YEAR",
          ISNULL(GROSS_TRADE_SALES, 0)                                                                                                                                   AS GROSS_TRADE_SALES,
          ISNULL(EXCLUDED_DOLLARS, 0)                                                                                                                                    AS EXCLUDED_DOLLARS,
          ( ISNULL(GROSS_TRADE_SALES, 0)
            + ISNULL(EXCLUDED_DOLLARS, 0) )                                                                                                                              AS ELIGIBLE_GROSS_TRADE_SALES,
          ( ISNULL(PERIOD_BASIS_PRICE_CHANGE, 0) * 100 )                                                                                                                 AS PERIOD_BASIS_PRICE_CHANGE,
          ( ( ISNULL( GROSS_TRADE_SALES, 0 ) + ISNULL( EXCLUDED_DOLLARS, 0 ) ) * ( 1 + ISNULL( PERIOD_BASIS_PRICE_CHANGE, 0 ) ) )                                       AS GTS_ACCRUAL_BASIS,
          INVENTORY_WITHDRAWALS,
          DEMAND,
          ADJUSTED_DEMAND,
          PAYMENTS,
          (PAYMENTS/NULLIF(@SELECTED_RATE_BASIS,0)) * 100 AS ACCRUAL_RATE,
          (PAYMENTS/NULLIF(@SELECTED_RATE_BASIS,0)) * ( ISNULL(ELIGIBLE_GROSS_TRADE_SALES, 0) * ( 1 + ISNULL(PERIOD_BASIS_PRICE_CHANGE, 0) ) )                                                AS DETAILS_ACCRUAL_AMOUNT,
          (((PAYMENTS/NULLIF(@SELECTED_RATE_BASIS,0)) * ( ISNULL(ELIGIBLE_GROSS_TRADE_SALES, 0) * ( 1 + ISNULL(PERIOD_BASIS_PRICE_CHANGE, 0) ) ) ) / nullif ( ( ISNULL( GROSS_TRADE_SALES, 0 ) + ISNULL( EXCLUDED_DOLLARS, 0 ) ),0) ) * 100 AS EFFECTIVE_ACCRUAL_RATE
            FROM      @SALES SD
            JOIN      dbo.PERIOD P ON P.PERIOD_SID = SD.PERIOD_SID
            LEFT JOIN @RATES RD ON RD.PERIOD_SID = SD.PERIOD_SID
            LEFT JOIN @DETAILS D ON D.PERIOD_SID = SD.PERIOD_SID; 

        ]]>
    </sql>
        
                
</custom-sql>
