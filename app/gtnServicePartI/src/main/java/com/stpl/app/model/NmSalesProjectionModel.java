package com.stpl.app.model;

import com.stpl.app.service.persistence.NmSalesProjectionPK;

import com.stpl.portal.model.BaseModel;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.service.ServiceContext;

import com.stpl.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the NmSalesProjection service. Represents a row in the &quot;NM_SALES_PROJECTION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.NmSalesProjectionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.NmSalesProjectionImpl}.
 * </p>
 *
 * @author
 * @see NmSalesProjection
 * @see com.stpl.app.model.impl.NmSalesProjectionImpl
 * @see com.stpl.app.model.impl.NmSalesProjectionModelImpl
 * @generated
 */
public interface NmSalesProjectionModel extends BaseModel<NmSalesProjection> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a nm sales projection model instance should use the {@link NmSalesProjection} interface instead.
     */

    /**
     * Returns the primary key of this nm sales projection.
     *
     * @return the primary key of this nm sales projection
     */
    public NmSalesProjectionPK getPrimaryKey();

    /**
     * Sets the primary key of this nm sales projection.
     *
     * @param primaryKey the primary key of this nm sales projection
     */
    public void setPrimaryKey(NmSalesProjectionPK primaryKey);

    /**
     * Returns the period sid of this nm sales projection.
     *
     * @return the period sid of this nm sales projection
     */
    public int getPeriodSid();

    /**
     * Sets the period sid of this nm sales projection.
     *
     * @param periodSid the period sid of this nm sales projection
     */
    public void setPeriodSid(int periodSid);

    /**
     * Returns the product growth of this nm sales projection.
     *
     * @return the product growth of this nm sales projection
     */
    public double getProductGrowth();

    /**
     * Sets the product growth of this nm sales projection.
     *
     * @param productGrowth the product growth of this nm sales projection
     */
    public void setProductGrowth(double productGrowth);

    /**
     * Returns the projection details sid of this nm sales projection.
     *
     * @return the projection details sid of this nm sales projection
     */
    public int getProjectionDetailsSid();

    /**
     * Sets the projection details sid of this nm sales projection.
     *
     * @param projectionDetailsSid the projection details sid of this nm sales projection
     */
    public void setProjectionDetailsSid(int projectionDetailsSid);

    /**
     * Returns the account growth of this nm sales projection.
     *
     * @return the account growth of this nm sales projection
     */
    public double getAccountGrowth();

    /**
     * Sets the account growth of this nm sales projection.
     *
     * @param accountGrowth the account growth of this nm sales projection
     */
    public void setAccountGrowth(double accountGrowth);

    /**
     * Returns the projection units of this nm sales projection.
     *
     * @return the projection units of this nm sales projection
     */
    public double getProjectionUnits();

    /**
     * Sets the projection units of this nm sales projection.
     *
     * @param projectionUnits the projection units of this nm sales projection
     */
    public void setProjectionUnits(double projectionUnits);

    /**
     * Returns the projection sales of this nm sales projection.
     *
     * @return the projection sales of this nm sales projection
     */
    public double getProjectionSales();

    /**
     * Sets the projection sales of this nm sales projection.
     *
     * @param projectionSales the projection sales of this nm sales projection
     */
    public void setProjectionSales(double projectionSales);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(NmSalesProjection nmSalesProjection);

    @Override
    public int hashCode();

    @Override
    public CacheModel<NmSalesProjection> toCacheModel();

    @Override
    public NmSalesProjection toEscapedModel();

    @Override
    public NmSalesProjection toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
