/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.PriceScheduleMaster;
import com.stpl.app.model.PriceScheduleMasterModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PriceScheduleMaster service. Represents a row in the &quot;PRICE_SCHEDULE_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link PriceScheduleMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PriceScheduleMasterImpl}.
 * </p>
 *
 * @author
 * @see PriceScheduleMasterImpl
 * @see PriceScheduleMaster
 * @see PriceScheduleMasterModel
 * @generated
 */
@ProviderType
public class PriceScheduleMasterModelImpl extends BaseModelImpl<PriceScheduleMaster>
	implements PriceScheduleMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a price schedule master model instance should use the {@link PriceScheduleMaster} interface instead.
	 */
	public static final String TABLE_NAME = "PRICE_SCHEDULE_MASTER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PARENT_PRICE_SCHEDULE_NAME", Types.VARCHAR },
			{ "PARENT_PRICE_SCHEDULE_ID", Types.VARCHAR },
			{ "PRICE_SCHEDULE_START_DATE", Types.TIMESTAMP },
			{ "PRICE_SCHEDULE_NO", Types.VARCHAR },
			{ "PRICE_SCHEDULE_NAME", Types.VARCHAR },
			{ "PRICE_SCHEDULE_ID", Types.VARCHAR },
			{ "PRICE_SCHEDULE_TYPE", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "PRICE_SCHEDULE_SYSTEM_ID", Types.INTEGER },
			{ "RECORD_LOCK_STATUS", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.VARCHAR },
			{ "PRICE_SCHEDULE_DESIGNATION", Types.VARCHAR },
			{ "PRICE_SCHEDULE_END_DATE", Types.TIMESTAMP },
			{ "PRICE_SCHEDULE_STATUS", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "PRICE_SCHEDULE_CATEGORY", Types.VARCHAR },
			{ "TRADE_CLASS", Types.VARCHAR },
			{ "INBOUND_STATUS", Types.VARCHAR },
			{ "MODIFIED_BY", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("PARENT_PRICE_SCHEDULE_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PARENT_PRICE_SCHEDULE_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_SYSTEM_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("RECORD_LOCK_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_DESIGNATION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_SCHEDULE_CATEGORY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TRADE_CLASS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table PRICE_SCHEDULE_MASTER (PARENT_PRICE_SCHEDULE_NAME VARCHAR(75) null,PARENT_PRICE_SCHEDULE_ID VARCHAR(75) null,PRICE_SCHEDULE_START_DATE DATE null,PRICE_SCHEDULE_NO VARCHAR(75) null,PRICE_SCHEDULE_NAME VARCHAR(75) null,PRICE_SCHEDULE_ID VARCHAR(75) null,PRICE_SCHEDULE_TYPE VARCHAR(75) null,MODIFIED_DATE DATE null,PRICE_SCHEDULE_SYSTEM_ID INTEGER not null primary key IDENTITY,RECORD_LOCK_STATUS VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY VARCHAR(75) null,PRICE_SCHEDULE_DESIGNATION VARCHAR(75) null,PRICE_SCHEDULE_END_DATE DATE null,PRICE_SCHEDULE_STATUS VARCHAR(75) null,BATCH_ID VARCHAR(75) null,PRICE_SCHEDULE_CATEGORY VARCHAR(75) null,TRADE_CLASS VARCHAR(75) null,INBOUND_STATUS VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table PRICE_SCHEDULE_MASTER";
	public static final String ORDER_BY_JPQL = " ORDER BY priceScheduleMaster.priceScheduleSystemId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY PRICE_SCHEDULE_MASTER.PRICE_SCHEDULE_SYSTEM_ID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.PriceScheduleMaster"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.PriceScheduleMaster"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.stpl.app.model.PriceScheduleMaster"),
			true);
	public static final long PRICESCHEDULEID_COLUMN_BITMASK = 1L;
	public static final long PRICESCHEDULENAME_COLUMN_BITMASK = 2L;
	public static final long PRICESCHEDULENO_COLUMN_BITMASK = 4L;
	public static final long PRICESCHEDULESTATUS_COLUMN_BITMASK = 8L;
	public static final long PRICESCHEDULETYPE_COLUMN_BITMASK = 16L;
	public static final long PRICESCHEDULESYSTEMID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.PriceScheduleMaster"));

	public PriceScheduleMasterModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _priceScheduleSystemId;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setPriceScheduleSystemId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _priceScheduleSystemId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PriceScheduleMaster.class;
	}

	@Override
	public String getModelClassName() {
		return PriceScheduleMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("parentPriceScheduleName", getParentPriceScheduleName());
		attributes.put("parentPriceScheduleId", getParentPriceScheduleId());
		attributes.put("priceScheduleStartDate", getPriceScheduleStartDate());
		attributes.put("priceScheduleNo", getPriceScheduleNo());
		attributes.put("priceScheduleName", getPriceScheduleName());
		attributes.put("priceScheduleId", getPriceScheduleId());
		attributes.put("priceScheduleType", getPriceScheduleType());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("priceScheduleSystemId", getPriceScheduleSystemId());
		attributes.put("recordLockStatus", getRecordLockStatus());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("priceScheduleDesignation", getPriceScheduleDesignation());
		attributes.put("priceScheduleEndDate", getPriceScheduleEndDate());
		attributes.put("priceScheduleStatus", getPriceScheduleStatus());
		attributes.put("batchId", getBatchId());
		attributes.put("priceScheduleCategory", getPriceScheduleCategory());
		attributes.put("tradeClass", getTradeClass());
		attributes.put("inboundStatus", getInboundStatus());
		attributes.put("modifiedBy", getModifiedBy());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String parentPriceScheduleName = (String)attributes.get(
				"parentPriceScheduleName");

		if (parentPriceScheduleName != null) {
			setParentPriceScheduleName(parentPriceScheduleName);
		}

		String parentPriceScheduleId = (String)attributes.get(
				"parentPriceScheduleId");

		if (parentPriceScheduleId != null) {
			setParentPriceScheduleId(parentPriceScheduleId);
		}

		Date priceScheduleStartDate = (Date)attributes.get(
				"priceScheduleStartDate");

		if (priceScheduleStartDate != null) {
			setPriceScheduleStartDate(priceScheduleStartDate);
		}

		String priceScheduleNo = (String)attributes.get("priceScheduleNo");

		if (priceScheduleNo != null) {
			setPriceScheduleNo(priceScheduleNo);
		}

		String priceScheduleName = (String)attributes.get("priceScheduleName");

		if (priceScheduleName != null) {
			setPriceScheduleName(priceScheduleName);
		}

		String priceScheduleId = (String)attributes.get("priceScheduleId");

		if (priceScheduleId != null) {
			setPriceScheduleId(priceScheduleId);
		}

		String priceScheduleType = (String)attributes.get("priceScheduleType");

		if (priceScheduleType != null) {
			setPriceScheduleType(priceScheduleType);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer priceScheduleSystemId = (Integer)attributes.get(
				"priceScheduleSystemId");

		if (priceScheduleSystemId != null) {
			setPriceScheduleSystemId(priceScheduleSystemId);
		}

		String recordLockStatus = (String)attributes.get("recordLockStatus");

		if (recordLockStatus != null) {
			setRecordLockStatus(recordLockStatus);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String priceScheduleDesignation = (String)attributes.get(
				"priceScheduleDesignation");

		if (priceScheduleDesignation != null) {
			setPriceScheduleDesignation(priceScheduleDesignation);
		}

		Date priceScheduleEndDate = (Date)attributes.get("priceScheduleEndDate");

		if (priceScheduleEndDate != null) {
			setPriceScheduleEndDate(priceScheduleEndDate);
		}

		String priceScheduleStatus = (String)attributes.get(
				"priceScheduleStatus");

		if (priceScheduleStatus != null) {
			setPriceScheduleStatus(priceScheduleStatus);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String priceScheduleCategory = (String)attributes.get(
				"priceScheduleCategory");

		if (priceScheduleCategory != null) {
			setPriceScheduleCategory(priceScheduleCategory);
		}

		String tradeClass = (String)attributes.get("tradeClass");

		if (tradeClass != null) {
			setTradeClass(tradeClass);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}
	}

	@Override
	public String getParentPriceScheduleName() {
		if (_parentPriceScheduleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _parentPriceScheduleName;
		}
	}

	@Override
	public void setParentPriceScheduleName(String parentPriceScheduleName) {
		_parentPriceScheduleName = parentPriceScheduleName;
	}

	@Override
	public String getParentPriceScheduleId() {
		if (_parentPriceScheduleId == null) {
			return StringPool.BLANK;
		}
		else {
			return _parentPriceScheduleId;
		}
	}

	@Override
	public void setParentPriceScheduleId(String parentPriceScheduleId) {
		_parentPriceScheduleId = parentPriceScheduleId;
	}

	@Override
	public Date getPriceScheduleStartDate() {
		return _priceScheduleStartDate;
	}

	@Override
	public void setPriceScheduleStartDate(Date priceScheduleStartDate) {
		_priceScheduleStartDate = priceScheduleStartDate;
	}

	@Override
	public String getPriceScheduleNo() {
		if (_priceScheduleNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceScheduleNo;
		}
	}

	@Override
	public void setPriceScheduleNo(String priceScheduleNo) {
		_columnBitmask |= PRICESCHEDULENO_COLUMN_BITMASK;

		if (_originalPriceScheduleNo == null) {
			_originalPriceScheduleNo = _priceScheduleNo;
		}

		_priceScheduleNo = priceScheduleNo;
	}

	public String getOriginalPriceScheduleNo() {
		return GetterUtil.getString(_originalPriceScheduleNo);
	}

	@Override
	public String getPriceScheduleName() {
		if (_priceScheduleName == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceScheduleName;
		}
	}

	@Override
	public void setPriceScheduleName(String priceScheduleName) {
		_columnBitmask |= PRICESCHEDULENAME_COLUMN_BITMASK;

		if (_originalPriceScheduleName == null) {
			_originalPriceScheduleName = _priceScheduleName;
		}

		_priceScheduleName = priceScheduleName;
	}

	public String getOriginalPriceScheduleName() {
		return GetterUtil.getString(_originalPriceScheduleName);
	}

	@Override
	public String getPriceScheduleId() {
		if (_priceScheduleId == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceScheduleId;
		}
	}

	@Override
	public void setPriceScheduleId(String priceScheduleId) {
		_columnBitmask |= PRICESCHEDULEID_COLUMN_BITMASK;

		if (_originalPriceScheduleId == null) {
			_originalPriceScheduleId = _priceScheduleId;
		}

		_priceScheduleId = priceScheduleId;
	}

	public String getOriginalPriceScheduleId() {
		return GetterUtil.getString(_originalPriceScheduleId);
	}

	@Override
	public String getPriceScheduleType() {
		if (_priceScheduleType == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceScheduleType;
		}
	}

	@Override
	public void setPriceScheduleType(String priceScheduleType) {
		_columnBitmask |= PRICESCHEDULETYPE_COLUMN_BITMASK;

		if (_originalPriceScheduleType == null) {
			_originalPriceScheduleType = _priceScheduleType;
		}

		_priceScheduleType = priceScheduleType;
	}

	public String getOriginalPriceScheduleType() {
		return GetterUtil.getString(_originalPriceScheduleType);
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getPriceScheduleSystemId() {
		return _priceScheduleSystemId;
	}

	@Override
	public void setPriceScheduleSystemId(int priceScheduleSystemId) {
		_priceScheduleSystemId = priceScheduleSystemId;
	}

	@Override
	public String getRecordLockStatus() {
		if (_recordLockStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _recordLockStatus;
		}
	}

	@Override
	public void setRecordLockStatus(String recordLockStatus) {
		_recordLockStatus = recordLockStatus;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public String getPriceScheduleDesignation() {
		if (_priceScheduleDesignation == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceScheduleDesignation;
		}
	}

	@Override
	public void setPriceScheduleDesignation(String priceScheduleDesignation) {
		_priceScheduleDesignation = priceScheduleDesignation;
	}

	@Override
	public Date getPriceScheduleEndDate() {
		return _priceScheduleEndDate;
	}

	@Override
	public void setPriceScheduleEndDate(Date priceScheduleEndDate) {
		_priceScheduleEndDate = priceScheduleEndDate;
	}

	@Override
	public String getPriceScheduleStatus() {
		if (_priceScheduleStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceScheduleStatus;
		}
	}

	@Override
	public void setPriceScheduleStatus(String priceScheduleStatus) {
		_columnBitmask |= PRICESCHEDULESTATUS_COLUMN_BITMASK;

		if (_originalPriceScheduleStatus == null) {
			_originalPriceScheduleStatus = _priceScheduleStatus;
		}

		_priceScheduleStatus = priceScheduleStatus;
	}

	public String getOriginalPriceScheduleStatus() {
		return GetterUtil.getString(_originalPriceScheduleStatus);
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getPriceScheduleCategory() {
		if (_priceScheduleCategory == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceScheduleCategory;
		}
	}

	@Override
	public void setPriceScheduleCategory(String priceScheduleCategory) {
		_priceScheduleCategory = priceScheduleCategory;
	}

	@Override
	public String getTradeClass() {
		if (_tradeClass == null) {
			return StringPool.BLANK;
		}
		else {
			return _tradeClass;
		}
	}

	@Override
	public void setTradeClass(String tradeClass) {
		_tradeClass = tradeClass;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public PriceScheduleMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PriceScheduleMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PriceScheduleMasterImpl priceScheduleMasterImpl = new PriceScheduleMasterImpl();

		priceScheduleMasterImpl.setParentPriceScheduleName(getParentPriceScheduleName());
		priceScheduleMasterImpl.setParentPriceScheduleId(getParentPriceScheduleId());
		priceScheduleMasterImpl.setPriceScheduleStartDate(getPriceScheduleStartDate());
		priceScheduleMasterImpl.setPriceScheduleNo(getPriceScheduleNo());
		priceScheduleMasterImpl.setPriceScheduleName(getPriceScheduleName());
		priceScheduleMasterImpl.setPriceScheduleId(getPriceScheduleId());
		priceScheduleMasterImpl.setPriceScheduleType(getPriceScheduleType());
		priceScheduleMasterImpl.setModifiedDate(getModifiedDate());
		priceScheduleMasterImpl.setPriceScheduleSystemId(getPriceScheduleSystemId());
		priceScheduleMasterImpl.setRecordLockStatus(getRecordLockStatus());
		priceScheduleMasterImpl.setCreatedDate(getCreatedDate());
		priceScheduleMasterImpl.setCreatedBy(getCreatedBy());
		priceScheduleMasterImpl.setPriceScheduleDesignation(getPriceScheduleDesignation());
		priceScheduleMasterImpl.setPriceScheduleEndDate(getPriceScheduleEndDate());
		priceScheduleMasterImpl.setPriceScheduleStatus(getPriceScheduleStatus());
		priceScheduleMasterImpl.setBatchId(getBatchId());
		priceScheduleMasterImpl.setPriceScheduleCategory(getPriceScheduleCategory());
		priceScheduleMasterImpl.setTradeClass(getTradeClass());
		priceScheduleMasterImpl.setInboundStatus(getInboundStatus());
		priceScheduleMasterImpl.setModifiedBy(getModifiedBy());

		priceScheduleMasterImpl.resetOriginalValues();

		return priceScheduleMasterImpl;
	}

	@Override
	public int compareTo(PriceScheduleMaster priceScheduleMaster) {
		int primaryKey = priceScheduleMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PriceScheduleMaster)) {
			return false;
		}

		PriceScheduleMaster priceScheduleMaster = (PriceScheduleMaster)obj;

		int primaryKey = priceScheduleMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		PriceScheduleMasterModelImpl priceScheduleMasterModelImpl = this;

		priceScheduleMasterModelImpl._originalPriceScheduleNo = priceScheduleMasterModelImpl._priceScheduleNo;

		priceScheduleMasterModelImpl._originalPriceScheduleName = priceScheduleMasterModelImpl._priceScheduleName;

		priceScheduleMasterModelImpl._originalPriceScheduleId = priceScheduleMasterModelImpl._priceScheduleId;

		priceScheduleMasterModelImpl._originalPriceScheduleType = priceScheduleMasterModelImpl._priceScheduleType;

		priceScheduleMasterModelImpl._originalPriceScheduleStatus = priceScheduleMasterModelImpl._priceScheduleStatus;

		priceScheduleMasterModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PriceScheduleMaster> toCacheModel() {
		PriceScheduleMasterCacheModel priceScheduleMasterCacheModel = new PriceScheduleMasterCacheModel();

		priceScheduleMasterCacheModel.parentPriceScheduleName = getParentPriceScheduleName();

		String parentPriceScheduleName = priceScheduleMasterCacheModel.parentPriceScheduleName;

		if ((parentPriceScheduleName != null) &&
				(parentPriceScheduleName.length() == 0)) {
			priceScheduleMasterCacheModel.parentPriceScheduleName = null;
		}

		priceScheduleMasterCacheModel.parentPriceScheduleId = getParentPriceScheduleId();

		String parentPriceScheduleId = priceScheduleMasterCacheModel.parentPriceScheduleId;

		if ((parentPriceScheduleId != null) &&
				(parentPriceScheduleId.length() == 0)) {
			priceScheduleMasterCacheModel.parentPriceScheduleId = null;
		}

		Date priceScheduleStartDate = getPriceScheduleStartDate();

		if (priceScheduleStartDate != null) {
			priceScheduleMasterCacheModel.priceScheduleStartDate = priceScheduleStartDate.getTime();
		}
		else {
			priceScheduleMasterCacheModel.priceScheduleStartDate = Long.MIN_VALUE;
		}

		priceScheduleMasterCacheModel.priceScheduleNo = getPriceScheduleNo();

		String priceScheduleNo = priceScheduleMasterCacheModel.priceScheduleNo;

		if ((priceScheduleNo != null) && (priceScheduleNo.length() == 0)) {
			priceScheduleMasterCacheModel.priceScheduleNo = null;
		}

		priceScheduleMasterCacheModel.priceScheduleName = getPriceScheduleName();

		String priceScheduleName = priceScheduleMasterCacheModel.priceScheduleName;

		if ((priceScheduleName != null) && (priceScheduleName.length() == 0)) {
			priceScheduleMasterCacheModel.priceScheduleName = null;
		}

		priceScheduleMasterCacheModel.priceScheduleId = getPriceScheduleId();

		String priceScheduleId = priceScheduleMasterCacheModel.priceScheduleId;

		if ((priceScheduleId != null) && (priceScheduleId.length() == 0)) {
			priceScheduleMasterCacheModel.priceScheduleId = null;
		}

		priceScheduleMasterCacheModel.priceScheduleType = getPriceScheduleType();

		String priceScheduleType = priceScheduleMasterCacheModel.priceScheduleType;

		if ((priceScheduleType != null) && (priceScheduleType.length() == 0)) {
			priceScheduleMasterCacheModel.priceScheduleType = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			priceScheduleMasterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			priceScheduleMasterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		priceScheduleMasterCacheModel.priceScheduleSystemId = getPriceScheduleSystemId();

		priceScheduleMasterCacheModel.recordLockStatus = getRecordLockStatus();

		String recordLockStatus = priceScheduleMasterCacheModel.recordLockStatus;

		if ((recordLockStatus != null) && (recordLockStatus.length() == 0)) {
			priceScheduleMasterCacheModel.recordLockStatus = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			priceScheduleMasterCacheModel.createdDate = createdDate.getTime();
		}
		else {
			priceScheduleMasterCacheModel.createdDate = Long.MIN_VALUE;
		}

		priceScheduleMasterCacheModel.createdBy = getCreatedBy();

		String createdBy = priceScheduleMasterCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			priceScheduleMasterCacheModel.createdBy = null;
		}

		priceScheduleMasterCacheModel.priceScheduleDesignation = getPriceScheduleDesignation();

		String priceScheduleDesignation = priceScheduleMasterCacheModel.priceScheduleDesignation;

		if ((priceScheduleDesignation != null) &&
				(priceScheduleDesignation.length() == 0)) {
			priceScheduleMasterCacheModel.priceScheduleDesignation = null;
		}

		Date priceScheduleEndDate = getPriceScheduleEndDate();

		if (priceScheduleEndDate != null) {
			priceScheduleMasterCacheModel.priceScheduleEndDate = priceScheduleEndDate.getTime();
		}
		else {
			priceScheduleMasterCacheModel.priceScheduleEndDate = Long.MIN_VALUE;
		}

		priceScheduleMasterCacheModel.priceScheduleStatus = getPriceScheduleStatus();

		String priceScheduleStatus = priceScheduleMasterCacheModel.priceScheduleStatus;

		if ((priceScheduleStatus != null) &&
				(priceScheduleStatus.length() == 0)) {
			priceScheduleMasterCacheModel.priceScheduleStatus = null;
		}

		priceScheduleMasterCacheModel.batchId = getBatchId();

		String batchId = priceScheduleMasterCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			priceScheduleMasterCacheModel.batchId = null;
		}

		priceScheduleMasterCacheModel.priceScheduleCategory = getPriceScheduleCategory();

		String priceScheduleCategory = priceScheduleMasterCacheModel.priceScheduleCategory;

		if ((priceScheduleCategory != null) &&
				(priceScheduleCategory.length() == 0)) {
			priceScheduleMasterCacheModel.priceScheduleCategory = null;
		}

		priceScheduleMasterCacheModel.tradeClass = getTradeClass();

		String tradeClass = priceScheduleMasterCacheModel.tradeClass;

		if ((tradeClass != null) && (tradeClass.length() == 0)) {
			priceScheduleMasterCacheModel.tradeClass = null;
		}

		priceScheduleMasterCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = priceScheduleMasterCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			priceScheduleMasterCacheModel.inboundStatus = null;
		}

		priceScheduleMasterCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = priceScheduleMasterCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			priceScheduleMasterCacheModel.modifiedBy = null;
		}

		return priceScheduleMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(41);

		sb.append("{parentPriceScheduleName=");
		sb.append(getParentPriceScheduleName());
		sb.append(", parentPriceScheduleId=");
		sb.append(getParentPriceScheduleId());
		sb.append(", priceScheduleStartDate=");
		sb.append(getPriceScheduleStartDate());
		sb.append(", priceScheduleNo=");
		sb.append(getPriceScheduleNo());
		sb.append(", priceScheduleName=");
		sb.append(getPriceScheduleName());
		sb.append(", priceScheduleId=");
		sb.append(getPriceScheduleId());
		sb.append(", priceScheduleType=");
		sb.append(getPriceScheduleType());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", priceScheduleSystemId=");
		sb.append(getPriceScheduleSystemId());
		sb.append(", recordLockStatus=");
		sb.append(getRecordLockStatus());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", priceScheduleDesignation=");
		sb.append(getPriceScheduleDesignation());
		sb.append(", priceScheduleEndDate=");
		sb.append(getPriceScheduleEndDate());
		sb.append(", priceScheduleStatus=");
		sb.append(getPriceScheduleStatus());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", priceScheduleCategory=");
		sb.append(getPriceScheduleCategory());
		sb.append(", tradeClass=");
		sb.append(getTradeClass());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(64);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.PriceScheduleMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>parentPriceScheduleName</column-name><column-value><![CDATA[");
		sb.append(getParentPriceScheduleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentPriceScheduleId</column-name><column-value><![CDATA[");
		sb.append(getParentPriceScheduleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleStartDate</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleNo</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleName</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleId</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleType</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleSystemId</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleSystemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
		sb.append(getRecordLockStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleDesignation</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleDesignation());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleEndDate</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleStatus</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceScheduleCategory</column-name><column-value><![CDATA[");
		sb.append(getPriceScheduleCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tradeClass</column-name><column-value><![CDATA[");
		sb.append(getTradeClass());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = PriceScheduleMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			PriceScheduleMaster.class
		};
	private String _parentPriceScheduleName;
	private String _parentPriceScheduleId;
	private Date _priceScheduleStartDate;
	private String _priceScheduleNo;
	private String _originalPriceScheduleNo;
	private String _priceScheduleName;
	private String _originalPriceScheduleName;
	private String _priceScheduleId;
	private String _originalPriceScheduleId;
	private String _priceScheduleType;
	private String _originalPriceScheduleType;
	private Date _modifiedDate;
	private int _priceScheduleSystemId;
	private String _recordLockStatus;
	private Date _createdDate;
	private String _createdBy;
	private String _priceScheduleDesignation;
	private Date _priceScheduleEndDate;
	private String _priceScheduleStatus;
	private String _originalPriceScheduleStatus;
	private String _batchId;
	private String _priceScheduleCategory;
	private String _tradeClass;
	private String _inboundStatus;
	private String _modifiedBy;
	private long _columnBitmask;
	private PriceScheduleMaster _escapedModel;
}