--------------------------------------- DB_SYNCHRONIZATION -------------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'DB_SYNCHRONIZATION'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[DB_SYNCHRONIZATION] (
		MODULE_SID INT IDENTITY(1, 1) NOT NULL
		,MODULE_NO INT NOT NULL
		,MODULE_NAME VARCHAR(100) NOT NULL
		,[START_DATE] VARCHAR(50) NOT NULL
		,END_DATE VARCHAR(50) NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		)
END
GO

------------------------------ PRIMARY KEY -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_DB_SYNCHRONIZATION_MODULE_SID'
			AND TABLE_NAME = 'DB_SYNCHRONIZATION'
		)
BEGIN
	ALTER TABLE [DBO].[DB_SYNCHRONIZATION] ADD CONSTRAINT PK_DB_SYNCHRONIZATION_MODULE_SID PRIMARY KEY (MODULE_SID)
END
GO

------------------------------ DEFAULT CONSTRAINT -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.DB_SYNCHRONIZATION')
			AND NAME = 'DF_DB_SYNCHRONIZATION_CREATED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[DB_SYNCHRONIZATION] ADD CONSTRAINT [DF_DB_SYNCHRONIZATION_CREATED_BY] DEFAULT(1)
	FOR CREATED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.DB_SYNCHRONIZATION')
			AND NAME = 'DF_DB_SYNCHRONIZATION_CREATED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[DB_SYNCHRONIZATION] ADD CONSTRAINT [DF_DB_SYNCHRONIZATION_CREATED_DATE] DEFAULT(Getdate())
	FOR CREATED_DATE
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.DB_SYNCHRONIZATION')
			AND NAME = 'DF_DB_SYNCHRONIZATION_MODIFIED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[DB_SYNCHRONIZATION] ADD CONSTRAINT [DF_DB_SYNCHRONIZATION_MODIFIED_BY] DEFAULT(1)
	FOR MODIFIED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.DB_SYNCHRONIZATION')
			AND NAME = 'DF_DB_SYNCHRONIZATION_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[DB_SYNCHRONIZATION] ADD CONSTRAINT [DF_DB_SYNCHRONIZATION_MODIFIED_DATE] DEFAULT(Getdate())
	FOR MODIFIED_DATE
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'DB_SYNCHRONIZATION' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

--------------------------------------- HIST_DB_SYNCHRONIZATION -----------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'HIST_DB_SYNCHRONIZATION'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[HIST_DB_SYNCHRONIZATION] (
		MODULE_SID INT NOT NULL
		,MODULE_NO INT NOT NULL
		,MODULE_NAME VARCHAR(100) NOT NULL
		,[START_DATE] VARCHAR(50) NOT NULL
		,END_DATE VARCHAR(50) NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		,ACTION_FLAG CHAR(1) NOT NULL
		,ACTION_DATE DATETIME NOT NULL
		)
END
GO

------------------------------ DEFAULT CONSTRAINT -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.HIST_DB_SYNCHRONIZATION')
			AND NAME = 'DF_HIST_DB_SYNCHRONIZATION_ACTION_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[HIST_DB_SYNCHRONIZATION] ADD CONSTRAINT [DF_HIST_DB_SYNCHRONIZATION_ACTION_DATE] DEFAULT(Getdate())
	FOR ACTION_DATE
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_DB_SYNCHRONIZATION' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

-------------------------------DB_SYNCHRONIZATION TRIGGER-------------------------------------
IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_DB_SYNCHRONIZATION_UPD'
		)
BEGIN
	DROP TRIGGER DBO.TRG_DB_SYNCHRONIZATION_UPD
END
GO

CREATE TRIGGER [DBO].[TRG_DB_SYNCHRONIZATION_UPD] ON [DBO].[DB_SYNCHRONIZATION]
AFTER UPDATE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		AND EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_DB_SYNCHRONIZATION (
			MODULE_SID
			,MODULE_NO
			,MODULE_NAME
			,[START_DATE]
			,END_DATE
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			)
		SELECT MODULE_SID
			,MODULE_NO
			,MODULE_NAME
			,[START_DATE]
			,END_DATE
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'C'
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_DB_SYNCHRONIZATION_INS'
		)
BEGIN
	DROP TRIGGER DBO.TRG_DB_SYNCHRONIZATION_INS
END
GO

CREATE TRIGGER [DBO].[TRG_DB_SYNCHRONIZATION_INS] ON [DBO].[DB_SYNCHRONIZATION]
AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		INSERT INTO HIST_DB_SYNCHRONIZATION (
			MODULE_SID
			,MODULE_NO
			,MODULE_NAME
			,[START_DATE]
			,END_DATE
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			)
		SELECT MODULE_SID
			,MODULE_NO
			,MODULE_NAME
			,[START_DATE]
			,END_DATE
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'A'
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_DB_SYNCHRONIZATION_DEL'
		)
BEGIN
	DROP TRIGGER DBO.TRG_DB_SYNCHRONIZATION_DEL
END
GO

CREATE TRIGGER [DBO].[TRG_DB_SYNCHRONIZATION_DEL] ON [DBO].[DB_SYNCHRONIZATION]
AFTER DELETE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_DB_SYNCHRONIZATION (
			MODULE_SID
			,MODULE_NO
			,MODULE_NAME
			,[START_DATE]
			,END_DATE
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			)
		SELECT MODULE_SID
			,MODULE_NO
			,MODULE_NAME
			,[START_DATE]
			,END_DATE
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'D'
		FROM DELETED
END
GO

------------------------------------------------ SLA_CALENDAR_MASTER ---------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'SLA_CALENDAR_MASTER'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[SLA_CALENDAR_MASTER] (
		SLA_CALENDAR_MASTER_SID INT IDENTITY(1, 1) NOT NULL
		,CALENDAR_NAME VARCHAR(50) NOT NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		)
END
GO

------------------------------ PRIMARY KEY -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_SLA_CALENDAR_MASTER_SLA_CALENDAR_MASTER_SID'
			AND TABLE_NAME = 'SLA_CALENDAR_MASTER'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_MASTER] ADD CONSTRAINT PK_SLA_CALENDAR_MASTER_SLA_CALENDAR_MASTER_SID PRIMARY KEY (SLA_CALENDAR_MASTER_SID)
END
GO

---------------------------ADDITIONAL COLUMNS------------------------------
--DEFAULT_HOLIDAYS
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'SLA_CALENDAR_MASTER'
			AND COLUMN_NAME = 'DEFAULT_HOLIDAYS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE SLA_CALENDAR_MASTER ADD DEFAULT_HOLIDAYS BIT NULL
END
GO

------------------------------ DEFAULT CONSTRAINT -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_MASTER')
			AND NAME = 'DF_SLA_CALENDAR_MASTER_CREATED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_MASTER] ADD CONSTRAINT [DF_SLA_CALENDAR_MASTER_CREATED_BY] DEFAULT(1)
	FOR CREATED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_MASTER')
			AND NAME = 'DF_SLA_CALENDAR_MASTER_CREATED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_MASTER] ADD CONSTRAINT [DF_SLA_CALENDAR_MASTER_CREATED_DATE] DEFAULT(Getdate())
	FOR CREATED_DATE
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_MASTER')
			AND NAME = 'DF_SLA_CALENDAR_MASTER_MODIFIED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_MASTER] ADD CONSTRAINT [DF_SLA_CALENDAR_MASTER_MODIFIED_BY] DEFAULT(1)
	FOR MODIFIED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_MASTER')
			AND NAME = 'DF_SLA_CALENDAR_MASTER_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_MASTER] ADD CONSTRAINT [DF_SLA_CALENDAR_MASTER_MODIFIED_DATE] DEFAULT(Getdate())
	FOR MODIFIED_DATE
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_MASTER')
			AND NAME = 'DF_SLA_CALENDAR_MASTER_DEFAULT_HOLIDAYS'
		)
BEGIN
	ALTER TABLE [DBO].SLA_CALENDAR_MASTER ADD CONSTRAINT DF_SLA_CALENDAR_MASTER_DEFAULT_HOLIDAYS DEFAULT(0)
	FOR DEFAULT_HOLIDAYS
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM SLA_CALENDAR_MASTER
		WHERE SLA_CALENDAR_MASTER_SID = 1
		)
BEGIN
	SET IDENTITY_INSERT SLA_CALENDAR_MASTER ON

	INSERT INTO SLA_CALENDAR_MASTER (
		SLA_CALENDAR_MASTER_SID
		,CALENDAR_NAME
		,INBOUND_STATUS
		)
	VALUES (
		1
		,'Calendar1'
		,'A'
		)

	SET IDENTITY_INSERT SLA_CALENDAR_MASTER OFF
END
GO
----- ADD NEW RECORD -------------------

IF  EXISTS (
		SELECT 1
		FROM SLA_CALENDAR_MASTER
		WHERE SLA_CALENDAR_MASTER_SID = 1
		)
BEGIN

UPDATE SLA_CALENDAR_MASTER
SET CALENDAR_NAME='Holiday Schedule'
WHERE SLA_CALENDAR_MASTER_SID = 1

END

GO




IF NOT EXISTS (
		SELECT 1
		FROM SLA_CALENDAR_MASTER
		WHERE SLA_CALENDAR_MASTER_SID = 2
		)
BEGIN
	SET IDENTITY_INSERT SLA_CALENDAR_MASTER ON

	INSERT INTO SLA_CALENDAR_MASTER (
		SLA_CALENDAR_MASTER_SID
		,CALENDAR_NAME
		,INBOUND_STATUS
		)
	VALUES (
		2
		,'Holiday'
		,'A'
		)

	SET IDENTITY_INSERT SLA_CALENDAR_MASTER OFF
END
GO
-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'SLA_CALENDAR_MASTER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

------------------------------------------------ HIST_SLA_CALENDAR_MASTER ---------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'HIST_SLA_CALENDAR_MASTER'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[HIST_SLA_CALENDAR_MASTER] (
		SLA_CALENDAR_MASTER_SID INT NOT NULL
		,CALENDAR_NAME VARCHAR(50) NOT NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		,ACTION_FLAG CHAR(1) NOT NULL
		,ACTION_DATE DATETIME NOT NULL
		)
END
GO

------------------------------ADDITIONAL COLUMNS------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'HIST_SLA_CALENDAR_MASTER'
			AND COLUMN_NAME = 'DEFAULT_HOLIDAYS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE HIST_SLA_CALENDAR_MASTER ADD DEFAULT_HOLIDAYS BIT NULL
END
GO

------------------------------ DEFAULT CONSTRAINT -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.HIST_SLA_CALENDAR_MASTER')
			AND NAME = 'DF_HIST_SLA_CALENDAR_MASTER_ACTION_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[HIST_SLA_CALENDAR_MASTER] ADD CONSTRAINT [DF_HIST_SLA_CALENDAR_MASTER_ACTION_DATE] DEFAULT(Getdate())
	FOR ACTION_DATE
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.HIST_SLA_CALENDAR_MASTER')
			AND NAME = 'DF_HIST_SLA_CALENDAR_MASTER_DEFAULT_HOLIDAYS'
		)
BEGIN
	ALTER TABLE [DBO].HIST_SLA_CALENDAR_MASTER ADD CONSTRAINT DF_HIST_SLA_CALENDAR_MASTER_DEFAULT_HOLIDAYS DEFAULT(0)
	FOR DEFAULT_HOLIDAYS
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_SLA_CALENDAR_MASTER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

-------------------------------SLA_CALENDAR_MASTER TRIGGER-------------------------------------
IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_SLA_CALENDAR_MASTER_UPD'
		)
BEGIN
	DROP TRIGGER DBO.TRG_SLA_CALENDAR_MASTER_UPD
END
GO

CREATE TRIGGER [dbo].[TRG_SLA_CALENDAR_MASTER_UPD] ON [dbo].[SLA_CALENDAR_MASTER]
AFTER UPDATE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		AND EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_SLA_CALENDAR_MASTER (
			SLA_CALENDAR_MASTER_SID
			,CALENDAR_NAME
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			,DEFAULT_HOLIDAYS
			)
		SELECT SLA_CALENDAR_MASTER_SID
			,CALENDAR_NAME
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'C'
			,DEFAULT_HOLIDAYS
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_SLA_CALENDAR_MASTER_INS'
		)
BEGIN
	DROP TRIGGER DBO.TRG_SLA_CALENDAR_MASTER_INS
END
GO

CREATE TRIGGER [dbo].[TRG_SLA_CALENDAR_MASTER_INS] ON [dbo].[SLA_CALENDAR_MASTER]
AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		INSERT INTO HIST_SLA_CALENDAR_MASTER (
			SLA_CALENDAR_MASTER_SID
			,CALENDAR_NAME
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			,DEFAULT_HOLIDAYS
			)
		SELECT SLA_CALENDAR_MASTER_SID
			,CALENDAR_NAME
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'A'
			,DEFAULT_HOLIDAYS
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_SLA_CALENDAR_MASTER_DEL'
		)
BEGIN
	DROP TRIGGER DBO.TRG_SLA_CALENDAR_MASTER_DEL
END
GO

CREATE TRIGGER [dbo].[TRG_SLA_CALENDAR_MASTER_DEL] ON [dbo].[SLA_CALENDAR_MASTER]
AFTER DELETE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_SLA_CALENDAR_MASTER (
			SLA_CALENDAR_MASTER_SID
			,CALENDAR_NAME
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			,DEFAULT_HOLIDAYS
			)
		SELECT SLA_CALENDAR_MASTER_SID
			,CALENDAR_NAME
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'D'
			,DEFAULT_HOLIDAYS
		FROM DELETED
END
GO

----------------------------------------------- SLA_CALENDAR_DETAILS ----------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'SLA_CALENDAR_DETAILS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[SLA_CALENDAR_DETAILS] (
		SLA_CALENDAR_DETAILS_SID INT IDENTITY(1, 1) NOT NULL
		,SLA_CALENDAR_MASTER_SID INT NOT NULL
		,HOLIDAY_MONTH VARCHAR(5) NULL
		,HOLIDAY_DAY VARCHAR(5) NULL
		,HOLIDAY_YEAR VARCHAR(5) NULL
		,HOLIDAY_COMBINED DATETIME NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		)
END
GO

------------------------------ PRIMARY KEY -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_SLA_CALENDAR_DETAILS_SLA_CALENDAR_DETAILS_SID'
			AND TABLE_NAME = 'SLA_CALENDAR_DETAILS'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_DETAILS] ADD CONSTRAINT PK_SLA_CALENDAR_DETAILS_SLA_CALENDAR_DETAILS_SID PRIMARY KEY (SLA_CALENDAR_DETAILS_SID)
END
GO

------------------------------ DEFAULT CONSTRAINT -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_DETAILS')
			AND NAME = 'DF_SLA_CALENDAR_DETAILS_CREATED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_DETAILS] ADD CONSTRAINT [DF_SLA_CALENDAR_DETAILS_CREATED_BY] DEFAULT(1)
	FOR CREATED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_DETAILS')
			AND NAME = 'DF_SLA_CALENDAR_DETAILS_CREATED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_DETAILS] ADD CONSTRAINT [DF_SLA_CALENDAR_DETAILS_CREATED_DATE] DEFAULT(Getdate())
	FOR CREATED_DATE
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_DETAILS')
			AND NAME = 'DF_SLA_CALENDAR_DETAILS_MODIFIED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_DETAILS] ADD CONSTRAINT [DF_SLA_CALENDAR_DETAILS_MODIFIED_BY] DEFAULT(1)
	FOR MODIFIED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.SLA_CALENDAR_DETAILS')
			AND NAME = 'DF_SLA_CALENDAR_DETAILS_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[SLA_CALENDAR_DETAILS] ADD CONSTRAINT [DF_SLA_CALENDAR_DETAILS_MODIFIED_DATE] DEFAULT(Getdate())
	FOR MODIFIED_DATE
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'SLA_CALENDAR_DETAILS' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

----------------------------------------------- HIST_SLA_CALENDAR_DETAILS ----------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'HIST_SLA_CALENDAR_DETAILS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[HIST_SLA_CALENDAR_DETAILS] (
		SLA_CALENDAR_DETAILS_SID INT NOT NULL
		,SLA_CALENDAR_MASTER_SID INT NOT NULL
		,HOLIDAY_MONTH VARCHAR(5) NULL
		,HOLIDAY_DAY VARCHAR(5) NULL
		,HOLIDAY_YEAR VARCHAR(5) NULL
		,HOLIDAY_COMBINED DATETIME NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		,ACTION_FLAG CHAR(1) NOT NULL
		,ACTION_DATE DATETIME NOT NULL
		)
END
GO

------------------------------ DEFAULT CONSTRAINT -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.HIST_SLA_CALENDAR_DETAILS')
			AND NAME = 'DF_HIST_SLA_CALENDAR_DETAILS_ACTION_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[HIST_SLA_CALENDAR_DETAILS] ADD CONSTRAINT [DF_HIST_SLA_CALENDAR_DETAILS_ACTION_DATE] DEFAULT(Getdate())
	FOR ACTION_DATE
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_SLA_CALENDAR_DETAILS' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

-------------------------------SLA_CALENDAR_DETAILS TRIGGER-------------------------------------
IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_SLA_CALENDAR_DETAILS_UPD'
		)
BEGIN
	DROP TRIGGER DBO.TRG_SLA_CALENDAR_DETAILS_UPD
END
GO

CREATE TRIGGER [DBO].[TRG_SLA_CALENDAR_DETAILS_UPD] ON [DBO].[SLA_CALENDAR_DETAILS]
AFTER UPDATE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		AND EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_SLA_CALENDAR_DETAILS (
			SLA_CALENDAR_DETAILS_SID
			,SLA_CALENDAR_MASTER_SID
			,HOLIDAY_MONTH
			,HOLIDAY_DAY
			,HOLIDAY_YEAR
			,HOLIDAY_COMBINED
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			)
		SELECT SLA_CALENDAR_DETAILS_SID
			,SLA_CALENDAR_MASTER_SID
			,HOLIDAY_MONTH
			,HOLIDAY_DAY
			,HOLIDAY_YEAR
			,HOLIDAY_COMBINED
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'C'
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_SLA_CALENDAR_DETAILS_INS'
		)
BEGIN
	DROP TRIGGER DBO.TRG_SLA_CALENDAR_DETAILS_INS
END
GO

CREATE TRIGGER [DBO].[TRG_SLA_CALENDAR_DETAILS_INS] ON [DBO].[SLA_CALENDAR_DETAILS]
AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		INSERT INTO HIST_SLA_CALENDAR_DETAILS (
			SLA_CALENDAR_DETAILS_SID
			,SLA_CALENDAR_MASTER_SID
			,HOLIDAY_MONTH
			,HOLIDAY_DAY
			,HOLIDAY_YEAR
			,HOLIDAY_COMBINED
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			)
		SELECT SLA_CALENDAR_DETAILS_SID
			,SLA_CALENDAR_MASTER_SID
			,HOLIDAY_MONTH
			,HOLIDAY_DAY
			,HOLIDAY_YEAR
			,HOLIDAY_COMBINED
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'A'
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_SLA_CALENDAR_DETAILS_DEL'
		)
BEGIN
	DROP TRIGGER DBO.TRG_SLA_CALENDAR_DETAILS_DEL
END
GO

CREATE TRIGGER [DBO].[TRG_SLA_CALENDAR_DETAILS_DEL] ON [DBO].[SLA_CALENDAR_DETAILS]
AFTER DELETE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_SLA_CALENDAR_DETAILS (
			SLA_CALENDAR_DETAILS_SID
			,SLA_CALENDAR_MASTER_SID
			,HOLIDAY_MONTH
			,HOLIDAY_DAY
			,HOLIDAY_YEAR
			,HOLIDAY_COMBINED
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,ACTION_FLAG
			)
		SELECT SLA_CALENDAR_DETAILS_SID
			,SLA_CALENDAR_MASTER_SID
			,HOLIDAY_MONTH
			,HOLIDAY_DAY
			,HOLIDAY_YEAR
			,HOLIDAY_COMBINED
			,INBOUND_STATUS
			,CREATED_BY
			,CREATED_DATE
			,MODIFIED_BY
			,MODIFIED_DATE
			,'D'
		FROM DELETED
END
GO

------------------------------------------------------- WORKFLOW_PROFILE -----------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[WORKFLOW_PROFILE] (
		WORKFLOW_PROFILE_SID INT IDENTITY(1, 1) NOT NULL
		,PROFILE_NAME VARCHAR(100) NOT NULL
		,USER_SID INT NOT NULL
		,[START_DATE] DATETIME NULL
		,END_DATE DATETIME NULL
		,ACTIVE_FLAG CHAR(1) NOT NULL
		,NOTIFICATION_TYPE VARCHAR(100) NULL
		,START_HOUR TINYINT NULL
		,START_MINUTES TINYINT NULL
		,START_DAY TINYINT NULL
		,START_HOUR1 TINYINT NULL
		,START_HOUR2 TINYINT NULL
		,START_HOUR3 TINYINT NULL
		,START_HOUR4 TINYINT NULL
		,START_MINUTES1 TINYINT NULL
		,START_MINUTES2 TINYINT NULL
		,START_MINUTES3 TINYINT NULL
		,START_MINUTES4 TINYINT NULL
		,SLA_CALENDAR_MASTER_SID INT NOT NULL
		,EMAIL_NOTIFICATION_TO VARCHAR(1000)
		,EMAIL_NOTIFICATION_CC VARCHAR(1000)
		,FREQUENCY VARCHAR(50) NOT NULL
		,LAST_RUN DATETIME NULL
		,SCHEMA_NAME VARCHAR(50) NOT NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		)
END
GO
----------------------------------------INSERTION OF ROWS------------------------------------------------------



---------------------------------------------------ADD_COLUMS-------------------------------------------------
--------------EMAIL_NOTIFICATION_FAILURE_TO -------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_FAILURE_TO'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD EMAIL_NOTIFICATION_FAILURE_TO VARCHAR(4000)
END
GO

------------------------------------------------------------------------------------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND TABLE_SCHEMA = 'DBO'
			AND COLUMN_NAME = 'OUTBOUND_FLAG'
		)
BEGIN
	ALTER TABLE [dbo].[WORKFLOW_PROFILE] ADD OUTBOUND_FLAG VARCHAR(1);
END
GO

--------------EMAIL_NOTIFICATION_FAILURE_TO  -------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_FAILURE_CC'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD EMAIL_NOTIFICATION_FAILURE_CC VARCHAR(4000)
END
GO

--------------SUCCESS_MAIL_SUBJECT-------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'SUCCESS_MAIL_SUBJECT'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD SUCCESS_MAIL_SUBJECT VARCHAR(4000)
END
GO

--------------SUCCESS_MAIL_BODY-------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'SUCCESS_MAIL_BODY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD SUCCESS_MAIL_BODY VARCHAR(4000)
END
GO

--------------FAILURE_MAIL_SUBJECT-------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'FAILURE_MAIL_SUBJECT'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD FAILURE_MAIL_SUBJECT VARCHAR(4000)
END
GO

--------------FAILURE_MAIL_BODY-------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'FAILURE_MAIL_BODY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD FAILURE_MAIL_BODY VARCHAR(4000)
END
GO

--------------FAILURE_MAIL_BODY-------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'SCHEDULE_LAST_RUN'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD SCHEDULE_LAST_RUN DATETIME
END
GO

-------------------PROCESS_TYPE---------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'PROCESS_TYPE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD PROCESS_TYPE INT
END
GO

-----------------------------------------RENAME_COLUMNS----------------------------------------------------------
----------EXEC SP_RENAME 'WORKFLOW_PROFILE.WORKFLOW_PROFILE_SID','PROCESS_SID'------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'WORKFLOW_PROFILE_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	EXEC Sp_rename 'WORKFLOW_PROFILE.WORKFLOW_PROFILE_SID'
		,'PROCESS_SID'
		,'COLUMN'
END
GO

----------EXEC SP_RENAME 'WORKFLOW_PROFILE.PROFILE_NAME','PROCESS_NAME'------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'PROFILE_NAME'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	EXEC Sp_rename 'WORKFLOW_PROFILE.PROFILE_NAME'
		,'PROCESS_NAME'
		,'COLUMN'
END
GO

----------'WORKFLOW_PROFILE.NOTIFICATION_TYPE','PROCESS_DISPLAY_NAME'------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'NOTIFICATION_TYPE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	EXEC Sp_rename 'WORKFLOW_PROFILE.NOTIFICATION_TYPE'
		,'PROCESS_DISPLAY_NAME'
		,'COLUMN'
END
GO

----------EXEC SP_RENAME 'WORKFLOW_PROFILE.LAST_RUN','MANUAL_LAST_RUN------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'LAST_RUN'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	EXEC Sp_rename 'WORKFLOW_PROFILE.LAST_RUN'
		,'MANUAL_LAST_RUN'
		,'COLUMN'
END
GO

----------EXEC SP_RENAME 'HIST_WORKFLOW_PROFILE.EMAIL_NOTIFICATION_TO','EMAIL_NOTIFICATION_SUCCESS_TO'------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_TO'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	EXEC Sp_rename 'WORKFLOW_PROFILE.EMAIL_NOTIFICATION_TO'
		,'EMAIL_NOTIFICATION_SUCCESS_TO'
		,'COLUMN'
END
GO

-----------EXEC SP_RENAME 'WORKFLOW_PROFILE.EMAIL_NOTIFICATION_CC','EMAIL_NOTIFICATION_SUCCESS_CC'-------------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_CC'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	EXEC Sp_rename 'WORKFLOW_PROFILE.EMAIL_NOTIFICATION_CC'
		,'EMAIL_NOTIFICATION_SUCCESS_CC'
		,'COLUMN'
END
GO

------------------------------DROP STATISTICS WORKFLOW_PROFILE.USER_SID----------------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'USER_SID'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.USER_SID
END
GO

-----------------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN USER_SID------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'USER_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN USER_SID
END
GO

----------------------DROP STATISTICS WORKFLOW_PROFILE.START_DAY----------------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'START_DAY'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.START_DAY
END
GO

-----------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMNSTART_DAY------------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'START_DAY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN START_DAY
END
GO

-------------------DROP STATISTICS WORKFLOW_PROFILE.START_HOUR4--------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'START_HOUR4'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.START_HOUR4
END
GO

-----------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN START_HOUR4------------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'START_HOUR4'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN START_HOUR4
END
GO

----------------------DROP STATISTICS WORKFLOW_PROFILE.START_MINUTES4---------------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'START_MINUTES4'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.START_MINUTES4
END
GO

------------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN START_MINUTES4------------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'START_MINUTES4'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN START_MINUTES4
END
GO

----------------------------------FK_WORKFLOW_PROFILE_SLA_CALENDAR_MASTER_SLA_CALENDAR_MASTER_SID-------------------------------
IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE Object_name(PARENT_OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_WORKFLOW_PROFILE_SLA_CALENDAR_MASTER_SLA_CALENDAR_MASTER_SID'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE [DBO].[WORKFLOW_PROFILE]

	DROP CONSTRAINT FK_WORKFLOW_PROFILE_SLA_CALENDAR_MASTER_SLA_CALENDAR_MASTER_SID
END
GO

--------------------DROP STATISTICS WORKFLOW_PROFILE.SLA_CALENDAR_MASTER_SID-----------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'SLA_CALENDAR_MASTER_SID'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.SLA_CALENDAR_MASTER_SID
END
GO

-----------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN  SLA_CALENDAR_MASTER_SID------------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'SLA_CALENDAR_MASTER_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN SLA_CALENDAR_MASTER_SID
END
GO

-------------------------DROP STATISTICS WORKFLOW_PROFILE.CREATED_BY---------------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'CREATED_BY'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.CREATED_BY
END
GO

----------------------------------DF_CREATED_BY------------------------------- 
IF EXISTS (
		SELECT *
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'DF_WORKFLOW_PROFILE_CREATED_BY'
			AND TYPE = 'D'
		)
BEGIN
	ALTER TABLE [DBO].[WORKFLOW_PROFILE]

	DROP CONSTRAINT DF_WORKFLOW_PROFILE_CREATED_BY
END
GO

---------------------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN CREATED_BY-------------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'CREATED_BY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN CREATED_BY
END
GO

----------------------------DROP STATISTICS WORKFLOW_PROFILE.CREATED_DATE-------------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'CREATED_DATE'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.CREATED_DATE
END
GO

----------------DF_WORKFLOW_PROFILE_CREATED_DATE----------------
IF EXISTS (
		SELECT 1
		FROM SYS.default_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'DF_WORKFLOW_PROFILE_CREATED_DATE'
			AND TYPE = 'D'
		)
BEGIN
	ALTER TABLE [DBO].[WORKFLOW_PROFILE]

	DROP CONSTRAINT DF_WORKFLOW_PROFILE_CREATED_DATE
END
GO

---------------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN CREATED_DATE------------------------------- 
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'CREATED_DATE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN CREATED_DATE
END
GO

-----------------------DROP STATISTICS WORKFLOW_PROFILE.SCHEMA_NAME------------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'SCHEMA_NAME'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.SCHEMA_NAME
END
GO

-----------------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN SCHEMA_NAME---------------------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'SCHEMA_NAME'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN SCHEMA_NAME
END
GO

------------------DROP STATISTICS WORKFLOW_PROFILE.INBOUND_STATUS-----------------------------
IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE Object_name(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'INBOUND_STATUS'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.INBOUND_STATUS
END
GO

------------------ALTER TABLE WORKFLOW_PROFILE DROP COLUMN INBOUND_STATUS--------------------
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'INBOUND_STATUS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	DROP COLUMN INBOUND_STATUS
END
GO

------------------------------ PRIMARY KEY -------------------------------------
IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_WORKFLOW_PROFILE_WORKFLOW_PROFILE_SID'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE [DBO].[WORKFLOW_PROFILE]

	DROP CONSTRAINT PK_WORKFLOW_PROFILE_WORKFLOW_PROFILE_SID
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_WORKFLOW_PROFILE_WORKFLOW_PROFILE_SID'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE [DBO].[WORKFLOW_PROFILE] ADD CONSTRAINT PK_WORKFLOW_PROFILE_WORKFLOW_PROFILE_SID PRIMARY KEY (PROCESS_SID)
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.WORKFLOW_PROFILE')
			AND NAME = 'DF_WORKFLOW_PROFILE_MODIFIED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[WORKFLOW_PROFILE] ADD CONSTRAINT [DF_WORKFLOW_PROFILE_MODIFIED_BY] DEFAULT(1)
	FOR MODIFIED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.WORKFLOW_PROFILE')
			AND NAME = 'DF_WORKFLOW_PROFILE_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[WORKFLOW_PROFILE] ADD CONSTRAINT [DF_WORKFLOW_PROFILE_MODIFIED_DATE] DEFAULT(Getdate())
	FOR MODIFIED_DATE
END
GO

-----------------------------------------------------------WORKFLOW_PROFILE-------------------------------------------------
------------------------- Add Columns NULL -----------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SCHEMA_NAME'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD [SCHEMA_NAME] VARCHAR(50)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SLA_CALENDAR_MASTER_SID'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD SLA_CALENDAR_MASTER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'USER_SID'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD USER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'INBOUND_STATUS'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD INBOUND_STATUS CHAR(1)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_BY'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD CREATED_BY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_DATE'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD CREATED_DATE DATETIME
END
GO

--SCRIPT_NAME
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'SCRIPT_NAME'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD SCRIPT_NAME VARCHAR(100)
END
GO

--
--VALIDATION
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'VALIDATION'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD VALIDATION VARCHAR(1000)
END
GO

-----------------------------------ADDING DECRYPTION_MODE COLUMN -------------------------------------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'DECRYPTION_MODE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD DECRYPTION_MODE CHAR(1) NULL
END
GO

-----------------------------------DEFAULT_CONSTRAINTS-------------------------------------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'DF_WORKFLOW_PROFILE_OUTBOUND_FLAG'
			AND TYPE = 'D'
		)
BEGIN
	ALTER TABLE [dbo].[WORKFLOW_PROFILE] ADD CONSTRAINT [DF_WORKFLOW_PROFILE_OUTBOUND_FLAG] DEFAULT('Y')
	FOR [OUTBOUND_FLAG]
END
GO

---------------------------------------------------------------------------------------------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'DF_WORKFLOW_PROFILE_DECRYPTION_MODE'
			AND TYPE = 'D'
		)
BEGIN
	ALTER TABLE [dbo].[WORKFLOW_PROFILE] ADD CONSTRAINT DF_WORKFLOW_PROFILE_DECRYPTION_MODE DEFAULT('Y')
	FOR DECRYPTION_MODE
END
GO


-------------------------------------------------- Updating Previously present records to default value --------------------------------------------
---------------------------- Updating Previously present records to default value
IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCHEMA_NAME IS NULL
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCHEMA_NAME = 'BPI'
		,INBOUND_STATUS = 'A'
		,CREATED_BY = 1
		,CREATED_DATE = Getdate()
		,SLA_CALENDAR_MASTER_SID = 1
		,USER_SID = 1
	WHERE SCHEMA_NAME IS NULL
END
GO

-----Update for Workflow OUTBOUND_FLAG
IF EXISTS (
		SELECT 1
		FROM [dbo].[WORKFLOW_PROFILE]
		WHERE OUTBOUND_FLAG IS NULL
		)
BEGIN
	UPDATE [dbo].[WORKFLOW_PROFILE]
	SET OUTBOUND_FLAG = 'Y'
	WHERE OUTBOUND_FLAG IS NULL;
END
GO

------------------------- Alter Columns NOT NULL -----------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SCHEMA_NAME'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN [SCHEMA_NAME] VARCHAR(50) NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SLA_CALENDAR_MASTER_SID'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN SLA_CALENDAR_MASTER_SID INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'USER_SID'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN USER_SID INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'INBOUND_STATUS'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN INBOUND_STATUS CHAR(1) NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_BY'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN CREATED_BY INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_DATE'
			AND TABLE_NAME = 'WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN CREATED_DATE DATETIME NOT NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE OBJECT_NAME(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'EMAIL_NOTIFICATION_SUCCESS_CC'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.EMAIL_NOTIFICATION_SUCCESS_CC
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_SUCCESS_CC'
			AND TABLE_SCHEMA = 'DBO'
			AND DATA_TYPE = 'VARCHAR'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN EMAIL_NOTIFICATION_SUCCESS_CC VARCHAR(4000)
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE OBJECT_NAME(OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'EMAIL_NOTIFICATION_SUCCESS_TO'
		)
BEGIN
	DROP STATISTICS WORKFLOW_PROFILE.EMAIL_NOTIFICATION_SUCCESS_TO
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_SUCCESS_TO'
			AND TABLE_SCHEMA = 'DBO'
			AND DATA_TYPE = 'VARCHAR'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE

	ALTER COLUMN EMAIL_NOTIFICATION_SUCCESS_TO VARCHAR(4000)
END
GO

----------------------------------------------------------------------------------------------------------------------------------------------------
IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE DECRYPTION_MODE IS NULL
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET DECRYPTION_MODE = 'Y'
	WHERE DECRYPTION_MODE IS NULL
END
GO

------------------ DEFAULT CONSTRAINT -----------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND Schema_name(SCHEMA_ID) = 'dbo'
			AND NAME = 'DF_WORKFLOW_PROFILE_CREATED_BY'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD CONSTRAINT DF_WORKFLOW_PROFILE_CREATED_BY DEFAULT(1)
	FOR CREATED_BY
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'WORKFLOW_PROFILE'
			AND Schema_name(SCHEMA_ID) = 'dbo'
			AND NAME = 'DF_WORKFLOW_PROFILE_CREATED_DATE'
		)
BEGIN
	ALTER TABLE WORKFLOW_PROFILE ADD CONSTRAINT DF_WORKFLOW_PROFILE_CREATED_DATE DEFAULT(Getdate())
	FOR CREATED_DATE
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'WORKFLOW_PROFILE' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

------------------------------------------------------- HIST_WORKFLOW_PROFILE -----------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE DBO.HIST_WORKFLOW_PROFILE (
		PROCESS_SID INT NOT NULL
		,PROCESS_NAME VARCHAR(100) NOT NULL
		,START_DATE DATETIME NULL
		,END_DATE DATETIME NULL
		,ACTIVE_FLAG CHAR(1) NOT NULL
		,PROCESS_DISPLAY_NAME VARCHAR(100) NULL
		,START_HOUR1 TINYINT NULL
		,START_HOUR2 TINYINT NULL
		,START_HOUR3 TINYINT NULL
		,START_MINUTES1 TINYINT NULL
		,START_MINUTES2 TINYINT NULL
		,START_MINUTES3 TINYINT NULL
		,FREQUENCY VARCHAR(50) NOT NULL
		,MANUAL_LAST_RUN DATETIME NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		,EMAIL_NOTIFICATION_SUCCESS_TO VARCHAR(1000) NULL
		,EMAIL_NOTIFICATION_SUCCESS_CC VARCHAR(1000) NULL
		,EMAIL_NOTIFICATION_FAILURE_TO VARCHAR(4000) NULL
		,EMAIL_NOTIFICATION_FAILURE_CC VARCHAR(4000) NULL
		,SUCCESS_MAIL_SUBJECT VARCHAR(4000) NULL
		,SUCCESS_MAIL_BODY VARCHAR(4000) NULL
		,FAILURE_MAIL_SUBJECT VARCHAR(4000) NULL
		,FAILURE_MAIL_BODY VARCHAR(4000) NULL
		,SCHEDULE_LAST_RUN DATETIME NULL
		,START_HOUR TINYINT NULL
		,START_MINUTES TINYINT NULL
		,ACTION_DATE DATETIME NOT NULL
		,ACTION_FLAG CHAR(1) NOT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE parent_object_id = Object_id('dbo.HIST_WORKFLOW_PROFILE')
			AND NAME = 'DF_HIST_WORKFLOW_PROFILE_ACTION_DATE'
		)
BEGIN
	ALTER TABLE [dbo].[HIST_WORKFLOW_PROFILE] ADD CONSTRAINT [DF_HIST_WORKFLOW_PROFILE_ACTION_DATE] DEFAULT(Getdate())
	FOR ACTION_DATE
END
GO

-----------------------------------------------------------HIST_WORKFLOW_PROFILE-------------------------------------------------
------------------------- Add Columns NULL -----------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SCHEMA_NAME'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD [SCHEMA_NAME] VARCHAR(50)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SLA_CALENDAR_MASTER_SID'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD SLA_CALENDAR_MASTER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'USER_SID'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD USER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'INBOUND_STATUS'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD INBOUND_STATUS CHAR(1)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_BY'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD CREATED_BY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_DATE'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD CREATED_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'PROCESS_TYPE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD PROCESS_TYPE INT
END
GO

--SCRIPT_NAME
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'SCRIPT_NAME'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD SCRIPT_NAME VARCHAR(100)
END
GO

--VALIDATION
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'VALIDATION'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD VALIDATION VARCHAR(1000)
END
GO

---------------------------- Updating Previously present records to default value
IF EXISTS (
		SELECT 1
		FROM HIST_WORKFLOW_PROFILE
		WHERE SCHEMA_NAME IS NULL
		)
BEGIN
	UPDATE HIST_WORKFLOW_PROFILE
	SET SCHEMA_NAME = 'BPI'
		,INBOUND_STATUS = 'A'
		,CREATED_BY = 1
		,CREATED_DATE = Getdate()
		,SLA_CALENDAR_MASTER_SID = 1
		,USER_SID = 1
	WHERE SCHEMA_NAME IS NULL
END
GO

------------------------- Alter Columns NOT NULL -----------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SCHEMA_NAME'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN [SCHEMA_NAME] VARCHAR(50) NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'SLA_CALENDAR_MASTER_SID'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN SLA_CALENDAR_MASTER_SID INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'USER_SID'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN USER_SID INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'INBOUND_STATUS'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN INBOUND_STATUS CHAR(1) NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_BY'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN CREATED_BY INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE COLUMN_NAME = 'CREATED_DATE'
			AND TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND IS_NULLABLE = 'NO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN CREATED_DATE DATETIME NOT NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE OBJECT_NAME(OBJECT_ID) = 'HIST_WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'EMAIL_NOTIFICATION_SUCCESS_CC'
		)
BEGIN
	DROP STATISTICS HIST_WORKFLOW_PROFILE.EMAIL_NOTIFICATION_SUCCESS_CC
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_SUCCESS_CC'
			AND TABLE_SCHEMA = 'DBO'
			AND DATA_TYPE = 'VARCHAR'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN EMAIL_NOTIFICATION_SUCCESS_CC VARCHAR(4000)
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.STATS
		WHERE OBJECT_NAME(OBJECT_ID) = 'HIST_WORKFLOW_PROFILE'
			AND AUTO_CREATED = 0
			AND NAME = 'EMAIL_NOTIFICATION_SUCCESS_TO'
		)
BEGIN
	DROP STATISTICS HIST_WORKFLOW_PROFILE.EMAIL_NOTIFICATION_SUCCESS_TO
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'EMAIL_NOTIFICATION_SUCCESS_TO'
			AND TABLE_SCHEMA = 'DBO'
			AND DATA_TYPE = 'VARCHAR'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE

	ALTER COLUMN EMAIL_NOTIFICATION_SUCCESS_TO VARCHAR(4000)
END
GO


IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACCRUAL_INBOUND_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[PROCESS_DISPLAY_NAME]
			
		)
	VALUES (
		'ACCRUAL_INBOUND_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1	
		,'SUCCESS - ACCRUAL_INBOUND_INTERFACE'
		,'ACCRUAL_INBOUND_INTERFACE SUCCESS'
		,'FAILURE - ACCRUAL_INBOUND_INTERFACE '
		,'ACCRUAL_INBOUND_INTERFACE FAILURE'	
		, 'ACCRUAL_INBOUND_INTERFACE'
		)
END
GO
-------------------------------------ADDING DECRYPTION_MODE COLUMN--------------------------------------------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'HIST_WORKFLOW_PROFILE'
			AND COLUMN_NAME = 'DECRYPTION_MODE'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE HIST_WORKFLOW_PROFILE ADD DECRYPTION_MODE CHAR(1) NULL
END
GO


DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_WORKFLOW_PROFILE' --TABLE NAME
SET @SCHEMANAME1 = 'dbo' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

------------- triggers -----------------------------------

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_WORKFLOW_PROFILE_UPD'
		)
BEGIN
	DROP TRIGGER DBO.TRG_WORKFLOW_PROFILE_UPD
END
GO

CREATE TRIGGER [DBO].[TRG_WORKFLOW_PROFILE_UPD] ON [DBO].[WORKFLOW_PROFILE]
AFTER UPDATE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		AND EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_WORKFLOW_PROFILE (
			PROCESS_SID
			,PROCESS_NAME
			,START_DATE
			,END_DATE
			,ACTIVE_FLAG
			,PROCESS_DISPLAY_NAME
			,START_HOUR1
			,START_HOUR2
			,START_HOUR3
			,START_MINUTES1
			,START_MINUTES2
			,START_MINUTES3
			,FREQUENCY
			,MANUAL_LAST_RUN
			,MODIFIED_BY
			,MODIFIED_DATE
			,EMAIL_NOTIFICATION_FAILURE_TO
			,EMAIL_NOTIFICATION_FAILURE_CC
			,SUCCESS_MAIL_SUBJECT
			,SUCCESS_MAIL_BODY
			,FAILURE_MAIL_SUBJECT
			,FAILURE_MAIL_BODY
			,SCHEDULE_LAST_RUN
			,EMAIL_NOTIFICATION_SUCCESS_TO
			,EMAIL_NOTIFICATION_SUCCESS_CC
			,START_HOUR
			,START_MINUTES
			,SCHEMA_NAME
			,INBOUND_STATUS
			,CREATED_DATE
			,SLA_CALENDAR_MASTER_SID
			,USER_SID
			,CREATED_BY
			,PROCESS_TYPE
			,ACTION_FLAG
			,SCRIPT_NAME
			,VALIDATION
			,DECRYPTION_MODE
			)
		SELECT PROCESS_SID
			,PROCESS_NAME
			,START_DATE
			,END_DATE
			,ACTIVE_FLAG
			,PROCESS_DISPLAY_NAME
			,START_HOUR1
			,START_HOUR2
			,START_HOUR3
			,START_MINUTES1
			,START_MINUTES2
			,START_MINUTES3
			,FREQUENCY
			,MANUAL_LAST_RUN
			,MODIFIED_BY
			,MODIFIED_DATE
			,EMAIL_NOTIFICATION_FAILURE_TO
			,EMAIL_NOTIFICATION_FAILURE_CC
			,SUCCESS_MAIL_SUBJECT
			,SUCCESS_MAIL_BODY
			,FAILURE_MAIL_SUBJECT
			,FAILURE_MAIL_BODY
			,SCHEDULE_LAST_RUN
			,EMAIL_NOTIFICATION_SUCCESS_TO
			,EMAIL_NOTIFICATION_SUCCESS_CC
			,START_HOUR
			,START_MINUTES
			,SCHEMA_NAME
			,INBOUND_STATUS
			,CREATED_DATE
			,SLA_CALENDAR_MASTER_SID
			,USER_SID
			,CREATED_BY
			,PROCESS_TYPE
			,'C'
			,SCRIPT_NAME
			,VALIDATION
			,DECRYPTION_MODE
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_WORKFLOW_PROFILE_INS'
		)
BEGIN
	DROP TRIGGER DBO.TRG_WORKFLOW_PROFILE_INS
END
GO

CREATE TRIGGER [DBO].[TRG_WORKFLOW_PROFILE_INS] ON [DBO].[WORKFLOW_PROFILE]
AFTER INSERT
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM INSERTED
			)
		INSERT INTO HIST_WORKFLOW_PROFILE (
			PROCESS_SID
			,PROCESS_NAME
			,START_DATE
			,END_DATE
			,ACTIVE_FLAG
			,PROCESS_DISPLAY_NAME
			,START_HOUR1
			,START_HOUR2
			,START_HOUR3
			,START_MINUTES1
			,START_MINUTES2
			,START_MINUTES3
			,FREQUENCY
			,MANUAL_LAST_RUN
			,MODIFIED_BY
			,MODIFIED_DATE
			,EMAIL_NOTIFICATION_FAILURE_TO
			,EMAIL_NOTIFICATION_FAILURE_CC
			,SUCCESS_MAIL_SUBJECT
			,SUCCESS_MAIL_BODY
			,FAILURE_MAIL_SUBJECT
			,FAILURE_MAIL_BODY
			,SCHEDULE_LAST_RUN
			,EMAIL_NOTIFICATION_SUCCESS_TO
			,EMAIL_NOTIFICATION_SUCCESS_CC
			,START_HOUR
			,START_MINUTES
			,SCHEMA_NAME
			,INBOUND_STATUS
			,CREATED_DATE
			,SLA_CALENDAR_MASTER_SID
			,USER_SID
			,CREATED_BY
			,PROCESS_TYPE
			,ACTION_FLAG
			,SCRIPT_NAME
			,VALIDATION
			,DECRYPTION_MODE
			)
		SELECT PROCESS_SID
			,PROCESS_NAME
			,START_DATE
			,END_DATE
			,ACTIVE_FLAG
			,PROCESS_DISPLAY_NAME
			,START_HOUR1
			,START_HOUR2
			,START_HOUR3
			,START_MINUTES1
			,START_MINUTES2
			,START_MINUTES3
			,FREQUENCY
			,MANUAL_LAST_RUN
			,MODIFIED_BY
			,MODIFIED_DATE
			,EMAIL_NOTIFICATION_FAILURE_TO
			,EMAIL_NOTIFICATION_FAILURE_CC
			,SUCCESS_MAIL_SUBJECT
			,SUCCESS_MAIL_BODY
			,FAILURE_MAIL_SUBJECT
			,FAILURE_MAIL_BODY
			,SCHEDULE_LAST_RUN
			,EMAIL_NOTIFICATION_SUCCESS_TO
			,EMAIL_NOTIFICATION_SUCCESS_CC
			,START_HOUR
			,START_MINUTES
			,SCHEMA_NAME
			,INBOUND_STATUS
			,CREATED_DATE
			,SLA_CALENDAR_MASTER_SID
			,USER_SID
			,CREATED_BY
			,PROCESS_TYPE
			,'A'
			,SCRIPT_NAME
			,VALIDATION
			,DECRYPTION_MODE
		FROM INSERTED
END
GO

IF EXISTS (
		SELECT 'X'
		FROM SYS.TRIGGERS
		WHERE [NAME] = N'TRG_WORKFLOW_PROFILE_DEL'
		)
BEGIN
	DROP TRIGGER DBO.TRG_WORKFLOW_PROFILE_DEL
END
GO

CREATE TRIGGER [DBO].[TRG_WORKFLOW_PROFILE_DEL] ON [DBO].[WORKFLOW_PROFILE]
AFTER DELETE
AS
BEGIN
	SET NOCOUNT ON

	IF EXISTS (
			SELECT *
			FROM DELETED
			)
		INSERT INTO HIST_WORKFLOW_PROFILE (
			PROCESS_SID
			,PROCESS_NAME
			,START_DATE
			,END_DATE
			,ACTIVE_FLAG
			,PROCESS_DISPLAY_NAME
			,START_HOUR1
			,START_HOUR2
			,START_HOUR3
			,START_MINUTES1
			,START_MINUTES2
			,START_MINUTES3
			,FREQUENCY
			,MANUAL_LAST_RUN
			,MODIFIED_BY
			,MODIFIED_DATE
			,EMAIL_NOTIFICATION_FAILURE_TO
			,EMAIL_NOTIFICATION_FAILURE_CC
			,SUCCESS_MAIL_SUBJECT
			,SUCCESS_MAIL_BODY
			,FAILURE_MAIL_SUBJECT
			,FAILURE_MAIL_BODY
			,SCHEDULE_LAST_RUN
			,EMAIL_NOTIFICATION_SUCCESS_TO
			,EMAIL_NOTIFICATION_SUCCESS_CC
			,START_HOUR
			,START_MINUTES
			,SCHEMA_NAME
			,INBOUND_STATUS
			,CREATED_DATE
			,SLA_CALENDAR_MASTER_SID
			,USER_SID
			,CREATED_BY
			,PROCESS_TYPE
			,ACTION_FLAG
			,SCRIPT_NAME
			,VALIDATION
			,DECRYPTION_MODE
			)
		SELECT PROCESS_SID
			,PROCESS_NAME
			,START_DATE
			,END_DATE
			,ACTIVE_FLAG
			,PROCESS_DISPLAY_NAME
			,START_HOUR1
			,START_HOUR2
			,START_HOUR3
			,START_MINUTES1
			,START_MINUTES2
			,START_MINUTES3
			,FREQUENCY
			,MANUAL_LAST_RUN
			,MODIFIED_BY
			,MODIFIED_DATE
			,EMAIL_NOTIFICATION_FAILURE_TO
			,EMAIL_NOTIFICATION_FAILURE_CC
			,SUCCESS_MAIL_SUBJECT
			,SUCCESS_MAIL_BODY
			,FAILURE_MAIL_SUBJECT
			,FAILURE_MAIL_BODY
			,SCHEDULE_LAST_RUN
			,EMAIL_NOTIFICATION_SUCCESS_TO
			,EMAIL_NOTIFICATION_SUCCESS_CC
			,START_HOUR
			,START_MINUTES
			,SCHEMA_NAME
			,INBOUND_STATUS
			,CREATED_DATE
			,SLA_CALENDAR_MASTER_SID
			,USER_SID
			,CREATED_BY
			,PROCESS_TYPE
			,'D'
			,SCRIPT_NAME
			,VALIDATION
			,DECRYPTION_MODE
		FROM DELETED
END
GO

-------------------------------------- Insert Script for Workflow_Profile GAL-2448,2499,2503
DECLARE @PROCESS_TYPE INT
	,@SELECT_ONE BIT = 0

SELECT @PROCESS_TYPE = HELPER_TABLE_SID
FROM HELPER_TABLE
WHERE LIST_NAME = 'PROCESS_TYPE'
	AND DESCRIPTION = 'Manual'

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'HIERARCHY_DEFINITION_OUTBOUND'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[START_DATE]
		,[END_DATE]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[START_HOUR1]
		,[START_HOUR2]
		,[START_HOUR3]
		,[START_MINUTES1]
		,[START_MINUTES2]
		,[START_MINUTES3]
		,[FREQUENCY]
		,[MANUAL_LAST_RUN]
		,[MODIFIED_BY]
		,[MODIFIED_DATE]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		,[EMAIL_NOTIFICATION_FAILURE_CC]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[SCHEDULE_LAST_RUN]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_SUCCESS_CC]
		,[START_HOUR]
		,[START_MINUTES]
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]
		,[PROCESS_TYPE]
		)
	VALUES (
		'HIERARCHY_DEFINITION_OUTBOUND'
		,NULL
		,NULL
		,'Y'
		,'HIERARCHY_DEFINITION_OUTBOUND'
		,0
		,0
		,0
		,0
		,0
		,0
		,'Time'
		,NULL
		,1
		,Cast('2016-02-29 14:57:53.963' AS DATETIME)
		,''
		,''
		,''
		,''
		,''
		,''
		,Cast('2016-03-04 00:00:00.050' AS DATETIME)
		,''
		,''
		,0
		,0
		,'BPI'
		,'A'
		,Cast('2016-02-29 14:57:53.963' AS DATETIME)
		,1
		,1
		,1
		,@PROCESS_TYPE
		)
END

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'RELATIONSHIP_BUILDER_OUTBOUND'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[START_DATE]
		,[END_DATE]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[START_HOUR1]
		,[START_HOUR2]
		,[START_HOUR3]
		,[START_MINUTES1]
		,[START_MINUTES2]
		,[START_MINUTES3]
		,[FREQUENCY]
		,[MANUAL_LAST_RUN]
		,[MODIFIED_BY]
		,[MODIFIED_DATE]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		,[EMAIL_NOTIFICATION_FAILURE_CC]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[SCHEDULE_LAST_RUN]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_SUCCESS_CC]
		,[START_HOUR]
		,[START_MINUTES]
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]
		,[PROCESS_TYPE]
		)
	VALUES (
		'RELATIONSHIP_BUILDER_OUTBOUND'
		,NULL
		,NULL
		,'Y'
		,'RELATIONSHIP_BUILDER_OUTBOUND'
		,0
		,0
		,0
		,0
		,0
		,0
		,'Time'
		,NULL
		,1
		,Cast('2016-02-29 14:57:53.963' AS DATETIME)
		,''
		,''
		,''
		,''
		,''
		,''
		,Cast('2016-03-04 00:00:00.050' AS DATETIME)
		,''
		,''
		,0
		,0
		,'BPI'
		,'A'
		,Cast('2016-02-29 14:57:53.963' AS DATETIME)
		,1
		,1
		,1
		,@PROCESS_TYPE
		)
END

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CFF_OUTBOUND_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[START_DATE]
		,[END_DATE]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[START_HOUR1]
		,[START_HOUR2]
		,[START_HOUR3]
		,[START_MINUTES1]
		,[START_MINUTES2]
		,[START_MINUTES3]
		,[FREQUENCY]
		,[MANUAL_LAST_RUN]
		,[MODIFIED_BY]
		,[MODIFIED_DATE]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		,[EMAIL_NOTIFICATION_FAILURE_CC]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[SCHEDULE_LAST_RUN]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_SUCCESS_CC]
		,[START_HOUR]
		,[START_MINUTES]
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]
		,[PROCESS_TYPE]
		)
	VALUES (
		'CFF_OUTBOUND_INTERFACE'
		,Cast('2015-11-23 00:00:00.000' AS DATETIME)
		,Cast('2015-11-23 00:00:00.000' AS DATETIME)
		,''
		,'CFF Outbound Interface'
		,24
		,24
		,24
		,24
		,24
		,24
		,'Interval'
		,Cast('1900-01-01 00:00:00.000' AS DATETIME)
		,0
		,Cast('1900-01-01 00:00:00.000' AS DATETIME)
		,''
		,''
		,'SUCESS'
		,'CFF_OUTBOUND_INTERFACE SUCESS'
		,'FAIL'
		,'CFF_OUTBOUND_INTERFACE FAILURE'
		,Cast('2016-03-01 00:00:00.000' AS DATETIME)
		,'shrihariharan.ambasekar@sysbiz.com'
		,''
		,24
		,1
		,'BPI'
		,'A'
		,Cast('2016-02-03 00:00:00.000' AS DATETIME)
		,1
		,1
		,1
		,@SELECT_ONE
		)
END
GO

--INSERT
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_MASTER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'COMPANY_MASTER_INTERFACE'
		,'Y'
		,'COMPANY_MASTER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - COMPANY_MASTER_INTERFACE'
		,'COMPANY_MASTER_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_MASTER_INTERFACE '
		,'COMPANY_MASTER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_PARENT_DETAILS_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'COMPANY_PARENT_DETAILS_INTERFACE'
		,'Y'
		,'COMPANY_PARENT_DETAILS_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - COMPANY_PARENT_DETAILS_INTERFACE'
		,'COMPANY_PARENT_DETAILS_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_PARENT_DETAILS_INTERFACE '
		,'COMPANY_PARENT_DETAILS_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_TRADE_CLASS_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'COMPANY_TRADE_CLASS_INTERFACE'
		,'Y'
		,'COMPANY_TRADE_CLASS_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - COMPANY_TRADE_CLASS_INTERFACE'
		,'COMPANY_TRADE_CLASS_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_TRADE_CLASS_INTERFACE '
		,'COMPANY_TRADE_CLASS_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_IDENTIFIER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'COMPANY_IDENTIFIER_INTERFACE'
		,'Y'
		,'COMPANY_IDENTIFIER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - COMPANY_IDENTIFIER_INTERFACE'
		,'COMPANY_IDENTIFIER_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_IDENTIFIER_INTERFACE '
		,'COMPANY_IDENTIFIER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ITEM_MASTER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ITEM_MASTER_INTERFACE'
		,'Y'
		,'ITEM_MASTER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ITEM_MASTER_INTERFACE'
		,'ITEM_MASTER_INTERFACE SUCCESS'
		,'FAILURE - ITEM_MASTER_INTERFACE '
		,'ITEM_MASTER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ITEM_IDENTIFIER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ITEM_IDENTIFIER_INTERFACE'
		,'Y'
		,'ITEM_IDENTIFIER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ITEM_IDENTIFIER_INTERFACE'
		,'ITEM_IDENTIFIER_INTERFACE SUCCESS'
		,'FAILURE - ITEM_IDENTIFIER_INTERFACE '
		,'ITEM_IDENTIFIER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ITEM_PRICING_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ITEM_PRICING_INTERFACE'
		,'Y'
		,'ITEM_PRICING_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ITEM_PRICING_INTERFACE'
		,'ITEM_PRICING_INTERFACE SUCCESS'
		,'FAILURE - ITEM_PRICING_INTERFACE '
		,'ITEM_PRICING_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_HEADER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'CONTRACT_HEADER_INTERFACE'
		,'Y'
		,'CONTRACT_HEADER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - CONTRACT_HEADER_INTERFACE'
		,'CONTRACT_HEADER_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_HEADER_INTERFACE '
		,'CONTRACT_HEADER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_FAMILY_PLAN_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'COMPANY_FAMILY_PLAN_INTERFACE'
		,'Y'
		,'COMPANY_FAMILY_PLAN_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - COMPANY_FAMILY_PLAN_INTERFACE'
		,'COMPANY_FAMILY_PLAN_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_FAMILY_PLAN_INTERFACE '
		,'COMPANY_FAMILY_PLAN_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ITEM_FAMILY_PLAN_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ITEM_FAMILY_PLAN_INTERFACE'
		,'Y'
		,'ITEM_FAMILY_PLAN_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ITEM_FAMILY_PLAN_INTERFACE'
		,'ITEM_FAMILY_PLAN_INTERFACE SUCCESS'
		,'FAILURE - ITEM_FAMILY_PLAN_INTERFACE '
		,'ITEM_FAMILY_PLAN_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PRICE_SCHEDULE_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'PRICE_SCHEDULE_INTERFACE'
		,'Y'
		,'PRICE_SCHEDULE_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - PRICE_SCHEDULE_INTERFACE'
		,'PRICE_SCHEDULE_INTERFACE SUCCESS'
		,'FAILURE - PRICE_SCHEDULE_INTERFACE '
		,'PRICE_SCHEDULE_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'REBATE_SCHEDULE_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'REBATE_SCHEDULE_INTERFACE'
		,'Y'
		,'REBATE_SCHEDULE_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - REBATE_SCHEDULE_INTERFACE'
		,'REBATE_SCHEDULE_INTERFACE SUCCESS'
		,'FAILURE - REBATE_SCHEDULE_INTERFACE '
		,'REBATE_SCHEDULE_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'REBATE_PLAN_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'REBATE_PLAN_INTERFACE'
		,'Y'
		,'REBATE_PLAN_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - REBATE_PLAN_INTERFACE'
		,'REBATE_PLAN_INTERFACE SUCCESS'
		,'FAILURE - REBATE_PLAN_INTERFACE '
		,'REBATE_PLAN_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACTUAL_MASTER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ACTUAL_MASTER_INTERFACE'
		,'Y'
		,'ACTUAL_MASTER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ACTUAL_MASTER_INTERFACE'
		,'ACTUAL_MASTER_INTERFACE SUCCESS'
		,'FAILURE - ACTUAL_MASTER_INTERFACE '
		,'ACTUAL_MASTER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'SALES_MASTER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'SALES_MASTER_INTERFACE'
		,'Y'
		,'SALES_MASTER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - SALES_MASTER_INTERFACE'
		,'SALES_MASTER_INTERFACE SUCCESS'
		,'FAILURE - SALES_MASTER_INTERFACE '
		,'SALES_MASTER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ITEM_HIERARCHY_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ITEM_HIERARCHY_INTERFACE'
		,'Y'
		,'ITEM_HIERARCHY_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ITEM_HIERARCHY_INTERFACE'
		,'ITEM_HIERARCHY_INTERFACE SUCCESS'
		,'FAILURE - ITEM_HIERARCHY_INTERFACE '
		,'ITEM_HIERARCHY_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ITEM_HIERARCHY_DEFINITION_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ITEM_HIERARCHY_DEFINITION_INTERFACE'
		,'Y'
		,'ITEM_HIERARCHY_DEFINITION_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ITEM_HIERARCHY_DEFINITION_INTERFACE'
		,'ITEM_HIERARCHY_DEFINITION_INTERFACE SUCCESS'
		,'FAILURE - ITEM_HIERARCHY_DEFINITION_INTERFACE '
		,'ITEM_HIERARCHY_DEFINITION_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'FORECAST_SALES_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'FORECAST_SALES_INTERFACE'
		,'Y'
		,'FORECAST_SALES_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - FORECAST_SALES_INTERFACE'
		,'FORECAST_SALES_INTERFACE SUCCESS'
		,'FAILURE - FORECAST_SALES_INTERFACE '
		,'FORECAST_SALES_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'GL_BALANCE_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'GL_BALANCE_INTERFACE'
		,'Y'
		,'GL_BALANCE_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - GL_BALANCE_INTERFACE'
		,'GL_BALANCE_INTERFACE SUCCESS'
		,'FAILURE - GL_BALANCE_INTERFACE '
		,'GL_BALANCE_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CPI_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'CPI_INTERFACE'
		,'Y'
		,'CPI_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - CPI_INTERFACE'
		,'CPI_INTERFACE SUCCESS'
		,'FAILURE - CPI_INTERFACE '
		,'CPI_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'FORMULA_DETAILS_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'FORMULA_DETAILS_INTERFACE'
		,'Y'
		,'FORMULA_DETAILS_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - FORMULA_DETAILS_INTERFACE'
		,'FORMULA_DETAILS_INTERFACE SUCCESS'
		,'FAILURE - FORMULA_DETAILS_INTERFACE '
		,'FORMULA_DETAILS_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'MASTER_DATA_ATTRIBUTE_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'MASTER_DATA_ATTRIBUTE_INTERFACE'
		,'Y'
		,'MASTER_DATA_ATTRIBUTE_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - MASTER_DATA_ATTRIBUTE_INTERFACE'
		,'MASTER_DATA_ATTRIBUTE_INTERFACE SUCCESS'
		,'FAILURE - MASTER_DATA_ATTRIBUTE_INTERFACE '
		,'MASTER_DATA_ATTRIBUTE_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'BEST_PRICE_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'BEST_PRICE_INTERFACE'
		,'Y'
		,'BEST_PRICE_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - BEST_PRICE_INTERFACE'
		,'BEST_PRICE_INTERFACE SUCCESS'
		,'FAILURE - BEST_PRICE_INTERFACE '
		,'BEST_PRICE_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'AVERAGE_SHELF_LIFE_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'AVERAGE_SHELF_LIFE_INTERFACE'
		,'Y'
		,'AVERAGE_SHELF_LIFE_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - AVERAGE_SHELF_LIFE_INTERFACE'
		,'AVERAGE_SHELF_LIFE_INTERFACE SUCCESS'
		,'FAILURE - AVERAGE_SHELF_LIFE_INTERFACE '
		,'AVERAGE_SHELF_LIFE_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'GL_COST_CENTER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'GL_COST_CENTER_INTERFACE'
		,'Y'
		,'GL_COST_CENTER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - GL_COST_CENTER_INTERFACE'
		,'GL_COST_CENTER_INTERFACE SUCCESS'
		,'FAILURE - GL_COST_CENTER_INTERFACE '
		,'GL_COST_CENTER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'LOT_MASTER_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'LOT_MASTER_INTERFACE'
		,'Y'
		,'LOT_MASTER_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - LOT_MASTER_INTERFACE'
		,'LOT_MASTER_INTERFACE SUCCESS'
		,'FAILURE - LOT_MASTER_INTERFACE '
		,'LOT_MASTER_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACCRUAL_INBOUND_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ACCRUAL_INBOUND_INTERFACE'
		,'Y'
		,'ACCRUAL_INBOUND_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ACCRUAL_INBOUND_INTERFACE'
		,'ACCRUAL_INBOUND_INTERFACE SUCCESS'
		,'FAILURE - ACCRUAL_INBOUND_INTERFACE '
		,'ACCRUAL_INBOUND_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACCRUAL_OUTBOUND_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ACCRUAL_OUTBOUND_INTERFACE'
		,'Y'
		,'ACCRUAL_OUTBOUND_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ACCRUAL_OUTBOUND_INTERFACE'
		,'ACCRUAL_OUTBOUND_INTERFACE SUCCESS'
		,'FAILURE - ACCRUAL_OUTBOUND_INTERFACE '
		,'ACCRUAL_OUTBOUND_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'GL_POSTING_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'GL_POSTING_INTERFACE'
		,'Y'
		,'GL_POSTING_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - GL_POSTING_INTERFACE'
		,'GL_POSTING_INTERFACE SUCCESS'
		,'FAILURE - GL_POSTING_INTERFACE '
		,'GL_POSTING_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'DEMAND_ACTUAL_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'DEMAND_ACTUAL_INTERFACE'
		,'Y'
		,'DEMAND_ACTUAL_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - DEMAND_ACTUAL_INTERFACE'
		,'DEMAND_ACTUAL_INTERFACE SUCCESS'
		,'FAILURE - DEMAND_ACTUAL_INTERFACE '
		,'DEMAND_ACTUAL_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'DEMAND_FORECAST_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'DEMAND_FORECAST_INTERFACE'
		,'Y'
		,'DEMAND_FORECAST_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - DEMAND_FORECAST_INTERFACE'
		,'DEMAND_FORECAST_INTERFACE SUCCESS'
		,'FAILURE - DEMAND_FORECAST_INTERFACE '
		,'DEMAND_FORECAST_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE'
		,'Y'
		,'INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE'
		,'INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE SUCCESS'
		,'FAILURE - INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE '
		,'INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE'
		,'Y'
		,'INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE'
		,'INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE SUCCESS'
		,'FAILURE - INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE '
		,'INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE'
		,'Y'
		,'INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE'
		,'INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE SUCCESS'
		,'FAILURE - INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE '
		,'INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE'
		,'Y'
		,'INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE'
		,'INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE SUCCESS'
		,'FAILURE - INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE '
		,'INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'RETURNS_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'RETURNS_INTERFACE'
		,'N'
		,'RETURNS_INTERFACE'
		,'Interval'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - RETURNS_INTERFACE'
		,'RETURNS_INTERFACE SUCCESS'
		,'FAILURE - RETURNS_INTERFACE '
		,'RETURNS_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CUSTOMER_GTS_ACTUAL_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'CUSTOMER_GTS_ACTUAL_INTERFACE'
		,'Y'
		,'CUSTOMER_GTS_ACTUAL_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - CUSTOMER_GTS_ACTUAL_INTERFACE'
		,'CUSTOMER_GTS_ACTUAL_INTERFACE SUCCESS'
		,'FAILURE - CUSTOMER_GTS_ACTUAL_INTERFACE '
		,'CUSTOMER_GTS_ACTUAL_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CUSTOMER_GTS_FORECAST_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'CUSTOMER_GTS_FORECAST_INTERFACE'
		,'Y'
		,'CUSTOMER_GTS_FORECAST_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - CUSTOMER_GTS_FORECAST_INTERFACE'
		,'CUSTOMER_GTS_FORECAST_INTERFACE SUCCESS'
		,'FAILURE - CUSTOMER_GTS_FORECAST_INTERFACE '
		,'CUSTOMER_GTS_FORECAST_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADJUSTED_DEMAND_ACTUAL_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ADJUSTED_DEMAND_ACTUAL_INTERFACE'
		,'Y'
		,'ADJUSTED_DEMAND_ACTUAL_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ADJUSTED_DEMAND_ACTUAL_INTERFACE'
		,'ADJUSTED_DEMAND_ACTUAL_INTERFACE SUCCESS'
		,'FAILURE - ADJUSTED_DEMAND_ACTUAL_INTERFACE '
		,'ADJUSTED_DEMAND_ACTUAL_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADJUSTED_DEMAND_FORECAST_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ADJUSTED_DEMAND_FORECAST_INTERFACE'
		,'Y'
		,'ADJUSTED_DEMAND_FORECAST_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ADJUSTED_DEMAND_FORECAST_INTERFACE'
		,'ADJUSTED_DEMAND_FORECAST_INTERFACE SUCCESS'
		,'FAILURE - ADJUSTED_DEMAND_FORECAST_INTERFACE '
		,'ADJUSTED_DEMAND_FORECAST_INTERFACE FAILURE'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACCRUAL_RATE_PROJECTION_INTERFACE'
		)
BEGIN
	INSERT INTO workflow_profile (
		process_name
		,process_display_name
		,active_flag
		,frequency
		,modified_by
		,modified_date
		,schema_name
		,sla_calendar_master_sid
		,user_sid
		,inbound_status
		,success_mail_subject
		,success_mail_body
		,failure_mail_subject
		,failure_mail_body
		,SCRIPT_NAME
		)
	VALUES (
		'ACCRUAL_RATE_PROJECTION_INTERFACE'
		,'ACCRUAL_RATE_PROJECTION_INTERFACE'
		,'N'
		,'Interval'
		,1
		,Getdate()
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - ACCRUAL_RATE_PROJECTION_INTERFACE'
		,'ACCRUAL_RATE_PROJECTION_INTERFACE SUCCESS'
		,'FAILURE - ACCRUAL_RATE_PROJECTION_INTERFACE '
		,'ACCRUAL_RATE_PROJECTION_INTERFACE FAILURE'
		,'Arp_Outbound_Intf.sh'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CFF_OUTBOUND_INTERFACE'
		)
BEGIN
	INSERT INTO workflow_profile (
		process_name
		,process_display_name
		,active_flag
		,frequency
		,modified_by
		,modified_date
		,schema_name
		,sla_calendar_master_sid
		,user_sid
		,inbound_status
		,success_mail_subject
		,success_mail_body
		,failure_mail_subject
		,failure_mail_body
		,SCRIPT_NAME
		)
	VALUES (
		'CFF_OUTBOUND_INTERFACE'
		,'CFF_OUTBOUND_INTERFACE'
		,'N'
		,'Interval'
		,1
		,Getdate()
		,'BPI'
		,1
		,1
		,'A'
		,'SUCCESS - CFF_OUTBOUND_INTERFACE'
		,'CFF_OUTBOUND_INTERFACE SUCCESS'
		,'FAILURE - CFF_OUTBOUND_INTERFACE'
		,'CFF_OUTBOUND_INTERFACE FAILURE'
		,'Cff_Outbound_Intf.sh'
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADJUSTMENT_DETAIL_OUTBOUND_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]			
		,[PROCESS_DISPLAY_NAME]
		,[SCRIPT_NAME]
		,[ACTIVE_FLAG]			
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]		
		)
	VALUES (
		'ADJUSTMENT_DETAIL_OUTBOUND_INTERFACE'		
		,'ADJUSTMENT_DETAIL_OUTBOUND_INTERFACE'
		,'Adjustment_Detail_Outbound_Intf.sh'
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1		
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ARM_LOAD_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SCRIPT_NAME]
		)
	VALUES (
		'ARM_LOAD_INTERFACE'
		,'Y'
		,'ARM_LOAD_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'Arm_Load_Interface.sh'
		)
END
GO

-----------------------UPDATE Starts Here
IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'COMPANY_MASTER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Company_Master_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'COMPANY_MASTER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'COMPANY_PARENT_DETAILS_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Company_Parent_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'COMPANY_PARENT_DETAILS_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'COMPANY_TRADE_CLASS_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Company_Trade_Class_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'COMPANY_TRADE_CLASS_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'COMPANY_IDENTIFIER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Company_Identifier_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'COMPANY_IDENTIFIER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ITEM_MASTER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Item_Master_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ITEM_MASTER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ITEM_IDENTIFIER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Item_Identifier_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ITEM_IDENTIFIER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ITEM_PRICING_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Item_Pricing_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ITEM_PRICING_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'CONTRACT_HEADER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Contract_Header_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'CONTRACT_HEADER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'COMPANY_FAMILY_PLAN_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Company_Family_Plan_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'COMPANY_FAMILY_PLAN_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ITEM_FAMILY_PLAN_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Item_Family_Plan_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ITEM_FAMILY_PLAN_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'PRICE_SCHEDULE_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Price_Schedule_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'PRICE_SCHEDULE_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'REBATE_SCHEDULE_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Rebate_Schedule_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'REBATE_SCHEDULE_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'REBATE_PLAN_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Rebate_Plan_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'REBATE_PLAN_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ACTUAL_MASTER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Actual_Master_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ACTUAL_MASTER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'SALES_MASTER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Sales_Master_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'SALES_MASTER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ITEM_HIERARCHY_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Item_Hierarchy_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ITEM_HIERARCHY_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ITEM_HIERARCHY_DEFINITION_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Item_Hierarchy_Defn_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ITEM_HIERARCHY_DEFINITION_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'FORECAST_SALES_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Forecasting_Sales_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'FORECAST_SALES_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'GL_BALANCE_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'GL_Balance_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'GL_BALANCE_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'CPI_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'CPI_Index_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'CPI_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'FORMULA_DETAILS_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Formula_Details_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'FORMULA_DETAILS_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'MASTER_DATA_ATTRIBUTE_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Master_Data_Attrb_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'MASTER_DATA_ATTRIBUTE_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'BEST_PRICE_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Best_Price_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'BEST_PRICE_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'AVERAGE_SHELF_LIFE_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Average_Shelf_Life_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'AVERAGE_SHELF_LIFE_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'GL_COST_CENTER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'GL_Cost_Center_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'GL_COST_CENTER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'LOT_MASTER_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Lot_Master_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'LOT_MASTER_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ACCRUAL_OUTBOUND_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Accrual_Outbound_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ACCRUAL_OUTBOUND_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'GL_POSTING_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'GL_Posting_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'GL_POSTING_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'DEMAND_ACTUAL_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Demand_Actual_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'DEMAND_ACTUAL_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'DEMAND_FORECAST_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Demand_Forecast_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'DEMAND_FORECAST_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'RETURNS_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Returns_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'RETURNS_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Inventory_Withdrawal_Actual_Detail_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_ACTUAL_DETAIL_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Inventory_Withdrawal_Actual_Summary_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_ACTUAL_SUMMARY_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Inventory_Withdrawal_Projected_Detail_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_PROJECTED_DETAIL_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Inventory_Withdrawal_Projected_Summary_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'INVENTORY_WITHDRAWAL_PROJECTED_SUMMARY_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'CUSTOMER_GTS_ACTUAL_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Customer_Gts_Actual_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'CUSTOMER_GTS_ACTUAL_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'CUSTOMER_GTS_FORECAST_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Customer_Gts_Forecast_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'CUSTOMER_GTS_FORECAST_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ADJUSTED_DEMAND_ACTUAL_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Adjusted_Demand_Actual_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ADJUSTED_DEMAND_ACTUAL_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME IS NULL
			AND PROCESS_NAME = 'ADJUSTED_DEMAND_FORECAST_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Adjusted_Demand_Forecast_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ADJUSTED_DEMAND_FORECAST_INTERFACE'
END
GO

IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE (SCRIPT_NAME IS NULL or SCRIPT_NAME='')
			AND PROCESS_NAME = 'ACCRUAL_INBOUND_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Accrual_Master_Intf.sh' -- varchar(100)
	WHERE PROCESS_NAME = 'ACCRUAL_INBOUND_INTERFACE'
END
GO

--------Insert for ITEM UOM INTERFACE


IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ITEM_UOM_INTERFACE'
		)
BEGIN
	INSERT INTO [WORKFLOW_PROFILE] (
		[PROCESS_NAME]
		,[ACTIVE_FLAG]
		,[PROCESS_DISPLAY_NAME]
		,[FREQUENCY]
		,[SCHEMA_NAME]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[INBOUND_STATUS]
		,[SCRIPT_NAME]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_SUCCESS_CC]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		,[EMAIL_NOTIFICATION_FAILURE_CC]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'ITEM_UOM_INTERFACE'
		,'Y'
		,'ITEM_UOM_INTERFACE'
		,'Time'
		,'BPI'
		,1
		,1
		,'A'
		,'Item_Uom_Intf.sh'
		,'support@bpitechnologies.com'
		,'support@bpitechnologies.com'
		,'support@bpitechnologies.com'
		,'support@bpitechnologies.com'
		,'SUCESS-UOM-INTERFACE'
		,'SUCCESSFUL PROCESS PLEASE VERIFY VALID AND INVALID COUNTS'
		,'FAILURE-ITEM_UOM'
		,'FAILURE-ITEM_UOM'
		)
END
GO




---------------------------------------------------- WF_MAIL_CONFIG -----------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'WF_MAIL_CONFIG'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[WF_MAIL_CONFIG] (
		WF_MAIL_CONFIG_SID INT IDENTITY(1, 1) NOT NULL
		,HOST_NAME VARCHAR(50) NOT NULL
		,EMAIL_ADDRESS VARCHAR(100) NOT NULL
		,PASSWORD VARCHAR(100) NOT NULL
		,PORT_NUMBER VARCHAR(50) NULL
		,SMTP_FLAG VARCHAR(5) NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		,CREATED_BY INT NOT NULL
		,CREATED_DATE DATETIME NOT NULL
		,MODIFIED_BY INT NOT NULL
		,MODIFIED_DATE DATETIME NOT NULL
		)
END
GO

------------------------------ PRIMARY KEY -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_WF_MAIL_CONFIG_WF_MAIL_CONFIG_SID'
			AND TABLE_NAME = 'WF_MAIL_CONFIG'
		)
BEGIN
	ALTER TABLE [DBO].[WF_MAIL_CONFIG] ADD CONSTRAINT PK_WF_MAIL_CONFIG_WF_MAIL_CONFIG_SID PRIMARY KEY (WF_MAIL_CONFIG_SID)
END
GO

---------column addition --------------------------------
--------------------TEST_MAIL_ADDRESS

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'WF_MAIL_CONFIG'
			AND COLUMN_NAME = 'TEST_MAIL_ADDRESS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE WF_MAIL_CONFIG ADD TEST_MAIL_ADDRESS VARCHAR(100)
END
GO













------------------------------ DEFAULT CONSTRAINT -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.WF_MAIL_CONFIG')
			AND NAME = 'DF_WF_MAIL_CONFIG_CREATED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[WF_MAIL_CONFIG] ADD CONSTRAINT [DF_WF_MAIL_CONFIG_CREATED_BY] DEFAULT(1)
	FOR CREATED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.WF_MAIL_CONFIG')
			AND NAME = 'DF_WF_MAIL_CONFIG_CREATED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[WF_MAIL_CONFIG] ADD CONSTRAINT [DF_WF_MAIL_CONFIG_CREATED_DATE] DEFAULT(Getdate())
	FOR CREATED_DATE
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.WF_MAIL_CONFIG')
			AND NAME = 'DF_WF_MAIL_CONFIG_MODIFIED_BY'
		)
BEGIN
	ALTER TABLE [DBO].[WF_MAIL_CONFIG] ADD CONSTRAINT [DF_WF_MAIL_CONFIG_MODIFIED_BY] DEFAULT(1)
	FOR MODIFIED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE PARENT_OBJECT_ID = Object_id('DBO.WF_MAIL_CONFIG')
			AND NAME = 'DF_WF_MAIL_CONFIG_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE [DBO].[WF_MAIL_CONFIG] ADD CONSTRAINT [DF_WF_MAIL_CONFIG_MODIFIED_DATE] DEFAULT(Getdate())
	FOR MODIFIED_DATE
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'WF_MAIL_CONFIG' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

--------------------------------------- MAIL_DETAILS -----------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'MAIL_DETAILS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[MAIL_DETAILS] (
		[MAIL_DETAILS_SID] [INT] IDENTITY(1, 1) NOT NULL
		,[INTERFACE_NAME] [VARCHAR](100) NULL
		,[DESTINATION] [VARCHAR](100) NULL
		,[DESTINATION_CC] [VARCHAR](1000) NULL
		,[MAIL_STATUS] [CHAR](1) NULL
		,[NOTIFICATION_TYPE] [VARCHAR](100) NULL
		,[DB_NAME] [VARCHAR](100) NULL
		,
		)
END
GO

------------------------------ PRIMARY KEY -------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_MAIL_DETAILS_MAIL_DETAILS_SID'
			AND TABLE_NAME = 'MAIL_DETAILS'
		)
BEGIN
	ALTER TABLE [DBO].[MAIL_DETAILS] ADD CONSTRAINT PK_MAIL_DETAILS_MAIL_DETAILS_SID PRIMARY KEY (MAIL_DETAILS_SID)
END
GO

-------------------------------- STATISTICS --------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'MAIL_DETAILS' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

----------------------------------------INSERTION OF ROWS------------------------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'RETURN_RATE_FORECAST_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		)
	VALUES (
		'RETURN_RATE_FORECAST_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Return_Rate_Forecast_Intf.sh'
		,'RETURN_RATE_FORECAST_INTERFACE'
		,'N'
		,'SUCCESS - RETURN_RATE_FORECAST_INTERFACE'
		,'RETURN_RATE_FORECAST_INTERFACE SUCCESS'
		,'FAILURE - RETURN_RATE_FORECAST_INTERFACE '
		,'RETURN_RATE_FORECAST_INTERFACE FAILURE'
		)
END

GO

----------------------------------WORKFLOW_PROFILE_ADROIT_ACTUAL_MASTER_CHARGEBACK_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_CHARGEBACK_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ACTUAL_MASTER_CHARGEBACK_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Actual_Master_Chargeback_Intf.sh'
		,'ADROIT_ACTUAL_MASTER_CHARGEBACK_INTERFACE'
		,'N'
		)
END
GO

----------------------------------WORKFLOW_PROFILE_ADROIT_ACTUAL_MASTER_MEDICAID_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_MEDICAID_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ACTUAL_MASTER_MEDICAID_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Actual_Master_Medicaid_Intf.sh'
		,'ADROIT_ACTUAL_MASTER_MEDICAID_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ACTUAL_MASTER_REBATE_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_REBATE_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ACTUAL_MASTER_REBATE_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Actual_Master_Rebate_Intf.sh'
		,'ADROIT_ACTUAL_MASTER_REBATE_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ACTUAL_MASTER_COUPON_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_COUPON_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ACTUAL_MASTER_COUPON_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Actual_Master_Coupon_Intf.sh'
		,'ADROIT_ACTUAL_MASTER_COUPON_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_COMPANY_MASTER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_COMPANY_MASTER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_COMPANY_MASTER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Company_Master_Intf.sh'
		,'ADROIT_COMPANY_MASTER_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_COMPANY_IDENTIFIER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_COMPANY_IDENTIFIER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_COMPANY_IDENTIFIER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Company_Identifier_Intf.sh'
		,'ADROIT_COMPANY_IDENTIFIER_INTERFACE'
		,'N'
		)
END
GO

----------------------------------ADROIT_COMPANY_TRADE_CLASS_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_COMPANY_TRADE_CLASS_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_COMPANY_TRADE_CLASS_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Company_Trade_Class_Intf.sh'
		,'ADROIT_COMPANY_TRADE_CLASS_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ITEM_IDENTIFIER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ITEM_IDENTIFIER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ITEM_IDENTIFIER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Item_Identifier_Intf.sh'
		,'ADROIT_ITEM_IDENTIFIER_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ITEM_MASTER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ITEM_MASTER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ITEM_MASTER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Item_Master_Intf.sh'
		,'ADROIT_ITEM_MASTER_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ITEM_HIERARCHY_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ITEM_HIERARCHY_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ITEM_HIERARCHY_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Item_Heirarchy_Intf.sh'
		,'ADROIT_ITEM_HIERARCHY_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ITEM_BUSINESS_WAREHOUSE_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ITEM_BUSINESS_WAREHOUSE_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ITEM_BUSINESS_WAREHOUSE_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Item_Business_Warehouse_Intf.sh'
		,'ADROIT_ITEM_BUSINESS_WAREHOUSE_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ITEM_PRICING_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ITEM_PRICING_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ITEM_PRICING_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Item_Pricing_Intf.sh'
		,'ADROIT_ITEM_PRICING_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_CONTRACT_HEADER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_CONTRACT_HEADER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_CONTRACT_HEADER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Contract_Header_Intf.sh'
		,'ADROIT_CONTRACT_HEADER_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_COMPANY_FAMILY_PLAN_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_COMPANY_FAMILY_PLAN_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_COMPANY_FAMILY_PLAN_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Company_Family_Plan_Intf.sh'
		,'ADROIT_COMPANY_FAMILY_PLAN_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ITEM_FAMILY_PLAN_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ITEM_FAMILY_PLAN_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ITEM_FAMILY_PLAN_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Item_Family_Plan_Intf.sh'
		,'ADROIT_ITEM_FAMILY_PLAN_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_REBATE_PLAN_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_REBATE_PLAN_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_REBATE_PLAN_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Rebate_Plan_Intf.sh'
		,'ADROIT_REBATE_PLAN_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_PRICE_SCHEDULE_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_PRICE_SCHEDULE_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_PRICE_SCHEDULE_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Price_Schedule_Intf.sh'
		,'ADROIT_PRICE_SCHEDULE_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_REBATE_SCHEDULE_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_REBATE_SCHEDULE_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_REBATE_SCHEDULE_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Rebate_Schedule_Intf.sh'
		,'ADROIT_REBATE_SCHEDULE_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_SALES_MASTER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_SALES_MASTER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_SALES_MASTER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Sales_Master_Intf.sh'
		,'ADROIT_SALES_MASTER_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_CUSTOMER_GTS_ACTUAL_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_CUSTOMER_GTS_ACTUAL_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_CUSTOMER_GTS_ACTUAL_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Customer_Gts_Actual_Intf.sh'
		,'ADROIT_CUSTOMER_GTS_ACTUAL_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_CUSTOMER_GTS_FORECAST_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_CUSTOMER_GTS_FORECAST_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_CUSTOMER_GTS_FORECAST_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Customer_Gts_Forecast_Intf.sh'
		,'ADROIT_CUSTOMER_GTS_FORECAST_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_RETURNS_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_RETURNS_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_RETURNS_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Returns_Intf.sh'
		,'ADROIT_RETURNS_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_CPI_INDEX_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_CPI_INDEX_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_CPI_INDEX_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_CPI_Index_Intf.sh'
		,'ADROIT_CPI_INDEX_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_GL_COST_CENTER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_GL_COST_CENTER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_GL_COST_CENTER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_GL_Cost_Center_Intf.sh'
		,'ADROIT_GL_COST_CENTER_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_ACCRUAL_INBOUND_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_ACCRUAL_INBOUND_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_ACCRUAL_INBOUND_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Accrual_Master_Intf.sh'
		,'ADROIT_ACCRUAL_INBOUND_INTERFACE'
		,'N'
		)
END
GO
----------------------------------ADROIT_FORECASTING_MASTER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ADROIT_FORECASTING_MASTER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		)
	VALUES (
		'ADROIT_FORECASTING_MASTER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Adroit_Forecasting_Sales_Intf.sh'
		,'ADROIT_FORECASTING_MASTER_INTERFACE'
		,'N'
		)
END
GO

----------------------deleting existing adroit interfaces------------------------------

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_CHARGEBACK_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_CHARGEBACK_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_MEDICAID_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_MEDICAID_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_REBATE_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_REBATE_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_COUPON_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ACTUAL_MASTER_COUPON_INTERFACE' 
                      
END
GO


IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_COMPANY_MASTER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_COMPANY_MASTER_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_COMPANY_IDENTIFIER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_COMPANY_IDENTIFIER_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_COMPANY_TRADE_CLASS_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_COMPANY_TRADE_CLASS_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ITEM_IDENTIFIER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ITEM_IDENTIFIER_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ITEM_MASTER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ITEM_MASTER_INTERFACE' 
                      
END
GO


IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ITEM_HIERARCHY_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ITEM_HIERARCHY_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ITEM_BUSINESS_WAREHOUSE_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ITEM_BUSINESS_WAREHOUSE_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ITEM_PRICING_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ITEM_PRICING_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_CONTRACT_HEADER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_CONTRACT_HEADER_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_COMPANY_FAMILY_PLAN_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_COMPANY_FAMILY_PLAN_INTERFACE' 
                      
END
GO


IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ITEM_FAMILY_PLAN_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ITEM_FAMILY_PLAN_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_REBATE_PLAN_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_REBATE_PLAN_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_PRICE_SCHEDULE_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_PRICE_SCHEDULE_INTERFACE' 
                      
END
GO


IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_REBATE_SCHEDULE_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_REBATE_SCHEDULE_INTERFACE' 
                      
END
GO


IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_SALES_MASTER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_SALES_MASTER_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_CUSTOMER_GTS_ACTUAL_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_CUSTOMER_GTS_ACTUAL_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_CUSTOMER_GTS_FORECAST_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_CUSTOMER_GTS_FORECAST_INTERFACE' 
                      
END
GO



IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_RETURNS_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_RETURNS_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_CPI_INDEX_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_CPI_INDEX_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_GL_COST_CENTER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_GL_COST_CENTER_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_ACCRUAL_INBOUND_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_ACCRUAL_INBOUND_INTERFACE' 
                      
END
GO

IF  EXISTS (SELECT 1 
               FROM   WORKFLOW_PROFILE 
               WHERE  PROCESS_NAME = 'ADROIT_FORECASTING_MASTER_INTERFACE') 
 BEGIN 

DELETE FROM WORKFLOW_PROFILE WHERE PROCESS_NAME = 'ADROIT_FORECASTING_MASTER_INTERFACE' 
                      
END
GO
--------------------------------------Insert new adroit interfaces-------------------------------------------

----------------------------------WORKFLOW_PROFILE ACTUALS_CHARGEBACK_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACTUALS_CHARGEBACK_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'ACTUALS_CHARGEBACK_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Actuals_Chargeback_Intf.sh'
		,'ACTUALS_CHARGEBACK_INTERFACE'
		,'N'
		,'SUCCESS - ACTUALS_CHARGEBACK_INTERFACE'
		,'ACTUALS_CHARGEBACK_INTERFACE SUCCESS'
		,'FAILURE - ACTUALS_CHARGEBACK_INTERFACE '
		,'ACTUALS_CHARGEBACK_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO



----------------------------------WORKFLOW_PROFILE ACTUALS_MEDICAID_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACTUALS_MEDICAID_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'ACTUALS_MEDICAID_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Actuals_Medicaid_Intf.sh'
		,'ACTUALS_MEDICAID_INTERFACE'
		,'N'
		,'SUCCESS - ACTUALS_MEDICAID_INTERFACE'
		,'ACTUALS_MEDICAID_INTERFACE SUCCESS'
		,'FAILURE - ACTUALS_MEDICAID_INTERFACE '
		,'ACTUALS_MEDICAID_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------ACTUALS_REBATE_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACTUALS_REBATE_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'ACTUALS_REBATE_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Actuals_Rebate_Intf.sh'
		,'ACTUALS_REBATE_INTERFACE'
		,'N'
		,'SUCCESS - ACTUALS_REBATE_INTERFACE'
		,'ACTUALS_REBATE_INTERFACE SUCCESS'
		,'FAILURE - ACTUALS_REBATE_INTERFACE '
		,'ACTUALS_REBATE_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------ACTUALS_COUPON_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACTUALS_COUPON_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'ACTUALS_COUPON_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Actuals_Coupon_Intf.sh'
		,'ACTUALS_COUPON_INTERFACE'
		,'N'
		,'SUCCESS - ACTUALS_COUPON_INTERFACE'
		,'ACTUALS_COUPON_INTERFACE SUCCESS'
		,'FAILURE - ACTUALS_COUPON_INTERFACE '
		,'ACTUALS_COUPON_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------COMPANY_BUNIT_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_BUNIT_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'COMPANY_BUNIT_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Company_Bunit_Intf.sh'
		,'COMPANY_BUNIT_INTERFACE'
		,'N'
		,'SUCCESS - COMPANY_BUNIT_INTERFACE'
		,'COMPANY_BUNIT_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_BUNIT_INTERFACE '
		,'COMPANY_BUNIT_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------COMPANY_BUID_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_BUID_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'COMPANY_BUID_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Company_Buid_Intf.sh'
		,'COMPANY_BUID_INTERFACE'
		,'N'
		,'SUCCESS - COMPANY_BUID_INTERFACE'
		,'COMPANY_BUID_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_BUID_INTERFACE '
		,'COMPANY_BUID_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO

----------------------------------COMPANY_BUTYPE_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'COMPANY_BUTYPE_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'COMPANY_BUTYPE_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Company_Butype_Intf.sh'
		,'COMPANY_BUTYPE_INTERFACE'
		,'N'
		,'SUCCESS - COMPANY_BUTYPE_INTERFACE'
		,'COMPANY_BUTYPE_INTERFACE SUCCESS'
		,'FAILURE - COMPANY_BUTYPE_INTERFACE '
		,'COMPANY_BUTYPE_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PRODUCT_PRODID_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PRODUCT_PRODID_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PRODUCT_PRODID_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Product_Prodid_Intf.sh'
		,'PRODUCT_PRODID_INTERFACE'
		,'N'
		,'SUCCESS - PRODUCT_PRODID_INTERFACE'
		,'PRODUCT_PRODID_INTERFACE SUCCESS'
		,'FAILURE - PRODUCT_PRODID_INTERFACE '
		,'PRODUCT_PRODID_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PRODUCT_PROD_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PRODUCT_PROD_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PRODUCT_PROD_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Product_Prod_Intf.sh'
		,'PRODUCT_PROD_INTERFACE'
		,'N'
		,'SUCCESS - PRODUCT_PROD_INTERFACE'
		,'PRODUCT_PROD_INTERFACE SUCCESS'
		,'FAILURE - PRODUCT_PROD_INTERFACE '
		,'PRODUCT_PROD_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PRODUCT_PROD_HIERARCHY_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PRODUCT_PROD_HIERARCHY_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PRODUCT_PROD_HIERARCHY_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Product_Prod_Hierarchy.sh'
		,'PRODUCT_PROD_HIERARCHY_INTERFACE'
		,'N'
		,'SUCCESS - PRODUCT_PROD_HIERARCHY_INTERFACE'
		,'PRODUCT_PROD_HIERARCHY_INTERFACE SUCCESS'
		,'FAILURE - PRODUCT_PROD_HIERARCHY_INTERFACE '
		,'PRODUCT_PROD_HIERARCHY_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PRODUCT_PROD_BW_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PRODUCT_PROD_BW_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PRODUCT_PROD_BW_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Product_Prod_Bw_Intf.sh'
		,'PRODUCT_PROD_BW_INTERFACE'
		,'N'
		,'SUCCESS - PRODUCT_PROD_BW_INTERFACE'
		,'PRODUCT_PROD_BW_INTERFACE SUCCESS'
		,'FAILURE - PRODUCT_PROD_BW_INTERFACE '
		,'PRODUCT_PROD_BW_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PRICING_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PRICING_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PRICING_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pricing_Intf.sh'
		,'PRICING_INTERFACE'
		,'N'
		,'SUCCESS - PRICING_INTERFACE'
		,'PRICING_INTERFACE SUCCESS'
		,'FAILURE - PRICING_INTERFACE '
		,'PRICING_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------CONTRACT_CONT_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_CONT_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONTRACT_CONT_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Contract_Cont_Intf.sh'
		,'CONTRACT_CONT_INTERFACE'
		,'N'
		,'SUCCESS - CONTRACT_CONT_INTERFACE'
		,'CONTRACT_CONT_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_CONT_INTERFACE '
		,'CONTRACT_CONT_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------CONTRACT_CPGRP_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_CPGRP_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONTRACT_CPGRP_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Contract_Cpgrp_Intf.sh'
		,'CONTRACT_CPGRP_INTERFACE'
		,'N'
		,'SUCCESS - CONTRACT_CPGRP_INTERFACE'
		,'CONTRACT_CPGRP_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_CPGRP_INTERFACE '
		,'CONTRACT_CPGRP_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------CONTRACT_CPPPO_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_CPPPO_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONTRACT_CPPPO_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Contract_Cpppo_Intf.sh'
		,'CONTRACT_CPPPO_INTERFACE'
		,'N'
		,'SUCCESS - CONTRACT_CPPPO_INTERFACE'
		,'CONTRACT_CPPPO_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_CPPPO_INTERFACE '
		,'CONTRACT_CPPPO_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------CONTRACT_CPPT_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_CPPT_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONTRACT_CPPT_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Contract_Cppt_Intf.sh'
		,'CONTRACT_CPPT_INTERFACE'
		,'N'
		,'SUCCESS - CONTRACT_CPPT_INTERFACE'
		,'CONTRACT_CPPT_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_CPPT_INTERFACE '
		,'CONTRACT_CPPT_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------CONTRACT_CPGRP_PGMMKT_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_CPGRP_PGMMKT_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONTRACT_CPGRP_PGMMKT_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Contract_cpgrp_pgmmkt_Intf.sh'
		,'CONTRACT_CPGRP_PGMMKT_INTERFACE'
		,'N'
		,'SUCCESS - CONTRACT_CPGRP_PGMMKT_INTERFACE'
		,'CONTRACT_CPGRP_PGMMKT_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_CPGRP_PGMMKT_INTERFACE '
		,'CONTRACT_CPGRP_PGMMKT_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------CONTRACT_PRGMMKT_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_PRGMMKT_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONTRACT_PRGMMKT_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Contract_prgmmkt_Intf.sh'
		,'CONTRACT_PRGMMKT_INTERFACE'
		,'N'
		,'SUCCESS - CONTRACT_PRGMMKT_INTERFACE'
		,'CONTRACT_PRGMMKT_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_PRGMMKT_INTERFACE '
		,'CONTRACT_PRGMMKT_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PSTG_SALES_MASTER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_SALES_MASTER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_SALES_MASTER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_Sales_Master_Intf.sh'
		,'PSTG_SALES_MASTER_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_SALES_MASTER_INTERFACE'
		,'PSTG_SALES_MASTER_INTERFACE SUCCESS'
		,'FAILURE - PSTG_SALES_MASTER_INTERFACE '
		,'PSTG_SALES_MASTER_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_Customer_Gts_Actual_Intf.sh'
		,'PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE'
		,'PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE SUCCESS'
		,'FAILURE - PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE '
		,'PSTG_CUSTOMER_GTS_ACTUAL_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PSTG_CUSTOMER_GTS_FORECAST_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_CUSTOMER_GTS_FORECAST_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_CUSTOMER_GTS_FORECAST_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_Customer_Gts_Forecast_Intf.sh'
		,'PSTG_CUSTOMER_GTS_FORECAST_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_CUSTOMER_GTS_FORECAST_INTERFACE'
		,'PSTG_CUSTOMER_GTS_FORECAST_INTERFACE SUCCESS'
		,'FAILURE - PSTG_CUSTOMER_GTS_FORECAST_INTERFACE '
		,'PSTG_CUSTOMER_GTS_FORECAST_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PSTG_RETURNS_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_RETURNS_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_RETURNS_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_Returns_Intf.sh'
		,'PSTG_RETURNS_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_RETURNS_INTERFACE'
		,'PSTG_RETURNS_INTERFACE SUCCESS'
		,'FAILURE - PSTG_RETURNS_INTERFACE '
		,'PSTG_RETURNS_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------CONSUMER_PRICE_INDEX_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONSUMER_PRICE_INDEX_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONSUMER_PRICE_INDEX_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Customer_Price_Index_Intf.sh'
		,'CONSUMER_PRICE_INDEX_INTERFACE'
		,'N'
		,'SUCCESS - CONSUMER_PRICE_INDEX_INTERFACE'
		,'CONSUMER_PRICE_INDEX_INTERFACE SUCCESS'
		,'FAILURE - CONSUMER_PRICE_INDEX_INTERFACE '
		,'CONSUMER_PRICE_INDEX_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO

----------------------UPDATE QUERRY AS PER ALG-4106---------------------
IF EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE SCRIPT_NAME='Customer_Price_Index_Intf.sh'
			AND PROCESS_NAME = 'CONSUMER_PRICE_INDEX_INTERFACE'
		)
BEGIN
	UPDATE WORKFLOW_PROFILE
	SET SCRIPT_NAME = 'Consumer_Price_Index_Intf.sh' 
	WHERE PROCESS_NAME = 'CONSUMER_PRICE_INDEX_INTERFACE'
END
GO
----------------------ALG-4106 ENDS---------------------
----------------------------------PSTG_GL_COST_CENTER_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_GL_COST_CENTER_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_GL_COST_CENTER_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_GL_Cost_Center_Intf.sh'
		,'PSTG_GL_COST_CENTER_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_GL_COST_CENTER_INTERFACE'
		,'PSTG_GL_COST_CENTER_INTERFACE SUCCESS'
		,'FAILURE - PSTG_GL_COST_CENTER_INTERFACE '
		,'PSTG_GL_COST_CENTER_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------ACCRUALS_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'ACCRUALS_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'ACCRUALS_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Accruals_Intf.sh'
		,'ACCRUALS_INTERFACE'
		,'N'
		,'SUCCESS - ACCRUALS_INTERFACE'
		,'ACCRUALS_INTERFACE SUCCESS'
		,'FAILURE - ACCRUALS_INTERFACE '
		,'ACCRUALS_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------------PSTG_SALES_FORECAST_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_SALES_FORECAST_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_SALES_FORECAST_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_Sales_Forecast_Intf.sh'
		,'PSTG_SALES_FORECAST_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_SALES_FORECAST_INTERFACE'
		,'PSTG_SALES_FORECAST_INTERFACE SUCCESS'
		,'FAILURE - PSTG_SALES_FORECAST_INTERFACE '
		,'PSTG_SALES_FORECAST_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO

----------------------------------UNIT_OF_MEASURE_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'UNIT_OF_MEASURE_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'UNIT_OF_MEASURE_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Unit_Of_Measure_Intf.sh'
		,'UNIT_OF_MEASURE_INTERFACE'
		,'N'
		,'SUCCESS - UNIT_OF_MEASURE_INTERFACE'
		,'UNIT_OF_MEASURE_INTERFACE SUCCESS'
		,'FAILURE - UNIT_OF_MEASURE_INTERFACE '
		,'UNIT_OF_MEASURE_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------AGN-914 ------------------------------------------
----------------------------------CONTRACT_CFP_MBR_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'CONTRACT_CFP_MBR_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'CONTRACT_CFP_MBR_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Contract_Cfp_Mbr_Intf.sh'
		,'CONTRACT_CFP_MBR_INTERFACE'
		,'N'
		,'SUCCESS - CONTRACT_CFP_MBR_INTERFACE'
		,'CONTRACT_CFP_MBR_INTERFACE SUCCESS'
		,'FAILURE - CONTRACT_CFP_MBR_INTERFACE '
		,'CONTRACT_CFP_MBR_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		)
END
GO


----------------------------------PSTG_FORECAST_SALES_WAC_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_FORECAST_SALES_WAC_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_FORECAST_SALES_WAC_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_Forecast_Sales_Wac_Intf.sh'
		,'PSTG_FORECAST_SALES_WAC_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_FORECAST_SALES_WAC_INTERFACE'
		,'PSTG_FORECAST_SALES_WAC_INTERFACE SUCCESS'
		,'FAILURE - PSTG_FORECAST_SALES_WAC_INTERFACE '
		,'PSTG_FORECAST_SALES_WAC_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com'
		)
END
GO



----------------------------------PSTG_GCC_PROD_HIERARCHY_INTERFACE -------------------------------------
IF NOT EXISTS (
		SELECT 1
		FROM WORKFLOW_PROFILE
		WHERE PROCESS_NAME = 'PSTG_GCC_PROD_HIERARCHY_INTERFACE'
		)
BEGIN
	INSERT [dbo].[WORKFLOW_PROFILE] (
		[PROCESS_NAME]		
		,[ACTIVE_FLAG]		
		,[FREQUENCY]		
		,[MODIFIED_BY]
		,[MODIFIED_DATE]		
		,[SCHEMA_NAME]
		,[INBOUND_STATUS]
		,[CREATED_DATE]
		,[SLA_CALENDAR_MASTER_SID]
		,[USER_SID]
		,[CREATED_BY]	
        ,[SCRIPT_NAME]
		,[PROCESS_DISPLAY_NAME]
		,[VALIDATION]
		,[SUCCESS_MAIL_SUBJECT]
		,[SUCCESS_MAIL_BODY]
		,[FAILURE_MAIL_SUBJECT]
		,[FAILURE_MAIL_BODY]
		,[EMAIL_NOTIFICATION_SUCCESS_TO]
		,[EMAIL_NOTIFICATION_FAILURE_TO]
		)
	VALUES (
		'PSTG_GCC_PROD_HIERARCHY_INTERFACE'		
		,'Y'				
		,'Time'		
		,1
		,getdate()		
		,'BPI'
		,'A'
		,getdate()
		,1
		,1
		,1
        ,'Pstg_Gcc_Prod_Hierarchy_Intf.sh'
		,'PSTG_GCC_PROD_HIERARCHY_INTERFACE'
		,'N'
		,'SUCCESS - PSTG_GCC_PROD_HIERARCHY_INTERFACE'
		,'PSTG_GCC_PROD_HIERARCHY_INTERFACE SUCCESS'
		,'FAILURE - PSTG_GCC_PROD_HIERARCHY_INTERFACE '
		,'PSTG_GCC_PROD_HIERARCHY_INTERFACE FAILURE'
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		,'dk@adroit-transformations.com SMedina@bpitechnologies.com ERodriguez@bpitechnologies.com support@bpitechnologies.com' 
		)
END
GO
----------------------------AGN-914 ENDS------------------------------------------



