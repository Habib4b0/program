/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

/**
 * The base model interface for the ChProjectionSelection service. Represents a row in the &quot;CH_PROJECTION_SELECTION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.ChProjectionSelectionModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.ChProjectionSelectionImpl}.
 * </p>
 *
 * @author
 * @see ChProjectionSelection
 * @see com.stpl.app.model.impl.ChProjectionSelectionImpl
 * @see com.stpl.app.model.impl.ChProjectionSelectionModelImpl
 * @generated
 */
@ProviderType
public interface ChProjectionSelectionModel extends BaseModel<ChProjectionSelection> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a ch projection selection model instance should use the {@link ChProjectionSelection} interface instead.
	 */

	/**
	 * Returns the primary key of this ch projection selection.
	 *
	 * @return the primary key of this ch projection selection
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this ch projection selection.
	 *
	 * @param primaryKey the primary key of this ch projection selection
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the screen name of this ch projection selection.
	 *
	 * @return the screen name of this ch projection selection
	 */
	@AutoEscape
	public String getScreenName();

	/**
	 * Sets the screen name of this ch projection selection.
	 *
	 * @param screenName the screen name of this ch projection selection
	 */
	public void setScreenName(String screenName);

	/**
	 * Returns the field name of this ch projection selection.
	 *
	 * @return the field name of this ch projection selection
	 */
	@AutoEscape
	public String getFieldName();

	/**
	 * Sets the field name of this ch projection selection.
	 *
	 * @param fieldName the field name of this ch projection selection
	 */
	public void setFieldName(String fieldName);

	/**
	 * Returns the ch projection selection sid of this ch projection selection.
	 *
	 * @return the ch projection selection sid of this ch projection selection
	 */
	public int getChProjectionSelectionSid();

	/**
	 * Sets the ch projection selection sid of this ch projection selection.
	 *
	 * @param chProjectionSelectionSid the ch projection selection sid of this ch projection selection
	 */
	public void setChProjectionSelectionSid(int chProjectionSelectionSid);

	/**
	 * Returns the field values of this ch projection selection.
	 *
	 * @return the field values of this ch projection selection
	 */
	@AutoEscape
	public String getFieldValues();

	/**
	 * Sets the field values of this ch projection selection.
	 *
	 * @param fieldValues the field values of this ch projection selection
	 */
	public void setFieldValues(String fieldValues);

	/**
	 * Returns the projection master sid of this ch projection selection.
	 *
	 * @return the projection master sid of this ch projection selection
	 */
	public int getProjectionMasterSid();

	/**
	 * Sets the projection master sid of this ch projection selection.
	 *
	 * @param projectionMasterSid the projection master sid of this ch projection selection
	 */
	public void setProjectionMasterSid(int projectionMasterSid);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(ChProjectionSelection chProjectionSelection);

	@Override
	public int hashCode();

	@Override
	public CacheModel<ChProjectionSelection> toCacheModel();

	@Override
	public ChProjectionSelection toEscapedModel();

	@Override
	public ChProjectionSelection toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}