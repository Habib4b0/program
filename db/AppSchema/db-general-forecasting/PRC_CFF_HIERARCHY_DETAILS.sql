IF EXISTS (SELECT 'X'
           FROM   INFORMATION_SCHEMA.ROUTINES
           WHERE  ROUTINE_NAME = 'PRC_CFF_HIERARCHY_DETAILS'
                  AND ROUTINE_SCHEMA = 'DBO')
  BEGIN
      DROP PROCEDURE [DBO].[PRC_CFF_HIERARCHY_DETAILS]
  END

GO
CREATE PROCEDURE [DBO].[PRC_CFF_HIERARCHY_DETAILS] (@CFF_MASTER_SID VARCHAR(100),
                                                       @FREQUENCY VARCHAR(20),
													   @USER_ID INT,
													   @SESSION_ID VARCHAR(50),
													   @INDICATOR CHAR(1),
													   @CUSTOM_VIEW_MASTER_SID INT,
													   @LEVEL_NO SMALLINT
													   )
 AS	                                                        
BEGIN 
SET NOCOUNT ON 

BEGIN TRY	
DECLARE @CFF_PRODUCT           VARCHAR(200) = CONCAT ('ST_CFF_PRODUCT_LEVEL_FILES_DATA_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),----PRODUCT LEVEL DATA
        @CFF_COMP_PROD         VARCHAR(200) = CONCAT ('ST_CFF_COMP_PRD_LEVEL_FILES_DATA_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),  ---- COMP+PROD DATA
		@CCP_HIERARCHY         VARCHAR(200) = CONCAT ('ST_CCP_HIERARCHY_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')), ---- CCP DEATILS INFORMATION
		@CUSTOMER_CFF_SALES VARCHAR(200) = CONCAT('ST_CUSTOMER_CFF_SALES_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@PRODUCT_CFF_SALES VARCHAR(200) = CONCAT('ST_PRODUCT_CFF_SALES_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@CUSTOM_CFF_SALES VARCHAR(200) = CONCAT('ST_CUSTOM_CFF_SALES_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@CUSTOMER_CFF_DISCOUNT VARCHAR(200) = CONCAT('ST_CUSTOMER_CFF_DISCOUNT_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@PRODUCT_CFF_DISCOUNT VARCHAR(200) = CONCAT('ST_PRODUCT_CFF_DISCOUNT_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@CUSTOM_CFF_DISCOUNT VARCHAR(200) = CONCAT('ST_CUSTOM_CFF_DISCOUNT_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@CUSTOMER_CFF_HIERARCHY_DETAILS VARCHAR(200) = CONCAT('ST_CUSTOMER_CFF_HIERARCHY_DETAILS_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@PRODUCT_CFF_HIERARCHY_DETAILS VARCHAR(200) = CONCAT('ST_PRODUCT_CFF_HIERARCHY_DETAILS_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@CUSTOM_CFF_HIERARCHY_DETAILS VARCHAR(200) = CONCAT('ST_CUSTOM_CFF_HIERARCHY_DETAILS_', @USER_ID, '_', @SESSION_ID, '_', REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')),
		@STATUS_TABLE       VARCHAR(200) = Concat ('ST_STATUS_TABLE_', @USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
		@CUSTOM_CCP_SALES VARCHAR(200) = CONCAT ('CUSTOM_CCP_SALES_',@CUSTOM_VIEW_MASTER_SID),
		@SALES_TABLE            VARCHAR(MAX),@CUSTOMER_DETAILS_TEMP varchar(300),
        @DISCOUNT_TABLE         VARCHAR(200),
		@ROW_ID INT,
		@ROW_OP INT
	
DECLARE @ACTUAL_START_DATE DATETIME = CAST(YEAR(GETDATE()) - 3 AS VARCHAR(4)) + '-01-01',
         @PROJ_END_PERIOD_DATE DATETIME	

SELECT TOP 1 @PROJ_END_PERIOD_DATE = DATEADD(DD, 1, EOMONTH(TO_DATE, - 1))
FROM FORECAST_CONFIG FA
LEFT JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = FA.BUSINESS_PROCESS_TYPE
WHERE [DESCRIPTION] = 'CONSOLIDATED FINANCIAL FORECAST'
ORDER BY VERSION_NO DESC

DECLARE @FROM_PERIOD_SID INT,@END_PERIOD_SID INT

 SET @FROM_PERIOD_SID  = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @ACTUAL_START_DATE
		)
		
SET @END_PERIOD_SID  = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @PROJ_END_PERIOD_DATE
		)					 
-----------------PERIOD CONVERISON--------------------
DECLARE @SP INT
	,@SP_PROJ_SID INT
	,@TEMP_PROJ_SID VARCHAR(500)
	,@FIRST_PROJ_SID INT

 IF OBJECT_ID('TEMPDB..#CFF_PROJECTION_MASTER') IS NOT NULL 
            DROP TABLE #CFF_PROJECTION_MASTER 


	CREATE TABLE #CFF_PROJECTION_MASTER (
		ID INT IDENTITY(1, 1),
		CFF_MASTER_SID INT
		)

SET @TEMP_PROJ_SID = REPLACE(@CFF_MASTER_SID + ',', ',,', ',')

WHILE PATINDEX('%,%', @TEMP_PROJ_SID) <> 0
BEGIN
	SELECT @SP = PATINDEX('%,%', @TEMP_PROJ_SID)

	SELECT @SP_PROJ_SID = LEFT(@TEMP_PROJ_SID, @SP - 1)

	SELECT @TEMP_PROJ_SID = STUFF(@TEMP_PROJ_SID, 1, @SP, '')

	INSERT INTO #CFF_PROJECTION_MASTER (CFF_MASTER_SID)
	SELECT @SP_PROJ_SID
END

SELECT @FIRST_PROJ_SID = PM.CFF_MASTER_SID
FROM #CFF_PROJECTION_MASTER PM
WHERE ID = 1

IF OBJECT_ID('TEMPDB.DBO.#CFF_DETAILS_CURRENT', 'U') IS NOT NULL
	DROP TABLE #CFF_DETAILS_CURRENT;
	SELECT CD.CFF_DETAILS_SID,CD.CFF_MASTER_SID,CD1.CCP_DETAILS_SID,CD1.COMPANY_MASTER_SID,CD1.ITEM_MASTER_SID INTO #CFF_DETAILS_CURRENT
	FROM CFF_DETAILS CD JOIN CCP_DETAILS CD1 ON CD1.CCP_DETAILS_SID=CD.CCP_DETAILS_SID
	WHERE CFF_MASTER_SID=@FIRST_PROJ_SID
--------------------TAKING TABLES BASED ON VIEW STARTS HERE
 IF @INDICATOR = 'C'
            BEGIN
                SET @SALES_TABLE=@CUSTOMER_CFF_SALES
                SET @DISCOUNT_TABLE=@CUSTOMER_CFF_DISCOUNT
				SET @CUSTOMER_DETAILS_TEMP=@CUSTOMER_CFF_HIERARCHY_DETAILS
            END
          ELSE IF @INDICATOR = 'P'
            BEGIN
                SET @SALES_TABLE=@PRODUCT_CFF_SALES
                SET @DISCOUNT_TABLE=@PRODUCT_CFF_DISCOUNT
				SET @CUSTOMER_DETAILS_TEMP=@PRODUCT_CFF_HIERARCHY_DETAILS
            END
          ELSE IF @INDICATOR NOT IN ( 'C', 'P' )
            BEGIN
                SET @SALES_TABLE=@CUSTOM_CFF_SALES
                SET @DISCOUNT_TABLE=@CUSTOM_CFF_DISCOUNT
				SET @CUSTOMER_DETAILS_TEMP=@CUSTOM_CFF_HIERARCHY_DETAILS
            END

			DECLARE @RELATIONSHIP_SID INT, @VERSION INT

			SELECT @RELATIONSHIP_SID=IIF( @INDICATOR='C',CUST_RELATIONSHIP_BUILDER_SID,PROD_RELATIONSHIP_BUILDER_SID),
			@VERSION=IIF( @INDICATOR='C',PROJECTION_CUST_VERSION,PROJECTION_PROD_VERSION )
			
			FROM CFF_MASTER WHERE CFF_MASTER_SID=@FIRST_PROJ_SID

 DECLARE @SQL_C NVARCHAR(MAX) , @SQL_PRO NVARCHAR(MAX)	

IF OBJECT_ID('TEMPDB..#HIERARCHY_NO','U') IS NOT NULL
    DROP TABLE #HIERARCHY_NO
CREATE TABLE #HIERARCHY_NO
(
HIERARCHY_NO VARCHAR(8000),RELATIONSHIP_LEVEL_SID INT
)

SET @SQL_C=CONCAT('
INSERT INTO #HIERARCHY_NO

SELECT DISTINCT RLD.HIERARCHY_NO,RLD.RELATIONSHIP_LEVEL_SID FROM  RELATIONSHIP_LEVEL_DEFINITION RLD
                       JOIN (SELECT DISTINCT ',CASE WHEN @INDICATOR='C' THEN 'CCP.CUST_HIERARCHY_NO' WHEN  @INDICATOR='P' THEN 'CCP.PROD_HIERARCHY_NO' END ,
					   ' AS HIERARCHY_NO  FROM ',@CCP_HIERARCHY,' CCP WHERE EXISTS (SELECT 1 FROM #CFF_DETAILS_CURRENT CD WHERE CD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
                            AND CD.CFF_MASTER_SID = ',@FIRST_PROJ_SID,')) CCP
 ON CCP.HIERARCHY_NO LIKE RLD.HIERARCHY_NO+''%'''
			,'  AND RLD.RELATIONSHIP_BUILDER_SID = '
			,@RELATIONSHIP_SID
			,'
AND  RLD.VERSION_NO= ',@VERSION,' 
AND  RLD.LEVEL_NO >= '
			,@LEVEL_NO)


 SET @SQL_PRO=CONCAT('
INSERT INTO #HIERARCHY_NO(HIERARCHY_NO)

SELECT DISTINCT HIERARCHY_NO FROM ' ,@CUSTOM_CCP_SALES)

IF @INDICATOR IN('C','P')

EXEC(@SQL_C)
ELSE
EXEC(@SQL_PRO)

SET @SQL_C=CONCAT('TRUNCATE TABLE ',@CUSTOMER_DETAILS_TEMP,'')
  EXEC SP_EXECUTESQL @SQL_C

IF @INDICATOR IN ( 'C', 'P' )
            BEGIN
SET @SQL_C = CONCAT('INSERT INTO ',@CUSTOMER_DETAILS_TEMP,' (
	COMPANY_MASTER_SID
	,ITEM_MASTER_SID
	 ,HIERARCHY_NO,ROW_ID
	)
SELECT COMPANY_MASTER_SID,ITEM_MASTER_SID,HIERARCHY_NO,RELATIONSHIP_LEVEL_SID FROM (SELECT DISTINCT 
	 COMPANY_MASTER_SID
	,ITEM_MASTER_SID,
	HR.HIERARCHY_NO  AS HIERARCHY_NO,HR.RELATIONSHIP_LEVEL_SID,ROW_NUMBER() OVER(PARTITION BY RELATIONSHIP_LEVEL_SID, COMPANY_MASTER_SID, ITEM_MASTER_SID ORDER BY RELATIONSHIP_LEVEL_SID) AS RN
FROM ', @CCP_HIERARCHY, ' CH
JOIN #CFF_DETAILS_CURRENT CD ON CH.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
JOIN #HIERARCHY_NO HR ON ', CASE WHEN @INDICATOR='C' THEN 'CH.CUST_HIERARCHY_NO' WHEN  @INDICATOR='P' THEN 'CH.PROD_HIERARCHY_NO' END , '
 LIKE HR.HIERARCHY_NO+''%'')A WHERE RN=1')


		EXEC SP_EXECUTESQL @SQL_C

	END
 IF @INDICATOR NOT IN ( 'C', 'P' )
            BEGIN
                SET @SQL_C = CONCAT('INSERT INTO ',@CUSTOMER_DETAILS_TEMP,' (
	COMPANY_MASTER_SID
	,ITEM_MASTER_SID,
     HIERARCHY_NO,ROW_ID
	)
SELECT DISTINCT 
	 COMPANY_MASTER_SID
	,ITEM_MASTER_SID
	 ,C.HIERARCHY_NO
	,ROWID 
FROM ',@CUSTOM_CCP_SALES,' C
JOIN #CFF_DETAILS_CURRENT CD ON CD.CCP_DETAILS_SID = C.CCP_DETAILS_SID
 ')
  EXEC SP_EXECUTESQL @SQL_C

                 
            END
SET @SQL_C =Concat('UPDATE ', @STATUS_TABLE, '
SET    FLAG = ''C''
WHERE  SCREEN_NAME= ''CFF_EXCEL''
       AND VIEW_NAME = CASE ''', @indicator, '''
                         WHEN ''C'' THEN ''CUSTOMER''
                         WHEN ''P'' THEN ''PRODUCT''
                         ELSE ''CUSTOM''
                       END ')

          EXEC Sp_executesql
            @SQL_C
		---	

END TRY 

      BEGIN CATCH 
          DECLARE @ERRORMESSAGE NVARCHAR(4000); 
          DECLARE @ERRORSEVERITY INT; 
          DECLARE @ERRORSTATE INT; 
          DECLARE @ERRORNUMBER INT; 
          DECLARE @ERRORPROCEDURE VARCHAR(200); 
          DECLARE @ERRORLINE INT; 

          EXEC USPERRORCOLLECTOR 

          SELECT @ERRORMESSAGE = ERROR_MESSAGE(), 
                 @ERRORSEVERITY = ERROR_SEVERITY(), 
                 @ERRORSTATE = ERROR_STATE(), 
                 @ERRORPROCEDURE = ERROR_PROCEDURE(), 
                 @ERRORLINE = ERROR_LINE(), 
                 @ERRORNUMBER = ERROR_NUMBER() 

          RAISERROR ( @ERRORMESSAGE,-- MESSAGE TEXT. 
                      @ERRORSEVERITY,-- SEVERITY. 
                      @ERRORSTATE,-- STATE. 
                      @ERRORPROCEDURE,-- PROCEDURE_NAME. 
                      @ERRORNUMBER,-- ERRORNUMBER 
                      @ERRORLINE -- ERRORLINE 
          ) 
      END CATCH 
  END 
  GO