package com.stpl.app.model.impl;

import com.stpl.app.model.PsContract;
import com.stpl.app.model.PsContractModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PsContract service. Represents a row in the &quot;PS_CONTRACT&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.PsContractModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PsContractImpl}.
 * </p>
 *
 * @author
 * @see PsContractImpl
 * @see com.stpl.app.model.PsContract
 * @see com.stpl.app.model.PsContractModel
 * @generated
 */
public class PsContractModelImpl extends BaseModelImpl<PsContract>
    implements PsContractModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a ps contract model instance should use the {@link com.stpl.app.model.PsContract} interface instead.
     */
    public static final String TABLE_NAME = "PS_CONTRACT";
    public static final Object[][] TABLE_COLUMNS = {
            { "PS_NAME", Types.VARCHAR },
            { "CFP_CONTRACT_SID", Types.VARCHAR },
            { "PS_CONTRACT_SID", Types.INTEGER },
            { "PS_TYPE", Types.INTEGER },
            { "PS_CONTRACT_ATTACHED_STATUS", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "PS_CATEGORY", Types.INTEGER },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "PS_STATUS", Types.INTEGER },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "SOURCE", Types.VARCHAR },
            { "PARENT_PS_ID", Types.VARCHAR },
            { "PS_DESIGNATION", Types.VARCHAR },
            { "BATCH_ID", Types.VARCHAR },
            { "CONTRACT_MASTER_SID", Types.INTEGER },
            { "PS_MODEL_SID", Types.INTEGER },
            { "PS_CONTRACT_ATTACHED_DATE", Types.TIMESTAMP },
            { "PS_END_DATE", Types.TIMESTAMP },
            { "MODIFIED_BY", Types.INTEGER },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "PARENT_PS_NAME", Types.VARCHAR },
            { "PS_START_DATE", Types.TIMESTAMP },
            { "IFP_CONTRACT_SID", Types.VARCHAR },
            { "PS_TRADE_CLASS", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table PS_CONTRACT (PS_NAME VARCHAR(75) null,CFP_CONTRACT_SID VARCHAR(75) null,PS_CONTRACT_SID INTEGER not null primary key IDENTITY,PS_TYPE INTEGER,PS_CONTRACT_ATTACHED_STATUS INTEGER,MODIFIED_DATE DATE null,PS_CATEGORY INTEGER,RECORD_LOCK_STATUS BOOLEAN,PS_STATUS INTEGER,CREATED_DATE DATE null,CREATED_BY INTEGER,SOURCE VARCHAR(75) null,PARENT_PS_ID VARCHAR(75) null,PS_DESIGNATION VARCHAR(75) null,BATCH_ID VARCHAR(75) null,CONTRACT_MASTER_SID INTEGER,PS_MODEL_SID INTEGER,PS_CONTRACT_ATTACHED_DATE DATE null,PS_END_DATE DATE null,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,PARENT_PS_NAME VARCHAR(75) null,PS_START_DATE DATE null,IFP_CONTRACT_SID VARCHAR(75) null,PS_TRADE_CLASS INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table PS_CONTRACT";
    public static final String ORDER_BY_JPQL = " ORDER BY psContract.psContractSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY PS_CONTRACT.PS_CONTRACT_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.PsContract"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.PsContract"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.PsContract"));
    private static ClassLoader _classLoader = PsContract.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            PsContract.class
        };
    private String _psName;
    private String _cfpContractSid;
    private int _psContractSid;
    private int _psType;
    private int _psContractAttachedStatus;
    private Date _modifiedDate;
    private int _psCategory;
    private boolean _recordLockStatus;
    private int _psStatus;
    private Date _createdDate;
    private int _createdBy;
    private String _source;
    private String _parentPsId;
    private String _psDesignation;
    private String _batchId;
    private int _contractMasterSid;
    private int _psModelSid;
    private Date _psContractAttachedDate;
    private Date _psEndDate;
    private int _modifiedBy;
    private String _inboundStatus;
    private String _parentPsName;
    private Date _psStartDate;
    private String _ifpContractSid;
    private int _psTradeClass;
    private PsContract _escapedModel;

    public PsContractModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _psContractSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setPsContractSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _psContractSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return PsContract.class;
    }

    @Override
    public String getModelClassName() {
        return PsContract.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("psName", getPsName());
        attributes.put("cfpContractSid", getCfpContractSid());
        attributes.put("psContractSid", getPsContractSid());
        attributes.put("psType", getPsType());
        attributes.put("psContractAttachedStatus", getPsContractAttachedStatus());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("psCategory", getPsCategory());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("psStatus", getPsStatus());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("source", getSource());
        attributes.put("parentPsId", getParentPsId());
        attributes.put("psDesignation", getPsDesignation());
        attributes.put("batchId", getBatchId());
        attributes.put("contractMasterSid", getContractMasterSid());
        attributes.put("psModelSid", getPsModelSid());
        attributes.put("psContractAttachedDate", getPsContractAttachedDate());
        attributes.put("psEndDate", getPsEndDate());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("parentPsName", getParentPsName());
        attributes.put("psStartDate", getPsStartDate());
        attributes.put("ifpContractSid", getIfpContractSid());
        attributes.put("psTradeClass", getPsTradeClass());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String psName = (String) attributes.get("psName");

        if (psName != null) {
            setPsName(psName);
        }

        String cfpContractSid = (String) attributes.get("cfpContractSid");

        if (cfpContractSid != null) {
            setCfpContractSid(cfpContractSid);
        }

        Integer psContractSid = (Integer) attributes.get("psContractSid");

        if (psContractSid != null) {
            setPsContractSid(psContractSid);
        }

        Integer psType = (Integer) attributes.get("psType");

        if (psType != null) {
            setPsType(psType);
        }

        Integer psContractAttachedStatus = (Integer) attributes.get(
                "psContractAttachedStatus");

        if (psContractAttachedStatus != null) {
            setPsContractAttachedStatus(psContractAttachedStatus);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Integer psCategory = (Integer) attributes.get("psCategory");

        if (psCategory != null) {
            setPsCategory(psCategory);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        Integer psStatus = (Integer) attributes.get("psStatus");

        if (psStatus != null) {
            setPsStatus(psStatus);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        String parentPsId = (String) attributes.get("parentPsId");

        if (parentPsId != null) {
            setParentPsId(parentPsId);
        }

        String psDesignation = (String) attributes.get("psDesignation");

        if (psDesignation != null) {
            setPsDesignation(psDesignation);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        Integer contractMasterSid = (Integer) attributes.get(
                "contractMasterSid");

        if (contractMasterSid != null) {
            setContractMasterSid(contractMasterSid);
        }

        Integer psModelSid = (Integer) attributes.get("psModelSid");

        if (psModelSid != null) {
            setPsModelSid(psModelSid);
        }

        Date psContractAttachedDate = (Date) attributes.get(
                "psContractAttachedDate");

        if (psContractAttachedDate != null) {
            setPsContractAttachedDate(psContractAttachedDate);
        }

        Date psEndDate = (Date) attributes.get("psEndDate");

        if (psEndDate != null) {
            setPsEndDate(psEndDate);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        String parentPsName = (String) attributes.get("parentPsName");

        if (parentPsName != null) {
            setParentPsName(parentPsName);
        }

        Date psStartDate = (Date) attributes.get("psStartDate");

        if (psStartDate != null) {
            setPsStartDate(psStartDate);
        }

        String ifpContractSid = (String) attributes.get("ifpContractSid");

        if (ifpContractSid != null) {
            setIfpContractSid(ifpContractSid);
        }

        Integer psTradeClass = (Integer) attributes.get("psTradeClass");

        if (psTradeClass != null) {
            setPsTradeClass(psTradeClass);
        }
    }

    @Override
    public String getPsName() {
        if (_psName == null) {
            return StringPool.BLANK;
        } else {
            return _psName;
        }
    }

    @Override
    public void setPsName(String psName) {
        _psName = psName;
    }

    @Override
    public String getCfpContractSid() {
        return _cfpContractSid;
    }

    @Override
    public void setCfpContractSid(String cfpContractSid) {
        _cfpContractSid = cfpContractSid;
    }

    @Override
    public int getPsContractSid() {
        return _psContractSid;
    }

    @Override
    public void setPsContractSid(int psContractSid) {
        _psContractSid = psContractSid;
    }

    @Override
    public int getPsType() {
        return _psType;
    }

    @Override
    public void setPsType(int psType) {
        _psType = psType;
    }

    @Override
    public int getPsContractAttachedStatus() {
        return _psContractAttachedStatus;
    }

    @Override
    public void setPsContractAttachedStatus(int psContractAttachedStatus) {
        _psContractAttachedStatus = psContractAttachedStatus;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public int getPsCategory() {
        return _psCategory;
    }

    @Override
    public void setPsCategory(int psCategory) {
        _psCategory = psCategory;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public int getPsStatus() {
        return _psStatus;
    }

    @Override
    public void setPsStatus(int psStatus) {
        _psStatus = psStatus;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public String getParentPsId() {
        if (_parentPsId == null) {
            return StringPool.BLANK;
        } else {
            return _parentPsId;
        }
    }

    @Override
    public void setParentPsId(String parentPsId) {
        _parentPsId = parentPsId;
    }

    @Override
    public String getPsDesignation() {
        if (_psDesignation == null) {
            return StringPool.BLANK;
        } else {
            return _psDesignation;
        }
    }

    @Override
    public void setPsDesignation(String psDesignation) {
        _psDesignation = psDesignation;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public int getContractMasterSid() {
        return _contractMasterSid;
    }

    @Override
    public void setContractMasterSid(int contractMasterSid) {
        _contractMasterSid = contractMasterSid;
    }

    @Override
    public int getPsModelSid() {
        return _psModelSid;
    }

    @Override
    public void setPsModelSid(int psModelSid) {
        _psModelSid = psModelSid;
    }

    @Override
    public Date getPsContractAttachedDate() {
        return _psContractAttachedDate;
    }

    @Override
    public void setPsContractAttachedDate(Date psContractAttachedDate) {
        _psContractAttachedDate = psContractAttachedDate;
    }

    @Override
    public Date getPsEndDate() {
        return _psEndDate;
    }

    @Override
    public void setPsEndDate(Date psEndDate) {
        _psEndDate = psEndDate;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public String getParentPsName() {
        if (_parentPsName == null) {
            return StringPool.BLANK;
        } else {
            return _parentPsName;
        }
    }

    @Override
    public void setParentPsName(String parentPsName) {
        _parentPsName = parentPsName;
    }

    @Override
    public Date getPsStartDate() {
        return _psStartDate;
    }

    @Override
    public void setPsStartDate(Date psStartDate) {
        _psStartDate = psStartDate;
    }

    @Override
    public String getIfpContractSid() {
        return _ifpContractSid;
    }

    @Override
    public void setIfpContractSid(String ifpContractSid) {
        _ifpContractSid = ifpContractSid;
    }

    @Override
    public int getPsTradeClass() {
        return _psTradeClass;
    }

    @Override
    public void setPsTradeClass(int psTradeClass) {
        _psTradeClass = psTradeClass;
    }

    @Override
    public PsContract toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (PsContract) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        PsContractImpl psContractImpl = new PsContractImpl();

        psContractImpl.setPsName(getPsName());
        psContractImpl.setCfpContractSid(getCfpContractSid());
        psContractImpl.setPsContractSid(getPsContractSid());
        psContractImpl.setPsType(getPsType());
        psContractImpl.setPsContractAttachedStatus(getPsContractAttachedStatus());
        psContractImpl.setModifiedDate(getModifiedDate());
        psContractImpl.setPsCategory(getPsCategory());
        psContractImpl.setRecordLockStatus(getRecordLockStatus());
        psContractImpl.setPsStatus(getPsStatus());
        psContractImpl.setCreatedDate(getCreatedDate());
        psContractImpl.setCreatedBy(getCreatedBy());
        psContractImpl.setSource(getSource());
        psContractImpl.setParentPsId(getParentPsId());
        psContractImpl.setPsDesignation(getPsDesignation());
        psContractImpl.setBatchId(getBatchId());
        psContractImpl.setContractMasterSid(getContractMasterSid());
        psContractImpl.setPsModelSid(getPsModelSid());
        psContractImpl.setPsContractAttachedDate(getPsContractAttachedDate());
        psContractImpl.setPsEndDate(getPsEndDate());
        psContractImpl.setModifiedBy(getModifiedBy());
        psContractImpl.setInboundStatus(getInboundStatus());
        psContractImpl.setParentPsName(getParentPsName());
        psContractImpl.setPsStartDate(getPsStartDate());
        psContractImpl.setIfpContractSid(getIfpContractSid());
        psContractImpl.setPsTradeClass(getPsTradeClass());

        psContractImpl.resetOriginalValues();

        return psContractImpl;
    }

    @Override
    public int compareTo(PsContract psContract) {
        int primaryKey = psContract.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof PsContract)) {
            return false;
        }

        PsContract psContract = (PsContract) obj;

        int primaryKey = psContract.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<PsContract> toCacheModel() {
        PsContractCacheModel psContractCacheModel = new PsContractCacheModel();

        psContractCacheModel.psName = getPsName();

        String psName = psContractCacheModel.psName;

        if ((psName != null) && (psName.length() == 0)) {
            psContractCacheModel.psName = null;
        }

        psContractCacheModel.cfpContractSid = getCfpContractSid();

        String cfpContractSid = psContractCacheModel.cfpContractSid;

        if ((cfpContractSid != null) && (cfpContractSid.length() == 0)) {
            psContractCacheModel.cfpContractSid = null;
        }

        psContractCacheModel.psContractSid = getPsContractSid();

        psContractCacheModel.psType = getPsType();

        psContractCacheModel.psContractAttachedStatus = getPsContractAttachedStatus();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            psContractCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            psContractCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        psContractCacheModel.psCategory = getPsCategory();

        psContractCacheModel.recordLockStatus = getRecordLockStatus();

        psContractCacheModel.psStatus = getPsStatus();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            psContractCacheModel.createdDate = createdDate.getTime();
        } else {
            psContractCacheModel.createdDate = Long.MIN_VALUE;
        }

        psContractCacheModel.createdBy = getCreatedBy();

        psContractCacheModel.source = getSource();

        String source = psContractCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            psContractCacheModel.source = null;
        }

        psContractCacheModel.parentPsId = getParentPsId();

        String parentPsId = psContractCacheModel.parentPsId;

        if ((parentPsId != null) && (parentPsId.length() == 0)) {
            psContractCacheModel.parentPsId = null;
        }

        psContractCacheModel.psDesignation = getPsDesignation();

        String psDesignation = psContractCacheModel.psDesignation;

        if ((psDesignation != null) && (psDesignation.length() == 0)) {
            psContractCacheModel.psDesignation = null;
        }

        psContractCacheModel.batchId = getBatchId();

        String batchId = psContractCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            psContractCacheModel.batchId = null;
        }

        psContractCacheModel.contractMasterSid = getContractMasterSid();

        psContractCacheModel.psModelSid = getPsModelSid();

        Date psContractAttachedDate = getPsContractAttachedDate();

        if (psContractAttachedDate != null) {
            psContractCacheModel.psContractAttachedDate = psContractAttachedDate.getTime();
        } else {
            psContractCacheModel.psContractAttachedDate = Long.MIN_VALUE;
        }

        Date psEndDate = getPsEndDate();

        if (psEndDate != null) {
            psContractCacheModel.psEndDate = psEndDate.getTime();
        } else {
            psContractCacheModel.psEndDate = Long.MIN_VALUE;
        }

        psContractCacheModel.modifiedBy = getModifiedBy();

        psContractCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = psContractCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            psContractCacheModel.inboundStatus = null;
        }

        psContractCacheModel.parentPsName = getParentPsName();

        String parentPsName = psContractCacheModel.parentPsName;

        if ((parentPsName != null) && (parentPsName.length() == 0)) {
            psContractCacheModel.parentPsName = null;
        }

        Date psStartDate = getPsStartDate();

        if (psStartDate != null) {
            psContractCacheModel.psStartDate = psStartDate.getTime();
        } else {
            psContractCacheModel.psStartDate = Long.MIN_VALUE;
        }

        psContractCacheModel.ifpContractSid = getIfpContractSid();

        String ifpContractSid = psContractCacheModel.ifpContractSid;

        if ((ifpContractSid != null) && (ifpContractSid.length() == 0)) {
            psContractCacheModel.ifpContractSid = null;
        }

        psContractCacheModel.psTradeClass = getPsTradeClass();

        return psContractCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(51);

        sb.append("{psName=");
        sb.append(getPsName());
        sb.append(", cfpContractSid=");
        sb.append(getCfpContractSid());
        sb.append(", psContractSid=");
        sb.append(getPsContractSid());
        sb.append(", psType=");
        sb.append(getPsType());
        sb.append(", psContractAttachedStatus=");
        sb.append(getPsContractAttachedStatus());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", psCategory=");
        sb.append(getPsCategory());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", psStatus=");
        sb.append(getPsStatus());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", parentPsId=");
        sb.append(getParentPsId());
        sb.append(", psDesignation=");
        sb.append(getPsDesignation());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", contractMasterSid=");
        sb.append(getContractMasterSid());
        sb.append(", psModelSid=");
        sb.append(getPsModelSid());
        sb.append(", psContractAttachedDate=");
        sb.append(getPsContractAttachedDate());
        sb.append(", psEndDate=");
        sb.append(getPsEndDate());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", parentPsName=");
        sb.append(getParentPsName());
        sb.append(", psStartDate=");
        sb.append(getPsStartDate());
        sb.append(", ifpContractSid=");
        sb.append(getIfpContractSid());
        sb.append(", psTradeClass=");
        sb.append(getPsTradeClass());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(79);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.PsContract");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>psName</column-name><column-value><![CDATA[");
        sb.append(getPsName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cfpContractSid</column-name><column-value><![CDATA[");
        sb.append(getCfpContractSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psContractSid</column-name><column-value><![CDATA[");
        sb.append(getPsContractSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psType</column-name><column-value><![CDATA[");
        sb.append(getPsType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psContractAttachedStatus</column-name><column-value><![CDATA[");
        sb.append(getPsContractAttachedStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psCategory</column-name><column-value><![CDATA[");
        sb.append(getPsCategory());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psStatus</column-name><column-value><![CDATA[");
        sb.append(getPsStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentPsId</column-name><column-value><![CDATA[");
        sb.append(getParentPsId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psDesignation</column-name><column-value><![CDATA[");
        sb.append(getPsDesignation());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
        sb.append(getContractMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psModelSid</column-name><column-value><![CDATA[");
        sb.append(getPsModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psContractAttachedDate</column-name><column-value><![CDATA[");
        sb.append(getPsContractAttachedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psEndDate</column-name><column-value><![CDATA[");
        sb.append(getPsEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentPsName</column-name><column-value><![CDATA[");
        sb.append(getParentPsName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psStartDate</column-name><column-value><![CDATA[");
        sb.append(getPsStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ifpContractSid</column-name><column-value><![CDATA[");
        sb.append(getIfpContractSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>psTradeClass</column-name><column-value><![CDATA[");
        sb.append(getPsTradeClass());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
