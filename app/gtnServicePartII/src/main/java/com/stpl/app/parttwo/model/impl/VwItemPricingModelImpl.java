package com.stpl.app.parttwo.model.impl;

import com.stpl.app.parttwo.model.VwItemPricing;
import com.stpl.app.parttwo.model.VwItemPricingModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the VwItemPricing service. Represents a row in the &quot;VW_ITEM_PRICING&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.parttwo.model.VwItemPricingModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link VwItemPricingImpl}.
 * </p>
 *
 * @author
 * @see VwItemPricingImpl
 * @see com.stpl.app.parttwo.model.VwItemPricing
 * @see com.stpl.app.parttwo.model.VwItemPricingModel
 * @generated
 */
public class VwItemPricingModelImpl extends BaseModelImpl<VwItemPricing>
    implements VwItemPricingModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a vw item pricing model instance should use the {@link com.stpl.app.parttwo.model.VwItemPricing} interface instead.
     */
    public static final String TABLE_NAME = "VW_ITEM_PRICING";
    public static final Object[][] TABLE_COLUMNS = {
            { "PRICING_CODE_QUALIFIER", Types.VARCHAR },
            { "ITEM_PRICE", Types.VARCHAR },
            { "END_DATE", Types.TIMESTAMP },
            { "ITEM_ID", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "ENTITY_CODE", Types.VARCHAR },
            { "START_DATE", Types.TIMESTAMP },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.VARCHAR },
            { "SOURCE", Types.VARCHAR },
            { "BATCH_ID", Types.VARCHAR },
            { "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
            { "ITEM_NAME", Types.VARCHAR },
            { "ITEM_UOM", Types.VARCHAR },
            { "MODIFIED_BY", Types.VARCHAR },
            { "ITEM_NO", Types.VARCHAR },
            { "ITEM_PRICING_SID", Types.INTEGER },
            { "PRICING_CODE_STATUS", Types.VARCHAR },
            { "PRICING_CODE_QUALIFIER_NAME", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table VW_ITEM_PRICING (PRICING_CODE_QUALIFIER VARCHAR(75) null,ITEM_PRICE VARCHAR(75) null,END_DATE DATE null,ITEM_ID VARCHAR(75) null,MODIFIED_DATE DATE null,ENTITY_CODE VARCHAR(75) null,START_DATE DATE null,CREATED_DATE DATE null,CREATED_BY VARCHAR(75) null,SOURCE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,ITEM_NAME VARCHAR(75) null,ITEM_UOM VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,ITEM_NO VARCHAR(75) null,ITEM_PRICING_SID INTEGER not null primary key,PRICING_CODE_STATUS VARCHAR(75) null,PRICING_CODE_QUALIFIER_NAME VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table VW_ITEM_PRICING";
    public static final String ORDER_BY_JPQL = " ORDER BY vwItemPricing.itemPricingSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY VW_ITEM_PRICING.ITEM_PRICING_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.parttwo.model.VwItemPricing"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.parttwo.model.VwItemPricing"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.parttwo.model.VwItemPricing"));
    private static ClassLoader _classLoader = VwItemPricing.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            VwItemPricing.class
        };
    private String _pricingCodeQualifier;
    private String _itemPrice;
    private Date _endDate;
    private String _itemId;
    private Date _modifiedDate;
    private String _entityCode;
    private Date _startDate;
    private Date _createdDate;
    private String _createdBy;
    private String _source;
    private String _batchId;
    private String _addChgDelIndicator;
    private String _itemName;
    private String _itemUom;
    private String _modifiedBy;
    private String _itemNo;
    private int _itemPricingSid;
    private String _pricingCodeStatus;
    private String _pricingCodeQualifierName;
    private VwItemPricing _escapedModel;

    public VwItemPricingModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _itemPricingSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setItemPricingSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _itemPricingSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return VwItemPricing.class;
    }

    @Override
    public String getModelClassName() {
        return VwItemPricing.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("pricingCodeQualifier", getPricingCodeQualifier());
        attributes.put("itemPrice", getItemPrice());
        attributes.put("endDate", getEndDate());
        attributes.put("itemId", getItemId());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("entityCode", getEntityCode());
        attributes.put("startDate", getStartDate());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("source", getSource());
        attributes.put("batchId", getBatchId());
        attributes.put("addChgDelIndicator", getAddChgDelIndicator());
        attributes.put("itemName", getItemName());
        attributes.put("itemUom", getItemUom());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("itemNo", getItemNo());
        attributes.put("itemPricingSid", getItemPricingSid());
        attributes.put("pricingCodeStatus", getPricingCodeStatus());
        attributes.put("pricingCodeQualifierName", getPricingCodeQualifierName());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String pricingCodeQualifier = (String) attributes.get(
                "pricingCodeQualifier");

        if (pricingCodeQualifier != null) {
            setPricingCodeQualifier(pricingCodeQualifier);
        }

        String itemPrice = (String) attributes.get("itemPrice");

        if (itemPrice != null) {
            setItemPrice(itemPrice);
        }

        Date endDate = (Date) attributes.get("endDate");

        if (endDate != null) {
            setEndDate(endDate);
        }

        String itemId = (String) attributes.get("itemId");

        if (itemId != null) {
            setItemId(itemId);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String entityCode = (String) attributes.get("entityCode");

        if (entityCode != null) {
            setEntityCode(entityCode);
        }

        Date startDate = (Date) attributes.get("startDate");

        if (startDate != null) {
            setStartDate(startDate);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        String createdBy = (String) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        String addChgDelIndicator = (String) attributes.get(
                "addChgDelIndicator");

        if (addChgDelIndicator != null) {
            setAddChgDelIndicator(addChgDelIndicator);
        }

        String itemName = (String) attributes.get("itemName");

        if (itemName != null) {
            setItemName(itemName);
        }

        String itemUom = (String) attributes.get("itemUom");

        if (itemUom != null) {
            setItemUom(itemUom);
        }

        String modifiedBy = (String) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String itemNo = (String) attributes.get("itemNo");

        if (itemNo != null) {
            setItemNo(itemNo);
        }

        Integer itemPricingSid = (Integer) attributes.get("itemPricingSid");

        if (itemPricingSid != null) {
            setItemPricingSid(itemPricingSid);
        }

        String pricingCodeStatus = (String) attributes.get("pricingCodeStatus");

        if (pricingCodeStatus != null) {
            setPricingCodeStatus(pricingCodeStatus);
        }

        String pricingCodeQualifierName = (String) attributes.get(
                "pricingCodeQualifierName");

        if (pricingCodeQualifierName != null) {
            setPricingCodeQualifierName(pricingCodeQualifierName);
        }
    }

    @Override
    public String getPricingCodeQualifier() {
        if (_pricingCodeQualifier == null) {
            return StringPool.BLANK;
        } else {
            return _pricingCodeQualifier;
        }
    }

    @Override
    public void setPricingCodeQualifier(String pricingCodeQualifier) {
        _pricingCodeQualifier = pricingCodeQualifier;
    }

    @Override
    public String getItemPrice() {
        if (_itemPrice == null) {
            return StringPool.BLANK;
        } else {
            return _itemPrice;
        }
    }

    @Override
    public void setItemPrice(String itemPrice) {
        _itemPrice = itemPrice;
    }

    @Override
    public Date getEndDate() {
        return _endDate;
    }

    @Override
    public void setEndDate(Date endDate) {
        _endDate = endDate;
    }

    @Override
    public String getItemId() {
        if (_itemId == null) {
            return StringPool.BLANK;
        } else {
            return _itemId;
        }
    }

    @Override
    public void setItemId(String itemId) {
        _itemId = itemId;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getEntityCode() {
        if (_entityCode == null) {
            return StringPool.BLANK;
        } else {
            return _entityCode;
        }
    }

    @Override
    public void setEntityCode(String entityCode) {
        _entityCode = entityCode;
    }

    @Override
    public Date getStartDate() {
        return _startDate;
    }

    @Override
    public void setStartDate(Date startDate) {
        _startDate = startDate;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public String getCreatedBy() {
        if (_createdBy == null) {
            return StringPool.BLANK;
        } else {
            return _createdBy;
        }
    }

    @Override
    public void setCreatedBy(String createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public String getAddChgDelIndicator() {
        if (_addChgDelIndicator == null) {
            return StringPool.BLANK;
        } else {
            return _addChgDelIndicator;
        }
    }

    @Override
    public void setAddChgDelIndicator(String addChgDelIndicator) {
        _addChgDelIndicator = addChgDelIndicator;
    }

    @Override
    public String getItemName() {
        if (_itemName == null) {
            return StringPool.BLANK;
        } else {
            return _itemName;
        }
    }

    @Override
    public void setItemName(String itemName) {
        _itemName = itemName;
    }

    @Override
    public String getItemUom() {
        if (_itemUom == null) {
            return StringPool.BLANK;
        } else {
            return _itemUom;
        }
    }

    @Override
    public void setItemUom(String itemUom) {
        _itemUom = itemUom;
    }

    @Override
    public String getModifiedBy() {
        if (_modifiedBy == null) {
            return StringPool.BLANK;
        } else {
            return _modifiedBy;
        }
    }

    @Override
    public void setModifiedBy(String modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getItemNo() {
        if (_itemNo == null) {
            return StringPool.BLANK;
        } else {
            return _itemNo;
        }
    }

    @Override
    public void setItemNo(String itemNo) {
        _itemNo = itemNo;
    }

    @Override
    public int getItemPricingSid() {
        return _itemPricingSid;
    }

    @Override
    public void setItemPricingSid(int itemPricingSid) {
        _itemPricingSid = itemPricingSid;
    }

    @Override
    public String getPricingCodeStatus() {
        if (_pricingCodeStatus == null) {
            return StringPool.BLANK;
        } else {
            return _pricingCodeStatus;
        }
    }

    @Override
    public void setPricingCodeStatus(String pricingCodeStatus) {
        _pricingCodeStatus = pricingCodeStatus;
    }

    @Override
    public String getPricingCodeQualifierName() {
        if (_pricingCodeQualifierName == null) {
            return StringPool.BLANK;
        } else {
            return _pricingCodeQualifierName;
        }
    }

    @Override
    public void setPricingCodeQualifierName(String pricingCodeQualifierName) {
        _pricingCodeQualifierName = pricingCodeQualifierName;
    }

    @Override
    public VwItemPricing toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (VwItemPricing) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        VwItemPricingImpl vwItemPricingImpl = new VwItemPricingImpl();

        vwItemPricingImpl.setPricingCodeQualifier(getPricingCodeQualifier());
        vwItemPricingImpl.setItemPrice(getItemPrice());
        vwItemPricingImpl.setEndDate(getEndDate());
        vwItemPricingImpl.setItemId(getItemId());
        vwItemPricingImpl.setModifiedDate(getModifiedDate());
        vwItemPricingImpl.setEntityCode(getEntityCode());
        vwItemPricingImpl.setStartDate(getStartDate());
        vwItemPricingImpl.setCreatedDate(getCreatedDate());
        vwItemPricingImpl.setCreatedBy(getCreatedBy());
        vwItemPricingImpl.setSource(getSource());
        vwItemPricingImpl.setBatchId(getBatchId());
        vwItemPricingImpl.setAddChgDelIndicator(getAddChgDelIndicator());
        vwItemPricingImpl.setItemName(getItemName());
        vwItemPricingImpl.setItemUom(getItemUom());
        vwItemPricingImpl.setModifiedBy(getModifiedBy());
        vwItemPricingImpl.setItemNo(getItemNo());
        vwItemPricingImpl.setItemPricingSid(getItemPricingSid());
        vwItemPricingImpl.setPricingCodeStatus(getPricingCodeStatus());
        vwItemPricingImpl.setPricingCodeQualifierName(getPricingCodeQualifierName());

        vwItemPricingImpl.resetOriginalValues();

        return vwItemPricingImpl;
    }

    @Override
    public int compareTo(VwItemPricing vwItemPricing) {
        int primaryKey = vwItemPricing.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof VwItemPricing)) {
            return false;
        }

        VwItemPricing vwItemPricing = (VwItemPricing) obj;

        int primaryKey = vwItemPricing.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<VwItemPricing> toCacheModel() {
        VwItemPricingCacheModel vwItemPricingCacheModel = new VwItemPricingCacheModel();

        vwItemPricingCacheModel.pricingCodeQualifier = getPricingCodeQualifier();

        String pricingCodeQualifier = vwItemPricingCacheModel.pricingCodeQualifier;

        if ((pricingCodeQualifier != null) &&
                (pricingCodeQualifier.length() == 0)) {
            vwItemPricingCacheModel.pricingCodeQualifier = null;
        }

        vwItemPricingCacheModel.itemPrice = getItemPrice();

        String itemPrice = vwItemPricingCacheModel.itemPrice;

        if ((itemPrice != null) && (itemPrice.length() == 0)) {
            vwItemPricingCacheModel.itemPrice = null;
        }

        Date endDate = getEndDate();

        if (endDate != null) {
            vwItemPricingCacheModel.endDate = endDate.getTime();
        } else {
            vwItemPricingCacheModel.endDate = Long.MIN_VALUE;
        }

        vwItemPricingCacheModel.itemId = getItemId();

        String itemId = vwItemPricingCacheModel.itemId;

        if ((itemId != null) && (itemId.length() == 0)) {
            vwItemPricingCacheModel.itemId = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            vwItemPricingCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            vwItemPricingCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        vwItemPricingCacheModel.entityCode = getEntityCode();

        String entityCode = vwItemPricingCacheModel.entityCode;

        if ((entityCode != null) && (entityCode.length() == 0)) {
            vwItemPricingCacheModel.entityCode = null;
        }

        Date startDate = getStartDate();

        if (startDate != null) {
            vwItemPricingCacheModel.startDate = startDate.getTime();
        } else {
            vwItemPricingCacheModel.startDate = Long.MIN_VALUE;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            vwItemPricingCacheModel.createdDate = createdDate.getTime();
        } else {
            vwItemPricingCacheModel.createdDate = Long.MIN_VALUE;
        }

        vwItemPricingCacheModel.createdBy = getCreatedBy();

        String createdBy = vwItemPricingCacheModel.createdBy;

        if ((createdBy != null) && (createdBy.length() == 0)) {
            vwItemPricingCacheModel.createdBy = null;
        }

        vwItemPricingCacheModel.source = getSource();

        String source = vwItemPricingCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            vwItemPricingCacheModel.source = null;
        }

        vwItemPricingCacheModel.batchId = getBatchId();

        String batchId = vwItemPricingCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            vwItemPricingCacheModel.batchId = null;
        }

        vwItemPricingCacheModel.addChgDelIndicator = getAddChgDelIndicator();

        String addChgDelIndicator = vwItemPricingCacheModel.addChgDelIndicator;

        if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
            vwItemPricingCacheModel.addChgDelIndicator = null;
        }

        vwItemPricingCacheModel.itemName = getItemName();

        String itemName = vwItemPricingCacheModel.itemName;

        if ((itemName != null) && (itemName.length() == 0)) {
            vwItemPricingCacheModel.itemName = null;
        }

        vwItemPricingCacheModel.itemUom = getItemUom();

        String itemUom = vwItemPricingCacheModel.itemUom;

        if ((itemUom != null) && (itemUom.length() == 0)) {
            vwItemPricingCacheModel.itemUom = null;
        }

        vwItemPricingCacheModel.modifiedBy = getModifiedBy();

        String modifiedBy = vwItemPricingCacheModel.modifiedBy;

        if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
            vwItemPricingCacheModel.modifiedBy = null;
        }

        vwItemPricingCacheModel.itemNo = getItemNo();

        String itemNo = vwItemPricingCacheModel.itemNo;

        if ((itemNo != null) && (itemNo.length() == 0)) {
            vwItemPricingCacheModel.itemNo = null;
        }

        vwItemPricingCacheModel.itemPricingSid = getItemPricingSid();

        vwItemPricingCacheModel.pricingCodeStatus = getPricingCodeStatus();

        String pricingCodeStatus = vwItemPricingCacheModel.pricingCodeStatus;

        if ((pricingCodeStatus != null) && (pricingCodeStatus.length() == 0)) {
            vwItemPricingCacheModel.pricingCodeStatus = null;
        }

        vwItemPricingCacheModel.pricingCodeQualifierName = getPricingCodeQualifierName();

        String pricingCodeQualifierName = vwItemPricingCacheModel.pricingCodeQualifierName;

        if ((pricingCodeQualifierName != null) &&
                (pricingCodeQualifierName.length() == 0)) {
            vwItemPricingCacheModel.pricingCodeQualifierName = null;
        }

        return vwItemPricingCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(39);

        sb.append("{pricingCodeQualifier=");
        sb.append(getPricingCodeQualifier());
        sb.append(", itemPrice=");
        sb.append(getItemPrice());
        sb.append(", endDate=");
        sb.append(getEndDate());
        sb.append(", itemId=");
        sb.append(getItemId());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", entityCode=");
        sb.append(getEntityCode());
        sb.append(", startDate=");
        sb.append(getStartDate());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", addChgDelIndicator=");
        sb.append(getAddChgDelIndicator());
        sb.append(", itemName=");
        sb.append(getItemName());
        sb.append(", itemUom=");
        sb.append(getItemUom());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", itemNo=");
        sb.append(getItemNo());
        sb.append(", itemPricingSid=");
        sb.append(getItemPricingSid());
        sb.append(", pricingCodeStatus=");
        sb.append(getPricingCodeStatus());
        sb.append(", pricingCodeQualifierName=");
        sb.append(getPricingCodeQualifierName());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(61);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.parttwo.model.VwItemPricing");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>pricingCodeQualifier</column-name><column-value><![CDATA[");
        sb.append(getPricingCodeQualifier());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemPrice</column-name><column-value><![CDATA[");
        sb.append(getItemPrice());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>endDate</column-name><column-value><![CDATA[");
        sb.append(getEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemId</column-name><column-value><![CDATA[");
        sb.append(getItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>entityCode</column-name><column-value><![CDATA[");
        sb.append(getEntityCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>startDate</column-name><column-value><![CDATA[");
        sb.append(getStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
        sb.append(getAddChgDelIndicator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemName</column-name><column-value><![CDATA[");
        sb.append(getItemName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemUom</column-name><column-value><![CDATA[");
        sb.append(getItemUom());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemNo</column-name><column-value><![CDATA[");
        sb.append(getItemNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemPricingSid</column-name><column-value><![CDATA[");
        sb.append(getItemPricingSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>pricingCodeStatus</column-name><column-value><![CDATA[");
        sb.append(getPricingCodeStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>pricingCodeQualifierName</column-name><column-value><![CDATA[");
        sb.append(getPricingCodeQualifierName());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
