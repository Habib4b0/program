<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE properties SYSTEM "http://java.sun.com/dtd/properties.dtd">

<properties>

	<entry key="privatePublic">
		<![CDATA[
		          SELECT FV.VIEW_ID,FV.VIEW_NAME,FV.VIEW_TYPE,FV.CREATED_BY,FV.CREATED_DATE,FV.MODIFIED_BY,FV.MODIFIED_DATE,FV.VIEW_DATA FROM FORECASTING_VIEWS FV
		          WHERE  FV.VIEW_TYPE LIKE ?  AND FV.VIEW_NAME LIKE ? 
                       
		]]>
	</entry>
	<entry key="BusinessUnitGLcomp">
       
    		<![CDATA[
			    select
					cm.company_master_sid,
					cm.company_no + ' - ' + cm.company_name as company_name
				from
					company_master cm join helper_table ht on
					ht.helper_table_sid = cm.company_type
				where
					ht.list_name like 'COMPANY_TYPE'
					and ht.description like 'BUSINESS UNIT'
					and cm.inbound_status <> 'D'
				order by
					company_no
		]]>

	</entry>
	<entry key="CompanyMasterGLcomp">
      
            <![CDATA[
				select
					cm.company_master_sid,
					cm.company_no + ' - ' + cm.company_name as company_name
				from
					company_master cm join helper_table ht on
					ht.helper_table_sid = cm.company_type
				where
					ht.list_name like 'COMPANY_TYPE'
					and ht.description like 'GLCOMP'
					and cm.inbound_status <> 'D'
				order by
					company_no
            ]]>

	</entry>
	<entry key="dataSelectionDeduction">

            <![CDATA[            
                  SELECT
	distinct LEVEL_NO,
	LEVEL_NAME
        FROM
	HIERARCHY_DEFINITION HD
	JOIN dbo.HIERARCHY_LEVEL_DEFINITION HLD
        ON HLD.HIERARCHY_DEFINITION_SID = HD.HIERARCHY_DEFINITION_SID
        WHERE HD.HIERARCHY_NAME='DeductionHierarchy'
            ]]>

	</entry>
	<entry key="frequency">

            <![CDATA[            
                 SELECT HELPER_TABLE_SID,DESCRIPTION from HELPER_TABLE where LIST_NAME LIKE 'FORECAST_FREQUENCY' AND DESCRIPTION NOT LIKE '%LY%' ORDER BY HELPER_TABLE_SID
            ]]>

	</entry>
	<entry key="saveview">

            <![CDATA[            
                 INSERT
			INTO
				FORECASTING_VIEWS(
					VIEW_NAME,
					VIEW_TYPE,
					CREATED_BY,
					CREATED_DATE,
					MODIFIED_BY,
					MODIFIED_DATE,
					VIEW_DATA
					
				)
			VALUES(
				?,
				?,
				?,
				getDate(),
				?,
				getDate(),
				?
				
			)
            ]]>

	</entry>
	<entry key="projectionSearch">

            <![CDATA[            
                   SELECT
	PM.PROJECTION_NAME projectionName,
	PM.PROJECTION_DESCRIPTION description,
	HDC.HIERARCHY_NAME customerHierarchy,
	PM.CUSTOMER_HIERARCHY_LEVEL customerHierarchyLevel,
	HDP.HIERARCHY_NAME productHierarchy,
	PM.PRODUCT_HIERARCHY_LEVEL productHierarchyLevel,
	PM.CREATED_BY createdBy,
	FORMAT(
		CONVERT(
			date,
			PM.CREATED_DATE
		),
		'dd/MM/yyyy'
	) createdDate,
	FORMAT(
		CONVERT(
			date,
			PM.MODIFIED_DATE
		),
		'dd/MM/yyyy'
	) modifiedDate,
	CM.COMPANY_NAME company,
	CM1.COMPANY_NAME AS BUSINESSUNITNAME,
	PM.CUSTOM_VIEW_MASTER_SID viewSid,
	PM.PROJECTION_MASTER_SID projectionId,
	HDC.HIERARCHY_DEFINITION_SID customerHierSid,
	HDP.HIERARCHY_DEFINITION_SID prodHierSid,
	PM.COMPANY_MASTER_SID companySid,
	PM.COMPANY_GROUP_SID customerGrpSid,
	CG.COMPANY_GROUP_NAME customerGroup,
	PM.ITEM_GROUP_SID prodGrpSid,
	IG.ITEM_GROUP_NAME productGroup,
	PM.CUSTOMER_HIERARCHY_INNER_LEVEL customerHierarchyInnerLevel,
	PM.PRODUCT_HIERARCHY_INNER_LEVEL productHierarchyInnerLevel,
	PM.CUST_RELATIONSHIP_BUILDER_SID custRelationshipBuilderSid,
	PM.PROD_RELATIONSHIP_BUILDER_SID prodRelationshipBuilderSid,
	PM.DISCOUNT_TYPE discountType,
	PM.BUSINESS_UNIT AS BUSINESSUNIT,
	FORMAT(
		CONVERT(
			date,
			PM.from_Date
		),
		'dd-MM-yyyy'
	)
	 FromDate,
	 FORMAT(
		CONVERT(
			date,
			PM.TO_DATE
		),
		'dd-MM-yyyy'
	)
	 ToPeriod,
	PROJECTION_CUST_VERSION,
	PROJECTION_PROD_VERSION,
	PM.CUSTOMER_HIER_VERSION_NO,
	PM.PRODUCT_HIER_VERSION_NO,
	FORMAT(
		CONVERT(
			date,
			PM.FORECAST_ELIGIBLE_DATE
		),
		'dd-MM-yyyy'
	)FORECAST_ELIGIBLE_DATE1,
	PROJECTION_DED_VERSION
FROM
	PROJECTION_MASTER PM
JOIN HIERARCHY_DEFINITION HDC ON
	HDC.HIERARCHY_DEFINITION_SID = PM.CUSTOMER_HIERARCHY_SID
JOIN HIERARCHY_DEFINITION HDP ON
	HDP.HIERARCHY_DEFINITION_SID = PM.PRODUCT_HIERARCHY_SID
JOIN COMPANY_MASTER CM on
	PM.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
JOIN COMPANY_MASTER CM1 on
	PM.BUSINESS_UNIT = CM1.COMPANY_MASTER_SID
LEFT JOIN COMPANY_GROUP CG ON
	CG.COMPANY_GROUP_SID = PM.COMPANY_GROUP_SID
LEFT JOIN ITEM_GROUP IG ON
	IG.ITEM_GROUP_SID = PM.ITEM_GROUP_SID
where
	ISNULL(
		PM.IS_APPROVED,
		''
	) NOT IN(
		'Y',
		'A',
		'C'
	)
	AND PM.SAVE_FLAG = 'true'
	AND PM.FORECASTING_TYPE LIKE 'Non Mandated'
     ]]>

	</entry>

	<entry key="projectionSearchCount">

            <![CDATA[            
                     SELECT COUNT(DISTINCT PM.PROJECTION_MASTER_SID) projectionId
                    
                    From PROJECTION_MASTER PM
                  
                    JOIN HIERARCHY_DEFINITION HDP
                    ON HDP.HIERARCHY_DEFINITION_SID = PM.PRODUCT_HIERARCHY_SID 

                    LEFT JOIN COMPANY_GROUP CG
                    ON CG.COMPANY_GROUP_SID  = PM.COMPANY_GROUP_SID 

                    LEFT JOIN ITEM_GROUP IG 
                    ON IG.ITEM_GROUP_SID = PM.ITEM_GROUP_SID 
                                        JOIN COMPANY_MASTER CM 
                    on PM.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID 
                        
                    JOIN COMPANY_MASTER CM1
                     on PM.BUSINESS_UNIT = CM1.COMPANY_MASTER_SID 
                     where PM.projection_Name like ? and PM.projection_description like ?
            ]]>

	</entry>

	<entry key="CustomerGroup">
			<![CDATA[
					  
         ; WITH CTE_MAIN AS(
	SELECT
		IG.COMPANY_GROUP_SID,
		IG.COMPANY_GROUP_NO,
		IG.COMPANY_GROUP_NAME,
		CM.COMPANY_NAME,
		IG.VERSION_NO,
		IG.COMPANY_GROUP_DESCRIPTION,
		IGD.COMPANY_MASTER_SID
	FROM
		COMPANY_GROUP IG
	INNER JOIN COMPANY_GROUP_DETAILS IGD ON
		IGD.COMPANY_GROUP_SID = IG.COMPANY_GROUP_SID
	INNER JOIN COMPANY_MASTER CM ON
		IGD.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
	WHERE
		IG.COMPANY_GROUP_NO LIKE ?
		AND IG.COMPANY_GROUP_NAME LIKE ?
),
COUNT_CTE AS(
	SELECT
		COMPANY_GROUP_SID,
		CNT
	FROM
		(
			SELECT
				Row_number() OVER(
					PARTITION BY COMPANY_GROUP_SID
				ORDER BY
					COMPANY_GROUP_SID
				) RN,
				Count( COMPANY_MASTER_SID ) OVER(
					PARTITION BY COMPANY_GROUP_SID
				) CNT,
				COMPANY_GROUP_SID,
				COMPANY_MASTER_SID
			FROM
				CTE_MAIN
		) A
	WHERE
		RN = 1
),
ITM_GROUP AS(
	SELECT
		CNT,
		COMPANY_GROUP_SID,
		COMPANY_GROUP_NO,
		COMPANY_GROUP_NAME,
		COMPANY_NAME,
		VERSION_NO,
		COMPANY_GROUP_DESCRIPTION
	FROM
		(
			SELECT
				Row_number() OVER(
					PARTITION BY COMPANY_GROUP_SID
				ORDER BY
					COMPANY_GROUP_SID
				) RN,
				Count( COMPANY_MASTER_SID ) OVER(
					PARTITION BY COMPANY_GROUP_SID
				) CNT,
				COMPANY_GROUP_SID,
				COMPANY_GROUP_NO,
				COMPANY_GROUP_NAME,
				COMPANY_NAME,
				VERSION_NO,
				COMPANY_GROUP_DESCRIPTION
			FROM
				CTE_MAIN
		) A
	WHERE
		RN = 1
) SELECT
	DISTINCT 
	IG.COMPANY_GROUP_NO,
	IG.COMPANY_GROUP_NAME,
	'' as SEGMENT_GROUP,
	'' as SEGMENT,
	IG.COMPANY_GROUP_SID,
	IG.VERSION_NO,
	IG.COMPANY_GROUP_DESCRIPTION
FROM
	ITM_GROUP IG
JOIN COUNT_CTE C ON
	IG.COMPANY_GROUP_SID = C.COMPANY_GROUP_SID
	AND C.CNT = IG.CNT
ORDER BY
	IG.COMPANY_GROUP_SID ASC 
			]]>
	</entry>

	<entry key="ProductGroup">
	<![CDATA[
		   
       
                   ;WITH CTE_MAIN
     AS (SELECT IG.ITEM_GROUP_SID,
                IG.ITEM_GROUP_NO,
                IG.ITEM_GROUP_NAME,
                CM.COMPANY_NAME,
                IG.VERSION_NO,
                IG.ITEM_GROUP_DESCRIPTION,
                IGD.ITEM_MASTER_SID
         FROM   ITEM_GROUP IG,
                COMPANY_MASTER CM,
                ITEM_GROUP_DETAILS IGD
         WHERE  IG.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
                AND IGD.ITEM_GROUP_SID = IG.ITEM_GROUP_SID
                AND IG.ITEM_GROUP_NO LIKE ?
                AND IG.ITEM_GROUP_NAME LIKE ?
                
                ),
     COUNT_CTE
     AS (SELECT ITEM_GROUP_SID,
                CNT
         FROM   (SELECT ROW_NUMBER()
                          OVER (
                            PARTITION BY ITEM_GROUP_SID
                            ORDER BY ITEM_GROUP_SID)     RN,
                        COUNT(ITEM_MASTER_SID)
                          OVER (
                            PARTITION BY ITEM_GROUP_SID) CNT,
                        ITEM_GROUP_SID,
                        ITEM_MASTER_SID
                 FROM   CTE_MAIN
                  )A
         WHERE  RN = 1),
     ITM_GROUP
     AS (SELECT CNT,
                ITEM_GROUP_SID,
                ITEM_GROUP_NO,
                ITEM_GROUP_NAME,
                COMPANY_NAME,
                VERSION_NO,
                ITEM_GROUP_DESCRIPTION
         FROM   (SELECT ROW_NUMBER()
                          OVER (
                            PARTITION BY ITEM_GROUP_SID
                            ORDER BY ITEM_GROUP_SID)     RN,
                        COUNT(ITEM_MASTER_SID)
                          OVER (
                            PARTITION BY ITEM_GROUP_SID) CNT,
                        ITEM_GROUP_SID,
                        ITEM_GROUP_NO,
                        ITEM_GROUP_NAME,
                        COMPANY_NAME,
                        VERSION_NO,
                        ITEM_GROUP_DESCRIPTION
                 FROM   CTE_MAIN)A
         WHERE  RN = 1)
SELECT DISTINCT  IG.ITEM_GROUP_NO, IG.ITEM_GROUP_NAME, COMPANY_NAME,'' as SEGMENT_GROUP,'' as SEGMENT,IG.ITEM_GROUP_SID, IG.VERSION_NO, IG.ITEM_GROUP_DESCRIPTION
FROM   ITM_GROUP IG
       JOIN COUNT_CTE C
         ON IG.ITEM_GROUP_SID = C.ITEM_GROUP_SID
            AND C.CNT = IG.CNT
ORDER BY IG.ITEM_GROUP_SID ASC  
			]]>

	</entry>
	<entry key="salesCustomView">
		<![CDATA[
		select A.CUST_VIEW_MASTER_SID,A.CUST_VIEW_NAME from (SELECT
			DISTINCT CVM.CUST_VIEW_MASTER_SID,
			CVM.CUST_VIEW_NAME,
			CVM.MODIFIED_DATE
		FROM
			CUST_VIEW_MASTER CVM
		JOIN CUSTOM_CCP_DETAILS CVD ON
			CVD.CUST_VIEW_MASTER_SID = CVM.CUST_VIEW_MASTER_SID
		WHERE
			CVM.CUSTOMER_RELATIONSHIP_SID = ?
			AND CVM.PRODUCT_RELATIONSHIP_SID = ?
			AND CVD.CUSTOMER_VERSION = ?
			AND CVD.PRODUCT_VERSION = ?
			AND	CUST_VIEW_TYPE = 'SALES'
		)A
			ORDER BY
			A.MODIFIED_DATE DESC
		]]>
	</entry>
	<entry key="deductionCustomView">
	<![CDATA[
		select A.CUST_VIEW_MASTER_SID,A.CUST_VIEW_NAME from (SELECT
			DISTINCT CVM.CUST_VIEW_MASTER_SID,
			CVM.CUST_VIEW_NAME,
			CVM.MODIFIED_DATE
		FROM
			CUST_VIEW_MASTER CVM
		JOIN CUSTOM_CCP_DETAILS CVD ON
			CVD.CUST_VIEW_MASTER_SID = CVM.CUST_VIEW_MASTER_SID
		WHERE
			CVM.CUSTOMER_RELATIONSHIP_SID = ?
			AND CVM.PRODUCT_RELATIONSHIP_SID = ?
			AND CVD.CUSTOMER_VERSION = ?
			AND CVD.PRODUCT_VERSION = ?
			AND(
				CUST_VIEW_TYPE = 'SALES'
				OR CUST_VIEW_TYPE = 'DISCOUNT'
			)
		)A
			ORDER BY
			A.MODIFIED_DATE DESC
	]]>
	</entry>

</properties>