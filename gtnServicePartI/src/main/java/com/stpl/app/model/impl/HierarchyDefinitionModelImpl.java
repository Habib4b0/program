package com.stpl.app.model.impl;

import com.stpl.app.model.HierarchyDefinition;
import com.stpl.app.model.HierarchyDefinitionModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the HierarchyDefinition service. Represents a row in the &quot;HIERARCHY_DEFINITION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.HierarchyDefinitionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link HierarchyDefinitionImpl}.
 * </p>
 *
 * @author
 * @see HierarchyDefinitionImpl
 * @see com.stpl.app.model.HierarchyDefinition
 * @see com.stpl.app.model.HierarchyDefinitionModel
 * @generated
 */
public class HierarchyDefinitionModelImpl extends BaseModelImpl<HierarchyDefinition>
    implements HierarchyDefinitionModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a hierarchy definition model instance should use the {@link com.stpl.app.model.HierarchyDefinition} interface instead.
     */
    public static final String TABLE_NAME = "HIERARCHY_DEFINITION";
    public static final Object[][] TABLE_COLUMNS = {
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "NO_OF_LEVELS", Types.INTEGER },
            { "HIERARCHY_TYPE", Types.INTEGER },
            { "HIERARCHY_NAME", Types.VARCHAR },
            { "HIERARCHY_DEFINITION_SID", Types.INTEGER },
            { "VERSION_NO", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "HIERARCHY_CATEGORY", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table HIERARCHY_DEFINITION (CREATED_DATE DATE null,CREATED_BY INTEGER,NO_OF_LEVELS INTEGER,HIERARCHY_TYPE INTEGER,HIERARCHY_NAME VARCHAR(75) null,HIERARCHY_DEFINITION_SID INTEGER not null primary key IDENTITY,VERSION_NO INTEGER,MODIFIED_BY INTEGER,MODIFIED_DATE DATE null,HIERARCHY_CATEGORY INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table HIERARCHY_DEFINITION";
    public static final String ORDER_BY_JPQL = " ORDER BY hierarchyDefinition.hierarchyDefinitionSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY HIERARCHY_DEFINITION.HIERARCHY_DEFINITION_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.HierarchyDefinition"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.HierarchyDefinition"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.HierarchyDefinition"));
    private static ClassLoader _classLoader = HierarchyDefinition.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            HierarchyDefinition.class
        };
    private Date _createdDate;
    private int _createdBy;
    private int _noOfLevels;
    private int _hierarchyType;
    private String _hierarchyName;
    private int _hierarchyDefinitionSid;
    private int _versionNo;
    private int _modifiedBy;
    private Date _modifiedDate;
    private int _hierarchyCategory;
    private HierarchyDefinition _escapedModel;

    public HierarchyDefinitionModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _hierarchyDefinitionSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setHierarchyDefinitionSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _hierarchyDefinitionSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return HierarchyDefinition.class;
    }

    @Override
    public String getModelClassName() {
        return HierarchyDefinition.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("noOfLevels", getNoOfLevels());
        attributes.put("hierarchyType", getHierarchyType());
        attributes.put("hierarchyName", getHierarchyName());
        attributes.put("hierarchyDefinitionSid", getHierarchyDefinitionSid());
        attributes.put("versionNo", getVersionNo());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("hierarchyCategory", getHierarchyCategory());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Integer noOfLevels = (Integer) attributes.get("noOfLevels");

        if (noOfLevels != null) {
            setNoOfLevels(noOfLevels);
        }

        Integer hierarchyType = (Integer) attributes.get("hierarchyType");

        if (hierarchyType != null) {
            setHierarchyType(hierarchyType);
        }

        String hierarchyName = (String) attributes.get("hierarchyName");

        if (hierarchyName != null) {
            setHierarchyName(hierarchyName);
        }

        Integer hierarchyDefinitionSid = (Integer) attributes.get(
                "hierarchyDefinitionSid");

        if (hierarchyDefinitionSid != null) {
            setHierarchyDefinitionSid(hierarchyDefinitionSid);
        }

        Integer versionNo = (Integer) attributes.get("versionNo");

        if (versionNo != null) {
            setVersionNo(versionNo);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Integer hierarchyCategory = (Integer) attributes.get(
                "hierarchyCategory");

        if (hierarchyCategory != null) {
            setHierarchyCategory(hierarchyCategory);
        }
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public int getNoOfLevels() {
        return _noOfLevels;
    }

    @Override
    public void setNoOfLevels(int noOfLevels) {
        _noOfLevels = noOfLevels;
    }

    @Override
    public int getHierarchyType() {
        return _hierarchyType;
    }

    @Override
    public void setHierarchyType(int hierarchyType) {
        _hierarchyType = hierarchyType;
    }

    @Override
    public String getHierarchyName() {
        if (_hierarchyName == null) {
            return StringPool.BLANK;
        } else {
            return _hierarchyName;
        }
    }

    @Override
    public void setHierarchyName(String hierarchyName) {
        _hierarchyName = hierarchyName;
    }

    @Override
    public int getHierarchyDefinitionSid() {
        return _hierarchyDefinitionSid;
    }

    @Override
    public void setHierarchyDefinitionSid(int hierarchyDefinitionSid) {
        _hierarchyDefinitionSid = hierarchyDefinitionSid;
    }

    @Override
    public int getVersionNo() {
        return _versionNo;
    }

    @Override
    public void setVersionNo(int versionNo) {
        _versionNo = versionNo;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public int getHierarchyCategory() {
        return _hierarchyCategory;
    }

    @Override
    public void setHierarchyCategory(int hierarchyCategory) {
        _hierarchyCategory = hierarchyCategory;
    }

    @Override
    public HierarchyDefinition toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (HierarchyDefinition) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        HierarchyDefinitionImpl hierarchyDefinitionImpl = new HierarchyDefinitionImpl();

        hierarchyDefinitionImpl.setCreatedDate(getCreatedDate());
        hierarchyDefinitionImpl.setCreatedBy(getCreatedBy());
        hierarchyDefinitionImpl.setNoOfLevels(getNoOfLevels());
        hierarchyDefinitionImpl.setHierarchyType(getHierarchyType());
        hierarchyDefinitionImpl.setHierarchyName(getHierarchyName());
        hierarchyDefinitionImpl.setHierarchyDefinitionSid(getHierarchyDefinitionSid());
        hierarchyDefinitionImpl.setVersionNo(getVersionNo());
        hierarchyDefinitionImpl.setModifiedBy(getModifiedBy());
        hierarchyDefinitionImpl.setModifiedDate(getModifiedDate());
        hierarchyDefinitionImpl.setHierarchyCategory(getHierarchyCategory());

        hierarchyDefinitionImpl.resetOriginalValues();

        return hierarchyDefinitionImpl;
    }

    @Override
    public int compareTo(HierarchyDefinition hierarchyDefinition) {
        int primaryKey = hierarchyDefinition.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof HierarchyDefinition)) {
            return false;
        }

        HierarchyDefinition hierarchyDefinition = (HierarchyDefinition) obj;

        int primaryKey = hierarchyDefinition.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<HierarchyDefinition> toCacheModel() {
        HierarchyDefinitionCacheModel hierarchyDefinitionCacheModel = new HierarchyDefinitionCacheModel();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            hierarchyDefinitionCacheModel.createdDate = createdDate.getTime();
        } else {
            hierarchyDefinitionCacheModel.createdDate = Long.MIN_VALUE;
        }

        hierarchyDefinitionCacheModel.createdBy = getCreatedBy();

        hierarchyDefinitionCacheModel.noOfLevels = getNoOfLevels();

        hierarchyDefinitionCacheModel.hierarchyType = getHierarchyType();

        hierarchyDefinitionCacheModel.hierarchyName = getHierarchyName();

        String hierarchyName = hierarchyDefinitionCacheModel.hierarchyName;

        if ((hierarchyName != null) && (hierarchyName.length() == 0)) {
            hierarchyDefinitionCacheModel.hierarchyName = null;
        }

        hierarchyDefinitionCacheModel.hierarchyDefinitionSid = getHierarchyDefinitionSid();

        hierarchyDefinitionCacheModel.versionNo = getVersionNo();

        hierarchyDefinitionCacheModel.modifiedBy = getModifiedBy();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            hierarchyDefinitionCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            hierarchyDefinitionCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        hierarchyDefinitionCacheModel.hierarchyCategory = getHierarchyCategory();

        return hierarchyDefinitionCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(21);

        sb.append("{createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", noOfLevels=");
        sb.append(getNoOfLevels());
        sb.append(", hierarchyType=");
        sb.append(getHierarchyType());
        sb.append(", hierarchyName=");
        sb.append(getHierarchyName());
        sb.append(", hierarchyDefinitionSid=");
        sb.append(getHierarchyDefinitionSid());
        sb.append(", versionNo=");
        sb.append(getVersionNo());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", hierarchyCategory=");
        sb.append(getHierarchyCategory());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(34);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.HierarchyDefinition");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>noOfLevels</column-name><column-value><![CDATA[");
        sb.append(getNoOfLevels());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hierarchyType</column-name><column-value><![CDATA[");
        sb.append(getHierarchyType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hierarchyName</column-name><column-value><![CDATA[");
        sb.append(getHierarchyName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hierarchyDefinitionSid</column-name><column-value><![CDATA[");
        sb.append(getHierarchyDefinitionSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>versionNo</column-name><column-value><![CDATA[");
        sb.append(getVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>hierarchyCategory</column-name><column-value><![CDATA[");
        sb.append(getHierarchyCategory());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
