package com.stpl.app.model;

import com.stpl.portal.kernel.bean.AutoEscape;
import com.stpl.portal.model.BaseModel;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.service.ServiceContext;

import com.stpl.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the ItemMaster service. Represents a row in the &quot;ITEM_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.ItemMasterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.ItemMasterImpl}.
 * </p>
 *
 * @author
 * @see ItemMaster
 * @see com.stpl.app.model.impl.ItemMasterImpl
 * @see com.stpl.app.model.impl.ItemMasterModelImpl
 * @generated
 */
public interface ItemMasterModel extends BaseModel<ItemMaster> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a item master model instance should use the {@link ItemMaster} interface instead.
     */

    /**
     * Returns the primary key of this item master.
     *
     * @return the primary key of this item master
     */
    public int getPrimaryKey();

    /**
     * Sets the primary key of this item master.
     *
     * @param primaryKey the primary key of this item master
     */
    public void setPrimaryKey(int primaryKey);

    /**
     * Returns the item status of this item master.
     *
     * @return the item status of this item master
     */
    public int getItemStatus();

    /**
     * Sets the item status of this item master.
     *
     * @param itemStatus the item status of this item master
     */
    public void setItemStatus(int itemStatus);

    /**
     * Returns the item desc of this item master.
     *
     * @return the item desc of this item master
     */
    @AutoEscape
    public String getItemDesc();

    /**
     * Sets the item desc of this item master.
     *
     * @param itemDesc the item desc of this item master
     */
    public void setItemDesc(String itemDesc);

    /**
     * Returns the authorized generic start date of this item master.
     *
     * @return the authorized generic start date of this item master
     */
    public Date getAuthorizedGenericStartDate();

    /**
     * Sets the authorized generic start date of this item master.
     *
     * @param authorizedGenericStartDate the authorized generic start date of this item master
     */
    public void setAuthorizedGenericStartDate(Date authorizedGenericStartDate);

    /**
     * Returns the acquired amp of this item master.
     *
     * @return the acquired amp of this item master
     */
    public double getAcquiredAmp();

    /**
     * Sets the acquired amp of this item master.
     *
     * @param acquiredAmp the acquired amp of this item master
     */
    public void setAcquiredAmp(double acquiredAmp);

    /**
     * Returns the new formulation start date of this item master.
     *
     * @return the new formulation start date of this item master
     */
    public Date getNewFormulationStartDate();

    /**
     * Sets the new formulation start date of this item master.
     *
     * @param newFormulationStartDate the new formulation start date of this item master
     */
    public void setNewFormulationStartDate(Date newFormulationStartDate);

    /**
     * Returns the market termination date of this item master.
     *
     * @return the market termination date of this item master
     */
    public Date getMarketTerminationDate();

    /**
     * Sets the market termination date of this item master.
     *
     * @param marketTerminationDate the market termination date of this item master
     */
    public void setMarketTerminationDate(Date marketTerminationDate);

    /**
     * Returns the obra bamp of this item master.
     *
     * @return the obra bamp of this item master
     */
    public double getObraBamp();

    /**
     * Sets the obra bamp of this item master.
     *
     * @param obraBamp the obra bamp of this item master
     */
    public void setObraBamp(double obraBamp);

    /**
     * Returns the modified date of this item master.
     *
     * @return the modified date of this item master
     */
    public Date getModifiedDate();

    /**
     * Sets the modified date of this item master.
     *
     * @param modifiedDate the modified date of this item master
     */
    public void setModifiedDate(Date modifiedDate);

    /**
     * Returns the therapeutic class of this item master.
     *
     * @return the therapeutic class of this item master
     */
    public int getTherapeuticClass();

    /**
     * Sets the therapeutic class of this item master.
     *
     * @param therapeuticClass the therapeutic class of this item master
     */
    public void setTherapeuticClass(int therapeuticClass);

    /**
     * Returns the organization key of this item master.
     *
     * @return the organization key of this item master
     */
    @AutoEscape
    public String getOrganizationKey();

    /**
     * Sets the organization key of this item master.
     *
     * @param organizationKey the organization key of this item master
     */
    public void setOrganizationKey(String organizationKey);

    /**
     * Returns the acquired bamp of this item master.
     *
     * @return the acquired bamp of this item master
     */
    public double getAcquiredBamp();

    /**
     * Sets the acquired bamp of this item master.
     *
     * @param acquiredBamp the acquired bamp of this item master
     */
    public void setAcquiredBamp(double acquiredBamp);

    /**
     * Returns the pediatric exclusive end date of this item master.
     *
     * @return the pediatric exclusive end date of this item master
     */
    public Date getPediatricExclusiveEndDate();

    /**
     * Sets the pediatric exclusive end date of this item master.
     *
     * @param pediatricExclusiveEndDate the pediatric exclusive end date of this item master
     */
    public void setPediatricExclusiveEndDate(Date pediatricExclusiveEndDate);

    /**
     * Returns the source of this item master.
     *
     * @return the source of this item master
     */
    @AutoEscape
    public String getSource();

    /**
     * Sets the source of this item master.
     *
     * @param source the source of this item master
     */
    public void setSource(String source);

    /**
     * Returns the new formulation of this item master.
     *
     * @return the new formulation of this item master
     */
    @AutoEscape
    public String getNewFormulation();

    /**
     * Sets the new formulation of this item master.
     *
     * @param newFormulation the new formulation of this item master
     */
    public void setNewFormulation(String newFormulation);

    /**
     * Returns the divestiture date of this item master.
     *
     * @return the divestiture date of this item master
     */
    public Date getDivestitureDate();

    /**
     * Sets the divestiture date of this item master.
     *
     * @param divestitureDate the divestiture date of this item master
     */
    public void setDivestitureDate(Date divestitureDate);

    /**
     * Returns the primary uom of this item master.
     *
     * @return the primary uom of this item master
     */
    public int getPrimaryUom();

    /**
     * Sets the primary uom of this item master.
     *
     * @param primaryUom the primary uom of this item master
     */
    public void setPrimaryUom(int primaryUom);

    /**
     * Returns the new formulation end date of this item master.
     *
     * @return the new formulation end date of this item master
     */
    public Date getNewFormulationEndDate();

    /**
     * Sets the new formulation end date of this item master.
     *
     * @param newFormulationEndDate the new formulation end date of this item master
     */
    public void setNewFormulationEndDate(Date newFormulationEndDate);

    /**
     * Returns the modified by of this item master.
     *
     * @return the modified by of this item master
     */
    public int getModifiedBy();

    /**
     * Sets the modified by of this item master.
     *
     * @param modifiedBy the modified by of this item master
     */
    public void setModifiedBy(int modifiedBy);

    /**
     * Returns the inbound status of this item master.
     *
     * @return the inbound status of this item master
     */
    @AutoEscape
    public String getInboundStatus();

    /**
     * Sets the inbound status of this item master.
     *
     * @param inboundStatus the inbound status of this item master
     */
    public void setInboundStatus(String inboundStatus);

    /**
     * Returns the package size code of this item master.
     *
     * @return the package size code of this item master
     */
    @AutoEscape
    public String getPackageSizeCode();

    /**
     * Sets the package size code of this item master.
     *
     * @param packageSizeCode the package size code of this item master
     */
    public void setPackageSizeCode(String packageSizeCode);

    /**
     * Returns the secondary uom of this item master.
     *
     * @return the secondary uom of this item master
     */
    public int getSecondaryUom();

    /**
     * Sets the secondary uom of this item master.
     *
     * @param secondaryUom the secondary uom of this item master
     */
    public void setSecondaryUom(int secondaryUom);

    /**
     * Returns the discontinuation date of this item master.
     *
     * @return the discontinuation date of this item master
     */
    public Date getDiscontinuationDate();

    /**
     * Sets the discontinuation date of this item master.
     *
     * @param discontinuationDate the discontinuation date of this item master
     */
    public void setDiscontinuationDate(Date discontinuationDate);

    /**
     * Returns the package size intro date of this item master.
     *
     * @return the package size intro date of this item master
     */
    public Date getPackageSizeIntroDate();

    /**
     * Sets the package size intro date of this item master.
     *
     * @param packageSizeIntroDate the package size intro date of this item master
     */
    public void setPackageSizeIntroDate(Date packageSizeIntroDate);

    /**
     * Returns the manufacturer ID of this item master.
     *
     * @return the manufacturer ID of this item master
     */
    @AutoEscape
    public String getManufacturerId();

    /**
     * Sets the manufacturer ID of this item master.
     *
     * @param manufacturerId the manufacturer ID of this item master
     */
    public void setManufacturerId(String manufacturerId);

    /**
     * Returns the item end date of this item master.
     *
     * @return the item end date of this item master
     */
    public Date getItemEndDate();

    /**
     * Sets the item end date of this item master.
     *
     * @param itemEndDate the item end date of this item master
     */
    public void setItemEndDate(Date itemEndDate);

    /**
     * Returns the item family ID of this item master.
     *
     * @return the item family ID of this item master
     */
    @AutoEscape
    public String getItemFamilyId();

    /**
     * Sets the item family ID of this item master.
     *
     * @param itemFamilyId the item family ID of this item master
     */
    public void setItemFamilyId(String itemFamilyId);

    /**
     * Returns the strength of this item master.
     *
     * @return the strength of this item master
     */
    public int getStrength();

    /**
     * Sets the strength of this item master.
     *
     * @param strength the strength of this item master
     */
    public void setStrength(int strength);

    /**
     * Returns the item category of this item master.
     *
     * @return the item category of this item master
     */
    public int getItemCategory();

    /**
     * Sets the item category of this item master.
     *
     * @param itemCategory the item category of this item master
     */
    public void setItemCategory(int itemCategory);

    /**
     * Returns the upps of this item master.
     *
     * @return the upps of this item master
     */
    public double getUpps();

    /**
     * Sets the upps of this item master.
     *
     * @param upps the upps of this item master
     */
    public void setUpps(double upps);

    /**
     * Returns the shelf life type of this item master.
     *
     * @return the shelf life type of this item master
     */
    public int getShelfLifeType();

    /**
     * Sets the shelf life type of this item master.
     *
     * @param shelfLifeType the shelf life type of this item master
     */
    public void setShelfLifeType(int shelfLifeType);

    /**
     * Returns the pediatric exclusive indicator of this item master.
     *
     * @return the pediatric exclusive indicator of this item master
     */
    @AutoEscape
    public String getPediatricExclusiveIndicator();

    /**
     * Sets the pediatric exclusive indicator of this item master.
     *
     * @param pediatricExclusiveIndicator the pediatric exclusive indicator of this item master
     */
    public void setPediatricExclusiveIndicator(
        String pediatricExclusiveIndicator);

    /**
     * Returns the record lock status of this item master.
     *
     * @return the record lock status of this item master
     */
    public boolean getRecordLockStatus();

    /**
     * Returns <code>true</code> if this item master is record lock status.
     *
     * @return <code>true</code> if this item master is record lock status; <code>false</code> otherwise
     */
    public boolean isRecordLockStatus();

    /**
     * Sets whether this item master is record lock status.
     *
     * @param recordLockStatus the record lock status of this item master
     */
    public void setRecordLockStatus(boolean recordLockStatus);

    /**
     * Returns the item type indication of this item master.
     *
     * @return the item type indication of this item master
     */
    @AutoEscape
    public String getItemTypeIndication();

    /**
     * Sets the item type indication of this item master.
     *
     * @param itemTypeIndication the item type indication of this item master
     */
    public void setItemTypeIndication(String itemTypeIndication);

    /**
     * Returns the acquisition date of this item master.
     *
     * @return the acquisition date of this item master
     */
    public Date getAcquisitionDate();

    /**
     * Sets the acquisition date of this item master.
     *
     * @param acquisitionDate the acquisition date of this item master
     */
    public void setAcquisitionDate(Date acquisitionDate);

    /**
     * Returns the clotting factor indicator of this item master.
     *
     * @return the clotting factor indicator of this item master
     */
    @AutoEscape
    public String getClottingFactorIndicator();

    /**
     * Sets the clotting factor indicator of this item master.
     *
     * @param clottingFactorIndicator the clotting factor indicator of this item master
     */
    public void setClottingFactorIndicator(String clottingFactorIndicator);

    /**
     * Returns the form of this item master.
     *
     * @return the form of this item master
     */
    public int getForm();

    /**
     * Sets the form of this item master.
     *
     * @param form the form of this item master
     */
    public void setForm(int form);

    /**
     * Returns the item name of this item master.
     *
     * @return the item name of this item master
     */
    @AutoEscape
    public String getItemName();

    /**
     * Sets the item name of this item master.
     *
     * @param itemName the item name of this item master
     */
    public void setItemName(String itemName);

    /**
     * Returns the shelf life of this item master.
     *
     * @return the shelf life of this item master
     */
    @AutoEscape
    public String getShelfLife();

    /**
     * Sets the shelf life of this item master.
     *
     * @param shelfLife the shelf life of this item master
     */
    public void setShelfLife(String shelfLife);

    /**
     * Returns the pediatric exclusive start date of this item master.
     *
     * @return the pediatric exclusive start date of this item master
     */
    public Date getPediatricExclusiveStartDate();

    /**
     * Sets the pediatric exclusive start date of this item master.
     *
     * @param pediatricExclusiveStartDate the pediatric exclusive start date of this item master
     */
    public void setPediatricExclusiveStartDate(Date pediatricExclusiveStartDate);

    /**
     * Returns the first sale date of this item master.
     *
     * @return the first sale date of this item master
     */
    public Date getFirstSaleDate();

    /**
     * Sets the first sale date of this item master.
     *
     * @param firstSaleDate the first sale date of this item master
     */
    public void setFirstSaleDate(Date firstSaleDate);

    /**
     * Returns the item master sid of this item master.
     *
     * @return the item master sid of this item master
     */
    public int getItemMasterSid();

    /**
     * Sets the item master sid of this item master.
     *
     * @param itemMasterSid the item master sid of this item master
     */
    public void setItemMasterSid(int itemMasterSid);

    /**
     * Returns the item type of this item master.
     *
     * @return the item type of this item master
     */
    public int getItemType();

    /**
     * Sets the item type of this item master.
     *
     * @param itemType the item type of this item master
     */
    public void setItemType(int itemType);

    /**
     * Returns the item ID of this item master.
     *
     * @return the item ID of this item master
     */
    @AutoEscape
    public String getItemId();

    /**
     * Sets the item ID of this item master.
     *
     * @param itemId the item ID of this item master
     */
    public void setItemId(String itemId);

    /**
     * Returns the brand master sid of this item master.
     *
     * @return the brand master sid of this item master
     */
    public int getBrandMasterSid();

    /**
     * Sets the brand master sid of this item master.
     *
     * @param brandMasterSid the brand master sid of this item master
     */
    public void setBrandMasterSid(int brandMasterSid);

    /**
     * Returns the baseline amp of this item master.
     *
     * @return the baseline amp of this item master
     */
    public double getBaselineAmp();

    /**
     * Sets the baseline amp of this item master.
     *
     * @param baselineAmp the baseline amp of this item master
     */
    public void setBaselineAmp(double baselineAmp);

    /**
     * Returns the dual pricing indicator of this item master.
     *
     * @return the dual pricing indicator of this item master
     */
    @AutoEscape
    public String getDualPricingIndicator();

    /**
     * Sets the dual pricing indicator of this item master.
     *
     * @param dualPricingIndicator the dual pricing indicator of this item master
     */
    public void setDualPricingIndicator(String dualPricingIndicator);

    /**
     * Returns the doses per unit of this item master.
     *
     * @return the doses per unit of this item master
     */
    @AutoEscape
    public String getDosesPerUnit();

    /**
     * Sets the doses per unit of this item master.
     *
     * @param dosesPerUnit the doses per unit of this item master
     */
    public void setDosesPerUnit(String dosesPerUnit);

    /**
     * Returns the created date of this item master.
     *
     * @return the created date of this item master
     */
    public Date getCreatedDate();

    /**
     * Sets the created date of this item master.
     *
     * @param createdDate the created date of this item master
     */
    public void setCreatedDate(Date createdDate);

    /**
     * Returns the created by of this item master.
     *
     * @return the created by of this item master
     */
    public int getCreatedBy();

    /**
     * Sets the created by of this item master.
     *
     * @param createdBy the created by of this item master
     */
    public void setCreatedBy(int createdBy);

    /**
     * Returns the authorized generic of this item master.
     *
     * @return the authorized generic of this item master
     */
    @AutoEscape
    public String getAuthorizedGeneric();

    /**
     * Sets the authorized generic of this item master.
     *
     * @param authorizedGeneric the authorized generic of this item master
     */
    public void setAuthorizedGeneric(String authorizedGeneric);

    /**
     * Returns the item start date of this item master.
     *
     * @return the item start date of this item master
     */
    public Date getItemStartDate();

    /**
     * Sets the item start date of this item master.
     *
     * @param itemStartDate the item start date of this item master
     */
    public void setItemStartDate(Date itemStartDate);

    /**
     * Returns the ndc9 of this item master.
     *
     * @return the ndc9 of this item master
     */
    @AutoEscape
    public String getNdc9();

    /**
     * Sets the ndc9 of this item master.
     *
     * @param ndc9 the ndc9 of this item master
     */
    public void setNdc9(String ndc9);

    /**
     * Returns the authorized generic end date of this item master.
     *
     * @return the authorized generic end date of this item master
     */
    public Date getAuthorizedGenericEndDate();

    /**
     * Sets the authorized generic end date of this item master.
     *
     * @param authorizedGenericEndDate the authorized generic end date of this item master
     */
    public void setAuthorizedGenericEndDate(Date authorizedGenericEndDate);

    /**
     * Returns the item no of this item master.
     *
     * @return the item no of this item master
     */
    @AutoEscape
    public String getItemNo();

    /**
     * Sets the item no of this item master.
     *
     * @param itemNo the item no of this item master
     */
    public void setItemNo(String itemNo);

    /**
     * Returns the package size of this item master.
     *
     * @return the package size of this item master
     */
    @AutoEscape
    public String getPackageSize();

    /**
     * Sets the package size of this item master.
     *
     * @param packageSize the package size of this item master
     */
    public void setPackageSize(String packageSize);

    /**
     * Returns the ndc8 of this item master.
     *
     * @return the ndc8 of this item master
     */
    @AutoEscape
    public String getNdc8();

    /**
     * Sets the ndc8 of this item master.
     *
     * @param ndc8 the ndc8 of this item master
     */
    public void setNdc8(String ndc8);

    /**
     * Returns the base cpi of this item master.
     *
     * @return the base cpi of this item master
     */
    public double getBaseCpi();

    /**
     * Sets the base cpi of this item master.
     *
     * @param baseCpi the base cpi of this item master
     */
    public void setBaseCpi(double baseCpi);

    /**
     * Returns the labeler code of this item master.
     *
     * @return the labeler code of this item master
     */
    @AutoEscape
    public String getLabelerCode();

    /**
     * Sets the labeler code of this item master.
     *
     * @param labelerCode the labeler code of this item master
     */
    public void setLabelerCode(String labelerCode);

    /**
     * Returns the item class of this item master.
     *
     * @return the item class of this item master
     */
    public int getItemClass();

    /**
     * Sets the item class of this item master.
     *
     * @param itemClass the item class of this item master
     */
    public void setItemClass(int itemClass);

    /**
     * Returns the clotting factor end date of this item master.
     *
     * @return the clotting factor end date of this item master
     */
    public Date getClottingFactorEndDate();

    /**
     * Sets the clotting factor end date of this item master.
     *
     * @param clottingFactorEndDate the clotting factor end date of this item master
     */
    public void setClottingFactorEndDate(Date clottingFactorEndDate);

    /**
     * Returns the dra of this item master.
     *
     * @return the dra of this item master
     */
    public double getDra();

    /**
     * Sets the dra of this item master.
     *
     * @param dra the dra of this item master
     */
    public void setDra(double dra);

    /**
     * Returns the base cpi period of this item master.
     *
     * @return the base cpi period of this item master
     */
    public Date getBaseCpiPeriod();

    /**
     * Sets the base cpi period of this item master.
     *
     * @param baseCpiPeriod the base cpi period of this item master
     */
    public void setBaseCpiPeriod(Date baseCpiPeriod);

    /**
     * Returns the new formulation indicator of this item master.
     *
     * @return the new formulation indicator of this item master
     */
    @AutoEscape
    public String getNewFormulationIndicator();

    /**
     * Sets the new formulation indicator of this item master.
     *
     * @param newFormulationIndicator the new formulation indicator of this item master
     */
    public void setNewFormulationIndicator(String newFormulationIndicator);

    /**
     * Returns the last lot expiration date of this item master.
     *
     * @return the last lot expiration date of this item master
     */
    public Date getLastLotExpirationDate();

    /**
     * Sets the last lot expiration date of this item master.
     *
     * @param lastLotExpirationDate the last lot expiration date of this item master
     */
    public void setLastLotExpirationDate(Date lastLotExpirationDate);

    /**
     * Returns the batch ID of this item master.
     *
     * @return the batch ID of this item master
     */
    @AutoEscape
    public String getBatchId();

    /**
     * Sets the batch ID of this item master.
     *
     * @param batchId the batch ID of this item master
     */
    public void setBatchId(String batchId);

    /**
     * Returns the item code of this item master.
     *
     * @return the item code of this item master
     */
    @AutoEscape
    public String getItemCode();

    /**
     * Sets the item code of this item master.
     *
     * @param itemCode the item code of this item master
     */
    public void setItemCode(String itemCode);

    /**
     * Returns the clotting factor start date of this item master.
     *
     * @return the clotting factor start date of this item master
     */
    public Date getClottingFactorStartDate();

    /**
     * Sets the clotting factor start date of this item master.
     *
     * @param clottingFactorStartDate the clotting factor start date of this item master
     */
    public void setClottingFactorStartDate(Date clottingFactorStartDate);

    /**
     * Returns the non federal expiration date of this item master.
     *
     * @return the non federal expiration date of this item master
     */
    public Date getNonFederalExpirationDate();

    /**
     * Sets the non federal expiration date of this item master.
     *
     * @param nonFederalExpirationDate the non federal expiration date of this item master
     */
    public void setNonFederalExpirationDate(Date nonFederalExpirationDate);

    /**
     * Returns the internal notes of this item master.
     *
     * @return the internal notes of this item master
     */
    @AutoEscape
    public String getInternalNotes();

    /**
     * Sets the internal notes of this item master.
     *
     * @param internalNotes the internal notes of this item master
     */
    public void setInternalNotes(String internalNotes);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(ItemMaster itemMaster);

    @Override
    public int hashCode();

    @Override
    public CacheModel<ItemMaster> toCacheModel();

    @Override
    public ItemMaster toEscapedModel();

    @Override
    public ItemMaster toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
