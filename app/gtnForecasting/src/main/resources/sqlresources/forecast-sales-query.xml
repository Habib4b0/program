<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<sql>
<entity id="rows-per-level-item">
<query> <![CDATA[
        
        
            DECLARE @STRING CHAR(1)='@FREQUENCY'

            SELECT Count(*)
            FROM   (SELECT DISTINCT PERIODS=CASE
                                              WHEN @STRING = 'A' THEN PERIODS_ANNUAL
                                              WHEN @STRING = 'S' THEN PERIODS_SEMI
                                              WHEN @STRING = 'M' THEN PERIODS_MONTH
                                              WHEN @STRING = 'Q' THEN PERIODS_QUARTER
                                            END
                    FROM   (SELECT 'Q' + CONVERT(VARCHAR(2), P.QUARTER) + ' '
                                   + CONVERT(VARCHAR(4), P."YEAR") AS PERIODS_QUARTER,
                                   'S' + CONVERT(VARCHAR(2), P.SEMI_ANNUAL) + ' '
                                   + CONVERT(VARCHAR(4), P."YEAR") AS PERIODS_SEMI,
                                   CONVERT(VARCHAR(4), P.YEAR)     AS PERIODS_ANNUAL,
                                   'M' + CONVERT(VARCHAR(2), P.MONTH) + ' '
                                   + CONVERT(VARCHAR(4), P."YEAR") AS PERIODS_MONTH
                            FROM   "PERIOD" P
                            JOIN   @ACTUAL_TABLE AC ON AC.PERIOD_SID = P.PERIOD_SID
                            @USER_ID_ADDITION
                            )A
                    @UNION
                    SELECT DISTINCT PERIODS=CASE
                                              WHEN @STRING = 'A' THEN PERIODS_ANNUAL
                                              WHEN @STRING = 'S' THEN PERIODS_SEMI
                                              WHEN @STRING = 'M' THEN PERIODS_MONTH
                                              WHEN @STRING = 'Q' THEN PERIODS_QUARTER
                                            END
                    FROM   (SELECT 'Q' + CONVERT(VARCHAR(2), P.QUARTER) + ' '
                                   + CONVERT(VARCHAR(4), P."YEAR") AS PERIODS_QUARTER,
                                   'S' + CONVERT(VARCHAR(2), P.SEMI_ANNUAL) + ' '
                                   + CONVERT(VARCHAR(4), P."YEAR") AS PERIODS_SEMI,
                                   CONVERT(VARCHAR(4), P.YEAR)     AS PERIODS_ANNUAL,
                                   'M' + CONVERT(VARCHAR(2), P.MONTH) + ' '
                                   + CONVERT(VARCHAR(4), P."YEAR") AS PERIODS_MONTH
                            FROM   "PERIOD" P
                            JOIN   @PROJECTION_TABLE AC ON AC.PERIOD_SID = P.PERIOD_SID
                            @USER_ID_ADDITION
                            )A)A ;
        
        
    ]]> </query>
</entity>
<entity id="checkClearAll">
<query> <![CDATA[
         
                UPDATE 
                    SPM  
                SET 
                    CHECK_RECORD = @CHECK_RECORD
                FROM 
                    ST_M_SALES_PROJECTION_MASTER SPM
                INNER JOIN 
                    PROJECTION_DETAILS PD
                    ON PD.PROJECTION_DETAILS_SID = SPM.PROJECTION_DETAILS_SID
                WHERE PD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                    AND SPM.USER_ID = @USER_ID
                    AND SPM.SESSION_ID = @SESSION_ID;
        
    ]]> </query>
</entity>
<entity id="saveCalculationSelection">
<query> <![CDATA[
         
                UPDATE 
                    SPM    
                SET 
                    METHODOLOGY='@METHODOLOGY' ,   
                    CALCULATION_PERIODS='@CALCULATION_PERIODS',
                    CALCULATION_BASED='@CALCULATION_BASED',
                    FORECAST_START_PERIOD_SID=@startperiod ,
                    FORECAST_END_PERIOD_SID=@endperiod ,
                    ALLOCATION_BASIS= @allocationbasis
                FROM    
                    @MASTER_TABLE SPM
                INNER JOIN 
                    PROJECTION_DETAILS PD 
                    ON PD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                    AND PD.PROJECTION_DETAILS_SID = SPM.PROJECTION_DETAILS_SID
                WHERE 
                    @USERID_ADD
                    CHECK_RECORD = 1;
        
    ]]> </query>
</entity>
<entity id="massUpdate">
<query> <![CDATA[
         
                UPDATE 
                    @TABLE_NAME
                SET 
                    @COLUMN_NAME = @VALUE
                FROM 
                    @PROJECTION_TABLE SP
                JOIN 
                    @MASTER_TABLE SPM 
                    ON SPM.PROJECTION_DETAILS_SID = SP.PROJECTION_DETAILS_SID
                JOIN 
                    PERIOD P 
                    ON P.PERIOD_SID = SP.PERIOD_SID
                WHERE 
                    @USERID_ADD
                    SPM.CHECK_RECORD = 1
                    AND P.PERIOD_SID IN (SELECT PERIOD_SID FROM "PERIOD" where "YEAR" >= @START_YEAR and "YEAR" <= @END_YEAR
                    AND P.PERIOD_SID NOT IN(SELECT PERIOD_SID FROM "PERIOD" where "YEAR" = @START_YEAR @START_FREQUENCY)
                    AND P.PERIOD_SID NOT IN(SELECT PERIOD_SID FROM "PERIOD" where "YEAR" = @END_YEAR  @END_FREQUENCY));    
        
    ]]> </query>
</entity>
<entity id="saveAdjustmentSelection">
<query> <![CDATA[
         
                UPDATE 
                    SP
                SET 
                    ADJUSTMENT_TYPE = '@ADJUSTMENT_TYPE',
                    ADJUSTMENT_VALUES = '@ADJUSTMENT_VALUES',
                    ADJUSTMENT_BASIS = '@ADJUSTMENT_BASIS',
                    ADJUSTMENT_VARIABLE = '@ADJUSTMENT_VARIABLE',
                    ADJUSTMENT_METHODOLOGY = '@ADJUSTMENT_METHODOLOGY'
                FROM 
                    @PROJECTION_TABLE SP
                JOIN 
                    @MASTER_TABLE SPM 
                    ON SPM.PROJECTION_DETAILS_SID = SP.PROJECTION_DETAILS_SID
                JOIN 
                    PERIOD P 
                    ON P.PERIOD_SID = SP.PERIOD_SID
                WHERE 
                    @USERID_ADD
                    SPM.CHECK_RECORD = 1;
                    
    ]]> </query>
</entity>
<entity id="getPeriodSID">
<query> <![CDATA[
         
                DECLARE @frequency CHAR(1) = '@selectedfreq',
        @year      INT = @selectedyear,
        @period    INT = @selectedperiod

SELECT Min(PERIOD_SID)
FROM   PERIOD
WHERE  year = @year
       AND ( ( @FREQUENCY = 'Q'
               AND QUARTER = @period )
              OR ( @FREQUENCY = 'S'
                   AND SEMI_ANNUAL = @period )
              OR ( @FREQUENCY = 'M'
                   AND month = @period )
              OR @FREQUENCY = 'A')  ;
        
    ]]> </query>
</entity>
<entity id="saveCalculationSelectionForSP">
<query> <![CDATA[
         
     
  DECLARE @frequency char(1) = '@selectedfreq',
        @year int = @startyear,
        @period int = @startperiodvalue,
        @year1 int = @endyear,
        @period1 int = @endPeriodvalue,
        @startperiod int,
        @endperiod int
    SELECT
    @startperiod = MIN(PERIOD_SID)
    FROM PERIOD
    WHERE year = @year
    AND ((@FREQUENCY = 'Q'
    AND QUARTER = @period)
    OR (@FREQUENCY = 'S'
    AND SEMI_ANNUAL = @period)
    OR (@FREQUENCY = 'M'
    AND month = @period)
    OR @FREQUENCY = 'A')

   SELECT
   @endperiod = MIN(PERIOD_SID)
   FROM PERIOD
   WHERE year = @year1
   AND ((@FREQUENCY = 'Q'
   AND QUARTER = @period1)
   OR (@FREQUENCY = 'S'
   AND SEMI_ANNUAL = @period1)
   OR (@FREQUENCY = 'M'
  AND month = @period1)
  OR @FREQUENCY = 'A')

  UPDATE SPM
  SET METHODOLOGY = '@METHODOLOGY',
    CALCULATION_PERIODS = '@CALCULATION_PERIODS'
    FROM @MASTER_TABLE SPM    
    WHERE      
     CHECK_RECORD = 1; 
     select @startperiod,@endperiod
        
    ]]> </query>
</entity>
</sql>
