package com.stpl.app.adminconsole.customergroup.ui;

import com.stpl.app.adminconsole.common.dto.SessionDTO;
import com.stpl.app.adminconsole.common.util.CommonUIUtil;
import org.jboss.logging.Logger;

import com.stpl.app.adminconsole.customergroup.ui.view.CustomerGroupSearchMain;
import com.stpl.app.adminconsole.customergroup.ui.view.CustomerGroupView;
import com.stpl.app.adminconsole.util.AbstractNotificationUtils;
import com.stpl.app.adminconsole.util.ConstantsUtils;
import com.stpl.app.adminconsole.util.ErrorCodeUtil;
import com.stpl.app.adminconsole.util.ErrorCodes;
import com.stpl.portal.kernel.exception.PortalException;
import com.stpl.portal.kernel.exception.SystemException;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.Navigator;
import com.vaadin.server.VaadinRequest;
import com.vaadin.server.VaadinSession;
import com.vaadin.ui.UI;

/**
 * The Class CustomerGroupMasterUI.
 *
 * @author vishalakshi
 */
public class CustomerGroupMasterUI extends UI {

    /**
     * The navigator.
     */
    @AutoGenerated
    private Navigator navigator;

    private static final Logger LOGGER = Logger.getLogger(CustomerGroupMasterUI.class);

    SessionDTO sessionDTO = new SessionDTO();

    @Override
    public void init(final VaadinRequest request) {
        LOGGER.info("init method started");
        CommonUIUtil.beforeUnloadCloseUi(this, sessionDTO);
        setId("COMPANY");
        addStyleName("bootstrap");
        addStyleName("bootstrap-bb");
        addStyleName("bootstrap-admin");
        addStyleName("bootstrap-adminConsole");
        try {
            final String userId = request.getRemoteUser();
            final String sessionId = request.getWrappedSession().getId();
            sessionDTO.setSessionId(sessionId);
            sessionDTO.setUserId(userId);
            VaadinSession.getCurrent().setAttribute(ConstantsUtils.FROM_VIEW_PAGE, ConstantsUtils.OPTION_NO);
            VaadinSession.getCurrent().setAttribute(ConstantsUtils.SYS_ID, 0);
            navigator = new Navigator(this, this);
            navigator.addView(CustomerGroupSearchMain.NAME, new CustomerGroupSearchMain(sessionDTO));
            navigator.addView(CustomerGroupView.NAME, new CustomerGroupView(sessionDTO));
            navigator.setErrorView(new CustomerGroupSearchMain(sessionDTO));
        } catch (SystemException e) {
            final String errorMsg = ErrorCodeUtil.getErrorMessage(e);
            LOGGER.error(e);
            AbstractNotificationUtils.getErrorNotification(ErrorCodeUtil.getEC(ErrorCodes.ERROR_CODE_1001), errorMsg);
        } catch (PortalException e) {
            LOGGER.error(e);
            AbstractNotificationUtils.getErrorNotification(ErrorCodeUtil.getEC(ErrorCodes.ERROR_CODE_1001), ErrorCodeUtil.getEC(ErrorCodes.ERROR_CODE_4011));
        } catch (Exception e) {
            LOGGER.error(e);
            AbstractNotificationUtils.getErrorNotification(ErrorCodeUtil.getEC(ErrorCodes.ERROR_CODE_1001), ErrorCodeUtil.getEC(ErrorCodes.ERROR_CODE_4011));
        }
        LOGGER.info("init method Ended");
    }

  
    public Navigator getNavigator() {
        return navigator;
    }

   
    public void setNavigator(final Navigator navigator) {
        this.navigator = navigator;
    }

}
