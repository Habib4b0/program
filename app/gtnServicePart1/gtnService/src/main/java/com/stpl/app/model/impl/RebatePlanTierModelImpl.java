/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.RebatePlanTier;
import com.stpl.app.model.RebatePlanTierModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RebatePlanTier service. Represents a row in the &quot;REBATE_PLAN_TIER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link RebatePlanTierModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RebatePlanTierImpl}.
 * </p>
 *
 * @author
 * @see RebatePlanTierImpl
 * @see RebatePlanTier
 * @see RebatePlanTierModel
 * @generated
 */
@ProviderType
public class RebatePlanTierModelImpl extends BaseModelImpl<RebatePlanTier>
	implements RebatePlanTierModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a rebate plan tier model instance should use the {@link RebatePlanTier} interface instead.
	 */
	public static final String TABLE_NAME = "REBATE_PLAN_TIER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "TIER_VALUE", Types.DOUBLE },
			{ "RETURN_RATE_SID", Types.VARCHAR },
			{ "REBATE_PLAN_MASTER_SID", Types.INTEGER },
			{ "REBATE_PLAN_TIER_SID", Types.INTEGER },
			{ "ITEM_PRICING_QUALIFIER_SID", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "TIER_TOLERANCE", Types.DOUBLE },
			{ "TIER_FROM", Types.VARCHAR },
			{ "TIER_OPERATOR", Types.VARCHAR },
			{ "RECORD_LOCK_STATUS", Types.BOOLEAN },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.INTEGER },
			{ "SOURCE", Types.VARCHAR },
			{ "TIER_TO", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "REBATE_PLAN_TIER_ID", Types.VARCHAR },
			{ "FREE_AMOUNT", Types.DOUBLE },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "INBOUND_STATUS", Types.VARCHAR },
			{ "TIER_LEVEL", Types.VARCHAR },
			{ "FORMULA_NO", Types.VARCHAR },
			{ "FORMULA_NAME", Types.VARCHAR },
			{ "SECONDARY_REBATE_PLAN_NO", Types.VARCHAR },
			{ "SECONDARY_REBATE_PLAN_NAME", Types.VARCHAR },
			{ "SECONDARY_REBATE_PLAN_SID", Types.VARCHAR }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("TIER_VALUE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("RETURN_RATE_SID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REBATE_PLAN_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("REBATE_PLAN_TIER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_PRICING_QUALIFIER_SID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("TIER_TOLERANCE", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("TIER_FROM", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TIER_OPERATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RECORD_LOCK_STATUS", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TIER_TO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REBATE_PLAN_TIER_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FREE_AMOUNT", Types.DOUBLE);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TIER_LEVEL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FORMULA_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SECONDARY_REBATE_PLAN_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SECONDARY_REBATE_PLAN_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SECONDARY_REBATE_PLAN_SID", Types.VARCHAR);
	}

	public static final String TABLE_SQL_CREATE = "create table REBATE_PLAN_TIER (TIER_VALUE DOUBLE,RETURN_RATE_SID VARCHAR(75) null,REBATE_PLAN_MASTER_SID INTEGER,REBATE_PLAN_TIER_SID INTEGER not null primary key IDENTITY,ITEM_PRICING_QUALIFIER_SID VARCHAR(75) null,MODIFIED_DATE DATE null,TIER_TOLERANCE DOUBLE,TIER_FROM VARCHAR(75) null,TIER_OPERATOR VARCHAR(75) null,RECORD_LOCK_STATUS BOOLEAN,CREATED_DATE DATE null,CREATED_BY INTEGER,SOURCE VARCHAR(75) null,TIER_TO VARCHAR(75) null,BATCH_ID VARCHAR(75) null,REBATE_PLAN_TIER_ID VARCHAR(75) null,FREE_AMOUNT DOUBLE,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,TIER_LEVEL VARCHAR(75) null,FORMULA_NO VARCHAR(75) null,FORMULA_NAME VARCHAR(75) null,SECONDARY_REBATE_PLAN_NO VARCHAR(75) null,SECONDARY_REBATE_PLAN_NAME VARCHAR(75) null,SECONDARY_REBATE_PLAN_SID VARCHAR(75) null)";
	public static final String TABLE_SQL_DROP = "drop table REBATE_PLAN_TIER";
	public static final String ORDER_BY_JPQL = " ORDER BY rebatePlanTier.rebatePlanTierSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY REBATE_PLAN_TIER.REBATE_PLAN_TIER_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.RebatePlanTier"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.RebatePlanTier"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.RebatePlanTier"));

	public RebatePlanTierModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _rebatePlanTierSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setRebatePlanTierSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _rebatePlanTierSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return RebatePlanTier.class;
	}

	@Override
	public String getModelClassName() {
		return RebatePlanTier.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("tierValue", getTierValue());
		attributes.put("returnRateSid", getReturnRateSid());
		attributes.put("rebatePlanMasterSid", getRebatePlanMasterSid());
		attributes.put("rebatePlanTierSid", getRebatePlanTierSid());
		attributes.put("itemPricingQualifierSid", getItemPricingQualifierSid());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("tierTolerance", getTierTolerance());
		attributes.put("tierFrom", getTierFrom());
		attributes.put("tierOperator", getTierOperator());
		attributes.put("recordLockStatus", getRecordLockStatus());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("source", getSource());
		attributes.put("tierTo", getTierTo());
		attributes.put("batchId", getBatchId());
		attributes.put("rebatePlanTierId", getRebatePlanTierId());
		attributes.put("freeAmount", getFreeAmount());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("inboundStatus", getInboundStatus());
		attributes.put("tierLevel", getTierLevel());
		attributes.put("formulaNo", getFormulaNo());
		attributes.put("formulaName", getFormulaName());
		attributes.put("secondaryRebatePlanNo", getSecondaryRebatePlanNo());
		attributes.put("secondaryRebatePlanName", getSecondaryRebatePlanName());
		attributes.put("secondaryRebatePlanSid", getSecondaryRebatePlanSid());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Double tierValue = (Double)attributes.get("tierValue");

		if (tierValue != null) {
			setTierValue(tierValue);
		}

		String returnRateSid = (String)attributes.get("returnRateSid");

		if (returnRateSid != null) {
			setReturnRateSid(returnRateSid);
		}

		Integer rebatePlanMasterSid = (Integer)attributes.get(
				"rebatePlanMasterSid");

		if (rebatePlanMasterSid != null) {
			setRebatePlanMasterSid(rebatePlanMasterSid);
		}

		Integer rebatePlanTierSid = (Integer)attributes.get("rebatePlanTierSid");

		if (rebatePlanTierSid != null) {
			setRebatePlanTierSid(rebatePlanTierSid);
		}

		String itemPricingQualifierSid = (String)attributes.get(
				"itemPricingQualifierSid");

		if (itemPricingQualifierSid != null) {
			setItemPricingQualifierSid(itemPricingQualifierSid);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Double tierTolerance = (Double)attributes.get("tierTolerance");

		if (tierTolerance != null) {
			setTierTolerance(tierTolerance);
		}

		String tierFrom = (String)attributes.get("tierFrom");

		if (tierFrom != null) {
			setTierFrom(tierFrom);
		}

		String tierOperator = (String)attributes.get("tierOperator");

		if (tierOperator != null) {
			setTierOperator(tierOperator);
		}

		Boolean recordLockStatus = (Boolean)attributes.get("recordLockStatus");

		if (recordLockStatus != null) {
			setRecordLockStatus(recordLockStatus);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		String tierTo = (String)attributes.get("tierTo");

		if (tierTo != null) {
			setTierTo(tierTo);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String rebatePlanTierId = (String)attributes.get("rebatePlanTierId");

		if (rebatePlanTierId != null) {
			setRebatePlanTierId(rebatePlanTierId);
		}

		Double freeAmount = (Double)attributes.get("freeAmount");

		if (freeAmount != null) {
			setFreeAmount(freeAmount);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}

		String tierLevel = (String)attributes.get("tierLevel");

		if (tierLevel != null) {
			setTierLevel(tierLevel);
		}

		String formulaNo = (String)attributes.get("formulaNo");

		if (formulaNo != null) {
			setFormulaNo(formulaNo);
		}

		String formulaName = (String)attributes.get("formulaName");

		if (formulaName != null) {
			setFormulaName(formulaName);
		}

		String secondaryRebatePlanNo = (String)attributes.get(
				"secondaryRebatePlanNo");

		if (secondaryRebatePlanNo != null) {
			setSecondaryRebatePlanNo(secondaryRebatePlanNo);
		}

		String secondaryRebatePlanName = (String)attributes.get(
				"secondaryRebatePlanName");

		if (secondaryRebatePlanName != null) {
			setSecondaryRebatePlanName(secondaryRebatePlanName);
		}

		String secondaryRebatePlanSid = (String)attributes.get(
				"secondaryRebatePlanSid");

		if (secondaryRebatePlanSid != null) {
			setSecondaryRebatePlanSid(secondaryRebatePlanSid);
		}
	}

	@Override
	public double getTierValue() {
		return _tierValue;
	}

	@Override
	public void setTierValue(double tierValue) {
		_tierValue = tierValue;
	}

	@Override
	public String getReturnRateSid() {
		return _returnRateSid;
	}

	@Override
	public void setReturnRateSid(String returnRateSid) {
		_returnRateSid = returnRateSid;
	}

	@Override
	public int getRebatePlanMasterSid() {
		return _rebatePlanMasterSid;
	}

	@Override
	public void setRebatePlanMasterSid(int rebatePlanMasterSid) {
		_rebatePlanMasterSid = rebatePlanMasterSid;
	}

	@Override
	public int getRebatePlanTierSid() {
		return _rebatePlanTierSid;
	}

	@Override
	public void setRebatePlanTierSid(int rebatePlanTierSid) {
		_rebatePlanTierSid = rebatePlanTierSid;
	}

	@Override
	public String getItemPricingQualifierSid() {
		return _itemPricingQualifierSid;
	}

	@Override
	public void setItemPricingQualifierSid(String itemPricingQualifierSid) {
		_itemPricingQualifierSid = itemPricingQualifierSid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public double getTierTolerance() {
		return _tierTolerance;
	}

	@Override
	public void setTierTolerance(double tierTolerance) {
		_tierTolerance = tierTolerance;
	}

	@Override
	public String getTierFrom() {
		if (_tierFrom == null) {
			return StringPool.BLANK;
		}
		else {
			return _tierFrom;
		}
	}

	@Override
	public void setTierFrom(String tierFrom) {
		_tierFrom = tierFrom;
	}

	@Override
	public String getTierOperator() {
		if (_tierOperator == null) {
			return StringPool.BLANK;
		}
		else {
			return _tierOperator;
		}
	}

	@Override
	public void setTierOperator(String tierOperator) {
		_tierOperator = tierOperator;
	}

	@Override
	public boolean getRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public boolean isRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public void setRecordLockStatus(boolean recordLockStatus) {
		_recordLockStatus = recordLockStatus;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public String getTierTo() {
		return _tierTo;
	}

	@Override
	public void setTierTo(String tierTo) {
		_tierTo = tierTo;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getRebatePlanTierId() {
		if (_rebatePlanTierId == null) {
			return StringPool.BLANK;
		}
		else {
			return _rebatePlanTierId;
		}
	}

	@Override
	public void setRebatePlanTierId(String rebatePlanTierId) {
		_rebatePlanTierId = rebatePlanTierId;
	}

	@Override
	public double getFreeAmount() {
		return _freeAmount;
	}

	@Override
	public void setFreeAmount(double freeAmount) {
		_freeAmount = freeAmount;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	@Override
	public String getTierLevel() {
		if (_tierLevel == null) {
			return StringPool.BLANK;
		}
		else {
			return _tierLevel;
		}
	}

	@Override
	public void setTierLevel(String tierLevel) {
		_tierLevel = tierLevel;
	}

	@Override
	public String getFormulaNo() {
		if (_formulaNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaNo;
		}
	}

	@Override
	public void setFormulaNo(String formulaNo) {
		_formulaNo = formulaNo;
	}

	@Override
	public String getFormulaName() {
		if (_formulaName == null) {
			return StringPool.BLANK;
		}
		else {
			return _formulaName;
		}
	}

	@Override
	public void setFormulaName(String formulaName) {
		_formulaName = formulaName;
	}

	@Override
	public String getSecondaryRebatePlanNo() {
		if (_secondaryRebatePlanNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondaryRebatePlanNo;
		}
	}

	@Override
	public void setSecondaryRebatePlanNo(String secondaryRebatePlanNo) {
		_secondaryRebatePlanNo = secondaryRebatePlanNo;
	}

	@Override
	public String getSecondaryRebatePlanName() {
		if (_secondaryRebatePlanName == null) {
			return StringPool.BLANK;
		}
		else {
			return _secondaryRebatePlanName;
		}
	}

	@Override
	public void setSecondaryRebatePlanName(String secondaryRebatePlanName) {
		_secondaryRebatePlanName = secondaryRebatePlanName;
	}

	@Override
	public String getSecondaryRebatePlanSid() {
		return _secondaryRebatePlanSid;
	}

	@Override
	public void setSecondaryRebatePlanSid(String secondaryRebatePlanSid) {
		_secondaryRebatePlanSid = secondaryRebatePlanSid;
	}

	@Override
	public RebatePlanTier toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (RebatePlanTier)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		RebatePlanTierImpl rebatePlanTierImpl = new RebatePlanTierImpl();

		rebatePlanTierImpl.setTierValue(getTierValue());
		rebatePlanTierImpl.setReturnRateSid(getReturnRateSid());
		rebatePlanTierImpl.setRebatePlanMasterSid(getRebatePlanMasterSid());
		rebatePlanTierImpl.setRebatePlanTierSid(getRebatePlanTierSid());
		rebatePlanTierImpl.setItemPricingQualifierSid(getItemPricingQualifierSid());
		rebatePlanTierImpl.setModifiedDate(getModifiedDate());
		rebatePlanTierImpl.setTierTolerance(getTierTolerance());
		rebatePlanTierImpl.setTierFrom(getTierFrom());
		rebatePlanTierImpl.setTierOperator(getTierOperator());
		rebatePlanTierImpl.setRecordLockStatus(getRecordLockStatus());
		rebatePlanTierImpl.setCreatedDate(getCreatedDate());
		rebatePlanTierImpl.setCreatedBy(getCreatedBy());
		rebatePlanTierImpl.setSource(getSource());
		rebatePlanTierImpl.setTierTo(getTierTo());
		rebatePlanTierImpl.setBatchId(getBatchId());
		rebatePlanTierImpl.setRebatePlanTierId(getRebatePlanTierId());
		rebatePlanTierImpl.setFreeAmount(getFreeAmount());
		rebatePlanTierImpl.setModifiedBy(getModifiedBy());
		rebatePlanTierImpl.setInboundStatus(getInboundStatus());
		rebatePlanTierImpl.setTierLevel(getTierLevel());
		rebatePlanTierImpl.setFormulaNo(getFormulaNo());
		rebatePlanTierImpl.setFormulaName(getFormulaName());
		rebatePlanTierImpl.setSecondaryRebatePlanNo(getSecondaryRebatePlanNo());
		rebatePlanTierImpl.setSecondaryRebatePlanName(getSecondaryRebatePlanName());
		rebatePlanTierImpl.setSecondaryRebatePlanSid(getSecondaryRebatePlanSid());

		rebatePlanTierImpl.resetOriginalValues();

		return rebatePlanTierImpl;
	}

	@Override
	public int compareTo(RebatePlanTier rebatePlanTier) {
		int primaryKey = rebatePlanTier.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof RebatePlanTier)) {
			return false;
		}

		RebatePlanTier rebatePlanTier = (RebatePlanTier)obj;

		int primaryKey = rebatePlanTier.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<RebatePlanTier> toCacheModel() {
		RebatePlanTierCacheModel rebatePlanTierCacheModel = new RebatePlanTierCacheModel();

		rebatePlanTierCacheModel.tierValue = getTierValue();

		rebatePlanTierCacheModel.returnRateSid = getReturnRateSid();

		String returnRateSid = rebatePlanTierCacheModel.returnRateSid;

		if ((returnRateSid != null) && (returnRateSid.length() == 0)) {
			rebatePlanTierCacheModel.returnRateSid = null;
		}

		rebatePlanTierCacheModel.rebatePlanMasterSid = getRebatePlanMasterSid();

		rebatePlanTierCacheModel.rebatePlanTierSid = getRebatePlanTierSid();

		rebatePlanTierCacheModel.itemPricingQualifierSid = getItemPricingQualifierSid();

		String itemPricingQualifierSid = rebatePlanTierCacheModel.itemPricingQualifierSid;

		if ((itemPricingQualifierSid != null) &&
				(itemPricingQualifierSid.length() == 0)) {
			rebatePlanTierCacheModel.itemPricingQualifierSid = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			rebatePlanTierCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			rebatePlanTierCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		rebatePlanTierCacheModel.tierTolerance = getTierTolerance();

		rebatePlanTierCacheModel.tierFrom = getTierFrom();

		String tierFrom = rebatePlanTierCacheModel.tierFrom;

		if ((tierFrom != null) && (tierFrom.length() == 0)) {
			rebatePlanTierCacheModel.tierFrom = null;
		}

		rebatePlanTierCacheModel.tierOperator = getTierOperator();

		String tierOperator = rebatePlanTierCacheModel.tierOperator;

		if ((tierOperator != null) && (tierOperator.length() == 0)) {
			rebatePlanTierCacheModel.tierOperator = null;
		}

		rebatePlanTierCacheModel.recordLockStatus = getRecordLockStatus();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			rebatePlanTierCacheModel.createdDate = createdDate.getTime();
		}
		else {
			rebatePlanTierCacheModel.createdDate = Long.MIN_VALUE;
		}

		rebatePlanTierCacheModel.createdBy = getCreatedBy();

		rebatePlanTierCacheModel.source = getSource();

		String source = rebatePlanTierCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			rebatePlanTierCacheModel.source = null;
		}

		rebatePlanTierCacheModel.tierTo = getTierTo();

		String tierTo = rebatePlanTierCacheModel.tierTo;

		if ((tierTo != null) && (tierTo.length() == 0)) {
			rebatePlanTierCacheModel.tierTo = null;
		}

		rebatePlanTierCacheModel.batchId = getBatchId();

		String batchId = rebatePlanTierCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			rebatePlanTierCacheModel.batchId = null;
		}

		rebatePlanTierCacheModel.rebatePlanTierId = getRebatePlanTierId();

		String rebatePlanTierId = rebatePlanTierCacheModel.rebatePlanTierId;

		if ((rebatePlanTierId != null) && (rebatePlanTierId.length() == 0)) {
			rebatePlanTierCacheModel.rebatePlanTierId = null;
		}

		rebatePlanTierCacheModel.freeAmount = getFreeAmount();

		rebatePlanTierCacheModel.modifiedBy = getModifiedBy();

		rebatePlanTierCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = rebatePlanTierCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			rebatePlanTierCacheModel.inboundStatus = null;
		}

		rebatePlanTierCacheModel.tierLevel = getTierLevel();

		String tierLevel = rebatePlanTierCacheModel.tierLevel;

		if ((tierLevel != null) && (tierLevel.length() == 0)) {
			rebatePlanTierCacheModel.tierLevel = null;
		}

		rebatePlanTierCacheModel.formulaNo = getFormulaNo();

		String formulaNo = rebatePlanTierCacheModel.formulaNo;

		if ((formulaNo != null) && (formulaNo.length() == 0)) {
			rebatePlanTierCacheModel.formulaNo = null;
		}

		rebatePlanTierCacheModel.formulaName = getFormulaName();

		String formulaName = rebatePlanTierCacheModel.formulaName;

		if ((formulaName != null) && (formulaName.length() == 0)) {
			rebatePlanTierCacheModel.formulaName = null;
		}

		rebatePlanTierCacheModel.secondaryRebatePlanNo = getSecondaryRebatePlanNo();

		String secondaryRebatePlanNo = rebatePlanTierCacheModel.secondaryRebatePlanNo;

		if ((secondaryRebatePlanNo != null) &&
				(secondaryRebatePlanNo.length() == 0)) {
			rebatePlanTierCacheModel.secondaryRebatePlanNo = null;
		}

		rebatePlanTierCacheModel.secondaryRebatePlanName = getSecondaryRebatePlanName();

		String secondaryRebatePlanName = rebatePlanTierCacheModel.secondaryRebatePlanName;

		if ((secondaryRebatePlanName != null) &&
				(secondaryRebatePlanName.length() == 0)) {
			rebatePlanTierCacheModel.secondaryRebatePlanName = null;
		}

		rebatePlanTierCacheModel.secondaryRebatePlanSid = getSecondaryRebatePlanSid();

		String secondaryRebatePlanSid = rebatePlanTierCacheModel.secondaryRebatePlanSid;

		if ((secondaryRebatePlanSid != null) &&
				(secondaryRebatePlanSid.length() == 0)) {
			rebatePlanTierCacheModel.secondaryRebatePlanSid = null;
		}

		return rebatePlanTierCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(51);

		sb.append("{tierValue=");
		sb.append(getTierValue());
		sb.append(", returnRateSid=");
		sb.append(getReturnRateSid());
		sb.append(", rebatePlanMasterSid=");
		sb.append(getRebatePlanMasterSid());
		sb.append(", rebatePlanTierSid=");
		sb.append(getRebatePlanTierSid());
		sb.append(", itemPricingQualifierSid=");
		sb.append(getItemPricingQualifierSid());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", tierTolerance=");
		sb.append(getTierTolerance());
		sb.append(", tierFrom=");
		sb.append(getTierFrom());
		sb.append(", tierOperator=");
		sb.append(getTierOperator());
		sb.append(", recordLockStatus=");
		sb.append(getRecordLockStatus());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", tierTo=");
		sb.append(getTierTo());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", rebatePlanTierId=");
		sb.append(getRebatePlanTierId());
		sb.append(", freeAmount=");
		sb.append(getFreeAmount());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append(", tierLevel=");
		sb.append(getTierLevel());
		sb.append(", formulaNo=");
		sb.append(getFormulaNo());
		sb.append(", formulaName=");
		sb.append(getFormulaName());
		sb.append(", secondaryRebatePlanNo=");
		sb.append(getSecondaryRebatePlanNo());
		sb.append(", secondaryRebatePlanName=");
		sb.append(getSecondaryRebatePlanName());
		sb.append(", secondaryRebatePlanSid=");
		sb.append(getSecondaryRebatePlanSid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(79);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.RebatePlanTier");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>tierValue</column-name><column-value><![CDATA[");
		sb.append(getTierValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>returnRateSid</column-name><column-value><![CDATA[");
		sb.append(getReturnRateSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePlanMasterSid</column-name><column-value><![CDATA[");
		sb.append(getRebatePlanMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePlanTierSid</column-name><column-value><![CDATA[");
		sb.append(getRebatePlanTierSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemPricingQualifierSid</column-name><column-value><![CDATA[");
		sb.append(getItemPricingQualifierSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tierTolerance</column-name><column-value><![CDATA[");
		sb.append(getTierTolerance());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tierFrom</column-name><column-value><![CDATA[");
		sb.append(getTierFrom());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tierOperator</column-name><column-value><![CDATA[");
		sb.append(getTierOperator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
		sb.append(getRecordLockStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tierTo</column-name><column-value><![CDATA[");
		sb.append(getTierTo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebatePlanTierId</column-name><column-value><![CDATA[");
		sb.append(getRebatePlanTierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>freeAmount</column-name><column-value><![CDATA[");
		sb.append(getFreeAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>tierLevel</column-name><column-value><![CDATA[");
		sb.append(getTierLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaNo</column-name><column-value><![CDATA[");
		sb.append(getFormulaNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>formulaName</column-name><column-value><![CDATA[");
		sb.append(getFormulaName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondaryRebatePlanNo</column-name><column-value><![CDATA[");
		sb.append(getSecondaryRebatePlanNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondaryRebatePlanName</column-name><column-value><![CDATA[");
		sb.append(getSecondaryRebatePlanName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>secondaryRebatePlanSid</column-name><column-value><![CDATA[");
		sb.append(getSecondaryRebatePlanSid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = RebatePlanTier.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			RebatePlanTier.class
		};
	private double _tierValue;
	private String _returnRateSid;
	private int _rebatePlanMasterSid;
	private int _rebatePlanTierSid;
	private String _itemPricingQualifierSid;
	private Date _modifiedDate;
	private double _tierTolerance;
	private String _tierFrom;
	private String _tierOperator;
	private boolean _recordLockStatus;
	private Date _createdDate;
	private int _createdBy;
	private String _source;
	private String _tierTo;
	private String _batchId;
	private String _rebatePlanTierId;
	private double _freeAmount;
	private int _modifiedBy;
	private String _inboundStatus;
	private String _tierLevel;
	private String _formulaNo;
	private String _formulaName;
	private String _secondaryRebatePlanNo;
	private String _secondaryRebatePlanName;
	private String _secondaryRebatePlanSid;
	private RebatePlanTier _escapedModel;
}