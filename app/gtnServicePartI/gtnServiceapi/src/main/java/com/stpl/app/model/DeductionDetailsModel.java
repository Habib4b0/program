/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the DeductionDetails service. Represents a row in the &quot;DEDUCTION_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.DeductionDetailsModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.DeductionDetailsImpl}.
 * </p>
 *
 * @author
 * @see DeductionDetails
 * @see com.stpl.app.model.impl.DeductionDetailsImpl
 * @see com.stpl.app.model.impl.DeductionDetailsModelImpl
 * @generated
 */
@ProviderType
public interface DeductionDetailsModel extends BaseModel<DeductionDetails> {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a deduction details model instance should use the {@link DeductionDetails} interface instead.
	 */

	/**
	 * Returns the primary key of this deduction details.
	 *
	 * @return the primary key of this deduction details
	 */
	public int getPrimaryKey();

	/**
	 * Sets the primary key of this deduction details.
	 *
	 * @param primaryKey the primary key of this deduction details
	 */
	public void setPrimaryKey(int primaryKey);

	/**
	 * Returns the created by of this deduction details.
	 *
	 * @return the created by of this deduction details
	 */
	public int getCreatedBy();

	/**
	 * Sets the created by of this deduction details.
	 *
	 * @param createdBy the created by of this deduction details
	 */
	public void setCreatedBy(int createdBy);

	/**
	 * Returns the net sales formula master sid of this deduction details.
	 *
	 * @return the net sales formula master sid of this deduction details
	 */
	public int getNetSalesFormulaMasterSid();

	/**
	 * Sets the net sales formula master sid of this deduction details.
	 *
	 * @param netSalesFormulaMasterSid the net sales formula master sid of this deduction details
	 */
	public void setNetSalesFormulaMasterSid(int netSalesFormulaMasterSid);

	/**
	 * Returns the modified by of this deduction details.
	 *
	 * @return the modified by of this deduction details
	 */
	public int getModifiedBy();

	/**
	 * Sets the modified by of this deduction details.
	 *
	 * @param modifiedBy the modified by of this deduction details
	 */
	public void setModifiedBy(int modifiedBy);

	/**
	 * Returns the rs contract sid of this deduction details.
	 *
	 * @return the rs contract sid of this deduction details
	 */
	public int getRsContractSid();

	/**
	 * Sets the rs contract sid of this deduction details.
	 *
	 * @param rsContractSid the rs contract sid of this deduction details
	 */
	public void setRsContractSid(int rsContractSid);

	/**
	 * Returns the created date of this deduction details.
	 *
	 * @return the created date of this deduction details
	 */
	public Date getCreatedDate();

	/**
	 * Sets the created date of this deduction details.
	 *
	 * @param createdDate the created date of this deduction details
	 */
	public void setCreatedDate(Date createdDate);

	/**
	 * Returns the contract master sid of this deduction details.
	 *
	 * @return the contract master sid of this deduction details
	 */
	public int getContractMasterSid();

	/**
	 * Sets the contract master sid of this deduction details.
	 *
	 * @param contractMasterSid the contract master sid of this deduction details
	 */
	public void setContractMasterSid(int contractMasterSid);

	/**
	 * Returns the deduction details sid of this deduction details.
	 *
	 * @return the deduction details sid of this deduction details
	 */
	public int getDeductionDetailsSid();

	/**
	 * Sets the deduction details sid of this deduction details.
	 *
	 * @param deductionDetailsSid the deduction details sid of this deduction details
	 */
	public void setDeductionDetailsSid(int deductionDetailsSid);

	/**
	 * Returns the indicator of this deduction details.
	 *
	 * @return the indicator of this deduction details
	 */
	@AutoEscape
	public String getIndicator();

	/**
	 * Sets the indicator of this deduction details.
	 *
	 * @param indicator the indicator of this deduction details
	 */
	public void setIndicator(String indicator);

	/**
	 * Returns the modified date of this deduction details.
	 *
	 * @return the modified date of this deduction details
	 */
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this deduction details.
	 *
	 * @param modifiedDate the modified date of this deduction details
	 */
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the record lock status of this deduction details.
	 *
	 * @return the record lock status of this deduction details
	 */
	public boolean getRecordLockStatus();

	/**
	 * Returns <code>true</code> if this deduction details is record lock status.
	 *
	 * @return <code>true</code> if this deduction details is record lock status; <code>false</code> otherwise
	 */
	public boolean isRecordLockStatus();

	/**
	 * Sets whether this deduction details is record lock status.
	 *
	 * @param recordLockStatus the record lock status of this deduction details
	 */
	public void setRecordLockStatus(boolean recordLockStatus);

	/**
	 * Returns the source of this deduction details.
	 *
	 * @return the source of this deduction details
	 */
	@AutoEscape
	public String getSource();

	/**
	 * Sets the source of this deduction details.
	 *
	 * @param source the source of this deduction details
	 */
	public void setSource(String source);

	/**
	 * Returns the cdr model sid of this deduction details.
	 *
	 * @return the cdr model sid of this deduction details
	 */
	public int getCdrModelSid();

	/**
	 * Sets the cdr model sid of this deduction details.
	 *
	 * @param cdrModelSid the cdr model sid of this deduction details
	 */
	public void setCdrModelSid(int cdrModelSid);

	/**
	 * Returns the inbound status of this deduction details.
	 *
	 * @return the inbound status of this deduction details
	 */
	@AutoEscape
	public String getInboundStatus();

	/**
	 * Sets the inbound status of this deduction details.
	 *
	 * @param inboundStatus the inbound status of this deduction details
	 */
	public void setInboundStatus(String inboundStatus);

	/**
	 * Returns the deduction sub type of this deduction details.
	 *
	 * @return the deduction sub type of this deduction details
	 */
	@AutoEscape
	public String getDeductionSubType();

	/**
	 * Sets the deduction sub type of this deduction details.
	 *
	 * @param deductionSubType the deduction sub type of this deduction details
	 */
	public void setDeductionSubType(String deductionSubType);

	/**
	 * Returns the deduction type of this deduction details.
	 *
	 * @return the deduction type of this deduction details
	 */
	@AutoEscape
	public String getDeductionType();

	/**
	 * Sets the deduction type of this deduction details.
	 *
	 * @param deductionType the deduction type of this deduction details
	 */
	public void setDeductionType(String deductionType);

	/**
	 * Returns the deduction category of this deduction details.
	 *
	 * @return the deduction category of this deduction details
	 */
	@AutoEscape
	public String getDeductionCategory();

	/**
	 * Sets the deduction category of this deduction details.
	 *
	 * @param deductionCategory the deduction category of this deduction details
	 */
	public void setDeductionCategory(String deductionCategory);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(DeductionDetails deductionDetails);

	@Override
	public int hashCode();

	@Override
	public CacheModel<DeductionDetails> toCacheModel();

	@Override
	public DeductionDetails toEscapedModel();

	@Override
	public DeductionDetails toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}