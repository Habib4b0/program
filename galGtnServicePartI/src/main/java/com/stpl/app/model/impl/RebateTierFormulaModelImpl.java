package com.stpl.app.model.impl;

import com.stpl.app.model.RebateTierFormula;
import com.stpl.app.model.RebateTierFormulaModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the RebateTierFormula service. Represents a row in the &quot;REBATE_TIER_FORMULA&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.RebateTierFormulaModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link RebateTierFormulaImpl}.
 * </p>
 *
 * @author
 * @see RebateTierFormulaImpl
 * @see com.stpl.app.model.RebateTierFormula
 * @see com.stpl.app.model.RebateTierFormulaModel
 * @generated
 */
public class RebateTierFormulaModelImpl extends BaseModelImpl<RebateTierFormula>
    implements RebateTierFormulaModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a rebate tier formula model instance should use the {@link com.stpl.app.model.RebateTierFormula} interface instead.
     */
    public static final String TABLE_NAME = "REBATE_TIER_FORMULA";
    public static final Object[][] TABLE_COLUMNS = {
            { "REBATE_TIER_FORMULA_NO", Types.VARCHAR },
            { "REBATE_TIER_FORMULA_NAME", Types.VARCHAR },
            { "REBATE_PLAN_MASTER_SID", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "SOURCE", Types.VARCHAR },
            { "CREATED_BY", Types.INTEGER },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "BATCH_ID", Types.VARCHAR },
            { "REBATE_TIER_FORMULA_ID", Types.VARCHAR },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "MODIFIED_BY", Types.INTEGER },
            { "REBATE_TIER_FORMULA_SID", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table REBATE_TIER_FORMULA (REBATE_TIER_FORMULA_NO VARCHAR(75) null,REBATE_TIER_FORMULA_NAME VARCHAR(75) null,REBATE_PLAN_MASTER_SID INTEGER,MODIFIED_DATE DATE null,RECORD_LOCK_STATUS BOOLEAN,SOURCE VARCHAR(75) null,CREATED_BY INTEGER,CREATED_DATE DATE null,BATCH_ID VARCHAR(75) null,REBATE_TIER_FORMULA_ID VARCHAR(75) null,INBOUND_STATUS VARCHAR(75) null,MODIFIED_BY INTEGER,REBATE_TIER_FORMULA_SID INTEGER not null primary key IDENTITY)";
    public static final String TABLE_SQL_DROP = "drop table REBATE_TIER_FORMULA";
    public static final String ORDER_BY_JPQL = " ORDER BY rebateTierFormula.rebateTierFormulaSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY REBATE_TIER_FORMULA.REBATE_TIER_FORMULA_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.RebateTierFormula"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.RebateTierFormula"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.RebateTierFormula"));
    private static ClassLoader _classLoader = RebateTierFormula.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            RebateTierFormula.class
        };
    private String _rebateTierFormulaNo;
    private String _rebateTierFormulaName;
    private int _rebatePlanMasterSid;
    private Date _modifiedDate;
    private boolean _recordLockStatus;
    private String _source;
    private int _createdBy;
    private Date _createdDate;
    private String _batchId;
    private String _rebateTierFormulaId;
    private String _inboundStatus;
    private int _modifiedBy;
    private int _rebateTierFormulaSid;
    private RebateTierFormula _escapedModel;

    public RebateTierFormulaModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _rebateTierFormulaSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setRebateTierFormulaSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _rebateTierFormulaSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return RebateTierFormula.class;
    }

    @Override
    public String getModelClassName() {
        return RebateTierFormula.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("rebateTierFormulaNo", getRebateTierFormulaNo());
        attributes.put("rebateTierFormulaName", getRebateTierFormulaName());
        attributes.put("rebatePlanMasterSid", getRebatePlanMasterSid());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("source", getSource());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("batchId", getBatchId());
        attributes.put("rebateTierFormulaId", getRebateTierFormulaId());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("rebateTierFormulaSid", getRebateTierFormulaSid());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String rebateTierFormulaNo = (String) attributes.get(
                "rebateTierFormulaNo");

        if (rebateTierFormulaNo != null) {
            setRebateTierFormulaNo(rebateTierFormulaNo);
        }

        String rebateTierFormulaName = (String) attributes.get(
                "rebateTierFormulaName");

        if (rebateTierFormulaName != null) {
            setRebateTierFormulaName(rebateTierFormulaName);
        }

        Integer rebatePlanMasterSid = (Integer) attributes.get(
                "rebatePlanMasterSid");

        if (rebatePlanMasterSid != null) {
            setRebatePlanMasterSid(rebatePlanMasterSid);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        String rebateTierFormulaId = (String) attributes.get(
                "rebateTierFormulaId");

        if (rebateTierFormulaId != null) {
            setRebateTierFormulaId(rebateTierFormulaId);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Integer rebateTierFormulaSid = (Integer) attributes.get(
                "rebateTierFormulaSid");

        if (rebateTierFormulaSid != null) {
            setRebateTierFormulaSid(rebateTierFormulaSid);
        }
    }

    @Override
    public String getRebateTierFormulaNo() {
        if (_rebateTierFormulaNo == null) {
            return StringPool.BLANK;
        } else {
            return _rebateTierFormulaNo;
        }
    }

    @Override
    public void setRebateTierFormulaNo(String rebateTierFormulaNo) {
        _rebateTierFormulaNo = rebateTierFormulaNo;
    }

    @Override
    public String getRebateTierFormulaName() {
        if (_rebateTierFormulaName == null) {
            return StringPool.BLANK;
        } else {
            return _rebateTierFormulaName;
        }
    }

    @Override
    public void setRebateTierFormulaName(String rebateTierFormulaName) {
        _rebateTierFormulaName = rebateTierFormulaName;
    }

    @Override
    public int getRebatePlanMasterSid() {
        return _rebatePlanMasterSid;
    }

    @Override
    public void setRebatePlanMasterSid(int rebatePlanMasterSid) {
        _rebatePlanMasterSid = rebatePlanMasterSid;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public String getRebateTierFormulaId() {
        if (_rebateTierFormulaId == null) {
            return StringPool.BLANK;
        } else {
            return _rebateTierFormulaId;
        }
    }

    @Override
    public void setRebateTierFormulaId(String rebateTierFormulaId) {
        _rebateTierFormulaId = rebateTierFormulaId;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public int getRebateTierFormulaSid() {
        return _rebateTierFormulaSid;
    }

    @Override
    public void setRebateTierFormulaSid(int rebateTierFormulaSid) {
        _rebateTierFormulaSid = rebateTierFormulaSid;
    }

    @Override
    public RebateTierFormula toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (RebateTierFormula) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        RebateTierFormulaImpl rebateTierFormulaImpl = new RebateTierFormulaImpl();

        rebateTierFormulaImpl.setRebateTierFormulaNo(getRebateTierFormulaNo());
        rebateTierFormulaImpl.setRebateTierFormulaName(getRebateTierFormulaName());
        rebateTierFormulaImpl.setRebatePlanMasterSid(getRebatePlanMasterSid());
        rebateTierFormulaImpl.setModifiedDate(getModifiedDate());
        rebateTierFormulaImpl.setRecordLockStatus(getRecordLockStatus());
        rebateTierFormulaImpl.setSource(getSource());
        rebateTierFormulaImpl.setCreatedBy(getCreatedBy());
        rebateTierFormulaImpl.setCreatedDate(getCreatedDate());
        rebateTierFormulaImpl.setBatchId(getBatchId());
        rebateTierFormulaImpl.setRebateTierFormulaId(getRebateTierFormulaId());
        rebateTierFormulaImpl.setInboundStatus(getInboundStatus());
        rebateTierFormulaImpl.setModifiedBy(getModifiedBy());
        rebateTierFormulaImpl.setRebateTierFormulaSid(getRebateTierFormulaSid());

        rebateTierFormulaImpl.resetOriginalValues();

        return rebateTierFormulaImpl;
    }

    @Override
    public int compareTo(RebateTierFormula rebateTierFormula) {
        int primaryKey = rebateTierFormula.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof RebateTierFormula)) {
            return false;
        }

        RebateTierFormula rebateTierFormula = (RebateTierFormula) obj;

        int primaryKey = rebateTierFormula.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<RebateTierFormula> toCacheModel() {
        RebateTierFormulaCacheModel rebateTierFormulaCacheModel = new RebateTierFormulaCacheModel();

        rebateTierFormulaCacheModel.rebateTierFormulaNo = getRebateTierFormulaNo();

        String rebateTierFormulaNo = rebateTierFormulaCacheModel.rebateTierFormulaNo;

        if ((rebateTierFormulaNo != null) &&
                (rebateTierFormulaNo.length() == 0)) {
            rebateTierFormulaCacheModel.rebateTierFormulaNo = null;
        }

        rebateTierFormulaCacheModel.rebateTierFormulaName = getRebateTierFormulaName();

        String rebateTierFormulaName = rebateTierFormulaCacheModel.rebateTierFormulaName;

        if ((rebateTierFormulaName != null) &&
                (rebateTierFormulaName.length() == 0)) {
            rebateTierFormulaCacheModel.rebateTierFormulaName = null;
        }

        rebateTierFormulaCacheModel.rebatePlanMasterSid = getRebatePlanMasterSid();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            rebateTierFormulaCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            rebateTierFormulaCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        rebateTierFormulaCacheModel.recordLockStatus = getRecordLockStatus();

        rebateTierFormulaCacheModel.source = getSource();

        String source = rebateTierFormulaCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            rebateTierFormulaCacheModel.source = null;
        }

        rebateTierFormulaCacheModel.createdBy = getCreatedBy();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            rebateTierFormulaCacheModel.createdDate = createdDate.getTime();
        } else {
            rebateTierFormulaCacheModel.createdDate = Long.MIN_VALUE;
        }

        rebateTierFormulaCacheModel.batchId = getBatchId();

        String batchId = rebateTierFormulaCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            rebateTierFormulaCacheModel.batchId = null;
        }

        rebateTierFormulaCacheModel.rebateTierFormulaId = getRebateTierFormulaId();

        String rebateTierFormulaId = rebateTierFormulaCacheModel.rebateTierFormulaId;

        if ((rebateTierFormulaId != null) &&
                (rebateTierFormulaId.length() == 0)) {
            rebateTierFormulaCacheModel.rebateTierFormulaId = null;
        }

        rebateTierFormulaCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = rebateTierFormulaCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            rebateTierFormulaCacheModel.inboundStatus = null;
        }

        rebateTierFormulaCacheModel.modifiedBy = getModifiedBy();

        rebateTierFormulaCacheModel.rebateTierFormulaSid = getRebateTierFormulaSid();

        return rebateTierFormulaCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(27);

        sb.append("{rebateTierFormulaNo=");
        sb.append(getRebateTierFormulaNo());
        sb.append(", rebateTierFormulaName=");
        sb.append(getRebateTierFormulaName());
        sb.append(", rebatePlanMasterSid=");
        sb.append(getRebatePlanMasterSid());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", rebateTierFormulaId=");
        sb.append(getRebateTierFormulaId());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", rebateTierFormulaSid=");
        sb.append(getRebateTierFormulaSid());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(43);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.RebateTierFormula");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>rebateTierFormulaNo</column-name><column-value><![CDATA[");
        sb.append(getRebateTierFormulaNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebateTierFormulaName</column-name><column-value><![CDATA[");
        sb.append(getRebateTierFormulaName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePlanMasterSid</column-name><column-value><![CDATA[");
        sb.append(getRebatePlanMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebateTierFormulaId</column-name><column-value><![CDATA[");
        sb.append(getRebateTierFormulaId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebateTierFormulaSid</column-name><column-value><![CDATA[");
        sb.append(getRebateTierFormulaSid());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
