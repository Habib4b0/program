IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.ROUTINES
		WHERE ROUTINE_NAME = 'PRC_PROJ_RSLT_XCL_XPRT_VIEW'
			AND ROUTINE_SCHEMA = 'DBO'
		)
BEGIN
	DROP PROCEDURE [DBO].[PRC_PROJ_RSLT_XCL_XPRT_VIEW]
END
GO

CREATE PROCEDURE [dbo].[PRC_PROJ_RSLT_XCL_XPRT_VIEW] @PROJECTION_SID VARCHAR(500)
	,@FREQUENCY CHAR(1)
	,@CP_INDICATOR CHAR(1)
	,@GROUP_FILTER VARCHAR(50)
	,@GROUP_FILTER_VALUE VARCHAR(50)
	,@ORDER_FLAG BIT
	,@HIERARCHY_NO VARCHAR(500) = NULL
	,@LEVEL_NO INT = NULL
	,@VIEW VARCHAR(50)
	,@CUSTOM_VIEW_MASTER_SID INT = NULL
	,@DISCOUNT_VIEW VARCHAR(50)
	WITH
EXEC AS CALLER AS

BEGIN
  SET NOCOUNT ON

/**********************************************************************************************************
** FILE NAME		:	PRC_PROJ_RSLT_XCL_XPRT_VIEW.SQL
** PROCEDURE NAME	:	PRC_PROJ_RSLT_XCL_XPRT_VIEW
** DESCRIPTION		:	  aggregation of projections attached to the particualr projection showing as output Hierarchy level for boh 'TOTAL level of projection' and 'DISCOUNT level'result based on user perceptions
** INPUT PARAMETERS	:	@PROJECTION_SID	         - passing input as PROJECTION_MASTER_SID
                        @FREQUENCY               - based on frequency it will display the data monthly,quarterly semi annualy and annulaly
						@CP_INDICATOR            - passing input as either  'C' customer or 'P' product or custom based on we will display the result like hierarchy level
						@GROUP_FILTER            - passing input as either 'Sales' or 'Discount' or 'PPA'
						@GROUP_FILTER_VALUE      - passing input as either 'All Sales Group' or 'All Discount Group' or 'All PPA Group'
						@HIERARCHY_NO            - passing input as based on user perception 'Hierarchy_no'
						@LEVEL_NO                - passing input as based on user perception  'level_no'
						@VIEW                    - passing input as either 'DETAIL_TOTAL_DISCOUNT'  or 'DETAIL_DISCOUNT' view
						@CUSTOM_VIEW_MASTER_SID  - passing input as 'CUSTOM_VIEW_MASTER_SID'
						@DISCOUNT_VIEW           - Passing inpuit as either 'PROGRAM' result or 'PROGRAM_CATEGORY'result


** OUTPUT PARAMETERS:	na
** AUTHOR NAME		:	@SANDEEP
** CREATION DATE	:	17/10/2016 - 
** CALLED BY		:   from application side they click on PRC_PROJECTION_RESULT_EXCEL_EXPORT screen the inside that proecure will call dispaly information 
**********************************************************************************************************
** CHANGE HISTORY
**********************************************************************************************************
** VER   DATE      LOCAL ALMTICKET NO      SUBTICKET NO   ONLINE ALM TICKET      AUTHOR                          DESCRIPTION 
** ---   --------  ---------             -------------        -------------    ----------------                  ------------------
** 1    17/10/2016  GAL-7965                GAL-7965         		           @SANDEEP     				Removed the session tables and used the main tables for calculation   
*********************************************************************************************************/
  -------------declaring variables--------------------------

 
	DECLARE @D_MASTER_TABLE VARCHAR(200) = 'NM_DISCOUNT_PROJ_MASTER'
		,@D_ACTUAL_TABLE VARCHAR(200) = 'NM_ACTUAL_DISCOUNT'
		,@D_PROJECTION_TABLE VARCHAR(200) = 'NM_DISCOUNT_PROJECTION'
	DECLARE @S_MASTER_TABLE VARCHAR(200) = 'NM_SALES_PROJECTION_MASTER'
		,@S_ACTUAL_TABLE VARCHAR(200) = 'NM_ACTUAL_SALES'
		,@S_PROJECTION_TABLE VARCHAR(200) = 'NM_SALES_PROJECTION'
		,@P_PROJECTION_TABLE VARCHAR(200) = 'NM_PPA_PROJECTION'
		,@P_MASTER_TABLE VARCHAR(200) = 'NM_PPA_PROJECTION_MASTER'
		,@P_ACTUAL_TABLE VARCHAR(200) = 'NM_ACTUAL_PPA'
	DECLARE @D_SQL NVARCHAR(MAX)
	DECLARE @STARTFROM DATE
		,@PROJECTION_DATE DATE
		,@ITEM_UDT UDT_ITEM
		,@FORECAST_VERSION_DM VARCHAR(15)
		,@CUST_RELATIONSHIP_BUILDER_SID INT
		,@ACT_START_PERIOD_SID INT
		,@ACT_END_PERIOD_SID INT
		,@PROJ_END_PERIOD_SID INT
		,@PIVOT_START_PERIOD_SID INT
	DECLARE @FIRST_PROJ_SID INT
		,@PROJ_START_PERIOD_SID INT
		,@START_DATE DATETIME
		,@PROD_RELATIONSHIP_BUILDER_SID INT
		,@MIN_LEVEL INT
		,@FORECAST_NAME VARCHAR(50)
		,@FORECAST_VERSION VARCHAR(15)
		,@FORECAST_NAME_INV VARCHAR(50)
		,@FORECAST_VERSION_INV VARCHAR(15)
		,@FORECAST_NAME_DM VARCHAR(50)
		,@ACTUAL_START_DATE DATE
		,@ACTUAL_END_DATE DATE
		,@BUSINESS_UNIT INT ------------------GAL-808

	IF OBJECT_ID('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
		DROP TABLE #PERIOD;--------it contain's frequecy wise data details

	SELECT PERIOD_SID
		,PERIOD_DATE
		,MONTH
		,QUARTER
		,SEMI_ANNUAL
		,YEAR
		, CASE 
			WHEN LEFT(@FREQUENCY, 1) = 'M'
				THEN MONTH
			WHEN LEFT(@FREQUENCY, 1) = 'Q'
				THEN QUARTER
			WHEN LEFT(@FREQUENCY, 1) = 'S'
				THEN SEMI_ANNUAL
			ELSE YEAR
			END as PERIOD 
	INTO #PERIOD
	FROM PERIOD

	IF OBJECT_ID('TEMPDB..#PIVOT_RESULT') IS NOT NULL-------------------it contains total level result 
		DROP TABLE #PIVOT_RESULT

	CREATE TABLE #PIVOT_RESULT (
		PROJECTION_MASTER_SID INT
		,HIERARCHY_NO VARCHAR(50)
		,LEVEL_NAME VARCHAR(50)
		,CP_INDICATOR VARCHAR(10)
		,YEAR INT
		,PERIOD INT
		,CONTRACT_SALES_ACTUALS NUMERIC(22, 6)
		,CONTRACT_SALES_PROJECTED NUMERIC(22, 6)
		,CONTRACT_UNITS_ACTUALS NUMERIC(22, 6)
		,CONTRACT_UNITS_PROJECTED NUMERIC(22, 6)
		,EX_FACTORY_SALES_ACTUALS NUMERIC(22, 6)
		,EX_FACTORY_SALES_PROJECTED NUMERIC(22, 6)
		,GTS_UNITS NUMERIC(22, 6)
		,TOTAL_DISCOUNT NUMERIC(22, 6)
		,TOTAL_DISCOUNT_PROJECTED NUMERIC(22, 6)
		,TOTAL_DISCOUNT_PERCENTAGE NUMERIC(22, 6)
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
		,EX_FACTORY_SALES_ACTUALS_PERCENT NUMERIC(22, 6)
		,EX_FACTORY_SALES_PROJECTED_PERCENT NUMERIC(22, 6)
		,PPA_DISCOUNT NUMERIC(22, 6)
		,PPA_DISCOUNT_PROJECTED NUMERIC(22, 6)
		,PPA_DISCOUNT_PERCENTAGE NUMERIC(22, 6)
		,PPA_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
		,DEMAND_SALES_PROJECTED NUMERIC(22, 6)
		,NET_SALES NUMERIC(22, 6)
		,NET_SALES_PROJECTED NUMERIC(22, 6)
		,DEMAND_SALES_ACTUAL NUMERIC(22, 6)
		,INVENTORY_WITHDRAWAL_ACTUAL NUMERIC(22, 6)
		,INVENTORY_WITHDRAWAL_PROJECTED NUMERIC(22, 6)
		,DEMAND_SALES_ACTUAL_PERCENT NUMERIC(22, 6)
		,DEMAND_SALES_PROJECTED_PERCENT NUMERIC(22, 6)
		,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT NUMERIC(22, 6)
		,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT NUMERIC(22, 6)
		,TOTAL_DISCOUNT_RPU_ACTUALS NUMERIC(22, 6)
		,TOTAL_DISCOUNT_RPU_PROJECTED NUMERIC(22, 6)
		,TOTAL_PPA_RPU_ACTUALS NUMERIC(22, 6)
		,TOTAL_PPA_RPU_PROJECTED NUMERIC(22, 6)
		,TOTAL_RPU_ACTUAL NUMERIC(22, 6)
		,TOTAL_PROJECTED_RPU NUMERIC(22, 6)
		,COGS_ACTUAL NUMERIC(22, 6)
		,COGS_PROJECTED NUMERIC(22, 6)
		,NET_PROFIT_ACTUAL NUMERIC(22, 6)
		,NET_PROFIT_PROJECTED NUMERIC(22, 6)
		,RETURNS_ACTUAL_AMOUNT NUMERIC(22, 6)
		,RETURNS_ACTUAL_PERCENTAGE NUMERIC(22, 6)
		,RETURNS_PROJECTED_AMOUNT NUMERIC(22, 6)
		,RETURNS_PROJECTED_PERCENTAGE NUMERIC(22, 6)
		,TOTAL_RETURNS_RPU_ACTAULS NUMERIC(22, 6)
		,TOTAL_RETURNS_RPU_PROJECTED NUMERIC(22, 6)
		,NET_SALES_OF_EX_FACTORY_ACTUALS NUMERIC(22, 6)
		,NET_SALES_OF_EX_FACTORY_PROJECTED NUMERIC(22, 6)
		,DISCOUNT_OF_EX_FACTORY_ACTUALS NUMERIC(22, 6)
		,DISCOUNT_OF_EX_FACTORY_PROJECTED NUMERIC(22, 6)
		)

	SELECT @FIRST_PROJ_SID = @PROJECTION_SID

	SELECT TOP 1 @STARTFROM = Dateadd(YY, Datediff(YY, 0, Dateadd(YY, - 3, Getdate())), 0)
		,@START_DATE = DATEADD(dd, 1, EOMONTH(FROM_DATE, - 1))
		,@PROJECTION_DATE = DATEADD(dd, 1, EOMONTH(TO_DATE, - 1))
		,@CUST_RELATIONSHIP_BUILDER_SID = CUST_RELATIONSHIP_BUILDER_SID
		,@PROD_RELATIONSHIP_BUILDER_SID = PROD_RELATIONSHIP_BUILDER_SID
		,@MIN_LEVEL = CASE @CP_INDICATOR
			WHEN 'C'
				THEN CUSTOMER_HIERARCHY_LEVEL
			WHEN 'P'
				THEN PRODUCT_HIERARCHY_LEVEL
			END
	FROM PROJECTION_MASTER
	WHERE PROJECTION_MASTER_SID = @FIRST_PROJ_SID
	ORDER BY PROJECTION_MASTER_SID
 -------------------------------GALUAT_29 CHANGES----------------------------
          ------PULLING ACTUAL START_DATE , ACTUAL_END_DATE BASED ON CURRENT -3 CONCEPT & PROJ_START_PERIOD_DATE,PROJ_END_PERIOD_DATE BASED ON PROJECTION FROM PROJECTION MASTER TABLE -----------

  
	SELECT @ACTUAL_START_DATE = CAST(YEAR(GETDATE()) - 3 AS VARCHAR(4)) + '-01-01'----------------------------------actual start period
		,@ACTUAL_END_DATE = DATEADD(MM, - 1, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0))---------------------------actual end period

	SELECT 
		@PROJ_END_PERIOD_SID = MAX(CASE 
				WHEN PERIOD_DATE = Dateadd(MM, Datediff(MM, 0, @PROJECTION_DATE), 0)
					THEN PERIOD_SID
				END)
		,@PROJ_START_PERIOD_SID = MAX(CASE 
				WHEN PERIOD_DATE = @START_DATE
					THEN PERIOD_SID
				END)
		,@ACT_START_PERIOD_SID = MAX(CASE 
				WHEN PERIOD_DATE = @ACTUAL_START_DATE
					THEN PERIOD_SID
				END)
		,@ACT_END_PERIOD_SID = MAX(CASE 
				WHEN PERIOD_DATE = @ACTUAL_END_DATE
					THEN PERIOD_SID
				END)
	FROM PERIOD
	WHERE PERIOD_DATE IN (
			@STARTFROM
			,@PROJECTION_DATE
			,@START_DATE
			,@ACTUAL_END_DATE
			)

	SELECT @PIVOT_START_PERIOD_SID = PERIOD_SID
	FROM PERIOD
	WHERE PERIOD_DATE = @START_DATE

	DECLARE @LEVEL_DISC VARCHAR(100)
		,@FIELD_VALUES VARCHAR(500)

	SELECT @LEVEL_DISC = MAX(CASE 
				WHEN FIELD_NAME = 'LEVEL'
					THEN FIELD_VALUES
				END)
		,@FIELD_VALUES = MAX(CASE 
				WHEN FIELD_NAME = 'SELECTED DISCOUNTS'
					THEN FIELD_VALUES
				END)
	FROM NM_PROJECTION_SELECTION
	WHERE SCREEN_NAME = 'DISCOUNT PROJECTION'
		AND PROJECTION_MASTER_SID = @FIRST_PROJ_SID
		AND FIELD_NAME IN (
			'LEVEL'
			,'SELECTED DISCOUNTS'
			)

	IF OBJECT_ID('TEMPDB..#CCP') IS NOT NULL
		DROP TABLE #CCP----------------------------it contains ccp + heirarchy level details

	CREATE TABLE #CCP (
		CCP_DETAILS_SID INT
		,HIERARCHY_NO VARCHAR(50)
		,LEVEL_NAME VARCHAR(100)
		)

	IF @CP_INDICATOR IN (
			'C'
			,'P'
			)---------------------------------------based on @CP_INDICATOR we will display either customer & product 
	BEGIN
		DECLARE @SQL1 NVARCHAR(MAX)

		SET @SQL1 = CONCAT (
				'SELECT DISTINCT LCCP.CCP_DETAILS_SID,
                LCCP.HIERARCHY_NO,
                LEVEL_NAME
FROM   (SELECT CCPMAP.CCP_DETAILS_SID,
               HLD.HIERARCHY_NO,
               HLD.RELATIONSHIP_LEVEL_SID,
               LEVEL_NAME
        FROM   (SELECT RLD.RELATIONSHIP_LEVEL_VALUES,
                       RLD.HIERARCHY_NO,
                       CCP.CCP_DETAILS_SID
                FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                       JOIN CCP_MAP CCP
                         ON RLD.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
                            AND RLD.RELATIONSHIP_BUILDER_SID = '
				,CASE @CP_INDICATOR
					WHEN 'C'
						THEN @CUST_RELATIONSHIP_BUILDER_SID
					WHEN 'P'
						THEN @PROD_RELATIONSHIP_BUILDER_SID
					END
				,'
                       JOIN PROJECTION_DETAILS PD
                         ON PD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
                            AND PD.PROJECTION_MASTER_SID = '
				,@FIRST_PROJ_SID
				,'
                        '
				,CASE @GROUP_FILTER
					WHEN 'SALES'
						THEN ' 
						JOIN ' + @S_MASTER_TABLE + ' S ON S.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID'
					WHEN 'DISCOUNT'
						THEN ' 
						JOIN ' + @D_MASTER_TABLE + ' S ON S.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID'
					WHEN 'PPA'
						THEN ' 
						JOIN ' + @P_MASTER_TABLE + ' S ON S.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID'
					END
				,' 
                         
                WHERE  (S.USER_GROUP = '''
				,@GROUP_FILTER_VALUE
				,''' OR ''ALL'' = '''
				,@GROUP_FILTER_VALUE
				,''')
			'
				,') CCPMAP,
               (SELECT RLD1.HIERARCHY_NO,
                       RLD1.RELATIONSHIP_LEVEL_SID,
                       LEVEL_NAME
                FROM   RELATIONSHIP_LEVEL_DEFINITION RLD1
                       JOIN '
				,CASE @CP_INDICATOR
					WHEN 'C'
						THEN 'PROJECTION_CUST_HIERARCHY'
					WHEN 'P'
						THEN 'PROJECTION_PROD_HIERARCHY'
					END
				,' PCH
                         ON PCH.RELATIONSHIP_LEVEL_SID = RLD1.RELATIONSHIP_LEVEL_SID
                            AND PCH.PROJECTION_MASTER_SID = '
				,@FIRST_PROJ_SID
				,'
							'
				,CASE 
					WHEN @LEVEL_NO <> 0
						THEN 'WHERE  RLD1.HIERARCHY_NO LIKE ' + @HIERARCHY_NO + '%'
					ELSE ''
					END
				,'
               ) HLD
        WHERE  CCPMAP.HIERARCHY_NO LIKE HLD.HIERARCHY_NO + ''%'') LCCP
WHERE  LCCP.HIERARCHY_NO IN (SELECT RLD2.HIERARCHY_NO
                             FROM   RELATIONSHIP_LEVEL_DEFINITION RLD2
                                    JOIN ' + CASE @CP_INDICATOR
					WHEN 'C'
						THEN 'PROJECTION_CUST_HIERARCHY'
					WHEN 'P'
						THEN 'PROJECTION_PROD_HIERARCHY'
					END + ' PCH2
                                      ON PCH2.RELATIONSHIP_LEVEL_SID = RLD2.RELATIONSHIP_LEVEL_SID
                                         AND PCH2.PROJECTION_MASTER_SID = ' + CAST(@FIRST_PROJ_SID AS VARCHAR(20)) + '
                             WHERE  RLD2.LEVEL_NO  ' + CASE 
					WHEN @LEVEL_NO = 0
						THEN ' >= ' + CAST(@MIN_LEVEL AS VARCHAR(50))
					ELSE '= ' + CAST(@LEVEL_NO AS VARCHAR(50))
					END + ')'
				)

		INSERT INTO #ccp (
			CCP_DETAILS_SID
			,HIERARCHY_NO
			,LEVEL_NAME
			)
		EXEC sp_executesql @SQL1
	END
	ELSE
	BEGIN
		INSERT INTO #ccp (
			CCP_DETAILS_SID
			,HIERARCHY_NO
			,LEVEL_NAME
			)
		SELECT DISTINCT CCM.CCP_DETAILS_SID
			,CRB.CUSTOM_HIERARCHY_NO
			,RLD.LEVEL_NAME
		FROM CUSTOM_RELATIONSHIP_BUILDER CRB
		INNER JOIN CUSTOM_CCP_MAP CCM ON CCM.CUSTOM_VIEW_DETAILS_SID = CRB.CUSTOM_VIEW_DETAILS_SID
			AND ccm.CUSTOM_HIERARCHY_NO = crb.CUSTOM_HIERARCHY_NO
		INNER JOIN CUSTOM_VIEW_DETAILS CVD ON CVD.CUSTOM_VIEW_DETAILS_SID = CRB.CUSTOM_VIEW_DETAILS_SID
		INNER JOIN CUSTOM_VIEW_MASTER CVM ON CVM.CUSTOM_VIEW_MASTER_SID = CVD.CUSTOM_VIEW_MASTER_SID
		INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON RLD.HIERARCHY_LEVEL_DEFINITION_SID = CVD.HIERARCHY_ID
		WHERE CVM.PROJECTION_MASTER_SID = @PROJECTION_SID
			AND CVD.CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID
			AND (
				CVD.LEVEL_NO = @LEVEL_NO
				OR @LEVEL_NO IS NULL
				OR @LEVEL_NO = 0
				)
	END

	DECLARE @COMPANY INT

	IF OBJECT_ID('TEMPDB..#TEMP_CCP') IS NOT NULL
		DROP TABLE #TEMP_CCP-------------------------it contains projection details

	CREATE TABLE #TEMP_CCP (
		COMPANY_MASTER_SID INT
		,CONTRACT_MASTER_SID INT
		,ITEM_MASTER_SID INT
		,PROJECTION_DETAILS_SID INT
		,PROJECTION_MASTER_SID INT
		,BUSINESS_UNIT INT
		,COMPANY INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		)

	INSERT INTO #TEMP_CCP (
		COMPANY_MASTER_SID
		,CONTRACT_MASTER_SID
		,ITEM_MASTER_SID
		,PROJECTION_DETAILS_SID
		,PROJECTION_MASTER_SID
		,BUSINESS_UNIT
		,COMPANY
		,HIERARCHY_NO
		,LEVEL_NAME
		)
	SELECT CCP.COMPANY_MASTER_SID
		,CCP.CONTRACT_MASTER_SID
		,CCP.ITEM_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,PM.PROJECTION_MASTER_SID
		,PM.BUSINESS_UNIT
		,PM.COMPANY_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
	FROM CCP_DETAILS CCP
	INNER JOIN PROJECTION_DETAILS PD ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	INNER JOIN PROJECTION_MASTER PM ON PD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
	INNER JOIN #ccp C ON C.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
	WHERE PM.PROJECTION_MASTER_SID = @FIRST_PROJ_SID

	----------------------------------------------GAL-808-------------------
	SELECT @BUSINESS_UNIT = BUSINESS_UNIT
		,@COMPANY = COMPANY
	FROM #TEMP_CCP

	DECLARE @ITEMID [DBO].[UDT_ITEM]

	----------------------------------------------------------------------
	INSERT INTO @ITEMID
	SELECT IM.ITEM_MASTER_SID
	FROM ITEM_MASTER IM
	WHERE EXISTS (
			SELECT 1
			FROM #TEMP_CCP A
			WHERE PROJECTION_MASTER_SID = @FIRST_PROJ_SID
				AND IM.ITEM_MASTER_SID = A.ITEM_MASTER_SID
			)

	DECLARE @ITEM_INFO TABLE (
		ITEM_ID VARCHAR(50)
		,NDC8 VARCHAR(20)
		,ITEM_MASTER_SID INT
		)

	INSERT INTO @ITEM_INFO (
		ITEM_ID
		,NDC8
		,ITEM_MASTER_SID
		)
	SELECT DISTINCT IM.ITEM_ID
		,IM.NDC8
		,IM.ITEM_MASTER_SID
	FROM ITEM_MASTER IM
	INNER JOIN CCP_DETAILS CCP ON CCP.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
	INNER JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
	WHERE PD.PROJECTION_MASTER_SID = @FIRST_PROJ_SID
		AND EXISTS (
			SELECT 1
			FROM #ccp C
			WHERE C.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
			)

	INSERT INTO @ITEM_UDT (ITEM_MASTER_SID)
	SELECT DISTINCT ITEM_MASTER_SID
	FROM @ITEM_INFO
-----------------------------------fetching active file information-------------------------
	DECLARE @FILE_VER AS TABLE (
		FILE_TYPE VARCHAR(100)
		,FORECAST_NAME VARCHAR(100)
		,VERSION VARCHAR(100)
		)

	INSERT INTO @FILE_VER (
		FILE_TYPE
		,FORECAST_NAME
		,VERSION
		)
	SELECT FILE_TYPE
		,FORECAST_NAME
		,VERSION
	FROM (
		SELECT FT.FORECAST_NAME
			,FT.[VERSION]
			,FILE_MANAGEMENT_SID
			,HT.[DESCRIPTION] AS FILE_TYPE
			,ROW_NUMBER() OVER (
				PARTITION BY FILE_TYPE ORDER BY FILE_MANAGEMENT_SID DESC
				) AS RN
		FROM FILE_MANAGEMENT FT
		INNER JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = FT.FILE_TYPE
		WHERE (
				CONVERT(DATE, FT.FROM_PERIOD) <= CONVERT(DATE, GETDATE())
				AND FT.FROM_PERIOD IS NOT NULL
				)
			AND (
				CONVERT(DATE, FT.TO_PERIOD) >= CONVERT(DATE, GETDATE())
				OR FT.TO_PERIOD IS NULL
				)
			AND HT.LIST_NAME = 'FILE_TYPE'
			AND HT.[DESCRIPTION] IN (
				'EX-FACTORY SALES'
				,'DEMAND'
				,'INVENTORY WITHDRAWAL - FORECAST SUMMARY'
				)
			AND FT.BUSINESS_UNIT = @BUSINESS_UNIT ------------------GAL-808
			AND FT.COMPANY = @COMPANY ------------------GAL-808
		) A
	WHERE RN = 1

	--SELECT * FROM @FILE_VER
	SELECT @FORECAST_NAME = FORECAST_NAME
		,@FORECAST_VERSION = [VERSION]
	FROM @FILE_VER
	WHERE FILE_TYPE = 'EX-FACTORY SALES'

	SELECT @FORECAST_NAME_INV = FORECAST_NAME
		,@FORECAST_VERSION_INV = [VERSION]
	FROM @FILE_VER
	WHERE FILE_TYPE = 'INVENTORY WITHDRAWAL - FORECAST SUMMARY'

	SELECT @FORECAST_NAME_DM = FORECAST_NAME
		,@FORECAST_VERSION_DM = [VERSION]
	FROM @FILE_VER
	WHERE FILE_TYPE = 'DEMAND'
----------------------it contain's Ex-factory sales actual & projections results
	IF OBJECT_ID('TEMPDB..#TEMP_GTS_DETAILS') IS NOT NULL
		DROP TABLE #TEMP_GTS_DETAILS

	CREATE TABLE #TEMP_GTS_DETAILS (
		ITEMID VARCHAR(50)
		,GTS_SALES_PROJECTED NUMERIC(22, 6)
		,GTS_SALES_ACTUALS NUMERIC(22, 6)
		,UNITS NUMERIC(22, 6)
		,PERIOD_SID INT
		,PERIOD INT
		,YEAR INT
		)

	INSERT INTO #TEMP_GTS_DETAILS (
		ITEMID
		,GTS_SALES_PROJECTED
		,GTS_SALES_ACTUALS
		,UNITS
		,PERIOD_SID
		,PERIOD
		,YEAR
		)
	SELECT II.ITEM_ID
		,COALESCE(A.FORECAST_GTS_SALES, A.ACTUAL_GTS_SALES) AS FORECAST_GTS_SALES
		,A.ACTUAL_GTS_SALES
		,COALESCE(A.FORECAST_GTS_UNITS, A.ACTUAL_GTS_UNITS) AS UNITS
		,A.PERIOD_SID
		,P.PERIOD
		,P.YEAR
	FROM UDF_GTS_WAC(@ITEM_UDT, @ACT_START_PERIOD_SID, @PROJ_END_PERIOD_SID, @FORECAST_NAME, @FORECAST_VERSION) A
	INNER JOIN #PERIOD P ON P.PERIOD_SID = A.PERIOD_SID
	INNER JOIN ITEM_MASTER II ON II.ITEM_MASTER_SID = A.ITEM_MASTER_SID

	--------------------------------------------DEMANT SALES-----------------------------------------------------------------------
	-----------------------------------------------------INVENTORY-------------------------------------------------------------------------------------------------
	IF OBJECT_ID('TEMPDB..#INVENTORY') IS NOT NULL
		DROP TABLE #INVENTORY

	SELECT I.ITEM_MASTER_SID
		,P.PERIOD_SID
		,ACT_AMOUNT_WITHDRAWN
		,ACT_UNITS_WITHDRAWN
		,FOR_AMOUNT_WITHDRAWN
		,FOR_UNITS_WITHDRAWN
		,P.PERIOD
		,P.YEAR
	INTO #INVENTORY
	FROM [DBO].[UDF_INVENTORY_WAC](@ITEMID, @ACT_START_PERIOD_SID, @PROJ_END_PERIOD_SID, @FORECAST_NAME_INV, @FORECAST_VERSION_INV) I
	INNER JOIN #PERIOD P ON P.PERIOD_SID = I.PERIOD_SID
	INNER JOIN @ITEMID IM ON I.ITEM_MASTER_SID = IM.ITEM_MASTER_SID

	-----------------------------------------------------DEMAND-------------------------------------------------------------------------------------------------
	IF OBJECT_ID('TEMPDB..#DEMAND') IS NOT NULL
		DROP TABLE #DEMAND

	SELECT D.ITEM_MASTER_SID
		,P.PERIOD_SID
		,ACT_GROSS_AMOUNT
		,ACT_GROSS_UNITS
		,COALESCE(FOR_GROSS_AMOUNT, ACT_GROSS_AMOUNT) FOR_GROSS_AMOUNT
		,COALESCE(FOR_GROSS_UNITS, ACT_GROSS_UNITS) FOR_GROSS_UNITS
		,P.PERIOD
		,P.YEAR
	INTO #DEMAND
	FROM [DBO].[UDF_DEMAND_WAC](@ITEMID, @ACT_START_PERIOD_SID, @PROJ_END_PERIOD_SID, @FORECAST_NAME_DM, @FORECAST_VERSION_DM) D
	INNER JOIN #PERIOD P ON P.PERIOD_SID = D.PERIOD_SID
	INNER JOIN @ITEMID IM ON D.ITEM_MASTER_SID = IM.ITEM_MASTER_SID

	-------------------------------PRICING-------------------------------------
	IF OBJECT_ID('TEMPDB..#ITEM_PRICING') IS NOT NULL
		DROP TABLE #ITEM_PRICING

	SELECT ITEM_MASTER_SID,
             PERIOD_SID,
             PRICING_QUALIFIER,
             ITEM_PRICE
	INTO #ITEM_PRICING
	FROM [DBO].[UDF_ITEM_PRICING](@ITEMID, 'COGS', @ACT_START_PERIOD_SID, @PROJ_END_PERIOD_SID, 'EACH')

	-----------------------------------------------------------------------
	IF OBJECT_ID('TEMPDB.DBO.#RS_DATA', 'U') IS NOT NULL
		DROP TABLE #RS_DATA;------------it contains discount and heirarchy level details

	CREATE TABLE #RS_DATA (
		RS_CONTRACT_SID VARCHAR(100)
		,RS_NAME VARCHAR(100)
		,HIERARCHY_NO VARCHAR(50)
		,LEVEL_NAME VARCHAR(100)
		,YEAR INT
		,PERIOD INT
		,DISC VARCHAR(50)
		)

	SET @D_SQL = CONCAT (
			'INSERT INTO #RS_DATA (
	RS_CONTRACT_SID
	,RS_NAME
	,HIERARCHY_NO
	,LEVEL_NAME
	,YEAR
	,PERIOD
	,DISC
	)
SELECT RS_CONTRACT_SID
	,RS_NAME
	,HIERARCHY_NO
	,LEVEL_NAME
	,YEAR
	,PERIOD
	,DISC
FROM (
	SELECT DISTINCT CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN CAST(RM.RS_CONTRACT_SID AS VARCHAR(50))
			ELSE PRICE_GROUP_TYPE
			END AS RS_CONTRACT_SID
		,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE PRICE_GROUP_TYPE
			END AS RS_NAME
		,HIERARCHY_NO
		,LEVEL_NAME
		,''NM'' DISC
	FROM PROJECTION_DETAILS PD
	INNER JOIN '
			,@D_MASTER_TABLE
			,' NMDP ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	INNER JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
	INNER JOIN #ccp  C ON C.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	WHERE PD.PROJECTION_MASTER_SID = '
			,@FIRST_PROJ_SID
			,'
		AND (
			(
				'''
			,@LEVEL_DISC
			,''' = ''PROGRAM CATEGORY''
				AND PRICE_GROUP_TYPE IN (
					SELECT TOKEN
					FROM UDF_SPLITSTRING('''
			,@FIELD_VALUES
			,''','','')
					)
				)
			OR (
				'''
			,@LEVEL_DISC
			,''' = ''PROGRAM''
				AND RS_NAME IN (
					SELECT TOKEN
					FROM UDF_SPLITSTRING('''
			,@FIELD_VALUES
			,''','','')
					)
				)
			)
		
	
	UNION ALL
	
	SELECT DISTINCT CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN CAST(RM.RS_CONTRACT_SID AS VARCHAR(50))
			ELSE ''PRICE PROTECTION''
			END AS RS_CONTRACT_SID
		,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE ''PRICE PROTECTION''
			END AS RS_NAME
		,HIERARCHY_NO
		,LEVEL_NAME
		,''PPA'' DISC
	FROM PROJECTION_DETAILS PD
	INNER JOIN '
			,@P_MASTER_TABLE
			,' NMDP ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	INNER JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
	INNER JOIN #ccp  C ON C.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	WHERE PD.PROJECTION_MASTER_SID = '
			,@FIRST_PROJ_SID
			,'
		
	) A
CROSS JOIN (
	SELECT DISTINCT YEAR
		,PERIOD
	FROM #PERIOD
	WHERE PERIOD_SID BETWEEN COALESCE( '
			,@ACT_START_PERIOD_SID
			,', '
			,@PIVOT_START_PERIOD_SID
			,')
			AND '
			,@PROJ_END_PERIOD_SID
			,'
	) P'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#DATA_TABLE1') IS NOT NULL
		DROP TABLE #DATA_TABLE1

	SELECT HIERARCHY_NO
		,LEVEL_NAME
		,PERIOD
		,YEAR
	INTO #DATA_TABLE1
	FROM (
		SELECT DISTINCT HIERARCHY_NO
			,LEVEL_NAME
		FROM #ccp
		) C
	CROSS JOIN (
		SELECT DISTINCT PERIOD
			,YEAR
		FROM #PERIOD
		WHERE PERIOD_SID BETWEEN COALESCE(@ACT_START_PERIOD_SID, @PIVOT_START_PERIOD_SID)
				AND @PROJ_END_PERIOD_SID
		) P

	IF OBJECT_ID('TEMPDB..#CCP_INFO1') IS NOT NULL
		DROP TABLE #CCP_INFO1

	SELECT PD.PROJECTION_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,PD.CCP_DETAILS_SID
		,C.HIERARCHY_NO
		,C.LEVEL_NAME
	INTO #CCP_INFO1
	FROM PROJECTION_DETAILS PD
	INNER JOIN #ccp C ON C.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	WHERE PROJECTION_MASTER_SID = @FIRST_PROJ_SID

	IF OBJECT_ID('TEMPDB..#NM_DISCOUNT_PROJECTION1') IS NOT NULL
		DROP TABLE #NM_DISCOUNT_PROJECTION1--------------------------------it contains discount projection values based on  projection 

	CREATE TABLE #NM_DISCOUNT_PROJECTION1 (
		PROJECTION_SALES NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,RS_NAME VARCHAR(50)
		)



	SET @D_SQL = CONCAT (
			'INSERT INTO #NM_DISCOUNT_PROJECTION1
(
 PROJECTION_SALES ,
 PERIOD           ,
 YEAR				,
 HIERARCHY_NO     ,
 LEVEL_NAME		  ,
 RS_NAME			
)

SELECT SUM(NSP.PROJECTION_SALES) AS PROJECTION_SALES
	,PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME
	,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE PRICE_GROUP_TYPE
			END AS RS_NAME

FROM '
			,@D_PROJECTION_TABLE
			,' NSP
INNER JOIN '
			,@D_MASTER_TABLE
			,' NSPP ON NSP.PROJECTION_DETAILS_SID = NSPP.PROJECTION_DETAILS_SID
	
	AND NSPP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
INNER JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = NSPP.RS_CONTRACT_SID
INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	
	AND NSP.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,'
		AND '
			,@PROJ_END_PERIOD_SID
			,'
INNER JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR
	,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE PRICE_GROUP_TYPE
			END '
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#NM_ACTUAL_DISCOUNT1') IS NOT NULL
		DROP TABLE #NM_ACTUAL_DISCOUNT1-------------------------------it contains discount actual values based on  projection 

	CREATE TABLE #NM_ACTUAL_DISCOUNT1 (
		ACTUAL_SALES NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,RS_NAME VARCHAR(50)
		)

	SET @D_SQL = CONCAT (
			'INSERT INTO #NM_ACTUAL_DISCOUNT1
(
 ACTUAL_SALES ,
 PERIOD           ,
 YEAR				,
 HIERARCHY_NO     ,
 LEVEL_NAME		  ,
 RS_NAME			
)
SELECT SUM(NAD.ACTUAL_SALES) AS ACTUAL_SALES
	,PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME
	,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE PRICE_GROUP_TYPE
			END AS RS_NAME

FROM '
			,@D_ACTUAL_TABLE
			,' NAD
INNER JOIN '
			,@D_MASTER_TABLE
			,' NSPP ON NAD.PROJECTION_DETAILS_SID = NSPP.PROJECTION_DETAILS_SID
	
	AND NSPP.RS_CONTRACT_SID = NAD.RS_CONTRACT_SID
INNER JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = NSPP.RS_CONTRACT_SID
INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID

	AND NAD.PERIOD_SID BETWEEN COALESCE( '
			,@ACT_START_PERIOD_SID
			,','
			,@PROJ_START_PERIOD_SID
			,')
		AND '
			,@ACT_END_PERIOD_SID
			,'
-- AND NAD.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,' AND '
			,@PROJ_END_PERIOD_SID
			,'
INNER JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR
,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE PRICE_GROUP_TYPE
			END '
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#NM_PPA_PROJECTION1') IS NOT NULL
		DROP TABLE #NM_PPA_PROJECTION1--------------------------------it contains PPA values based on  projection 

	CREATE TABLE #NM_PPA_PROJECTION1 (
		PROJECTION_DISCOUNT_DOLLAR NUMERIC(22, 6)
		,PPA_RPU_PROJECTED NUMERIC(22, 6)
		,PPA_PROJECTION_SALES1 NUMERIC(22, 6)
		,PPA_PROJECTION_UNITS1 NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,RS_NAME VARCHAR(50)
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		)

	SET @D_SQL = CONCAT (
			' INSERT INTO #NM_PPA_PROJECTION1
  (
   PROJECTION_DISCOUNT_DOLLAR,
   PPA_RPU_PROJECTED		,
   PPA_PROJECTION_SALES1	,
   PPA_PROJECTION_UNITS1	,
   PERIOD					 ,
   YEAR						 ,
     RS_NAME					 ,
   HIERARCHY_NO				 ,
  
   LEVEL_NAME				
  )

SELECT SUM(NSP.PROJECTION_DISCOUNT_DOLLAR) PROJECTION_DISCOUNT_DOLLAR
	,PPA_RPU_PROJECTED = SUM(NSP.PROJECTION_RATE)
	,PPA_PROJECTION_SALES1 = SUM(NS.PROJECTION_SALES)
	,PPA_PROJECTION_UNITS1 = SUM(NS.PROJECTION_UNITS)
	,PERIOD
	,YEAR
	,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE ''PRICE PROTECTION''
			END AS RS_NAME
	,HIERARCHY_NO
	,LEVEL_NAME

FROM '
			,@P_PROJECTION_TABLE
			,' NSP
INNER JOIN '
			,@P_MASTER_TABLE
			,' NSPP ON NSP.PROJECTION_DETAILS_SID = NSPP.PROJECTION_DETAILS_SID
	
	AND NSPP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
INNER JOIN '
			,@S_PROJECTION_TABLE
			,' NS ON NSP.PROJECTION_DETAILS_SID = NS.PROJECTION_DETAILS_SID
	
	AND NSP.PERIOD_SID = NS.PERIOD_SID
INNER JOIN RS_CONTRACT R ON NSPP.RS_CONTRACT_SID = R.RS_CONTRACT_SID
INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NSP.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,'
		AND '
			,@PROJ_END_PERIOD_SID
			,'
INNER JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR
	,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE ''PRICE PROTECTION''
			END '
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#NM_ACTUAL_PPA1') IS NOT NULL
		DROP TABLE #NM_ACTUAL_PPA1--------------------------------it contains ppa values based on  projection 

	CREATE TABLE #NM_ACTUAL_PPA1 (
		ACTUAL_DISCOUNT_DOLLAR NUMERIC(22, 6)
		,PPA_RPU_ACTUAL NUMERIC(22, 6)
		,PPA_ACTUAL_SALES1 NUMERIC(22, 6)
		,PPA_ACTUAL_UNITS1 NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,RS_NAME VARCHAR(50)
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,
		)

	SET @D_SQL = CONCAT (
			' INSERT INTO #NM_ACTUAL_PPA1
  (
   ACTUAL_DISCOUNT_DOLLAR,
   PPA_RPU_ACTUAL		,
   PPA_ACTUAL_SALES1	,
   PPA_ACTUAL_UNITS1	,
   PERIOD					 ,
   YEAR						 ,
     RS_NAME					 ,
   HIERARCHY_NO				 ,
  
   LEVEL_NAME				
  )

SELECT SUM(NAD.ACTUAL_DISCOUNT_DOLLAR) ACTUAL_DISCOUNT_DOLLAR
	,PPA_RPU_ACTUAL = SUM(NAD.ACTUAL_RATE)
	,PPA_ACTUAL_SALES1 = SUM(NS.ACTUAL_SALES)
	,PPA_ACTUAL_UNITS1 = SUM(NS.ACTUAL_UNITS)
	,PERIOD
	,YEAR
	,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE ''PRICE PROTECTION''
			END
	,HIERARCHY_NO
	,LEVEL_NAME

FROM '
			,@P_ACTUAL_TABLE
			,' NAD
INNER JOIN '
			,@P_MASTER_TABLE
			,' NSPP ON NAD.PROJECTION_DETAILS_SID = NSPP.PROJECTION_DETAILS_SID
	
	AND NSPP.RS_CONTRACT_SID = NAD.RS_CONTRACT_SID
INNER JOIN '
			,@S_ACTUAL_TABLE
			,' NS ON NAD.PROJECTION_DETAILS_SID = NS.PROJECTION_DETAILS_SID
	AND NAD.PERIOD_SID = NS.PERIOD_SID
INNER JOIN RS_CONTRACT R ON NSPP.RS_CONTRACT_SID = R.RS_CONTRACT_SID
INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
	
	--AND NAD.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,' AND '
			,@PROJ_END_PERIOD_SID
			,'
	AND NAD.PERIOD_SID BETWEEN COALESCE( '
			,@ACT_START_PERIOD_SID
			,','
			,@PROJ_START_PERIOD_SID
			,')
		AND '
			,@ACT_END_PERIOD_SID
			,'
INNER JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR
	,CASE 
			WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
				THEN RS_NAME
			ELSE ''PRICE PROTECTION''
			END'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#NM_SALES_PROJECTION1') IS NOT NULL
		DROP TABLE #NM_SALES_PROJECTION1--------------------------------it contains sales projection values based on  projection 

	CREATE TABLE #NM_SALES_PROJECTION1 (
		PROJECTION_SALES NUMERIC(22, 6)
		,PROJECTION_UNITS NUMERIC(22, 6)
		,NM_COGS_PROJECTED NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,
		)

	SET @D_SQL = CONCAT (
			'INSERT INTO #NM_SALES_PROJECTION1
(
  PROJECTION_SALES  ,
  PROJECTION_UNITS	,
  NM_COGS_PROJECTED	,
  PERIOD			,
  YEAR				,
  HIERARCHY_NO		,
  
  LEVEL_NAME		
)

SELECT SUM(PROJECTION_SALES) PROJECTION_SALES
	,SUM(PROJECTION_UNITS) PROJECTION_UNITS
	,SUM(PROJECTION_UNITS * U.ITEM_PRICE) AS NM_COGS_PROJECTED
	,PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME

FROM '
			,@S_PROJECTION_TABLE
			,' NSP
INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	
	AND NSP.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,'
		AND '
			,@PROJ_END_PERIOD_SID
			,'
INNER JOIN CCP_DETAILS CC ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
INNER JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
INNER JOIN #ITEM_PRICING U ON CC.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND NSP.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#NM_ACTUAL_SALES1') IS NOT NULL
		DROP TABLE #NM_ACTUAL_SALES1--------------------------------it contains sales actual values based on  projection 

	CREATE TABLE #NM_ACTUAL_SALES1 (
		ACTUAL_SALES NUMERIC(22, 6)
		,ACTUAL_UNITS NUMERIC(22, 6)
		,NM_COGS_ACTUAL NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,
		)

	SET @D_SQL = CONCAT (
			' INSERT INTO #NM_ACTUAL_SALES1
  (
   ACTUAL_SALES    ,    
   ACTUAL_UNITS		,
   NM_COGS_ACTUAL	,
   PERIOD			,
   YEAR				,
   HIERARCHY_NO		,
  
   LEVEL_NAME		
  )

SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
	,SUM(ACTUAL_UNITS) ACTUAL_UNITS
	,SUM(ACTUAL_UNITS * U.ITEM_PRICE) AS NM_COGS_ACTUAL
	,PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME

FROM '
			,@S_ACTUAL_TABLE
			,' NAD
INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
	
	AND NAD.PERIOD_SID BETWEEN COALESCE( '
			,@ACT_START_PERIOD_SID
			,','
			,@PROJ_START_PERIOD_SID
			,')
		AND '
			,@ACT_END_PERIOD_SID
			,'
--AND NAD.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,'AND '
			,@PROJ_END_PERIOD_SID
			,'
INNER JOIN CCP_DETAILS CC ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
INNER JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
INNER JOIN #ITEM_PRICING U ON CC.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND NAD.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#SALES1') IS NOT NULL
		DROP TABLE #SALES1

	SELECT FD.YEAR
		,FD.PERIOD
		,FD.HIERARCHY_NO
		,FD.LEVEL_NAME
		,COALESCE((NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
		,COALESCE((NSP.PROJECTION_UNITS), 0) AS PROJECTION_UNITS
		,COALESCE((NAS.ACTUAL_SALES), 0) AS ACTUAL_SALES
		,COALESCE((NAS.ACTUAL_UNITS), 0) AS ACTUAL_UNITS
		,NM_COGS_PROJECTED AS COGS_PROJECTED
		,NM_COGS_ACTUAL AS COGS_ACTUAL
		,COALESCE((NAS.ACTUAL_SALES), 0) AS NM_ACTUAL_SALES
		,COALESCE((NSP.PROJECTION_SALES), 0) AS NM_PROJECTED_SALES
		,COALESCE((NAS.ACTUAL_UNITS), 0) AS NM_ACTUAL_UNITS
		,COALESCE((NSP.PROJECTION_UNITS), 0) AS NM_PROJECTED_UNITS
	INTO #SALES1
	FROM #DATA_TABLE1 FD
	LEFT JOIN #NM_SALES_PROJECTION1 NSP ON NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.LEVEL_NAME = FD.LEVEL_NAME
		AND NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
	LEFT JOIN #NM_ACTUAL_SALES1 NAS ON NAS.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAS.LEVEL_NAME = FD.LEVEL_NAME
		AND NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD

	IF OBJECT_ID('TEMPDB..#DISCOUNT1') IS NOT NULL
		DROP TABLE #DISCOUNT1

	SELECT FD.YEAR
		,FD.PERIOD
		, COALESCE((NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
		, COALESCE((NAS.ACTUAL_SALES), 0) AS ACTUAL_SALES
		,FD.RS_NAME
		,FD.HIERARCHY_NO
		,FD.LEVEL_NAME
	INTO #DISCOUNT1
	FROM #RS_DATA FD
	LEFT JOIN #NM_ACTUAL_DISCOUNT1 NAS ON NAS.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAS.LEVEL_NAME = FD.LEVEL_NAME
		AND NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD
		AND NAS.RS_NAME = FD.RS_NAME
	LEFT JOIN #NM_DISCOUNT_PROJECTION1 NSP ON NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.LEVEL_NAME = FD.LEVEL_NAME
		AND NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND FD.RS_NAME = NSP.RS_NAME
	WHERE FD.DISC = 'NM'

	IF OBJECT_ID('TEMPDB..#PPA_SUPP_MANDATED1') IS NOT NULL
		DROP TABLE #PPA_SUPP_MANDATED1

	SELECT FD.YEAR
		,FD.PERIOD
		,FD.RS_NAME
		, COALESCE((NSP.PROJECTION_DISCOUNT_DOLLAR), 0) AS PPA_DISCOUNT_PROJECTED
		, COALESCE((NAS.ACTUAL_DISCOUNT_DOLLAR), 0) AS PPA_ACTUAL_SALES
		, COALESCE((NSP.PPA_RPU_PROJECTED), 0) AS PPA_RPU_PROJECTED
		, COALESCE((PPA_PROJECTION_SALES1), 0) AS PPA_PROJECTION_SALES1
		, COALESCE((PPA_PROJECTION_UNITS1), 0) AS PPA_PROJECTION_UNITS1
		, COALESCE((PPA_ACTUAL_SALES1), 0) AS PPA_ACTUAL_SALES1
		, COALESCE((PPA_ACTUAL_UNITS1), 0) AS PPA_ACTUAL_UNITS1
		,FD.HIERARCHY_NO
		,FD.LEVEL_NAME
	INTO #PPA_SUPP_MANDATED1
	FROM #RS_DATA FD
	LEFT JOIN #NM_ACTUAL_PPA1 NAS ON NAS.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAS.LEVEL_NAME = FD.LEVEL_NAME
		AND NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD
		AND NAS.RS_NAME = FD.RS_NAME
	LEFT JOIN #NM_PPA_PROJECTION1 NSP ON NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.LEVEL_NAME = FD.LEVEL_NAME
		AND NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND NSP.RS_NAME = FD.RS_NAME
	WHERE FD.DISC = 'PPA'

	---------------------------------------------------------DETAILS_TOTAL_DISCOUNT-----------------------------------------------
	IF OBJECT_ID('TEMPDB..#TOTAL_NM_DISCOUNT_PROJECTION1') IS NOT NULL
		DROP TABLE #TOTAL_NM_DISCOUNT_PROJECTION1

	CREATE TABLE #TOTAL_NM_DISCOUNT_PROJECTION1 (
		PROJECTION_SALES NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		)

	SET @D_SQL = CONCAT (
			'INSERT INTO #TOTAL_NM_DISCOUNT_PROJECTION1
(
 PROJECTION_SALES ,
 PERIOD           ,
 YEAR				,
 HIERARCHY_NO     ,
 LEVEL_NAME		 
)
SELECT SUM(PROJECTION_SALES) AS PROJECTION_SALES
	,PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME
FROM (
	SELECT NDP.PROJECTION_SALES
		,P.PERIOD
		,P.YEAR
		,C.HIERARCHY_NO
		,C.LEVEL_NAME
	FROM '
			,@D_PROJECTION_TABLE
			,' NDP
	INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NDP.PROJECTION_DETAILS_SID
	INNER JOIN '
			,@D_MASTER_TABLE
			,' NDPM ON NDPM.PROJECTION_DETAILS_SID = NDP.PROJECTION_DETAILS_SID
		AND NDPM.RS_CONTRACT_SID = NDP.RS_CONTRACT_SID
		
		AND NDP.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,'
			AND '
			,@PROJ_END_PERIOD_SID
			,'
	INNER JOIN #PERIOD P ON P.PERIOD_SID = NDP.PERIOD_SID
	WHERE EXISTS (
			SELECT 1
			FROM PROJECTION_DETAILS PD
			WHERE PD.PROJECTION_DETAILS_SID = NDP.PROJECTION_DETAILS_SID
				AND PD.PROJECTION_MASTER_SID ='
			,@FIRST_PROJ_SID
			,'
			)
		AND EXISTS (
			SELECT 1
			FROM #RS_DATA A
			WHERE CASE 
					WHEN '''
			,@DISCOUNT_VIEW
			,'''= ''PROGRAM''
						THEN CAST(NDP.RS_CONTRACT_SID AS VARCHAR(20))
					ELSE NDPM.PRICE_GROUP_TYPE
					END = A.RS_CONTRACT_SID
			)
		
	) A
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#TOTAL_NM_ACTUAL_DISCOUNT1') IS NOT NULL
		DROP TABLE #TOTAL_NM_ACTUAL_DISCOUNT1

	CREATE TABLE #TOTAL_NM_ACTUAL_DISCOUNT1 (
		ACTUAL_SALES NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		)

	SET @D_SQL = CONCAT (
			'INSERT INTO #TOTAL_NM_ACTUAL_DISCOUNT1
(
 ACTUAL_SALES ,
 PERIOD           ,
 YEAR				,
 HIERARCHY_NO     ,
 LEVEL_NAME		  
)
SELECT SUM(ACTUAL_SALES) AS ACTUAL_SALES
	,PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME

FROM (
	SELECT NAD.ACTUAL_SALES
		,P.PERIOD
		,P.YEAR
		,C.HIERARCHY_NO
		,C.LEVEL_NAME
	FROM '
			,@D_ACTUAL_TABLE
			,' NAD
	INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
	INNER JOIN '
			,@D_MASTER_TABLE
			,' NDPM ON NDPM.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NDPM.RS_CONTRACT_SID = NAD.RS_CONTRACT_SID
		AND NAD.PERIOD_SID BETWEEN COALESCE( '
			,@ACT_START_PERIOD_SID
			,','
			,@PROJ_START_PERIOD_SID
			,')
			AND '
			,@ACT_END_PERIOD_SID
			,'
	INNER JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	WHERE EXISTS (
			SELECT 1
			FROM PROJECTION_DETAILS PD
			WHERE PD.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
				AND PD.PROJECTION_MASTER_SID ='
			,@FIRST_PROJ_SID
			,'
			)
		AND EXISTS (
			SELECT 1
			FROM #RS_DATA A
			WHERE CASE 
					WHEN '''
			,@DISCOUNT_VIEW
			,''' = ''PROGRAM''
						THEN CAST(NAD.RS_CONTRACT_SID AS VARCHAR(20))
					ELSE NDPM.PRICE_GROUP_TYPE
					END = A.RS_CONTRACT_SID
			)
		
	) A
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#TOTAL_NM_PPA_PROJECTION1') IS NOT NULL
		DROP TABLE #TOTAL_NM_PPA_PROJECTION1

	CREATE TABLE #TOTAL_NM_PPA_PROJECTION1 (
		PROJECTION_DISCOUNT_DOLLAR NUMERIC(22, 6)
		,PPA_RPU_PROJECTED NUMERIC(22, 6)
		,PPA_PROJECTION_SALES1 NUMERIC(22, 6)
		,PPA_PROJECTION_UNITS1 NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,
		)

	SET @D_SQL = CONCAT (
			' INSERT INTO #TOTAL_NM_PPA_PROJECTION1
  (
   PROJECTION_DISCOUNT_DOLLAR,
   PPA_RPU_PROJECTED		,
   PPA_PROJECTION_SALES1	,
   PPA_PROJECTION_UNITS1	,
   PERIOD					 ,
   YEAR						 ,
   HIERARCHY_NO				 ,
   LEVEL_NAME				
  )
SELECT SUM(PROJECTION_DISCOUNT_DOLLAR) PROJECTION_DISCOUNT_DOLLAR
	,PPA_RPU_PROJECTED = SUM(PPA_RPU_PROJECTED)
	,PPA_PROJECTION_SALES1 = SUM(PPA_PROJECTION_SALES1)
	,PPA_PROJECTION_UNITS1 = SUM(PPA_PROJECTION_UNITS1)
	,PERIOD
	,YEAR
	,HIERARCHY_NO
	,LEVEL_NAME

FROM (
	SELECT NSP.PROJECTION_DISCOUNT_DOLLAR PROJECTION_DISCOUNT_DOLLAR
		,PPA_RPU_PROJECTED = PROJECTION_RATE
		,PPA_PROJECTION_SALES1 = NS.PROJECTION_SALES
		,PPA_PROJECTION_UNITS1 = NS.PROJECTION_UNITS
		,PERIOD
		,YEAR
		,HIERARCHY_NO
		,LEVEL_NAME
	FROM '
			,@P_PROJECTION_TABLE
			,' NSP
	INNER JOIN '
			,@P_MASTER_TABLE
			,' NDPM ON NDPM.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NDPM.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		
	INNER JOIN '
			,@S_PROJECTION_TABLE
			,' NS ON NS.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NS.PERIOD_SID = NSP.PERIOD_SID
	INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NSP.PERIOD_SID BETWEEN '
			,@PROJ_START_PERIOD_SID
			,'
			AND '
			,@PROJ_END_PERIOD_SID
			,'
	INNER JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	WHERE EXISTS (
			SELECT 1
			FROM PROJECTION_DETAILS PD
			WHERE PD.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
				AND PD.PROJECTION_MASTER_SID = '
			,@FIRST_PROJ_SID
			,'
			)
		AND EXISTS (
			SELECT 1
			FROM #RS_DATA A
			WHERE CASE 
					WHEN '''
			,@DISCOUNT_VIEW
			,'''= ''PROGRAM''
						THEN CAST(NSP.RS_CONTRACT_SID AS VARCHAR(20))
					ELSE ''PRICE PROTECTION''
					END = A.RS_CONTRACT_SID
			)
		
	) A
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#TOTAL_NM_ACTUAL_PPA1') IS NOT NULL
		DROP TABLE #TOTAL_NM_ACTUAL_PPA1

	CREATE TABLE #TOTAL_NM_ACTUAL_PPA1 (
		ACTUAL_DISCOUNT_DOLLAR NUMERIC(22, 6)
		,PERIOD VARCHAR(50)
		,YEAR INT
		,PPA_ACTUAL_SALES1 NUMERIC(22, 6)
		,PPA_ACTUAL_UNITS1 NUMERIC(22, 6)
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,
		)

	SET @D_SQL = CONCAT (
			'INSERT INTO #TOTAL_NM_ACTUAL_PPA1
  (
  ACTUAL_DISCOUNT_DOLLAR,
  PERIOD	,			
  YEAR	,				
  PPA_ACTUAL_SALES1	,	
  PPA_ACTUAL_UNITS1	,	
  HIERARCHY_NO	,		
  LEVEL_NAME			
  )
SELECT SUM(ACTUAL_DISCOUNT_DOLLAR) AS ACTUAL_DISCOUNT_DOLLAR
	,PERIOD
	,YEAR
	,PPA_ACTUAL_SALES1 = SUM(PPA_ACTUAL_SALES1)
	,PPA_ACTUAL_UNITS1 = SUM(PPA_ACTUAL_UNITS1)
	,HIERARCHY_NO
	,LEVEL_NAME

FROM (
	SELECT NAD.ACTUAL_DISCOUNT_DOLLAR
		,PERIOD
		,YEAR
		,HIERARCHY_NO
		,LEVEL_NAME
		,NAD.RS_CONTRACT_SID
		,PPA_ACTUAL_SALES1 = NS.ACTUAL_SALES
		,PPA_ACTUAL_UNITS1 = NS.ACTUAL_UNITS
	FROM '
			,@P_ACTUAL_TABLE
			,' NAD
	INNER JOIN '
			,@P_MASTER_TABLE
			,' NDPM ON NDPM.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NDPM.RS_CONTRACT_SID = NAD.RS_CONTRACT_SID
		
	INNER JOIN '
			,@S_ACTUAL_TABLE
			,' NS ON NS.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		
		AND NS.PERIOD_SID = NAD.PERIOD_SID
	INNER JOIN #CCP_INFO1 C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NAD.PERIOD_SID BETWEEN COALESCE( '
			,@ACT_START_PERIOD_SID
			,','
			,@PROJ_START_PERIOD_SID
			,')
			AND '
			,@ACT_END_PERIOD_SID
			,'
	--	AND NAD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
	--AND @PROJ_END_PERIOD_SID
	INNER JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	WHERE EXISTS (
			SELECT 1
			FROM PROJECTION_DETAILS PD
			WHERE PD.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
				AND PD.PROJECTION_MASTER_SID = '
			,@FIRST_PROJ_SID
			,'
			)
		AND EXISTS (
			SELECT 1
			FROM #RS_DATA A
			WHERE CASE 
					WHEN'''
			,@DISCOUNT_VIEW
			,'''= ''PROGRAM''
						THEN CAST(NAD.RS_CONTRACT_SID AS VARCHAR(20))
					ELSE ''PRICE PROTECTION''
					END = A.RS_CONTRACT_SID
			)
		
	) A
GROUP BY HIERARCHY_NO
	,LEVEL_NAME
	,PERIOD
	,YEAR'
			)

	EXEC sp_executesql @D_SQL

	IF OBJECT_ID('TEMPDB..#TOTAL_DISCOUNT1') IS NOT NULL
		DROP TABLE #TOTAL_DISCOUNT1

	SELECT FD.YEAR
		,FD.PERIOD
		,COALESCE((NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
		,COALESCE((NAD.ACTUAL_SALES), 0) AS ACTUAL_SALES
		,FD.HIERARCHY_NO
		,FD.LEVEL_NAME
	INTO #TOTAL_DISCOUNT1
	FROM #DATA_TABLE1 FD
	LEFT JOIN #TOTAL_NM_DISCOUNT_PROJECTION1 NSP ON NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.LEVEL_NAME = FD.LEVEL_NAME
		AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
	LEFT JOIN #TOTAL_NM_ACTUAL_DISCOUNT1 NAD ON NAD.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAD.LEVEL_NAME = FD.LEVEL_NAME
		AND NAD.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAD.YEAR = FD.YEAR
		AND NAD.PERIOD = FD.PERIOD

	IF OBJECT_ID('TEMPDB..#TOTAL_PPA_SUPP_MANDATED1') IS NOT NULL
		DROP TABLE #TOTAL_PPA_SUPP_MANDATED1

	SELECT FD.YEAR
		,FD.PERIOD
		, COALESCE((NSP.PROJECTION_DISCOUNT_DOLLAR), 0) AS PPA_DISCOUNT_PROJECTED
		, COALESCE((NAS.ACTUAL_DISCOUNT_DOLLAR), 0) AS PPA_ACTUAL_SALES
		, COALESCE((NSP.PPA_RPU_PROJECTED), 0) AS PPA_RPU_PROJECTED
		, COALESCE((PPA_ACTUAL_SALES1), 0) AS PPA_ACTUAL_SALES1
		, COALESCE((PPA_ACTUAL_UNITS1), 0) AS PPA_ACTUAL_UNITS1
		, COALESCE((PPA_PROJECTION_SALES1), 0) AS PPA_PROJECTION_SALES1
		, COALESCE((PPA_PROJECTION_UNITS1), 0) AS PPA_PROJECTION_UNITS1
		,FD.HIERARCHY_NO
		,FD.LEVEL_NAME
	INTO #TOTAL_PPA_SUPP_MANDATED1
	FROM #DATA_TABLE1 FD
	LEFT JOIN #TOTAL_NM_PPA_PROJECTION1 NSP ON NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.LEVEL_NAME = FD.LEVEL_NAME
		AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
	LEFT JOIN #TOTAL_NM_ACTUAL_PPA1 NAS ON NAS.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAS.LEVEL_NAME = FD.LEVEL_NAME
		AND NAS.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD

	-------------------------------------------------------------------------------------------
	IF OBJECT_ID('TEMPDB..#TEMP_FINAL') IS NOT NULL
		DROP TABLE #TEMP_FINAL

	SELECT A.PERIOD
		,GTS.YEAR
		,A.ACT_AMOUNT_WITHDRAWN
		,A.ACT_UNITS_WITHDRAWN
		,A.FOR_AMOUNT_WITHDRAWN
		,A.FOR_UNITS_WITHDRAWN
		,A.DEMAND_SALES_ACTUAL
		,A.ACT_GROSS_UNITS
		,A.DEMAND_SALES_PROJECTED
		,A.FOR_GROSS_UNITS
		,GTS.GTS_SALES_ACTUALS
		,GTS.GTS_SALES_PROJECTED
		,GTS.UNITS
	INTO #TEMP_FINAL
	FROM (
		SELECT INVENTORY.PERIOD
			,INVENTORY.ACT_AMOUNT_WITHDRAWN
			,INVENTORY.ACT_UNITS_WITHDRAWN
			,INVENTORY.FOR_AMOUNT_WITHDRAWN
			,INVENTORY.FOR_UNITS_WITHDRAWN
			,DEMAND.DEMAND_SALES_ACTUAL
			,DEMAND.ACT_GROSS_UNITS
			,DEMAND.DEMAND_SALES_PROJECTED
			,DEMAND.FOR_GROSS_UNITS
			,INVENTORY.YEAR
		FROM (
			SELECT   SUM(ACT_AMOUNT_WITHDRAWN) AS ACT_AMOUNT_WITHDRAWN
				,  SUM(ACT_UNITS_WITHDRAWN) AS ACT_UNITS_WITHDRAWN
				,  SUM(FOR_AMOUNT_WITHDRAWN) AS FOR_AMOUNT_WITHDRAWN
				,  SUM(FOR_UNITS_WITHDRAWN) AS FOR_UNITS_WITHDRAWN
				,PERIOD
				,YEAR
			FROM #INVENTORY
			GROUP BY PERIOD
				,YEAR
			) INVENTORY
		LEFT JOIN (
			SELECT   SUM(ACT_GROSS_AMOUNT) AS DEMAND_SALES_ACTUAL
				,  SUM(ACT_GROSS_UNITS) AS ACT_GROSS_UNITS
				,  SUM(COALESCE(FOR_GROSS_AMOUNT, ACT_GROSS_AMOUNT)) AS DEMAND_SALES_PROJECTED
				,  SUM(FOR_GROSS_UNITS) AS FOR_GROSS_UNITS
				,PERIOD
				,YEAR
			FROM #DEMAND D
			GROUP BY PERIOD
				,YEAR
			) DEMAND ON INVENTORY.YEAR = DEMAND.YEAR
			AND INVENTORY.PERIOD = DEMAND.PERIOD
		) A
	LEFT JOIN (
		SELECT   SUM(GTS_SALES_ACTUALS) AS GTS_SALES_ACTUALS
			,  SUM(GTS_SALES_PROJECTED) AS GTS_SALES_PROJECTED
			,SUM(GTS.UNITS) UNITS
			,PERIOD
			,YEAR
		FROM #TEMP_GTS_DETAILS GTS
		GROUP BY PERIOD
			,YEAR
		) GTS ON GTS.PERIOD = A.PERIOD
		AND GTS.YEAR = A.YEAR
	ORDER BY YEAR
		,PERIOD

	INSERT INTO #PIVOT_RESULT (
		PROJECTION_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,CP_INDICATOR
		,YEAR
		,PERIOD
		,CONTRACT_SALES_ACTUALS
		,CONTRACT_SALES_PROJECTED
		,CONTRACT_UNITS_ACTUALS
		,CONTRACT_UNITS_PROJECTED
		,EX_FACTORY_SALES_ACTUALS
		,EX_FACTORY_SALES_PROJECTED
		,GTS_UNITS
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,EX_FACTORY_SALES_ACTUALS_PERCENT
		,EX_FACTORY_SALES_PROJECTED_PERCENT
		,PPA_DISCOUNT
		,PPA_DISCOUNT_PROJECTED
		,PPA_DISCOUNT_PERCENTAGE
		,PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,DEMAND_SALES_PROJECTED
		,NET_SALES
		,NET_SALES_PROJECTED
		,DEMAND_SALES_ACTUAL
		,INVENTORY_WITHDRAWAL_ACTUAL
		,INVENTORY_WITHDRAWAL_PROJECTED
		,DEMAND_SALES_ACTUAL_PERCENT
		,DEMAND_SALES_PROJECTED_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,TOTAL_DISCOUNT_RPU_ACTUALS
		,TOTAL_DISCOUNT_RPU_PROJECTED
		,TOTAL_PPA_RPU_ACTUALS
		,TOTAL_PPA_RPU_PROJECTED
		,TOTAL_RPU_ACTUAL
		,TOTAL_PROJECTED_RPU
		,COGS_ACTUAL
		,COGS_PROJECTED
		,NET_PROFIT_ACTUAL
		,NET_PROFIT_PROJECTED
		,RETURNS_ACTUAL_AMOUNT
		,RETURNS_ACTUAL_PERCENTAGE
		,RETURNS_PROJECTED_AMOUNT
		,RETURNS_PROJECTED_PERCENTAGE
		,TOTAL_RETURNS_RPU_ACTAULS
		,TOTAL_RETURNS_RPU_PROJECTED
		,NET_SALES_OF_EX_FACTORY_ACTUALS
		,NET_SALES_OF_EX_FACTORY_PROJECTED
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
		)
	SELECT @FIRST_PROJ_SID
		,S.HIERARCHY_NO
		,S.LEVEL_NAME
		,@CP_INDICATOR
		,S.YEAR
		,S.PERIOD
		,  ISNULL(S.ACTUAL_SALES, 0) AS CONTRACT_SALES_ACTUALS
		,  ISNULL(S.PROJECTION_SALES, 0) AS CONTRACT_SALES_PROJECTED
		,  ISNULL(S.ACTUAL_UNITS, 0) AS CONTRACT_UNITS_ACTUALS
		,  ISNULL(S.PROJECTION_UNITS, 0) AS CONTRACT_UNITS_PROJECTED
		,  ISNULL(TF.GTS_SALES_ACTUALS, 0) AS EX_FACTORY_SALES_ACTUALS
		,  ISNULL(TF.GTS_SALES_PROJECTED, 0) AS EX_FACTORY_SALES_PROJECTED
		,  ISNULL(TF.UNITS, 0) AS GTS_UNITS
		,  ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PSM.PPA_ACTUAL_SALES, 0) AS TOTAL_DISCOUNT
		,  ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) AS TOTAL_DISCOUNT_PROJECTED
		,  (ISNULL((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0)) / NULLIF(S.ACTUAL_SALES, 0), 0)) * 100 AS TOTAL_DISCOUNT_PERCENTAGE
		,  (ISNULL((ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_SALES, 0), 0)) * 100 AS TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,  (ISNULL(S.ACTUAL_SALES / NULLIF(GTS_SALES_ACTUALS, 0), 0)) * 100 AS EX_FACTORY_SALES_ACTUALS_PERCENT
		,  (ISNULL(S.PROJECTION_SALES / NULLIF(TF.GTS_SALES_PROJECTED, 0), 0)) * 100 AS EX_FACTORY_SALES_PROJECTED_PERCENT
		,  ISNULL(PSM.PPA_ACTUAL_SALES, 0) AS PPA_DISCOUNT
		,  ISNULL(PSM.PPA_DISCOUNT_PROJECTED, 0) AS PPA_DISCOUNT_PROJECTED
		,  ISNULL(PSM.PPA_ACTUAL_SALES / NULLIF(PSM.PPA_ACTUAL_SALES1, 0), 0) * 100 AS PPA_DISCOUNT_PERCENTAGE
		,  ISNULL(PSM.PPA_DISCOUNT_PROJECTED / NULLIF(PSM.PPA_PROJECTION_SALES1, 0), 0) * 100 AS PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,  ISNULL(TF.DEMAND_SALES_PROJECTED, 0) AS DEMAND_SALES_PROJECTED
		,  ISNULL(S.ACTUAL_SALES, 0) - (ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PSM.PPA_ACTUAL_SALES, 0))AS NET_SALES
		,  ISNULL(S.PROJECTION_SALES, 0) - (ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PSM.PPA_DISCOUNT_PROJECTED, 0)) AS NET_SALES_PROJECTED
		,  ISNULL(TF.DEMAND_SALES_ACTUAL, 0) AS DEMAND_SALES_ACTUAL
		,  ISNULL(TF.ACT_AMOUNT_WITHDRAWN, 0) AS INVENTORY_WITHDRAWAL_ACTUAL
		,  ISNULL(TF.FOR_AMOUNT_WITHDRAWN, 0) AS INVENTORY_WITHDRAWAL_PROJECTED
		,  (ISNULL(S.ACTUAL_SALES / NULLIF(TF.DEMAND_SALES_ACTUAL, 0), 0)) * 100 AS DEMAND_SALES_ACTUAL_PERCENT
		,  (ISNULL(S.PROJECTION_SALES / NULLIF(TF.DEMAND_SALES_PROJECTED, 0), 0)) * 100 AS DEMAND_SALES_PROJECTED_PERCENT
		,  (ISNULL(S.ACTUAL_SALES / NULLIF(TF.ACT_AMOUNT_WITHDRAWN, 0), 0)) * 100 AS INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,  (ISNULL(S.PROJECTION_SALES / NULLIF(TF.FOR_AMOUNT_WITHDRAWN, 0), 0)) * 100 ASINVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,  (ISNULL(ND.ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0)) AS TOTAL_DISCOUNT_RPU_ACTUALS
		,  (ISNULL(ND.PROJECTION_SALES / NULLIF(S.PROJECTION_UNITS, 0), 0)) AS TOTAL_DISCOUNT_RPU_PROJECTED
		,  (ISNULL(PSM.PPA_ACTUAL_SALES / NULLIF(PSM.PPA_ACTUAL_UNITS1, 0), 0)) AS TOTAL_PPA_RPU_ACTUALS
		,  (ISNULL(PSM.PPA_DISCOUNT_PROJECTED / NULLIF(PSM.PPA_PROJECTION_UNITS1, 0), 0))  AS TOTAL_PPA_RPU_PROJECTED 
		,  (ISNULL((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PSM.PPA_ACTUAL_SALES, 0)) / NULLIF(S.ACTUAL_UNITS, 0), 0))AS TOTAL_RPU_ACTUAL
		,  (ISNULL((ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_UNITS, 0), 0)) AS TOTAL_PROJECTED_RPU
		,ISNULL(S.COGS_ACTUAL, 0) AS COGS_ACTUAL 
		,ISNULL(S.COGS_PROJECTED, 0) AS COGS_PROJECTED 
		, ((ISNULL(S.ACTUAL_SALES, 0) - (ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PSM.PPA_ACTUAL_SALES, 0)) - ISNULL(S.COGS_ACTUAL, 0))) AS NET_PROFIT_ACTUAL
		,((ISNULL(S.PROJECTION_SALES, 0) - (ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PSM.PPA_DISCOUNT_PROJECTED, 0))) - (ISNULL(S.COGS_PROJECTED, 0))) AS NET_PROFIT_PROJECTED 
		, 000000.0 AS RETURNS_ACTUAL_AMOUNT
		,000000.0 AS RETURNS_ACTUAL_PERCENTAGE
		, 000000.0 AS RETURNS_PROJECTED_AMOUNT
		,000000.0 AS RETURNS_PROJECTED_PERCENTAGE
		, 000000.0 AS TOTAL_RETURNS_RPU_ACTAULS
		, 000000.0 AS TOTAL_RETURNS_RPU_PROJECTED 
		,coalesce((Isnull(S.ACTUAL_SALES, 0) - (Isnull(ND.ACTUAL_SALES, 0) + Isnull(PSM.PPA_ACTUAL_SALES, 0))) / nullif(TF.GTS_SALES_ACTUALS, 0), 0) * 100 AS NET_SALES_OF_EX_FACTORY_ACTUALS 
		,coalesce((Isnull(S.PROJECTION_SALES, 0) - (Isnull(ND.PROJECTION_SALES, 0) + Isnull(PSM.PPA_DISCOUNT_PROJECTED, 0))) / nullif(TF.GTS_SALES_PROJECTED, 0), 0) * 100 AS NET_SALES_OF_EX_FACTORY_PROJECTED 
		,COALESCE((Isnull(ND.ACTUAL_SALES, 0) + Isnull(PSM.PPA_ACTUAL_SALES, 0)) / NULLIF(TF.GTS_SALES_ACTUALS, 0), 0) * 100 AS DISCOUNT_OF_EX_FACTORY_ACTUALS 
		, COALESCE((Isnull(ND.PROJECTION_SALES, 0) + Isnull(PPA_DISCOUNT_PROJECTED, 0)) / NULLIF(TF.GTS_SALES_PROJECTED, 0), 0) * 100 AS DISCOUNT_OF_EX_FACTORY_PROJECTED
	FROM #SALES1 S
	LEFT JOIN #TOTAL_DISCOUNT1 ND ON S.YEAR = ND.YEAR
		AND S.PERIOD = ND.PERIOD
		AND S.HIERARCHY_NO = ND.HIERARCHY_NO
		AND S.LEVEL_NAME = ND.LEVEL_NAME
	LEFT JOIN #TOTAL_PPA_SUPP_MANDATED1 PSM ON S.YEAR = PSM.YEAR
		AND S.PERIOD = PSM.PERIOD
		AND S.HIERARCHY_NO = PSM.HIERARCHY_NO
		AND S.LEVEL_NAME = PSM.LEVEL_NAME
	LEFT JOIN #TEMP_FINAL TF ON TF.YEAR = S.YEAR
		AND TF.PERIOD = S.PERIOD

	IF Object_id('TEMPDB..#TEMP_FINAL_HIERARCHY') IS NOT NULL
		DROP TABLE #TEMP_FINAL_HIERARCHY

	SELECT HIERARCHY_NO
		,LEVEL_NAME
		,PERIOD
		,GTS.YEAR
		,  SUM(GTS_SALES_ACTUALS) AS GTS_SALES_ACTUALS
		, SUM(ISNULL(GTS_SALES_PROJECTED, GTS_SALES_ACTUALS)) AS GTS_SALES_PROJECTED 
	INTO #TEMP_FINAL_HIERARCHY
	FROM #TEMP_GTS_DETAILS GTS
	JOIN ITEM_MASTER IM ON GTS.ITEMID = IM.ITEM_ID
	JOIN (
		SELECT HIERARCHY_NO
			,LEVEL_NAME
			,ITEM_MASTER_SID
		FROM #TEMP_CCP
		GROUP BY HIERARCHY_NO
			,LEVEL_NAME
			,ITEM_MASTER_SID
		) HI ON HI.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
	GROUP BY HIERARCHY_NO
		,LEVEL_NAME
		,PERIOD
		,YEAR

	IF OBJECT_ID('TEMPDB.DBO.#RESULT', 'U') IS NOT NULL
		DROP TABLE #RESULT;------------------DETAIL_DISCOUNT details based on projections

	CREATE TABLE #RESULT (
		PROJECTION_MASTER_SID INT
		,HIERARCHY_NO VARCHAR(100)
		,LEVEL_NAME VARCHAR(100)
		,CP_INDICATOR VARCHAR(10)
		,YEAR INT
		,PERIOD INT
		,RS_NAME VARCHAR(100)
		,TOTAL_DISCOUNT NUMERIC(22, 6)
		,TOTAL_DISCOUNT_PROJECTED NUMERIC(22, 6)
		,TOTAL_DISCOUNT_PERCENTAGE NUMERIC(22, 6)
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
		,TOTAL_RPU NUMERIC(22, 6)
		,TOTAL_PROJECTED_RPU NUMERIC(22, 6)
		,DISCOUNT_OF_EX_FACTORY_ACTUALS NUMERIC(22, 6)
		,DISCOUNT_OF_EX_FACTORY_PROJECTED NUMERIC(22, 6)
		)
	INSERT INTO #RESULT (
		PROJECTION_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,CP_INDICATOR
		,YEAR
		,PERIOD
		,RS_NAME
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
		)
	SELECT @FIRST_PROJ_SID
		,RD.HIERARCHY_NO
		,RD.LEVEL_NAME
		,@CP_INDICATOR
		,ND.YEAR
		,ND.PERIOD
		,RS_NAME
		,ND.ACTUAL_SALES
		,ND.PROJECTION_SALES
		,COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_SALES, 0), 0) * 100
		,COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_SALES, 0), 0) * 100
		,COALESCE(ND.ACTUAL_SALES / NULLIF(RD.NM_ACTUAL_UNITS, 0), 0)
		,COALESCE(ND.PROJECTION_SALES / NULLIF(RD.NM_PROJECTED_UNITS, 0), 0)
		,COALESCE(ND.ACTUAL_SALES / NULLIF(tfh.GTS_SALES_ACTUALS, 0), 0) * 100
		,COALESCE(ND.PROJECTION_SALES / NULLIF(tfh.GTS_SALES_PROJECTED, 0), 0) * 100
	FROM #DISCOUNT1 ND
	INNER JOIN #SALES1 RD ON RD.YEAR = ND.YEAR
		AND RD.PERIOD = ND.PERIOD
		AND RD.HIERARCHY_NO = ND.HIERARCHY_NO
		AND RD.LEVEL_NAME = ND.LEVEL_NAME
	INNER JOIN #TEMP_FINAL_HIERARCHY tfh ON tfh.YEAR = ND.YEAR
		AND tfh.PERIOD = ND.PERIOD
		AND tfh.HIERARCHY_NO = ND.HIERARCHY_NO
		AND tfh.LEVEL_NAME = ND.LEVEL_NAME
	
	UNION ALL
	
	SELECT @FIRST_PROJ_SID
		,RD.HIERARCHY_NO
		,RD.LEVEL_NAME
		,@CP_INDICATOR
		,PD.YEAR
		,PD.PERIOD
		,RS_NAME
		,PD.PPA_ACTUAL_SALES
		,PD.PPA_DISCOUNT_PROJECTED
		,COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(PD.PPA_ACTUAL_SALES1, 0), 0) * 100
		,COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(PD.PPA_PROJECTION_SALES1, 0), 0) * 100
		,COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(PD.PPA_ACTUAL_UNITS1, 0), 0)
		,COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(PD.PPA_PROJECTION_UNITS1, 0), 0)
		,COALESCE(PD.PPA_ACTUAL_SALES / NULLIF(tfh.GTS_SALES_ACTUALS, 0), 0) * 100
		,COALESCE(PD.PPA_DISCOUNT_PROJECTED / NULLIF(tfh.GTS_SALES_PROJECTED, 0), 0) * 100
	FROM #PPA_SUPP_MANDATED1 PD
	INNER JOIN #SALES1 RD ON RD.YEAR = PD.YEAR
		AND RD.PERIOD = PD.PERIOD
		AND RD.HIERARCHY_NO = PD.HIERARCHY_NO
		AND RD.LEVEL_NAME = PD.LEVEL_NAME
	INNER JOIN #TEMP_FINAL_HIERARCHY tfh ON tfh.YEAR = PD.YEAR
		AND tfh.PERIOD = PD.PERIOD
		AND tfh.HIERARCHY_NO = PD.HIERARCHY_NO
		AND tfh.LEVEL_NAME = PD.LEVEL_NAME

	IF @VIEW = 'DETAIL_TOTAL_DISCOUNT'
	BEGIN--------------------------------------------DETAIL_TOTAL_DISCOUNT output
		SELECT DISTINCT PROJECTION_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,CP_INDICATOR
		,YEAR
		,PERIOD
		,CONTRACT_SALES_ACTUALS
		,CONTRACT_SALES_PROJECTED
		,CONTRACT_UNITS_ACTUALS
		,CONTRACT_UNITS_PROJECTED
		,EX_FACTORY_SALES_ACTUALS
		,EX_FACTORY_SALES_PROJECTED
		,GTS_UNITS
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,EX_FACTORY_SALES_ACTUALS_PERCENT
		,EX_FACTORY_SALES_PROJECTED_PERCENT
		,PPA_DISCOUNT
		,PPA_DISCOUNT_PROJECTED
		,PPA_DISCOUNT_PERCENTAGE
		,PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,DEMAND_SALES_PROJECTED
		,NET_SALES
		,NET_SALES_PROJECTED
		,DEMAND_SALES_ACTUAL
		,INVENTORY_WITHDRAWAL_ACTUAL
		,INVENTORY_WITHDRAWAL_PROJECTED
		,DEMAND_SALES_ACTUAL_PERCENT
		,DEMAND_SALES_PROJECTED_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,TOTAL_DISCOUNT_RPU_ACTUALS
		,TOTAL_DISCOUNT_RPU_PROJECTED
		,TOTAL_PPA_RPU_ACTUALS
		,TOTAL_PPA_RPU_PROJECTED
		,TOTAL_RPU_ACTUAL
		,TOTAL_PROJECTED_RPU
		,COGS_ACTUAL
		,COGS_PROJECTED
		,NET_PROFIT_ACTUAL
		,NET_PROFIT_PROJECTED
		,RETURNS_ACTUAL_AMOUNT
		,RETURNS_ACTUAL_PERCENTAGE
		,RETURNS_PROJECTED_AMOUNT
		,RETURNS_PROJECTED_PERCENTAGE
		,TOTAL_RETURNS_RPU_ACTAULS
		,TOTAL_RETURNS_RPU_PROJECTED
		,NET_SALES_OF_EX_FACTORY_ACTUALS
		,NET_SALES_OF_EX_FACTORY_PROJECTED
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
		FROM #PIVOT_RESULT
		ORDER BY HIERARCHY_NO
			,LEVEL_NAME
			,[YEAR]
			,PERIOD
	END
	ELSE IF (@ORDER_FLAG = 1)
	BEGIN
		SELECT DISTINCT PROJECTION_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,CP_INDICATOR
		,YEAR
		,PERIOD
		,RS_NAME
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
		FROM #RESULT
		ORDER BY HIERARCHY_NO
			,LEVEL_NAME
			,[YEAR]
			,PERIOD
	END
	ELSE
	BEGIN
		SELECT DISTINCT PROJECTION_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,CP_INDICATOR
		,YEAR
		,PERIOD
		,RS_NAME
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
		FROM #RESULT
		ORDER BY HIERARCHY_NO
			,RS_NAME
			,LEVEL_NAME
			,[YEAR]
			,PERIOD
	END
   
END


GO
