/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.stpl.app.global.netsalesformula.ui;

import com.stpl.app.global.abstractsearch.util.ConstantUtil;
import com.stpl.app.global.abstractsearch.view.AbstractSearchView;
import com.stpl.app.global.common.dto.SessionDTO;
import com.stpl.app.global.common.util.HelperListUtil;
import com.stpl.app.global.ifp.ui.ItemFamilyPlanUI;
import com.stpl.app.global.netsalesformula.ui.view.NSFView;
import com.stpl.app.security.StplSecurity;
import com.stpl.app.ui.DateToStringConverterFactory;
import com.stpl.app.util.CommonUIUtils;
import com.stpl.app.util.ConstantsUtils;
import com.stpl.app.util.ErrorCodeUtil;
import com.stpl.portal.kernel.exception.PortalException;
import com.stpl.portal.kernel.exception.SystemException;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.Navigator;
import com.vaadin.server.VaadinPortletSession;
import com.vaadin.server.VaadinRequest;
import com.vaadin.server.VaadinSession;
import com.vaadin.ui.UI;
import java.util.Collection;
import java.util.Iterator;
import javax.portlet.ActionRequest;
import javax.portlet.ActionResponse;
import javax.portlet.EventRequest;
import javax.portlet.EventResponse;
import javax.portlet.PortletMode;
import javax.portlet.RenderRequest;
import javax.portlet.RenderResponse;
import javax.portlet.ResourceRequest;
import javax.portlet.ResourceResponse;
import org.jboss.logging.Logger;

/**
 *
 * @author karthikraja.k
 */
@SuppressWarnings("serial")
// @PreserveOnRefresh
public class NetSalesFormulaUI extends UI implements VaadinPortletSession.PortletListener {
    


	/**
	 * The Constant LOGGER.
	 */
	private static final Logger LOGGER = Logger.getLogger(ItemFamilyPlanUI.class);
         
        SessionDTO sessionDTO=new SessionDTO();

	/**
	 * Initial method for NetSalesFormulaUI.
	 *
	 * @param request
	 *            the request
	 */
        @AutoGenerated
        Navigator navigator;
        PortletMode customMode;
	@Override
	protected void init(final VaadinRequest request) {

		try {
                        setId("NSF");
                        CommonUIUtils.beforeUnloadCloseUi(this,sessionDTO,ConstantUtil.NET_SALES_FORMULA);
                        setStyleName("bootstrap-company-ui");
                        addStyleName("bootstrap");
                        addStyleName("bootstrap-bb");
			final String userId = request.getRemoteUser();
			VaadinSession.getCurrent().setAttribute(ConstantsUtils.USER_ID, userId);
			final String sessionId = request.getWrappedSession().getId();
			                 VaadinSession.getCurrent().setAttribute(ConstantsUtils.SESSION_ID, sessionId);
                   
                    VaadinSession.getCurrent().setConverterFactory(new DateToStringConverterFactory());
                    StplSecurity.getUserName();
                    /**
                     * The navigator.
                     */
                    navigator = new Navigator(this, this);
                    HelperListUtil helperListUtil = HelperListUtil.getInstance();
                    helperListUtil.loadValuesWithListName(ConstantUtil.NET_SALES_FORMULA);
                    navigator.addView(AbstractSearchView.NAME, new AbstractSearchView(ConstantUtil.NET_SALES_FORMULA,sessionDTO));
                    NSFView nsfView=new NSFView(sessionDTO);
                    navigator.addView(NSFView.NAME, nsfView);

                    customMode = new PortletMode("config");
                    if (VaadinSession.getCurrent() instanceof VaadinPortletSession) {
                        VaadinPortletSession portletsession
                                    = (VaadinPortletSession) VaadinSession.getCurrent();
                            // Add a custom listener to handle action and
                            // render requests.
                            portletsession.addPortletListener(this);
                        }
			navigator.setErrorView(new AbstractSearchView(ConstantUtil.NET_SALES_FORMULA));

		} catch (SystemException ex) {
                        final  String errorMsg = ErrorCodeUtil.getErrorMessage(ex);
                        LOGGER.error(errorMsg);
                } catch (PortalException pe) {
			LOGGER.error(pe);
		} catch (Exception e) {
			LOGGER.error(e);
		}
	}

    @Override
    public void handleRenderRequest(RenderRequest request, RenderResponse response, UI uI) {
        VaadinSession.getCurrent().getNextUIid();
       Collection<UI> uiList =   VaadinSession.getCurrent().getUIs();
       for (Iterator<UI> iterator = uiList.iterator(); iterator.hasNext();) {
    	  
		UI ui2 = (UI) iterator.next();
		if(ui2.getId().equals("NSF")){
			ui2.close();
		}	
	}
       getUI().getNavigator().navigateTo(AbstractSearchView.NAME);
    }

    @Override
    public void handleActionRequest(ActionRequest request, ActionResponse response, UI uI) {
    }

    @Override
    public void handleEventRequest(EventRequest request, EventResponse response, UI uI) {
    }

    @Override
    public void handleResourceRequest(ResourceRequest request, ResourceResponse response, UI uI) {
    }
}
