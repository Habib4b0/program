package com.stpl.app.model.impl;

import com.stpl.app.model.MasterDataFiles;
import com.stpl.app.model.MasterDataFilesModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the MasterDataFiles service. Represents a row in the &quot;MASTER_DATA_FILES&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.MasterDataFilesModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link MasterDataFilesImpl}.
 * </p>
 *
 * @author
 * @see MasterDataFilesImpl
 * @see com.stpl.app.model.MasterDataFiles
 * @see com.stpl.app.model.MasterDataFilesModel
 * @generated
 */
public class MasterDataFilesModelImpl extends BaseModelImpl<MasterDataFiles>
    implements MasterDataFilesModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a master data files model instance should use the {@link com.stpl.app.model.MasterDataFiles} interface instead.
     */
    public static final String TABLE_NAME = "MASTER_DATA_FILES";
    public static final Object[][] TABLE_COLUMNS = {
            { "MASTER_TABLE_SID", Types.INTEGER },
            { "MASTER_DATA_FILES_SID", Types.INTEGER },
            { "MASTER_TABLE_NAME", Types.VARCHAR },
            { "FILE_PATH", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER }
        };
    public static final String TABLE_SQL_CREATE = "create table MASTER_DATA_FILES (MASTER_TABLE_SID INTEGER,MASTER_DATA_FILES_SID INTEGER not null primary key IDENTITY,MASTER_TABLE_NAME VARCHAR(75) null,FILE_PATH VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY INTEGER)";
    public static final String TABLE_SQL_DROP = "drop table MASTER_DATA_FILES";
    public static final String ORDER_BY_JPQL = " ORDER BY masterDataFiles.masterDataFilesSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY MASTER_DATA_FILES.MASTER_DATA_FILES_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.MasterDataFiles"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.MasterDataFiles"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.MasterDataFiles"));
    private static ClassLoader _classLoader = MasterDataFiles.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            MasterDataFiles.class
        };
    private int _masterTableSid;
    private int _masterDataFilesSid;
    private String _masterTableName;
    private String _filePath;
    private Date _createdDate;
    private int _createdBy;
    private MasterDataFiles _escapedModel;

    public MasterDataFilesModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _masterDataFilesSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setMasterDataFilesSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _masterDataFilesSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return MasterDataFiles.class;
    }

    @Override
    public String getModelClassName() {
        return MasterDataFiles.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("masterTableSid", getMasterTableSid());
        attributes.put("masterDataFilesSid", getMasterDataFilesSid());
        attributes.put("masterTableName", getMasterTableName());
        attributes.put("filePath", getFilePath());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer masterTableSid = (Integer) attributes.get("masterTableSid");

        if (masterTableSid != null) {
            setMasterTableSid(masterTableSid);
        }

        Integer masterDataFilesSid = (Integer) attributes.get(
                "masterDataFilesSid");

        if (masterDataFilesSid != null) {
            setMasterDataFilesSid(masterDataFilesSid);
        }

        String masterTableName = (String) attributes.get("masterTableName");

        if (masterTableName != null) {
            setMasterTableName(masterTableName);
        }

        String filePath = (String) attributes.get("filePath");

        if (filePath != null) {
            setFilePath(filePath);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }
    }

    @Override
    public int getMasterTableSid() {
        return _masterTableSid;
    }

    @Override
    public void setMasterTableSid(int masterTableSid) {
        _masterTableSid = masterTableSid;
    }

    @Override
    public int getMasterDataFilesSid() {
        return _masterDataFilesSid;
    }

    @Override
    public void setMasterDataFilesSid(int masterDataFilesSid) {
        _masterDataFilesSid = masterDataFilesSid;
    }

    @Override
    public String getMasterTableName() {
        if (_masterTableName == null) {
            return StringPool.BLANK;
        } else {
            return _masterTableName;
        }
    }

    @Override
    public void setMasterTableName(String masterTableName) {
        _masterTableName = masterTableName;
    }

    @Override
    public String getFilePath() {
        if (_filePath == null) {
            return StringPool.BLANK;
        } else {
            return _filePath;
        }
    }

    @Override
    public void setFilePath(String filePath) {
        _filePath = filePath;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public MasterDataFiles toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (MasterDataFiles) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        MasterDataFilesImpl masterDataFilesImpl = new MasterDataFilesImpl();

        masterDataFilesImpl.setMasterTableSid(getMasterTableSid());
        masterDataFilesImpl.setMasterDataFilesSid(getMasterDataFilesSid());
        masterDataFilesImpl.setMasterTableName(getMasterTableName());
        masterDataFilesImpl.setFilePath(getFilePath());
        masterDataFilesImpl.setCreatedDate(getCreatedDate());
        masterDataFilesImpl.setCreatedBy(getCreatedBy());

        masterDataFilesImpl.resetOriginalValues();

        return masterDataFilesImpl;
    }

    @Override
    public int compareTo(MasterDataFiles masterDataFiles) {
        int primaryKey = masterDataFiles.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof MasterDataFiles)) {
            return false;
        }

        MasterDataFiles masterDataFiles = (MasterDataFiles) obj;

        int primaryKey = masterDataFiles.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<MasterDataFiles> toCacheModel() {
        MasterDataFilesCacheModel masterDataFilesCacheModel = new MasterDataFilesCacheModel();

        masterDataFilesCacheModel.masterTableSid = getMasterTableSid();

        masterDataFilesCacheModel.masterDataFilesSid = getMasterDataFilesSid();

        masterDataFilesCacheModel.masterTableName = getMasterTableName();

        String masterTableName = masterDataFilesCacheModel.masterTableName;

        if ((masterTableName != null) && (masterTableName.length() == 0)) {
            masterDataFilesCacheModel.masterTableName = null;
        }

        masterDataFilesCacheModel.filePath = getFilePath();

        String filePath = masterDataFilesCacheModel.filePath;

        if ((filePath != null) && (filePath.length() == 0)) {
            masterDataFilesCacheModel.filePath = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            masterDataFilesCacheModel.createdDate = createdDate.getTime();
        } else {
            masterDataFilesCacheModel.createdDate = Long.MIN_VALUE;
        }

        masterDataFilesCacheModel.createdBy = getCreatedBy();

        return masterDataFilesCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(13);

        sb.append("{masterTableSid=");
        sb.append(getMasterTableSid());
        sb.append(", masterDataFilesSid=");
        sb.append(getMasterDataFilesSid());
        sb.append(", masterTableName=");
        sb.append(getMasterTableName());
        sb.append(", filePath=");
        sb.append(getFilePath());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(22);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.MasterDataFiles");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>masterTableSid</column-name><column-value><![CDATA[");
        sb.append(getMasterTableSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>masterDataFilesSid</column-name><column-value><![CDATA[");
        sb.append(getMasterDataFilesSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>masterTableName</column-name><column-value><![CDATA[");
        sb.append(getMasterTableName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>filePath</column-name><column-value><![CDATA[");
        sb.append(getFilePath());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
