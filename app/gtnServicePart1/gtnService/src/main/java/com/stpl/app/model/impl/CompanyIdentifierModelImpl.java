/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.CompanyIdentifier;
import com.stpl.app.model.CompanyIdentifierModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CompanyIdentifier service. Represents a row in the &quot;COMPANY_IDENTIFIER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CompanyIdentifierModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CompanyIdentifierImpl}.
 * </p>
 *
 * @author
 * @see CompanyIdentifierImpl
 * @see CompanyIdentifier
 * @see CompanyIdentifierModel
 * @generated
 */
@ProviderType
public class CompanyIdentifierModelImpl extends BaseModelImpl<CompanyIdentifier>
	implements CompanyIdentifierModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a company identifier model instance should use the {@link CompanyIdentifier} interface instead.
	 */
	public static final String TABLE_NAME = "COMPANY_IDENTIFIER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "END_DATE", Types.TIMESTAMP },
			{ "COMPANY_IDENTIFIER_SID", Types.INTEGER },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "IDENTIFIER_STATUS", Types.INTEGER },
			{ "ENTITY_CODE", Types.VARCHAR },
			{ "RECORD_LOCK_STATUS", Types.BOOLEAN },
			{ "START_DATE", Types.TIMESTAMP },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SOURCE", Types.VARCHAR },
			{ "CREATED_BY", Types.INTEGER },
			{ "COMPANY_IDENTIFIER_VALUE", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "COMPANY_QUALIFIER_SID", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "INBOUND_STATUS", Types.VARCHAR },
			{ "COMPANY_MASTER_SID", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("END_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("COMPANY_IDENTIFIER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("IDENTIFIER_STATUS", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ENTITY_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RECORD_LOCK_STATUS", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("START_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("COMPANY_IDENTIFIER_VALUE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("COMPANY_QUALIFIER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("COMPANY_MASTER_SID", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table COMPANY_IDENTIFIER (END_DATE DATE null,COMPANY_IDENTIFIER_SID INTEGER not null primary key IDENTITY,MODIFIED_DATE DATE null,IDENTIFIER_STATUS INTEGER,ENTITY_CODE VARCHAR(75) null,RECORD_LOCK_STATUS BOOLEAN,START_DATE DATE null,CREATED_DATE DATE null,SOURCE VARCHAR(75) null,CREATED_BY INTEGER,COMPANY_IDENTIFIER_VALUE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,COMPANY_QUALIFIER_SID INTEGER,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,COMPANY_MASTER_SID INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table COMPANY_IDENTIFIER";
	public static final String ORDER_BY_JPQL = " ORDER BY companyIdentifier.companyStringIdentifierSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY COMPANY_IDENTIFIER.COMPANY_IDENTIFIER_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.CompanyIdentifier"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.CompanyIdentifier"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.column.bitmask.enabled.com.stpl.app.model.CompanyIdentifier"),
			true);
	public static final long COMPANYMASTERSID_COLUMN_BITMASK = 1L;
	public static final long COMPANYQUALIFIERSID_COLUMN_BITMASK = 2L;
	public static final long COMPANYSTRINGIDENTIFIERVALUE_COLUMN_BITMASK = 4L;
	public static final long IDENTIFIERSTATUS_COLUMN_BITMASK = 8L;
	public static final long STARTDATE_COLUMN_BITMASK = 16L;
	public static final long COMPANYSTRINGIDENTIFIERSID_COLUMN_BITMASK = 32L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.CompanyIdentifier"));

	public CompanyIdentifierModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _companyStringIdentifierSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setCompanyStringIdentifierSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _companyStringIdentifierSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CompanyIdentifier.class;
	}

	@Override
	public String getModelClassName() {
		return CompanyIdentifier.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("endDate", getEndDate());
		attributes.put("companyStringIdentifierSid",
			getCompanyStringIdentifierSid());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("identifierStatus", getIdentifierStatus());
		attributes.put("entityCode", getEntityCode());
		attributes.put("recordLockStatus", getRecordLockStatus());
		attributes.put("startDate", getStartDate());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("source", getSource());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("companyStringIdentifierValue",
			getCompanyStringIdentifierValue());
		attributes.put("batchId", getBatchId());
		attributes.put("companyQualifierSid", getCompanyQualifierSid());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("inboundStatus", getInboundStatus());
		attributes.put("companyMasterSid", getCompanyMasterSid());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Date endDate = (Date)attributes.get("endDate");

		if (endDate != null) {
			setEndDate(endDate);
		}

		Integer companyStringIdentifierSid = (Integer)attributes.get(
				"companyStringIdentifierSid");

		if (companyStringIdentifierSid != null) {
			setCompanyStringIdentifierSid(companyStringIdentifierSid);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer identifierStatus = (Integer)attributes.get("identifierStatus");

		if (identifierStatus != null) {
			setIdentifierStatus(identifierStatus);
		}

		String entityCode = (String)attributes.get("entityCode");

		if (entityCode != null) {
			setEntityCode(entityCode);
		}

		Boolean recordLockStatus = (Boolean)attributes.get("recordLockStatus");

		if (recordLockStatus != null) {
			setRecordLockStatus(recordLockStatus);
		}

		Date startDate = (Date)attributes.get("startDate");

		if (startDate != null) {
			setStartDate(startDate);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		String companyStringIdentifierValue = (String)attributes.get(
				"companyStringIdentifierValue");

		if (companyStringIdentifierValue != null) {
			setCompanyStringIdentifierValue(companyStringIdentifierValue);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		Integer companyQualifierSid = (Integer)attributes.get(
				"companyQualifierSid");

		if (companyQualifierSid != null) {
			setCompanyQualifierSid(companyQualifierSid);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}

		Integer companyMasterSid = (Integer)attributes.get("companyMasterSid");

		if (companyMasterSid != null) {
			setCompanyMasterSid(companyMasterSid);
		}
	}

	@Override
	public Date getEndDate() {
		return _endDate;
	}

	@Override
	public void setEndDate(Date endDate) {
		_endDate = endDate;
	}

	@Override
	public int getCompanyStringIdentifierSid() {
		return _companyStringIdentifierSid;
	}

	@Override
	public void setCompanyStringIdentifierSid(int companyStringIdentifierSid) {
		_companyStringIdentifierSid = companyStringIdentifierSid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getIdentifierStatus() {
		return _identifierStatus;
	}

	@Override
	public void setIdentifierStatus(int identifierStatus) {
		_columnBitmask |= IDENTIFIERSTATUS_COLUMN_BITMASK;

		if (!_setOriginalIdentifierStatus) {
			_setOriginalIdentifierStatus = true;

			_originalIdentifierStatus = _identifierStatus;
		}

		_identifierStatus = identifierStatus;
	}

	public int getOriginalIdentifierStatus() {
		return _originalIdentifierStatus;
	}

	@Override
	public String getEntityCode() {
		if (_entityCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _entityCode;
		}
	}

	@Override
	public void setEntityCode(String entityCode) {
		_entityCode = entityCode;
	}

	@Override
	public boolean getRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public boolean isRecordLockStatus() {
		return _recordLockStatus;
	}

	@Override
	public void setRecordLockStatus(boolean recordLockStatus) {
		_recordLockStatus = recordLockStatus;
	}

	@Override
	public Date getStartDate() {
		return _startDate;
	}

	@Override
	public void setStartDate(Date startDate) {
		_columnBitmask |= STARTDATE_COLUMN_BITMASK;

		if (_originalStartDate == null) {
			_originalStartDate = _startDate;
		}

		_startDate = startDate;
	}

	public Date getOriginalStartDate() {
		return _originalStartDate;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public String getCompanyStringIdentifierValue() {
		if (_companyStringIdentifierValue == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyStringIdentifierValue;
		}
	}

	@Override
	public void setCompanyStringIdentifierValue(
		String companyStringIdentifierValue) {
		_columnBitmask |= COMPANYSTRINGIDENTIFIERVALUE_COLUMN_BITMASK;

		if (_originalCompanyStringIdentifierValue == null) {
			_originalCompanyStringIdentifierValue = _companyStringIdentifierValue;
		}

		_companyStringIdentifierValue = companyStringIdentifierValue;
	}

	public String getOriginalCompanyStringIdentifierValue() {
		return GetterUtil.getString(_originalCompanyStringIdentifierValue);
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public int getCompanyQualifierSid() {
		return _companyQualifierSid;
	}

	@Override
	public void setCompanyQualifierSid(int companyQualifierSid) {
		_columnBitmask |= COMPANYQUALIFIERSID_COLUMN_BITMASK;

		if (!_setOriginalCompanyQualifierSid) {
			_setOriginalCompanyQualifierSid = true;

			_originalCompanyQualifierSid = _companyQualifierSid;
		}

		_companyQualifierSid = companyQualifierSid;
	}

	public int getOriginalCompanyQualifierSid() {
		return _originalCompanyQualifierSid;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	@Override
	public int getCompanyMasterSid() {
		return _companyMasterSid;
	}

	@Override
	public void setCompanyMasterSid(int companyMasterSid) {
		_columnBitmask |= COMPANYMASTERSID_COLUMN_BITMASK;

		if (!_setOriginalCompanyMasterSid) {
			_setOriginalCompanyMasterSid = true;

			_originalCompanyMasterSid = _companyMasterSid;
		}

		_companyMasterSid = companyMasterSid;
	}

	public int getOriginalCompanyMasterSid() {
		return _originalCompanyMasterSid;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public CompanyIdentifier toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CompanyIdentifier)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CompanyIdentifierImpl companyIdentifierImpl = new CompanyIdentifierImpl();

		companyIdentifierImpl.setEndDate(getEndDate());
		companyIdentifierImpl.setCompanyStringIdentifierSid(getCompanyStringIdentifierSid());
		companyIdentifierImpl.setModifiedDate(getModifiedDate());
		companyIdentifierImpl.setIdentifierStatus(getIdentifierStatus());
		companyIdentifierImpl.setEntityCode(getEntityCode());
		companyIdentifierImpl.setRecordLockStatus(getRecordLockStatus());
		companyIdentifierImpl.setStartDate(getStartDate());
		companyIdentifierImpl.setCreatedDate(getCreatedDate());
		companyIdentifierImpl.setSource(getSource());
		companyIdentifierImpl.setCreatedBy(getCreatedBy());
		companyIdentifierImpl.setCompanyStringIdentifierValue(getCompanyStringIdentifierValue());
		companyIdentifierImpl.setBatchId(getBatchId());
		companyIdentifierImpl.setCompanyQualifierSid(getCompanyQualifierSid());
		companyIdentifierImpl.setModifiedBy(getModifiedBy());
		companyIdentifierImpl.setInboundStatus(getInboundStatus());
		companyIdentifierImpl.setCompanyMasterSid(getCompanyMasterSid());

		companyIdentifierImpl.resetOriginalValues();

		return companyIdentifierImpl;
	}

	@Override
	public int compareTo(CompanyIdentifier companyIdentifier) {
		int primaryKey = companyIdentifier.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CompanyIdentifier)) {
			return false;
		}

		CompanyIdentifier companyIdentifier = (CompanyIdentifier)obj;

		int primaryKey = companyIdentifier.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
		CompanyIdentifierModelImpl companyIdentifierModelImpl = this;

		companyIdentifierModelImpl._originalIdentifierStatus = companyIdentifierModelImpl._identifierStatus;

		companyIdentifierModelImpl._setOriginalIdentifierStatus = false;

		companyIdentifierModelImpl._originalStartDate = companyIdentifierModelImpl._startDate;

		companyIdentifierModelImpl._originalCompanyStringIdentifierValue = companyIdentifierModelImpl._companyStringIdentifierValue;

		companyIdentifierModelImpl._originalCompanyQualifierSid = companyIdentifierModelImpl._companyQualifierSid;

		companyIdentifierModelImpl._setOriginalCompanyQualifierSid = false;

		companyIdentifierModelImpl._originalCompanyMasterSid = companyIdentifierModelImpl._companyMasterSid;

		companyIdentifierModelImpl._setOriginalCompanyMasterSid = false;

		companyIdentifierModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<CompanyIdentifier> toCacheModel() {
		CompanyIdentifierCacheModel companyIdentifierCacheModel = new CompanyIdentifierCacheModel();

		Date endDate = getEndDate();

		if (endDate != null) {
			companyIdentifierCacheModel.endDate = endDate.getTime();
		}
		else {
			companyIdentifierCacheModel.endDate = Long.MIN_VALUE;
		}

		companyIdentifierCacheModel.companyStringIdentifierSid = getCompanyStringIdentifierSid();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			companyIdentifierCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			companyIdentifierCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		companyIdentifierCacheModel.identifierStatus = getIdentifierStatus();

		companyIdentifierCacheModel.entityCode = getEntityCode();

		String entityCode = companyIdentifierCacheModel.entityCode;

		if ((entityCode != null) && (entityCode.length() == 0)) {
			companyIdentifierCacheModel.entityCode = null;
		}

		companyIdentifierCacheModel.recordLockStatus = getRecordLockStatus();

		Date startDate = getStartDate();

		if (startDate != null) {
			companyIdentifierCacheModel.startDate = startDate.getTime();
		}
		else {
			companyIdentifierCacheModel.startDate = Long.MIN_VALUE;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			companyIdentifierCacheModel.createdDate = createdDate.getTime();
		}
		else {
			companyIdentifierCacheModel.createdDate = Long.MIN_VALUE;
		}

		companyIdentifierCacheModel.source = getSource();

		String source = companyIdentifierCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			companyIdentifierCacheModel.source = null;
		}

		companyIdentifierCacheModel.createdBy = getCreatedBy();

		companyIdentifierCacheModel.companyStringIdentifierValue = getCompanyStringIdentifierValue();

		String companyStringIdentifierValue = companyIdentifierCacheModel.companyStringIdentifierValue;

		if ((companyStringIdentifierValue != null) &&
				(companyStringIdentifierValue.length() == 0)) {
			companyIdentifierCacheModel.companyStringIdentifierValue = null;
		}

		companyIdentifierCacheModel.batchId = getBatchId();

		String batchId = companyIdentifierCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			companyIdentifierCacheModel.batchId = null;
		}

		companyIdentifierCacheModel.companyQualifierSid = getCompanyQualifierSid();

		companyIdentifierCacheModel.modifiedBy = getModifiedBy();

		companyIdentifierCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = companyIdentifierCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			companyIdentifierCacheModel.inboundStatus = null;
		}

		companyIdentifierCacheModel.companyMasterSid = getCompanyMasterSid();

		return companyIdentifierCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(33);

		sb.append("{endDate=");
		sb.append(getEndDate());
		sb.append(", companyStringIdentifierSid=");
		sb.append(getCompanyStringIdentifierSid());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", identifierStatus=");
		sb.append(getIdentifierStatus());
		sb.append(", entityCode=");
		sb.append(getEntityCode());
		sb.append(", recordLockStatus=");
		sb.append(getRecordLockStatus());
		sb.append(", startDate=");
		sb.append(getStartDate());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", companyStringIdentifierValue=");
		sb.append(getCompanyStringIdentifierValue());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", companyQualifierSid=");
		sb.append(getCompanyQualifierSid());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append(", companyMasterSid=");
		sb.append(getCompanyMasterSid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(52);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.CompanyIdentifier");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>endDate</column-name><column-value><![CDATA[");
		sb.append(getEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyStringIdentifierSid</column-name><column-value><![CDATA[");
		sb.append(getCompanyStringIdentifierSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>identifierStatus</column-name><column-value><![CDATA[");
		sb.append(getIdentifierStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>entityCode</column-name><column-value><![CDATA[");
		sb.append(getEntityCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
		sb.append(getRecordLockStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>startDate</column-name><column-value><![CDATA[");
		sb.append(getStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyStringIdentifierValue</column-name><column-value><![CDATA[");
		sb.append(getCompanyStringIdentifierValue());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyQualifierSid</column-name><column-value><![CDATA[");
		sb.append(getCompanyQualifierSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyMasterSid</column-name><column-value><![CDATA[");
		sb.append(getCompanyMasterSid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CompanyIdentifier.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CompanyIdentifier.class
		};
	private Date _endDate;
	private int _companyStringIdentifierSid;
	private Date _modifiedDate;
	private int _identifierStatus;
	private int _originalIdentifierStatus;
	private boolean _setOriginalIdentifierStatus;
	private String _entityCode;
	private boolean _recordLockStatus;
	private Date _startDate;
	private Date _originalStartDate;
	private Date _createdDate;
	private String _source;
	private int _createdBy;
	private String _companyStringIdentifierValue;
	private String _originalCompanyStringIdentifierValue;
	private String _batchId;
	private int _companyQualifierSid;
	private int _originalCompanyQualifierSid;
	private boolean _setOriginalCompanyQualifierSid;
	private int _modifiedBy;
	private String _inboundStatus;
	private int _companyMasterSid;
	private int _originalCompanyMasterSid;
	private boolean _setOriginalCompanyMasterSid;
	private long _columnBitmask;
	private CompanyIdentifier _escapedModel;
}