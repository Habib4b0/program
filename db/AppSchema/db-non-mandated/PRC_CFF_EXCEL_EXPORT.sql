IF EXISTS (SELECT 'X'
           FROM   INFORMATION_SCHEMA.ROUTINES
           WHERE  ROUTINE_NAME = 'PRC_CFF_EXCEL_EXPORT'
                  AND ROUTINE_SCHEMA = 'DBO')
  BEGIN
      DROP PROCEDURE [dbo].[PRC_CFF_EXCEL_EXPORT]
  END

GO

CREATE PROCEDURE [dbo].[PRC_CFF_EXCEL_EXPORT] (@CFF_MASTER_SID         VARCHAR(500),
                                               @PROJ_FREQUENCY         VARCHAR(20),
                                               @SCREEN_NAME            VARCHAR(50),
                                               @VIEW                   VARCHAR(50) = NULL,
                                               @CP_INDICATOR           CHAR(1),
                                               @HIERARCHY_NO           VARCHAR(500) = NULL,
                                               @LEVEL_NO               INT = NULL,
                                               @CUSTOM_VIEW_MASTER_SID INT = NULL,
                                               @START_DATE             DATETIME = NULL,
                                               @TAB                    VARCHAR(50) = NULL,
                                               @USER_ID                INT,
                                               @SESSION_ID             VARCHAR(50),
											   @UOM_CODE VARCHAR(10) = NULL ,
											   @SALES_INCLUSION BIT = NULL ,
											   @DEDUCTION_INCLUSION BIT = NULL)
AS
  BEGIN
      BEGIN TRY
          SET NOCOUNT ON

      /**********************************************************************************************************
      ** FILE NAME         :      PRC_CFF_EXCEL_EXPORT.SQL
      ** PROCEDURE NAME    :      PRC_CFF_EXCEL_EXPORT
      ** DESCRIPTION             :      aggregation of projections attached to the particualr cff  with hierarchy level showing as output for both cff_results screen and cff_varicnace screen
      ** INPUT PARAMETERS  :      @CFF_MASTER_SID           - passing input as cff_master_sid
                                               @PROJ_FREQUENCY          - based on frequency it will display the data  monthly,quarterly semi annualy and annulaly
                               @SCREEN_NAME             - based on screen name if we pass assumptions it will display aggregation of actuals, projections attached to the first cff
                                                                                 screen_name<> assumptions it will display rest of cffs  display aggregation of projections attached to each cff as pivot view
                                        @VIEW                    - if we pass view as pivot means result will be order by year and period other than pivot it will order by year and period
                                          @HIERARCHY_NO            - based on the hierarchy number it will display the information 
                                          @LEVEL_NO                - based on level name chossen by user it will display the information 
                                          @CUSTOM_VIEW_MASTER_SID  - for each cff one customeview master will be present so we pass we pass customeviewmastersid for paricular cff it will displau information
                               @CP_INDICATOR            - if we pass indicator as c it will dispaly information about CUSTOMER_HIERARCHY_LEVEL  and pass p means display information about PRODUCT_HIERARCHY_LEVEL
                               @START_DATE              - From the @start_date only it will generate output order by HIERARCHY_NO, YEAR DESC,PERIOD DESC else HIERARCHY_NO,YEAR,PERIOD
                               @TAB                     - if we pass @tab as D then result will ore
                                               
      
      ** OUTPUT PARAMETERS:      na
      ** AUTHOR NAME             :      @pradeep thanga, @leela venkatesh
      ** CREATION DATE     :      28/03/2016 - 
      ** CALLED BY         :   from application side they want HIERARCHY_NO and level information in result  screen the inside that proecure will call dispaly information 
      **********************************************************************************************************
      ** CHANGE HISTORY
      **********************************************************************************************************
      ** VER   DATE      TICKET NO              AUTHOR              DESCRIPTION 
      ** ---   --------  ---------             -------------        -----------------------------
      ** 1    09/23/2016 GAL-3722/GALUAT-377   @LEELA VENKATESH    sales inclusion & deduction inclusion logic id salesinclustion is 0 then we need to display as null else we need display values
      ** 2    11/02/2016 GAL-7472/GALUAT-543   @LEELA VENKATESH    removing returns part and what ever flavour choosen by user that should appear in the screen
      *********************************************************************************************************/
  -------------DECLARING VARIABLES--------------------------
DECLARE @CCP_TABLE VARCHAR(100) = CONCAT (
		'ST_CCP_HIERARCHY_'
		,@USER_ID
		,'_'
		,@SESSION_ID
		,'_'
		,REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')
		)
DECLARE @CCP_DEDUCTION VARCHAR(100) = CONCAT (
		'ST_CCP_DEDUCTION_HIERARCHY_'
		,@USER_ID
		,'_'
		,@SESSION_ID
		,'_'
		,REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', '')
		)

DECLARE @SP INT
	,@SP_PROJ_SID INT
	,@TEMP_PROJ_SID VARCHAR(500)
	,@CUST_RELATIONSHIP_BUILDER_SID INT
DECLARE @FIRST_PROJ_SID INT
	,@PROD_RELATIONSHIP_BUILDER_SID INT
	,@MIN_LEVEL INT
	,@PIVOT_START_PERIOD_SID INT
	,@DED_RELATIONSHIP_BUILDER_SID INT
DECLARE @ITEMID [DBO].[UDT_ITEM]

-----------------PASSING MULTIPLE CFF AS INPUT CONVERTING INTO COMMA SEPERATED VALUES --------------------------
IF OBJECT_ID('TEMPDB..#CFF_PROJECTION_MASTER') IS NOT NULL
	TRUNCATE TABLE #CFF_PROJECTION_MASTER
ELSE
	CREATE TABLE #CFF_PROJECTION_MASTER (
		ID INT IDENTITY(1, 1)
		,CFF_PROJECTION_MASTER_SID INT
		)

SET @TEMP_PROJ_SID = REPLACE(@CFF_MASTER_SID + ',', ',,', ',')

WHILE PATINDEX('%,%', @TEMP_PROJ_SID) <> 0
BEGIN
	SELECT @SP = PATINDEX('%,%', @TEMP_PROJ_SID)

	SELECT @SP_PROJ_SID = LEFT(@TEMP_PROJ_SID, @SP - 1)

	SELECT @TEMP_PROJ_SID = STUFF(@TEMP_PROJ_SID, 1, @SP, '')

	INSERT INTO #CFF_PROJECTION_MASTER (CFF_PROJECTION_MASTER_SID)
	SELECT @SP_PROJ_SID
END

SELECT @PIVOT_START_PERIOD_SID = PERIOD_SID
FROM PERIOD
WHERE PERIOD_DATE = @START_DATE

-------------------------------GALUAT_29 CHANGES----------------------------
------PULLING ACTUAL START_DATE , ACTUAL_END_DATE,ROJ_START_PERIOD_DATE,PROJ_END_PERIOD_DATE BASED ON DESCRIPTION FROM HELPER_TABLE -----------
DECLARE @ACTUAL_START_DATE DATETIME = CAST(YEAR(GETDATE()) - 3 AS VARCHAR(4)) + '-01-01'
	,@ACTUAL_END_DATE DATETIME = DATEADD(MM, - 3, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0))
	,@PROJ_START_PERIOD_DATE DATETIME
	,@PROJ_END_PERIOD_DATE DATETIME

SELECT TOP 1 @PROJ_START_PERIOD_DATE = DATEADD(DD, 1, EOMONTH(FROM_DATE, - 1))
	,@PROJ_END_PERIOD_DATE = DATEADD(DD, 1, EOMONTH(TO_DATE, - 1))
FROM FORECAST_CONFIG FA
LEFT JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = FA.BUSINESS_PROCESS_TYPE
WHERE [DESCRIPTION] = 'CONSOLIDATED FINANCIAL FORECAST'
ORDER BY VERSION_NO DESC

DECLARE @ACT_START_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @ACTUAL_START_DATE
		)
DECLARE @ACT_END_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @ACTUAL_END_DATE
		)
DECLARE @PROJ_START_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @PROJ_START_PERIOD_DATE
		)
DECLARE @PROJ_END_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @PROJ_END_PERIOD_DATE
		)

SELECT @FIRST_PROJ_SID = PM.CFF_PROJECTION_MASTER_SID
FROM #CFF_PROJECTION_MASTER PM
WHERE ID = 1
IF OBJECT_ID('TEMPDB.DBO.#CFF_DETAILS_CURRENT', 'U') IS NOT NULL
	DROP TABLE #CFF_DETAILS_CURRENT;
	SELECT CD.*,PD.PROJECTION_DETAILS_SID INTO #CFF_DETAILS_CURRENT
	FROM CFF_DETAILS CD JOIN PROJECTION_DETAILS PD ON PD.PROJECTION_MASTER_SID =CD.PROJECTION_MASTER_SID
	AND CD.CCP_DETAILS_SID=PD.CCP_DETAILS_SID
	WHERE CFF_MASTER_SID=@FIRST_PROJ_SID

---------------------------BASED ON FREQUENCY CALUCLATIONS SHOLUD HAPPEN---------------------------
IF OBJECT_ID('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
	DROP TABLE #PERIOD;

CREATE TABLE #PERIOD (
	PERIOD_SID INT
	,PERIOD_DATE DATETIME
	,MONTH INT
	,QUARTER INT
	,SEMI_ANNUAL INT
	,YEAR INT
	,PERIOD INT
	,PRIMARY KEY (PERIOD_SID)
	)

INSERT INTO #PERIOD (
	PERIOD_SID
	,PERIOD_DATE
	,MONTH
	,QUARTER
	,SEMI_ANNUAL
	,YEAR
	,PERIOD
	)
SELECT PERIOD_SID
	,PERIOD_DATE
	,MONTH
	,QUARTER
	,SEMI_ANNUAL
	,YEAR
	,CASE 
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'M'
			THEN MONTH
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'Q'
			THEN QUARTER
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'S'
			THEN SEMI_ANNUAL
		ELSE YEAR
		END AS PERIOD
FROM PERIOD WHERE PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @PROJ_END_PERIOD_SID

DECLARE @PROJECTION_CUST_VERSION	INT
,@PROJECTION_PROD_VERSION	INT
,@PROJECTION_DED_VERSION	INT,@VERSION_NO INT

SELECT TOP 1 @CUST_RELATIONSHIP_BUILDER_SID = CUST_RELATIONSHIP_BUILDER_SID
	,@PROD_RELATIONSHIP_BUILDER_SID = PROD_RELATIONSHIP_BUILDER_SID
	,@MIN_LEVEL = CASE @CP_INDICATOR
		WHEN 'C'
			THEN CUSTOMER_HIERARCHY_LEVEL
		WHEN 'P'
			THEN PRODUCT_HIERARCHY_LEVEL
		END
	,@DED_RELATIONSHIP_BUILDER_SID = DED_RELATIONSHIP_BULDER_SID
,@PROJECTION_DED_VERSION		=PROJECTION_DED_VERSION
,@PROJECTION_CUST_VERSION		=PROJECTION_CUST_VERSION
,@PROJECTION_PROD_VERSION		=PROJECTION_PROD_VERSION
FROM CFF_MASTER
WHERE CFF_MASTER_SID = @FIRST_PROJ_SID
ORDER BY CFF_MASTER_SID

----------------------------------PULLING CCP AND HIERARCHY_NO   FOR PARICULAR CFF-------------
IF OBJECT_ID('TEMPDB..#CCP') IS NOT NULL
	DROP TABLE #CCP

CREATE TABLE #CCP (
	CCP_DETAILS_SID INT
	,HIERARCHY_NO VARCHAR(8000)
	,LEVEL_NAME VARCHAR(100)
	,PARENT_HIERARCHY_NO VARCHAR(8000)
	,LEVEL_NO INT
	)

IF @CP_INDICATOR IN (
		'C'
		,'P'
		)
BEGIN
	DECLARE @SQL1 NVARCHAR(MAX)
	--                SET @SQL1 = CONCAT ('SELECT DISTINCT LCCP.CCP_DETAILS_SID,
	--                LCCP.HIERARCHY_NO,
	--                LEVEL_NAME
	--FROM   (SELECT CCPMAP.CCP_DETAILS_SID,
	--               HLD.HIERARCHY_NO,
	--               HLD.RELATIONSHIP_LEVEL_SID,
	--               LEVEL_NAME
	--        FROM   (SELECT RLD.RELATIONSHIP_LEVEL_VALUES,
	--                       RLD.HIERARCHY_NO,
	--                       CCP.CCP_DETAILS_SID
	--                FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
	--                       JOIN CCP_MAP CCP
	--                         ON RLD.RELATIONSHIP_LEVEL_SID = CCP.RELATIONSHIP_LEVEL_SID
	--                            AND RLD.RELATIONSHIP_BUILDER_SID = ', CASE @CP_INDICATOR
	--                                                                                                WHEN 'C' THEN @CUST_RELATIONSHIP_BUILDER_SID
	--                                                                                                WHEN 'P' THEN @PROD_RELATIONSHIP_BUILDER_SID
	--                                                                                              END, '
	--                          JOIN CFF_DETAILS CD ON CD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
	--                            AND CD.CFF_MASTER_SID  = ', @FIRST_PROJ_SID, '
	--                       ) CCPMAP,
	--               (SELECT RLD1.HIERARCHY_NO,
	--                       RLD1.RELATIONSHIP_LEVEL_SID,
	--                       LEVEL_NAME
	--                FROM   RELATIONSHIP_LEVEL_DEFINITION RLD1
	--                       JOIN ', CASE @CP_INDICATOR
	--                                                             WHEN 'C' THEN 'CFF_CUST_HIERARCHY'
	--                                                             WHEN 'P' THEN 'CFF_PROD_HIERARCHY'
	--                                                           END, ' PCH
	--                         ON PCH.RELATIONSHIP_LEVEL_SID = RLD1.RELATIONSHIP_LEVEL_SID
	--                            AND PCH.CFF_MASTER_SID = ', @FIRST_PROJ_SID, '
	--                                              ', CASE
	--                                        WHEN @LEVEL_NO <> 0 THEN 'WHERE  RLD1.HIERARCHY_NO LIKE '
	--                                                                 + @HIERARCHY_NO + '%'
	--                                        ELSE ''
	--                                      END, '
	--               ) HLD
	--        WHERE  CCPMAP.HIERARCHY_NO LIKE HLD.HIERARCHY_NO + ''%'') LCCP
	--WHERE  LCCP.HIERARCHY_NO IN (SELECT RLD2.HIERARCHY_NO
	--                             FROM   RELATIONSHIP_LEVEL_DEFINITION RLD2
	--                                    JOIN '
	--                                           + CASE @CP_INDICATOR WHEN 'C' THEN 'CFF_CUST_HIERARCHY' WHEN 'P' THEN 'CFF_PROD_HIERARCHY' END
	--                                           + ' PCH2
	--                                      ON PCH2.RELATIONSHIP_LEVEL_SID = RLD2.RELATIONSHIP_LEVEL_SID
	--                                         AND PCH2.CFF_MASTER_SID = '
	--                                           + CAST(@FIRST_PROJ_SID AS VARCHAR(20))
	--                                           + '
	--                             WHERE  RLD2.LEVEL_NO  '
	--                                           + CASE WHEN @LEVEL_NO = 0 THEN ' >= ' + CAST(@MIN_LEVEL AS VARCHAR(50)) ELSE '= ' + CAST(@LEVEL_NO AS VARCHAR(50)) END + ')')
	DECLARE @VAR1 VARCHAR(50) = (
			CASE 
				WHEN @CP_INDICATOR = 'C'
					THEN 'CUST_HIERARCHY_NO'
				WHEN @CP_INDICATOR = 'P'
					THEN 'PROD_HIERARCHY_NO'
				END
			)
	SET @VERSION_NO = CASE @CP_INDICATOR WHEN 'C' THEN @PROJECTION_CUST_VERSION ELSE @PROJECTION_PROD_VERSION END


	SET @SQL1 = CONCAT (
			'SELECT DISTINCT CCPMAP.CCP_DETAILS_SID,
               CCPMAP.HIERARCHY_NO,
               LEVEL_NAME
        FROM   (SELECT RLD.RELATIONSHIP_LEVEL_VALUES,
                       RLD.HIERARCHY_NO,
                       CCP.CCP_DETAILS_SID,
                                     RLD.LEVEL_NAME
                FROM   RELATIONSHIP_LEVEL_DEFINITION RLD
                       JOIN '
			,@CCP_TABLE
			,' CCP
                          ON  CCP.'
			,@VAR1
			,' LIKE RLD.HIERARCHY_NO + ''%''
                                   JOIN #CFF_DETAILS_CURRENT CD ON CD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
                            AND CD.CFF_MASTER_SID = '
			,@FIRST_PROJ_SID
			,'  AND RLD.RELATIONSHIP_BUILDER_SID = '
			,CASE 
				WHEN @CP_INDICATOR = 'C'
					THEN @CUST_RELATIONSHIP_BUILDER_SID
				WHEN @CP_INDICATOR = 'P'
					THEN @PROD_RELATIONSHIP_BUILDER_SID
				END
			,'
AND  RLD.VERSION_NO= ',@VERSION_NO,' 
AND  RLD.LEVEL_NO >= '
			,@MIN_LEVEL
			,'
                       ) CCPMAP'
			)

	INSERT INTO #CCP (
		CCP_DETAILS_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		)
	EXEC (@SQL1)
END
ELSE
BEGIN
	--INSERT INTO @CCP
	--            (CCP_DETAILS_SID,
	--             HIERARCHY_NO,
	--             LEVEL_NAME)
	--SELECT DISTINCT CCM.CCP_DETAILS_SID,
	--                CUSTOM_HIERARCHY_NO,
	--                RLD.LEVEL_NAME
	--FROM   CFF_CUSTOM_RELATIONSHIP_BUILDER CRB
	--       JOIN CFF_CUSTOM_VIEW_DETAILS CVD
	--         ON CVD.CFF_CUSTOM_VIEW_DETAILS_SID = CRB.CFF_CUSTOM_VIEW_DETAILS_SID
	--       JOIN CFF_CUSTOM_VIEW_MASTER CVM
	--         ON CVM.CFF_CUSTOM_VIEW_MASTER_SID = CVD.CFF_CUSTOM_VIEW_MASTER_SID
	--       JOIN CFF_CUSTOM_VIEW CCM
	--         ON CCM.CFF_CUSTOM_VIEW_DETAILS_SID = CVD.CFF_CUSTOM_VIEW_DETAILS_SID
	--       JOIN HIERARCHY_LEVEL_DEFINITION RLD
	--         ON RLD.HIERARCHY_LEVEL_DEFINITION_SID = CVD.HIERARCHY_ID
	--WHERE  CVM.CFF_MASTER_SID = @FIRST_PROJ_SID
	--       AND CVD.CFF_CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID
	--       AND ( CVD.LEVEL_NO = @LEVEL_NO
	--              OR @LEVEL_NO IS NULL
	--              OR @LEVEL_NO = 0 )
		IF OBJECT_ID('TEMPDB..#PARENT_HIERARCHY') IS NOT NULL
			DROP TABLE #PARENT_HIERARCHY

		CREATE TABLE #PARENT_HIERARCHY (
			CCP_DETAILS_SID           INT,
                 HIERARCHY_NO              VARCHAR(8000),
                 LEVEL_NAME                VARCHAR(75),
                 LEVEL_NO                  SMALLINT,
                 RELATIONSHIP_LEVEL_VALUES VARCHAR(50),
			      DEDUCTION_HIRARCHY_NO VARCHAR(8000),
			      RS_CONTRACT_SID INT
			     ,INDICATOR CHAR(1)
			)

		SET @SQL1 = CONCAT (
				' 
        			INSERT INTO #PARENT_HIERARCHY
        	(
        	 CCP_DETAILS_SID,			
			 HIERARCHY_NO,				
			 LEVEL_NAME,				
			 LEVEL_NO	,
			 DEDUCTION_HIRARCHY_NO,
			 RS_CONTRACT_SID,
			 INDICATOR 
					)
SELECT  CCP_DETAILS_SID,			
			 HIERARCHY_NO,				
			 LEVEL_NAME,				
			 LEVEL_NO	,
			 PARENT_HIERARCHY_NO,
			 RS_CONTRACT_SID,
			 INDICATOR  FROM (SELECT DISTINCT CH.CCP_DETAILS_SID,
       RLD.HIERARCHY_NO,
       RLD.LEVEL_NAME,
	   C.LEVEL_NO,
	    RLD.PARENT_HIERARCHY_NO,
	RS_CONTRACT_SID,HIERARCHY_INDICATOR AS INDICATOR
FROM   CFF_CUSTOM_VIEW_DETAILS C
       JOIN RELATIONSHIP_LEVEL_DEFINITION RLD
         ON C.HIERARCHY_ID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
            AND RELATIONSHIP_BUILDER_SID = @CUST_RELATIONSHIP_BUILDER_SID AND RLD.VERSION_NO = ',@PROJECTION_CUST_VERSION,'
       JOIN ', @CCP_TABLE, ' CH
         ON CH.CUST_HIERARCHY_NO LIKE RLD.HIERARCHY_NO + ''%''
             OR CH.PROD_HIERARCHY_NO LIKE RLD.HIERARCHY_NO + ''%''
	   JOIN #CFF_DETAILS_CURRENT CF ON CF.CCP_DETAILS_SID=CH.CCP_DETAILS_SID AND CF.CFF_MASTER_SID= ',@FIRST_PROJ_SID,'
       JOIN ', @CCP_DEDUCTION ,' DM ON DM.CCP_DETAILS_SID=CH.CCP_DETAILS_SID  
	   AND FILTER_CCPD=1               
                WHERE   CFF_CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID

UNION ALL
SELECT DISTINCT CH.CCP_DETAILS_SID,
       RLD.HIERARCHY_NO,
       RLD.LEVEL_NAME,
	   C.LEVEL_NO,
	    RLD.PARENT_HIERARCHY_NO,
	RS_CONTRACT_SID,HIERARCHY_INDICATOR AS INDICATOR
FROM   CFF_CUSTOM_VIEW_DETAILS C
       JOIN RELATIONSHIP_LEVEL_DEFINITION RLD
         ON C.HIERARCHY_ID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
            AND RELATIONSHIP_BUILDER_SID = @PROD_RELATIONSHIP_BUILDER_SID AND RLD.VERSION_NO =',@PROJECTION_PROD_VERSION ,'
       JOIN ', @CCP_TABLE, ' CH
         ON CH.CUST_HIERARCHY_NO LIKE RLD.HIERARCHY_NO + ''%''
             OR CH.PROD_HIERARCHY_NO LIKE RLD.HIERARCHY_NO + ''%''
	   JOIN #CFF_DETAILS_CURRENT CF ON CF.CCP_DETAILS_SID=CH.CCP_DETAILS_SID AND CF.CFF_MASTER_SID= ',@FIRST_PROJ_SID,'
       JOIN ', @CCP_DEDUCTION ,' DM ON DM.CCP_DETAILS_SID=CH.CCP_DETAILS_SID  
	   AND FILTER_CCPD=1               
                WHERE   CFF_CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID)A
				GROUP BY  CCP_DETAILS_SID,			
			 HIERARCHY_NO,				
			 LEVEL_NAME,				
			 LEVEL_NO	,
			 PARENT_HIERARCHY_NO,
			 RS_CONTRACT_SID,
			 INDICATOR 
	   				')
			 
            EXEC SP_EXECUTESQL
              @SQL1,
              N'@CUST_RELATIONSHIP_BUILDER_SID INT, @PROD_RELATIONSHIP_BUILDER_SID  INT,@CUSTOM_VIEW_MASTER_SID INT',
              @CUST_RELATIONSHIP_BUILDER_SID = @CUST_RELATIONSHIP_BUILDER_SID,
              @PROD_RELATIONSHIP_BUILDER_SID = @PROD_RELATIONSHIP_BUILDER_SID,
              @CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID
	
SET @SQL1 = CONCAT (
		'INSERT INTO #PARENT_HIERARCHY (
	CCP_DETAILS_SID,
	HIERARCHY_NO,
	LEVEL_NAME,
	LEVEL_NO,
	DEDUCTION_HIRARCHY_NO,
	RS_CONTRACT_SID,
	INDICATOR
	)
SELECT DISTINCT CH.CCP_DETAILS_SID,
	RLD.RELATIONSHIP_LEVEL_VALUES,
	RLD.LEVEL_NAME,
	C.LEVEL_NO,
	RLD.PARENT_HIERARCHY_NO,
	RS_CONTRACT_SID,
	HIERARCHY_INDICATOR
FROM CFF_CUSTOM_VIEW_DETAILS C
INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD
	ON C.HIERARCHY_ID = RLD.HIERARCHY_LEVEL_DEFINITION_SID
		AND RELATIONSHIP_BUILDER_SID IN (@DED_RELATIONSHIP_BUILDER_SID)
INNER JOIN ',
		@CCP_DEDUCTION,
		' DM
	ON DM.DEDUCTION_HIERARCHY_NO LIKE RLD.HIERARCHY_NO + ''%''
INNER JOIN ',
		@CCP_TABLE,
		' CH
	ON DM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
	 AND FILTER_CCPD=1
WHERE CFF_CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID
AND RLD.VERSION_NO =',@PROJECTION_DED_VERSION,'
'
		)
		
EXEC SP_EXECUTESQL @SQL1,
	N'@DED_RELATIONSHIP_BUILDER_SID  INT,@CUSTOM_VIEW_MASTER_SID INT',
	@DED_RELATIONSHIP_BUILDER_SID = @DED_RELATIONSHIP_BUILDER_SID,
	@CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID
	
	   INSERT INTO #CCP (
			CCP_DETAILS_SID,
			HIERARCHY_NO,
			LEVEL_NAME,
			PARENT_HIERARCHY_NO,
			LEVEL_NO
			)
		SELECT DISTINCT CCP_DETAILS_SID,
			HIERARCHY_NO,
			LEVEL_NAME,
			REPLACE(REPLACE(IIF(A.LEVEL_NO=1,NULL,CONCAT(REPLACE(LEFT(PARENT_HIERARCHY_NO, LEN(PARENT_HIERARCHY_NO) - 1),'~','.~'),'.')),'..','.'),' ',''),
			A.LEVEL_NO
		FROM #PARENT_HIERARCHY  A
		CROSS APPLY (
			SELECT HIERARCHY_NO + '~'
			FROM  #PARENT_HIERARCHY  B
			WHERE A.CCP_DETAILS_SID = B.CCP_DETAILS_SID AND A.LEVEL_NO > B.LEVEL_NO
			AND  A.RS_CONTRACT_SID =B.RS_CONTRACT_SID
			ORDER BY LEVEL_NO
			FOR XML PATH('')
			) CS(PARENT_HIERARCHY_NO)
			ORDER BY LEVEL_NO
END

----------------------------------PULLING CCP S FOR PARICULAR CFF-------------
IF OBJECT_ID('TEMPDB..#TEMP_CCP') IS NOT NULL
	DROP TABLE #TEMP_CCP

SELECT CCP.CCP_DETAILS_SID
	,CCP.COMPANY_MASTER_SID
	,CCP.CONTRACT_MASTER_SID
	,CCP.ITEM_MASTER_SID
	,CD.PROJECTION_DETAILS_SID
	,CD.CFF_MASTER_SID
	,C.HIERARCHY_NO
	,C.LEVEL_NAME
	,PARENT_HIERARCHY_NO
	,CASE 
		WHEN SALES_INCLUSION = 'y'
			THEN 1
		ELSE 0
		END AS SALES_INCLUSION
	,CD.CFF_DETAILS_SID
INTO #TEMP_CCP
FROM #CFF_DETAILS_CURRENT CD 
JOIN #CCP C ON C.CCP_DETAILS_SID = CD.CCP_DETAILS_SID 
JOIN CCP_DETAILS CCP ON C.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID

------------------FOR HIERARCHY_NO,LEVEL_NAME FINDING START TO END DATES-------------------------------------
IF OBJECT_ID('TEMPDB..#DATA_TABLE') IS NOT NULL
	DROP TABLE #DATA_TABLE

SELECT C.HIERARCHY_NO
	,C.LEVEL_NAME
	,PERIOD
	,YEAR
	,C.PARENT_HIERARCHY_NO
	,PERIOD_SID
	,PROJECTION_DETAILS_SID
	,CFF_MASTER_SID
	,SALES_INCLUSION
	,CFF_DETAILS_SID
INTO #DATA_TABLE
FROM (
	SELECT DISTINCT PROJECTION_DETAILS_SID
		,CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
		,SALES_INCLUSION
		,CFF_DETAILS_SID
	FROM #TEMP_CCP
	) C
CROSS JOIN (
	SELECT DISTINCT PERIOD
		,YEAR
		,PERIOD_SID
	FROM #PERIOD
	WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @PROJ_END_PERIOD_SID
	) P


-----FINDING ITEMS ATTACHED TO PARTICULAR CFF---------------------------        
INSERT INTO @ITEMID
/*SELECT IM.ITEM_MASTER_SID
FROM ITEM_MASTER IM
WHERE EXISTS (
		SELECT 1
		FROM #TEMP_CCP A
		WHERE CFF_MASTER_SID = @FIRST_PROJ_SID
			AND IM.ITEM_MASTER_SID = A.ITEM_MASTER_SID
		)*/
SELECT DISTINCT ITEM_MASTER_SID
		FROM #TEMP_CCP A

-------------------------------------------------------------RETURNS-------------------------------------------------------------------------------
--IF OBJECT_ID('TEMPDB..#TEMP_CCPD') IS NOT NULL
--  DROP TABLE #TEMP_CCPD
--CREATE TABLE #TEMP_CCPD
--  (
--     COMPANY_MASTER_SID     INT,
--     CONTRACT_MASTER_SID    INT,
--     ITEM_MASTER_SID        INT,
--     PROJECTION_DETAILS_SID INT,
--     CFF_MASTER_SID         INT
--  )
--INSERT INTO #TEMP_CCPD
--            (COMPANY_MASTER_SID,
--             CONTRACT_MASTER_SID,
--             ITEM_MASTER_SID,
--             PROJECTION_DETAILS_SID,
--             CFF_MASTER_SID)
--SELECT DISTINCT COMPANY_MASTER_SID,
--                CONTRACT_MASTER_SID,
--                ITEM_MASTER_SID,
--                PROJECTION_DETAILS_SID,
--                CFF_MASTER_SID
--FROM   (SELECT COMPANY_MASTER_SID,
--               T_CCP.CONTRACT_MASTER_SID,
--               T_CCP.ITEM_MASTER_SID,
--               PROJECTION_DETAILS_SID,
--               CFF_MASTER_SID,
--               RS_ID,
--               RS_TYPE
--        FROM   #TEMP_CCP T_CCP
--               INNER JOIN RS_CONTRACT RS
--                       ON T_CCP.CONTRACT_MASTER_SID = RS.CONTRACT_MASTER_SID
--               INNER JOIN RS_CONTRACT_DETAILS RSC
--                       ON RS.RS_CONTRACT_SID = RSC.RS_CONTRACT_SID
--                          AND T_CCP.ITEM_MASTER_SID = RSC.ITEM_MASTER_SID
--        WHERE  EXISTS (SELECT 1
--                       FROM   CFP_CONTRACT CF
--                              INNER JOIN CFP_CONTRACT_DETAILS CFD
--                                      ON CF.CFP_CONTRACT_SID = CFD.CFP_CONTRACT_SID
--                                         AND T_CCP.COMPANY_MASTER_SID = CFD.COMPANY_MASTER_SID
--                                         AND RS.CFP_CONTRACT_SID = CF.CFP_CONTRACT_SID
--                                         AND CF.CONTRACT_MASTER_SID = T_CCP.CONTRACT_MASTER_SID)) R
--       INNER JOIN HELPER_TABLE HT
--               ON R.RS_TYPE = HT.HELPER_TABLE_SID
--WHERE  HT.DESCRIPTION = 'RETURNS'
--IF OBJECT_ID('TEMPDB..#TEMP_RETURNS') IS NOT NULL
--  DROP TABLE #TEMP_RETURNS
--CREATE TABLE #TEMP_RETURNS
--  (
--     ITEM_MASTER_SID     INT,
--     RETURNS_DETAILS_SID INT,
--     PERIOD_SID          INT,
--     ACTUAL_RATE         NUMERIC(22, 6),
--     PROJECTED_RATE      NUMERIC(22, 6),
--     PRIMARY KEY ( ITEM_MASTER_SID, PERIOD_SID )
--  );
--WITH ITEM_PROJ_DETAILS
--     AS (SELECT ROW_NUMBER()
--                  OVER (
--                    PARTITION BY ITEM_MASTER_SID
--                    ORDER BY LASTEST_DATE DESC ) RN,
--                ITEM_MASTER_SID,
--                PM.PROJECTION_MASTER_SID,
--                RETURNS_DETAILS_SID
--         FROM   RETURNS_DETAILS RD
--                INNER JOIN PROJECTION_MASTER PM
--                        ON RD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
--                CROSS APPLY ( VALUES (MODIFIED_DATE),
--                                     (CREATED_DATE) ) CS(LASTEST_DATE)
--         WHERE  SAVE_FLAG = 1
--                AND ITEM_MASTER_SID IN (SELECT ITEM_MASTER_SID
--                                        FROM   @ITEMID))
--INSERT INTO #TEMP_RETURNS
--            (ITEM_MASTER_SID,
--             RETURNS_DETAILS_SID,
--             PERIOD_SID,
--             ACTUAL_RATE,
--             PROJECTED_RATE)
--SELECT COALESCE(R_ACTUALS.ITEM_MASTER_SID, R_PROJ.ITEM_MASTER_SID),
--       COALESCE(R_ACTUALS.RETURNS_DETAILS_SID, R_PROJ.RETURNS_DETAILS_SID) AS RETURNS_DETAILS_SID,
--       COALESCE(R_ACTUALS.PERIOD_SID, R_PROJ.PERIOD_SID)                   AS PERIOD_SID,
--       R_ACTUALS.ACTUAL_RETURN_PERCENT,
--       R_PROJ.PROJECTED_RETURN_PERCENT
--FROM   (SELECT IMPD.RETURNS_DETAILS_SID,
--               ITEM_MASTER_SID,
--               PERIOD_SID,
--               ACTUAL_RETURN_PERCENT
--        FROM   RETURNS_ACTUALS NAP
--               JOIN ITEM_PROJ_DETAILS IMPD
--                 ON IMPD.RETURNS_DETAILS_SID = NAP.RETURNS_DETAILS_SID
--        WHERE  IMPD.RN = 1) R_ACTUALS
--       FULL JOIN (SELECT NPP.RETURNS_DETAILS_SID,
--                         ITEM_MASTER_SID,
--                         PERIOD_SID,
--                         PROJECTED_RETURN_PERCENT
--                  FROM   RETURNS_PROJ_DETAILS NPP
--                         JOIN ITEM_PROJ_DETAILS IMPD
--                           ON IMPD.RETURNS_DETAILS_SID = NPP.RETURNS_DETAILS_SID
--                  WHERE  IMPD.RN = 1) R_PROJ
--              ON R_ACTUALS.RETURNS_DETAILS_SID = R_PROJ.RETURNS_DETAILS_SID
--                 AND R_ACTUALS.PERIOD_SID = R_PROJ.PERIOD_SID
--------------------------------------------------PULLING PRICE FOR CFF ITEMS------------
IF OBJECT_ID('TEMPDB..#ITEM_PRICING') IS NOT NULL
	DROP TABLE #ITEM_PRICING

CREATE TABLE #ITEM_PRICING (
	ITEM_MASTER_SID INT
	,PERIOD_SID INT
	,ITEM_PRICE NUMERIC(33, 8)
	,PRIMARY KEY (
		ITEM_MASTER_SID
		,PERIOD_SID
		)
	)

INSERT INTO #ITEM_PRICING (
	ITEM_MASTER_SID
	,PERIOD_SID
	,ITEM_PRICE
	)
SELECT ITEM_MASTER_SID
	,PERIOD_SID
	,ITEM_PRICE
FROM [DBO].[UDF_ITEM_PRICING](@ITEMID, 'COGS', COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID), @PROJ_END_PERIOD_SID, 'EACH')
-------------------------------------------------------------
IF OBJECT_ID('TEMPDB..#ITEM_UOM_DETAILS') IS NOT NULL
	DROP TABLE #ITEM_UOM_DETAILS

CREATE TABLE #ITEM_UOM_DETAILS (
	ITEM_MASTER_SID INT
	,UOM_VALUE NUMERIC(33, 8)
	,UOM_CODE VARCHAR(50)
	)

INSERT INTO #ITEM_UOM_DETAILS (
	ITEM_MASTER_SID
	,UOM_VALUE
	,UOM_CODE
	)
SELECT IU.ITEM_MASTER_SID
	,SECONDARY_UOM_CONVERSION_FACTOR AS UOM_VALUE
	,HT.DESCRIPTION AS UOM_CODE
FROM ITEM_UOM IU
JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = IU.SECONDARY_UOM_CODE
WHERE EXISTS (
		SELECT 1
		FROM #TEMP_CCP TC
		WHERE IU.ITEM_MASTER_SID = TC.ITEM_MASTER_SID
		)
	AND HT.DESCRIPTION = @UOM_CODE

--------------------------------------------------STROING OUTPUT IN RESULT TABLE ------------
IF OBJECT_ID('TEMPDB..#RESULT') IS NOT NULL
	DROP TABLE #RESULT

CREATE TABLE #RESULT (
	CFF_PROJECTION_MASTER_SID INT
	,HIERARCHY_NO VARCHAR(8000)
	,PARENT_HIERARCHY_NO VARCHAR(8000)
	,LEVEL_NAME VARCHAR(100)
	,EX_FACTORY_SALES_ACTUALS NUMERIC(33, 8)
	,EX_FACTORY_SALES_PROJ NUMERIC(33, 8)
	,YEAR INT
	,PERIOD INT
	,CONTRACT_SALES_ACTUALS NUMERIC(33, 8)
	,CONTRACT_SALES_PROJECTED NUMERIC(33, 8)
	,CONTRACT_UNITS_ACTUALS NUMERIC(33, 8)
	,CONTRACT_UNITS_PROJECTED NUMERIC(33, 8)
	,TOTAL_DISCOUNT NUMERIC(33, 8)
	,TOTAL_DISCOUNT_PROJECTED NUMERIC(33, 8)
	,TOTAL_DISCOUNT_PERCENTAGE NUMERIC(33, 8)
	,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(33, 8)
	,EX_FACTORY_SALES_ACTUALS_PERCENT NUMERIC(33, 8)
	,EX_FACTORY_SALES_PROJECTED_PERCENT NUMERIC(33, 8)
	,PPA_DISCOUNT NUMERIC(33, 8)
	,PPA_DISCOUNT_PROJECTED NUMERIC(33, 8)
	,PPA_DISCOUNT_PERCENTAGE NUMERIC(33, 8)
	,PPA_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(33, 8)
	,MANDATED_DISCOUNT_ACTUALS NUMERIC(33, 8)
	,MANDATED_DISCOUNT_PROJECTED NUMERIC(33, 8)
	,SUPPLEMENTAL_DISCOUNT_ACTUALS NUMERIC(33, 8)
	,SUPPLEMENTAL_DISCOUNT_PROJECTED NUMERIC(33, 8)
	,MANDATED_DISCOUNT_ACTUALS_PERCENTAGE NUMERIC(33, 8)
	,MANDATED_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(33, 8)
	,SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE NUMERIC(33, 8)
	,SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(33, 8)
	,NET_SALES NUMERIC(33, 8)
	,NET_SALES_PROJECTED NUMERIC(33, 8)
	,DEMAND_SALES_ACTUAL NUMERIC(33, 8)
	,DEMAND_SALES_PROJECTED NUMERIC(33, 8)
	,INVENTORY_WITHDRAWAL_ACTUAL NUMERIC(33, 8)
	,INVENTORY_WITHDRAWAL_PROJECTED NUMERIC(33, 8)
	,DEMAND_SALES_ACTUAL_PERCENT NUMERIC(33, 8)
	,DEMAND_SALES_PROJECTED_PERCENT NUMERIC(33, 8)
	,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT NUMERIC(33, 8)
	,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT NUMERIC(33, 8)
	,TOTAL_DISCOUNT_RPU_ACTUALS NUMERIC(33, 8)
	,TOTAL_DISCOUNT_RPU_PROJECTED NUMERIC(33, 8)
	,TOTAL_PPA_RPU_ACTUALS NUMERIC(33, 8)
	,TOTAL_PPA_RPU_PROJECTED NUMERIC(33, 8)
	,TOTAL_RPU NUMERIC(33, 8)
	,TOTAL_PROJECTED_RPU NUMERIC(33, 8)
	,COGS_ACTUAL NUMERIC(33, 8)
	,COGS_PROJECTED NUMERIC(33, 8)
	,NET_PROFIT_ACTUAL NUMERIC(33, 8)
	,NET_PROFIT_PROJECTED NUMERIC(33, 8)
	,RETURNS_ACTUAL_AMOUNT NUMERIC(33, 8)
	,RETURNS_PROJECTED_AMOUNT NUMERIC(33, 8)
	,RETURNS_ACTUAL_PERCENTAGE NUMERIC(33, 8)
	,RETURNS_PROJECTED_PERCENTAGE NUMERIC(33, 8)
	,TOTAL_RETURNS_RPU_ACTAULS NUMERIC(33, 8)
	,TOTAL_RETURNS_RPU_PROJECTED NUMERIC(33, 8)
	,ADJUSTED_DEMAND_ACTUALS NUMERIC(33, 8)
	,ADJUSTED_DEMAND_PROJ NUMERIC(33, 8)
	,CUST_EX_FACTORY_SALES_ACTUALS NUMERIC(33, 8)
	,CUST_EX_FACTORY_SALES_PROJ NUMERIC(33, 8)
	,IW_DETAILS_ACTUALS NUMERIC(33, 8)
	,IW_DETAILS_PROJ NUMERIC(33, 8)
	,ADJUSTED_DEMAND_ACTUALS_PERCENTAGE NUMERIC(33, 8)
	,ADJUSTED_DEMAND_PROJ_PERCENTAGE NUMERIC(33, 8)
	,CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE NUMERIC(33, 8)
	,CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE NUMERIC(33, 8)
	,IW_DETAILS_ACTUALS_PERCENTAGE NUMERIC(33, 8)
	,IW_DETAILS_PROJ_PERCENTAGE NUMERIC(33, 8)
	,NET_SALES_OF_EX_FACTORY_ACTUALS NUMERIC(33, 8)
	,NET_SALES_OF_EX_FACTORY_PROJECTED NUMERIC(33, 8)
	,DISCOUNT_OF_EX_FACTORY_ACTUALS NUMERIC(33, 8)
	,DISCOUNT_OF_EX_FACTORY_PROJECTED NUMERIC(33, 8)
	,NET_EX_FACTORY_SALES_ACTUALS NUMERIC(33, 8) -----------CEL-386
	,NET_EX_FACTORY_SALES_PROJECTED NUMERIC(33, 8) -----------CEL-386
	,NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACTUALS NUMERIC(33, 8) -----------CEL-386                            
	,NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_PROJECTED NUMERIC(33, 8) -----------CEL-386
	,EX_FACTORY_SALES_ACCRUALS NUMERIC(33, 8)
	,DEMAND_SALES_ACCRUALS NUMERIC(33, 8)
	,INVENTORY_WITHDRAWAL_SALES_ACCRUALS NUMERIC(33, 8)
	,EX_FACTORY_SALES_ACCRUAL_PERCENT NUMERIC(33, 8)
	,DEMAND_SALES_ACCRUAL_PERCENT NUMERIC(33, 8)
	,INVENTORY_WITHDRAWAL_SALES_ACCRUAL_PERCENT NUMERIC(33, 8)
	,CONTRACT_SALES_ACCRUAL NUMERIC(33, 8)
	,CONTRACT_UNITS_ACCRUAL NUMERIC(33, 8)
	,TOTAL_DISCOUNT_ACCRUAL NUMERIC(33, 8)
	,TOTAL_DISCOUNT_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,PPA_DISCOUNT_ACCRUAL NUMERIC(33, 8)
	,PPA_DISCOUNT_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,TOTAL_DISCOUNT_RPU_ACCRUAL NUMERIC(33, 8)
	,TOTAL_PPA_RPU_ACCRUAL NUMERIC(33, 8)
	,TOTAL_RPU_ACCRUAL NUMERIC(33, 8)
	,NET_SALES_ACCRUAL NUMERIC(33, 8)
	,COGS_ACCRUAL NUMERIC(33, 8)
	,NET_PROFIT_ACCRUAL NUMERIC(33, 8)
	,TOTAL_RETURNS_RPU_ACCRUAL NUMERIC(33, 8)
	,RETURNS_ACCRUAL_AMOUNT NUMERIC(33, 8)
	,RETURNS_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,NET_SALES_OF_EX_FACTORY_ACCRUAL NUMERIC(33, 8)
	,DISCOUNT_OF_EX_FACTORY_ACCRUAL NUMERIC(33, 8)
	,NET_EX_FACTORY_SALES_ACCRUAL NUMERIC(33, 8)
	,NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACCRUAL NUMERIC(33, 8)
	,IW_DETAILS_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,CUST_EX_FACTORY_SALES_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,ADJUSTED_DEMAND_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,IW_DETAILS_ACCRUAL NUMERIC(33, 8)
	,CUST_EX_FACTORY_SALES_ACCRUAL NUMERIC(33, 8)
	,ADJUSTED_DEMAND_ACCRUAL NUMERIC(33, 8)
	,SUPPLEMENTAL_DISCOUNT_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,MANDATED_DISCOUNT_ACCRUAL_PERCENTAGE NUMERIC(33, 8)
	,SUPPLEMENTAL_DISCOUNT_ACCRUAL NUMERIC(33, 8)
	,MANDATED_DISCOUNT_ACCRUAL NUMERIC(33, 8)
	,TOTAL_PPA_RPU_ACCRUALS NUMERIC(33, 8)
	)

-------------PULLING CCP LEVEL + HIERARCHY_NO,LEVEL_NAME INFORMATION FOR ONE PROJECTION---------------------
IF OBJECT_ID('TEMPDB.DBO.#CCP_INFO', 'U') IS NOT NULL
	DROP TABLE #CCP_INFO;
	/*
SELECT CD.CFF_MASTER_SID
	,CD.PROJECTION_MASTER_SID
	,CD.PROJECTION_DETAILS_SID
	,CD.CCP_DETAILS_SID
	,HIERARCHY_NO
	,LEVEL_NAME
INTO #CCP_INFO
FROM #CFF_DETAILS_CURRENT CD
JOIN #CCP C ON C.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
*/

------------------------------------------------------------------- FINDING SALES INCLUSION --------------------------------------
-------------------------------------------------------------------
IF OBJECT_ID('TEMPDB.DBO.#PRIOR_RS_DATA', 'U') IS NOT NULL
	DROP TABLE #PRIOR_RS_DATA;

CREATE TABLE #PRIOR_RS_DATA (
	RS_CONTRACT_SID INT
	,NM_PPA_IND VARCHAR(10)
	,CCP_DETAILS_SID INT
	)

INSERT INTO #PRIOR_RS_DATA (
	RS_CONTRACT_SID
	,NM_PPA_IND
	,CCP_DETAILS_SID
	)
SELECT NMDP.RS_CONTRACT_SID,
       'NM' AS NM_PPA_IND,
       CD.CCP_DETAILS_SID
FROM   #CFF_DETAILS_CURRENT CD
       JOIN NM_DISCOUNT_PROJ_MASTER NMDP
         ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID 

/*
SELECT DISTINCT NMDP.RS_CONTRACT_SID
	,'NM' AS NM_PPA_IND
	,PD.CCP_DETAILS_SID

FROM CFF_DETAILS CFF
JOIN PROJECTION_DETAILS PD ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
	AND RM.RS_MODEL_SID = NMDP.RS_MODEL_SID
JOIN #TEMP_CCP CCP ON CCP.CONTRACT_MASTER_SID = RM.CONTRACT_MASTER_SID
	AND CCP.CCP_DETAILS_SID = CFF.CCP_DETAILS_SID
WHERE CFF.CFF_MASTER_SID = @FIRST_PROJ_SID
--AND 
--EXISTS
--(SELECT 1 FROM UDF_SPLITSTRING(  @RS_CONTRACT_SID,',') A WHERE A.TOKEN=NMDP.RS_CONTRACT_SID) OR @RS_CONTRACT_SID IS NULL

UNION ALL

SELECT DISTINCT RM.RS_CONTRACT_SID
	,'PPA' AS NM_PPA_IND
	,PD.CCP_DETAILS_SID
FROM CFF_DETAILS CFF
JOIN PROJECTION_DETAILS PD ON CFF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	AND CFF.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN NM_PPA_PROJECTION_MASTER PPA ON PPA.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
JOIN RS_CONTRACT RM ON RM.RS_CONTRACT_SID = PPA.RS_CONTRACT_SID
	AND RM.RS_MODEL_SID = PPA.RS_MODEL_SID
JOIN #TEMP_CCP CCP ON CCP.CONTRACT_MASTER_SID = RM.CONTRACT_MASTER_SID
	AND CCP.CCP_DETAILS_SID = CFF.CCP_DETAILS_SID
WHERE CFF.CFF_MASTER_SID = @FIRST_PROJ_SID
*/
--   AND    
--EXISTS
--(SELECT 1 FROM UDF_SPLITSTRING(  @RS_CONTRACT_SID,',') A WHERE A.TOKEN=PPA.RS_CONTRACT_SID) OR @RS_CONTRACT_SID IS NULL
----------------------------------FINDING DICOUNT INCLUSION ----------------------------------------
--IF OBJECT_ID('TEMPDB.DBO.#DISCOUNT_INFORMATION', 'U') IS NOT NULL
--  DROP TABLE #DISCOUNT_INFORMATION;
--SELECT DISTINCT CF.CFF_MASTER_SID,
--                CC.CCP_DETAILS_SID,
--                PD.PROJECTION_MASTER_SID,
--                PD.PROJECTION_DETAILS_SID,
--                RC.RS_CONTRACT_SID
--INTO   #DISCOUNT_INFORMATION
--FROM   CFF_DEDUCTION_INCLUSION CDI
--       JOIN CFF_DETAILS CF
--         ON CF.CFF_DETAILS_SID = CDI.CFF_DETAILS_SID
--       JOIN CCP_DETAILS CC
--         ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
--       JOIN PROJECTION_DETAILS PD
--         ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
--            AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
--       JOIN RS_CONTRACT RC
--         ON RC.RS_MODEL_SID = CDI.RS_MODEL_SID
--            AND RC.CONTRACT_MASTER_SID = CC.CONTRACT_MASTER_SID
--WHERE  CF.CFF_MASTER_SID = @FIRST_PROJ_SID
--	 AND EXISTS
--(SELECT 1 FROM UDF_SPLITSTRING(  @RS_CONTRACT_SID,',') A WHERE A.TOKEN=RC.RS_CONTRACT_SID) OR @RS_CONTRACT_SID IS NULL
---------------------------------------FINDING INDICATOR FOREACH HIERARCHY(FOR SALESINFORMATION)---------------------------
--IF OBJECT_ID('TEMPDB..#TEMP_HIER_SALES') IS NOT NULL
--  DROP TABLE #TEMP_HIER_SALES
--CREATE TABLE #TEMP_HIER_SALES
--  (
--     HIERARCHY_NO VARCHAR(50),
--     INDICATOR    BIT,
--     PRIMARY KEY (HIERARCHY_NO)
--  )
--INSERT INTO #TEMP_HIER_SALES
--            (HIERARCHY_NO,
--             INDICATOR)
--SELECT DISTINCT HIERARCHY_NO,
--                1
--FROM   #CCP A
--       JOIN #SALES_INFORMATION B
--         ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
-----------------------------------------FINDING INDICATOR FOREACH HIERARCHY(FOR DISCOUNT INFORMATION)---------------------------
--IF OBJECT_ID('TEMPDB..#TEMP_HIER_DISC') IS NOT NULL
--  DROP TABLE #TEMP_HIER_DISC
--CREATE TABLE #TEMP_HIER_DISC
--  (
--     HIERARCHY_NO VARCHAR(50),
--     INDICATOR    BIT,
--     PRIMARY KEY (HIERARCHY_NO)
--  )
--INSERT INTO #TEMP_HIER_DISC
--            (HIERARCHY_NO,
--             INDICATOR)
--SELECT DISTINCT HIERARCHY_NO,
--                1
--FROM   #CCP A
--       JOIN #DISCOUNT_INFORMATION B
--         ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
------------------------------------------------------------------- NEWLY ADDED ENDS HERE
IF OBJECT_ID('TEMPDB..#ACCRUAL_DISCOUNT') IS NOT NULL
	DROP TABLE #ACCRUAL_DISCOUNT;

WITH CTE
AS (
	SELECT COMPANY_MASTER_SID
		,CONTRACT_MASTER_SID
		,ITEM_MASTER_SID
		,PROJECTION_DETAILS_SID
		,CFF_MASTER_SID
		,A.CCP_DETAILS_SID
		,PERIOD_SID
		,PERIOD_DATE
		,RS.RS_CONTRACT_SID
		,HIERARCHY_NO
		,LEVEL_NAME
	FROM #TEMP_CCP A
	JOIN #PRIOR_RS_DATA RS ON RS.CCP_DETAILS_SID = A.CCP_DETAILS_SID
	JOIN #PERIOD P ON P.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @PROJ_END_PERIOD_SID
	)
SELECT CFF_MASTER_SID
	,PROJECTION_DETAILS_SID
	,PERIOD_SID
	,RC.RS_CONTRACT_SID
	,SUM(DEDUCTION_AMOUNT) / (DATEDIFF(MM, A1.ACCRUAL_PERIOD_START_DATE, A1.ACCRUAL_PERIOD_END_DATE) + 1) DISCOUNT_AMOUNT
	,HIERARCHY_NO
	,LEVEL_NAME
	,A2.CCP_DETAILS_SID
INTO #ACCRUAL_DISCOUNT
FROM ACCRUAL_MASTER A1
JOIN RS_CONTRACT RC ON RC.RS_MODEL_SID = A1.RS_MODEL_SID
	AND RC.CONTRACT_MASTER_SID = A1.CONTRACT_MASTER_SID
JOIN CTE A2 ON A2.PERIOD_DATE BETWEEN CONVERT(DATETIME, DATEADD(MM, - 1, DATEADD(DD, 1, EOMONTH(A1.ACCRUAL_PERIOD_START_DATE, 0))))
		AND CONVERT(DATETIME, DATEADD(MM, - 1, DATEADD(DD, 1, EOMONTH(A1.ACCRUAL_PERIOD_END_DATE, 0))))
	AND A1.CONTRACT_MASTER_SID = A2.CONTRACT_MASTER_SID
	AND A1.COMPANY_MASTER_SID = A2.COMPANY_MASTER_SID
	AND A1.ITEM_MASTER_SID = A2.ITEM_MASTER_SID
	AND A2.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
	AND DATEADD(DD, 1, EOMONTH(A1.ACCRUAL_PERIOD_START_DATE, - 1)) >= @ACTUAL_START_DATE
	AND A1.ACCRUAL_PERIOD_END_DATE <= @PROJ_END_PERIOD_DATE
GROUP BY CFF_MASTER_SID
	,PROJECTION_DETAILS_SID
	,PERIOD_SID
	,RC.RS_CONTRACT_SID
	,ACCRUAL_PERIOD_START_DATE
	,ACCRUAL_PERIOD_END_DATE
	,HIERARCHY_NO
	,LEVEL_NAME
	,A2.CCP_DETAILS_SID

------------------------------------------------------------------------------------------------------------
IF OBJECT_ID('TEMPDB..#DEDUCTION_INCLUSION') IS NOT NULL
	DROP TABLE #DEDUCTION_INCLUSION;

SELECT DISTINCT  A.PROJECTION_DETAILS_SID
	,RC.RS_CONTRACT_SID
	,CASE 
		WHEN CDI.DEDUCTION_INCLUSION = 'y'
			THEN 1
		ELSE 0
		END DEDUCTION_INCLUSION
INTO #DEDUCTION_INCLUSION
FROM #TEMP_CCP A
JOIN CFF_DEDUCTION_INCLUSION CDI ON CDI.CFF_DETAILS_SID = A.CFF_DETAILS_SID
JOIN RS_CONTRACT RC ON RC.RS_MODEL_SID = CDI.RS_MODEL_SID
	AND RC.CONTRACT_MASTER_SID = A.CONTRACT_MASTER_SID
AND EXISTS (SELECT 1 FROM #PRIOR_RS_DATA PRS WHERE PRS.RS_CONTRACT_SID=RC.RS_CONTRACT_SID)
--------------------------------------------------------- PULLING DISCOUNT PROJECTED INFORMATION----------------------
IF OBJECT_ID('TEMPDB..#NM_DISCOUNT_PROJECTION') IS NOT NULL
	DROP TABLE #NM_DISCOUNT_PROJECTION

SELECT SUM(IIF((DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL), NSP.PROJECTION_SALES, NULL)) AS PROJECTION_SALES
	,SUM(AD.DISCOUNT_AMOUNT) AS ACCRUAL_AMOUNT_PROJECTION
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,PRD.HIERARCHY_NO
	,PRD.LEVEL_NAME
	,PRD.PARENT_HIERARCHY_NO
INTO #NM_DISCOUNT_PROJECTION
FROM #DATA_TABLE PRD
JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON PRD.PROJECTION_DETAILS_SID = NMDP.PROJECTION_DETAILS_SID
JOIN NM_DISCOUNT_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN #DEDUCTION_INCLUSION DI ON DI.PROJECTION_DETAILS_SID = NMDP.PROJECTION_DETAILS_SID
	AND DI.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
LEFT JOIN #ACCRUAL_DISCOUNT AD ON NSP.PROJECTION_DETAILS_SID = AD.PROJECTION_DETAILS_SID
	AND NSP.RS_CONTRACT_SID = AD.RS_CONTRACT_SID
	AND NSP.PERIOD_SID = AD.PERIOD_SID
	AND PRD.HIERARCHY_NO = AD.HIERARCHY_NO
	AND PRD.LEVEL_NAME = AD.LEVEL_NAME
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,PRD.HIERARCHY_NO
	,PRD.LEVEL_NAME
	,PRD.PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING DISCOUNT ACTUAL INFORMATION----------------------
IF OBJECT_ID('TEMPDB..#NM_ACTUAL_DISCOUNT') IS NOT NULL
	DROP TABLE #NM_ACTUAL_DISCOUNT

SELECT SUM(IIF((DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL), NSP.ACTUAL_SALES, NULL)) AS ACTUAL_SALES
	,SUM(AD.DISCOUNT_AMOUNT) AS ACCRUAL_AMOUNT_ACTUAL
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,PRD.HIERARCHY_NO
	,PRD.LEVEL_NAME
	,PRD.PARENT_HIERARCHY_NO
INTO #NM_ACTUAL_DISCOUNT
FROM #DATA_TABLE PRD
JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON PRD.PROJECTION_DETAILS_SID = NMDP.PROJECTION_DETAILS_SID
JOIN NM_ACTUAL_DISCOUNT NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN #DEDUCTION_INCLUSION DI ON DI.PROJECTION_DETAILS_SID = NMDP.PROJECTION_DETAILS_SID
	AND DI.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
LEFT JOIN #ACCRUAL_DISCOUNT AD ON NSP.PROJECTION_DETAILS_SID = AD.PROJECTION_DETAILS_SID
	AND NSP.RS_CONTRACT_SID = AD.RS_CONTRACT_SID
	AND NSP.PERIOD_SID = AD.PERIOD_SID
	AND PRD.HIERARCHY_NO = AD.HIERARCHY_NO
	AND PRD.LEVEL_NAME = AD.LEVEL_NAME
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,PRD.HIERARCHY_NO
	,PRD.LEVEL_NAME
	,PRD.PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING PPA PROJETED INFORMATION---------------------- 
IF OBJECT_ID('TEMPDB..#NM_PPA_PROJECTION') IS NOT NULL
	DROP TABLE #NM_PPA_PROJECTION
	/*
SELECT ISNULL(SUM(NSP.PROJECTION_DISCOUNT_DOLLAR), 0) PROJECTION_DISCOUNT_DOLLAR
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #NM_PPA_PROJECTION
FROM #DATA_TABLE PRD
JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN NM_PPA_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
	*/
--------------------------------------------------------- PULLING PPA ACTUAL INFORMATION----------------------       
IF OBJECT_ID('TEMPDB..#NM_ACTUAL_PPA') IS NOT NULL
	DROP TABLE #NM_ACTUAL_PPA
	/*
SELECT ISNULL(SUM(NSP.ACTUAL_DISCOUNT_DOLLAR), 0) ACTUAL_DISCOUNT_DOLLAR
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #NM_ACTUAL_PPA
FROM #DATA_TABLE PRD
JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN NM_ACTUAL_PPA NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
--AND EXISTS(SELECT 1 FROM UDF_SPLITSTRING(  @RS_CONTRACT_SID,',') A WHERE A.TOKEN=NSP.RS_CONTRACT_SID) OR @RS_CONTRACT_SID IS NULL
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
	*/
--------------------------------------------------------- PULLING SUPPLEMENTAL PROJECTION  INFORMATION-------------------
IF OBJECT_ID('TEMPDB..#M_SUPPLEMENTAL_DISC_PROJ') IS NOT NULL
	DROP TABLE #M_SUPPLEMENTAL_DISC_PROJ

SELECT ISNULL(SUM(NSP.PROJECTION_SALES), 0) PROJECTION_SALES
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #M_SUPPLEMENTAL_DISC_PROJ
FROM #DATA_TABLE PRD
JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_SUPPLEMENTAL_DISC_PROJ NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING SUPPLEMENTAL ACTUAL  INFORMATION-------------------
IF OBJECT_ID('TEMPDB..#M_SUPPLEMENTAL_DISC_ACTUALS') IS NOT NULL
	DROP TABLE #M_SUPPLEMENTAL_DISC_ACTUALS

SELECT SUM(NSP.ACTUAL_SALES) ACTUAL_SALES
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #M_SUPPLEMENTAL_DISC_ACTUALS
FROM #DATA_TABLE PRD
JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_SUPPLEMENTAL_DISC_ACTUALS NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING MANDATED DISCOUNT PROJECTION  INFORMATION-------------------
IF OBJECT_ID('TEMPDB..#M_DISCOUNT_PROJECTION') IS NOT NULL
	DROP TABLE #M_DISCOUNT_PROJECTION

SELECT SUM(NMDP.PROJECTION_SALES) PROJECTION_SALES
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #M_DISCOUNT_PROJECTION
FROM #DATA_TABLE PRD
JOIN M_DISCOUNT_PROJECTION NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NMDP.PERIOD_SID
	AND SAVE_FLAG = 1
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING MANDATED DISCOUNT ACTUAL  INFORMATION-------------------              
IF OBJECT_ID('TEMPDB..#M_ACTUAL_DISCOUNT') IS NOT NULL
	DROP TABLE #M_ACTUAL_DISCOUNT

SELECT SUM(NMDP.ACTUAL_SALES) ACTUAL_SALES
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #M_ACTUAL_DISCOUNT
FROM #DATA_TABLE PRD
JOIN M_ACTUAL_DISCOUNT NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NMDP.PERIOD_SID
	AND SAVE_FLAG = 1
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING NON MANDATED SALES PROJECTION  INFORMATION-------------------  
IF OBJECT_ID('TEMPDB..#NM_SALES_PROJECTION') IS NOT NULL
	DROP TABLE #NM_SALES_PROJECTION

SELECT SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), PROJECTION_SALES, NULL)) PROJECTION_SALES
	,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), PROJECTION_UNITS, NULL) * COALESCE(NULLIF(UOM.UOM_VALUE, 0),1)) PROJECTION_UNITS
	,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), PROJECTION_SALES, NULL) * U.ITEM_PRICE) AS NM_COGS_PROJECTED
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #NM_SALES_PROJECTION
FROM #DATA_TABLE PRD
JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN NM_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN (SELECT DISTINCT ITEM_MASTER_SID,PROJECTION_DETAILS_SID FROM #TEMP_CCP) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND PRD.PERIOD_SID = U.PERIOD_SID
LEFT JOIN #ITEM_UOM_DETAILS UOM ON UOM.ITEM_MASTER_SID = CD.ITEM_MASTER_SID
WHERE EXISTS (
		SELECT 1
		FROM #DEDUCTION_INCLUSION A
		WHERE A.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		)
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING NON MANDATED  ACTUAL  INFORMATION-------------------                     
IF OBJECT_ID('TEMPDB..#NM_ACTUAL_SALES') IS NOT NULL
	DROP TABLE #NM_ACTUAL_SALES

SELECT SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), ACTUAL_SALES, NULL)) ACTUAL_SALES
	,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), ACTUAL_UNITS, NULL) * COALESCE(NULLIF(UOM.UOM_VALUE, 0),1)) ACTUAL_UNITS
	,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), ACTUAL_SALES, NULL) * U.ITEM_PRICE) AS NM_COGS_ACTUAL
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #NM_ACTUAL_SALES
FROM #DATA_TABLE PRD
JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN NM_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN (SELECT DISTINCT ITEM_MASTER_SID,PROJECTION_DETAILS_SID FROM #TEMP_CCP) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND PRD.PERIOD_SID = U.PERIOD_SID
LEFT JOIN #ITEM_UOM_DETAILS UOM ON UOM.ITEM_MASTER_SID = CD.ITEM_MASTER_SID
WHERE EXISTS (
		SELECT 1
		FROM #DEDUCTION_INCLUSION A
		WHERE A.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		)
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING  MANDATED  PROJECTION  INFORMATION-------------------     
IF OBJECT_ID('TEMPDB..#M_SALES_PROJECTION') IS NOT NULL
	DROP TABLE #M_SALES_PROJECTION

SELECT SUM(PROJECTION_SALES) PROJECTION_SALES
	,SUM(PROJECTION_UNITS) PROJECTION_UNITS
	,SUM(PROJECTION_SALES * U.ITEM_PRICE) AS M_COGS_PROJECTED
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #M_SALES_PROJECTION
FROM #DATA_TABLE PRD
JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN (SELECT DISTINCT ITEM_MASTER_SID,PROJECTION_DETAILS_SID FROM #TEMP_CCP) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND PRD.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

--------------------------------------------------------- PULLING  MANDATED  ACTUAL  INFORMATION-------------------  
IF OBJECT_ID('TEMPDB..#M_ACTUAL_SALES') IS NOT NULL
	DROP TABLE #M_ACTUAL_SALES

SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
	,SUM(ACTUAL_UNITS) ACTUAL_UNITS
	,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS M_COGS_ACTUAL
	,PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO
INTO #M_ACTUAL_SALES
FROM #DATA_TABLE PRD
JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
JOIN M_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND PRD.PERIOD_SID = NSP.PERIOD_SID
	AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN (SELECT DISTINCT ITEM_MASTER_SID,PROJECTION_DETAILS_SID FROM #TEMP_CCP) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND PRD.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR
	,PRD.CFF_MASTER_SID
	,HIERARCHY_NO
	,LEVEL_NAME
	,PARENT_HIERARCHY_NO

-------------------------------------------------------- RETURNSGALUAT-543--------------------------
--SELECT HIERARCHY_NO,
--       LEVEL_NAME,
--       YEAR,
--       PERIOD,
--       AVG(TR.ACTUAL_RATE)    ACTUAL_RATE,
--       AVG(TR.PROJECTED_RATE) PROJECTED_RATE
--INTO   #RETURNS
--FROM   #TEMP_RETURNS TR
--JOIN   CCP_DETAILS CC ON TR.ITEM_MASTER_SID = CC.ITEM_MASTER_SID
--JOIN   #CCP_INFO C ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
--JOIN   #PERIOD P ON P.PERIOD_SID = TR.PERIOD_SID
--GROUP  BY HIERARCHY_NO,
--          LEVEL_NAME,
--          YEAR,
--          PERIOD
--IF OBJECT_ID('TEMPDB..#RETURNS') IS NOT NULL
--  DROP TABLE #RETURNS
--SELECT HIERARCHY_NO,
--       LEVEL_NAME,
--       YEAR,
--       PERIOD,
--      ISNULL(SUM(( ISNULL(NSP.PROJECTION_SALES, 0)
--             + ISNULL(MSP.PROJECTION_SALES, 0) ) * TR.PROJECTED_RATE),0) AS RETURNS_PROJECTED,
--       ISNULL( SUM(( ISNULL(NAS.ACTUAL_SALES, 0)
--             + ISNULL(MAS.ACTUAL_SALES, 0) ) * TR.ACTUAL_RATE)   ,0)     AS RETURNS_ACTUALS
--INTO   #RETURNS
--FROM   #TEMP_RETURNS TR
--       JOIN CCP_DETAILS CC
--         ON TR.ITEM_MASTER_SID = CC.ITEM_MASTER_SID
--       JOIN #CCP_INFO C
--         ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
--       JOIN #PERIOD P
--         ON P.PERIOD_SID = TR.PERIOD_SID
--       LEFT OUTER JOIN NM_SALES_PROJECTION NSP
--                    ON NSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
--                       AND P.PERIOD_SID = NSP.PERIOD_SID
--                       AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
--       LEFT OUTER JOIN M_SALES_PROJECTION MSP
--                    ON MSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
--                       AND P.PERIOD_SID = MSP.PERIOD_SID
--                       AND MSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
--       LEFT OUTER JOIN NM_ACTUAL_SALES NAS
--                    ON NAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
--                       AND P.PERIOD_SID = NAS.PERIOD_SID
--                       AND NAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
--       LEFT OUTER JOIN M_ACTUAL_SALES MAS
--                    ON MAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
--                       AND P.PERIOD_SID = MAS.PERIOD_SID
--                       AND MAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
--GROUP  BY HIERARCHY_NO,
--          LEVEL_NAME,
--          YEAR,
--          PERIOD
-------------------------------------------------AGGREGATING  SALES INFORMATION ------------------------------
IF OBJECT_ID('TEMPDB..#SALES') IS NOT NULL
	DROP TABLE #SALES

SELECT FD.YEAR
	,FD.PERIOD
	,FD.CFF_MASTER_SID
	,FD.HIERARCHY_NO
	,FD.LEVEL_NAME
	,FD.PARENT_HIERARCHY_NO
	,COALESCE((NSP.PROJECTION_SALES), 0) + COALESCE((MSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
	,COALESCE((NSP.PROJECTION_UNITS), 0) + COALESCE((MSP.PROJECTION_UNITS), 0) AS PROJECTION_UNITS
	,COALESCE((NAS.ACTUAL_SALES), 0) + COALESCE((MAS.ACTUAL_SALES), 0) AS ACTUAL_SALES
	,COALESCE((NAS.ACTUAL_UNITS), 0) + COALESCE((MAS.ACTUAL_UNITS), 0) AS ACTUAL_UNITS
	,COALESCE((MSP.M_COGS_PROJECTED), 0) + COALESCE((NSP.NM_COGS_PROJECTED), 0) AS COGS_PROJECTED
	,COALESCE((MAS.M_COGS_ACTUAL), 0) + COALESCE((NAS.NM_COGS_ACTUAL), 0) AS COGS_ACTUAL
	,COALESCE((NAS.ACTUAL_SALES), 0) AS NM_ACTUAL_SALES
	,COALESCE((NSP.PROJECTION_SALES), 0) AS NM_PROJECTED_SALES
	,COALESCE((NAS.ACTUAL_UNITS), 0) AS NM_ACTUAL_UNITS
	,COALESCE((NSP.PROJECTION_UNITS), 0) AS NM_PROJECTED_UNITS
	,COALESCE((MAS.ACTUAL_SALES), 0) AS M_ACTUAL_SALES
	,COALESCE((MSP.PROJECTION_SALES), 0) AS M_PROJECTED_SALES
INTO #SALES
FROM (
	SELECT CFF_MASTER_SID
		,YEAR
		,PERIOD
		,LEVEL_NAME
		,HIERARCHY_NO
		,PARENT_HIERARCHY_NO
	FROM #DATA_TABLE
	GROUP BY CFF_MASTER_SID
		,YEAR
		,PERIOD
		,LEVEL_NAME
		,HIERARCHY_NO
		,PARENT_HIERARCHY_NO
	) FD
LEFT JOIN #NM_SALES_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
	AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
	AND NSP.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(NSP.PARENT_HIERARCHY_NO, NSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #M_SALES_PROJECTION MSP ON MSP.YEAR = FD.YEAR
	AND MSP.PERIOD = FD.PERIOD
	AND MSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MSP.HIERARCHY_NO = FD.HIERARCHY_NO
	AND MSP.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(MSP.PARENT_HIERARCHY_NO, MSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #NM_ACTUAL_SALES NAS ON NAS.YEAR = FD.YEAR
	AND NAS.PERIOD = FD.PERIOD
	AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND NAS.HIERARCHY_NO = FD.HIERARCHY_NO
	AND NAS.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(NAS.PARENT_HIERARCHY_NO, NAS.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #M_ACTUAL_SALES MAS ON MAS.YEAR = FD.YEAR
	AND MAS.PERIOD = FD.PERIOD
	AND MAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MAS.HIERARCHY_NO = FD.HIERARCHY_NO
	AND MAS.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(MAS.PARENT_HIERARCHY_NO, MAS.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)

-------------------------------------------------AGGREGATING  DISCOUNT INFORMATION ------------------------------                            
IF OBJECT_ID('TEMPDB..#DISCOUNT') IS NOT NULL
	DROP TABLE #DISCOUNT
	
SELECT FD.YEAR
	,FD.PERIOD
	,COALESCE((NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
	,COALESCE((NAD.ACTUAL_SALES), 0) AS ACTUAL_SALES
	,FD.CFF_MASTER_SID
	,FD.LEVEL_NAME
	,FD.HIERARCHY_NO
	,FD.PARENT_HIERARCHY_NO
	,ACCRUAL_AMOUNT_PROJECTION
	,ACCRUAL_AMOUNT_ACTUAL
INTO #DISCOUNT
FROM (
	SELECT DISTINCT CFF_MASTER_SID
		,YEAR
		,PERIOD
		,LEVEL_NAME
		,HIERARCHY_NO
		,PARENT_HIERARCHY_NO
	FROM #DATA_TABLE
	) FD
LEFT JOIN #NM_DISCOUNT_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
	AND FD.CFF_MASTER_SID = NSP.CFF_MASTER_SID
	AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
	AND NSP.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(NSP.PARENT_HIERARCHY_NO, NSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #NM_ACTUAL_DISCOUNT NAD ON NAD.YEAR = FD.YEAR
	AND NAD.PERIOD = FD.PERIOD
	AND FD.CFF_MASTER_SID = NAD.CFF_MASTER_SID
	AND NAD.HIERARCHY_NO = FD.HIERARCHY_NO
	AND NAD.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(NAD.PARENT_HIERARCHY_NO, NAD.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)

-------------------------------------------------AGGREGATING  PPA AND SUPPLEMENTAL INFORMATION ------------------------------  
IF OBJECT_ID('TEMPDB..#PPA_SUPP_MANDATED') IS NOT NULL
	DROP TABLE #PPA_SUPP_MANDATED
	
SELECT FD.YEAR
	,FD.PERIOD
	,0 AS PPA_DISCOUNT_PROJECTED
	,COALESCE((SDP.PROJECTION_SALES), 0) AS SUPPLEMENTAL_DISCOUNT_PROJECTED
	,COALESCE((MDP.PROJECTION_SALES), 0) AS MANDATED_DISCOUNT_PROJECTED
	,0 AS PPA_ACTUAL_SALES
	,COALESCE((SDA.ACTUAL_SALES), 0) AS SUPPLEMENTAL_DISCOUNT_ACTUALS
	,COALESCE((MAD.ACTUAL_SALES), 0) AS MANDATED_DISCOUNT_ACTUALS
	,FD.CFF_MASTER_SID
	,FD.HIERARCHY_NO
	,FD.LEVEL_NAME
	,FD.PARENT_HIERARCHY_NO
INTO #PPA_SUPP_MANDATED
FROM (
	SELECT DISTINCT CFF_MASTER_SID
		,YEAR
		,PERIOD
		,LEVEL_NAME
		,HIERARCHY_NO
		,PARENT_HIERARCHY_NO
	FROM #DATA_TABLE
	) FD
--LEFT JOIN #NM_PPA_PROJECTION NSP ON NSP.YEAR = FD.YEAR
--	AND NSP.PERIOD = FD.PERIOD
--	AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
--	AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
--	AND NSP.LEVEL_NAME = FD.LEVEL_NAME
--	AND COALESCE(NSP.PARENT_HIERARCHY_NO, NSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
--LEFT JOIN #NM_ACTUAL_PPA NAS ON NAS.YEAR = FD.YEAR
--	AND NAS.PERIOD = FD.PERIOD
--	AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
--	AND NAS.HIERARCHY_NO = FD.HIERARCHY_NO
--	AND NAS.LEVEL_NAME = FD.LEVEL_NAME
--	AND COALESCE(NAS.PARENT_HIERARCHY_NO, NAS.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #M_SUPPLEMENTAL_DISC_PROJ SDP ON SDP.YEAR = FD.YEAR
	AND SDP.PERIOD = FD.PERIOD
	AND SDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND SDP.HIERARCHY_NO = FD.HIERARCHY_NO
	AND SDP.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(SDP.PARENT_HIERARCHY_NO, SDP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #M_SUPPLEMENTAL_DISC_ACTUALS SDA ON SDA.YEAR = FD.YEAR
	AND SDA.PERIOD = FD.PERIOD
	AND SDA.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND SDA.HIERARCHY_NO = FD.HIERARCHY_NO
	AND SDA.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(SDA.PARENT_HIERARCHY_NO, SDA.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #M_DISCOUNT_PROJECTION MDP ON MDP.YEAR = FD.YEAR
	AND MDP.PERIOD = FD.PERIOD
	AND MDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MDP.HIERARCHY_NO = FD.HIERARCHY_NO
	AND MDP.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(MDP.PARENT_HIERARCHY_NO, MDP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
LEFT JOIN #M_ACTUAL_DISCOUNT MAD ON MAD.YEAR = FD.YEAR
	AND MAD.PERIOD = FD.PERIOD
	AND MAD.CFF_MASTER_SID = FD.CFF_MASTER_SID
	AND MAD.HIERARCHY_NO = FD.HIERARCHY_NO
	AND MAD.LEVEL_NAME = FD.LEVEL_NAME
	AND COALESCE(MAD.PARENT_HIERARCHY_NO, MAD.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	-----------------------TAKING  ITEM LEVEL VALUES FROM CFF_PRODUCT_LEVEL_FILES_DATA
	;

WITH PRODUCT_FILE_DATA
AS (
	SELECT P.YEAR
		,P.PERIOD
		,SUM(EX_FACTORY_SALES_ACTUALS) AS EX_FACTORY_SALES_ACTUALS
		,SUM(EX_FACTORY_SALES_PROJ) AS EX_FACTORY_SALES_PROJ
		,SUM(DEMAND_SALES_ACTUALS) AS DEMAND_SALES_ACTUALS
		,SUM(DEMAND_SALES_PROJ) AS DEMAND_SALES_PROJ
		,SUM(ADJUSTED_DEMAND_ACTUALS) AS ADJUSTED_DEMAND_ACTUALS
		,SUM(ADJUSTED_DEMAND_PROJ) AS ADJUSTED_DEMAND_PROJ
		,SUM(IW_MASTER_ACTUALS) AS IW_MASTER_ACTUALS
		,SUM(IW_MASTER_PROJ) AS IW_MASTER_PROJ
		,CF.CFF_MASTER_SID AS CFF_MASTER_SID
		,B.HIERARCHY_NO
		,B.LEVEL_NAME
		,B.PARENT_HIERARCHY_NO
	FROM CFF_PRODUCT_LEVEL_FILES_DATA CF
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,ITEM_MASTER_SID
			,HIERARCHY_NO
			,LEVEL_NAME
			,PARENT_HIERARCHY_NO
		FROM #TEMP_CCP
		) B ON CF.CFF_MASTER_SID = B.CFF_MASTER_SID
		AND CF.ITEM_MASTER_SID = B.ITEM_MASTER_SID
	INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
	GROUP BY P.YEAR
		,P.PERIOD
		,CF.CFF_MASTER_SID
		,B.HIERARCHY_NO
		,B.LEVEL_NAME
		,B.PARENT_HIERARCHY_NO
	)
	,
	--------------------TAKING  ITEM+COMPANY LEVEL VALUES FROM CFF_COMP_PRD_LEVEL_FILES_DATA
COMP_PRODUCT_FILE_DATA
AS (
	SELECT P.YEAR
		,P.PERIOD
		,SUM(CUST_EX_FACTORY_SALES_ACTUALS) AS CUST_EX_FACTORY_SALES_ACTUALS
		,SUM(CUST_EX_FACTORY_SALES_PROJ) AS CUST_EX_FACTORY_SALES_PROJ
		,SUM(IW_DETAILS_ACTUALS) AS IW_DETAILS_ACTUALS
		,SUM(IW_DETAILS_PROJ) AS IW_DETAILS_PROJ
		,CF.CFF_MASTER_SID AS CFF_MASTER_SID
		,B.HIERARCHY_NO
		,B.LEVEL_NAME
		,B.PARENT_HIERARCHY_NO
	FROM CFF_COMP_PRD_LEVEL_FILES_DATA CF
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,ITEM_MASTER_SID
			,COMPANY_MASTER_SID
			,HIERARCHY_NO
			,LEVEL_NAME
			,PARENT_HIERARCHY_NO
		FROM #TEMP_CCP
		) B ON CF.CFF_MASTER_SID = B.CFF_MASTER_SID
		AND CF.ITEM_MASTER_SID = B.ITEM_MASTER_SID
		AND CF.COMPANY_MASTER_SID = B.COMPANY_MASTER_SID
	INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
	GROUP BY P.YEAR
		,P.PERIOD
		,CF.CFF_MASTER_SID
		,B.HIERARCHY_NO
		,B.LEVEL_NAME
		,B.PARENT_HIERARCHY_NO
	)
------------- INSERTING INTO RESULT TABLE  BASED ON FORMULAS FOR EACH COLUMN----------------------------- 

INSERT INTO #RESULT (
	CFF_PROJECTION_MASTER_SID
	,HIERARCHY_NO
	,PARENT_HIERARCHY_NO
	,LEVEL_NAME
	,EX_FACTORY_SALES_ACTUALS
	,EX_FACTORY_SALES_PROJ
	,YEAR
	,PERIOD
	,CONTRACT_SALES_ACTUALS
	,CONTRACT_SALES_PROJECTED
	,CONTRACT_UNITS_ACTUALS
	,CONTRACT_UNITS_PROJECTED
	,TOTAL_DISCOUNT
	,TOTAL_DISCOUNT_PROJECTED
	,TOTAL_DISCOUNT_PERCENTAGE
	,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,EX_FACTORY_SALES_ACTUALS_PERCENT
	,EX_FACTORY_SALES_PROJECTED_PERCENT
	,PPA_DISCOUNT
	,PPA_DISCOUNT_PROJECTED
	,PPA_DISCOUNT_PERCENTAGE
	,PPA_DISCOUNT_PROJECTED_PERCENTAGE
	,MANDATED_DISCOUNT_ACTUALS
	,MANDATED_DISCOUNT_PROJECTED
	,SUPPLEMENTAL_DISCOUNT_ACTUALS
	,SUPPLEMENTAL_DISCOUNT_PROJECTED
	,MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
	,MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
	,SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
	,SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,NET_SALES
	,NET_SALES_PROJECTED
	,DEMAND_SALES_ACTUAL
	,DEMAND_SALES_PROJECTED
	,INVENTORY_WITHDRAWAL_ACTUAL
	,INVENTORY_WITHDRAWAL_PROJECTED
	,DEMAND_SALES_ACTUAL_PERCENT
	,DEMAND_SALES_PROJECTED_PERCENT
	,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
	,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
	,TOTAL_DISCOUNT_RPU_ACTUALS
	,TOTAL_DISCOUNT_RPU_PROJECTED
	,TOTAL_PPA_RPU_ACTUALS
	,TOTAL_PPA_RPU_PROJECTED
	,TOTAL_RPU
	,TOTAL_PROJECTED_RPU
	,COGS_ACTUAL
	,COGS_PROJECTED
	,NET_PROFIT_ACTUAL
	,NET_PROFIT_PROJECTED
	,ADJUSTED_DEMAND_ACTUALS
	,ADJUSTED_DEMAND_PROJ
	,CUST_EX_FACTORY_SALES_ACTUALS
	,CUST_EX_FACTORY_SALES_PROJ
	,IW_DETAILS_ACTUALS
	,IW_DETAILS_PROJ
	,ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
	,ADJUSTED_DEMAND_PROJ_PERCENTAGE
	,CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
	,CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
	,IW_DETAILS_ACTUALS_PERCENTAGE
	,IW_DETAILS_PROJ_PERCENTAGE
	,NET_SALES_OF_EX_FACTORY_ACTUALS
	,NET_SALES_OF_EX_FACTORY_PROJECTED
	,DISCOUNT_OF_EX_FACTORY_ACTUALS
	,DISCOUNT_OF_EX_FACTORY_PROJECTED
	,NET_EX_FACTORY_SALES_ACTUALS ---------------CEL-386
	,NET_EX_FACTORY_SALES_PROJECTED ---------------CEL-386
	,NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACTUALS ---------------CEL-386                            
	,NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_PROJECTED ---------------CEL-386
	,TOTAL_DISCOUNT_ACCRUAL
	)
SELECT @FIRST_PROJ_SID
	,S.HIERARCHY_NO
	,S.PARENT_HIERARCHY_NO
	,S.LEVEL_NAME
	,ISNULL(PFD.EX_FACTORY_SALES_ACTUALS, 0)
	,ISNULL(PFD.EX_FACTORY_SALES_PROJ, 0)
	,S.YEAR
	,S.PERIOD
	,ISNULL(S.ACTUAL_SALES, 0) AS CONTRACT_SALES_ACTUALS
	,ISNULL(S.PROJECTION_SALES, 0) AS CONTRACT_SALES_PROJECTED
	,ISNULL(S.ACTUAL_UNITS, 0) AS CONTRACT_UNITS_ACTUALS
	,ISNULL(S.PROJECTION_UNITS, 0) AS CONTRACT_UNITS_PROJECTED
	,ISNULL(ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0), 0) AS TOTAL_DISCOUNT
	,ISNULL(ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0),0) AS TOTAL_DISCOUNT_PROJECTED
	,ISNULL((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_SALES, 0), 0) * 100 AS TOTAL_DISCOUNT_PERCENTAGE
	,ISNULL((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_SALES, 0), 0) * 100 AS TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,(ISNULL(S.ACTUAL_SALES / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0), 0)) * 100 AS EX_FACTORY_SALES_ACTUALS_PERCENT
	,(ISNULL(S.PROJECTION_SALES / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0), 0)) * 100 AS EX_FACTORY_SALES_PROJECTED_PERCENT
	,ISNULL(PPA_ACTUAL_SALES, 0) AS PPA_DISCOUNT
	,ISNULL(PPA_DISCOUNT_PROJECTED, 0) AS PPA_DISCOUNT_PROJECTED
	,ISNULL(PPA_ACTUAL_SALES / NULLIF(S.NM_ACTUAL_SALES, 0), 0) * 100 AS PPA_DISCOUNT_PERCENTAGE
	,ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.NM_PROJECTED_SALES, 0), 0) * 100 AS PPA_DISCOUNT_PROJECTED_PERCENTAGE
	,ISNULL(MANDATED_DISCOUNT_ACTUALS, 0) AS MANDATED_DISCOUNT_ACTUALS
	,ISNULL(MANDATED_DISCOUNT_PROJECTED, 0) AS MANDATED_DISCOUNT_PROJECTED
	,ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) AS SUPPLEMENTAL_DISCOUNT_ACTUALS
	,ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) AS SUPPLEMENTAL_DISCOUNT_PROJECTED
	,(COALESCE(ISNULL(MANDATED_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100 AS MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
	,(COALESCE(ISNULL(MANDATED_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100 AS MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
	,(COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100 AS SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
	,(COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100 AS SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,ISNULL(S.ACTUAL_SALES - (ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)), 0) AS NET_SALES
	,ISNULL(S.PROJECTION_SALES - (ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)), 0) AS NET_SALES_PROJECTED
	,ISNULL(PFD.DEMAND_SALES_ACTUALS, 0) AS DEMAND_SALES_ACTUAL
	,ISNULL(PFD.DEMAND_SALES_PROJ, 0) AS DEMAND_SALES_PROJECTED
	,ISNULL(PFD.IW_MASTER_ACTUALS, 0) AS INVENTORY_WITHDRAWAL_ACTUAL
	,ISNULL(PFD.IW_MASTER_PROJ, 0) AS INVENTORY_WITHDRAWAL_PROJECTED
	,(ISNULL(S.ACTUAL_SALES / NULLIF(PFD.DEMAND_SALES_ACTUALS, 0), 0)) * 100 AS DEMAND_SALES_ACTUAL_PERCENT
	,(ISNULL(S.PROJECTION_SALES / NULLIF(PFD.DEMAND_SALES_PROJ, 0), 0)) * 100 AS DEMAND_SALES_PROJECTED_PERCENT
	,(ISNULL(S.ACTUAL_SALES / NULLIF(PFD.IW_MASTER_ACTUALS, 0), 0)) * 100 AS INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
	,(ISNULL(S.PROJECTION_SALES / NULLIF(PFD.IW_MASTER_PROJ, 0), 0)) * 100 AS INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
	,(ISNULL(ND.ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0)) AS TOTAL_DISCOUNT_RPU_ACTUALS
	,(ISNULL(ND.PROJECTION_SALES / NULLIF(S.PROJECTION_UNITS, 0), 0)) AS TOTAL_DISCOUNT_RPU_PROJECTED
	,(ISNULL(PPA_ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0)) AS TOTAL_PPA_RPU_ACTUALS
	,(ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.PROJECTION_UNITS, 0), 0)) AS TOTAL_PPA_RPU_PROJECTED
	,ISNULL((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_UNITS, 0), 0) AS TOTAL_RPU
	,COALESCE((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_UNITS, 0), 0) AS TOTAL_PROJECTED_RPU
	,ISNULL(S.COGS_ACTUAL, 0) AS COGS_ACTUAL
	,ISNULL(S.COGS_PROJECTED, 0) AS COGS_PROJECTED
	,ISNULL(((S.ACTUAL_SALES - (ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0))) - (ISNULL(S.COGS_ACTUAL, 0))), 0) AS NET_PROFIT_ACTUAL
	,ISNULL(((S.PROJECTION_SALES- (ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0))) - (ISNULL(S.COGS_PROJECTED, 0))), 0) AS NET_PROFIT_PROJECTED
	,ISNULL(PFD.ADJUSTED_DEMAND_ACTUALS, 0)
	,ISNULL(PFD.ADJUSTED_DEMAND_PROJ, 0)
	,ISNULL(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0)
	,ISNULL(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0)
	,ISNULL(CPFD.IW_DETAILS_ACTUALS, 0)
	,ISNULL(CPFD.IW_DETAILS_PROJ, 0)
	,ISNULL(S.ACTUAL_SALES / NULLIF(PFD.ADJUSTED_DEMAND_ACTUALS, 0), 0) * 100 AS ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
	,ISNULL(S.PROJECTION_SALES / NULLIF(PFD.ADJUSTED_DEMAND_PROJ, 0), 0) * 100 AS ADJUSTED_DEMAND_PROJ_PERCENTAGE
	,ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0), 0) * 100 AS CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
	,ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0), 0) * 100 AS CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
	,ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.IW_DETAILS_ACTUALS, 0), 0) * 100 AS IW_DETAILS_ACTUALS_PERCENTAGE
	,ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.IW_DETAILS_PROJ, 0), 0) * 100 AS IW_DETAILS_PROJ_PERCENTAGE
	,COALESCE(((S.ACTUAL_SALES - (ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0))) / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0)) * 100, 0) AS NET_SALES_OF_EX_FACTORY_ACTUALS
	,COALESCE(((S.PROJECTION_SALES- (ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0))) / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0)) * 100, 0) AS NET_SALES_OF_EX_FACTORY_PROJECTED
	,ISNULL(((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0)) * 100, 0) AS DISCOUNT_OF_EX_FACTORY_ACTUALS
	,ISNULL(((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0)) * 100, 0) AS DISCOUNT_OF_EX_FACTORY_PROJECTED
	,ISNULL(PFD.EX_FACTORY_SALES_ACTUALS- (ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)), 0)
	,ISNULL(PFD.EX_FACTORY_SALES_PROJ- (ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)), 0)
	,ISNULL(((PFD.EX_FACTORY_SALES_ACTUALS - ISNULL((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)), 0)) / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0)), 0) * 100
	,ISNULL(((PFD.EX_FACTORY_SALES_PROJ- (ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0))) / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0)), 0) * 100
	,COALESCE(ACCRUAL_AMOUNT_PROJECTION, ACCRUAL_AMOUNT_ACTUAL) AS TOTAL_DISCOUNT_ACCRUAL
FROM #SALES S
LEFT JOIN PRODUCT_FILE_DATA PFD ON S.YEAR = PFD.YEAR
	AND S.PERIOD = PFD.PERIOD
	AND S.CFF_MASTER_SID = PFD.CFF_MASTER_SID
	AND S.HIERARCHY_NO = PFD.HIERARCHY_NO
	AND S.LEVEL_NAME = PFD.LEVEL_NAME
	AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(PFD.PARENT_HIERARCHY_NO, PFD.HIERARCHY_NO)
LEFT JOIN COMP_PRODUCT_FILE_DATA CPFD ON S.YEAR = CPFD.YEAR
	AND S.PERIOD = CPFD.PERIOD
	AND S.CFF_MASTER_SID = CPFD.CFF_MASTER_SID
	AND S.HIERARCHY_NO = CPFD.HIERARCHY_NO
	AND S.LEVEL_NAME = CPFD.LEVEL_NAME
	AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(CPFD.PARENT_HIERARCHY_NO, CPFD.HIERARCHY_NO)
LEFT JOIN #PPA_SUPP_MANDATED PSM ON S.YEAR = PSM.YEAR
	AND S.PERIOD = PSM.PERIOD
	AND S.CFF_MASTER_SID = PSM.CFF_MASTER_SID
	AND S.HIERARCHY_NO = PSM.HIERARCHY_NO
	AND S.LEVEL_NAME = PSM.LEVEL_NAME
	AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(PSM.PARENT_HIERARCHY_NO, PSM.HIERARCHY_NO)
LEFT JOIN #DISCOUNT ND ON S.YEAR = ND.YEAR
	AND S.PERIOD = ND.PERIOD
	AND S.CFF_MASTER_SID = ND.CFF_MASTER_SID
	AND S.HIERARCHY_NO = ND.HIERARCHY_NO
	AND S.LEVEL_NAME = ND.LEVEL_NAME
	AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(ND.PARENT_HIERARCHY_NO, ND.HIERARCHY_NO)

------------------BASED ON THE SCREEN NAME -ASSUMPTIONS IT WILL DISPALY OUTPUT OF ONE PARTICULAR CFF---------------------
IF @SCREEN_NAME = 'ASSUMPTIONS'
BEGIN
	SELECT R.CFF_PROJECTION_MASTER_SID
		,R.HIERARCHY_NO
		,R.LEVEL_NAME
		,R.EX_FACTORY_SALES_ACTUALS
		,R.EX_FACTORY_SALES_PROJ
		,R.YEAR
		,R.PERIOD
		,R.CONTRACT_SALES_ACTUALS
		,R.CONTRACT_SALES_PROJECTED
		,R.CONTRACT_UNITS_ACTUALS
		,R.CONTRACT_UNITS_PROJECTED
		,R.TOTAL_DISCOUNT
		,R.TOTAL_DISCOUNT_PROJECTED
		,R.TOTAL_DISCOUNT_PERCENTAGE
		,R.TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,R.EX_FACTORY_SALES_ACTUALS_PERCENT
		,R.EX_FACTORY_SALES_PROJECTED_PERCENT
		,R.PPA_DISCOUNT
		,R.PPA_DISCOUNT_PROJECTED
		,R.PPA_DISCOUNT_PERCENTAGE
		,R.PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,R.MANDATED_DISCOUNT_ACTUALS
		,R.MANDATED_DISCOUNT_PROJECTED
		,R.SUPPLEMENTAL_DISCOUNT_ACTUALS
		,R.SUPPLEMENTAL_DISCOUNT_PROJECTED
		,R.MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
		,R.MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
		,R.SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
		,R.SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,R.NET_SALES
		,R.NET_SALES_PROJECTED
		,R.DEMAND_SALES_ACTUAL
		,R.DEMAND_SALES_PROJECTED
		,R.INVENTORY_WITHDRAWAL_ACTUAL
		,R.INVENTORY_WITHDRAWAL_PROJECTED
		,R.DEMAND_SALES_ACTUAL_PERCENT
		,R.DEMAND_SALES_PROJECTED_PERCENT
		,R.INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,R.INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,R.TOTAL_DISCOUNT_RPU_ACTUALS
		,R.TOTAL_DISCOUNT_RPU_PROJECTED
		,R.TOTAL_PPA_RPU_ACTUALS
		,R.TOTAL_PPA_RPU_PROJECTED
		,R.TOTAL_RPU
		,R.TOTAL_PROJECTED_RPU
		,R.COGS_ACTUAL
		,R.COGS_PROJECTED
		,R.NET_PROFIT_ACTUAL
		,R.NET_PROFIT_PROJECTED
		,R.ADJUSTED_DEMAND_ACTUALS
		,R.ADJUSTED_DEMAND_PROJ
		,R.CUST_EX_FACTORY_SALES_ACTUALS
		,R.CUST_EX_FACTORY_SALES_PROJ
		,R.IW_DETAILS_ACTUALS
		,R.IW_DETAILS_PROJ
		,R.ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
		,R.ADJUSTED_DEMAND_PROJ_PERCENTAGE
		,R.CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
		,R.CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
		,R.IW_DETAILS_ACTUALS_PERCENTAGE
		,R.IW_DETAILS_PROJ_PERCENTAGE
		,R.PARENT_HIERARCHY_NO
		,NET_SALES_OF_EX_FACTORY_ACTUALS
		,NET_SALES_OF_EX_FACTORY_PROJECTED
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
	FROM #RESULT R
	JOIN (
		SELECT DISTINCT HIERARCHY_NO
			,PARENT_HIERARCHY_NO
			,LEVEL_NO
		FROM #CCP
		) C ON C.HIERARCHY_NO = R.HIERARCHY_NO
		AND COALESCE(R.PARENT_HIERARCHY_NO, R.HIERARCHY_NO) = COALESCE(C.PARENT_HIERARCHY_NO, C.HIERARCHY_NO)
	ORDER BY C.LEVEL_NO
		,HIERARCHY_NO
		,R.PARENT_HIERARCHY_NO
		,CASE 
			WHEN @VIEW = 'PIVOT'
				THEN YEAR
			ELSE PERIOD
			END
		,CASE 
			WHEN @VIEW = 'PIVOT'
				THEN PERIOD
			ELSE YEAR
			END
END

------------------BASED ON THE SCREEN NAME <>ASSUMPTIONS STARTS HERE ---------------------
------PULLING CFFDETAILS ALL CFF PASSING AS  INPUT----------------------------------
IF @SCREEN_NAME <> 'ASSUMPTIONS'
BEGIN
	IF OBJECT_ID('TEMPDB..#CFF_DETAILS') IS NOT NULL
		DROP TABLE #CFF_DETAILS

	SELECT A.CFF_DETAILS_SID
		,A.CFF_MASTER_SID
		,A.PROJECTION_MASTER_SID
		,A.CCP_DETAILS_SID
		,A.INBOUND_STATUS
		,A.SALES_INCLUSION
		,PD.PROJECTION_DETAILS_SID
		,CD.ITEM_MASTER_SID
	INTO #CFF_DETAILS
	FROM CFF_DETAILS A 
	JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID=A.CCP_DETAILS_SID AND PD.PROJECTION_MASTER_SID=A.PROJECTION_MASTER_SID
	JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID=PD.CCP_DETAILS_SID
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER B
			WHERE A.CFF_MASTER_SID = B.CFF_PROJECTION_MASTER_SID AND B.ID<>1
			)
			AND EXISTS(SELECT 1 FROM #CFF_DETAILS_CURRENT H WHERE A.CCP_DETAILS_SID=H.CCP_DETAILS_SID)
			 
	------FINDING HIERARCHY_NO,LEVEL_NAME_CCP  OTHER THAN FIRST CFF ----------------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_TEMP_CCP') IS NOT NULL
		DROP TABLE #PRIOR_TEMP_CCP
	SELECT A.HIERARCHY_NO,
       A.LEVEL_NAME,
       A.PARENT_HIERARCHY_NO,
       A.CCP_DETAILS_SID,
       A.CONTRACT_MASTER_SID,
       A.COMPANY_MASTER_SID,
       A.ITEM_MASTER_SID,
       A.PROJECTION_DETAILS_SID,
       CD.CFF_MASTER_SID,
       CASE
         WHEN CD.SALES_INCLUSION = 'y' THEN 1
         ELSE 0
       END SALES_INCLUSION,CD.CFF_DETAILS_SID
	   INTO #PRIOR_TEMP_CCP
FROM   (SELECT DISTINCT HIERARCHY_NO,
                        LEVEL_NAME,
                        PARENT_HIERARCHY_NO,
                        CCP_DETAILS_SID,
                        CONTRACT_MASTER_SID,
                        COMPANY_MASTER_SID,
                        ITEM_MASTER_SID,
                        PROJECTION_DETAILS_SID
        FROM   #TEMP_CCP)A
       JOIN #CFF_DETAILS CD
         ON CD.CCP_DETAILS_SID = A.CCP_DETAILS_SID 
		 /*
	SELECT CCP.CCP_DETAILS_SID
		,CCP.COMPANY_MASTER_SID
		,CCP.CONTRACT_MASTER_SID
		,CCP.ITEM_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,CD.CFF_MASTER_SID
		,C.HIERARCHY_NO
		,C.LEVEL_NAME
		,C.PARENT_HIERARCHY_NO
		,CASE 
			WHEN SALES_INCLUSION = 'y'
				THEN 1
			ELSE 0
			END SALES_INCLUSION
		,CD.CFF_DETAILS_SID
	INTO #PRIOR_TEMP_CCP
	FROM CCP_DETAILS CCP
	INNER JOIN PROJECTION_DETAILS PD ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	JOIN (
		SELECT DISTINCT HIERARCHY_NO
			,LEVEL_NAME
			,PARENT_HIERARCHY_NO
			,CCP_DETAILS_SID
		FROM #CCP
		) C ON C.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
	JOIN CFF_DETAILS CD ON CCP.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
		AND CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	WHERE EXISTS (
			SELECT 1
			FROM #CFF_PROJECTION_MASTER CF
			WHERE ID <> 1
				AND CD.CFF_MASTER_SID = CF.CFF_PROJECTION_MASTER_SID
			)
		AND EXISTS (
			SELECT 1
			FROM CFF_DETAILS A
			JOIN #CFF_PROJECTION_MASTER CF ON ID = 1
				AND A.CFF_MASTER_SID = CF.CFF_PROJECTION_MASTER_SID
			WHERE CD.CCP_DETAILS_SID = A.CCP_DETAILS_SID
			)
			 */
 


	------FINDING HIERARCHY_NO,LEVEL_NAME ACTUAL START DATE PROJ END DATE  ----------------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_DATA_TABLE') IS NOT NULL
		DROP TABLE #PRIOR_DATA_TABLE

	SELECT C.HIERARCHY_NO
		,C.LEVEL_NAME
		,PERIOD
		,YEAR
		,C.PARENT_HIERARCHY_NO
		,PERIOD_SID
		,PROJECTION_DETAILS_SID
		,CFF_MASTER_SID
		,SALES_INCLUSION
	INTO #PRIOR_DATA_TABLE
	FROM (
		SELECT DISTINCT PROJECTION_DETAILS_SID
			,CFF_MASTER_SID
			,HIERARCHY_NO
			,LEVEL_NAME
			,PARENT_HIERARCHY_NO
			,SALES_INCLUSION
		FROM #PRIOR_TEMP_CCP
		) C
	CROSS JOIN (
		SELECT DISTINCT PERIOD
			,YEAR
			,PERIOD_SID
		FROM #PERIOD
		WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
				AND @PROJ_END_PERIOD_SID
		) P

	------FINDING DEDUCTION_INCLUSION   OTHER THAN FIRST CFF ----------------------------------
	IF OBJECT_ID('TEMPDB..#DEDUCTION_INCLUSION1') IS NOT NULL
		DROP TABLE #DEDUCTION_INCLUSION1;

	SELECT A.CFF_MASTER_SID
		,A.PROJECTION_DETAILS_SID
		,RC.RS_CONTRACT_SID
		,CASE 
			WHEN CDI.DEDUCTION_INCLUSION = 'y'
				THEN 1
			ELSE 0
			END DEDUCTION_INCLUSION
	INTO #DEDUCTION_INCLUSION1
	FROM #PRIOR_TEMP_CCP A
	JOIN CFF_DEDUCTION_INCLUSION CDI ON CDI.CFF_DETAILS_SID = A.CFF_DETAILS_SID
	JOIN RS_CONTRACT RC ON RC.RS_MODEL_SID = CDI.RS_MODEL_SID
		AND RC.CONTRACT_MASTER_SID = A.CONTRACT_MASTER_SID

	--	   AND EXISTS(SELECT 1 FROM UDF_SPLITSTRING(  @RS_CONTRACT_SID,',') A WHERE A.TOKEN=RC.RS_CONTRACT_SID) OR @RS_CONTRACT_SID IS NULL
	------FINDING INDICATOR(SALES_INCLUSION)   OTHER THAN FIRST CFF ----------------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_CPP_INFO') IS NOT NULL
		DROP TABLE #PRIOR_CPP_INFO

	SELECT CD.CFF_MASTER_SID
		,CD.PROJECTION_MASTER_SID
		,CD.PROJECTION_DETAILS_SID
		,CD.CCP_DETAILS_SID
		,C.HIERARCHY_NO
		,C.LEVEL_NAME
	INTO #PRIOR_CPP_INFO
	FROM #CFF_DETAILS CD
	JOIN #CCP C ON C.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
	
-------------------------------------------------------------- NEWLY ADDED ENDS HERE
	---------------------------------------------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_ACCRUAL_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_ACCRUAL_DISCOUNT;
		SELECT
		 P.CFF_MASTER_SID
		,P.PROJECTION_DETAILS_SID
		,A.PERIOD_SID
		,A.RS_CONTRACT_SID
		,A.DISCOUNT_AMOUNT
		,P.HIERARCHY_NO
		,P.LEVEL_NAME
		INTO #PRIOR_ACCRUAL_DISCOUNT
		 FROM #ACCRUAL_DISCOUNT A JOIN #PRIOR_CPP_INFO P ON P.CCP_DETAILS_SID=A.CCP_DETAILS_SID
		 WHERE EXISTS(SELECT 1 FROM #PRIOR_RS_DATA RS WHERE RS.CCP_DETAILS_SID=A.CCP_DETAILS_SID
		 AND RS.RS_CONTRACT_SID=A.RS_CONTRACT_SID)
		/*
	WITH CTE
	AS (
		SELECT A.CFF_MASTER_SID
			,A.PROJECTION_DETAILS_SID
			,A.CCP_DETAILS_SID
			,CD.COMPANY_MASTER_SID
			,CD.CONTRACT_MASTER_SID
			,CD.ITEM_MASTER_SID
			,PERIOD_SID
			,PERIOD_DATE
			,RS.RS_CONTRACT_SID
			,HIERARCHY_NO
			,LEVEL_NAME
		FROM #PRIOR_CPP_INFO A
		JOIN CCP_DETAILS CD ON A.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
		JOIN #PRIOR_RS_DATA RS ON RS.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
		JOIN #PERIOD P ON P.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
				AND @PROJ_END_PERIOD_SID
		)
	SELECT CFF_MASTER_SID
		,PROJECTION_DETAILS_SID
		,PERIOD_SID
		,RC.RS_CONTRACT_SID
		,SUM(DEDUCTION_AMOUNT) / (DATEDIFF(MM, ACCRUAL_PERIOD_START_DATE, ACCRUAL_PERIOD_END_DATE) + 1) DISCOUNT_AMOUNT
		,HIERARCHY_NO
		,LEVEL_NAME
	INTO #PRIOR_ACCRUAL_DISCOUNT
	FROM ACCRUAL_MASTER A1
	JOIN RS_CONTRACT RC ON RC.RS_MODEL_SID = A1.RS_MODEL_SID
		AND RC.CONTRACT_MASTER_SID = A1.CONTRACT_MASTER_SID
	JOIN CTE A2 ON A2.PERIOD_DATE BETWEEN CONVERT(DATETIME, DATEADD(MM, - 1, DATEADD(DD, 1, EOMONTH(A1.ACCRUAL_PERIOD_START_DATE, 0))))
			AND CONVERT(DATETIME, DATEADD(MM, - 1, DATEADD(DD, 1, EOMONTH(A1.ACCRUAL_PERIOD_END_DATE, 0))))
		AND A1.CONTRACT_MASTER_SID = A2.CONTRACT_MASTER_SID
		AND A1.COMPANY_MASTER_SID = A2.COMPANY_MASTER_SID
		AND A1.ITEM_MASTER_SID = A2.ITEM_MASTER_SID
		AND A2.RS_CONTRACT_SID = RC.RS_CONTRACT_SID
		AND DATEADD(DD, 1, EOMONTH(A1.ACCRUAL_PERIOD_START_DATE, - 1)) >= @ACTUAL_START_DATE
		AND A1.ACCRUAL_PERIOD_END_DATE <= @PROJ_END_PERIOD_DATE
	GROUP BY CFF_MASTER_SID
		,PROJECTION_DETAILS_SID
		,PERIOD_SID
		,RC.RS_CONTRACT_SID
		,ACCRUAL_PERIOD_START_DATE
		,ACCRUAL_PERIOD_END_DATE
		,HIERARCHY_NO
		,LEVEL_NAME
		*/
	----------------------------PULLING DISCOUNT OF PROJECTED  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_DISCOUNT_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_DISCOUNT_PROJECTION

	SELECT ISNULL(SUM(IIF((DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL), NSP.PROJECTION_SALES, NULL)), 0) AS PROJECTION_SALES
		,SUM(AD.DISCOUNT_AMOUNT) AS ACCRUAL_AMOUNT_PROJECTION
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,PRD.HIERARCHY_NO
		,PRD.LEVEL_NAME
		,PRD.PARENT_HIERARCHY_NO
	INTO #PRIOR_NM_DISCOUNT_PROJECTION
	FROM #PRIOR_DATA_TABLE PRD
	JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_DISCOUNT_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN #DEDUCTION_INCLUSION1 DI ON DI.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND DI.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND DI.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
	LEFT JOIN #PRIOR_ACCRUAL_DISCOUNT AD ON NSP.PROJECTION_DETAILS_SID = AD.PROJECTION_DETAILS_SID
		AND PRD.CFF_MASTER_SID = AD.CFF_MASTER_SID
		AND NSP.RS_CONTRACT_SID = AD.RS_CONTRACT_SID
		AND NSP.PERIOD_SID = AD.PERIOD_SID
		AND PRD.HIERARCHY_NO = AD.HIERARCHY_NO
		AND PRD.LEVEL_NAME = AD.LEVEL_NAME
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,PRD.HIERARCHY_NO
		,PRD.LEVEL_NAME
		,PRD.PARENT_HIERARCHY_NO

	----------------------------PULLING DISCOUNT OF ACTULS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_ACTUAL_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_DISCOUNT

	SELECT ISNULL(SUM(IIF((DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL), NSP.ACTUAL_SALES, NULL)), 0) AS ACTUAL_SALES
		,SUM(AD.DISCOUNT_AMOUNT) AS ACCRUAL_AMOUNT_ACTUAL
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,PRD.HIERARCHY_NO
		,PRD.LEVEL_NAME
		,PRD.PARENT_HIERARCHY_NO
	INTO #PRIOR_NM_ACTUAL_DISCOUNT
	FROM #PRIOR_DATA_TABLE PRD
	JOIN NM_DISCOUNT_PROJ_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_ACTUAL_DISCOUNT NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN #DEDUCTION_INCLUSION1 DI ON PRD.CFF_MASTER_SID = PRD.CFF_MASTER_SID
		AND DI.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND DI.RS_CONTRACT_SID = NMDP.RS_CONTRACT_SID
	LEFT JOIN #PRIOR_ACCRUAL_DISCOUNT AD ON NSP.PROJECTION_DETAILS_SID = AD.PROJECTION_DETAILS_SID
		AND PRD.CFF_MASTER_SID = AD.CFF_MASTER_SID
		AND NSP.RS_CONTRACT_SID = AD.RS_CONTRACT_SID
		AND NSP.PERIOD_SID = AD.PERIOD_SID
		AND PRD.HIERARCHY_NO = AD.HIERARCHY_NO
		AND PRD.LEVEL_NAME = AD.LEVEL_NAME
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,PRD.HIERARCHY_NO
		,PRD.LEVEL_NAME
		,PRD.PARENT_HIERARCHY_NO

	----------------------------PULLING   PPA PROJECTIONS VALUES    INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_PPA_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_PPA_PROJECTION
		/*
	SELECT ISNULL(SUM(NSP.PROJECTION_DISCOUNT_DOLLAR), 0) PROJECTION_DISCOUNT_DOLLAR
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_NM_PPA_PROJECTION
	FROM #PRIOR_DATA_TABLE PRD
	JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_PPA_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
		*/
	----------------------------PULLING   PPA ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_ACTUAL_PPA') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_PPA
		/*
	SELECT ISNULL(SUM(NSP.ACTUAL_DISCOUNT_DOLLAR), 0) ACTUAL_DISCOUNT_DOLLAR
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_NM_ACTUAL_PPA
	FROM #PRIOR_DATA_TABLE PRD
	JOIN NM_PPA_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_ACTUAL_PPA NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NMDP.RS_CONTRACT_SID = NSP.RS_CONTRACT_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
		*/
	-----------------------PULLING   SUPLEMTNAL PROJ   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_SUPPLEMENTAL_DISC_PROJ') IS NOT NULL
		DROP TABLE #PRIOR_M_SUPPLEMENTAL_DISC_PROJ

	SELECT ISNULL(SUM(NSP.PROJECTION_SALES), 0) PROJECTION_SALES
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_M_SUPPLEMENTAL_DISC_PROJ
	FROM #PRIOR_DATA_TABLE PRD
	JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_SUPPLEMENTAL_DISC_PROJ NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO

	-----------------------PULLING   SUPLEMTNAL ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS') IS NOT NULL
		DROP TABLE #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS

	SELECT SUM(NSP.ACTUAL_SALES) ACTUAL_SALES
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS
	FROM #PRIOR_DATA_TABLE PRD
	JOIN M_SUPPLEMENTAL_DISC_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_SUPPLEMENTAL_DISC_ACTUALS NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO

	-----------------------PULLING   MANDTED DISCOUNT PROJECTIONS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_DISCOUNT_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_M_DISCOUNT_PROJECTION

	SELECT SUM(NMDP.PROJECTION_SALES) PROJECTION_SALES
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_M_DISCOUNT_PROJECTION
	FROM #PRIOR_DATA_TABLE PRD
	JOIN M_DISCOUNT_PROJECTION NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NMDP.PERIOD_SID
		AND SAVE_FLAG = 1
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO

	-----------------------PULLING   MANDTED DISCOUNT ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_ACTUAL_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_M_ACTUAL_DISCOUNT

	SELECT SUM(NMDP.ACTUAL_SALES) ACTUAL_SALES
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_M_ACTUAL_DISCOUNT
	FROM #PRIOR_DATA_TABLE PRD
	JOIN M_ACTUAL_DISCOUNT NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NMDP.PERIOD_SID
		AND SAVE_FLAG = 1
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO

	-----------------------PULLING  NON  MANDTED SALES PROJECTIONS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_SALES_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_SALES_PROJECTION

	SELECT SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), PROJECTION_SALES, NULL)) PROJECTION_SALES
		,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), PROJECTION_UNITS, NULL) * COALESCE(NULLIF(UOM.UOM_VALUE, 0),1)) PROJECTION_UNITS
		,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), PROJECTION_SALES, NULL) * U.ITEM_PRICE) AS NM_COGS_PROJECTED
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_NM_SALES_PROJECTION
	FROM #PRIOR_DATA_TABLE PRD
	JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	JOIN (SELECT DISTINCT PROJECTION_DETAILS_SID,ITEM_MASTER_SID FROM #CFF_DETAILS) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	LEFT JOIN #ITEM_UOM_DETAILS UOM ON UOM.ITEM_MASTER_SID = CD.ITEM_MASTER_SID
	WHERE EXISTS (
			SELECT 1
			FROM #DEDUCTION_INCLUSION1 A
			WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
				AND A.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
			)
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
		
	-----------------------PULLING  NON  MANDTED SALES ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_ACTUAL_SALES') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_SALES

	SELECT SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), ACTUAL_SALES, NULL)) ACTUAL_SALES
		,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), ACTUAL_UNITS, NULL) * COALESCE(NULLIF(UOM.UOM_VALUE, 0),1)) ACTUAL_UNITS
		,SUM(IIF((SALES_INCLUSION = @SALES_INCLUSION OR @SALES_INCLUSION IS NULL), ACTUAL_SALES, NULL) * U.ITEM_PRICE) AS NM_COGS_ACTUAL
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_NM_ACTUAL_SALES
	FROM #PRIOR_DATA_TABLE PRD
	JOIN NM_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN NM_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	JOIN (SELECT DISTINCT PROJECTION_DETAILS_SID,ITEM_MASTER_SID FROM #CFF_DETAILS) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	LEFT JOIN #ITEM_UOM_DETAILS UOM ON UOM.ITEM_MASTER_SID = CD.ITEM_MASTER_SID
	WHERE EXISTS (
			SELECT 1
			FROM #DEDUCTION_INCLUSION1 A
			WHERE A.CFF_MASTER_SID = PRD.CFF_MASTER_SID
				AND A.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
			)
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO

	--------------------------------------------------------- RETURNS---GALUAT-543--------------------------------
	--SELECT YEAR,
	--       PERIOD,
	--       AVG(TR.ACTUAL_RATE)    ACTUAL_RATE,
	--       AVG(TR.PROJECTED_RATE) PROJECTED_RATE,
	--       CFF_MASTER_SID,
	--       HIERARCHY_NO,
	--       LEVEL_NAME
	--INTO   #PRIOR_RETURNS
	--FROM   #TEMP_RETURNS TR
	--JOIN   CCP_DETAILS CC ON TR.ITEM_MASTER_SID = CC.ITEM_MASTER_SID
	--JOIN   #PRIOR_CPP_INFO C ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	--JOIN   #PERIOD P ON P.PERIOD_SID = TR.PERIOD_SID
	--GROUP  BY YEAR,
	--          PERIOD,
	--          CFF_MASTER_SID,
	--          HIERARCHY_NO,
	----          LEVEL_NAME  
	--IF OBJECT_ID('TEMPDB..#PRIOR_RETURNS') IS NOT NULL
	--  DROP TABLE #PRIOR_RETURNS
	--SELECT YEAR,
	--       PERIOD,
	--      ISNULL( SUM(( ISNULL(NSP.PROJECTION_SALES, 0)
	--             + ISNULL(MSP.PROJECTION_SALES, 0) ) * TR.PROJECTED_RATE) ,0)AS RETURNS_PROJECTED,
	--      ISNULL(  SUM(( ISNULL(NAS.ACTUAL_SALES, 0)
	--             + ISNULL(MAS.ACTUAL_SALES, 0) ) * TR.ACTUAL_RATE) ,0)       AS RETURNS_ACTUALS,
	--       CFF_MASTER_SID,
	--       HIERARCHY_NO,
	--       LEVEL_NAME
	--INTO   #PRIOR_RETURNS
	--FROM   #TEMP_RETURNS TR
	--       JOIN CCP_DETAILS CC
	--         ON TR.ITEM_MASTER_SID = CC.ITEM_MASTER_SID
	--       JOIN #PRIOR_CPP_INFO C
	--         ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	--       JOIN #PERIOD P
	--         ON P.PERIOD_SID = TR.PERIOD_SID
	--       LEFT OUTER JOIN NM_SALES_PROJECTION NSP
	--                    ON NSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
	--                       AND P.PERIOD_SID = NSP.PERIOD_SID
	--                       AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
	--       LEFT OUTER JOIN M_SALES_PROJECTION MSP
	--                    ON MSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
	--                       AND P.PERIOD_SID = MSP.PERIOD_SID
	--                       AND MSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
	--       LEFT OUTER JOIN NM_ACTUAL_SALES NAS
	--                    ON NAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
	--                       AND P.PERIOD_SID = NAS.PERIOD_SID
	--                       AND NAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
	--       LEFT OUTER JOIN M_ACTUAL_SALES MAS
	--                    ON MAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID
	--                       AND P.PERIOD_SID = MAS.PERIOD_SID
	--                       AND MAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
	--GROUP  BY YEAR,
	--          PERIOD,
	--          CFF_MASTER_SID,
	--          HIERARCHY_NO,
	--          LEVEL_NAME
	-----------------------PULLING   MANDTED SALES PROJETIONS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_SALES_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_M_SALES_PROJECTION

	SELECT SUM(PROJECTION_SALES) PROJECTION_SALES
		,SUM(PROJECTION_UNITS) PROJECTION_UNITS
		,SUM(PROJECTION_SALES * U.ITEM_PRICE) AS M_COGS_PROJECTED
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_M_SALES_PROJECTION
	FROM #PRIOR_DATA_TABLE PRD
	JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_SALES_PROJECTION NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	JOIN (SELECT DISTINCT PROJECTION_DETAILS_SID,ITEM_MASTER_SID FROM #CFF_DETAILS) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO

	-----------------------PULLING    MANDTED SALES ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_ACTUAL_SALES') IS NOT NULL
		DROP TABLE #PRIOR_M_ACTUAL_SALES

	SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
		,SUM(ACTUAL_UNITS) ACTUAL_UNITS
		,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS M_COGS_ACTUAL
		,PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO
	INTO #PRIOR_M_ACTUAL_SALES
	FROM #PRIOR_DATA_TABLE PRD
	JOIN M_SALES_PROJECTION_MASTER NMDP ON NMDP.PROJECTION_DETAILS_SID = PRD.PROJECTION_DETAILS_SID
	JOIN M_ACTUAL_SALES NSP ON NMDP.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND PRD.PERIOD_SID = NSP.PERIOD_SID
		AND PRD.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	--JOIN PROJECTION_DETAILS PD ON NMDP.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID
	--JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	JOIN (SELECT DISTINCT PROJECTION_DETAILS_SID,ITEM_MASTER_SID FROM #CFF_DETAILS) CD ON NMDP.PROJECTION_DETAILS_SID = CD.PROJECTION_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CD.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND PRD.PERIOD_SID = U.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRD.CFF_MASTER_SID
		,HIERARCHY_NO
		,LEVEL_NAME
		,PARENT_HIERARCHY_NO

	-----------------------AGGREGATING     MANDATED&NON MANDATED SALES OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_SALES') IS NOT NULL
		DROP TABLE #PRIOR_SALES

	SELECT FD.YEAR
		,FD.PERIOD
		,FD.CFF_MASTER_SID
		,FD.HIERARCHY_NO
		,FD.LEVEL_NAME
		,FD.PARENT_HIERARCHY_NO
		,COALESCE((NSP.PROJECTION_SALES), 0) + COALESCE((MSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
		,COALESCE((NSP.PROJECTION_UNITS), 0) + COALESCE((MSP.PROJECTION_UNITS), 0) AS PROJECTION_UNITS
		,COALESCE((NAS.ACTUAL_SALES), 0) + COALESCE((MAS.ACTUAL_SALES), 0) AS ACTUAL_SALES
		,COALESCE((NAS.ACTUAL_UNITS), 0) + COALESCE((MAS.ACTUAL_UNITS), 0) AS ACTUAL_UNITS
		,COALESCE((MSP.M_COGS_PROJECTED), 0) + COALESCE((NSP.NM_COGS_PROJECTED), 0) AS COGS_PROJECTED
		,COALESCE((MAS.M_COGS_ACTUAL), 0) + COALESCE((NAS.NM_COGS_ACTUAL), 0) AS COGS_ACTUAL
		,COALESCE((NAS.ACTUAL_SALES), 0) AS NM_ACTUAL_SALES
		,COALESCE((NSP.PROJECTION_SALES), 0) AS NM_PROJECTED_SALES
		,COALESCE((NAS.ACTUAL_UNITS), 0) AS NM_ACTUAL_UNITS
		,COALESCE((NSP.PROJECTION_UNITS), 0) AS NM_PROJECTED_UNITS
		,COALESCE((MAS.ACTUAL_SALES), 0) AS M_ACTUAL_SALES
		,COALESCE((MSP.PROJECTION_SALES), 0) AS M_PROJECTED_SALES
		,COALESCE((MAS.ACTUAL_UNITS), 0) AS M_ACTUAL_UNITS
		,COALESCE((MSP.PROJECTION_UNITS), 0) AS M_PROJECTED_UNITS
	INTO #PRIOR_SALES
	FROM (
		SELECT DISTINCT CFF_MASTER_SID
			,YEAR
			,PERIOD
			,LEVEL_NAME
			,HIERARCHY_NO
			,PARENT_HIERARCHY_NO
		FROM #PRIOR_DATA_TABLE
		) FD
	LEFT JOIN #PRIOR_NM_SALES_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(NSP.PARENT_HIERARCHY_NO, NSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_M_SALES_PROJECTION MSP ON MSP.YEAR = FD.YEAR
		AND MSP.PERIOD = FD.PERIOD
		AND MSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND MSP.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(MSP.PARENT_HIERARCHY_NO, MSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_NM_ACTUAL_SALES NAS ON NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD
		AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND NAS.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAS.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(NAS.PARENT_HIERARCHY_NO, NAS.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_M_ACTUAL_SALES MAS ON MAS.YEAR = FD.YEAR
		AND MAS.PERIOD = FD.PERIOD
		AND MAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MAS.HIERARCHY_NO = FD.HIERARCHY_NO
		AND MAS.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(MAS.PARENT_HIERARCHY_NO, MAS.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)

	-----------------------AGGREGATING     NON MANDATED DISCOUNT OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_DISCOUNT

	SELECT FD.YEAR
		,FD.PERIOD
		,COALESCE((NSP.PROJECTION_SALES), 0) AS PROJECTION_SALES
		,COALESCE((NAD.ACTUAL_SALES), 0) AS ACTUAL_SALES
		,FD.CFF_MASTER_SID
		,FD.LEVEL_NAME
		,FD.HIERARCHY_NO
		,FD.PARENT_HIERARCHY_NO
		,ACCRUAL_AMOUNT_PROJECTION
		,ACCRUAL_AMOUNT_ACTUAL
	INTO #PRIOR_DISCOUNT
	FROM (
		SELECT DISTINCT CFF_MASTER_SID
			,YEAR
			,PERIOD
			,LEVEL_NAME
			,HIERARCHY_NO
			,PARENT_HIERARCHY_NO
		FROM #PRIOR_DATA_TABLE
		) FD
	LEFT JOIN #PRIOR_NM_DISCOUNT_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND FD.CFF_MASTER_SID = NSP.CFF_MASTER_SID
		AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NSP.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(NSP.PARENT_HIERARCHY_NO, NSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_NM_ACTUAL_DISCOUNT NAD ON NAD.YEAR = FD.YEAR
		AND NAD.PERIOD = FD.PERIOD
		AND FD.CFF_MASTER_SID = NAD.CFF_MASTER_SID
		AND NAD.HIERARCHY_NO = FD.HIERARCHY_NO
		AND NAD.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(NAD.PARENT_HIERARCHY_NO, NAD.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)

	-----------------------AGGREGATING    PPA AND SUPPLEMENTAL OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_PPA_SUPP_MANDATED') IS NOT NULL
		DROP TABLE #PRIOR_PPA_SUPP_MANDATED

	SELECT FD.YEAR
		,FD.PERIOD
		--,COALESCE((NSP.PROJECTION_DISCOUNT_DOLLAR), 0) AS PPA_DISCOUNT_PROJECTED
		,0 AS PPA_DISCOUNT_PROJECTED
		,COALESCE((SDP.PROJECTION_SALES), 0) AS SUPPLEMENTAL_DISCOUNT_PROJECTED
		,COALESCE((MDP.PROJECTION_SALES), 0) AS MANDATED_DISCOUNT_PROJECTED
		--,COALESCE((NAS.ACTUAL_DISCOUNT_DOLLAR), 0) AS PPA_ACTUAL_SALES
		,0 AS PPA_ACTUAL_SALES
		,COALESCE((SDA.ACTUAL_SALES), 0) AS SUPPLEMENTAL_DISCOUNT_ACTUALS
		,COALESCE((MAD.ACTUAL_SALES), 0) AS MANDATED_DISCOUNT_ACTUALS
		,FD.CFF_MASTER_SID
		,FD.HIERARCHY_NO
		,FD.LEVEL_NAME
		,FD.PARENT_HIERARCHY_NO
	INTO #PRIOR_PPA_SUPP_MANDATED
	FROM (
		SELECT DISTINCT CFF_MASTER_SID
			,YEAR
			,PERIOD
			,LEVEL_NAME
			,HIERARCHY_NO
			,PARENT_HIERARCHY_NO
		FROM #PRIOR_DATA_TABLE
		) FD
	--LEFT JOIN #PRIOR_NM_PPA_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	--	AND NSP.PERIOD = FD.PERIOD
	--	AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	--	AND NSP.HIERARCHY_NO = FD.HIERARCHY_NO
	--	AND NSP.LEVEL_NAME = FD.LEVEL_NAME
	--	AND COALESCE(NSP.PARENT_HIERARCHY_NO, NSP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	--LEFT JOIN #PRIOR_NM_ACTUAL_PPA NAS ON NAS.YEAR = FD.YEAR
	--	AND NAS.PERIOD = FD.PERIOD
	--	AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	--	AND NAS.HIERARCHY_NO = FD.HIERARCHY_NO
	--	AND NAS.LEVEL_NAME = FD.LEVEL_NAME
	--	AND COALESCE(NAS.PARENT_HIERARCHY_NO, NAS.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_M_SUPPLEMENTAL_DISC_PROJ SDP ON SDP.YEAR = FD.YEAR
		AND SDP.PERIOD = FD.PERIOD
		AND SDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND SDP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND SDP.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(SDP.PARENT_HIERARCHY_NO, SDP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS SDA ON SDA.YEAR = FD.YEAR
		AND SDA.PERIOD = FD.PERIOD
		AND SDA.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND SDA.HIERARCHY_NO = FD.HIERARCHY_NO
		AND SDA.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(SDA.PARENT_HIERARCHY_NO, SDA.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_M_DISCOUNT_PROJECTION MDP ON MDP.YEAR = FD.YEAR
		AND MDP.PERIOD = FD.PERIOD
		AND MDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MDP.HIERARCHY_NO = FD.HIERARCHY_NO
		AND MDP.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(MDP.PARENT_HIERARCHY_NO, MDP.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO)
	LEFT JOIN #PRIOR_M_ACTUAL_DISCOUNT MAD ON MAD.YEAR = FD.YEAR
		AND MAD.PERIOD = FD.PERIOD
		AND MAD.CFF_MASTER_SID = FD.CFF_MASTER_SID
		AND MAD.HIERARCHY_NO = FD.HIERARCHY_NO
		AND MAD.LEVEL_NAME = FD.LEVEL_NAME
		AND COALESCE(MAD.PARENT_HIERARCHY_NO, MAD.HIERARCHY_NO) = COALESCE(FD.PARENT_HIERARCHY_NO, FD.HIERARCHY_NO);

	-----------------------TAKING  ITEM LEVEL VALUES FROM CFF_PRODUCT_LEVEL_FILES_DATA FOR CFF OTHER THAN FIRST
		IF OBJECT_ID('TEMPDB..#PRODUCT_FILE_DATA') IS NOT NULL
		DROP TABLE #PRODUCT_FILE_DATA
		SELECT P.YEAR
			,P.PERIOD
			,SUM(EX_FACTORY_SALES_ACTUALS) AS EX_FACTORY_SALES_ACTUALS
			,SUM(EX_FACTORY_SALES_PROJ) AS EX_FACTORY_SALES_PROJ
			,SUM(DEMAND_SALES_ACTUALS) AS DEMAND_SALES_ACTUALS
			,SUM(DEMAND_SALES_PROJ) AS DEMAND_SALES_PROJ
			,SUM(ADJUSTED_DEMAND_ACTUALS) AS ADJUSTED_DEMAND_ACTUALS
			,SUM(ADJUSTED_DEMAND_PROJ) AS ADJUSTED_DEMAND_PROJ
			,SUM(IW_MASTER_ACTUALS) AS IW_MASTER_ACTUALS
			,SUM(IW_MASTER_PROJ) AS IW_MASTER_PROJ
			,CF.CFF_MASTER_SID AS CFF_MASTER_SID
			,B.HIERARCHY_NO
			,B.LEVEL_NAME
			,B.PARENT_HIERARCHY_NO
			INTO #PRODUCT_FILE_DATA
		FROM CFF_PRODUCT_LEVEL_FILES_DATA CF
		JOIN (
			SELECT DISTINCT CFF_MASTER_SID
				,ITEM_MASTER_SID
				,HIERARCHY_NO
				,LEVEL_NAME
				,PARENT_HIERARCHY_NO
			FROM #PRIOR_TEMP_CCP
			) B ON CF.CFF_MASTER_SID = B.CFF_MASTER_SID
			AND CF.ITEM_MASTER_SID = B.ITEM_MASTER_SID
		INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
		GROUP BY P.YEAR
			,P.PERIOD
			,CF.CFF_MASTER_SID
			,B.HIERARCHY_NO
			,B.LEVEL_NAME
			,B.PARENT_HIERARCHY_NO
		
		-----------------------TAKING  ITEM+COMAPNY LEVEL VALUES FROM CFF_COMP_PRD_LEVEL_FILES_DATA FOR CFF OTHER THAN FIRST
	
		IF OBJECT_ID('TEMPDB..#COMP_PRODUCT_FILE_DATA') IS NOT NULL
		DROP TABLE #COMP_PRODUCT_FILE_DATA	
		SELECT P.YEAR
			,P.PERIOD
			,SUM(CUST_EX_FACTORY_SALES_ACTUALS) AS CUST_EX_FACTORY_SALES_ACTUALS
			,SUM(CUST_EX_FACTORY_SALES_PROJ) AS CUST_EX_FACTORY_SALES_PROJ
			,SUM(IW_DETAILS_ACTUALS) AS IW_DETAILS_ACTUALS
			,SUM(IW_DETAILS_PROJ) AS IW_DETAILS_PROJ
			,CF.CFF_MASTER_SID AS CFF_MASTER_SID
			,B.HIERARCHY_NO
			,B.LEVEL_NAME
			,B.PARENT_HIERARCHY_NO
			INTO #COMP_PRODUCT_FILE_DATA
		FROM CFF_COMP_PRD_LEVEL_FILES_DATA CF
		JOIN (
			SELECT DISTINCT CFF_MASTER_SID
				,ITEM_MASTER_SID
				,COMPANY_MASTER_SID
				,HIERARCHY_NO
				,LEVEL_NAME
				,PARENT_HIERARCHY_NO
			FROM #PRIOR_TEMP_CCP
			) B ON CF.CFF_MASTER_SID = B.CFF_MASTER_SID
			AND CF.ITEM_MASTER_SID = B.ITEM_MASTER_SID
			AND CF.COMPANY_MASTER_SID = B.COMPANY_MASTER_SID
		INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
		GROUP BY P.YEAR
			,P.PERIOD
			,CF.CFF_MASTER_SID
			,B.HIERARCHY_NO
			,B.LEVEL_NAME
			,B.PARENT_HIERARCHY_NO
		
	------------   INSERTING INTO RESULT TABLE WHEN SCREENAME NOT EQUAL TO ASSUMPTIONS---------------
	INSERT INTO #RESULT (
		CFF_PROJECTION_MASTER_SID
		,HIERARCHY_NO
		,PARENT_HIERARCHY_NO
		,LEVEL_NAME
		,EX_FACTORY_SALES_ACTUALS
		,EX_FACTORY_SALES_PROJ
		,YEAR
		,PERIOD
		,CONTRACT_SALES_ACTUALS
		,CONTRACT_SALES_PROJECTED
		,CONTRACT_UNITS_ACTUALS
		,CONTRACT_UNITS_PROJECTED
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,EX_FACTORY_SALES_ACTUALS_PERCENT
		,EX_FACTORY_SALES_PROJECTED_PERCENT
		,PPA_DISCOUNT
		,PPA_DISCOUNT_PROJECTED
		,PPA_DISCOUNT_PERCENTAGE
		,PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,MANDATED_DISCOUNT_ACTUALS
		,MANDATED_DISCOUNT_PROJECTED
		,SUPPLEMENTAL_DISCOUNT_ACTUALS
		,SUPPLEMENTAL_DISCOUNT_PROJECTED
		,MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
		,MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
		,SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
		,SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,NET_SALES
		,NET_SALES_PROJECTED
		,DEMAND_SALES_ACTUAL
		,DEMAND_SALES_PROJECTED
		,INVENTORY_WITHDRAWAL_ACTUAL
		,INVENTORY_WITHDRAWAL_PROJECTED
		,DEMAND_SALES_ACTUAL_PERCENT
		,DEMAND_SALES_PROJECTED_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,TOTAL_DISCOUNT_RPU_ACTUALS
		,TOTAL_DISCOUNT_RPU_PROJECTED
		,TOTAL_PPA_RPU_ACTUALS
		,TOTAL_PPA_RPU_PROJECTED
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,COGS_ACTUAL
		,COGS_PROJECTED
		,NET_PROFIT_ACTUAL
		,NET_PROFIT_PROJECTED
		,ADJUSTED_DEMAND_ACTUALS
		,ADJUSTED_DEMAND_PROJ
		,CUST_EX_FACTORY_SALES_ACTUALS
		,CUST_EX_FACTORY_SALES_PROJ
		,IW_DETAILS_ACTUALS
		,IW_DETAILS_PROJ
		,ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
		,ADJUSTED_DEMAND_PROJ_PERCENTAGE
		,CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
		,CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
		,IW_DETAILS_ACTUALS_PERCENTAGE
		,IW_DETAILS_PROJ_PERCENTAGE
		,NET_SALES_OF_EX_FACTORY_ACTUALS
		,NET_SALES_OF_EX_FACTORY_PROJECTED
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
		,NET_EX_FACTORY_SALES_ACTUALS ---------------CEL-386
		,NET_EX_FACTORY_SALES_PROJECTED ---------------CEL-386
		,NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACTUALS ---------------CEL-386                             
		,NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_PROJECTED
		,---------------CEL-386
		TOTAL_DISCOUNT_ACCRUAL
		)
	SELECT S.CFF_MASTER_SID
		,S.HIERARCHY_NO
		,S.PARENT_HIERARCHY_NO
		,S.LEVEL_NAME
		,ISNULL(PFD.EX_FACTORY_SALES_ACTUALS, 0)
		,ISNULL(PFD.EX_FACTORY_SALES_PROJ, 0)
		,S.YEAR
		,S.PERIOD
		,ISNULL(S.ACTUAL_SALES, 0) AS CONTRACT_SALES_ACTUALS
		,ISNULL(S.PROJECTION_SALES, 0) AS CONTRACT_SALES_PROJECTED
		,ISNULL(S.ACTUAL_UNITS, 0) AS CONTRACT_UNITS_ACTUALS
		,ISNULL(S.PROJECTION_UNITS, 0) AS CONTRACT_UNITS_PROJECTED
		,ISNULL(ND.ACTUAL_SALES+ ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0), 0) AS TOTAL_DISCOUNT
		,ISNULL(ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0), 0) AS TOTAL_DISCOUNT_PROJECTED
		,ISNULL((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_SALES, 0), 0) * 100 AS TOTAL_DISCOUNT_PERCENTAGE
		,ISNULL((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_SALES, 0),0) * 100 AS TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,(ISNULL(S.ACTUAL_SALES / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0), 0)) * 100 AS EX_FACTORY_SALES_ACTUALS_PERCENT
		,(ISNULL(S.PROJECTION_SALES / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0), 0)) * 100 AS EX_FACTORY_SALES_PROJECTED_PERCENT
		,ISNULL(ISNULL(PPA_ACTUAL_SALES, 0), 0) AS PPA_DISCOUNT
		,ISNULL(ISNULL(PPA_DISCOUNT_PROJECTED, 0), 0) AS PPA_DISCOUNT_PROJECTED
		,ISNULL(PPA_ACTUAL_SALES / NULLIF(S.NM_ACTUAL_SALES, 0), 0) * 100 AS PPA_DISCOUNT_PERCENTAGE
		,ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.NM_PROJECTED_SALES, 0), 0) * 100 AS PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,ISNULL(ISNULL(MANDATED_DISCOUNT_ACTUALS, 0), 0) AS MANDATED_DISCOUNT_ACTUALS
		,ISNULL(ISNULL(MANDATED_DISCOUNT_PROJECTED, 0), 0) AS MANDATED_DISCOUNT_PROJECTED
		,ISNULL(ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0), 0) AS SUPPLEMENTAL_DISCOUNT_ACTUALS
		,ISNULL(ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0), 0) AS SUPPLEMENTAL_DISCOUNT_PROJECTED
		,ISNULL((COALESCE(ISNULL(MANDATED_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100, 0) AS MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
		,ISNULL((COALESCE(ISNULL(MANDATED_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100, 0) AS MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
		,ISNULL((COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100, 0) AS SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
		,ISNULL((COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100, 0) AS SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,ISNULL(ISNULL(S.ACTUAL_SALES - ((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0))), 0), 0) AS NET_SALES
		,ISNULL(ISNULL(S.PROJECTION_SALES - ((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0))), 0), 0) AS NET_SALES_PROJECTED
		,ISNULL(PFD.DEMAND_SALES_ACTUALS, 0) AS DEMAND_SALES_ACTUAL
		,ISNULL(PFD.DEMAND_SALES_PROJ, 0) AS DEMAND_SALES_PROJECTED
		,ISNULL(PFD.IW_MASTER_ACTUALS, 0) AS INVENTORY_WITHDRAWAL_ACTUAL
		,ISNULL(PFD.IW_MASTER_PROJ, 0) AS INVENTORY_WITHDRAWAL_PROJECTED
		,(ISNULL(S.ACTUAL_SALES / NULLIF(PFD.DEMAND_SALES_ACTUALS, 0), 0)) * 100 AS DEMAND_SALES_ACTUAL_PERCENT
		,ISNULL((ISNULL(S.PROJECTION_SALES / NULLIF(PFD.DEMAND_SALES_PROJ, 0), 0)) * 100, 0) AS DEMAND_SALES_PROJECTED_PERCENT
		,ISNULL((ISNULL(S.ACTUAL_SALES / NULLIF(PFD.IW_MASTER_ACTUALS, 0), 0)) * 100, 0) AS INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,ISNULL((ISNULL(S.PROJECTION_SALES / NULLIF(PFD.IW_MASTER_PROJ, 0), 0)) * 100, 0) AS INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,ISNULL((ISNULL(ND.ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0)), 0) AS TOTAL_DISCOUNT_RPU_ACTUALS
		,ISNULL((ISNULL(ND.PROJECTION_SALES / NULLIF(S.PROJECTION_UNITS, 0), 0)), 0) AS TOTAL_DISCOUNT_RPU_PROJECTED
		,ISNULL((ISNULL(PPA_ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0)), 0) AS TOTAL_PPA_RPU_ACTUALS
		,ISNULL((ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.PROJECTION_UNITS, 0), 0)), 0) AS TOTAL_PPA_RPU_PROJECTED
		,ISNULL(ISNULL((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_UNITS, 0), 0), 0) AS TOTAL_RPU
		,ISNULL(COALESCE((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_UNITS, 0), 0), 0) AS TOTAL_PROJECTED_RPU
		,ISNULL(ISNULL(S.COGS_ACTUAL, 0), 0) AS COGS_ACTUAL
		,ISNULL(ISNULL(S.COGS_PROJECTED, 0), 0) AS COGS_PROJECTED
		,ISNULL(ISNULL(S.ACTUAL_SALES - ((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0))), 0) - (S.COGS_ACTUAL), 0) AS NET_PROFIT_ACTUAL
		,ISNULL(ISNULL(S.PROJECTION_SALES- ((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0))), 0) - (S.COGS_PROJECTED), 0) AS NET_PROFIT_PROJECTED
		,ISNULL(PFD.ADJUSTED_DEMAND_ACTUALS, 0)
		,ISNULL(PFD.ADJUSTED_DEMAND_PROJ, 0)
		,ISNULL(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0)
		,ISNULL(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0)
		,ISNULL(CPFD.IW_DETAILS_ACTUALS, 0)
		,ISNULL(CPFD.IW_DETAILS_PROJ, 0)
		,ISNULL(ISNULL(S.ACTUAL_SALES / NULLIF(PFD.ADJUSTED_DEMAND_ACTUALS, 0), 0) * 100, 0) AS ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
		,ISNULL(ISNULL(S.PROJECTION_SALES / NULLIF(PFD.ADJUSTED_DEMAND_PROJ, 0), 0) * 100, 0) AS ADJUSTED_DEMAND_PROJ_PERCENTAGE
		,ISNULL(ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0), 0) * 100, 0) AS CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
		,ISNULL(ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0), 0) * 100, 0) AS CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
		,ISNULL(ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.IW_DETAILS_ACTUALS, 0), 0) * 100, 0) AS IW_DETAILS_ACTUALS_PERCENTAGE
		,ISNULL(ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.IW_DETAILS_PROJ, 0), 0) * 100, 0) AS IW_DETAILS_PROJ_PERCENTAGE
		,COALESCE((S.ACTUAL_SALES - (ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0))) / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0),0) * 100 AS NET_SALES_OF_EX_FACTORY_ACTUALS
		,COALESCE(((S.PROJECTION_SALES - (ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0))) / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0)) , 0)* 100 AS NET_SALES_OF_EX_FACTORY_PROJECTED
		,ISNULL(((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0)) , 0)*100 AS DISCOUNT_OF_EX_FACTORY_ACTUALS
		,ISNULL(((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0)) , 0) * 100 AS DISCOUNT_OF_EX_FACTORY_PROJECTED
		,ISNULL(ISNULL(PFD.EX_FACTORY_SALES_ACTUALS, 0) - (ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)), 0)
		,ISNULL(PFD.EX_FACTORY_SALES_PROJ- (ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)), 0)
		,ISNULL(((ISNULL(PFD.EX_FACTORY_SALES_ACTUALS, 0) - ISNULL((ND.ACTUAL_SALES + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)), 0)) / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0)), 0) * 100
		,ISNULL(((ISNULL(PFD.EX_FACTORY_SALES_PROJ, 0) - ISNULL((ND.PROJECTION_SALES + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)), 0)) / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0)), 0) * 100
		,COALESCE(ACCRUAL_AMOUNT_PROJECTION, ACCRUAL_AMOUNT_ACTUAL) AS TOTAL_DISCOUNT_ACCRUAL
	FROM #PRIOR_SALES S
	JOIN #PRODUCT_FILE_DATA PFD ON S.YEAR = PFD.YEAR
		AND S.PERIOD = PFD.PERIOD
		AND S.CFF_MASTER_SID = PFD.CFF_MASTER_SID
		AND S.HIERARCHY_NO = PFD.HIERARCHY_NO
		AND S.LEVEL_NAME = PFD.LEVEL_NAME
		AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(PFD.PARENT_HIERARCHY_NO, PFD.HIERARCHY_NO)
	JOIN #COMP_PRODUCT_FILE_DATA CPFD ON S.YEAR = CPFD.YEAR
		AND S.PERIOD = CPFD.PERIOD
		AND S.CFF_MASTER_SID = CPFD.CFF_MASTER_SID
		AND S.HIERARCHY_NO = CPFD.HIERARCHY_NO
		AND S.LEVEL_NAME = CPFD.LEVEL_NAME
		AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(CPFD.PARENT_HIERARCHY_NO, CPFD.HIERARCHY_NO)
	JOIN #PRIOR_PPA_SUPP_MANDATED PSM ON S.YEAR = PSM.YEAR
		AND S.PERIOD = PSM.PERIOD
		AND S.CFF_MASTER_SID = PSM.CFF_MASTER_SID
		AND S.HIERARCHY_NO = PSM.HIERARCHY_NO
		AND S.LEVEL_NAME = PSM.LEVEL_NAME
		AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(PSM.PARENT_HIERARCHY_NO, PSM.HIERARCHY_NO)
	JOIN #PRIOR_DISCOUNT ND ON S.YEAR = ND.YEAR
		AND S.PERIOD = ND.PERIOD
		AND S.CFF_MASTER_SID = ND.CFF_MASTER_SID
		AND S.HIERARCHY_NO = ND.HIERARCHY_NO
		AND S.LEVEL_NAME = ND.LEVEL_NAME
		AND COALESCE(S.PARENT_HIERARCHY_NO, S.HIERARCHY_NO) = COALESCE(ND.PARENT_HIERARCHY_NO, ND.HIERARCHY_NO)

	------------- PIVOTING STARTS HERE ----------------------------------------
	DECLARE @SQL NVARCHAR(MAX)
		,@LOOP_CNTR INT
		,@MAX_CCP INT

	SET @SQL = 'SELECT YEAR, PERIOD,PR.HIERARCHY_NO,LEVEL_NAME,'
	SET @LOOP_CNTR = 1
	SET @MAX_CCP = (
			SELECT MAX(ID)
			FROM #CFF_PROJECTION_MASTER
			)

	WHILE @LOOP_CNTR <= @MAX_CCP
	BEGIN
		SET @SQL += 'EX_FACTORY_SALES_ACCRUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      EX_FACTORY_SALES_ACCRUALS  END),
         EX_FACTORY_SALES_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN EX_FACTORY_SALES_ACTUALS   END),
       EX_FACTORY_SALES_PROJ_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN EX_FACTORY_SALES_PROJ      END),
       CONTRACT_SALES_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN CONTRACT_SALES_ACCRUAL     END),
      CONTRACT_SALES_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN CONTRACT_SALES_ACTUALS     END),
     CONTRACT_SALES_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN CONTRACT_SALES_PROJECTED   END),
         CONTRACT_UNITS_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN CONTRACT_UNITS_ACCRUAL     END),
      CONTRACT_UNITS_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN CONTRACT_UNITS_ACTUALS     END),
      CONTRACT_UNITS_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN CONTRACT_UNITS_PROJECTED   END),
         TOTAL_DISCOUNT_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN IIF(TOTAL_DISCOUNT_ACCRUAL=0,NULL,TOTAL_DISCOUNT_ACCRUAL)     END),
      TOTAL_DISCOUNT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        TOTAL_DISCOUNT       END),
      TOTAL_DISCOUNT_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN TOTAL_DISCOUNT_PROJECTED   END),
         TOTAL_DISCOUNT_ACCRUAL_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_ACCRUAL_PERCENTAGE END),
      TOTAL_DISCOUNT_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_PERCENTAGE  END),
      TOTAL_DISCOUNT_PROJECTED_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_PROJECTED_PERCENTAGE      END),

         EX_FACTORY_SALES_ACCRUAL_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN EX_FACTORY_SALES_ACCRUAL_PERCENT  END),
      EX_FACTORY_SALES_ACTUALS_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      EX_FACTORY_SALES_ACTUALS_PERCENT  END),
      EX_FACTORY_SALES_PROJECTED_PERCENT_' + CAST(@LOOP_CNTR AS 
				VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN    EX_FACTORY_SALES_PROJECTED_PERCENT END),
         PPA_DISCOUNT_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN PPA_DISCOUNT_ACCRUAL END),
      PPA_DISCOUNT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        PPA_DISCOUNT  END),
      PPA_DISCOUNT_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN PPA_DISCOUNT_PROJECTED     END),
         PPA_DISCOUNT_ACCRUAL_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN    PPA_DISCOUNT_ACCRUAL_PERCENTAGE   END),
      PPA_DISCOUNT_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN PPA_DISCOUNT_PERCENTAGE    END),
      PPA_DISCOUNT_PROJECTED_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN    PPA_DISCOUNT_PROJECTED_PERCENTAGE END),

         MANDATED_DISCOUNT_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN MANDATED_DISCOUNT_ACCRUAL  END),
      MANDATED_DISCOUNT_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN MANDATED_DISCOUNT_ACTUALS  END),
      MANDATED_DISCOUNT_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN MANDATED_DISCOUNT_PROJECTED END),
          SUPPLEMENTAL_DISCOUNT_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN   SUPPLEMENTAL_DISCOUNT_ACCRUAL     END),
      SUPPLEMENTAL_DISCOUNT_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN SUPPLEMENTAL_DISCOUNT_ACTUALS       END),
      SUPPLEMENTAL_DISCOUNT_PROJECTED_' + 
			CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      SUPPLEMENTAL_DISCOUNT_PROJECTED   END),
             MANDATED_DISCOUNT_ACCRUAL_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        MANDATED_DISCOUNT_ACCRUAL_PERCENTAGE       END),
      MANDATED_DISCOUNT_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN MANDATED_DISCOUNT_ACTUALS_PERCENTAGE     END),
      MANDATED_DISCOUNT_PROJECTED_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      MANDATED_DISCOUNT_PROJECTED_PERCENTAGE   END),
      SUPPLEMENTAL_DISCOUNT_ACCRUAL_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        SUPPLEMENTAL_DISCOUNT_ACCRUAL_PERCENTAGE END),
         SUPPLEMENTAL_DISCOUNT_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE END),'
		SET @SQL += 'SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE      END),
        NET_SALES_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_SALES_ACCRUAL    END),
                     NET_SALES_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_SALES     END),

      NET_SALES_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_SALES_PROJECTED  END),
      DEMAND_SALES_ACCRUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN DEMAND_SALES_ACCRUALS      END),
                     DEMAND_SALES_ACTUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN DEMAND_SALES_ACTUAL  END),



      DEMAND_SALES_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN DEMAND_SALES_PROJECTED     END),
     INVENTORY_WITHDRAWAL_SALES_ACCRUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN    INVENTORY_WITHDRAWAL_SALES_ACCRUALS      END),
                     INVENTORY_WITHDRAWAL_ACTUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        INVENTORY_WITHDRAWAL_ACTUAL END),


      INVENTORY_WITHDRAWAL_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN INVENTORY_WITHDRAWAL_PROJECTED    END),
                                                         

       DEMAND_SALES_ACCRUAL_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN DEMAND_SALES_ACCRUAL_PERCENT      END),
                     DEMAND_SALES_ACTUAL_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        DEMAND_SALES_ACTUAL_PERCENT END),
      DEMAND_SALES_PROJECTED_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN DEMAND_SALES_PROJECTED_PERCENT    END),
                                                         
          INVENTORY_WITHDRAWAL_SALES_ACCRUAL_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        INVENTORY_WITHDRAWAL_SALES_ACCRUAL_PERCENT      END),
                     INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT END),
      INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT    END),
              TOTAL_DISCOUNT_RPU_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN   TOTAL_DISCOUNT_RPU_ACCRUAL END),
                     TOTAL_DISCOUNT_RPU_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN    TOTAL_DISCOUNT_RPU_ACTUALS END),
      TOTAL_DISCOUNT_RPU_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_RPU_PROJECTED      END),
           TOTAL_PPA_RPU_ACCRUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_PPA_RPU_ACCRUALS     END),
             TOTAL_PPA_RPU_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN TOTAL_PPA_RPU_ACTUALS      END),
      TOTAL_PPA_RPU_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_PPA_RPU_PROJECTED    END),
    TOTAL_RPU_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_RPU_ACCRUAL    END),
             TOTAL_RPU_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_DISCOUNT_RPU_ACTUALS END),
      TOTAL_PROJECTED_RPU_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN TOTAL_PROJECTED_RPU  END),'
		SET @SQL += 'COGS_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        COGS_ACCRUAL  END),
                   COGS_ACTUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN COGS_ACTUAL   END),

      COGS_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN   COGS_PROJECTED       END),

    NET_PROFIT_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_PROFIT_ACCRUAL   END),
                     NET_PROFIT_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_PROFIT_ACTUAL    END),

      NET_PROFIT_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_PROFIT_PROJECTED END),
  
      ADJUSTED_DEMAND_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(
				@LOOP_CNTR AS VARCHAR(10)) + ' THEN ADJUSTED_DEMAND_ACCRUAL    END),
                     ADJUSTED_DEMAND_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      ADJUSTED_DEMAND_ACTUALS    END),

          ADJUSTED_DEMAND_PROJ_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN ADJUSTED_DEMAND_PROJ END),

          CUST_EX_FACTORY_SALES_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN   CUST_EX_FACTORY_SALES_ACCRUAL     END),
             CUST_EX_FACTORY_SALES_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      CUST_EX_FACTORY_SALES_ACTUALS     END),
      CUST_EX_FACTORY_SALES_PROJ_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN CUST_EX_FACTORY_SALES_PROJ END),
       IW_DETAILS_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN IW_DETAILS_ACCRUAL   END),
             IW_DETAILS_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN IW_DETAILS_ACTUALS   END),
      IW_DETAILS_PROJ_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN IW_DETAILS_PROJ      END),
       ADJUSTED_DEMAND_ACCRUAL_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN ADJUSTED_DEMAND_ACCRUAL_PERCENTAGE END),
                     ADJUSTED_DEMAND_ACTUALS_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        ADJUSTED_DEMAND_ACTUALS_PERCENTAGE END),

      ADJUSTED_DEMAND_PROJ_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN      ADJUSTED_DEMAND_PROJ_PERCENTAGE   END),
      CUST_EX_FACTORY_SALES_ACCRUAL_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        CUST_EX_FACTORY_SALES_ACCRUAL_PERCENTAGE END),
                     CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE END),

      CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE       END),'
		SET @SQL += 'IW_DETAILS_ACCRUAL_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN IW_DETAILS_ACCRUAL_PERCENTAGE       END),
                   IW_DETAILS_ACTUALS_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN        IW_DETAILS_ACTUALS_PERCENTAGE     END),
       

      IW_DETAILS_PROJ_PERCENTAGE_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN IW_DETAILS_PROJ_PERCENTAGE END),
          NET_SALES_OF_EX_FACTORY_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_SALES_OF_EX_FACTORY_ACCRUAL   END),
                     NET_SALES_OF_EX_FACTORY_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      NET_SALES_OF_EX_FACTORY_ACTUALS       END),
      NET_SALES_OF_EX_FACTORY_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN    NET_SALES_OF_EX_FACTORY_PROJECTED END),
       DISCOUNT_OF_EX_FACTORY_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN    DISCOUNT_OF_EX_FACTORY_ACCRUAL    END),
                     DISCOUNT_OF_EX_FACTORY_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN      DISCOUNT_OF_EX_FACTORY_ACTUALS       END),
       DISCOUNT_OF_EX_FACTORY_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN DISCOUNT_OF_EX_FACTORY_PROJECTED END ),
                     NET_EX_FACTORY_SALES_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_EX_FACTORY_SALES_ACCRUAL END ), 
                      NET_EX_FACTORY_SALES_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN NET_EX_FACTORY_SALES_ACTUALS END ), 
        NET_EX_FACTORY_SALES_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_EX_FACTORY_SALES_PROJECTED END ),
       NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACCRUAL_' + CAST(@LOOP_CNTR AS VARCHAR(MAX)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(MAX)) + ' THEN NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACCRUAL END ),
                     NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACTUALS_' + CAST(@LOOP_CNTR AS VARCHAR(MAX)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(MAX)) + ' THEN NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_ACTUALS END ),
       NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_PROJECTED_' + CAST(@LOOP_CNTR AS VARCHAR(MAX)) + ' = MAX(CASE WHEN ID = ' + CAST(@LOOP_CNTR AS VARCHAR(MAX)) + ' THEN NET_EX_FACTORY_SALES_OF_EX_FACTORY_SALES_PROJECTED END ),'
		SET @LOOP_CNTR += 1
	END

	SET @SQL = LEFT(@SQL, LEN(@SQL) - 1)
	SET @SQL += ', C.PARENT_HIERARCHY_NO  PARENT_HIERARCHY_NO FROM   #RESULT PR
                                   JOIN (SELECT DISTINCT HIERARCHY_NO,PARENT_HIERARCHY_NO, LEVEL_NO FROM #CCP) C ON C.HIERARCHY_NO=PR.HIERARCHY_NO 
                                         AND  COALESCE(C.PARENT_HIERARCHY_NO, C.HIERARCHY_NO) = COALESCE(PR.PARENT_HIERARCHY_NO, PR.HIERARCHY_NO)
                                  INNER JOIN #CFF_PROJECTION_MASTER PM
                                  ON PR.CFF_PROJECTION_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
                                  GROUP  BY  C.LEVEL_NO,[YEAR],PERIOD,PR.HIERARCHY_NO,PR.LEVEL_NAME,C.PARENT_HIERARCHY_NO
                                  ORDER BY  C.LEVEL_NO,PR.HIERARCHY_NO,C.PARENT_HIERARCHY_NO,' + CASE 
			WHEN (
					@TAB = 'D'
					AND @VIEW = 'PIVOT'
					)
				THEN 'YEAR DESC,PERIOD DESC'
			ELSE 'YEAR,PERIOD'
			END

	EXEC SP_EXECUTESQL @SQL

END
 
      END TRY

      BEGIN CATCH
          DECLARE @ERRORMESSAGE NVARCHAR(4000);
          DECLARE @ERRORSEVERITY INT;
          DECLARE @ERRORSTATE INT;
          DECLARE @ERRORNUMBER INT;
          DECLARE @ERRORPROCEDURE VARCHAR(200);
          DECLARE @ERRORLINE INT;

          EXEC Usperrorcollector

          SELECT @ERRORMESSAGE = Error_message(),
                 @ERRORSEVERITY = Error_severity(),
                 @ERRORSTATE = Error_state(),
                 @ERRORPROCEDURE = Error_procedure(),
                 @ERRORLINE = Error_line(),
                 @ERRORNUMBER = Error_number()

          RAISERROR ( @ERRORMESSAGE,-- MESSAGE TEXT.
                      @ERRORSEVERITY,-- SEVERITY.
                      @ERRORSTATE,-- STATE.
                      @ERRORPROCEDURE,-- PROCEDURE_NAME.
                      @ERRORNUMBER,-- ERRORNUMBER
                      @ERRORLINE -- ERRORLINE
          );
      END CATCH
  END
GO	