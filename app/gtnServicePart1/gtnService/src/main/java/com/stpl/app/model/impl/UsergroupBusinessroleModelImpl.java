/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.UsergroupBusinessrole;
import com.stpl.app.model.UsergroupBusinessroleModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the UsergroupBusinessrole service. Represents a row in the &quot;USERGROUP_BUSINESSROLE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link UsergroupBusinessroleModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link UsergroupBusinessroleImpl}.
 * </p>
 *
 * @author
 * @see UsergroupBusinessroleImpl
 * @see UsergroupBusinessrole
 * @see UsergroupBusinessroleModel
 * @generated
 */
@ProviderType
public class UsergroupBusinessroleModelImpl extends BaseModelImpl<UsergroupBusinessrole>
	implements UsergroupBusinessroleModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a usergroup businessrole model instance should use the {@link UsergroupBusinessrole} interface instead.
	 */
	public static final String TABLE_NAME = "USERGROUP_BUSINESSROLE";
	public static final Object[][] TABLE_COLUMNS = {
			{ "CREATED_BY", Types.INTEGER },
			{ "BUSINESSROLE_MASTER_SID", Types.INTEGER },
			{ "USERS_SID", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "PROCESSED", Types.VARCHAR },
			{ "USERGROUP_ID", Types.INTEGER },
			{ "VERSION_NO", Types.INTEGER },
			{ "IS_ACTIVE", Types.VARCHAR },
			{ "USERGROUP_BUSINESSROLE_SID", Types.INTEGER },
			{ "MODIFIED_DATE", Types.TIMESTAMP }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("BUSINESSROLE_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("USERS_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("PROCESSED", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("USERGROUP_ID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("VERSION_NO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("IS_ACTIVE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("USERGROUP_BUSINESSROLE_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE = "create table USERGROUP_BUSINESSROLE (CREATED_BY INTEGER,BUSINESSROLE_MASTER_SID INTEGER,USERS_SID INTEGER,MODIFIED_BY INTEGER,CREATED_DATE DATE null,PROCESSED VARCHAR(75) null,USERGROUP_ID INTEGER,VERSION_NO INTEGER,IS_ACTIVE VARCHAR(75) null,USERGROUP_BUSINESSROLE_SID INTEGER not null primary key IDENTITY,MODIFIED_DATE DATE null)";
	public static final String TABLE_SQL_DROP = "drop table USERGROUP_BUSINESSROLE";
	public static final String ORDER_BY_JPQL = " ORDER BY usergroupBusinessrole.usergroupBusinessroleSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY USERGROUP_BUSINESSROLE.USERGROUP_BUSINESSROLE_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.UsergroupBusinessrole"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.UsergroupBusinessrole"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.UsergroupBusinessrole"));

	public UsergroupBusinessroleModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _usergroupBusinessroleSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setUsergroupBusinessroleSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _usergroupBusinessroleSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return UsergroupBusinessrole.class;
	}

	@Override
	public String getModelClassName() {
		return UsergroupBusinessrole.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("createdBy", getCreatedBy());
		attributes.put("businessroleMasterSid", getBusinessroleMasterSid());
		attributes.put("usersSid", getUsersSid());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("processed", getProcessed());
		attributes.put("usergroupId", getUsergroupId());
		attributes.put("versionNo", getVersionNo());
		attributes.put("isActive", getIsActive());
		attributes.put("usergroupBusinessroleSid", getUsergroupBusinessroleSid());
		attributes.put("modifiedDate", getModifiedDate());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer businessroleMasterSid = (Integer)attributes.get(
				"businessroleMasterSid");

		if (businessroleMasterSid != null) {
			setBusinessroleMasterSid(businessroleMasterSid);
		}

		Integer usersSid = (Integer)attributes.get("usersSid");

		if (usersSid != null) {
			setUsersSid(usersSid);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String processed = (String)attributes.get("processed");

		if (processed != null) {
			setProcessed(processed);
		}

		Integer usergroupId = (Integer)attributes.get("usergroupId");

		if (usergroupId != null) {
			setUsergroupId(usergroupId);
		}

		Integer versionNo = (Integer)attributes.get("versionNo");

		if (versionNo != null) {
			setVersionNo(versionNo);
		}

		String isActive = (String)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		Integer usergroupBusinessroleSid = (Integer)attributes.get(
				"usergroupBusinessroleSid");

		if (usergroupBusinessroleSid != null) {
			setUsergroupBusinessroleSid(usergroupBusinessroleSid);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getBusinessroleMasterSid() {
		return _businessroleMasterSid;
	}

	@Override
	public void setBusinessroleMasterSid(int businessroleMasterSid) {
		_businessroleMasterSid = businessroleMasterSid;
	}

	@Override
	public int getUsersSid() {
		return _usersSid;
	}

	@Override
	public void setUsersSid(int usersSid) {
		_usersSid = usersSid;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getProcessed() {
		if (_processed == null) {
			return StringPool.BLANK;
		}
		else {
			return _processed;
		}
	}

	@Override
	public void setProcessed(String processed) {
		_processed = processed;
	}

	@Override
	public int getUsergroupId() {
		return _usergroupId;
	}

	@Override
	public void setUsergroupId(int usergroupId) {
		_usergroupId = usergroupId;
	}

	@Override
	public int getVersionNo() {
		return _versionNo;
	}

	@Override
	public void setVersionNo(int versionNo) {
		_versionNo = versionNo;
	}

	@Override
	public String getIsActive() {
		if (_isActive == null) {
			return StringPool.BLANK;
		}
		else {
			return _isActive;
		}
	}

	@Override
	public void setIsActive(String isActive) {
		_isActive = isActive;
	}

	@Override
	public int getUsergroupBusinessroleSid() {
		return _usergroupBusinessroleSid;
	}

	@Override
	public void setUsergroupBusinessroleSid(int usergroupBusinessroleSid) {
		_usergroupBusinessroleSid = usergroupBusinessroleSid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public UsergroupBusinessrole toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (UsergroupBusinessrole)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		UsergroupBusinessroleImpl usergroupBusinessroleImpl = new UsergroupBusinessroleImpl();

		usergroupBusinessroleImpl.setCreatedBy(getCreatedBy());
		usergroupBusinessroleImpl.setBusinessroleMasterSid(getBusinessroleMasterSid());
		usergroupBusinessroleImpl.setUsersSid(getUsersSid());
		usergroupBusinessroleImpl.setModifiedBy(getModifiedBy());
		usergroupBusinessroleImpl.setCreatedDate(getCreatedDate());
		usergroupBusinessroleImpl.setProcessed(getProcessed());
		usergroupBusinessroleImpl.setUsergroupId(getUsergroupId());
		usergroupBusinessroleImpl.setVersionNo(getVersionNo());
		usergroupBusinessroleImpl.setIsActive(getIsActive());
		usergroupBusinessroleImpl.setUsergroupBusinessroleSid(getUsergroupBusinessroleSid());
		usergroupBusinessroleImpl.setModifiedDate(getModifiedDate());

		usergroupBusinessroleImpl.resetOriginalValues();

		return usergroupBusinessroleImpl;
	}

	@Override
	public int compareTo(UsergroupBusinessrole usergroupBusinessrole) {
		int primaryKey = usergroupBusinessrole.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof UsergroupBusinessrole)) {
			return false;
		}

		UsergroupBusinessrole usergroupBusinessrole = (UsergroupBusinessrole)obj;

		int primaryKey = usergroupBusinessrole.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<UsergroupBusinessrole> toCacheModel() {
		UsergroupBusinessroleCacheModel usergroupBusinessroleCacheModel = new UsergroupBusinessroleCacheModel();

		usergroupBusinessroleCacheModel.createdBy = getCreatedBy();

		usergroupBusinessroleCacheModel.businessroleMasterSid = getBusinessroleMasterSid();

		usergroupBusinessroleCacheModel.usersSid = getUsersSid();

		usergroupBusinessroleCacheModel.modifiedBy = getModifiedBy();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			usergroupBusinessroleCacheModel.createdDate = createdDate.getTime();
		}
		else {
			usergroupBusinessroleCacheModel.createdDate = Long.MIN_VALUE;
		}

		usergroupBusinessroleCacheModel.processed = getProcessed();

		String processed = usergroupBusinessroleCacheModel.processed;

		if ((processed != null) && (processed.length() == 0)) {
			usergroupBusinessroleCacheModel.processed = null;
		}

		usergroupBusinessroleCacheModel.usergroupId = getUsergroupId();

		usergroupBusinessroleCacheModel.versionNo = getVersionNo();

		usergroupBusinessroleCacheModel.isActive = getIsActive();

		String isActive = usergroupBusinessroleCacheModel.isActive;

		if ((isActive != null) && (isActive.length() == 0)) {
			usergroupBusinessroleCacheModel.isActive = null;
		}

		usergroupBusinessroleCacheModel.usergroupBusinessroleSid = getUsergroupBusinessroleSid();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			usergroupBusinessroleCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			usergroupBusinessroleCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		return usergroupBusinessroleCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(23);

		sb.append("{createdBy=");
		sb.append(getCreatedBy());
		sb.append(", businessroleMasterSid=");
		sb.append(getBusinessroleMasterSid());
		sb.append(", usersSid=");
		sb.append(getUsersSid());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", processed=");
		sb.append(getProcessed());
		sb.append(", usergroupId=");
		sb.append(getUsergroupId());
		sb.append(", versionNo=");
		sb.append(getVersionNo());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", usergroupBusinessroleSid=");
		sb.append(getUsergroupBusinessroleSid());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(37);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.UsergroupBusinessrole");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>businessroleMasterSid</column-name><column-value><![CDATA[");
		sb.append(getBusinessroleMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usersSid</column-name><column-value><![CDATA[");
		sb.append(getUsersSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>processed</column-name><column-value><![CDATA[");
		sb.append(getProcessed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usergroupId</column-name><column-value><![CDATA[");
		sb.append(getUsergroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>versionNo</column-name><column-value><![CDATA[");
		sb.append(getVersionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>usergroupBusinessroleSid</column-name><column-value><![CDATA[");
		sb.append(getUsergroupBusinessroleSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = UsergroupBusinessrole.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			UsergroupBusinessrole.class
		};
	private int _createdBy;
	private int _businessroleMasterSid;
	private int _usersSid;
	private int _modifiedBy;
	private Date _createdDate;
	private String _processed;
	private int _usergroupId;
	private int _versionNo;
	private String _isActive;
	private int _usergroupBusinessroleSid;
	private Date _modifiedDate;
	private UsergroupBusinessrole _escapedModel;
}