package com.stpl.app.model.impl;

import com.stpl.app.model.DeductionGroupDetails;
import com.stpl.app.model.DeductionGroupDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the DeductionGroupDetails service. Represents a row in the &quot;DEDUCTION_GROUP_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.DeductionGroupDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link DeductionGroupDetailsImpl}.
 * </p>
 *
 * @author
 * @see DeductionGroupDetailsImpl
 * @see com.stpl.app.model.DeductionGroupDetails
 * @see com.stpl.app.model.DeductionGroupDetailsModel
 * @generated
 */
public class DeductionGroupDetailsModelImpl extends BaseModelImpl<DeductionGroupDetails>
    implements DeductionGroupDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a deduction group details model instance should use the {@link com.stpl.app.model.DeductionGroupDetails} interface instead.
     */
    public static final String TABLE_NAME = "DEDUCTION_GROUP_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "DEDUCTION_GROUP_DETAILS_SID", Types.INTEGER },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "DEDUCTION_GROUP_SID", Types.INTEGER },
            { "VERSION_NO", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "RS_MODEL_SID", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table DEDUCTION_GROUP_DETAILS (DEDUCTION_GROUP_DETAILS_SID INTEGER not null primary key IDENTITY,CREATED_DATE DATE null,CREATED_BY INTEGER,DEDUCTION_GROUP_SID INTEGER,VERSION_NO INTEGER,MODIFIED_BY INTEGER,RS_MODEL_SID INTEGER,MODIFIED_DATE DATE null)";
    public static final String TABLE_SQL_DROP = "drop table DEDUCTION_GROUP_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY deductionGroupDetails.deductionGroupDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY DEDUCTION_GROUP_DETAILS.DEDUCTION_GROUP_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.DeductionGroupDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.DeductionGroupDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.DeductionGroupDetails"));
    private static ClassLoader _classLoader = DeductionGroupDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            DeductionGroupDetails.class
        };
    private int _deductionGroupDetailsSid;
    private Date _createdDate;
    private int _createdBy;
    private int _deductionGroupSid;
    private int _versionNo;
    private int _modifiedBy;
    private int _rsModelSid;
    private Date _modifiedDate;
    private DeductionGroupDetails _escapedModel;

    public DeductionGroupDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _deductionGroupDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setDeductionGroupDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _deductionGroupDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return DeductionGroupDetails.class;
    }

    @Override
    public String getModelClassName() {
        return DeductionGroupDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("deductionGroupDetailsSid", getDeductionGroupDetailsSid());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("deductionGroupSid", getDeductionGroupSid());
        attributes.put("versionNo", getVersionNo());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("rsModelSid", getRsModelSid());
        attributes.put("modifiedDate", getModifiedDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer deductionGroupDetailsSid = (Integer) attributes.get(
                "deductionGroupDetailsSid");

        if (deductionGroupDetailsSid != null) {
            setDeductionGroupDetailsSid(deductionGroupDetailsSid);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Integer deductionGroupSid = (Integer) attributes.get(
                "deductionGroupSid");

        if (deductionGroupSid != null) {
            setDeductionGroupSid(deductionGroupSid);
        }

        Integer versionNo = (Integer) attributes.get("versionNo");

        if (versionNo != null) {
            setVersionNo(versionNo);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Integer rsModelSid = (Integer) attributes.get("rsModelSid");

        if (rsModelSid != null) {
            setRsModelSid(rsModelSid);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }
    }

    @Override
    public int getDeductionGroupDetailsSid() {
        return _deductionGroupDetailsSid;
    }

    @Override
    public void setDeductionGroupDetailsSid(int deductionGroupDetailsSid) {
        _deductionGroupDetailsSid = deductionGroupDetailsSid;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public int getDeductionGroupSid() {
        return _deductionGroupSid;
    }

    @Override
    public void setDeductionGroupSid(int deductionGroupSid) {
        _deductionGroupSid = deductionGroupSid;
    }

    @Override
    public int getVersionNo() {
        return _versionNo;
    }

    @Override
    public void setVersionNo(int versionNo) {
        _versionNo = versionNo;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public int getRsModelSid() {
        return _rsModelSid;
    }

    @Override
    public void setRsModelSid(int rsModelSid) {
        _rsModelSid = rsModelSid;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public DeductionGroupDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (DeductionGroupDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        DeductionGroupDetailsImpl deductionGroupDetailsImpl = new DeductionGroupDetailsImpl();

        deductionGroupDetailsImpl.setDeductionGroupDetailsSid(getDeductionGroupDetailsSid());
        deductionGroupDetailsImpl.setCreatedDate(getCreatedDate());
        deductionGroupDetailsImpl.setCreatedBy(getCreatedBy());
        deductionGroupDetailsImpl.setDeductionGroupSid(getDeductionGroupSid());
        deductionGroupDetailsImpl.setVersionNo(getVersionNo());
        deductionGroupDetailsImpl.setModifiedBy(getModifiedBy());
        deductionGroupDetailsImpl.setRsModelSid(getRsModelSid());
        deductionGroupDetailsImpl.setModifiedDate(getModifiedDate());

        deductionGroupDetailsImpl.resetOriginalValues();

        return deductionGroupDetailsImpl;
    }

    @Override
    public int compareTo(DeductionGroupDetails deductionGroupDetails) {
        int primaryKey = deductionGroupDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof DeductionGroupDetails)) {
            return false;
        }

        DeductionGroupDetails deductionGroupDetails = (DeductionGroupDetails) obj;

        int primaryKey = deductionGroupDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<DeductionGroupDetails> toCacheModel() {
        DeductionGroupDetailsCacheModel deductionGroupDetailsCacheModel = new DeductionGroupDetailsCacheModel();

        deductionGroupDetailsCacheModel.deductionGroupDetailsSid = getDeductionGroupDetailsSid();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            deductionGroupDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            deductionGroupDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        deductionGroupDetailsCacheModel.createdBy = getCreatedBy();

        deductionGroupDetailsCacheModel.deductionGroupSid = getDeductionGroupSid();

        deductionGroupDetailsCacheModel.versionNo = getVersionNo();

        deductionGroupDetailsCacheModel.modifiedBy = getModifiedBy();

        deductionGroupDetailsCacheModel.rsModelSid = getRsModelSid();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            deductionGroupDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            deductionGroupDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        return deductionGroupDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(17);

        sb.append("{deductionGroupDetailsSid=");
        sb.append(getDeductionGroupDetailsSid());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", deductionGroupSid=");
        sb.append(getDeductionGroupSid());
        sb.append(", versionNo=");
        sb.append(getVersionNo());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", rsModelSid=");
        sb.append(getRsModelSid());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(28);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.DeductionGroupDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>deductionGroupDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getDeductionGroupDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deductionGroupSid</column-name><column-value><![CDATA[");
        sb.append(getDeductionGroupSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>versionNo</column-name><column-value><![CDATA[");
        sb.append(getVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rsModelSid</column-name><column-value><![CDATA[");
        sb.append(getRsModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
