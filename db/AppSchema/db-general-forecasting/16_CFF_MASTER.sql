IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_MASTER'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].CFF_MASTER
        (
           CFF_MASTER_SID                 INT IDENTITY(1, 1) NOT NULL,
           CFF_TYPE                       INT NOT NULL,
           CFF_NAME                       VARCHAR(100) NOT NULL,
           ACTIVE_FROM_DATE               DATETIME NULL,
           ACTIVE_TO_DATE                 DATETIME NULL,
           CFF_OFFICIAL                   BIT NULL,
           CUSTOMER_HIERARCHY_SID         INT NULL,
           CUSTOMER_HIERARCHY_LEVEL       SMALLINT NULL,
           CUSTOMER_HIER_VERSION_NO       INT NULL,
           COMPANY_GROUP_SID              INT NULL,
           CUSTOMER_HIERARCHY_INNER_LEVEL SMALLINT NULL,
           CUST_RELATIONSHIP_BUILDER_SID  INT NULL,
           COMPANY_MASTER_SID             INT NULL,
           PRODUCT_HIERARCHY_SID          INT NULL,
           PRODUCT_HIERARCHY_LEVEL        SMALLINT NULL,
           PRODUCT_HIER_VERSION_NO        INT NULL,
           ITEM_GROUP_SID                 INT NULL,
           PRODUCT_HIERARCHY_INNER_LEVEL  SMALLINT NULL,
           PROD_RELATIONSHIP_BUILDER_SID  INT NULL,
           INBOUND_STATUS                 CHAR(1) NOT NULL,
           CREATED_BY                     INT NOT NULL,
           CREATED_DATE                   DATETIME NOT NULL,
           MODIFIED_BY                    INT NOT NULL,
           MODIFIED_DATE                  DATETIME NOT NULL
        )
  END

GO
------------------------column addition-------------------
IF NOT EXISTS (SELECT 1
               FROM   INFORMATION_SCHEMA.COLUMNS
               WHERE  TABLE_NAME = 'CFF_MASTER'
                      AND COLUMN_NAME = 'BUSINESS_UNIT'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      ALTER TABLE CFF_MASTER
        ADD  BUSINESS_UNIT INT 
  END

GO

---------------PRIMARY KEY CONSTRAINTS
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CFF_MASTER_CFF_MASTER_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].CFF_MASTER
        ADD CONSTRAINT PK_CFF_MASTER_CFF_MASTER_SID PRIMARY KEY (CFF_MASTER_SID)
  END
GO

-----------------DEFAULT CONSTRAINTS
--CREATED_BY
IF NOT EXISTS(SELECT 1
              FROM   SYS.DEFAULT_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'DF_CFF_MASTER_CREATED_BY'
                     AND TYPE = 'D')
  BEGIN
      ALTER TABLE [DBO].CFF_MASTER
        ADD CONSTRAINT DF_CFF_MASTER_CREATED_BY DEFAULT (1) FOR CREATED_BY
  END

GO

--CREATED_DATE
IF NOT EXISTS(SELECT 1
              FROM   SYS.DEFAULT_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'DF_CFF_MASTER_CREATED_DATE'
                     AND TYPE = 'D')
  BEGIN
      ALTER TABLE [DBO].CFF_MASTER
        ADD CONSTRAINT DF_CFF_MASTER_CREATED_DATE DEFAULT Getdate() FOR CREATED_DATE
  END

GO

--MODIFIED_BY
IF NOT EXISTS(SELECT 1
              FROM   SYS.DEFAULT_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'DF_CFF_MASTER_MODIFIED_BY'
                     AND TYPE = 'D')
  BEGIN
      ALTER TABLE [DBO].CFF_MASTER
        ADD CONSTRAINT DF_CFF_MASTER_MODIFIED_BY DEFAULT (1) FOR MODIFIED_BY
  END

GO

--MODIFIED_DATE
IF NOT EXISTS(SELECT 1
              FROM   SYS.DEFAULT_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'DF_CFF_MASTER_MODIFIED_DATE'
                     AND TYPE = 'D')
  BEGIN
      ALTER TABLE [DBO].CFF_MASTER
        ADD CONSTRAINT DF_CFF_MASTER_MODIFIED_DATE DEFAULT Getdate() FOR MODIFIED_DATE
  END

GO
-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_MASTER'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

---------------------CFF_DETAILS----------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_DETAILS'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CFF_DETAILS]
        (
CFF_DETAILS_SID   INT  IDENTITY(1, 1) NOT NULL ,
CFF_MASTER_SID INT  NOT NULL,
PROJECTION_MASTER_SID INT NOT NULL,
CCP_DETAILS_SID INT NOT NULL,
INBOUND_STATUS CHAR(1) NOT NULL
        )
  END

GO
--------------------------------------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_DETAILS'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CFF_DETAILS_CFF_DETAILS_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].[CFF_DETAILS]
        ADD CONSTRAINT PK_CFF_DETAILS_CFF_DETAILS_SID PRIMARY KEY (CFF_DETAILS_SID)
  END

GO
--SALES_INCLUSION COLUMN ADDITION
IF NOT EXISTS (SELECT 1
               FROM   INFORMATION_SCHEMA.COLUMNS
               WHERE  TABLE_NAME = 'CFF_DETAILS'
                      AND COLUMN_NAME = 'SALES_INCLUSION'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      ALTER TABLE CFF_DETAILS
        ADD SALES_INCLUSION CHAR(1)
  END

GO



-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_DETAILS' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO
-----------------------------CFF_ADDITIONAL_INFO----
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_ADDITIONAL_INFO'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CFF_ADDITIONAL_INFO]
        ( 
CFF_ADDITIONAL_INFO_SID	INT IDENTITY(1, 1) NOT NULL,
CFF_MASTER_SID	INT NOT NULL,
NOTES	VARCHAR(5000) NOT NULL,
CREATED_BY	INT NOT NULL,
CREATED_DATE	DATETIME NOT NULL
        )
  END

GO

--------------------------------------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_ADDITIONAL_INFO'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CFF_ADDITIONAL_INFO_CFF_ADDITIONAL_INFO_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].[CFF_ADDITIONAL_INFO]
        ADD CONSTRAINT PK_CFF_ADDITIONAL_INFO_CFF_ADDITIONAL_INFO_SID PRIMARY KEY (CFF_ADDITIONAL_INFO_SID)
  END

GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_ADDITIONAL_INFO' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO
--------------------------------CFF_APPROVAL_DETAILS-------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_APPROVAL_DETAILS'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CFF_APPROVAL_DETAILS]
        ( 
CFF_APPROVAL_DETAILS_SID	INT IDENTITY(1, 1) NOT NULL,
CFF_MASTER_SID	INT NOT NULL,
APPROVED_BY	INT NOT NULL,
APPROVED_DATE	DATETIME NOT NULL,
APPROVAL_SEQUENCE	INT NOT NULL,
APPROVAL_STATUS	INT NOT NULL,
INBOUND_STATUS	CHAR(1) NOT NULL,
NO_OF_LEVEL	VARCHAR(10) NULL
        )
  END

GO
--------------------------------------------------
-----------------------DROP STATISTICS SCRIPTS STARTS--------------------------
IF EXISTS (SELECT 1
           FROM   SYS.STATS
           WHERE  Object_name(OBJECT_ID) = 'CFF_APPROVAL_DETAILS'
                  AND AUTO_CREATED = 0
                  AND NAME = 'APPROVED_DATE')
  BEGIN
      DROP STATISTICS CFF_APPROVAL_DETAILS.APPROVED_DATE
  END

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'CFF_APPROVAL_DETAILS'
                  AND COLUMN_NAME = 'APPROVED_DATE'
                  AND TABLE_SCHEMA = 'DBO'
                  AND DATA_TYPE = 'datetime')
  BEGIN
      ALTER TABLE CFF_APPROVAL_DETAILS
        ALTER COLUMN APPROVED_DATE DATETIME NULL
  END

GO

----------------- DROP STATISTICS SCRIPTS END---------------------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_APPROVAL_DETAILS'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CFF_APPROVAL_DETAILS_CFF_APPROVAL_DETAILS_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].[CFF_APPROVAL_DETAILS]
        ADD CONSTRAINT PK_CFF_APPROVAL_DETAILS_CFF_APPROVAL_DETAILS_SID PRIMARY KEY (CFF_APPROVAL_DETAILS_SID)
  END

GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_APPROVAL_DETAILS' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

----------------------------CFF_COMP_PRD_LEVEL_FILES_DATA-------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_COMP_PRD_LEVEL_FILES_DATA'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_COMP_PRD_LEVEL_FILES_DATA] (
		CFF_FILES_DATA_SID  INT IDENTITY(1, 1) NOT NULL
		,CFF_MASTER_SID INT
		,ITEM_MASTER_SID INT
		,COMPANY_MASTER_SID INT
		,PERIOD_SID INT
		,CUST_EX_FACTORY_SALES_ACTUALS NUMERIC(22, 6)
		,CUST_EX_FACTORY_SALES_PROJ NUMERIC(22, 6)
		,IW_DETAILS_ACTUALS NUMERIC(22, 6)
		,IW_DETAILS_PROJ NUMERIC(22, 6)
		)
END

GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_COMP_PRD_LEVEL_FILES_DATA' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO
----------------------------------CFF_CUST_HIERARCHY--------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_CUST_HIERARCHY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_CUST_HIERARCHY] (
		CFF_CUST_HIERARCHY_SID INT IDENTITY(1, 1) NOT NULL
		,CFF_MASTER_SID INT NULL
		,RELATIONSHIP_LEVEL_SID INT NULL
		)
END
GO
-------------PRIMARY KEYS--------------------

IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
               WHERE  CONSTRAINT_NAME = 'PK_CFF_CUST_HIERARCHY_CFF_CUST_HIERARCHY_SID'
                      AND TABLE_NAME = 'CFF_CUST_HIERARCHY')
  ALTER TABLE CFF_CUST_HIERARCHY
    ADD CONSTRAINT PK_CFF_CUST_HIERARCHY_CFF_CUST_HIERARCHY_SID PRIMARY KEY (CFF_CUST_HIERARCHY_SID)

GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_CUST_HIERARCHY'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO
-----------------------------------CFF_CUSTOM_VIEW_DETAILS--------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_CUSTOM_VIEW_DETAILS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_CUSTOM_VIEW_DETAILS] (
		CFF_CUSTOM_VIEW_DETAILS_SID INT IDENTITY(1, 1) NOT NULL
		,CFF_CUSTOM_VIEW_MASTER_SID INT
		,HIERARCHY_ID INT
		,HIERARCHY_INDICATOR CHAR(1)
		,LEVEL_NO INT
		)
END
GO

-------------PRIMARY KEYS--------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_CFF_CUSTOM_VIEW_DETAILS_CFF_CUSTOM_VIEW_DETAILS_SID'
			AND TABLE_NAME = 'CFF_CUSTOM_VIEW_DETAILS'
		)
    
	ALTER TABLE CFF_CUSTOM_VIEW_DETAILS ADD CONSTRAINT PK_CFF_CUSTOM_VIEW_DETAILS_CFF_CUSTOM_VIEW_DETAILS_SID PRIMARY KEY (CFF_CUSTOM_VIEW_DETAILS_SID)

GO



-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_CUSTOM_VIEW_DETAILS' --TABLE NAME
SET @SCHEMANAME1 = 'dbo' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO
------------------------------CFF_CUSTOM_VIEW_MASTER-----------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_CUSTOM_VIEW_MASTER'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_CUSTOM_VIEW_MASTER] (
		CFF_CUSTOM_VIEW_MASTER_SID INT IDENTITY(1, 1) NOT NULL
		,CFF_MASTER_SID INT
		,VIEW_NAME VARCHAR(200)
		,CREATED_BY INT
		,CREATED_DATE DATETIME
		,MODIFIED_BY INT
		,MODIFIED_DATE DATETIME
		)
END
GO

-------------PRIMARY KEYS--------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_CFF_CUSTOM_VIEW_MASTER_CFF_CUSTOM_VIEW_MASTER_SID'
			AND TABLE_NAME = 'CFF_CUSTOM_VIEW_MASTER'
		)
	ALTER TABLE CFF_CUSTOM_VIEW_MASTER ADD CONSTRAINT PK_CFF_CUSTOM_VIEW_MASTER_CFF_CUSTOM_VIEW_MASTER_SID PRIMARY KEY (CFF_CUSTOM_VIEW_MASTER_SID)
GO

-------------DEFAULT CONSTRAINTS---------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE parent_object_id = Object_id('dbo.CFF_CUSTOM_VIEW_MASTER')
			AND NAME = 'DF_CFF_CUSTOM_VIEW_MASTER_CREATED_BY'
		)
BEGIN
	ALTER TABLE [dbo].CFF_CUSTOM_VIEW_MASTER ADD CONSTRAINT DF_CFF_CUSTOM_VIEW_MASTER_CREATED_BY DEFAULT(1)
	FOR CREATED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE parent_object_id = Object_id('dbo.CFF_CUSTOM_VIEW_MASTER')
			AND NAME = 'DF_CFF_CUSTOM_VIEW_MASTER_CREATED_DATE'
		)
BEGIN
	ALTER TABLE [dbo].CFF_CUSTOM_VIEW_MASTER ADD CONSTRAINT DF_CFF_CUSTOM_VIEW_MASTER_CREATED_DATE DEFAULT(Getdate())
	FOR CREATED_DATE
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE parent_object_id = Object_id('dbo.CFF_CUSTOM_VIEW_MASTER')
			AND NAME = 'DF_CFF_CUSTOM_VIEW_MASTER_MODIFIED_BY'
		)
BEGIN
	ALTER TABLE [dbo].CFF_CUSTOM_VIEW_MASTER ADD CONSTRAINT DF_CFF_CUSTOM_VIEW_MASTER_MODIFIED_BY DEFAULT(1)
	FOR MODIFIED_BY
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE parent_object_id = Object_id('dbo.CFF_CUSTOM_VIEW_MASTER')
			AND NAME = 'DF_CFF_CUSTOM_VIEW_MASTER_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE [dbo].CFF_CUSTOM_VIEW_MASTER ADD CONSTRAINT DF_CFF_CUSTOM_VIEW_MASTER_MODIFIED_DATE DEFAULT(Getdate())
	FOR MODIFIED_DATE
END
GO



-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_CUSTOM_VIEW_MASTER' --TABLE NAME
SET @SCHEMANAME1 = 'dbo' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME) + '.' + Quotename(@TABLENAME) + '.' + Quotename(@STATSNAME)

		--PRINT @SQL
		EXEC Sp_executesql @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + Quotename(C.NAME) + ' ON ' + Quotename(Schema_name(SCHEMA_ID)) + '.' + Quotename(T.NAME) + ' (' + Quotename(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC Sp_executesql @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

-------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_DOC_DETAILS'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CFF_DOC_DETAILS]
        (
CFF_DOC_DETAILS_SID	INT	IDENTITY(1, 1) NOT NULL,
CFF_MASTER_SID	INT	NOT NULL,
FILE_NAME	VARCHAR(100) NOT NULL,
FILE_SIZE	VARCHAR(10) NOT NULL,
FILE_TYPE	VARCHAR(10) NOT NULL,
UPLOAD_BY	INT	NOT NULL,
UPLOAD_DATE	DATETIME	NOT NULL
        )
  END

GO
----------------------------------------
--------------------------------------------------CFF_DOC_DETAILS-----------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_DOC_DETAILS'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CFF_DOC_DETAILS_CFF_DOC_DETAILS_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].[CFF_DOC_DETAILS]
        ADD CONSTRAINT PK_CFF_DOC_DETAILS_CFF_DOC_DETAILS_SID PRIMARY KEY (CFF_DOC_DETAILS_SID)
  END

GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_DOC_DETAILS' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO
--------------------------CFF_FILE_SELECTION-----------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_FILE_SELECTION'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CFF_FILE_SELECTION]
        (
           CFF_FILE_SELECTION_SID INT IDENTITY(1, 1) NOT NULL,
           CFF_MASTER_SID         INT NOT NULL,
           FILE_MANAGEMENT_SID    INT NULL,
           FILE_NAME              VARCHAR(50) NULL,
           VERSION                VARCHAR(15) NULL,
           ACTIVE_FROM            DATETIME NULL,
           ACTIVE_TO              DATETIME NULL,
           FILE_TYPE              int NULL
        )
  END

GO 


--------------------------PRIMARY KEYS---------------------------------
IF NOT EXISTS(SELECT 'X'
              FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
              WHERE  CONSTRAINT_NAME = 'PK_CFF_FILE_SELECTION_CFF_FILE_SELECTION_SID'
                     AND TABLE_NAME = 'CFF_FILE_SELECTION')
BEGIN
  ALTER TABLE CFF_FILE_SELECTION
    ADD CONSTRAINT PK_CFF_FILE_SELECTION_CFF_FILE_SELECTION_SID PRIMARY KEY(CFF_FILE_SELECTION_SID)
END
GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_FILE_SELECTION'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO



------------------------------CFF_PROD_HIERARCHY----------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_PROD_HIERARCHY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_PROD_HIERARCHY] (
		CFF_PROD_HIERARCHY_SID INT IDENTITY(1, 1) NOT NULL
		,CFF_MASTER_SID INT NULL
		,RELATIONSHIP_LEVEL_SID INT NULL
		)
END
GO

-------------PRIMARY KEYS--------------------

IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
               WHERE  CONSTRAINT_NAME = 'PK_CFF_PROD_HIERARCHY_CFF_PROD_HIERARCHY_SID'
                      AND TABLE_NAME = 'CFF_PROD_HIERARCHY')
BEGIN
  ALTER TABLE CFF_PROD_HIERARCHY
    ADD CONSTRAINT PK_CFF_PROD_HIERARCHY_CFF_PROD_HIERARCHY_SID PRIMARY KEY (CFF_PROD_HIERARCHY_SID)
END

GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_PROD_HIERARCHY'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO
----------------------------------------------------------CFF_PRODUCT_LEVEL_FILES_DATA
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_PRODUCT_LEVEL_FILES_DATA'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_PRODUCT_LEVEL_FILES_DATA] (
		CFF_FILES_DATA_SID int IDENTITY(1, 1)   NOT NULL
		,CFF_MASTER_SID INT
		,ITEM_MASTER_SID INT
		,PERIOD_SID INT
		,EX_FACTORY_SALES_ACTUALS NUMERIC(22, 6)
		,EX_FACTORY_SALES_PROJ NUMERIC(22, 6)
		,DEMAND_SALES_ACTUALS NUMERIC(22, 6)
		,DEMAND_SALES_PROJ NUMERIC(22, 6)
		,ADJUSTED_DEMAND_ACTUALS NUMERIC(22, 6)
		,ADJUSTED_DEMAND_PROJ NUMERIC(22, 6)
		,IW_MASTER_ACTUALS NUMERIC(22, 6)
		,IW_MASTER_PROJ NUMERIC(22, 6)
		)
END
GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_PRODUCT_LEVEL_FILES_DATA' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO


------CFF_SELECTION----------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_SELECTION'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_SELECTION] (
		CFF_SELECTION_SID INT IDENTITY(1, 1) NOT NULL
		,CFF_MASTER_SID INT NULL
		,SCREEN_NAME VARCHAR(50) NULL
		,FIELD_NAME VARCHAR(30)
		,FIELD_VALUES VARCHAR(4000)
		)
END
GO



-------------PRIMARY KEYS--------------------

IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
               WHERE  CONSTRAINT_NAME = 'PK_CFF_SELECTION_CFF_SELECTION_SID'
                      AND TABLE_NAME = 'CFF_SELECTION')
BEGIN
  ALTER TABLE CFF_SELECTION
    ADD CONSTRAINT PK_CFF_SELECTION_CFF_SELECTION_SID PRIMARY KEY (CFF_SELECTION_SID)
END

GO
-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_SELECTION'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

-----------------------CFF_CUSTOM_RELATIONSHIP_BUILDER------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_CUSTOM_RELATIONSHIP_BUILDER'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_CUSTOM_RELATIONSHIP_BUILDER] (
		CFF_CUSTOM_RELATIONSHIP_BUILDER_SID INT IDENTITY(1, 1) NOT NULL
		,CFF_CUSTOM_VIEW_DETAILS_SID INT NULL
		,RELATIONSHIP_LEVEL_VALUES VARCHAR(8000) NULL
		,CUSTOM_HIERARCHY_NO VARCHAR(50) NULL
		)
END
GO

 


IF NOT EXISTS (
		SELECT 1
		FROM SYS.KEY_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'CFF_CUSTOM_RELATIONSHIP_BUILDER'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'PK_CFF_CUSTOM_RELATIONSHIP_BUILDER_CFF_CUSTOM_RELATIONSHIP_BUILDER_SID'
			AND TYPE = 'PK'
		)
BEGIN
	ALTER TABLE [DBO].[CFF_CUSTOM_RELATIONSHIP_BUILDER] ADD CONSTRAINT PK_CFF_CUSTOM_RELATIONSHIP_BUILDER_CFF_CUSTOM_RELATIONSHIP_BUILDER_SID PRIMARY KEY (CFF_CUSTOM_RELATIONSHIP_BUILDER_SID)
END
GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_CUSTOM_RELATIONSHIP_BUILDER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

------------------------------CUSTOM_CCP_MAP-------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CFF_CUSTOM_VIEW'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CFF_CUSTOM_VIEW] (
		CFF_CUSTOM_VIEW_SID INT IDENTITY(1, 1) NOT NULL
		,CFF_CUSTOM_VIEW_DETAILS_SID INT NULL
		,CFF_RELATIONSHIP_LEVEL_VALUES_SID INT NULL
		,CCP_DETAILS_SID INT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM SYS.KEY_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'CFF_CUSTOM_VIEW'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'PK_CFF_CUSTOM_VIEW_CFF_CUSTOM_VIEW_SID'
			AND TYPE = 'PK'
		)
BEGIN
	ALTER TABLE [DBO].[CFF_CUSTOM_VIEW] ADD CONSTRAINT PK_CFF_CUSTOM_VIEW_CFF_CUSTOM_VIEW_SID PRIMARY KEY (CFF_CUSTOM_VIEW_SID)
END
GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_CUSTOM_VIEW' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO


 
------------------------CFF_VIEW_MASTER 
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_VIEW_MASTER'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CFF_VIEW_MASTER]
        (
           CFF_VIEW_MASTER_SID INT IDENTITY(1, 1) NOT NULL,
           VIEW_TYPE           VARCHAR(50),
		   VIEW_NAME           VARCHAR(100),
           CREATED_BY          VARCHAR (50),
           CREATED_DATE        DATETIME,
           MODIFIED_BY         VARCHAR(50),
           MODIFIED_DATE       DATETIME,
           CFF_MASTER_SID      INT
        )
  END

GO

IF NOT EXISTS (SELECT 1
               FROM   SYS.KEY_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_VIEW_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'PK_CFF_VIEW_MASTER_CFF_VIEW_MASTER_SID'
                      AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].[CFF_VIEW_MASTER]
        ADD CONSTRAINT PK_CFF_VIEW_MASTER_CFF_VIEW_MASTER_SID PRIMARY KEY (CFF_VIEW_MASTER_SID)
  END

GO 


-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_VIEW_MASTER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

------------------------------------------------------------------CFF_DEDUCTION_INCLUSION------------------------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_DEDUCTION_INCLUSION'
                      AND TABLE_SCHEMA = 'DBO')
  CREATE TABLE CFF_DEDUCTION_INCLUSION
    (
       CFF_DEDUCTION_INCLUSION_SID INT IDENTITY(1, 1) NOT NULL,
       CFF_DETAILS_SID             INT,
       RS_MODEL_SID                INT,
       DEDUCTION_INCLUSION         CHAR(1)
    )

------------------------------------------------Primary Key----------------------------------------------------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_DEDUCTION_INCLUSION'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CFF_DEDUCTION_INCLUSION_CFF_DEDUCTION_INCLUSION_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].CFF_DEDUCTION_INCLUSION
        ADD CONSTRAINT PK_CFF_DEDUCTION_INCLUSION_CFF_DEDUCTION_INCLUSION_SID PRIMARY KEY ( CFF_DEDUCTION_INCLUSION_SID)
  END

GO	

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_DEDUCTION_INCLUSION' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO





------------------------
-----------------------CUSTOM_RELATIONSHIP_BUILDER------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CUSTOM_RELATIONSHIP_BUILDER'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CUSTOM_RELATIONSHIP_BUILDER] (
		CUSTOM_RELATIONSHIP_BUILDER_SID INT IDENTITY(1, 1) NOT NULL
		,CUSTOM_VIEW_DETAILS_SID INT NULL
		,RELATIONSHIP_LEVEL_VALUES VARCHAR(8000) NULL
		,CUSTOM_HIERARCHY_NO VARCHAR(50) NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM SYS.KEY_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'CUSTOM_RELATIONSHIP_BUILDER'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'PK_CUSTOM_RELATIONSHIP_BUILDER_CUSTOM_RELATIONSHIP_BUILDER_SID'
			AND TYPE = 'PK'
		)
BEGIN
	ALTER TABLE [DBO].[CUSTOM_RELATIONSHIP_BUILDER] ADD CONSTRAINT PK_CUSTOM_RELATIONSHIP_BUILDER_CUSTOM_RELATIONSHIP_BUILDER_SID PRIMARY KEY (CUSTOM_RELATIONSHIP_BUILDER_SID)
END
GO

-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CUSTOM_RELATIONSHIP_BUILDER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

------------------------------CUSTOM_CCP_MAP-------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'CUSTOM_CCP_MAP'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[CUSTOM_CCP_MAP] (
		CUSTOM_CCP_MAP_SID INT IDENTITY(1, 1) NOT NULL
		,CUSTOM_VIEW_DETAILS_SID INT NULL
		,RELATIONSHIP_LEVEL_VALUES_SID INT NULL
		,CCP_DETAILS_SID INT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM SYS.KEY_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'CUSTOM_CCP_MAP'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'PK_CUSTOM_CCP_MAP_CUSTOM_CCP_MAP_SID'
			AND TYPE = 'PK'
		)
BEGIN
	ALTER TABLE [DBO].[CUSTOM_CCP_MAP] ADD CONSTRAINT PK_CUSTOM_CCP_MAP_CUSTOM_CCP_MAP_SID PRIMARY KEY (CUSTOM_CCP_MAP_SID)
END
GO


-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CUSTOM_CCP_MAP' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO


IF NOT EXISTS (SELECT 1
               FROM   INFORMATION_SCHEMA.COLUMNS
               WHERE  TABLE_NAME = 'CUSTOM_CCP_MAP'
                      AND COLUMN_NAME = 'CUSTOM_HIERARCHY_NO'
					  AND TABLE_SCHEMA='DBO')
  BEGIN
      ALTER TABLE CUSTOM_CCP_MAP
        ADD CUSTOM_HIERARCHY_NO VARCHAR(50)
  END
GO

------------------------------------CFF_OUTBOUND-----------------------------------
-------------------------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CFF_OUTBOUND_MASTER'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CFF_OUTBOUND_MASTER]
        (

FINANCIAL_FORECAST_ID	INT NOT NULL,
CFF_DETAILS_SID INT NOT NULL,
FINANCIAL_FORECAST_NAME	VARCHAR(50),
TYPE	INT  ,
PROJECT_ID	VARCHAR(50) NOT NULL,
PROJECTION_NAME	VARCHAR(50),
YEAR	INT,
MONTH	INT,
CONTRACT_ID	VARCHAR(50),
CONTRACT_NO	VARCHAR(50),
CONTRACT_NAME	VARCHAR(50),
CONTRACT_TYPE	INT ,
CONTRACT_HOLDER_ID	VARCHAR(50),
CONTRACT_HOLDER_NO	VARCHAR(50),
CONTRACT_HOLDER_NAME	VARCHAR(50),
CUSTOMER_ID	VARCHAR(50),
CUSTOMER_NO	VARCHAR(50),
CUSTOMER_NAME	VARCHAR(50),
ITEM_MASTER_SID INT,
COMPANY_MASTER_SID INT,
CONTRACT_MASTER_SID INT,
GL_COMPANY_MASTER_SID INT,
ITEM_ID	VARCHAR(50),
ITEM_NO	VARCHAR(50),
ITEM_NAME	VARCHAR(50),
SALES_DOLLARS	NUMERIC(22,6),
SALES_UNITS	NUMERIC(22,6),
SALES_INCLUSION	VARCHAR(50),
DEDUCTION_ID	VARCHAR(50) NULL,
RS_MODEL_SID INT NOT NULL,
DEDUCTION_NO	VARCHAR(50),
DEDUCTION_NAME	VARCHAR(50),
DEDUCTION_CATEGORY	INT,  
DEDUCTION_TYPE	INT,
DEDUCTION_PROGRAM	INT,
DEDUCTION_INCLUSION	INT,
DEDUCTION_CATEGORY1	INT,
DEDUCTION_CATEGORY2	INT,
DEDUCTION_CATEGORY3	INT,
DEDUCTION_CATEGORY4	INT,
DEDUCTION_CATEGORY5	INT,
DEDUCTION_CATEGORY6	INT,
DEDUCTION_DOLLARS	NUMERIC(22,6),
DEDUCTION_RATE	NUMERIC(22,6),
DEDUCTION_PER_UNIT	NUMERIC(22,6),
NET_SALES_DOLLAR	NUMERIC(22,6),
COGS_AMOUNT NUMERIC(22,6),
COGS_PER_UNIT	NUMERIC(22,6),
NET_PROFIT_DOLLARS	NUMERIC(22,6),
NET_PROFIT_PER_UNIT	NUMERIC(22,6),
COMPANY_ID	VARCHAR(50),
COMPANY_NO	VARCHAR(50),
COMPANY_NAME	VARCHAR(50),
BUSINESS_UNIT_ID	VARCHAR(50),
BUSINESS_UNIT_NO	VARCHAR(50),
BUSINESS_UNIT_NAME	VARCHAR(50),
FINANCIAL_FORECAST_CREATION_DATE	DATETIME,
FINANCIAL_FORECAST_APPROVAL_DATE	DATETIME,
BATCH_ID	VARCHAR(50),
SOURCE	VARCHAR(50),
CREATED_BY	VARCHAR(50),
CREATED_DATE	DATETIME ,
MODIFIED_BY	VARCHAR(50),
MODIFIED_DATE	DATETIME,
OUTBOUND_STATUS	VARCHAR(50),
ORIGINAL_BATCH_ID	VARCHAR(50),
PERIOD_SID int NOT NULL
        )
  END

GO



-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CFF_OUTBOUND_MASTER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO

---------------------------

IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'ST_CFF_OUTBOUND_MASTER'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].ST_CFF_OUTBOUND_MASTER
        (
           CFF_DETAILS_SID INT NOT NULL,
           RS_MODEL_SID          INT NOT NULL,
           PERIOD_SID            INT NOT NULL,
           USER_ID               INT NOT NULL,
           SESSION_ID            BIGINT NOT NULL,
           CHECK_RECORD          BIT NULL,
           ETL_CHECK_RECORD      BIT NULL,
	   LAST_MODIFIED_DATE    DATETIME 
        )
  END

GO


-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'ST_CFF_OUTBOUND_MASTER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO
--------------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_CFF_DETAILS_CFF_DETAILS_SID'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_CFF_DETAILS_CFF_DETAILS_SID FOREIGN KEY(CFF_DETAILS_SID) REFERENCES CFF_DETAILS ( CFF_DETAILS_SID)
  END

GO 

IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_CFF_MASTER_FINANCIAL_FORECAST_ID'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_CFF_MASTER_FINANCIAL_FORECAST_ID FOREIGN KEY(FINANCIAL_FORECAST_ID) REFERENCES CFF_MASTER ( CFF_MASTER_SID)
  END

GO 



IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_TYPE'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_TYPE FOREIGN KEY(TYPE) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 




IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_CONTRACT_TYPE'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_CONTRACT_TYPE FOREIGN KEY(CONTRACT_TYPE) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 
-------------------------

IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY FOREIGN KEY(DEDUCTION_CATEGORY) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 


IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_TYPE'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_TYPE FOREIGN KEY(DEDUCTION_TYPE) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 



IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_PROGRAM'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_PROGRAM FOREIGN KEY(DEDUCTION_PROGRAM) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 

IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_INCLUSION'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_INCLUSION FOREIGN KEY(DEDUCTION_INCLUSION) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 

IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY1'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY1 FOREIGN KEY(DEDUCTION_CATEGORY1) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 


IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY2'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY2 FOREIGN KEY(DEDUCTION_CATEGORY2) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 


IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY3'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY3 FOREIGN KEY(DEDUCTION_CATEGORY3) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 

IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY4'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY4 FOREIGN KEY(DEDUCTION_CATEGORY4) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 


IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY5'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY5 FOREIGN KEY(DEDUCTION_CATEGORY5) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 
IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY6'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_HELPER_TABLE_DEDUCTION_CATEGORY6 FOREIGN KEY(DEDUCTION_CATEGORY6) REFERENCES HELPER_TABLE ( HELPER_TABLE_SID)
  END

GO 


-------------------------------------------------------------

IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'ST_CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_ST_CFF_OUTBOUND_MASTER_CFF_DETAILS_SID_PERIOD_SID_RS_MODEL_SID_USER_ID_SESSION_ID'
                     AND TYPE = 'PK')
 BEGIN

ALTER TABLE ST_CFF_OUTBOUND_MASTER
ADD CONSTRAINT PK_ST_CFF_OUTBOUND_MASTER_CFF_DETAILS_SID_PERIOD_SID_RS_MODEL_SID_USER_ID_SESSION_ID PRIMARY KEY (CFF_DETAILS_SID,PERIOD_SID,RS_MODEL_SID,USER_ID,SESSION_ID)

  END

GO



IF NOT EXISTS(SELECT 1
              FROM   SYS.DEFAULT_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'ST_CFF_OUTBOUND_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'DF_ST_CFF_OUTBOUND_MASTER_LAST_MODIFIED_DATE'
                     AND TYPE = 'D')
  BEGIN
      ALTER TABLE [DBO].ST_CFF_OUTBOUND_MASTER
        ADD CONSTRAINT DF_ST_CFF_OUTBOUND_MASTER_LAST_MODIFIED_DATE DEFAULT Getdate() FOR LAST_MODIFIED_DATE
  END

GO

IF NOT EXISTS(SELECT 1
              FROM   SYS.DEFAULT_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'ST_CFF_OUTBOUND_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'DF_ST_CFF_OUTBOUND_MASTER_CHECK_RECORD'
                     AND TYPE = 'D')
  BEGIN
      ALTER TABLE [DBO].ST_CFF_OUTBOUND_MASTER
        ADD CONSTRAINT DF_ST_CFF_OUTBOUND_MASTER_CHECK_RECORD DEFAULT (0) FOR CHECK_RECORD
  END

GO
-------------------------



IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_CFF_OUTBOUND_MASTER_CFF_MASTER_FINANCIAL_FORECAST_ID'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE CFF_OUTBOUND_MASTER
        ADD CONSTRAINT FK_CFF_OUTBOUND_MASTER_CFF_MASTER_FINANCIAL_FORECAST_ID FOREIGN KEY(FINANCIAL_FORECAST_ID) REFERENCES CFF_MASTER(CFF_MASTER_SID)
  END
 
GO

---------------------------------------PKS-----------------------



IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CFF_OUTBOUND_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CFF_OUTBOUND_MASTER_CFF_DETAILS_SID_PERIOD_SID_RS_MODEL_SID'
                     AND TYPE = 'PK')
 BEGIN

ALTER TABLE CFF_OUTBOUND_MASTER
ADD CONSTRAINT PK_CFF_OUTBOUND_MASTER_CFF_DETAILS_SID_PERIOD_SID_RS_MODEL_SID
PRIMARY KEY (CFF_DETAILS_SID,PERIOD_SID,RS_MODEL_SID)

  END

GO
------------------------------DEFAULT_KEYS---------------------------------

  IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.CFF_OUTBOUND_MASTER')
                      AND NAME = 'DF_CFF_OUTBOUND_MASTER_CREATED_BY')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT [DF_CFF_OUTBOUND_MASTER_CREATED_BY] DEFAULT (1) FOR CREATED_BY
  END
  
  
  IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.CFF_OUTBOUND_MASTER')
                      AND NAME = 'DF_CFF_OUTBOUND_MASTER_MODIFIED_BY')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT [DF_CFF_OUTBOUND_MASTER_MODIFIED_BY] DEFAULT (1) FOR MODIFIED_BY
  END

GO
  
  
    IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.CFF_OUTBOUND_MASTER')
                      AND NAME = 'DF_CFF_OUTBOUND_MASTER_CREATED_DATE')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT [DF_CFF_OUTBOUND_MASTER_CREATED_DATE] DEFAULT (getdate()) FOR CREATED_DATE
  END
GO
  
    
    IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.CFF_OUTBOUND_MASTER')
                      AND NAME = 'DF_CFF_OUTBOUND_MASTER_MODIFIED_DATE')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT [DF_CFF_OUTBOUND_MASTER_MODIFIED_DATE] DEFAULT (getdate()) FOR MODIFIED_DATE
  END
GO

    IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.CFF_OUTBOUND_MASTER')
                      AND NAME = 'DF_CFF_OUTBOUND_MASTER_SOURCE')
  BEGIN
      ALTER TABLE [DBO].[CFF_OUTBOUND_MASTER]
        ADD CONSTRAINT DF_CFF_OUTBOUND_MASTER_SOURCE DEFAULT (1) FOR SOURCE
  END

GO
--------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'HIST_CFF_OUTBOUND_MASTER'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[HIST_CFF_OUTBOUND_MASTER]
        (

FINANCIAL_FORECAST_ID	INT NOT NULL,
CFF_DETAILS_SID INT NOT NULL,
FINANCIAL_FORECAST_NAME	VARCHAR(50),
TYPE	INT  ,
PROJECT_ID	VARCHAR(50) NOT NULL,
PROJECTION_NAME	VARCHAR(50),
YEAR	INT,
MONTH	INT,
CONTRACT_ID	VARCHAR(50),
CONTRACT_NO	VARCHAR(50),
CONTRACT_NAME	VARCHAR(50),
CONTRACT_TYPE	INT ,
CONTRACT_HOLDER_ID	VARCHAR(50),
CONTRACT_HOLDER_NO	VARCHAR(50),
CONTRACT_HOLDER_NAME	VARCHAR(50),
CUSTOMER_ID	VARCHAR(50),
CUSTOMER_NO	VARCHAR(50),
CUSTOMER_NAME	VARCHAR(50),
ITEM_MASTER_SID INT,
COMPANY_MASTER_SID INT,
CONTRACT_MASTER_SID INT,
GL_COMPANY_MASTER_SID INT,
ITEM_ID	VARCHAR(50),
ITEM_NO	VARCHAR(50),
ITEM_NAME	VARCHAR(50),
SALES_DOLLARS	NUMERIC(22,6),
SALES_UNITS	NUMERIC(22,6),
SALES_INCLUSION	VARCHAR(50),
DEDUCTION_ID	VARCHAR(50) NULL,
RS_MODEL_SID INT NOT NULL,
DEDUCTION_NO	VARCHAR(50),
DEDUCTION_NAME	VARCHAR(50),
DEDUCTION_CATEGORY	INT,  
DEDUCTION_TYPE	INT,
DEDUCTION_PROGRAM	INT,
DEDUCTION_INCLUSION	INT,
DEDUCTION_CATEGORY1	INT,
DEDUCTION_CATEGORY2	INT,
DEDUCTION_CATEGORY3	INT,
DEDUCTION_CATEGORY4	INT,
DEDUCTION_CATEGORY5	INT,
DEDUCTION_CATEGORY6	INT,
DEDUCTION_DOLLARS	NUMERIC(22,6),
DEDUCTION_RATE	NUMERIC(22,6),
DEDUCTION_PER_UNIT	NUMERIC(22,6),
NET_SALES_DOLLAR	NUMERIC(22,6),
COGS_AMOUNT NUMERIC(22,6),
COGS_PER_UNIT	NUMERIC(22,6),
NET_PROFIT_DOLLARS	NUMERIC(22,6),
NET_PROFIT_PER_UNIT	NUMERIC(22,6),
COMPANY_ID	VARCHAR(50),
COMPANY_NO	VARCHAR(50),
COMPANY_NAME	VARCHAR(50),
BUSINESS_UNIT_ID	VARCHAR(50),
BUSINESS_UNIT_NO	VARCHAR(50),
BUSINESS_UNIT_NAME	VARCHAR(50),
FINANCIAL_FORECAST_CREATION_DATE	DATETIME,
FINANCIAL_FORECAST_APPROVAL_DATE	DATETIME,
BATCH_ID	VARCHAR(50),
SOURCE	VARCHAR(50),
CREATED_BY	VARCHAR(50),
CREATED_DATE	DATETIME ,
MODIFIED_BY	VARCHAR(50),
MODIFIED_DATE	DATETIME,
OUTBOUND_STATUS	VARCHAR(50),
ORIGINAL_BATCH_ID	VARCHAR(50),
PERIOD_SID int NOT NULL,
[ACTION_FLAG]    CHAR(1) NOT NULL,
[ACTION_DATE]    DATETIME NOT NULL
        )
  END

GO
-------------STATISTICS--------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_CFF_OUTBOUND_MASTER' --TABLE NAME
SET @SCHEMANAME1 = 'DBO' -- SCHEMA NAME

IF EXISTS (
		SELECT 'X'
		FROM SYS.STATS S
		JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
		WHERE AUTO_CREATED = 1
			AND NOT EXISTS (
				SELECT 1
				FROM SYS.INDEXES
				WHERE S.NAME = NAME
				)
			AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
			AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
		)
BEGIN
	DECLARE CUR CURSOR STATIC
	FOR
	SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME'
		,S.NAME AS 'STATSNAME'
		,SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
	FROM SYS.STATS S
	JOIN SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
	WHERE AUTO_CREATED = 1
		AND NOT EXISTS (
			SELECT 1
			FROM SYS.INDEXES
			WHERE S.NAME = NAME
			)
		AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
		AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

	OPEN CUR

	FETCH NEXT
	FROM CUR
	INTO @TABLENAME
		,@STATSNAME
		,@SCHEMANAME

	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME) + '.' + QUOTENAME(@TABLENAME) + '.' + QUOTENAME(@STATSNAME)

		--PRINT @SQL
		EXEC SP_EXECUTESQL @SQL

		FETCH NEXT
		FROM CUR
		INTO @TABLENAME
			,@STATSNAME
			,@SCHEMANAME
	END

	CLOSE CUR

	DEALLOCATE CUR
END

DECLARE @STATS NVARCHAR(MAX)

DECLARE CUR1 CURSOR STATIC
FOR
SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME) + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID)) + '.' + QUOTENAME(T.NAME) + ' (' + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
FROM SYS.TABLES T
JOIN SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
WHERE NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
		INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
		WHERE CC.TABLE_NAME = T.NAME
			AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
			AND C.NAME = COLUMN_NAME
		)
	AND NOT EXISTS (
		SELECT 1
		FROM SYS.STATS S
		WHERE S.OBJECT_ID = C.OBJECT_ID
			AND S.NAME = C.NAME
		)
	AND T.NAME = @TABLENAME1 -- TABLE NAME
	AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
ORDER BY T.NAME

OPEN CUR1

FETCH NEXT
FROM CUR1
INTO @STATS

WHILE @@FETCH_STATUS = 0
BEGIN
	--PRINT @STATS
	EXEC SP_EXECUTESQL @STATS

	FETCH NEXT
	FROM CUR1
	INTO @STATS
END

CLOSE CUR1

DEALLOCATE CUR1
GO
-----

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_CFF_OUTBOUND_MASTER_INS')
  BEGIN
      DROP TRIGGER DBO.TRG_CFF_OUTBOUND_MASTER_INS
  END

GO

CREATE TRIGGER [DBO].[TRG_CFF_OUTBOUND_MASTER_INS]
ON [DBO].[CFF_OUTBOUND_MASTER]
AFTER INSERT
AS
  BEGIN
  SET NOCOUNT ON
      INSERT INTO HIST_CFF_OUTBOUND_MASTER
      (FINANCIAL_FORECAST_ID,
CFF_DETAILS_SID ,
FINANCIAL_FORECAST_NAME	,
TYPE	  ,
PROJECT_ID	 ,
PROJECTION_NAME	,
YEAR	,
MONTH	,
CONTRACT_ID	,
CONTRACT_NO	,
CONTRACT_NAME	,
CONTRACT_TYPE	 ,
CONTRACT_HOLDER_ID	,
CONTRACT_HOLDER_NO	,
CONTRACT_HOLDER_NAME,
CUSTOMER_ID	,
CUSTOMER_NO	,
CUSTOMER_NAME	,
ITEM_MASTER_SID ,
COMPANY_MASTER_SID ,
CONTRACT_MASTER_SID ,
GL_COMPANY_MASTER_SID ,
ITEM_ID	,
ITEM_NO	,
ITEM_NAME	,
SALES_DOLLARS	,
SALES_UNITS	,
SALES_INCLUSION,
DEDUCTION_ID	 ,
DEDUCTION_NO	,
DEDUCTION_NAME	,
DEDUCTION_CATEGORY	,  
DEDUCTION_TYPE	,
DEDUCTION_PROGRAM	,
DEDUCTION_INCLUSION	,
DEDUCTION_CATEGORY1	,
DEDUCTION_CATEGORY2	,
DEDUCTION_CATEGORY3	,
DEDUCTION_CATEGORY4	,
DEDUCTION_CATEGORY5	,
DEDUCTION_CATEGORY6	,
DEDUCTION_DOLLARS	,
DEDUCTION_RATE	,
DEDUCTION_PER_UNIT	,
NET_SALES_DOLLAR	,
COGS_AMOUNT ,
COGS_PER_UNIT	,
NET_PROFIT_DOLLARS	,
NET_PROFIT_PER_UNIT	,
COMPANY_ID	,
COMPANY_NO	,
COMPANY_NAME,
BUSINESS_UNIT_ID	,
BUSINESS_UNIT_NO	,
BUSINESS_UNIT_NAME	,
FINANCIAL_FORECAST_CREATION_DATE	,
FINANCIAL_FORECAST_APPROVAL_DATE	,
BATCH_ID	,
SOURCE	,
CREATED_BY	,
CREATED_DATE	 ,
MODIFIED_BY	,
MODIFIED_DATE	,
OUTBOUND_STATUS	,
ORIGINAL_BATCH_ID	,
PERIOD_SID ,
rs_model_sid,
ACTION_FLAG ,
ACTION_DATE

       )


      SELECT FINANCIAL_FORECAST_ID	,
CFF_DETAILS_SID ,
FINANCIAL_FORECAST_NAME	,
TYPE	  ,
PROJECT_ID	 ,
PROJECTION_NAME	,
YEAR	,
MONTH	,
CONTRACT_ID	,
CONTRACT_NO	,
CONTRACT_NAME	,
CONTRACT_TYPE	 ,
CONTRACT_HOLDER_ID	,
CONTRACT_HOLDER_NO	,
CONTRACT_HOLDER_NAME,
CUSTOMER_ID	,
CUSTOMER_NO	,
CUSTOMER_NAME	,
ITEM_MASTER_SID ,
COMPANY_MASTER_SID ,
CONTRACT_MASTER_SID ,
GL_COMPANY_MASTER_SID ,
ITEM_ID	,
ITEM_NO	,
ITEM_NAME	,
SALES_DOLLARS	,
SALES_UNITS	,
SALES_INCLUSION,
DEDUCTION_ID	 ,
DEDUCTION_NO	,
DEDUCTION_NAME	,
DEDUCTION_CATEGORY	,  
DEDUCTION_TYPE	,
DEDUCTION_PROGRAM	,
DEDUCTION_INCLUSION	,
DEDUCTION_CATEGORY1	,
DEDUCTION_CATEGORY2	,
DEDUCTION_CATEGORY3	,
DEDUCTION_CATEGORY4	,
DEDUCTION_CATEGORY5	,
DEDUCTION_CATEGORY6	,
DEDUCTION_DOLLARS	,
DEDUCTION_RATE	,
DEDUCTION_PER_UNIT	,
NET_SALES_DOLLAR,
COGS_AMOUNT ,
COGS_PER_UNIT	,
NET_PROFIT_DOLLARS	,
NET_PROFIT_PER_UNIT	,
COMPANY_ID	,
COMPANY_NO	,
COMPANY_NAME,
BUSINESS_UNIT_ID	,
BUSINESS_UNIT_NO	,
BUSINESS_UNIT_NAME	,
FINANCIAL_FORECAST_CREATION_DATE	,
FINANCIAL_FORECAST_APPROVAL_DATE	,
BATCH_ID	,
SOURCE	,
CREATED_BY	,
CREATED_DATE	 ,
MODIFIED_BY	,
MODIFIED_DATE	,
OUTBOUND_STATUS	,
ORIGINAL_BATCH_ID	,
PERIOD_SID ,
rs_model_sid,
'A' ,GETDATE()
 FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_CFF_OUTBOUND_MASTER_UPD')
  BEGIN
      DROP TRIGGER DBO.TRG_CFF_OUTBOUND_MASTER_UPD
  END

GO

CREATE TRIGGER [DBO].[TRG_CFF_OUTBOUND_MASTER_UPD]
ON [DBO].[CFF_OUTBOUND_MASTER]
AFTER UPDATE
AS
  BEGIN
  SET NOCOUNT ON
   INSERT INTO HIST_CFF_OUTBOUND_MASTER
      (FINANCIAL_FORECAST_ID	,
CFF_DETAILS_SID ,
FINANCIAL_FORECAST_NAME	,
TYPE	  ,
PROJECT_ID	 ,
PROJECTION_NAME	,
YEAR	,
MONTH	,
CONTRACT_ID	,
CONTRACT_NO	,
CONTRACT_NAME	,
CONTRACT_TYPE	 ,
CONTRACT_HOLDER_ID	,
CONTRACT_HOLDER_NO	,
CONTRACT_HOLDER_NAME,
CUSTOMER_ID	,
CUSTOMER_NO	,
CUSTOMER_NAME	,
ITEM_MASTER_SID ,
COMPANY_MASTER_SID ,
CONTRACT_MASTER_SID ,
GL_COMPANY_MASTER_SID ,
ITEM_ID	,
ITEM_NO	,
ITEM_NAME	,
SALES_DOLLARS	,
SALES_UNITS	,
SALES_INCLUSION,
DEDUCTION_ID	 ,
DEDUCTION_NO	,
DEDUCTION_NAME	,
DEDUCTION_CATEGORY	,  
DEDUCTION_TYPE	,
DEDUCTION_PROGRAM	,
DEDUCTION_INCLUSION	,
DEDUCTION_CATEGORY1	,
DEDUCTION_CATEGORY2	,
DEDUCTION_CATEGORY3	,
DEDUCTION_CATEGORY4	,
DEDUCTION_CATEGORY5	,
DEDUCTION_CATEGORY6	,
DEDUCTION_DOLLARS	,
DEDUCTION_RATE	,
DEDUCTION_PER_UNIT	,
NET_SALES_DOLLAR	,
COGS_AMOUNT ,
COGS_PER_UNIT	,
NET_PROFIT_DOLLARS	,
NET_PROFIT_PER_UNIT	,
COMPANY_ID	,
COMPANY_NO	,
COMPANY_NAME,
BUSINESS_UNIT_ID	,
BUSINESS_UNIT_NO	,
BUSINESS_UNIT_NAME	,
FINANCIAL_FORECAST_CREATION_DATE	,
FINANCIAL_FORECAST_APPROVAL_DATE	,
BATCH_ID	,
SOURCE	,
CREATED_BY	,
CREATED_DATE	 ,
MODIFIED_BY	,
MODIFIED_DATE	,
OUTBOUND_STATUS	,
ORIGINAL_BATCH_ID	,
PERIOD_SID ,
rs_model_sid,
ACTION_FLAG,
ACTION_DATE

       )
  

     SELECT FINANCIAL_FORECAST_ID	,
CFF_DETAILS_SID ,
FINANCIAL_FORECAST_NAME	,
TYPE	  ,
PROJECT_ID	 ,
PROJECTION_NAME	,
YEAR	,
MONTH	,
CONTRACT_ID	,
CONTRACT_NO	,
CONTRACT_NAME	,
CONTRACT_TYPE	 ,
CONTRACT_HOLDER_ID	,
CONTRACT_HOLDER_NO	,
CONTRACT_HOLDER_NAME,
CUSTOMER_ID	,
CUSTOMER_NO	,
CUSTOMER_NAME	,
ITEM_MASTER_SID ,
COMPANY_MASTER_SID ,
CONTRACT_MASTER_SID ,
GL_COMPANY_MASTER_SID ,
ITEM_ID	,
ITEM_NO	,
ITEM_NAME	,
SALES_DOLLARS	,
SALES_UNITS	,
SALES_INCLUSION,
DEDUCTION_ID	 ,
DEDUCTION_NO	,
DEDUCTION_NAME	,
DEDUCTION_CATEGORY	,  
DEDUCTION_TYPE	,
DEDUCTION_PROGRAM	,
DEDUCTION_INCLUSION	,
DEDUCTION_CATEGORY1	,
DEDUCTION_CATEGORY2	,
DEDUCTION_CATEGORY3	,
DEDUCTION_CATEGORY4	,
DEDUCTION_CATEGORY5	,
DEDUCTION_CATEGORY6	,
DEDUCTION_DOLLARS	,
DEDUCTION_RATE	,
DEDUCTION_PER_UNIT	,
NET_SALES_DOLLAR,
COGS_AMOUNT ,
COGS_PER_UNIT	,
NET_PROFIT_DOLLARS	,
NET_PROFIT_PER_UNIT	,
COMPANY_ID	,
COMPANY_NO	,
COMPANY_NAME,
BUSINESS_UNIT_ID	,
BUSINESS_UNIT_NO	,
BUSINESS_UNIT_NAME	,
FINANCIAL_FORECAST_CREATION_DATE	,
FINANCIAL_FORECAST_APPROVAL_DATE	,
BATCH_ID	,
SOURCE	,
CREATED_BY	,
CREATED_DATE	 ,
MODIFIED_BY	,
MODIFIED_DATE	,
OUTBOUND_STATUS	,
ORIGINAL_BATCH_ID	,
PERIOD_SID ,
rs_model_sid,
'C' ,
GETDATE()
 FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_CFF_OUTBOUND_MASTER_DEL')
  BEGIN
      DROP TRIGGER DBO.TRG_CFF_OUTBOUND_MASTER_DEL
  END

GO

CREATE TRIGGER [DBO].[TRG_CFF_OUTBOUND_MASTER_DEL]
ON [DBO].[CFF_OUTBOUND_MASTER]
AFTER DELETE
AS
  BEGIN
  SET NOCOUNT ON
     INSERT INTO HIST_CFF_OUTBOUND_MASTER
      (FINANCIAL_FORECAST_ID	,
CFF_DETAILS_SID ,
FINANCIAL_FORECAST_NAME	,
TYPE	  ,
PROJECT_ID	 ,
PROJECTION_NAME	,
YEAR	,
MONTH	,
CONTRACT_ID	,
CONTRACT_NO	,
CONTRACT_NAME	,
CONTRACT_TYPE	 ,
CONTRACT_HOLDER_ID	,
CONTRACT_HOLDER_NO	,
CONTRACT_HOLDER_NAME,
CUSTOMER_ID	,
CUSTOMER_NO	,
CUSTOMER_NAME	,
ITEM_MASTER_SID ,
COMPANY_MASTER_SID ,
CONTRACT_MASTER_SID ,
GL_COMPANY_MASTER_SID ,
ITEM_ID	,
ITEM_NO	,
ITEM_NAME	,
SALES_DOLLARS	,
SALES_UNITS	,
SALES_INCLUSION,
DEDUCTION_ID	 ,
DEDUCTION_NO	,
DEDUCTION_NAME	,
DEDUCTION_CATEGORY	,  
DEDUCTION_TYPE	,
DEDUCTION_PROGRAM	,
DEDUCTION_INCLUSION	,
DEDUCTION_CATEGORY1	,
DEDUCTION_CATEGORY2	,
DEDUCTION_CATEGORY3	,
DEDUCTION_CATEGORY4	,
DEDUCTION_CATEGORY5	,
DEDUCTION_CATEGORY6	,
DEDUCTION_DOLLARS	,
DEDUCTION_RATE	,
DEDUCTION_PER_UNIT	,
NET_SALES_DOLLAR	,
COGS_AMOUNT ,
COGS_PER_UNIT	,
NET_PROFIT_DOLLARS	,
NET_PROFIT_PER_UNIT	,
COMPANY_ID	,
COMPANY_NO	,
COMPANY_NAME,
BUSINESS_UNIT_ID	,
BUSINESS_UNIT_NO	,
BUSINESS_UNIT_NAME	,
FINANCIAL_FORECAST_CREATION_DATE	,
FINANCIAL_FORECAST_APPROVAL_DATE	,
BATCH_ID	,
SOURCE	,
CREATED_BY	,
CREATED_DATE	 ,
MODIFIED_BY	,
MODIFIED_DATE	,
OUTBOUND_STATUS	,
ORIGINAL_BATCH_ID	,
PERIOD_SID ,
rs_model_sid,
ACTION_FLAG ,
ACTION_DATE

       )
  

     SELECT FINANCIAL_FORECAST_ID	,
CFF_DETAILS_SID ,
FINANCIAL_FORECAST_NAME	,
TYPE	  ,
PROJECT_ID	 ,
PROJECTION_NAME	,
YEAR	,
MONTH	,
CONTRACT_ID	,
CONTRACT_NO	,
CONTRACT_NAME	,
CONTRACT_TYPE	 ,
CONTRACT_HOLDER_ID	,
CONTRACT_HOLDER_NO	,
CONTRACT_HOLDER_NAME,
CUSTOMER_ID	,
CUSTOMER_NO	,
CUSTOMER_NAME	,
ITEM_MASTER_SID ,
COMPANY_MASTER_SID ,
CONTRACT_MASTER_SID ,
GL_COMPANY_MASTER_SID ,
ITEM_ID	,
ITEM_NO	,
ITEM_NAME	,
SALES_DOLLARS	,
SALES_UNITS	,
SALES_INCLUSION,
DEDUCTION_ID	 ,
DEDUCTION_NO	,
DEDUCTION_NAME	,
DEDUCTION_CATEGORY	,  
DEDUCTION_TYPE	,
DEDUCTION_PROGRAM	,
DEDUCTION_INCLUSION	,
DEDUCTION_CATEGORY1	,
DEDUCTION_CATEGORY2	,
DEDUCTION_CATEGORY3	,
DEDUCTION_CATEGORY4	,
DEDUCTION_CATEGORY5	,
DEDUCTION_CATEGORY6	,
DEDUCTION_DOLLARS	,
DEDUCTION_RATE	,
DEDUCTION_PER_UNIT	,
NET_SALES_DOLLAR,
COGS_AMOUNT ,
COGS_PER_UNIT	,
NET_PROFIT_DOLLARS	,
NET_PROFIT_PER_UNIT	,
COMPANY_ID	,
COMPANY_NO	,
COMPANY_NAME,
BUSINESS_UNIT_ID	,
BUSINESS_UNIT_NO	,
BUSINESS_UNIT_NAME	,
FINANCIAL_FORECAST_CREATION_DATE	,
FINANCIAL_FORECAST_APPROVAL_DATE	,
BATCH_ID	,
SOURCE	,
CREATED_BY	,
CREATED_DATE	 ,
MODIFIED_BY	,
MODIFIED_DATE	,
OUTBOUND_STATUS	,
ORIGINAL_BATCH_ID	,
PERIOD_SID ,
rs_model_sid,
'D' ,
GETDATE()
 FROM   DELETED
  END

GO



