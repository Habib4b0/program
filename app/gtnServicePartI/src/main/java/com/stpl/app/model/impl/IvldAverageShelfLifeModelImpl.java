package com.stpl.app.model.impl;

import com.stpl.app.model.IvldAverageShelfLife;
import com.stpl.app.model.IvldAverageShelfLifeModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldAverageShelfLife service. Represents a row in the &quot;IVLD_AVERAGE_SHELF_LIFE&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.IvldAverageShelfLifeModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldAverageShelfLifeImpl}.
 * </p>
 *
 * @author
 * @see IvldAverageShelfLifeImpl
 * @see com.stpl.app.model.IvldAverageShelfLife
 * @see com.stpl.app.model.IvldAverageShelfLifeModel
 * @generated
 */
public class IvldAverageShelfLifeModelImpl extends BaseModelImpl<IvldAverageShelfLife>
    implements IvldAverageShelfLifeModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a ivld average shelf life model instance should use the {@link com.stpl.app.model.IvldAverageShelfLife} interface instead.
     */
    public static final String TABLE_NAME = "IVLD_AVERAGE_SHELF_LIFE";
    public static final Object[][] TABLE_COLUMNS = {
            { "REASON_FOR_FAILURE", Types.VARCHAR },
            { "IVLD_AVERAGE_SHELF_LIFE_SID", Types.INTEGER },
            { "ITEM_ID", Types.VARCHAR },
            { "AVG_SHELF_LIFE", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "SOURCE", Types.VARCHAR },
            { "ITEM_ID_TYPE", Types.VARCHAR },
            { "BATCH_ID", Types.VARCHAR },
            { "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
            { "AVERAGE_SHELF_LIFE_INTFID", Types.VARCHAR },
            { "ERROR_FIELD", Types.VARCHAR },
            { "ERROR_CODE", Types.VARCHAR },
            { "INTF_INSERTED_DATE", Types.TIMESTAMP },
            { "MODIFIED_BY", Types.VARCHAR },
            { "REPROCESSED_FLAG", Types.VARCHAR },
            { "CHECK_RECORD", Types.BOOLEAN }
        };
    public static final String TABLE_SQL_CREATE = "create table IVLD_AVERAGE_SHELF_LIFE (REASON_FOR_FAILURE VARCHAR(75) null,IVLD_AVERAGE_SHELF_LIFE_SID INTEGER not null primary key IDENTITY,ITEM_ID VARCHAR(75) null,AVG_SHELF_LIFE VARCHAR(75) null,MODIFIED_DATE DATE null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,SOURCE VARCHAR(75) null,ITEM_ID_TYPE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,AVERAGE_SHELF_LIFE_INTFID VARCHAR(75) null,ERROR_FIELD VARCHAR(75) null,ERROR_CODE VARCHAR(75) null,INTF_INSERTED_DATE DATE null,MODIFIED_BY VARCHAR(75) null,REPROCESSED_FLAG VARCHAR(75) null,CHECK_RECORD BOOLEAN)";
    public static final String TABLE_SQL_DROP = "drop table IVLD_AVERAGE_SHELF_LIFE";
    public static final String ORDER_BY_JPQL = " ORDER BY ivldAverageShelfLife.ivldAverageShelfLifeSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY IVLD_AVERAGE_SHELF_LIFE.IVLD_AVERAGE_SHELF_LIFE_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.IvldAverageShelfLife"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.IvldAverageShelfLife"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.IvldAverageShelfLife"));
    private static ClassLoader _classLoader = IvldAverageShelfLife.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            IvldAverageShelfLife.class
        };
    private String _reasonForFailure;
    private int _ivldAverageShelfLifeSid;
    private String _itemId;
    private String _avgShelfLife;
    private Date _modifiedDate;
    private String _createdBy;
    private Date _createdDate;
    private String _source;
    private String _itemIdType;
    private String _batchId;
    private String _addChgDelIndicator;
    private String _averageShelfLifeIntfid;
    private String _errorField;
    private String _errorCode;
    private Date _intfInsertedDate;
    private String _modifiedBy;
    private String _reprocessedFlag;
    private boolean _checkRecord;
    private IvldAverageShelfLife _escapedModel;

    public IvldAverageShelfLifeModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _ivldAverageShelfLifeSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setIvldAverageShelfLifeSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _ivldAverageShelfLifeSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return IvldAverageShelfLife.class;
    }

    @Override
    public String getModelClassName() {
        return IvldAverageShelfLife.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("reasonForFailure", getReasonForFailure());
        attributes.put("ivldAverageShelfLifeSid", getIvldAverageShelfLifeSid());
        attributes.put("itemId", getItemId());
        attributes.put("avgShelfLife", getAvgShelfLife());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("source", getSource());
        attributes.put("itemIdType", getItemIdType());
        attributes.put("batchId", getBatchId());
        attributes.put("addChgDelIndicator", getAddChgDelIndicator());
        attributes.put("averageShelfLifeIntfid", getAverageShelfLifeIntfid());
        attributes.put("errorField", getErrorField());
        attributes.put("errorCode", getErrorCode());
        attributes.put("intfInsertedDate", getIntfInsertedDate());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("reprocessedFlag", getReprocessedFlag());
        attributes.put("checkRecord", getCheckRecord());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String reasonForFailure = (String) attributes.get("reasonForFailure");

        if (reasonForFailure != null) {
            setReasonForFailure(reasonForFailure);
        }

        Integer ivldAverageShelfLifeSid = (Integer) attributes.get(
                "ivldAverageShelfLifeSid");

        if (ivldAverageShelfLifeSid != null) {
            setIvldAverageShelfLifeSid(ivldAverageShelfLifeSid);
        }

        String itemId = (String) attributes.get("itemId");

        if (itemId != null) {
            setItemId(itemId);
        }

        String avgShelfLife = (String) attributes.get("avgShelfLife");

        if (avgShelfLife != null) {
            setAvgShelfLife(avgShelfLife);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String createdBy = (String) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        String itemIdType = (String) attributes.get("itemIdType");

        if (itemIdType != null) {
            setItemIdType(itemIdType);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        String addChgDelIndicator = (String) attributes.get(
                "addChgDelIndicator");

        if (addChgDelIndicator != null) {
            setAddChgDelIndicator(addChgDelIndicator);
        }

        String averageShelfLifeIntfid = (String) attributes.get(
                "averageShelfLifeIntfid");

        if (averageShelfLifeIntfid != null) {
            setAverageShelfLifeIntfid(averageShelfLifeIntfid);
        }

        String errorField = (String) attributes.get("errorField");

        if (errorField != null) {
            setErrorField(errorField);
        }

        String errorCode = (String) attributes.get("errorCode");

        if (errorCode != null) {
            setErrorCode(errorCode);
        }

        Date intfInsertedDate = (Date) attributes.get("intfInsertedDate");

        if (intfInsertedDate != null) {
            setIntfInsertedDate(intfInsertedDate);
        }

        String modifiedBy = (String) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String reprocessedFlag = (String) attributes.get("reprocessedFlag");

        if (reprocessedFlag != null) {
            setReprocessedFlag(reprocessedFlag);
        }

        Boolean checkRecord = (Boolean) attributes.get("checkRecord");

        if (checkRecord != null) {
            setCheckRecord(checkRecord);
        }
    }

    @Override
    public String getReasonForFailure() {
        if (_reasonForFailure == null) {
            return StringPool.BLANK;
        } else {
            return _reasonForFailure;
        }
    }

    @Override
    public void setReasonForFailure(String reasonForFailure) {
        _reasonForFailure = reasonForFailure;
    }

    @Override
    public int getIvldAverageShelfLifeSid() {
        return _ivldAverageShelfLifeSid;
    }

    @Override
    public void setIvldAverageShelfLifeSid(int ivldAverageShelfLifeSid) {
        _ivldAverageShelfLifeSid = ivldAverageShelfLifeSid;
    }

    @Override
    public String getItemId() {
        if (_itemId == null) {
            return StringPool.BLANK;
        } else {
            return _itemId;
        }
    }

    @Override
    public void setItemId(String itemId) {
        _itemId = itemId;
    }

    @Override
    public String getAvgShelfLife() {
        if (_avgShelfLife == null) {
            return StringPool.BLANK;
        } else {
            return _avgShelfLife;
        }
    }

    @Override
    public void setAvgShelfLife(String avgShelfLife) {
        _avgShelfLife = avgShelfLife;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getCreatedBy() {
        if (_createdBy == null) {
            return StringPool.BLANK;
        } else {
            return _createdBy;
        }
    }

    @Override
    public void setCreatedBy(String createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public String getItemIdType() {
        if (_itemIdType == null) {
            return StringPool.BLANK;
        } else {
            return _itemIdType;
        }
    }

    @Override
    public void setItemIdType(String itemIdType) {
        _itemIdType = itemIdType;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public String getAddChgDelIndicator() {
        if (_addChgDelIndicator == null) {
            return StringPool.BLANK;
        } else {
            return _addChgDelIndicator;
        }
    }

    @Override
    public void setAddChgDelIndicator(String addChgDelIndicator) {
        _addChgDelIndicator = addChgDelIndicator;
    }

    @Override
    public String getAverageShelfLifeIntfid() {
        if (_averageShelfLifeIntfid == null) {
            return StringPool.BLANK;
        } else {
            return _averageShelfLifeIntfid;
        }
    }

    @Override
    public void setAverageShelfLifeIntfid(String averageShelfLifeIntfid) {
        _averageShelfLifeIntfid = averageShelfLifeIntfid;
    }

    @Override
    public String getErrorField() {
        if (_errorField == null) {
            return StringPool.BLANK;
        } else {
            return _errorField;
        }
    }

    @Override
    public void setErrorField(String errorField) {
        _errorField = errorField;
    }

    @Override
    public String getErrorCode() {
        if (_errorCode == null) {
            return StringPool.BLANK;
        } else {
            return _errorCode;
        }
    }

    @Override
    public void setErrorCode(String errorCode) {
        _errorCode = errorCode;
    }

    @Override
    public Date getIntfInsertedDate() {
        return _intfInsertedDate;
    }

    @Override
    public void setIntfInsertedDate(Date intfInsertedDate) {
        _intfInsertedDate = intfInsertedDate;
    }

    @Override
    public String getModifiedBy() {
        if (_modifiedBy == null) {
            return StringPool.BLANK;
        } else {
            return _modifiedBy;
        }
    }

    @Override
    public void setModifiedBy(String modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getReprocessedFlag() {
        if (_reprocessedFlag == null) {
            return StringPool.BLANK;
        } else {
            return _reprocessedFlag;
        }
    }

    @Override
    public void setReprocessedFlag(String reprocessedFlag) {
        _reprocessedFlag = reprocessedFlag;
    }

    @Override
    public boolean getCheckRecord() {
        return _checkRecord;
    }

    @Override
    public boolean isCheckRecord() {
        return _checkRecord;
    }

    @Override
    public void setCheckRecord(boolean checkRecord) {
        _checkRecord = checkRecord;
    }

    @Override
    public IvldAverageShelfLife toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (IvldAverageShelfLife) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        IvldAverageShelfLifeImpl ivldAverageShelfLifeImpl = new IvldAverageShelfLifeImpl();

        ivldAverageShelfLifeImpl.setReasonForFailure(getReasonForFailure());
        ivldAverageShelfLifeImpl.setIvldAverageShelfLifeSid(getIvldAverageShelfLifeSid());
        ivldAverageShelfLifeImpl.setItemId(getItemId());
        ivldAverageShelfLifeImpl.setAvgShelfLife(getAvgShelfLife());
        ivldAverageShelfLifeImpl.setModifiedDate(getModifiedDate());
        ivldAverageShelfLifeImpl.setCreatedBy(getCreatedBy());
        ivldAverageShelfLifeImpl.setCreatedDate(getCreatedDate());
        ivldAverageShelfLifeImpl.setSource(getSource());
        ivldAverageShelfLifeImpl.setItemIdType(getItemIdType());
        ivldAverageShelfLifeImpl.setBatchId(getBatchId());
        ivldAverageShelfLifeImpl.setAddChgDelIndicator(getAddChgDelIndicator());
        ivldAverageShelfLifeImpl.setAverageShelfLifeIntfid(getAverageShelfLifeIntfid());
        ivldAverageShelfLifeImpl.setErrorField(getErrorField());
        ivldAverageShelfLifeImpl.setErrorCode(getErrorCode());
        ivldAverageShelfLifeImpl.setIntfInsertedDate(getIntfInsertedDate());
        ivldAverageShelfLifeImpl.setModifiedBy(getModifiedBy());
        ivldAverageShelfLifeImpl.setReprocessedFlag(getReprocessedFlag());
        ivldAverageShelfLifeImpl.setCheckRecord(getCheckRecord());

        ivldAverageShelfLifeImpl.resetOriginalValues();

        return ivldAverageShelfLifeImpl;
    }

    @Override
    public int compareTo(IvldAverageShelfLife ivldAverageShelfLife) {
        int primaryKey = ivldAverageShelfLife.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof IvldAverageShelfLife)) {
            return false;
        }

        IvldAverageShelfLife ivldAverageShelfLife = (IvldAverageShelfLife) obj;

        int primaryKey = ivldAverageShelfLife.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<IvldAverageShelfLife> toCacheModel() {
        IvldAverageShelfLifeCacheModel ivldAverageShelfLifeCacheModel = new IvldAverageShelfLifeCacheModel();

        ivldAverageShelfLifeCacheModel.reasonForFailure = getReasonForFailure();

        String reasonForFailure = ivldAverageShelfLifeCacheModel.reasonForFailure;

        if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
            ivldAverageShelfLifeCacheModel.reasonForFailure = null;
        }

        ivldAverageShelfLifeCacheModel.ivldAverageShelfLifeSid = getIvldAverageShelfLifeSid();

        ivldAverageShelfLifeCacheModel.itemId = getItemId();

        String itemId = ivldAverageShelfLifeCacheModel.itemId;

        if ((itemId != null) && (itemId.length() == 0)) {
            ivldAverageShelfLifeCacheModel.itemId = null;
        }

        ivldAverageShelfLifeCacheModel.avgShelfLife = getAvgShelfLife();

        String avgShelfLife = ivldAverageShelfLifeCacheModel.avgShelfLife;

        if ((avgShelfLife != null) && (avgShelfLife.length() == 0)) {
            ivldAverageShelfLifeCacheModel.avgShelfLife = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            ivldAverageShelfLifeCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            ivldAverageShelfLifeCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        ivldAverageShelfLifeCacheModel.createdBy = getCreatedBy();

        String createdBy = ivldAverageShelfLifeCacheModel.createdBy;

        if ((createdBy != null) && (createdBy.length() == 0)) {
            ivldAverageShelfLifeCacheModel.createdBy = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            ivldAverageShelfLifeCacheModel.createdDate = createdDate.getTime();
        } else {
            ivldAverageShelfLifeCacheModel.createdDate = Long.MIN_VALUE;
        }

        ivldAverageShelfLifeCacheModel.source = getSource();

        String source = ivldAverageShelfLifeCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            ivldAverageShelfLifeCacheModel.source = null;
        }

        ivldAverageShelfLifeCacheModel.itemIdType = getItemIdType();

        String itemIdType = ivldAverageShelfLifeCacheModel.itemIdType;

        if ((itemIdType != null) && (itemIdType.length() == 0)) {
            ivldAverageShelfLifeCacheModel.itemIdType = null;
        }

        ivldAverageShelfLifeCacheModel.batchId = getBatchId();

        String batchId = ivldAverageShelfLifeCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            ivldAverageShelfLifeCacheModel.batchId = null;
        }

        ivldAverageShelfLifeCacheModel.addChgDelIndicator = getAddChgDelIndicator();

        String addChgDelIndicator = ivldAverageShelfLifeCacheModel.addChgDelIndicator;

        if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
            ivldAverageShelfLifeCacheModel.addChgDelIndicator = null;
        }

        ivldAverageShelfLifeCacheModel.averageShelfLifeIntfid = getAverageShelfLifeIntfid();

        String averageShelfLifeIntfid = ivldAverageShelfLifeCacheModel.averageShelfLifeIntfid;

        if ((averageShelfLifeIntfid != null) &&
                (averageShelfLifeIntfid.length() == 0)) {
            ivldAverageShelfLifeCacheModel.averageShelfLifeIntfid = null;
        }

        ivldAverageShelfLifeCacheModel.errorField = getErrorField();

        String errorField = ivldAverageShelfLifeCacheModel.errorField;

        if ((errorField != null) && (errorField.length() == 0)) {
            ivldAverageShelfLifeCacheModel.errorField = null;
        }

        ivldAverageShelfLifeCacheModel.errorCode = getErrorCode();

        String errorCode = ivldAverageShelfLifeCacheModel.errorCode;

        if ((errorCode != null) && (errorCode.length() == 0)) {
            ivldAverageShelfLifeCacheModel.errorCode = null;
        }

        Date intfInsertedDate = getIntfInsertedDate();

        if (intfInsertedDate != null) {
            ivldAverageShelfLifeCacheModel.intfInsertedDate = intfInsertedDate.getTime();
        } else {
            ivldAverageShelfLifeCacheModel.intfInsertedDate = Long.MIN_VALUE;
        }

        ivldAverageShelfLifeCacheModel.modifiedBy = getModifiedBy();

        String modifiedBy = ivldAverageShelfLifeCacheModel.modifiedBy;

        if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
            ivldAverageShelfLifeCacheModel.modifiedBy = null;
        }

        ivldAverageShelfLifeCacheModel.reprocessedFlag = getReprocessedFlag();

        String reprocessedFlag = ivldAverageShelfLifeCacheModel.reprocessedFlag;

        if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
            ivldAverageShelfLifeCacheModel.reprocessedFlag = null;
        }

        ivldAverageShelfLifeCacheModel.checkRecord = getCheckRecord();

        return ivldAverageShelfLifeCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(37);

        sb.append("{reasonForFailure=");
        sb.append(getReasonForFailure());
        sb.append(", ivldAverageShelfLifeSid=");
        sb.append(getIvldAverageShelfLifeSid());
        sb.append(", itemId=");
        sb.append(getItemId());
        sb.append(", avgShelfLife=");
        sb.append(getAvgShelfLife());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", itemIdType=");
        sb.append(getItemIdType());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", addChgDelIndicator=");
        sb.append(getAddChgDelIndicator());
        sb.append(", averageShelfLifeIntfid=");
        sb.append(getAverageShelfLifeIntfid());
        sb.append(", errorField=");
        sb.append(getErrorField());
        sb.append(", errorCode=");
        sb.append(getErrorCode());
        sb.append(", intfInsertedDate=");
        sb.append(getIntfInsertedDate());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", reprocessedFlag=");
        sb.append(getReprocessedFlag());
        sb.append(", checkRecord=");
        sb.append(getCheckRecord());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(58);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.IvldAverageShelfLife");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
        sb.append(getReasonForFailure());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ivldAverageShelfLifeSid</column-name><column-value><![CDATA[");
        sb.append(getIvldAverageShelfLifeSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemId</column-name><column-value><![CDATA[");
        sb.append(getItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>avgShelfLife</column-name><column-value><![CDATA[");
        sb.append(getAvgShelfLife());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemIdType</column-name><column-value><![CDATA[");
        sb.append(getItemIdType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
        sb.append(getAddChgDelIndicator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>averageShelfLifeIntfid</column-name><column-value><![CDATA[");
        sb.append(getAverageShelfLifeIntfid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>errorField</column-name><column-value><![CDATA[");
        sb.append(getErrorField());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>errorCode</column-name><column-value><![CDATA[");
        sb.append(getErrorCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
        sb.append(getIntfInsertedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
        sb.append(getReprocessedFlag());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>checkRecord</column-name><column-value><![CDATA[");
        sb.append(getCheckRecord());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
