IF EXISTS (SELECT 'X' 
           FROM   INFORMATION_SCHEMA.ROUTINES 
           WHERE  ROUTINE_NAME = 'PRC_CFF_RESULTS' 
                  AND ROUTINE_SCHEMA = 'DBO') 
  BEGIN 
      DROP PROCEDURE [DBO].[PRC_CFF_RESULTS] 
  END 

GO 


CREATE PROCEDURE [dbo].[PRC_CFF_RESULTS] (@CFF_MASTER_SID VARCHAR(500), 
                                          @PROJ_FREQUENCY VARCHAR(20), 
                                          @SCREEN_NAME    VARCHAR(50), 
                                          @VIEW           VARCHAR(50) = NULL, 
                                          @START_DATE     DATETIME = NULL, 
                                          @CCP            VARCHAR(MAX) = NULL) 
AS
/**********************************************************************************************************
** FILE NAME    :  PRC_CFF_RESULTS.SQL  
** PROCEDURE NAME  :  PRC_CFF_RESULTS  
** DESCRIPTION    :    AGGREGATION OF PROJECTIONS ATTACHED TO THE PARTICUALR CFF SHOWING AS OUTPUT FOR BOTH CFF_RESULTS SCREEN AND CFF_VARICNACE SCREEN
** INPUT PARAMETERS  :  @CFF_MASTER_SID  - PASSING INPUT AS CFF_MASTER_SID  
            @PROJ_FREQUENCY - BASED ON FREQUENCY IT WILL DISPLAY THE DATA  MONTHLY,QUARTERLY SEMI ANNUALY AND ANNULALY
                        @SCREEN_NAME    - BASED ON SCREEN NAME IF WE PASS ASSUMPTIONS IT WILL DISPLAY AGGREGATION OF ACTUALS, PROJECTIONS ATTACHED TO THE FIRST CFF
                             SCREEN_NAME<> ASSUMPTIONS IT WILL DISPLAY REST OF CFFS  DISPLAY AGGREGATION OF PROJECTIONS ATTACHED TO EACH CFF AS PIVOT VIEW
                        @VIEW           - IF WE PASS VIEW AS PIVOT MEANS RESULT WILL BE ORDER BY YEAR AND PERIOD OTHER THAN PIVOT IT WILL ORDER BY YEAR AND PERIOD
                        @START_DATE     - FROM THE @START_DATE ONLY IT WILL GENERATE OUTPUT  
                        @CCP            - FOR THE SELECTED CCPS ONLY VALUES ACTUALS AND PROJECTIONS  WILL AGGREGATE

** OUTPUT PARAMETERS:  NA  
** AUTHOR NAME    :  @PRADEEP THANGA, @LEELA VENKATESH  
** CREATION DATE  :  28/03/2016 -   
** CALLED BY    :   FROM APPLICATION SIDE THEY CLICK ON PROJECTION  RESULTS SCREEN THE INSIDE THAT PROECURE WILL CALL DISPALY INFORMATION 
**********************************************************************************************************
** CHANGE HISTORY  
**********************************************************************************************************
** VER   DATE      TICKET NO              AUTHOR              DESCRIPTION   
** ---   --------  ---------             -------------        -----------------------------  
** 1    09/23/2016 GAL-3722/GALUAT-377   @LEELA VENKATESH    SALES INCLUSION & DEDUCTION INCLUSION LOGIC ID SALESINCLUSTION IS 0 THEN WE NEED TO DISPLAY AS NULL ELSE WE NEED DISPLAY VALUES
** 2    11/02/2016 GAL-7472/GALUAT-543   @LEELA VENKATESH    REMOVING RETURNS PART AND WHAT EVER FLAVOUR CHOOSEN BY USER THAT SHOULD APPEAR IN THE SCREEN
*********************************************************************************************************/
-------------DECLARING VARIABLES--------------------------  
DECLARE @SP INT
	,@SP_PROJ_SID INT
	,@TEMP_PROJ_SID VARCHAR(500)
DECLARE @ITEMID [DBO].[UDT_ITEM]
DECLARE @PIVOT_START_PERIOD_SID INT
DECLARE @FIRST_PROJ_SID INT

-----------------PASSING MULTIPLE CFF AS INPUT CONVERTING INTO COMMA SEPERATED VALUES --------------------------  
IF OBJECT_ID('TEMPDB..#CFF_PROJECTION_MASTER') IS NOT NULL
	TRUNCATE TABLE #CFF_PROJECTION_MASTER
ELSE
	CREATE TABLE #CFF_PROJECTION_MASTER (
		ID INT IDENTITY(1, 1)
		,CFF_PROJECTION_MASTER_SID INT
		)

SET @TEMP_PROJ_SID = REPLACE(@CFF_MASTER_SID + ',', ',,', ',')

WHILE PATINDEX('%,%', @TEMP_PROJ_SID) <> 0
BEGIN
	SELECT @SP = PATINDEX('%,%', @TEMP_PROJ_SID)

	SELECT @SP_PROJ_SID = LEFT(@TEMP_PROJ_SID, @SP - 1)

	SELECT @TEMP_PROJ_SID = STUFF(@TEMP_PROJ_SID, 1, @SP, '')

	INSERT INTO #CFF_PROJECTION_MASTER (CFF_PROJECTION_MASTER_SID)
	SELECT @SP_PROJ_SID
END

-------------------------------GALUAT_29 CHANGES----------------------------  
------PULLING ACTUAL START_DATE , ACTUAL_END_DATE,ROJ_START_PERIOD_DATE,PROJ_END_PERIOD_DATE BASED ON DESCRIPTION FROM HELPER_TABLE -----------  
SELECT @PIVOT_START_PERIOD_SID = PERIOD_SID
FROM PERIOD
WHERE PERIOD_DATE = @START_DATE

DECLARE @ACTUAL_START_DATE DATETIME = CAST(YEAR(GETDATE()) - 3 AS VARCHAR(4)) + '-01-01'
	,@ACTUAL_END_DATE DATETIME = DATEADD(MM, - 3, DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0))
	,@PROJ_START_PERIOD_DATE DATETIME
	,@PROJ_END_PERIOD_DATE DATETIME

SELECT TOP 1 @PROJ_START_PERIOD_DATE = DATEADD(DD, 1, EOMONTH(FROM_DATE, - 1))
	,@PROJ_END_PERIOD_DATE = DATEADD(DD, 1, EOMONTH(TO_DATE, - 1))
FROM FORECAST_CONFIG FA
LEFT JOIN HELPER_TABLE HT ON HT.HELPER_TABLE_SID = FA.BUSINESS_PROCESS_TYPE
WHERE [DESCRIPTION] = 'CONSOLIDATED FINANCIAL FORECAST'
ORDER BY VERSION_NO DESC

DECLARE @ACT_START_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @ACTUAL_START_DATE
		)
DECLARE @ACT_END_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @ACTUAL_END_DATE
		)
DECLARE @PROJ_START_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @PROJ_START_PERIOD_DATE
		)
DECLARE @PROJ_END_PERIOD_SID INT = (
		SELECT PERIOD_SID
		FROM PERIOD
		WHERE PERIOD_DATE = @PROJ_END_PERIOD_DATE
		)

SELECT @FIRST_PROJ_SID = PM.CFF_PROJECTION_MASTER_SID
FROM #CFF_PROJECTION_MASTER PM
WHERE ID = 1

----      SELECT @ACT_START_PERIOD_SID,@ACT_END_PERIOD_SID,  
----      @PROJ_START_PERIOD_SID,@PROJ_END_PERIOD_SID  
---------------------------BASED ON FREQUENCY CALUCLATIONS SHOLUD HAPPEN---------------------------  
IF OBJECT_ID('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
	DROP TABLE #PERIOD;

CREATE TABLE #PERIOD (
	PERIOD_SID INT
	,PERIOD_DATE DATETIME
	,MONTH INT
	,QUARTER INT
	,SEMI_ANNUAL INT
	,YEAR INT
	,PERIOD INT
	,PRIMARY KEY (PERIOD_SID)
	)

INSERT INTO #PERIOD (
	PERIOD_SID
	,PERIOD_DATE
	,MONTH
	,QUARTER
	,SEMI_ANNUAL
	,YEAR
	,PERIOD
	)
SELECT PERIOD_SID
	,PERIOD_DATE
	,MONTH
	,QUARTER
	,SEMI_ANNUAL
	,YEAR
	,CASE 
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'M'
			THEN MONTH
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'Q'
			THEN QUARTER
		WHEN LEFT(@PROJ_FREQUENCY, 1) = 'S'
			THEN SEMI_ANNUAL
		ELSE YEAR
		END AS PERIOD
FROM PERIOD

----------------------------------PULLING CCP S FOR PARICULAR CFF-------------  
IF OBJECT_ID('TEMPDB..#TEMP_CCP') IS NOT NULL
	DROP TABLE #TEMP_CCP

CREATE TABLE #TEMP_CCP (
	COMPANY_MASTER_SID INT
	,CONTRACT_MASTER_SID INT
	,ITEM_MASTER_SID INT
	,PROJECTION_DETAILS_SID INT
	,CFF_MASTER_SID INT
	)

INSERT INTO #TEMP_CCP (
	COMPANY_MASTER_SID
	,CONTRACT_MASTER_SID
	,ITEM_MASTER_SID
	,PROJECTION_DETAILS_SID
	,CFF_MASTER_SID
	)
SELECT CCP.COMPANY_MASTER_SID
	,CCP.CONTRACT_MASTER_SID
	,CCP.ITEM_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,CD.CFF_MASTER_SID
FROM CCP_DETAILS CCP
INNER JOIN PROJECTION_DETAILS PD ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
JOIN CFF_DETAILS CD ON CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	AND CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
WHERE CD.CFF_MASTER_SID = @FIRST_PROJ_SID

INSERT INTO @ITEMID
SELECT IM.ITEM_MASTER_SID
FROM ITEM_MASTER IM
WHERE EXISTS (
		SELECT 1
		FROM #TEMP_CCP A
		WHERE CFF_MASTER_SID = @FIRST_PROJ_SID
			AND IM.ITEM_MASTER_SID = A.ITEM_MASTER_SID
		)

-------------------------------------------------------------GAL-7472/GALUAT-543 CHANGES RETURNS REMOVED PART-------------------------------------------------------------------------------  
--IF OBJECT_ID('TEMPDB..#TEMP_CCPD') IS NOT NULL  
--  DROP TABLE #TEMP_CCPD  
--CREATE TABLE #TEMP_CCPD  
--  (  
--     COMPANY_MASTER_SID     INT,  
--     CONTRACT_MASTER_SID    INT,  
--     ITEM_MASTER_SID        INT,  
--     PROJECTION_DETAILS_SID INT,  
--     CFF_MASTER_SID         INT  
--  )  
--INSERT INTO #TEMP_CCPD  
--            (COMPANY_MASTER_SID,  
--             CONTRACT_MASTER_SID,  
--             ITEM_MASTER_SID,  
--             PROJECTION_DETAILS_SID,  
--             CFF_MASTER_SID)  
--SELECT DISTINCT COMPANY_MASTER_SID,  
--                CONTRACT_MASTER_SID,  
--                ITEM_MASTER_SID,  
--                PROJECTION_DETAILS_SID,  
--                CFF_MASTER_SID  
--FROM   (SELECT COMPANY_MASTER_SID,  
--               T_CCP.CONTRACT_MASTER_SID,  
--               T_CCP.ITEM_MASTER_SID,  
--               PROJECTION_DETAILS_SID,  
--               CFF_MASTER_SID,  
--               RS_ID,  
--               RS_TYPE  
--        FROM   #TEMP_CCP T_CCP  
--               INNER JOIN RS_CONTRACT RS  
--                       ON T_CCP.CONTRACT_MASTER_SID = RS.CONTRACT_MASTER_SID  
--               INNER JOIN RS_CONTRACT_DETAILS RSC  
--                       ON RS.RS_CONTRACT_SID = RSC.RS_CONTRACT_SID  
--                          AND T_CCP.ITEM_MASTER_SID = RSC.ITEM_MASTER_SID  
--        WHERE  EXISTS (SELECT 1  
--                       FROM   CFP_CONTRACT CF  
--                              INNER JOIN CFP_CONTRACT_DETAILS CFD  
--                                      ON CF.CFP_CONTRACT_SID = CFD.CFP_CONTRACT_SID  
--                                         AND T_CCP.COMPANY_MASTER_SID = CFD.COMPANY_MASTER_SID
--                                         AND RS.CFP_CONTRACT_SID = CF.CFP_CONTRACT_SID  
--                                         AND CF.CONTRACT_MASTER_SID = T_CCP.CONTRACT_MASTER_SID)) R
--       INNER JOIN HELPER_TABLE HT  
--               ON R.RS_TYPE = HT.HELPER_TABLE_SID  
--WHERE  HT.DESCRIPTION = 'RETURNS'  
--IF OBJECT_ID('TEMPDB..#TEMP_RETURNS') IS NOT NULL  
--  DROP TABLE #TEMP_RETURNS  
--CREATE TABLE #TEMP_RETURNS  
--  (  
--     ITEM_MASTER_SID     INT,  
--     RETURNS_DETAILS_SID INT,  
--     PERIOD_SID          INT,  
--     ACTUAL_RATE         NUMERIC(22, 6),  
--     PROJECTED_RATE      NUMERIC(22, 6),  
--     PRIMARY KEY ( ITEM_MASTER_SID, PERIOD_SID )  
--  );  
--WITH ITEM_PROJ_DETAILS  
--     AS (SELECT ROW_NUMBER()  
--                  OVER (  
--                    PARTITION BY ITEM_MASTER_SID  
--                    ORDER BY LASTEST_DATE DESC ) RN,  
--                ITEM_MASTER_SID,  
--                PM.PROJECTION_MASTER_SID,  
--                RETURNS_DETAILS_SID  
--         FROM   RETURNS_DETAILS RD  
--                INNER JOIN PROJECTION_MASTER PM  
--                        ON RD.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID  
--                CROSS APPLY ( VALUES (MODIFIED_DATE),  
--                                     (CREATED_DATE) ) CS(LASTEST_DATE)  
--         WHERE  SAVE_FLAG = 1  
--                AND ITEM_MASTER_SID IN (SELECT ITEM_MASTER_SID  
--                                        FROM   @ITEMID))  
--INSERT INTO #TEMP_RETURNS  
--            (ITEM_MASTER_SID,  
--             RETURNS_DETAILS_SID,  
--             PERIOD_SID,  
--             ACTUAL_RATE,  
--             PROJECTED_RATE)  
--SELECT COALESCE(R_ACTUALS.ITEM_MASTER_SID, R_PROJ.ITEM_MASTER_SID),  
--       COALESCE(R_ACTUALS.RETURNS_DETAILS_SID, R_PROJ.RETURNS_DETAILS_SID) AS RETURNS_DETAILS_SID,
--       COALESCE(R_ACTUALS.PERIOD_SID, R_PROJ.PERIOD_SID)                   AS PERIOD_SID,  
--       R_ACTUALS.ACTUAL_RETURN_PERCENT,  
--       R_PROJ.PROJECTED_RETURN_PERCENT  
--FROM   (SELECT IMPD.RETURNS_DETAILS_SID,  
--               ITEM_MASTER_SID,  
--               PERIOD_SID,  
--               ACTUAL_RETURN_PERCENT  
--        FROM   RETURNS_ACTUALS NAP  
--               JOIN ITEM_PROJ_DETAILS IMPD  
--                 ON IMPD.RETURNS_DETAILS_SID = NAP.RETURNS_DETAILS_SID  
--        WHERE  IMPD.RN = 1) R_ACTUALS  
--       FULL JOIN (SELECT NPP.RETURNS_DETAILS_SID,  
--                         ITEM_MASTER_SID,  
--                         PERIOD_SID,  
--                         PROJECTED_RETURN_PERCENT  
--                  FROM   RETURNS_PROJ_DETAILS NPP  
--                         JOIN ITEM_PROJ_DETAILS IMPD  
--                           ON IMPD.RETURNS_DETAILS_SID = NPP.RETURNS_DETAILS_SID  
--                  WHERE  IMPD.RN = 1) R_PROJ  
--              ON R_ACTUALS.RETURNS_DETAILS_SID = R_PROJ.RETURNS_DETAILS_SID  
--                 AND R_ACTUALS.PERIOD_SID = R_PROJ.PERIOD_SID  
--------------------------------------------------PULLING PRICE FOR CFF ITEMS------------  
IF OBJECT_ID('TEMPDB..#ITEM_PRICING') IS NOT NULL
	DROP TABLE #ITEM_PRICING

CREATE TABLE #ITEM_PRICING (
	ITEM_MASTER_SID INT
	,PERIOD_SID INT
	,ITEM_PRICE NUMERIC(22, 6)
	,PRIMARY KEY (
		ITEM_MASTER_SID
		,PERIOD_SID
		)
	)

INSERT INTO #ITEM_PRICING (
	ITEM_MASTER_SID
	,PERIOD_SID
	,ITEM_PRICE
	)
SELECT ITEM_MASTER_SID
	,PERIOD_SID
	,ITEM_PRICE
FROM [DBO].[UDF_ITEM_PRICING](@ITEMID, 'COGS', COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID), @PROJ_END_PERIOD_SID, 'EACH')

--------------------------------------------------STROING OUTPUT IN RESULT TABLE ------------  
IF OBJECT_ID('TEMPDB.DBO.#RESULT', 'U') IS NOT NULL
	DROP TABLE #RESULT;

CREATE TABLE #RESULT (
	CFF_PROJECTION_MASTER_SID INT
	,EX_FACTORY_SALES_ACTUALS NUMERIC(22, 6)
	,EX_FACTORY_SALES_PROJ NUMERIC(22, 6)
	,YEAR INT
	,PERIOD INT
	,CONTRACT_SALES_ACTUALS NUMERIC(22, 6)
	,CONTRACT_SALES_PROJECTED NUMERIC(22, 6)
	,CONTRACT_UNITS_ACTUALS NUMERIC(22, 6)
	,CONTRACT_UNITS_PROJECTED NUMERIC(22, 6)
	,TOTAL_DISCOUNT NUMERIC(22, 6)
	,TOTAL_DISCOUNT_PROJECTED NUMERIC(22, 6)
	,TOTAL_DISCOUNT_PERCENTAGE NUMERIC(22, 6)
	,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
	,EX_FACTORY_SALES_ACTUALS_PERCENT NUMERIC(22, 6)
	,EX_FACTORY_SALES_PROJECTED_PERCENT NUMERIC(22, 6)
	,PPA_DISCOUNT NUMERIC(22, 6)
	,PPA_DISCOUNT_PROJECTED NUMERIC(22, 6)
	,PPA_DISCOUNT_PERCENTAGE NUMERIC(22, 6)
	,PPA_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
	,MANDATED_DISCOUNT_ACTUALS NUMERIC(22, 6)
	,MANDATED_DISCOUNT_PROJECTED NUMERIC(22, 6)
	,SUPPLEMENTAL_DISCOUNT_ACTUALS NUMERIC(22, 6)
	,SUPPLEMENTAL_DISCOUNT_PROJECTED NUMERIC(22, 6)
	,MANDATED_DISCOUNT_ACTUALS_PERCENTAGE NUMERIC(22, 6)
	,MANDATED_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
	,SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE NUMERIC(22, 6)
	,SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE NUMERIC(22, 6)
	,NET_SALES NUMERIC(22, 6)
	,NET_SALES_PROJECTED NUMERIC(22, 6)
	,DEMAND_SALES_ACTUAL NUMERIC(22, 6)
	,DEMAND_SALES_PROJECTED NUMERIC(22, 6)
	,INVENTORY_WITHDRAWAL_ACTUAL NUMERIC(22, 6)
	,INVENTORY_WITHDRAWAL_PROJECTED NUMERIC(22, 6)
	,DEMAND_SALES_ACTUAL_PERCENT NUMERIC(22, 6)
	,DEMAND_SALES_PROJECTED_PERCENT NUMERIC(22, 6)
	,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT NUMERIC(22, 6)
	,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT NUMERIC(22, 6)
	,TOTAL_DISCOUNT_RPU_ACTUALS NUMERIC(22, 6)
	,TOTAL_DISCOUNT_RPU_PROJECTED NUMERIC(22, 6)
	,TOTAL_PPA_RPU_ACTUALS NUMERIC(22, 6)
	,TOTAL_PPA_RPU_PROJECTED NUMERIC(22, 6)
	,TOTAL_RPU NUMERIC(22, 6)
	,TOTAL_PROJECTED_RPU NUMERIC(22, 6)
	,COGS_ACTUAL NUMERIC(22, 6)
	,COGS_PROJECTED NUMERIC(22, 6)
	,NET_PROFIT_ACTUAL NUMERIC(22, 6)
	,NET_PROFIT_PROJECTED NUMERIC(22, 6)
	,RETURNS_ACTUAL_AMOUNT NUMERIC(22, 6)
	,RETURNS_ACTUAL_PERCENTAGE NUMERIC(22, 6)
	,RETURNS_PROJECTED_AMOUNT NUMERIC(22, 6)
	,RETURNS_PROJECTED_PERCENTAGE NUMERIC(22, 6)
	,TOTAL_RETURNS_RPU_ACTAULS NUMERIC(22, 6)
	,TOTAL_RETURNS_RPU_PROJECTED NUMERIC(22, 6)
	,ADJUSTED_DEMAND_ACTUALS NUMERIC(22, 6)
	,ADJUSTED_DEMAND_PROJ NUMERIC(22, 6)
	,CUST_EX_FACTORY_SALES_ACTUALS NUMERIC(22, 6)
	,CUST_EX_FACTORY_SALES_PROJ NUMERIC(22, 6)
	,IW_DETAILS_ACTUALS NUMERIC(22, 6)
	,IW_DETAILS_PROJ NUMERIC(22, 6)
	,ADJUSTED_DEMAND_ACTUALS_PERCENTAGE NUMERIC(22, 6)
	,ADJUSTED_DEMAND_PROJ_PERCENTAGE NUMERIC(22, 6)
	,CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE NUMERIC(22, 6)
	,CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE NUMERIC(22, 6)
	,IW_DETAILS_ACTUALS_PERCENTAGE NUMERIC(22, 6)
	,IW_DETAILS_PROJ_PERCENTAGE NUMERIC(22, 6)
	,NET_SALES_OF_EX_FACTORY_ACTUALS NUMERIC(22, 6)
	,NET_SALES_OF_EX_FACTORY_PROJECTED NUMERIC(22, 6)
	,DISCOUNT_OF_EX_FACTORY_ACTUALS NUMERIC(22, 6)
	,DISCOUNT_OF_EX_FACTORY_PROJECTED NUMERIC(22, 6)
	)

-------------PULLING CCP LEVEL INFORMATION FOR ONE PROJECTION AND RESTRICTING CCPS---------------------  
IF OBJECT_ID('TEMPDB.DBO.#CCP_INFO', 'U') IS NOT NULL
	DROP TABLE #CCP_INFO;

SELECT CD.CFF_MASTER_SID
	,PD.PROJECTION_MASTER_SID
	,PROJECTION_DETAILS_SID
	,PD.CCP_DETAILS_SID
INTO #CCP_INFO
FROM CFF_DETAILS CD
JOIN PROJECTION_DETAILS PD ON CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	AND CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
WHERE CFF_MASTER_SID = @FIRST_PROJ_SID
	AND (
		EXISTS (
			SELECT TOKEN
			FROM UDF_SPLITSTRING(@CCP, ',') U
			WHERE U.TOKEN = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

-------------PULLING CCP LEVEL INFORMATION FOR ONE PROJECTION AND RESTRICTING CCPS---------------------  
IF OBJECT_ID('TEMPDB.DBO.#SALES_INFORMATION', 'U') IS NOT NULL
	DROP TABLE #SALES_INFORMATION;

SELECT DISTINCT CF.CFF_MASTER_SID
	,CC.CCP_DETAILS_SID
	,PD.PROJECTION_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,CC.ITEM_MASTER_SID
INTO #SALES_INFORMATION
FROM CCP_DETAILS CC
JOIN CFF_DETAILS CF ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
WHERE CF.CFF_MASTER_SID = @FIRST_PROJ_SID
	AND SALES_INCLUSION = 'Y'
	AND (
		EXISTS (
			SELECT TOKEN
			FROM UDF_SPLITSTRING(@CCP, ',') U
			WHERE U.TOKEN = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

DECLARE @SALES_INC BIT
	,@DEDUCTION_INC BIT

IF NOT EXISTS (
		SELECT *
		FROM #SALES_INFORMATION
		)
	SET @SALES_INC = 0
ELSE
	SET @SALES_INC = 1

--------------------------PULLING DEDUCTION INCLUSION (GALUAT_377) FOR CFF---------------  
IF OBJECT_ID('TEMPDB.DBO.#DISCOUNT_INFORMATION', 'U') IS NOT NULL
	DROP TABLE #DISCOUNT_INFORMATION;

SELECT DISTINCT CF.CFF_MASTER_SID
	,CC.CCP_DETAILS_SID
	,PD.PROJECTION_MASTER_SID
	,PD.PROJECTION_DETAILS_SID
	,CDI.RS_MODEL_SID
INTO #DISCOUNT_INFORMATION
FROM CFF_DEDUCTION_INCLUSION CDI
JOIN CFF_DETAILS CF ON CF.CFF_DETAILS_SID = CDI.CFF_DETAILS_SID
JOIN CCP_DETAILS CC ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
WHERE CF.CFF_MASTER_SID = @FIRST_PROJ_SID
	AND DEDUCTION_INCLUSION = 'Y'
	AND (
		EXISTS (
			SELECT TOKEN
			FROM UDF_SPLITSTRING(@CCP, ',') U
			WHERE U.TOKEN = PD.CCP_DETAILS_SID
			)
		OR @CCP IS NULL
		)

--------------------------PULLING DEDUCTION INCLUSION(GALUAT_377)  FOR CFF---------------  
IF NOT EXISTS (
		SELECT *
		FROM #DISCOUNT_INFORMATION
		)
	SET @DEDUCTION_INC = 0
ELSE
	SET @DEDUCTION_INC = 1

--------------------------SELECTING CFF ACT_START PERIOD AND POJECTION_END_PERIOD---------------  
--SELECT @SALES_INC,@DEDUCTION_INC  
IF OBJECT_ID('TEMPDB..#DATA_TABLE') IS NOT NULL
	DROP TABLE #DATA_TABLE

SELECT DISTINCT PERIOD
	,YEAR
	,@FIRST_PROJ_SID AS CFF_MASTER_SID
INTO #DATA_TABLE
FROM #PERIOD
WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @PROJ_END_PERIOD_SID

--------------------------PULLING  PROJECTED DISCOUNT INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#NM_DISCOUNT_PROJECTION') IS NOT NULL
	DROP TABLE #NM_DISCOUNT_PROJECTION

SELECT SUM(NSP.PROJECTION_SALES) AS PROJECTION_SALES
	,PERIOD
	,YEAR
INTO #NM_DISCOUNT_PROJECTION
FROM NM_DISCOUNT_PROJECTION NSP
JOIN #DISCOUNT_INFORMATION DI ON NSP.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND NSP.RS_MODEL_SID = di.RS_MODEL_SID
	AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
GROUP BY PERIOD
	,YEAR

--------------------------PULLING  ACTUAL DISCOUNT INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#NM_ACTUAL_DISCOUNT') IS NOT NULL
	DROP TABLE #NM_ACTUAL_DISCOUNT

SELECT SUM(NAD.ACTUAL_SALES) AS ACTUAL_SALES
	,PERIOD
	,YEAR
INTO #NM_ACTUAL_DISCOUNT
FROM NM_ACTUAL_DISCOUNT NAD
JOIN #DISCOUNT_INFORMATION DI ON NAD.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND NAD.RS_MODEL_SID = di.RS_MODEL_SID
	AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
GROUP BY PERIOD
	,YEAR

--------------------------PULLING  PPA PROJECTED INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#NM_PPA_PROJECTION') IS NOT NULL
	DROP TABLE #NM_PPA_PROJECTION

SELECT SUM(NSP.PROJECTION_DISCOUNT_DOLLAR) PROJECTION_DISCOUNT_DOLLAR
	,PERIOD
	,YEAR
INTO #NM_PPA_PROJECTION
FROM NM_PPA_PROJECTION NSP
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN (
	SELECT DISTINCT CFF_MASTER_SID
		,CCP_DETAILS_SID
		,PROJECTION_MASTER_SID
		,PROJECTION_DETAILS_SID
	FROM #DISCOUNT_INFORMATION
	) DI ON DI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND DI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
	AND C.CFF_MASTER_SID = DI.CFF_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
GROUP BY PERIOD
	,YEAR

--------------------------PULLING  PPA ACTUAL INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#NM_ACTUAL_PPA') IS NOT NULL
	DROP TABLE #NM_ACTUAL_PPA

SELECT SUM(NAD.ACTUAL_DISCOUNT_DOLLAR) ACTUAL_DISCOUNT_DOLLAR
	,PERIOD
	,YEAR
INTO #NM_ACTUAL_PPA
FROM NM_ACTUAL_PPA NAD
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
	AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN (
	SELECT DISTINCT CFF_MASTER_SID
		,CCP_DETAILS_SID
		,PROJECTION_MASTER_SID
		,PROJECTION_DETAILS_SID
	FROM #DISCOUNT_INFORMATION
	) DI ON DI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND C.CFF_MASTER_SID = DI.CFF_MASTER_SID
	AND DI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
GROUP BY PERIOD
	,YEAR

--------------------------PULLING  SUPPLEMENTAL PROJECTED INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#M_SUPPLEMENTAL_DISC_PROJ') IS NOT NULL
	DROP TABLE #M_SUPPLEMENTAL_DISC_PROJ

SELECT SUM(NSP.PROJECTION_SALES) PROJECTION_SALES
	,PERIOD
	,YEAR
INTO #M_SUPPLEMENTAL_DISC_PROJ
FROM M_SUPPLEMENTAL_DISC_PROJ NSP
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN (
	SELECT DISTINCT CFF_MASTER_SID
		,CCP_DETAILS_SID
		,PROJECTION_MASTER_SID
		,PROJECTION_DETAILS_SID
	FROM #DISCOUNT_INFORMATION
	) DI ON DI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND C.CFF_MASTER_SID = DI.CFF_MASTER_SID
	AND DI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
GROUP BY PERIOD
	,YEAR

--------------------------PULLING  SUPPLEMENTAL ACTUAL INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#M_SUPPLEMENTAL_DISC_ACTUALS') IS NOT NULL
	DROP TABLE #M_SUPPLEMENTAL_DISC_ACTUALS

SELECT SUM(NAD.ACTUAL_SALES) ACTUAL_SALES
	,PERIOD
	,YEAR
INTO #M_SUPPLEMENTAL_DISC_ACTUALS
FROM M_SUPPLEMENTAL_DISC_ACTUALS NAD
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
	AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN (
	SELECT DISTINCT CFF_MASTER_SID
		,CCP_DETAILS_SID
		,PROJECTION_MASTER_SID
		,PROJECTION_DETAILS_SID
	FROM #DISCOUNT_INFORMATION
	) DI ON DI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND C.CFF_MASTER_SID = DI.CFF_MASTER_SID
	AND DI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
GROUP BY PERIOD
	,YEAR

-----------------------PULLING MANDATED DISCOUNT PROJECTED INFORMATION --------------- 
IF OBJECT_ID('TEMPDB..#M_DISCOUNT_PROJECTION') IS NOT NULL
	DROP TABLE #M_DISCOUNT_PROJECTION

SELECT SUM(NSP.PROJECTION_SALES) PROJECTION_SALES
	,PERIOD
	,YEAR
INTO #M_DISCOUNT_PROJECTION
FROM M_DISCOUNT_PROJECTION NSP
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
	AND SAVE_FLAG = 1
JOIN (
	SELECT DISTINCT CFF_MASTER_SID
		,CCP_DETAILS_SID
		,PROJECTION_MASTER_SID
		,PROJECTION_DETAILS_SID
	FROM #DISCOUNT_INFORMATION
	) DI ON DI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND C.CFF_MASTER_SID = DI.CFF_MASTER_SID
	AND DI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
GROUP BY PERIOD
	,YEAR

-----------------------PULLING MANDATED DISCOUNT ACTUAL INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#M_ACTUAL_DISCOUNT') IS NOT NULL
	DROP TABLE #M_ACTUAL_DISCOUNT

SELECT SUM(NAD.ACTUAL_SALES) ACTUAL_SALES
	,PERIOD
	,YEAR
INTO #M_ACTUAL_DISCOUNT
FROM M_ACTUAL_DISCOUNT NAD
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
	AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
	AND SAVE_FLAG = 1
JOIN (
	SELECT DISTINCT CFF_MASTER_SID
		,CCP_DETAILS_SID
		,PROJECTION_MASTER_SID
		,PROJECTION_DETAILS_SID
	FROM #DISCOUNT_INFORMATION
	) DI ON DI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = DI.PROJECTION_DETAILS_SID
	AND C.CFF_MASTER_SID = DI.CFF_MASTER_SID
	AND DI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
GROUP BY PERIOD
	,YEAR

-----------------------TAKING  AGGREGATION  OF SALES PROJECTED INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#NM_SALES_PROJECTION') IS NOT NULL
	DROP TABLE #NM_SALES_PROJECTION

SELECT SUM(PROJECTION_SALES) PROJECTION_SALES
	,SUM(PROJECTION_UNITS) PROJECTION_UNITS
	,SUM(PROJECTION_SALES * U.ITEM_PRICE) AS NM_COGS_PROJECTED
	,PERIOD
	,YEAR
INTO #NM_SALES_PROJECTION
FROM NM_SALES_PROJECTION NSP
JOIN #SALES_INFORMATION SI ON NSP.PROJECTION_DETAILS_SID = SI.PROJECTION_DETAILS_SID
	AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
LEFT JOIN #ITEM_PRICING U ON si.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND NSP.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR

-----------------------TAKING  AGGREGATION  OF SALES ACTUAL INFORMATION ---------------
IF OBJECT_ID('TEMPDB..#NM_ACTUAL_SALES') IS NOT NULL
	DROP TABLE #NM_ACTUAL_SALES

SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
	,SUM(ACTUAL_UNITS) ACTUAL_UNITS
	,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS NM_COGS_ACTUAL
	,PERIOD
	,YEAR
INTO #NM_ACTUAL_SALES
FROM NM_ACTUAL_SALES NAD
JOIN #SALES_INFORMATION SI ON NAD.PROJECTION_DETAILS_SID = SI.PROJECTION_DETAILS_SID
	AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
LEFT JOIN #ITEM_PRICING U ON si.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND NAD.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR

--IF OBJECT_ID('TEMPDB..#RETURNS') IS NOT NULL  
--  DROP TABLE #RETURNS  
--SELECT YEAR,  
--       PERIOD,  
--       ISNULL(SUM(( ISNULL(NSP.PROJECTION_SALES, 0)  
--             + ISNULL(MSP.PROJECTION_SALES, 0) ) * TR.PROJECTED_RATE),0) AS RETURNS_PROJECTED,
--       ISNULL(SUM(( ISNULL(NAS.ACTUAL_SALES, 0)  
--             + ISNULL(MAS.ACTUAL_SALES, 0) ) * TR.ACTUAL_RATE),0)        AS RETURNS_ACTUALS 
--INTO   #RETURNS  
--FROM   #TEMP_RETURNS TR  
--       JOIN CCP_DETAILS CC  
--         ON TR.ITEM_MASTER_SID = CC.ITEM_MASTER_SID  
--       JOIN #CCP_INFO C  
--         ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID  
--       JOIN #PERIOD P  
--         ON P.PERIOD_SID = TR.PERIOD_SID  
--       LEFT OUTER JOIN NM_SALES_PROJECTION NSP  
--                    ON NSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
--                       AND P.PERIOD_SID = NSP.PERIOD_SID  
--                       AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
--       LEFT OUTER JOIN M_SALES_PROJECTION MSP  
--                    ON MSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
--                       AND P.PERIOD_SID = MSP.PERIOD_SID  
--                       AND MSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
--       LEFT OUTER JOIN NM_ACTUAL_SALES NAS  
--                    ON NAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
--                       AND P.PERIOD_SID = NAS.PERIOD_SID  
--                       AND NAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
--       LEFT OUTER JOIN M_ACTUAL_SALES MAS  
--                    ON MAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
--                       AND P.PERIOD_SID = MAS.PERIOD_SID  
--                       AND MAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
--GROUP  BY YEAR,  
--          PERIOD  
----------------------TAKING  AGGREGATION  OF MANDATED SALES PROJECTED INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#M_SALES_PROJECTION') IS NOT NULL
	DROP TABLE #M_SALES_PROJECTION

SELECT SUM(PROJECTION_SALES) PROJECTION_SALES
	,SUM(PROJECTION_UNITS) PROJECTION_UNITS
	,SUM(PROJECTION_SALES * U.ITEM_PRICE) AS M_COGS_PROJECTED
	,PERIOD
	,YEAR
INTO #M_SALES_PROJECTION
FROM M_SALES_PROJECTION NSP
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
	AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
		AND @PROJ_END_PERIOD_SID
JOIN #SALES_INFORMATION SI ON SI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = SI.PROJECTION_DETAILS_SID
	AND C.CFF_MASTER_SID = SI.CFF_MASTER_SID
	AND SI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
LEFT JOIN #ITEM_PRICING U ON SI.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND NSP.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR

----------------------TAKING  AGGREGATION  OF MANDATED SALES ACTUAL INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#M_ACTUAL_SALES') IS NOT NULL
	DROP TABLE #M_ACTUAL_SALES

SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
	,SUM(ACTUAL_UNITS) ACTUAL_UNITS
	,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS M_COGS_ACTUAL
	,PERIOD
	,YEAR
INTO #M_ACTUAL_SALES
FROM M_ACTUAL_SALES NAD
JOIN #CCP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
	AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
		AND @ACT_END_PERIOD_SID
JOIN #SALES_INFORMATION SI ON SI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
	AND C.PROJECTION_DETAILS_SID = SI.PROJECTION_DETAILS_SID
	AND C.CFF_MASTER_SID = SI.CFF_MASTER_SID
	AND SI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
LEFT JOIN #ITEM_PRICING U ON SI.ITEM_MASTER_SID = U.ITEM_MASTER_SID
	AND NAD.PERIOD_SID = U.PERIOD_SID
GROUP BY PERIOD
	,YEAR;

----------------------TAKING  AGGREGATION  OF MANDATED & NON MANDATED SALES  INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#SALES') IS NOT NULL
	DROP TABLE #SALES

SELECT FD.CFF_MASTER_SID
	,FD.YEAR
	,FD.PERIOD
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_SALES), 0) + COALESCE((MSP.PROJECTION_SALES), 0)
		END AS PROJECTION_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_UNITS), 0) + COALESCE((MSP.PROJECTION_UNITS), 0)
		END AS PROJECTION_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_SALES), 0) + COALESCE((MAS.ACTUAL_SALES), 0)
		END AS ACTUAL_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_UNITS), 0) + COALESCE((MAS.ACTUAL_UNITS), 0)
		END AS ACTUAL_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MSP.M_COGS_PROJECTED), 0) + COALESCE((NSP.NM_COGS_PROJECTED), 0)
		END AS COGS_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MAS.M_COGS_ACTUAL), 0) + COALESCE((NAS.NM_COGS_ACTUAL), 0)
		END AS COGS_ACTUAL
	,
	--RETURNS_ACTUALS = CASE  
	--                    WHEN  @DEDUCTION_INC = 0 THEN NULL  
	--                    ELSE RETURNS_ACTUALS  
	--                  END,  
	--RETURNS_PROJECTED = CASE  
	--                      WHEN  @DEDUCTION_INC = 0 THEN NULL  
	--                      ELSE RETURNS_PROJECTED  
	--                    END,  
	--ACTUAL_RATE = ( CASE  
	--                  WHEN @SALES_INC = 0  
	--                        OR @DEDUCTION_INC = 0 THEN NULL  
	--                  ELSE ISNULL(( RETURNS_ACTUALS / NULLIF(COALESCE((NAS.ACTUAL_SALES), 0)  
	--                                                         + COALESCE((MAS.ACTUAL_SALES), 0), 0) ), 0)
	--                END ),  
	--PROJECTED_RATE = ( CASE  
	--                     WHEN @SALES_INC = 0  
	--                           OR @DEDUCTION_INC = 0 THEN NULL  
	--                     ELSE ISNULL(( RETURNS_PROJECTED / NULLIF(COALESCE((NSP.PROJECTION_SALES), 0)
	--                                                              + COALESCE((MSP.PROJECTION_SALES), 0), 0) ), 0)
	--                   END ),  
	CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_SALES), 0)
		END AS NM_ACTUAL_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_SALES), 0)
		END AS NM_PROJECTED_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_UNITS), 0)
		END AS NM_ACTUAL_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_UNITS), 0)
		END AS NM_PROJECTED_UNITS
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MAS.ACTUAL_SALES), 0)
		END AS M_ACTUAL_SALES
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE COALESCE((MSP.PROJECTION_SALES), 0)
		END AS M_PROJECTED_SALES
INTO #SALES
FROM #DATA_TABLE FD
LEFT JOIN #NM_SALES_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
LEFT JOIN #M_SALES_PROJECTION MSP ON MSP.YEAR = FD.YEAR
	AND MSP.PERIOD = FD.PERIOD
LEFT JOIN #NM_ACTUAL_SALES NAS ON NAS.YEAR = FD.YEAR
	AND NAS.PERIOD = FD.PERIOD
LEFT JOIN #M_ACTUAL_SALES MAS ON MAS.YEAR = FD.YEAR
	AND MAS.PERIOD = FD.PERIOD

--LEFT JOIN #RETURNS TR  
--       ON TR.YEAR = FD.YEAR  
--          AND TR.PERIOD = FD.PERIOD  
----------------------TAKING  AGGREGATION  OF MANDATED & NON MANDATED DISCOUNT  INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#DISCOUNT') IS NOT NULL
	DROP TABLE #DISCOUNT

SELECT FD.CFF_MASTER_SID
	,FD.YEAR
	,FD.PERIOD
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_SALES), 0)
		END AS PROJECTION_SALES
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((NAD.ACTUAL_SALES), 0)
		END AS ACTUAL_SALES
INTO #DISCOUNT
FROM #DATA_TABLE FD
LEFT OUTER JOIN #NM_DISCOUNT_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
LEFT OUTER JOIN #NM_ACTUAL_DISCOUNT NAD ON NAD.YEAR = FD.YEAR
	AND NAD.PERIOD = FD.PERIOD

----------------------TAKING  AGGREGATION  OF SUPPLEMENTAL & PPA DISCOUNT  INFORMATION ---------------  
IF OBJECT_ID('TEMPDB..#PPA_SUPP_MANDATED') IS NOT NULL
	DROP TABLE #PPA_SUPP_MANDATED

SELECT FD.CFF_MASTER_SID
	,FD.YEAR
	,FD.PERIOD
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((NSP.PROJECTION_DISCOUNT_DOLLAR), 0)
		END AS PPA_DISCOUNT_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((SDP.PROJECTION_SALES), 0)
		END AS SUPPLEMENTAL_DISCOUNT_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((MDP.PROJECTION_SALES), 0)
		END AS MANDATED_DISCOUNT_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((NAS.ACTUAL_DISCOUNT_DOLLAR), 0)
		END AS PPA_ACTUAL_SALES
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((SDA.ACTUAL_SALES), 0)
		END AS SUPPLEMENTAL_DISCOUNT_ACTUALS
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE COALESCE((MAD.ACTUAL_SALES), 0)
		END AS MANDATED_DISCOUNT_ACTUALS
INTO #PPA_SUPP_MANDATED
FROM #DATA_TABLE FD
LEFT JOIN #NM_PPA_PROJECTION NSP ON NSP.YEAR = FD.YEAR
	AND NSP.PERIOD = FD.PERIOD
LEFT JOIN #NM_ACTUAL_PPA NAS ON NAS.YEAR = FD.YEAR
	AND NAS.PERIOD = FD.PERIOD
LEFT JOIN #M_SUPPLEMENTAL_DISC_PROJ SDP ON SDP.YEAR = FD.YEAR
	AND SDP.PERIOD = FD.PERIOD
LEFT JOIN #M_SUPPLEMENTAL_DISC_ACTUALS SDA ON SDA.YEAR = FD.YEAR
	AND SDA.PERIOD = FD.PERIOD
LEFT JOIN #M_DISCOUNT_PROJECTION MDP ON MDP.YEAR = FD.YEAR
	AND MDP.PERIOD = FD.PERIOD
LEFT JOIN #M_ACTUAL_DISCOUNT MAD ON MAD.YEAR = FD.YEAR
	AND MAD.PERIOD = FD.PERIOD;

-----------------------TAKING  ITEM LEVEL VALUES FROM CFF_PRODUCT_LEVEL_FILES_DATA  
WITH PRODUCT_FILE_DATA
AS (
	SELECT YEAR
		,PERIOD
		,SUM(EX_FACTORY_SALES_ACTUALS) AS EX_FACTORY_SALES_ACTUALS
		,SUM(EX_FACTORY_SALES_PROJ) AS EX_FACTORY_SALES_PROJ
		,SUM(DEMAND_SALES_ACTUALS) AS DEMAND_SALES_ACTUALS
		,SUM(DEMAND_SALES_PROJ) AS DEMAND_SALES_PROJ
		,SUM(ADJUSTED_DEMAND_ACTUALS) AS ADJUSTED_DEMAND_ACTUALS
		,SUM(ADJUSTED_DEMAND_PROJ) AS ADJUSTED_DEMAND_PROJ
		,SUM(IW_MASTER_ACTUALS) AS IW_MASTER_ACTUALS
		,SUM(IW_MASTER_PROJ) AS IW_MASTER_PROJ
	FROM CFF_PRODUCT_LEVEL_FILES_DATA CF
	INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
	WHERE CFF_MASTER_SID = @FIRST_PROJ_SID
		AND P.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @PROJ_END_PERIOD_SID
			AND EXISTS (SELECT 1 FROM #CCP_INFO C JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
				WHERE CF.ITEM_MASTER_SID=CD.ITEM_MASTER_SID )
	GROUP BY YEAR
		,PERIOD
	)
	,
	--------------------TAKING  ITEM+COMPANY LEVEL VALUES FROM CFF_COMP_PRD_LEVEL_FILES_DATA  
COMP_PRODUCT_FILE_DATA
AS (
	SELECT YEAR
		,PERIOD
		,SUM(CUST_EX_FACTORY_SALES_ACTUALS) AS CUST_EX_FACTORY_SALES_ACTUALS
		,SUM(CUST_EX_FACTORY_SALES_PROJ) AS CUST_EX_FACTORY_SALES_PROJ
		,SUM(IW_DETAILS_ACTUALS) AS IW_DETAILS_ACTUALS
		,SUM(IW_DETAILS_PROJ) AS IW_DETAILS_PROJ
	FROM CFF_COMP_PRD_LEVEL_FILES_DATA CF
	INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
	WHERE CFF_MASTER_SID = @FIRST_PROJ_SID
	AND  EXISTS (SELECT 1 FROM #CCP_INFO C JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
				WHERE CF.ITEM_MASTER_SID=CD.ITEM_MASTER_SID 
				AND CF.COMPANY_MASTER_SID=CD.COMPANY_MASTER_SID)
	GROUP BY YEAR
		,PERIOD
	)
-------------   INSERTING INTO RESULT TABLE  BASED ON FORMULAS FOR EACH COLUMN-----------------------------   
INSERT INTO #RESULT (
	CFF_PROJECTION_MASTER_SID
	,EX_FACTORY_SALES_ACTUALS
	,EX_FACTORY_SALES_PROJ
	,YEAR
	,PERIOD
	,CONTRACT_SALES_ACTUALS
	,CONTRACT_SALES_PROJECTED
	,CONTRACT_UNITS_ACTUALS
	,CONTRACT_UNITS_PROJECTED
	,TOTAL_DISCOUNT
	,TOTAL_DISCOUNT_PROJECTED
	,TOTAL_DISCOUNT_PERCENTAGE
	,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,EX_FACTORY_SALES_ACTUALS_PERCENT
	,EX_FACTORY_SALES_PROJECTED_PERCENT
	,PPA_DISCOUNT
	,PPA_DISCOUNT_PROJECTED
	,PPA_DISCOUNT_PERCENTAGE
	,PPA_DISCOUNT_PROJECTED_PERCENTAGE
	,MANDATED_DISCOUNT_ACTUALS
	,MANDATED_DISCOUNT_PROJECTED
	,SUPPLEMENTAL_DISCOUNT_ACTUALS
	,SUPPLEMENTAL_DISCOUNT_PROJECTED
	,MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
	,MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
	,SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
	,SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,NET_SALES
	,NET_SALES_PROJECTED
	,DEMAND_SALES_ACTUAL
	,DEMAND_SALES_PROJECTED
	,INVENTORY_WITHDRAWAL_ACTUAL
	,INVENTORY_WITHDRAWAL_PROJECTED
	,DEMAND_SALES_ACTUAL_PERCENT
	,DEMAND_SALES_PROJECTED_PERCENT
	,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
	,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
	,TOTAL_DISCOUNT_RPU_ACTUALS
	,TOTAL_DISCOUNT_RPU_PROJECTED
	,TOTAL_PPA_RPU_ACTUALS
	,TOTAL_PPA_RPU_PROJECTED
	,TOTAL_RPU
	,TOTAL_PROJECTED_RPU
	,COGS_ACTUAL
	,COGS_PROJECTED
	,NET_PROFIT_ACTUAL
	,NET_PROFIT_PROJECTED
	,
	--RETURNS_ACTUAL_AMOUNT,  
	--RETURNS_ACTUAL_PERCENTAGE,  
	--RETURNS_PROJECTED_AMOUNT,  
	--RETURNS_PROJECTED_PERCENTAGE,  
	--TOTAL_RETURNS_RPU_ACTAULS,  
	--TOTAL_RETURNS_RPU_PROJECTED,  
	ADJUSTED_DEMAND_ACTUALS
	,ADJUSTED_DEMAND_PROJ
	,CUST_EX_FACTORY_SALES_ACTUALS
	,CUST_EX_FACTORY_SALES_PROJ
	,IW_DETAILS_ACTUALS
	,IW_DETAILS_PROJ
	,ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
	,ADJUSTED_DEMAND_PROJ_PERCENTAGE
	,CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
	,CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
	,IW_DETAILS_ACTUALS_PERCENTAGE
	,IW_DETAILS_PROJ_PERCENTAGE
	,NET_SALES_OF_EX_FACTORY_ACTUALS
	,NET_SALES_OF_EX_FACTORY_PROJECTED
	,DISCOUNT_OF_EX_FACTORY_ACTUALS
	,DISCOUNT_OF_EX_FACTORY_PROJECTED
	)
SELECT @FIRST_PROJ_SID
	,ISNULL(PFD.EX_FACTORY_SALES_ACTUALS, 0)
	,ISNULL(PFD.EX_FACTORY_SALES_PROJ, 0)
	,S.YEAR
	,S.PERIOD
	,S.ACTUAL_SALES AS CONTRACT_SALES_ACTUALS
	,S.PROJECTION_SALES AS CONTRACT_SALES_PROJECTED
	,S.ACTUAL_UNITS AS CONTRACT_UNITS_ACTUALS
	,S.PROJECTION_UNITS AS CONTRACT_UNITS_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)
		END AS TOTAL_DISCOUNT
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)
		END AS TOTAL_DISCOUNT_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_SALES, 0), 0) * 100
		END AS TOTAL_DISCOUNT_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL((ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_SALES, 0), 0) * 100
		END AS TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE (ISNULL(S.ACTUAL_SALES / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0), 0)) * 100
		END AS EX_FACTORY_SALES_ACTUALS_PERCENT
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE (ISNULL(S.PROJECTION_SALES / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0), 0)) * 100
		END AS EX_FACTORY_SALES_PROJECTED_PERCENT
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(PPA_ACTUAL_SALES, 0)
		END AS PPA_DISCOUNT
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(PPA_DISCOUNT_PROJECTED, 0)
		END AS PPA_DISCOUNT_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(PPA_ACTUAL_SALES / NULLIF(S.NM_ACTUAL_SALES, 0), 0) * 100
		END AS PPA_DISCOUNT_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.NM_PROJECTED_SALES, 0), 0) * 100
		END AS PPA_DISCOUNT_PROJECTED_PERCENTAGE
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)
		END AS MANDATED_DISCOUNT_ACTUALS
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)
		END AS MANDATED_DISCOUNT_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0)
		END AS SUPPLEMENTAL_DISCOUNT_ACTUALS
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0)
		END AS SUPPLEMENTAL_DISCOUNT_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (COALESCE(ISNULL(MANDATED_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100
		END AS MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (COALESCE(ISNULL(MANDATED_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100
		END AS MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100
		END AS SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100
		END AS SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC = 0
			THEN NULL
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC <> 0
			THEN (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS) 
		WHEN @SALES_INC <> 0
			AND @DEDUCTION_INC = 0
			THEN ISNULL(S.ACTUAL_SALES, 0)
		ELSE ISNULL( ISNULL(S.ACTUAL_SALES,0) - (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS), 0)
		END AS NET_SALES
	,CASE 
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC = 0
			THEN NULL
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC <> 0
			THEN (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED)
		WHEN @SALES_INC <> 0
			AND @DEDUCTION_INC = 0
			THEN ISNULL(S.PROJECTION_SALES, 0)
		ELSE ISNULL( ISNULL(S.PROJECTION_SALES,0) - (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED), 0)
		END AS NET_SALES_PROJECTED
	,ISNULL(PFD.DEMAND_SALES_ACTUALS, 0) AS DEMAND_SALES_ACTUAL
	,ISNULL(PFD.DEMAND_SALES_PROJ, 0) AS DEMAND_SALES_PROJECTED
	,ISNULL(PFD.IW_MASTER_ACTUALS, 0) AS INVENTORY_WITHDRAWAL_ACTUAL
	,ISNULL(PFD.IW_MASTER_PROJ, 0) AS INVENTORY_WITHDRAWAL_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE (ISNULL(S.ACTUAL_SALES / NULLIF(PFD.DEMAND_SALES_ACTUALS, 0), 0)) * 100
		END AS DEMAND_SALES_ACTUAL_PERCENT
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE (ISNULL(S.PROJECTION_SALES / NULLIF(PFD.DEMAND_SALES_PROJ, 0), 0)) * 100
		END AS DEMAND_SALES_PROJECTED_PERCENT
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE (ISNULL(S.ACTUAL_SALES / NULLIF(PFD.IW_MASTER_ACTUALS, 0), 0)) * 100
		END AS INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE (ISNULL(S.PROJECTION_SALES / NULLIF(PFD.IW_MASTER_PROJ, 0), 0)) * 100
		END AS INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (ISNULL(ND.ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0))
		END AS TOTAL_DISCOUNT_RPU_ACTUALS
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (ISNULL(ND.PROJECTION_SALES / NULLIF(S.PROJECTION_UNITS, 0), 0))
		END AS TOTAL_DISCOUNT_RPU_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (ISNULL(PPA_ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0))
		END AS TOTAL_PPA_RPU_ACTUALS
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE (ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.PROJECTION_UNITS, 0), 0))
		END AS TOTAL_PPA_RPU_PROJECTED
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_UNITS, 0), 0)
		END AS TOTAL_RPU
	,CASE 
		WHEN @SALES_INC = 0
			OR @DEDUCTION_INC = 0
			THEN NULL
		ELSE ISNULL((ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED) / NULLIF(S.PROJECTION_UNITS, 0), 0)
		END AS TOTAL_PROJECTED_RPU
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.COGS_ACTUAL, 0)
		END
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.COGS_PROJECTED, 0)
		END
	,CASE 
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC = 0
			THEN NULL
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC <> 0
			THEN (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS)
		WHEN @SALES_INC <> 0
			AND @DEDUCTION_INC = 0
			THEN ISNULL(S.ACTUAL_SALES - S.COGS_ACTUAL, 0)
		ELSE ISNULL(( ISNULL(S.ACTUAL_SALES,0) - (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS) - (ISNULL(S.COGS_ACTUAL, 0))), 0)
		END AS NET_PROFIT_ACTUAL
	,CASE 
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC = 0
			THEN NULL
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC <> 0
			THEN (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED)
		WHEN @SALES_INC <> 0
			AND @DEDUCTION_INC = 0
			THEN ISNULL(S.PROJECTION_SALES - S.COGS_PROJECTED, 0)
		ELSE ISNULL(( ISNULL(S.PROJECTION_SALES,0) - (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED) - (ISNULL(S.COGS_PROJECTED, 0))), 0)
		END AS NET_PROFIT_PROJECTED
	,
	--RETURNS_ACTUAL_AMOUNT = S.RETURNS_ACTUALS,   
	--RETURNS_ACTUAL_PERCENTAGE = CASE  
	--                              WHEN @SALES_INC = 0  
	--                                    OR @DEDUCTION_INC = 0 THEN NULL  
	--                              ELSE ISNULL(S.ACTUAL_RATE, 0)  
	--                            END,  
	--RETURNS_PROJECTED_AMOUNT = S.RETURNS_PROJECTED,  
	--RETURNS_PROJECTED_PERCENTAGE = CASE  
	--                                 WHEN @SALES_INC = 0  
	--                                       OR @DEDUCTION_INC = 0 THEN NULL  
	--                                 ELSE ISNULL(S.PROJECTED_RATE, 0)  
	--                               END,  
	--TOTAL_RETURNS_RPU_ACTAULS = CASE  
	--                              WHEN @SALES_INC = 0  
	--                                    OR @DEDUCTION_INC = 0 THEN NULL  
	--                              ELSE( ISNULL(S.RETURNS_ACTUALS / NULLIF(S.NM_ACTUAL_UNITS, 0), 0) )
	--                            END,  
	--TOTAL_RETURNS_RPU_PROJECTED = CASE  
	--                                WHEN @SALES_INC = 0  
	--                                      OR @DEDUCTION_INC = 0 THEN NULL  
	--                                ELSE( ISNULL(S.RETURNS_PROJECTED / NULLIF(S.NM_PROJECTED_UNITS, 0), 0) )
	--                              END,  
	ISNULL(PFD.ADJUSTED_DEMAND_ACTUALS, 0)
	,ISNULL(PFD.ADJUSTED_DEMAND_PROJ, 0)
	,ISNULL(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0)
	,ISNULL(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0)
	,ISNULL(CPFD.IW_DETAILS_ACTUALS, 0)
	,ISNULL(CPFD.IW_DETAILS_PROJ, 0)
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.ACTUAL_SALES / NULLIF(PFD.ADJUSTED_DEMAND_ACTUALS, 0), 0) * 100
		END AS ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.PROJECTION_SALES / NULLIF(PFD.ADJUSTED_DEMAND_PROJ, 0), 0) * 100
		END AS ADJUSTED_DEMAND_PROJ_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
		END AS CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0), 0) * 100
		END AS CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.IW_DETAILS_ACTUALS, 0), 0) * 100
		END AS IW_DETAILS_ACTUALS_PERCENTAGE
	,CASE 
		WHEN @SALES_INC = 0
			THEN NULL
		ELSE ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.IW_DETAILS_PROJ, 0), 0) * 100
		END IW_DETAILS_PROJ_PERCENTAGE
	,isnull(((CASE 
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC = 0
			THEN NULL
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC <> 0
			THEN (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS) 
		WHEN @SALES_INC <> 0
			AND @DEDUCTION_INC = 0
			THEN ISNULL(S.ACTUAL_SALES, 0)
		ELSE ISNULL( ISNULL(S.ACTUAL_SALES,0) - (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS), 0)
		END) / NULLIF(pfd.EX_FACTORY_SALES_ACTUALS, 0)) * 100,0)
		 AS NET_SALES_OF_EX_FACTORY_ACTUALS
	,isnull(((CASE 
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC = 0
			THEN NULL
		WHEN @SALES_INC = 0
			AND @DEDUCTION_INC <> 0
			THEN (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED) 
		WHEN @SALES_INC <> 0
			AND @DEDUCTION_INC = 0
			THEN ISNULL(S.PROJECTION_SALES, 0)
		ELSE ISNULL( ISNULL(S.PROJECTION_SALES,0) - (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED), 0)
		END) / NULLIF(pfd.EX_FACTORY_SALES_PROJ,  0)) * 100,0)
		 AS NET_SALES_OF_EX_FACTORY_PROJECTED
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(pfd.EX_FACTORY_SALES_ACTUALS, 0)) * 100
		END AS DISCOUNT_OF_EX_FACTORY_ACTUALS
	,CASE 
		WHEN @DEDUCTION_INC = 0
			THEN NULL
		ELSE ((ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(pfd.EX_FACTORY_SALES_PROJ, 0)) * 100
		END AS DISCOUNT_OF_EX_FACTORY_PROJECTED
FROM #SALES S
LEFT JOIN PRODUCT_FILE_DATA PFD ON PFD.PERIOD = S.PERIOD
	AND S.YEAR = PFD.YEAR
LEFT JOIN COMP_PRODUCT_FILE_DATA CPFD ON CPFD.PERIOD = S.PERIOD
	AND S.YEAR = CPFD.YEAR
LEFT JOIN #PPA_SUPP_MANDATED PSM ON S.YEAR = PSM.YEAR
	AND S.PERIOD = PSM.PERIOD
LEFT JOIN #DISCOUNT ND ON S.YEAR = ND.YEAR
	AND S.PERIOD = ND.PERIOD

------------------BASED ON THE SCREEN NAME -ASSUMPTIONS IT WILL DISPALY OUTPUT OF ONE PARTICULAR CFF---------------------  
IF @SCREEN_NAME = 'ASSUMPTIONS'
BEGIN
	SELECT CFF_PROJECTION_MASTER_SID
		,EX_FACTORY_SALES_ACTUALS
		,EX_FACTORY_SALES_PROJ
		,YEAR
		,PERIOD
		,CONTRACT_SALES_ACTUALS
		,CONTRACT_SALES_PROJECTED
		,CONTRACT_UNITS_ACTUALS
		,CONTRACT_UNITS_PROJECTED
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,EX_FACTORY_SALES_ACTUALS_PERCENT
		,EX_FACTORY_SALES_PROJECTED_PERCENT
		,PPA_DISCOUNT
		,PPA_DISCOUNT_PROJECTED
		,PPA_DISCOUNT_PERCENTAGE
		,PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,MANDATED_DISCOUNT_ACTUALS
		,MANDATED_DISCOUNT_PROJECTED
		,SUPPLEMENTAL_DISCOUNT_ACTUALS
		,SUPPLEMENTAL_DISCOUNT_PROJECTED
		,MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
		,MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
		,SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
		,SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,NET_SALES
		,NET_SALES_PROJECTED
		,DEMAND_SALES_ACTUAL
		,DEMAND_SALES_PROJECTED
		,INVENTORY_WITHDRAWAL_ACTUAL
		,INVENTORY_WITHDRAWAL_PROJECTED
		,DEMAND_SALES_ACTUAL_PERCENT
		,DEMAND_SALES_PROJECTED_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,TOTAL_DISCOUNT_RPU_ACTUALS
		,TOTAL_DISCOUNT_RPU_PROJECTED
		,TOTAL_PPA_RPU_ACTUALS
		,TOTAL_PPA_RPU_PROJECTED
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,COGS_ACTUAL
		,COGS_PROJECTED
		,NET_PROFIT_ACTUAL
		,NET_PROFIT_PROJECTED
		,
		--RETURNS_ACTUAL_AMOUNT,  
		--RETURNS_ACTUAL_PERCENTAGE,  
		--RETURNS_PROJECTED_AMOUNT,  
		--RETURNS_PROJECTED_PERCENTAGE,  
		--TOTAL_RETURNS_RPU_ACTAULS,  
		--TOTAL_RETURNS_RPU_PROJECTED,  
		ADJUSTED_DEMAND_ACTUALS
		,ADJUSTED_DEMAND_PROJ
		,CUST_EX_FACTORY_SALES_ACTUALS
		,CUST_EX_FACTORY_SALES_PROJ
		,IW_DETAILS_ACTUALS
		,IW_DETAILS_PROJ
		,ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
		,ADJUSTED_DEMAND_PROJ_PERCENTAGE
		,CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
		,CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
		,IW_DETAILS_ACTUALS_PERCENTAGE
		,IW_DETAILS_PROJ_PERCENTAGE
		,NET_SALES_OF_EX_FACTORY_ACTUALS
		,NET_SALES_OF_EX_FACTORY_PROJECTED
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
	FROM #RESULT
	ORDER BY CASE 
			WHEN @VIEW = 'PIVOT'
				THEN YEAR
			ELSE PERIOD
			END
		,CASE 
			WHEN @VIEW = 'PIVOT'
				THEN PERIOD
			ELSE YEAR
			END
END

----------------------------PULLING CCP LEVEL INFORMATION OTHER THAN FIRST CFF------------------------  
IF @SCREEN_NAME <> 'ASSUMPTIONS'
BEGIN
		;

	IF OBJECT_ID('TEMPDB..#CFF_DETAILS') IS NOT NULL
		DROP TABLE #CFF_DETAILS

	SELECT CFF_DETAILS_SID
		,CFF_MASTER_SID
		,PROJECTION_MASTER_SID
		,CCP_DETAILS_SID
		,INBOUND_STATUS
		,SALES_INCLUSION
	INTO #CFF_DETAILS
	FROM CFF_DETAILS
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER T
			WHERE T.CFF_PROJECTION_MASTER_SID = CFF_MASTER_SID
			)
		AND (
			EXISTS (
				SELECT TOKEN
				FROM UDF_SPLITSTRING(@CCP, ',') U
				WHERE U.TOKEN = CCP_DETAILS_SID
				)
			OR @CCP IS NULL
			)
AND EXISTS (SELECT 1 FROM #CCP_INFO A WHERE A.CCP_DETAILS_SID=CCP_DETAILS_SID)
	----------------------------PULLING RESTRICITING SELECTED CCP LEVEL INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_CPP_INFO') IS NOT NULL
		DROP TABLE #PRIOR_CPP_INFO

	SELECT CD.CFF_MASTER_SID
		,PD.PROJECTION_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,PD.CCP_DETAILS_SID
	INTO #PRIOR_CPP_INFO
	FROM PROJECTION_DETAILS PD
	JOIN CFF_DETAILS CD ON CD.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
		AND CD.CCP_DETAILS_SID = PD.CCP_DETAILS_SID
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER T
			WHERE ID <> 1
				AND CD.CFF_MASTER_SID = T.CFF_PROJECTION_MASTER_SID
			)
		AND (
			EXISTS (
				SELECT TOKEN
				FROM UDF_SPLITSTRING(@CCP, ',') U
				WHERE U.TOKEN = PD.CCP_DETAILS_SID
				)
			OR @CCP IS NULL
			)
AND EXISTS (SELECT 1 FROM #CCP_INFO A WHERE A.CCP_DETAILS_SID=cd.CCP_DETAILS_SID)
	----------------------------PULLING DEDUCTION INCLUSION  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_DISC_INFORMATION') IS NOT NULL
		DROP TABLE #PRIOR_DISC_INFORMATION

	SELECT DISTINCT CF.CFF_MASTER_SID
		,CC.CCP_DETAILS_SID
		,PD.PROJECTION_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,CDI.RS_MODEL_SID
	INTO #PRIOR_DISC_INFORMATION
	FROM CFF_DEDUCTION_INCLUSION CDI
	JOIN CFF_DETAILS CF ON CF.CFF_DETAILS_SID = CDI.CFF_DETAILS_SID
	JOIN CCP_DETAILS CC ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
		AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER T
			WHERE ID <> 1
				AND CF.CFF_MASTER_SID = T.CFF_PROJECTION_MASTER_SID
			)
		AND DEDUCTION_INCLUSION = 'Y'
			AND EXISTS (SELECT 1 FROM #CCP_INFO A WHERE A.CCP_DETAILS_SID=cf.CCP_DETAILS_SID)
	----------------------------PULLING SALESINCLUSION  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_SALES_INFORMATION') IS NOT NULL
		DROP TABLE #PRIOR_SALES_INFORMATION

	SELECT DISTINCT CF.CFF_MASTER_SID
		,CC.CCP_DETAILS_SID
		,PD.PROJECTION_MASTER_SID
		,PD.PROJECTION_DETAILS_SID
		,CC.ITEM_MASTER_SID
	INTO #PRIOR_SALES_INFORMATION
	FROM CCP_DETAILS CC
	JOIN CFF_DETAILS CF ON CF.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	JOIN PROJECTION_DETAILS PD ON PD.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
		AND CF.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
	WHERE EXISTS (
			SELECT CFF_PROJECTION_MASTER_SID
			FROM #CFF_PROJECTION_MASTER T
			WHERE ID <> 1
				AND CF.CFF_MASTER_SID = T.CFF_PROJECTION_MASTER_SID
			)
		AND SALES_INCLUSION = 'Y'
		AND EXISTS (SELECT 1 FROM #CCP_INFO A WHERE A.CCP_DETAILS_SID=cf.CCP_DETAILS_SID)
	----------------------------PULLING SALESINCLUSION&DEDUTION INCLUSION   LEVEL INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_INCLUSION') IS NOT NULL
		DROP TABLE #PRIOR_INCLUSION

	SELECT PM.CFF_PROJECTION_MASTER_SID
		,CASE 
			WHEN PSI.CFF_MASTER_SID IS NOT NULL
				THEN 1
			ELSE 0
			END AS SALES_INC
		,CASE 
			WHEN PDI.CFF_MASTER_SID IS NOT NULL
				THEN 1
			ELSE 0
			END AS DEDUCTION_INC
	INTO #PRIOR_INCLUSION
	FROM #CFF_PROJECTION_MASTER PM
	LEFT JOIN (
		SELECT DISTINCT CFF_MASTER_SID
		FROM #PRIOR_SALES_INFORMATION
		) PSI ON PSI.CFF_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
	LEFT JOIN (
		SELECT DISTINCT CFF_MASTER_SID
		FROM #PRIOR_DISC_INFORMATION
		) PDI ON PDI.CFF_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
	WHERE ID <> 1

	----------------------------PULLING DISCOUNT OF PROJECTED  LEVEL INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_DISCOUNT_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_DISCOUNT_PROJECTION

	SELECT SUM(NSP.PROJECTION_SALES) AS PROJECTION_SALES
		,PERIOD
		,YEAR
		,
		--  RS_NAME,  
		--NSP.RS_MODEL_SID,  
		PRDI.CFF_MASTER_SID
	INTO #PRIOR_NM_DISCOUNT_PROJECTION
	FROM NM_DISCOUNT_PROJECTION NSP
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		----JOIN RS_MODEL RM  
		----  ON RM.RS_MODEL_SID = NSP.RS_MODEL_SID  
		AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN #PRIOR_DISC_INFORMATION PRDI ON C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
		AND PRDI.RS_MODEL_SID = NSP.RS_MODEL_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,
		--- NSP.RS_MODEL_SID,  
		--- RS_NAME,  
		PRDI.CFF_MASTER_SID

	----------------------------PULLING DISCOUNT OF ACTULS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_ACTUAL_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_DISCOUNT

	SELECT SUM(NAD.ACTUAL_SALES) AS ACTUAL_SALES
		,PERIOD
		,YEAR
		,
		--  RS_NAME,  
		-- NAD.RS_MODEL_SID,  
		PRDI.CFF_MASTER_SID
	INTO #PRIOR_NM_ACTUAL_DISCOUNT
	FROM NM_ACTUAL_DISCOUNT NAD
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		--JOIN RS_MODEL RM  
		--  ON RM.RS_MODEL_SID = NAD.RS_MODEL_SID  
		AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN #PRIOR_DISC_INFORMATION PRDI ON C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
		AND PRDI.RS_MODEL_SID = NAD.RS_MODEL_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,
		---     RS_NAME,  
		---   NAD.RS_MODEL_SID,  
		PRDI.CFF_MASTER_SID

	----------------------------PULLING   PPA PROJECTIONS VALUES    INFORMATION OTHER THAN FIRST CFF------------------------ 
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_PPA_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_PPA_PROJECTION

	SELECT SUM(NSP.PROJECTION_DISCOUNT_DOLLAR) PROJECTION_DISCOUNT_DOLLAR
		,PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID
	INTO #PRIOR_NM_PPA_PROJECTION
	FROM NM_PPA_PROJECTION NSP
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,CCP_DETAILS_SID
			,PROJECTION_MASTER_SID
			,PROJECTION_DETAILS_SID
		FROM #PRIOR_DISC_INFORMATION
		) PRDI ON PRDI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND PRDI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID

	----------------------------PULLING   PPA ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_ACTUAL_PPA') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_PPA

	SELECT SUM(NAD.ACTUAL_DISCOUNT_DOLLAR) ACTUAL_DISCOUNT_DOLLAR
		,PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID
	INTO #PRIOR_NM_ACTUAL_PPA
	FROM NM_ACTUAL_PPA NAD
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,CCP_DETAILS_SID
			,PROJECTION_MASTER_SID
			,PROJECTION_DETAILS_SID
		FROM #PRIOR_DISC_INFORMATION
		) PRDI ON PRDI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND PRDI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID

	-----------------------PULLING   SUPLEMTNAL ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_M_SUPPLEMENTAL_DISC_PROJ') IS NOT NULL
		DROP TABLE #PRIOR_M_SUPPLEMENTAL_DISC_PROJ

	SELECT SUM(NSP.PROJECTION_SALES) PROJECTION_SALES
		,PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID
	INTO #PRIOR_M_SUPPLEMENTAL_DISC_PROJ
	FROM M_SUPPLEMENTAL_DISC_PROJ NSP
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,CCP_DETAILS_SID
			,PROJECTION_MASTER_SID
			,PROJECTION_DETAILS_SID
		FROM #PRIOR_DISC_INFORMATION
		) PRDI ON PRDI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND PRDI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID

	-----------------------PULLING   SUPLEMTNAL PROJECTIONS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS') IS NOT NULL
		DROP TABLE #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS

	SELECT SUM(NAD.ACTUAL_SALES) ACTUAL_SALES
		,PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID
	INTO #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS
	FROM M_SUPPLEMENTAL_DISC_ACTUALS NAD
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,CCP_DETAILS_SID
			,PROJECTION_MASTER_SID
			,PROJECTION_DETAILS_SID
		FROM #PRIOR_DISC_INFORMATION
		) PRDI ON PRDI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND PRDI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID

	-----------------------PULLING   MANDTED DISCOUNT PROJECTIONS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_M_DISCOUNT_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_M_DISCOUNT_PROJECTION

	SELECT SUM(NSP.PROJECTION_SALES) PROJECTION_SALES
		,PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID
	INTO #PRIOR_M_DISCOUNT_PROJECTION
	FROM M_DISCOUNT_PROJECTION NSP
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
		AND SAVE_FLAG = 1
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,CCP_DETAILS_SID
			,PROJECTION_MASTER_SID
			,PROJECTION_DETAILS_SID
		FROM #PRIOR_DISC_INFORMATION
		) PRDI ON PRDI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND PRDI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID

	-----------------------PULLING   MANDTED DISCOUNT ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_ACTUAL_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_M_ACTUAL_DISCOUNT

	SELECT SUM(NAD.ACTUAL_SALES) ACTUAL_SALES
		,PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID
	INTO #PRIOR_M_ACTUAL_DISCOUNT
	FROM M_ACTUAL_DISCOUNT NAD
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
		AND SAVE_FLAG = 1
	JOIN (
		SELECT DISTINCT CFF_MASTER_SID
			,CCP_DETAILS_SID
			,PROJECTION_MASTER_SID
			,PROJECTION_DETAILS_SID
		FROM #PRIOR_DISC_INFORMATION
		) PRDI ON PRDI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRDI.PROJECTION_DETAILS_SID
		AND PRDI.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
		AND C.CFF_MASTER_SID = PRDI.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRDI.CFF_MASTER_SID

	-----------------------PULLING  NON  MANDTED SALES PROJECTIONS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_SALES_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_NM_SALES_PROJECTION

	SELECT SUM(PROJECTION_SALES) PROJECTION_SALES
		,SUM(PROJECTION_UNITS) PROJECTION_UNITS
		,SUM(PROJECTION_SALES * U.ITEM_PRICE) AS NM_COGS_PROJECTED
		,PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID
	INTO #PRIOR_NM_SALES_PROJECTION
	FROM NM_SALES_PROJECTION NSP
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN #PRIOR_SALES_INFORMATION PRSI ON PRSI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRSI.PROJECTION_DETAILS_SID
		AND C.PROJECTION_MASTER_SID = PRSI.PROJECTION_MASTER_SID
		AND PRSI.CFF_MASTER_SID = C.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	LEFT JOIN #ITEM_PRICING U ON PRSI.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND NSP.PERIOD_SID = U.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID

	-----------------------PULLING  NON  MANDTED SALES ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_NM_ACTUAL_SALES') IS NOT NULL
		DROP TABLE #PRIOR_NM_ACTUAL_SALES

	SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
		,SUM(ACTUAL_UNITS) ACTUAL_UNITS
		,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS NM_COGS_ACTUAL
		,PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID
	INTO #PRIOR_NM_ACTUAL_SALES
	FROM NM_ACTUAL_SALES NAD
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN #PRIOR_SALES_INFORMATION PRSI ON PRSI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRSI.PROJECTION_DETAILS_SID
		AND C.PROJECTION_MASTER_SID = PRSI.PROJECTION_MASTER_SID
		AND PRSI.CFF_MASTER_SID = C.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	LEFT JOIN #ITEM_PRICING U ON PRSI.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND NAD.PERIOD_SID = U.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID

	--IF OBJECT_ID('TEMPDB..#PRIOR_RETURNS') IS NOT NULL  
	--  DROP TABLE #PRIOR_RETURNS  
	--SELECT YEAR,  
	--       PERIOD,  
	--       AVG(TR.ACTUAL_RATE)    ACTUAL_RATE,  
	--       AVG(TR.PROJECTED_RATE) PROJECTED_RATE,  
	--       C.CFF_MASTER_SID  
	--INTO   #PRIOR_RETURNS  
	--FROM   #TEMP_RETURNS TR  
	--       JOIN CCP_DETAILS PRSI  
	--         ON TR.ITEM_MASTER_SID = PRSI.ITEM_MASTER_SID  
	--       JOIN #PRIOR_CPP_INFO C  
	--         ON C.CCP_DETAILS_SID = PRSI.CCP_DETAILS_SID  
	--       JOIN #PERIOD P  
	--         ON P.PERIOD_SID = TR.PERIOD_SID  
	--GROUP  BY YEAR,  
	--          PERIOD,  
	--          C.CFF_MASTER_SID  
	--SELECT YEAR,  
	--       PERIOD,  
	--       ISNULL(SUM(( ISNULL(NSP.PROJECTION_SALES, 0)  
	--             + ISNULL(MSP.PROJECTION_SALES, 0) ) * TR.PROJECTED_RATE),0) AS RETURNS_PROJECTED,
	--       ISNULL(SUM(( ISNULL(NAS.ACTUAL_SALES, 0)  
	--             + ISNULL(MAS.ACTUAL_SALES, 0) ) * TR.ACTUAL_RATE)  ,0)      AS RETURNS_ACTUALS,
	--       CFF_MASTER_SID  
	--INTO   #PRIOR_RETURNS  
	--FROM   #TEMP_RETURNS TR  
	--       JOIN CCP_DETAILS CC  
	--         ON TR.ITEM_MASTER_SID = CC.ITEM_MASTER_SID  
	--       JOIN #PRIOR_CPP_INFO C  
	--         ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID  
	--       JOIN #PERIOD P  
	--         ON P.PERIOD_SID = TR.PERIOD_SID  
	--       LEFT OUTER JOIN NM_SALES_PROJECTION NSP  
	--                    ON NSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
	--                       AND P.PERIOD_SID = NSP.PERIOD_SID  
	--                       AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
	--       LEFT OUTER JOIN M_SALES_PROJECTION MSP  
	--                    ON MSP.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
	--                       AND P.PERIOD_SID = MSP.PERIOD_SID  
	--                       AND MSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID AND @PROJ_END_PERIOD_SID
	--       LEFT OUTER JOIN NM_ACTUAL_SALES NAS  
	--                    ON NAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
	--                       AND P.PERIOD_SID = NAS.PERIOD_SID  
	--                       AND NAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
	--       LEFT OUTER JOIN M_ACTUAL_SALES MAS  
	--                    ON MAS.PROJECTION_DETAILS_SID = C.PROJECTION_DETAILS_SID  
	--                       AND P.PERIOD_SID = MAS.PERIOD_SID  
	--                       AND MAS.PERIOD_SID BETWEEN @ACT_START_PERIOD_SID AND @ACT_END_PERIOD_SID
	--GROUP  BY YEAR,  
	--          PERIOD,  
	--          CFF_MASTER_SID  
	-----------------------PULLING   MANDTED SALES PROJETIONS   INFORMATION OTHER THAN FIRST CFF------------------------
	IF OBJECT_ID('TEMPDB..#PRIOR_M_SALES_PROJECTION') IS NOT NULL
		DROP TABLE #PRIOR_M_SALES_PROJECTION

	SELECT SUM(PROJECTION_SALES) PROJECTION_SALES
		,SUM(PROJECTION_UNITS) PROJECTION_UNITS
		,SUM(PROJECTION_SALES * U.ITEM_PRICE) AS M_COGS_PROJECTED
		,PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID
	INTO #PRIOR_M_SALES_PROJECTION
	FROM M_SALES_PROJECTION NSP
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NSP.PROJECTION_DETAILS_SID
		AND NSP.PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
			AND @PROJ_END_PERIOD_SID
	JOIN #PRIOR_SALES_INFORMATION PRSI ON PRSI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRSI.PROJECTION_DETAILS_SID
		AND C.PROJECTION_MASTER_SID = PRSI.PROJECTION_MASTER_SID
		AND PRSI.CFF_MASTER_SID = C.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NSP.PERIOD_SID
	JOIN CCP_DETAILS CC ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CC.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND NSP.PERIOD_SID = U.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID

	-----------------------PULLING    MANDTED SALES ACTUALS   INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_M_ACTUAL_SALES') IS NOT NULL
		DROP TABLE #PRIOR_M_ACTUAL_SALES

	SELECT SUM(ACTUAL_SALES) ACTUAL_SALES
		,SUM(ACTUAL_UNITS) ACTUAL_UNITS
		,SUM(ACTUAL_SALES * U.ITEM_PRICE) AS M_COGS_ACTUAL
		,PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID
	INTO #PRIOR_M_ACTUAL_SALES
	FROM M_ACTUAL_SALES NAD
	JOIN #PRIOR_CPP_INFO C ON C.PROJECTION_DETAILS_SID = NAD.PROJECTION_DETAILS_SID
		AND NAD.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
			AND @ACT_END_PERIOD_SID
	JOIN #PRIOR_SALES_INFORMATION PRSI ON PRSI.CCP_DETAILS_SID = C.CCP_DETAILS_SID
		AND C.PROJECTION_DETAILS_SID = PRSI.PROJECTION_DETAILS_SID
		AND C.PROJECTION_MASTER_SID = PRSI.PROJECTION_MASTER_SID
		AND PRSI.CFF_MASTER_SID = C.CFF_MASTER_SID
	JOIN #PERIOD P ON P.PERIOD_SID = NAD.PERIOD_SID
	JOIN CCP_DETAILS CC ON C.CCP_DETAILS_SID = CC.CCP_DETAILS_SID
	LEFT JOIN #ITEM_PRICING U ON CC.ITEM_MASTER_SID = U.ITEM_MASTER_SID
		AND NAD.PERIOD_SID = U.PERIOD_SID
	GROUP BY PERIOD
		,YEAR
		,PRSI.CFF_MASTER_SID

	-----------------------AGGREGATING     MANDATED&NON MANDATED SALES OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_SALES') IS NOT NULL
		DROP TABLE #PRIOR_SALES

	SELECT FD.YEAR
		,FD.PERIOD
		,FD.CFF_MASTER_SID
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_SALES), 0) + COALESCE((MSP.PROJECTION_SALES), 0)
			END AS PROJECTION_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_UNITS), 0) + COALESCE((MSP.PROJECTION_UNITS), 0)
			END AS PROJECTION_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_SALES), 0) + COALESCE((MAS.ACTUAL_SALES), 0)
			END AS ACTUAL_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_UNITS), 0) + COALESCE((MAS.ACTUAL_UNITS), 0)
			END AS ACTUAL_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MSP.M_COGS_PROJECTED), 0) + COALESCE((NSP.NM_COGS_PROJECTED), 0)
			END AS COGS_PROJECTED
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MAS.M_COGS_ACTUAL), 0) + COALESCE((NAS.NM_COGS_ACTUAL), 0)
			END AS COGS_ACTUAL
		,
		--RETURNS_ACTUALS = CASE  
		--                    WHEN  DEDUCTION_INC = 0 THEN NULL  
		--                    ELSE RETURNS_ACTUALS  
		--                  END,  
		--RETURNS_PROJECTED = CASE  
		--                      WHEN  DEDUCTION_INC = 0 THEN NULL  
		--                      ELSE RETURNS_PROJECTED  
		--                    END,  
		--ACTUAL_RATE = ( CASE  
		--                  WHEN @SALES_INC = 0  
		--                        OR @DEDUCTION_INC = 0 THEN NULL  
		--                  ELSE ISNULL(( RETURNS_ACTUALS / NULLIF(COALESCE((NAS.ACTUAL_SALES), 0)  
		--                                                         + COALESCE((MAS.ACTUAL_SALES), 0), 0) ), 0)
		--                END ),  
		--PROJECTED_RATE = ( CASE  
		--                     WHEN @SALES_INC = 0  
		--                           OR @DEDUCTION_INC = 0 THEN NULL  
		--                     ELSE ISNULL(( RETURNS_PROJECTED / NULLIF(COALESCE((NSP.PROJECTION_SALES), 0)
		--                                                              + COALESCE((MSP.PROJECTION_SALES), 0), 0) ), 0)
		--END ),  
		CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_SALES), 0)
			END AS NM_ACTUAL_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_SALES), 0)
			END AS NM_PROJECTED_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_UNITS), 0)
			END AS NM_ACTUAL_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_UNITS), 0)
			END AS NM_PROJECTED_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MAS.ACTUAL_SALES), 0)
			END AS M_ACTUAL_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MSP.PROJECTION_SALES), 0)
			END AS M_PROJECTED_SALES
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MAS.ACTUAL_UNITS), 0)
			END AS M_ACTUAL_UNITS
		,CASE 
			WHEN SALES_INC = 0
				THEN NULL
			ELSE COALESCE((MSP.PROJECTION_UNITS), 0)
			END AS M_PROJECTED_UNITS
	INTO #PRIOR_SALES
	FROM (
		SELECT *
		FROM (
			SELECT PM.CFF_PROJECTION_MASTER_SID AS CFF_MASTER_SID
				,SALES_INC
				,DEDUCTION_INC
			FROM #CFF_PROJECTION_MASTER PM
			JOIN #PRIOR_INCLUSION PI ON PI.CFF_PROJECTION_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
			WHERE ID <> 1
			) A
		CROSS JOIN (
			SELECT DISTINCT PERIOD
				,YEAR
			FROM #PERIOD
			WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
					AND @PROJ_END_PERIOD_SID
			) B
		) FD
	LEFT JOIN #PRIOR_NM_SALES_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_M_SALES_PROJECTION MSP ON MSP.YEAR = FD.YEAR
		AND MSP.PERIOD = FD.PERIOD
		AND MSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_NM_ACTUAL_SALES NAS ON NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD
		AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_M_ACTUAL_SALES MAS ON MAS.YEAR = FD.YEAR
		AND MAS.PERIOD = FD.PERIOD
		AND MAS.CFF_MASTER_SID = FD.CFF_MASTER_SID

	--LEFT JOIN #PRIOR_RETURNS TR  
	--       ON TR.YEAR = FD.YEAR  
	--          AND TR.PERIOD = FD.PERIOD  
	--          AND TR.CFF_MASTER_SID = FD.CFF_MASTER_SID  
	-----------------------AGGREGATING     NON MANDATED DISCOUNT OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_DISCOUNT') IS NOT NULL
		DROP TABLE #PRIOR_DISCOUNT

	SELECT FD.YEAR
		,FD.PERIOD
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_SALES), 0)
			END AS PROJECTION_SALES
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((NAD.ACTUAL_SALES), 0)
			END AS ACTUAL_SALES
		,FD.CFF_MASTER_SID
	INTO #PRIOR_DISCOUNT
	FROM (
		SELECT *
		FROM (
			SELECT PM.CFF_PROJECTION_MASTER_SID AS CFF_MASTER_SID
				,SALES_INC
				,DEDUCTION_INC
			FROM #CFF_PROJECTION_MASTER PM
			JOIN #PRIOR_INCLUSION PI ON PI.CFF_PROJECTION_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
			WHERE ID <> 1
			) A
		CROSS JOIN (
			SELECT DISTINCT PERIOD
				,YEAR
			FROM #PERIOD
			WHERE PERIOD_SID BETWEEN @PROJ_START_PERIOD_SID
					AND @PROJ_END_PERIOD_SID
			) B
		) FD
	LEFT OUTER JOIN #PRIOR_NM_DISCOUNT_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND FD.CFF_MASTER_SID = NSP.CFF_MASTER_SID
	LEFT OUTER JOIN #PRIOR_NM_ACTUAL_DISCOUNT NAD ON NAD.YEAR = FD.YEAR
		AND NAD.PERIOD = FD.PERIOD
		AND FD.CFF_MASTER_SID = NAD.CFF_MASTER_SID

	-----------------------PULLING    PPA AND SUPPLEMENTAL OF BOTH ACTUALS AND PROJECTIONS INFORMATION OTHER THAN FIRST CFF------------------------  
	IF OBJECT_ID('TEMPDB..#PRIOR_PPA_SUPP_MANDATED') IS NOT NULL
		DROP TABLE #PRIOR_PPA_SUPP_MANDATED

	SELECT FD.YEAR
		,FD.PERIOD
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((NSP.PROJECTION_DISCOUNT_DOLLAR), 0)
			END AS PPA_DISCOUNT_PROJECTED
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((SDP.PROJECTION_SALES), 0)
			END AS SUPPLEMENTAL_DISCOUNT_PROJECTED
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((MDP.PROJECTION_SALES), 0)
			END AS MANDATED_DISCOUNT_PROJECTED
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((NAS.ACTUAL_DISCOUNT_DOLLAR), 0)
			END AS PPA_ACTUAL_SALES
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((SDA.ACTUAL_SALES), 0)
			END AS SUPPLEMENTAL_DISCOUNT_ACTUALS
		,CASE 
			WHEN DEDUCTION_INC = 0
				THEN NULL
			ELSE COALESCE((MAD.ACTUAL_SALES), 0)
			END AS MANDATED_DISCOUNT_ACTUALS
		,FD.CFF_MASTER_SID
	INTO #PRIOR_PPA_SUPP_MANDATED
	FROM (
		SELECT *
		FROM (
			SELECT PM.CFF_PROJECTION_MASTER_SID AS CFF_MASTER_SID
				,SALES_INC
				,DEDUCTION_INC
			FROM #CFF_PROJECTION_MASTER PM
			JOIN #PRIOR_INCLUSION PI ON PI.CFF_PROJECTION_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
			WHERE ID <> 1
			) A
		CROSS JOIN (
			SELECT DISTINCT PERIOD
				,YEAR
			FROM #PERIOD
			WHERE PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
					AND @PROJ_END_PERIOD_SID
			) B
		) FD
	LEFT JOIN #PRIOR_NM_PPA_PROJECTION NSP ON NSP.YEAR = FD.YEAR
		AND NSP.PERIOD = FD.PERIOD
		AND NSP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_NM_ACTUAL_PPA NAS ON NAS.YEAR = FD.YEAR
		AND NAS.PERIOD = FD.PERIOD
		AND NAS.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_M_SUPPLEMENTAL_DISC_PROJ SDP ON SDP.YEAR = FD.YEAR
		AND SDP.PERIOD = FD.PERIOD
		AND SDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_M_SUPPLEMENTAL_DISC_ACTUALS SDA ON SDA.YEAR = FD.YEAR
		AND SDA.PERIOD = FD.PERIOD
		AND SDA.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_M_DISCOUNT_PROJECTION MDP ON MDP.YEAR = FD.YEAR
		AND MDP.PERIOD = FD.PERIOD
		AND MDP.CFF_MASTER_SID = FD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_M_ACTUAL_DISCOUNT MAD ON MAD.YEAR = FD.YEAR
		AND MAD.PERIOD = FD.PERIOD
		AND MAD.CFF_MASTER_SID = FD.CFF_MASTER_SID;

	-----------------------TAKING  ITEM LEVEL VALUES FROM CFF_PRODUCT_LEVEL_FILES_DATA FOR CFF OTHER THAN FIRST  
	WITH PRODUCT_FILE_DATA
	AS (
		SELECT YEAR
			,PERIOD
			,SUM(EX_FACTORY_SALES_ACTUALS) AS EX_FACTORY_SALES_ACTUALS
			,SUM(EX_FACTORY_SALES_PROJ) AS EX_FACTORY_SALES_PROJ
			,SUM(DEMAND_SALES_ACTUALS) AS DEMAND_SALES_ACTUALS
			,SUM(DEMAND_SALES_PROJ) AS DEMAND_SALES_PROJ
			,SUM(ADJUSTED_DEMAND_ACTUALS) AS ADJUSTED_DEMAND_ACTUALS
			,SUM(ADJUSTED_DEMAND_PROJ) AS ADJUSTED_DEMAND_PROJ
			,SUM(IW_MASTER_ACTUALS) AS IW_MASTER_ACTUALS
			,SUM(IW_MASTER_PROJ) AS IW_MASTER_PROJ
			,cf.CFF_MASTER_SID
		FROM CFF_PRODUCT_LEVEL_FILES_DATA CF
		INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
		WHERE EXISTS (
				SELECT 1
				FROM #CFF_PROJECTION_MASTER PM
				WHERE cf.CFF_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
					AND ID <> 1
				)
			AND P.PERIOD_SID BETWEEN COALESCE(@PIVOT_START_PERIOD_SID, @ACT_START_PERIOD_SID)
				AND @PROJ_END_PERIOD_SID
				AND EXISTS (SELECT 1 FROM #PRIOR_CPP_INFO C JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
				WHERE CF.ITEM_MASTER_SID=CD.ITEM_MASTER_SID )
		GROUP BY YEAR
			,PERIOD
			,cf.CFF_MASTER_SID
		)
		,
		-----------------------TAKING  ITEM+COMAPNY LEVEL VALUES FROM CFF_COMP_PRD_LEVEL_FILES_DATA FOR CFF OTHER THAN FIRST
	COMP_PRODUCT_FILE_DATA
	AS (
		SELECT YEAR
			,PERIOD
			,SUM(CUST_EX_FACTORY_SALES_ACTUALS) AS CUST_EX_FACTORY_SALES_ACTUALS
			,SUM(CUST_EX_FACTORY_SALES_PROJ) AS CUST_EX_FACTORY_SALES_PROJ
			,SUM(IW_DETAILS_ACTUALS) AS IW_DETAILS_ACTUALS
			,SUM(IW_DETAILS_PROJ) AS IW_DETAILS_PROJ
			,cf.CFF_MASTER_SID
		FROM CFF_COMP_PRD_LEVEL_FILES_DATA CF
		INNER JOIN #PERIOD P ON P.PERIOD_SID = CF.PERIOD_SID
		WHERE EXISTS (
				SELECT 1
				FROM #CFF_PROJECTION_MASTER PM
				WHERE CF.CFF_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID
					AND ID <> 1
				)
				AND EXISTS (SELECT 1 FROM #PRIOR_CPP_INFO C JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID=C.CCP_DETAILS_SID
				WHERE CF.ITEM_MASTER_SID=CD.ITEM_MASTER_SID
				AND CF.COMPANY_MASTER_SID=CD.COMPANY_MASTER_SID)
		GROUP BY YEAR
			,PERIOD
			,cf.CFF_MASTER_SID
		)
	------------   INSERTING INTO RESULT TABLE WHEN SCREENAME NOT EQUAL TO ASSUMPTIONS---------------  
	INSERT INTO #RESULT (
		CFF_PROJECTION_MASTER_SID
		,EX_FACTORY_SALES_ACTUALS
		,EX_FACTORY_SALES_PROJ
		,YEAR
		,PERIOD
		,CONTRACT_SALES_ACTUALS
		,CONTRACT_SALES_PROJECTED
		,CONTRACT_UNITS_ACTUALS
		,CONTRACT_UNITS_PROJECTED
		,TOTAL_DISCOUNT
		,TOTAL_DISCOUNT_PROJECTED
		,TOTAL_DISCOUNT_PERCENTAGE
		,TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,EX_FACTORY_SALES_ACTUALS_PERCENT
		,EX_FACTORY_SALES_PROJECTED_PERCENT
		,PPA_DISCOUNT
		,PPA_DISCOUNT_PROJECTED
		,PPA_DISCOUNT_PERCENTAGE
		,PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,MANDATED_DISCOUNT_ACTUALS
		,MANDATED_DISCOUNT_PROJECTED
		,SUPPLEMENTAL_DISCOUNT_ACTUALS
		,SUPPLEMENTAL_DISCOUNT_PROJECTED
		,MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
		,MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
		,SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
		,SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,NET_SALES
		,NET_SALES_PROJECTED
		,DEMAND_SALES_ACTUAL
		,DEMAND_SALES_PROJECTED
		,INVENTORY_WITHDRAWAL_ACTUAL
		,INVENTORY_WITHDRAWAL_PROJECTED
		,DEMAND_SALES_ACTUAL_PERCENT
		,DEMAND_SALES_PROJECTED_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,TOTAL_DISCOUNT_RPU_ACTUALS
		,TOTAL_DISCOUNT_RPU_PROJECTED
		,TOTAL_PPA_RPU_ACTUALS
		,TOTAL_PPA_RPU_PROJECTED
		,TOTAL_RPU
		,TOTAL_PROJECTED_RPU
		,COGS_ACTUAL
		,COGS_PROJECTED
		,NET_PROFIT_ACTUAL
		,NET_PROFIT_PROJECTED
		,
		--RETURNS_ACTUAL_AMOUNT,  
		--RETURNS_ACTUAL_PERCENTAGE,  
		--RETURNS_PROJECTED_AMOUNT,  
		--RETURNS_PROJECTED_PERCENTAGE,  
		--TOTAL_RETURNS_RPU_ACTAULS,  
		--TOTAL_RETURNS_RPU_PROJECTED,  
		ADJUSTED_DEMAND_ACTUALS
		,ADJUSTED_DEMAND_PROJ
		,CUST_EX_FACTORY_SALES_ACTUALS
		,CUST_EX_FACTORY_SALES_PROJ
		,IW_DETAILS_ACTUALS
		,IW_DETAILS_PROJ
		,ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
		,ADJUSTED_DEMAND_PROJ_PERCENTAGE
		,CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
		,CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
		,IW_DETAILS_ACTUALS_PERCENTAGE
		,IW_DETAILS_PROJ_PERCENTAGE
		,NET_SALES_OF_EX_FACTORY_ACTUALS
		,NET_SALES_OF_EX_FACTORY_PROJECTED
		,DISCOUNT_OF_EX_FACTORY_ACTUALS
		,DISCOUNT_OF_EX_FACTORY_PROJECTED
		)
	SELECT S.CFF_MASTER_SID
		,ISNULL(PFD.EX_FACTORY_SALES_ACTUALS, 0)
		,ISNULL(PFD.EX_FACTORY_SALES_PROJ, 0)
		,S.YEAR
		,S.PERIOD
		,S.ACTUAL_SALES AS CONTRACT_SALES_ACTUALS
		,S.PROJECTION_SALES AS CONTRACT_SALES_PROJECTED
		,S.ACTUAL_UNITS AS CONTRACT_UNITS_ACTUALS
		,S.PROJECTION_UNITS AS CONTRACT_UNITS_PROJECTED
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)
			END AS TOTAL_DISCOUNT
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)
			END AS TOTAL_DISCOUNT_PROJECTED
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_SALES, 0), 0) * 100
			END AS TOTAL_DISCOUNT_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL((ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(S.PROJECTION_SALES, 0), 0) * 100
			END AS TOTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE (ISNULL(S.ACTUAL_SALES / NULLIF(PFD.EX_FACTORY_SALES_ACTUALS, 0), 0)) * 100
			END AS EX_FACTORY_SALES_ACTUALS_PERCENT
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE (ISNULL(S.PROJECTION_SALES / NULLIF(PFD.EX_FACTORY_SALES_PROJ, 0), 0)) * 100
			END AS EX_FACTORY_SALES_PROJECTED_PERCENT
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(PPA_ACTUAL_SALES, 0)
			END AS PPA_DISCOUNT
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(PPA_DISCOUNT_PROJECTED, 0)
			END AS PPA_DISCOUNT_PROJECTED
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(PPA_ACTUAL_SALES / NULLIF(S.NM_ACTUAL_SALES, 0), 0) * 100
			END AS PPA_DISCOUNT_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.NM_PROJECTED_SALES, 0), 0) * 100
			END AS PPA_DISCOUNT_PROJECTED_PERCENTAGE
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)
			END AS MANDATED_DISCOUNT_ACTUALS
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)
			END AS MANDATED_DISCOUNT_PROJECTED
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0)
			END AS SUPPLEMENTAL_DISCOUNT_ACTUALS
		,CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0)
			END AS SUPPLEMENTAL_DISCOUNT_PROJECTED
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (COALESCE(ISNULL(MANDATED_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100
			END AS MANDATED_DISCOUNT_ACTUALS_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (COALESCE(ISNULL(MANDATED_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100
			END AS MANDATED_DISCOUNT_PROJECTED_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) / NULLIF(S.M_ACTUAL_SALES, 0), 0)) * 100
			END AS SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (COALESCE(ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) / NULLIF(S.M_PROJECTED_SALES, 0), 0)) * 100
			END AS SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC = 0
				THEN NULL
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC <> 0
				THEN (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS) 
			WHEN @SALES_INC <> 0
				AND @DEDUCTION_INC = 0
				THEN ISNULL(S.ACTUAL_SALES, 0)
			ELSE ISNULL(ISNULL(S.ACTUAL_SALES,0) - (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS), 0)
			END AS NET_SALES
		,CASE 
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC = 0
				THEN NULL
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC <> 0
				THEN (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED) 
			WHEN @SALES_INC <> 0
				AND @DEDUCTION_INC = 0
				THEN ISNULL(S.PROJECTION_SALES, 0)
			ELSE ISNULL(ISNULL(S.PROJECTION_SALES,0) - (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED), 0)
			END AS NET_SALES_PROJECTED
		,ISNULL(PFD.DEMAND_SALES_ACTUALS, 0) AS DEMAND_SALES_ACTUAL
		,ISNULL(PFD.DEMAND_SALES_PROJ, 0) AS DEMAND_SALES_PROJECTED
		,ISNULL(PFD.IW_MASTER_ACTUALS, 0) AS INVENTORY_WITHDRAWAL_ACTUAL
		,ISNULL(PFD.IW_MASTER_PROJ, 0) AS INVENTORY_WITHDRAWAL_PROJECTED
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE (ISNULL(S.ACTUAL_SALES / NULLIF(PFD.DEMAND_SALES_ACTUALS, 0), 0)) * 100
			END AS DEMAND_SALES_ACTUAL_PERCENT
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE (ISNULL(S.PROJECTION_SALES / NULLIF(PFD.DEMAND_SALES_PROJ, 0), 0)) * 100
			END AS DEMAND_SALES_PROJECTED_PERCENT
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE (ISNULL(S.ACTUAL_SALES / NULLIF(PFD.IW_MASTER_ACTUALS, 0), 0)) * 100
			END AS INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE (ISNULL(S.PROJECTION_SALES / NULLIF(PFD.IW_MASTER_PROJ, 0), 0)) * 100
			END AS INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (ISNULL(ND.ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0))
			END AS TOTAL_DISCOUNT_RPU_ACTUALS
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (ISNULL(ND.PROJECTION_SALES / NULLIF(S.PROJECTION_UNITS, 0), 0))
			END AS TOTAL_DISCOUNT_RPU_PROJECTED
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (ISNULL(PPA_ACTUAL_SALES / NULLIF(S.ACTUAL_UNITS, 0), 0))
			END AS TOTAL_PPA_RPU_ACTUALS
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE (ISNULL(PPA_DISCOUNT_PROJECTED / NULLIF(S.PROJECTION_UNITS, 0), 0))
			END AS TOTAL_PPA_RPU_PROJECTED
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(S.ACTUAL_UNITS, 0), 0)
			END AS TOTAL_RPU
		,CASE 
			WHEN @SALES_INC = 0
				OR @DEDUCTION_INC = 0
				THEN NULL
			ELSE ISNULL((ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED) / NULLIF(S.PROJECTION_UNITS, 0), 0)
			END AS TOTAL_PROJECTED_RPU
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.COGS_ACTUAL, 0)
			END
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.COGS_PROJECTED, 0)
			END
		,CASE 
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC = 0
				THEN NULL
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC <> 0
				THEN (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS) 
			WHEN @SALES_INC <> 0
				AND @DEDUCTION_INC = 0
				THEN ISNULL(S.ACTUAL_SALES,0) - ISNULL(S.COGS_ACTUAL, 0)
			ELSE ISNULL(( (ISNULL(S.ACTUAL_SALES,0) - (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS) )- (ISNULL(S.COGS_ACTUAL, 0))), 0)
			END AS NET_PROFIT_ACTUAL
		,CASE 
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC = 0
				THEN NULL
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC <> 0
				THEN (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED)
			WHEN @SALES_INC <> 0
				AND @DEDUCTION_INC = 0
				THEN  ISNULL(S.PROJECTION_SALES,0) - ISNULL(S.COGS_PROJECTED, 0)
			ELSE ISNULL((( ISNULL(S.PROJECTION_SALES,0) - (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED)) - (ISNULL(S.COGS_PROJECTED, 0))), 0)
			END AS NET_PROFIT_PROJECTED
		,
		--RETURNS_ACTUAL_AMOUNT = S.RETURNS_ACTUALS,   
		--RETURNS_ACTUAL_PERCENTAGE = CASE  
		--                              WHEN @SALES_INC = 0  
		--                                    OR @DEDUCTION_INC = 0 THEN NULL  
		--                              ELSE ISNULL(S.ACTUAL_RATE, 0)  
		--                            END,  
		--RETURNS_PROJECTED_AMOUNT = S.RETURNS_PROJECTED,  
		--RETURNS_PROJECTED_PERCENTAGE = CASE  
		--                                 WHEN @SALES_INC = 0  
		--                                       OR @DEDUCTION_INC = 0 THEN NULL  
		--                                 ELSE ISNULL(S.PROJECTED_RATE, 0)  
		--                               END,  
		--TOTAL_RETURNS_RPU_ACTAULS = CASE  
		--                              WHEN @SALES_INC = 0  
		--                                    OR @DEDUCTION_INC = 0 THEN NULL  
		--                              ELSE( ISNULL(S.RETURNS_ACTUALS / NULLIF(S.NM_ACTUAL_UNITS, 0), 0) )
		--                            END,  
		--TOTAL_RETURNS_RPU_PROJECTED = CASE  
		--                                WHEN @SALES_INC = 0  
		--                                      OR @DEDUCTION_INC = 0 THEN NULL  
		--                                ELSE( ISNULL(S.RETURNS_PROJECTED / NULLIF(S.NM_PROJECTED_UNITS, 0), 0) )
		--                              END,  
		ISNULL(PFD.ADJUSTED_DEMAND_ACTUALS, 0)
		,ISNULL(PFD.ADJUSTED_DEMAND_PROJ, 0)
		,ISNULL(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0)
		,ISNULL(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0)
		,ISNULL(CPFD.IW_DETAILS_ACTUALS, 0)
		,ISNULL(CPFD.IW_DETAILS_PROJ, 0)
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.ACTUAL_SALES / NULLIF(PFD.ADJUSTED_DEMAND_ACTUALS, 0), 0) * 100
			END AS ADJUSTED_DEMAND_ACTUALS_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.PROJECTION_SALES / NULLIF(PFD.ADJUSTED_DEMAND_PROJ, 0), 0) * 100
			END AS ADJUSTED_DEMAND_PROJ_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_ACTUALS, 0), 0) * 100
			END AS CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.CUST_EX_FACTORY_SALES_PROJ, 0), 0) * 100
			END AS CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.ACTUAL_SALES / NULLIF(CPFD.IW_DETAILS_ACTUALS, 0), 0) * 100
			END AS IW_DETAILS_ACTUALS_PERCENTAGE
		,CASE 
			WHEN @SALES_INC = 0
				THEN NULL
			ELSE ISNULL(S.PROJECTION_SALES / NULLIF(CPFD.IW_DETAILS_PROJ, 0), 0) * 100
			END IW_DETAILS_PROJ_PERCENTAGE
		,coalesce(((CASE 
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC = 0
				THEN NULL
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC <> 0
				THEN (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS) 
			WHEN @SALES_INC <> 0
				AND @DEDUCTION_INC = 0
				THEN ISNULL(S.ACTUAL_SALES, 0)
			ELSE ISNULL( ISNULL(S.ACTUAL_SALES,0) - (ND.ACTUAL_SALES + PPA_ACTUAL_SALES + SUPPLEMENTAL_DISCOUNT_ACTUALS + MANDATED_DISCOUNT_ACTUALS), 0)
			END) / NULLIF(pfd.EX_FACTORY_SALES_ACTUALS, 0)) * 100,0)
			 AS NET_SALES_OF_EX_FACTORY_ACTUALS
		,coalesce(((CASE 
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC = 0
				THEN NULL
			WHEN @SALES_INC = 0
				AND @DEDUCTION_INC <> 0
				THEN (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED)
			WHEN @SALES_INC <> 0
				AND @DEDUCTION_INC = 0
				THEN ISNULL(S.PROJECTION_SALES, 0)
			ELSE ISNULL( ISNULL(S.PROJECTION_SALES,0) - (ND.PROJECTION_SALES + PPA_DISCOUNT_PROJECTED + SUPPLEMENTAL_DISCOUNT_PROJECTED + MANDATED_DISCOUNT_PROJECTED), 0)
			END) / NULLIF(pfd.EX_FACTORY_SALES_PROJ, 0)) * 100,0)
			 AS NET_SALES_OF_EX_FACTORY_PROJECTED
		,isnull(CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ((ISNULL(ND.ACTUAL_SALES, 0) + ISNULL(PPA_ACTUAL_SALES, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_ACTUALS, 0) + ISNULL(MANDATED_DISCOUNT_ACTUALS, 0)) / NULLIF(pfd.EX_FACTORY_SALES_ACTUALS, 0)) * 100
			END,0) AS DISCOUNT_OF_EX_FACTORY_ACTUALS
		,isnull(CASE 
			WHEN @DEDUCTION_INC = 0
				THEN NULL
			ELSE ((ISNULL(ND.PROJECTION_SALES, 0) + ISNULL(PPA_DISCOUNT_PROJECTED, 0) + ISNULL(SUPPLEMENTAL_DISCOUNT_PROJECTED, 0) + ISNULL(MANDATED_DISCOUNT_PROJECTED, 0)) / NULLIF(pfd.EX_FACTORY_SALES_PROJ, 0)) * 100
			END,0) AS DISCOUNT_OF_EX_FACTORY_PROJECTED
	FROM #PRIOR_SALES S
	JOIN #PRIOR_INCLUSION PI ON PI.CFF_PROJECTION_MASTER_SID = S.CFF_MASTER_SID
	LEFT JOIN PRODUCT_FILE_DATA PFD ON PFD.PERIOD = S.PERIOD
		AND S.YEAR = PFD.YEAR
		AND S.CFF_MASTER_SID = PFD.CFF_MASTER_SID
	LEFT JOIN COMP_PRODUCT_FILE_DATA CPFD ON CPFD.PERIOD = S.PERIOD
		AND S.YEAR = CPFD.YEAR
		AND S.CFF_MASTER_SID = CPFD.CFF_MASTER_SID
	LEFT JOIN #PRIOR_PPA_SUPP_MANDATED PSM ON S.YEAR = PSM.YEAR
		AND S.PERIOD = PSM.PERIOD
		AND S.CFF_MASTER_SID = PSM.CFF_MASTER_SID
	LEFT JOIN #PRIOR_DISCOUNT ND ON S.YEAR = ND.YEAR
		AND S.PERIOD = ND.PERIOD
		AND S.CFF_MASTER_SID = ND.CFF_MASTER_SID

	------------- PIVOTING  THE ACTUAL RESULT--------------------------------------- 
	DECLARE @SQL NVARCHAR(MAX)
		,@LOOP_CNTR INT
		,@MAX_CCP INT

	SET @SQL = ''
	SET @SQL = 'SELECT YEAR, PERIOD,'
	SET @LOOP_CNTR = 1
	SET @MAX_CCP = (
			SELECT Max(ID)
			FROM #CFF_PROJECTION_MASTER
			)

	WHILE @LOOP_CNTR <= @MAX_CCP
	BEGIN
		SET @SQL += 'EX_FACTORY_SALES_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	EX_FACTORY_SALES_ACTUALS	END),
	 EX_FACTORY_SALES_PROJ_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	EX_FACTORY_SALES_PROJ	END),
	 CONTRACT_SALES_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	CONTRACT_SALES_ACTUALS	END),
     CONTRACT_SALES_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	CONTRACT_SALES_PROJECTED	END),
	  CONTRACT_UNITS_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	CONTRACT_UNITS_ACTUALS	END),
      CONTRACT_UNITS_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	CONTRACT_UNITS_PROJECTED	END),
	  TOTAL_DISCOUNT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_DISCOUNT	END),
      TOTAL_DISCOUNT_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_DISCOUNT_PROJECTED	END),
	  TOTAL_DISCOUNT_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_DISCOUNT_PERCENTAGE	END),
      TOTAL_DISCOUNT_PROJECTED_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_DISCOUNT_PROJECTED_PERCENTAGE	END),

	  EX_FACTORY_SALES_ACTUALS_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	EX_FACTORY_SALES_ACTUALS_PERCENT	END),
      EX_FACTORY_SALES_PROJECTED_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	EX_FACTORY_SALES_PROJECTED_PERCENT	END),
	  PPA_DISCOUNT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	PPA_DISCOUNT	END),
      PPA_DISCOUNT_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	PPA_DISCOUNT_PROJECTED	END),
	  PPA_DISCOUNT_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	PPA_DISCOUNT_PERCENTAGE	END),
      PPA_DISCOUNT_PROJECTED_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	PPA_DISCOUNT_PROJECTED_PERCENTAGE	END),

	  MANDATED_DISCOUNT_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	MANDATED_DISCOUNT_ACTUALS	END),
      MANDATED_DISCOUNT_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	MANDATED_DISCOUNT_PROJECTED	END),
	   SUPPLEMENTAL_DISCOUNT_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(
				@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	SUPPLEMENTAL_DISCOUNT_ACTUALS	END),
      SUPPLEMENTAL_DISCOUNT_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	SUPPLEMENTAL_DISCOUNT_PROJECTED	END),
	      MANDATED_DISCOUNT_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	MANDATED_DISCOUNT_ACTUALS_PERCENTAGE	END),
      MANDATED_DISCOUNT_PROJECTED_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	MANDATED_DISCOUNT_PROJECTED_PERCENTAGE	END),
      SUPPLEMENTAL_DISCOUNT_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	SUPPLEMENTAL_DISCOUNT_ACTUALS_PERCENTAGE	END),'
		SET @SQL += 'SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	SUPPLEMENTAL_DISCOUNT_PROJECTED_PERCENTAGE	END),
        NET_SALES_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	NET_SALES	END),

      NET_SALES_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	NET_SALES_PROJECTED	END),
      DEMAND_SALES_ACTUAL_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	DEMAND_SALES_ACTUAL	END),



      DEMAND_SALES_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	DEMAND_SALES_PROJECTED	END),
     INVENTORY_WITHDRAWAL_ACTUAL_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	INVENTORY_WITHDRAWAL_ACTUAL	END),


      INVENTORY_WITHDRAWAL_PROJECTED_' 
			+ Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	INVENTORY_WITHDRAWAL_PROJECTED	END),
								  

	 DEMAND_SALES_ACTUAL_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	DEMAND_SALES_ACTUAL_PERCENT	END),
      DEMAND_SALES_PROJECTED_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	DEMAND_SALES_PROJECTED_PERCENT	END),
								  
	  INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	INVENTORY_WITHDRAWAL_SALES_ACTUAL_PERCENT	END),
      INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	INVENTORY_WITHDRAWAL_SALES_PROJECTED_PERCENT	END),
	       TOTAL_DISCOUNT_RPU_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)
			) + ' THEN 	TOTAL_DISCOUNT_RPU_ACTUALS	END),
      TOTAL_DISCOUNT_RPU_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_DISCOUNT_RPU_PROJECTED	END),
	    TOTAL_PPA_RPU_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_PPA_RPU_ACTUALS	END),
      TOTAL_PPA_RPU_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_PPA_RPU_PROJECTED	END),
    TOTAL_RPU_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_DISCOUNT_RPU_ACTUALS	END),
      TOTAL_PROJECTED_RPU_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	TOTAL_PROJECTED_RPU	END),'
		SET @SQL += 'COGS_ACTUAL_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	COGS_ACTUAL	END),

      COGS_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	COGS_PROJECTED	END),

    NET_PROFIT_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_PROFIT_ACTUAL 	END),

      NET_PROFIT_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN NET_PROFIT_PROJECTED END),
  
      ADJUSTED_DEMAND_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	ADJUSTED_DEMAND_ACTUALS	END),

	   ADJUSTED_DEMAND_PROJ_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	ADJUSTED_DEMAND_PROJ	END),

	   CUST_EX_FACTORY_SALES_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR
				(10)) + ' THEN 	CUST_EX_FACTORY_SALES_ACTUALS	END),
      CUST_EX_FACTORY_SALES_PROJ_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	CUST_EX_FACTORY_SALES_PROJ	END),
	 IW_DETAILS_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	IW_DETAILS_ACTUALS	END),
      IW_DETAILS_PROJ_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	IW_DETAILS_PROJ	END),
	 ADJUSTED_DEMAND_ACTUALS_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	ADJUSTED_DEMAND_ACTUALS_PERCENTAGE	END),

      ADJUSTED_DEMAND_PROJ_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	ADJUSTED_DEMAND_PROJ_PERCENTAGE	END),
      CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + 
			' THEN 	CUST_EX_FACTORY_SALES_ACTUALS_PERCENTAGE	END),

      CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	CUST_EX_FACTORY_SALES_PROJ_PERCENTAGE	END),
	  IW_DETAILS_ACTUALS_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	IW_DETAILS_ACTUALS_PERCENTAGE	END),

      IW_DETAILS_PROJ_PERCENTAGE_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	IW_DETAILS_PROJ_PERCENTAGE	END),
	   NET_SALES_OF_EX_FACTORY_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	NET_SALES_OF_EX_FACTORY_ACTUALS	END),
      NET_SALES_OF_EX_FACTORY_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	NET_SALES_OF_EX_FACTORY_PROJECTED	END),
	 DISCOUNT_OF_EX_FACTORY_ACTUALS_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + 
			' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN 	DISCOUNT_OF_EX_FACTORY_ACTUALS	END),
	 DISCOUNT_OF_EX_FACTORY_PROJECTED_' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' = MAX(CASE WHEN ID = ' + Cast(@LOOP_CNTR AS VARCHAR(10)) + ' THEN DISCOUNT_OF_EX_FACTORY_PROJECTED END ), '
		SET @LOOP_CNTR += 1
	END

	SET @SQL = LEFT(@SQL, Len(@SQL) - 1)
	SET @SQL += ' FROM   #RESULT PR        INNER JOIN #CFF_PROJECTION_MASTER PM        ON PR.CFF_PROJECTION_MASTER_SID = PM.CFF_PROJECTION_MASTER_SID        GROUP  BY [YEAR],PERIOD        ORDER BY [YEAR],PERIOD'

	EXEC SP_EXECUTESQL @SQL
	END


GO