<?xml version="1.0" encoding="UTF-8"?>
<job>
  <name>ACTUAL_MASTER_INTERFACE</name>
    <description/>
    <extended_description/>
    <job_version/>
  <directory>&#47;</directory>
  <created_user>-</created_user>
  <created_date>2013&#47;07&#47;05 14:52:59.959</created_date>
  <modified_user>-</modified_user>
  <modified_date>2013&#47;07&#47;05 14:52:59.959</modified_date>
    <parameters>
    </parameters>
  <connection>
    <name>BPI DB</name>
    <server>${BPI_HOST}</server>
    <type>MSSQL</type>
    <access>Native</access>
    <database>${BPI_DB}</database>
    <port>1433</port>
    <username>${BPI_USER}</username>
    <password>${BPI_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1433</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <connection>
    <name>STAGING DB</name>
    <server>${STAGING_HOST}</server>
    <type>MSSQL</type>
    <access>Native</access>
    <database>${STAGING_DB}</database>
    <port>1433</port>
    <username>${STAGING_USER}</username>
    <password>${STAGING_PASSWORD}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>MSSQL_DOUBLE_DECIMAL_SEPARATOR</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>1433</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
    <slaveservers>
    </slaveservers>
<job-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_JOB</id><enabled>Y</enabled><name>ID_JOB</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>JOBNAME</id><enabled>Y</enabled><name>JOBNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field></job-log-table>
<jobentry-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>JOBNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>JOBENTRYNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>RESULT</id><enabled>Y</enabled><name>RESULT</name></field><field><id>NR_RESULT_ROWS</id><enabled>Y</enabled><name>NR_RESULT_ROWS</name></field><field><id>NR_RESULT_FILES</id><enabled>Y</enabled><name>NR_RESULT_FILES</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field><field><id>COPY_NR</id><enabled>N</enabled><name>COPY_NR</name></field></jobentry-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
   <pass_batchid>N</pass_batchid>
   <shared_objects_file/>
  <entries>
    <entry>
      <name>VALIDATIONS</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;ACTUAL_VALIDATIONS.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile>${Internal.Job.Filename.Directory}&#47;Error_log</logfile>
      <logext>txt</logext>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Error</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>789</xloc>
      <yloc>671</yloc>
      </entry>
    <entry>
      <name>TRUNCATE STAG TABLE</name>
      <description/>
      <type>TRUNCATE_TABLES</type>
      <connection>BPI DB</connection>
      <arg_from_previous>N</arg_from_previous>
      <fields>
        <field>
          <name>STAG_ACTUAL_MASTER</name>
          <schemaname/>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1176</xloc>
      <yloc>2078</yloc>
      </entry>
    <entry>
      <name>TRUNCATE INTERFACE TABLE</name>
      <description/>
      <type>TRUNCATE_TABLES</type>
      <connection>STAGING DB</connection>
      <arg_from_previous>N</arg_from_previous>
      <fields>
        <field>
          <name>ACTUAL_MASTER_INTERFACE</name>
          <schemaname/>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1176</xloc>
      <yloc>2172</yloc>
      </entry>
    <entry>
      <name>DATAFETCH</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;ACTUAL_MASTER_DATAFETCH.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1186</xloc>
      <yloc>821</yloc>
      </entry>
    <entry>
      <name>STOP PROCESS</name>
      <description/>
      <type>ABORT</type>
      <message/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>2304</xloc>
      <yloc>229</yloc>
      </entry>
    <entry>
      <name>START</name>
      <description/>
      <type>SPECIAL</type>
      <start>Y</start>
      <dummy>N</dummy>
      <repeat>N</repeat>
      <schedulerType>0</schedulerType>
      <intervalSeconds>0</intervalSeconds>
      <intervalMinutes>60</intervalMinutes>
      <hour>12</hour>
      <minutes>0</minutes>
      <weekDay>1</weekDay>
      <DayOfMonth>1</DayOfMonth>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>308</xloc>
      <yloc>393</yloc>
      </entry>
    <entry>
      <name>CHECKING FILE</name>
      <description/>
      <type>JOB</type>
      <specification_method>filename</specification_method>
      <job_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;FULL_JOB.kjb</filename>
      <jobname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Nothing</loglevel>
      <slave_server_name/>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <pass_export>N</pass_export>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <set_append_logfile>N</set_append_logfile>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1186</xloc>
      <yloc>569</yloc>
      </entry>
    <entry>
      <name>VALIDATING FILE</name>
      <description/>
      <type>JOB</type>
      <specification_method>filename</specification_method>
      <job_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;CSV_TO_INTERFACE.kjb</filename>
      <jobname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Nothing</loglevel>
      <slave_server_name/>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <pass_export>N</pass_export>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <set_append_logfile>N</set_append_logfile>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1185</xloc>
      <yloc>644</yloc>
      </entry>
    <entry>
      <name>MAIL</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;INITIAL_PROCESS_FAIL_MAIL.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1378</xloc>
      <yloc>842</yloc>
      </entry>
    <entry>
      <name>MAIL (2)</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;VALIDATION_FAIL_MAIL.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1615</xloc>
      <yloc>1272</yloc>
      </entry>
    <entry>
      <name>MAIL (3)</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;TEMP_TABLE_TRUNCATION_FAIL.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1370</xloc>
      <yloc>2070</yloc>
      </entry>
    <entry>
      <name>MAIL (4)</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;STAGING_TRUNCATION_FAIL.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1377</xloc>
      <yloc>2164</yloc>
      </entry>
    <entry>
      <name>REPROCESSING_INVALID_DATA</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;REPROCESSING_INVALID_DATA.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>884</xloc>
      <yloc>473</yloc>
      </entry>
    <entry>
      <name>STOP PROCESS AUDIT</name>
      <description/>
      <type>SQL</type>
      <sql>update AUDIT_MASTER_INBOUND set status=&apos;E&apos; where STATUS=&apos;R&apos; and APPLICATION_PROCESS=&apos;ACTUAL_MASTER_INTERFACE&apos;


UPDATE WORKFLOW_PROFILE SET VALIDATION=&apos;Y&apos; where PROCESS_NAME=&apos;ACTUAL_MASTER_INTERFACE&apos;</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>554</xloc>
      <yloc>149</yloc>
      </entry>
    <entry>
      <name>STOP PROCESS AUDIT (3)</name>
      <description/>
      <type>SQL</type>
      <sql>update AUDIT_MASTER_INBOUND set status=&apos;E&apos; where STATUS=&apos;R&apos; and APPLICATION_PROCESS=&apos;ACTUAL_MASTER_INTERFACE&apos;


UPDATE WORKFLOW_PROFILE SET VALIDATION=&apos;N&apos; where PROCESS_NAME=&apos;ACTUAL_MASTER_INTERFACE&apos;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1160</xloc>
      <yloc>2489</yloc>
      </entry>
    <entry>
      <name>STOP PROCESS AUDIT (2)</name>
      <description/>
      <type>SQL</type>
      <sql>update AUDIT_MASTER_INBOUND set status=&apos;E&apos; where STATUS=&apos;R&apos; and APPLICATION_PROCESS=&apos;ACTUAL_MASTER_INTERFACE&apos;



UPDATE WORKFLOW_PROFILE SET VALIDATION=&apos;N&apos; where PROCESS_NAME=&apos;ACTUAL_MASTER_INTERFACE&apos;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1754</xloc>
      <yloc>1179</yloc>
      </entry>
    <entry>
      <name>HANDLING_AUDIT</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;HANDLING_NEW_AUDIT.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1188</xloc>
      <yloc>722</yloc>
      </entry>
    <entry>
      <name>STAG</name>
      <description/>
      <type>SQL</type>
      <sql>
TRUNCATE TABLE STAG_ACTUAL_MASTER


INSERT INTO STAG_ACTUAL_MASTER(
ACTUAL_INTFID
,ACTUAL_ID
,CONTRACT_ID
,UPLOAD_DATE
,PROVISION_ID
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_ACTUAL_END_DATE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,SETTLEMENT_METHOD
,CASH_PAID_DATE
,AMOUNT
,QUANTITY
,QUANTITY_INCLUSION
,SETTLEMENT_NO
,INVOICE_LINE_NUMBER
,ACCOUNT_ID
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACCOUNT_NO
,ACCOUNT_NAME
,ANALYSIS_CODE
,IS_ACTIVE
,COM_DIV_MKT_BRAND_PROD_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE_ADJUSTMENT_NAME
,PRICE
,RECORD_SEQUENCE
,SENT_OUT
,ACCRUAL_PROCESSED
,DIVISION_ID
,MARKET_ID
,BRAND_ID
,ADD_CHG_DEL_INDICATOR
,CLAIM_INDICATOR
,CREATED_BY
,CREATED_DATE
,MODIFIED_BY
,MODIFIED_DATE
,BATCH_ID
,SOURCE
,SALES_AMOUNT
,ORGANIZATION_KEY
,MANDATED_DISCOUNT_AMOUNT
,PROVISION_CLAIM_INDICATOR
,PROGRAM_STATE_CODE
,DISPENSED_DATE
) 
SELECT 
ACTUAL_INTERFACE_ID
,ACTUAL_ID
,CONTRACT_ID
,UPLOAD_DATE
,PROVISION_ID
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_ACTUAL_END_DATE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,SETTLEMENT_METHOD
,CASH_PAID_DATE
,AMOUNT
,QUANTITY
,QUANTITY_INCLUSION
,SETTLEMENT_NO
,INVOICE_LINE_NUMBER
,ACCOUNT_ID
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACCOUNT_NO
,ACCOUNT_NAME
,ANALYSIS_CODE
,IS_ACTIVE
,COM_DIV_MKT_BRAND_PROD_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE_ADJUSTMENT_NAME
,PRICE
,RECORD_SEQUENCE
,SENT_OUT
,ACCRUAL_PROCESSED
,DIVISION_ID
,MARKET_ID
,BRAND_ID
,ADD_CHG_DEL_INDICATOR
,CLAIM_INDICATOR
,CREATED_BY
,CREATED_DATE
,MODIFIED_BY
,MODIFIED_DATE
,BATCH_ID
,SOURCE
,SALES_AMOUNT
,ORGANIZATION_KEY
,MANDATED_DISCOUNT_AMOUNT
,PROVISION_CLAIM_INDICATOR
,PROGRAM_STATE_CODE
,DISPENSED_DATE
 FROM ${STAGING_DB}..ACTUAL_MASTER_INTERFACE</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1183</xloc>
      <yloc>897</yloc>
      </entry>
    <entry>
      <name>SQL 3 2 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>DELETE A
 FROM   STAG_ACTUAL_MASTER A 
       INNER JOIN COMPANY_MASTER B 
              ON A.ORGANIZATION_KEY = B.COMPANY_ID                
	   INNER JOIN COMPANY_MASTER F              
                 ON A.ACCOUNT_ID = F.COMPANY_NO 
       INNER JOIN ITEM_MASTER C 
              ON A.ITEM_ID = C.ITEM_ID 
       INNER JOIN CONTRACT_MASTER D 
              ON A.CONTRACT_ID = D.CONTRACT_ID 
       INNER JOIN RS_MODEL E 
              ON A.PROVISION_ID = E.RS_ID
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>792</xloc>
      <yloc>866</yloc>
      </entry>
    <entry>
      <name>VALIDATIONS 2</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;ACTUAL_VALIDATIONS_NEW.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile>${Internal.Job.Filename.Directory}&#47;Error_log</logfile>
      <logext>txt</logext>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Error</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1210</xloc>
      <yloc>1892</yloc>
      </entry>
    <entry>
      <name>SQL 3 2 2 3</name>
      <description/>
      <type>SQL</type>
      <sql>update A 
set A.COMPANY_MASTER_SID=f.COMPANY_MASTER_SID,
A.ITEM_MASTER_SID=c.ITEM_MASTER_SID,
A.contract_master_sid=d.contract_master_sid
FROM  ACTUALS_TEST A                    
	   INNER JOIN COMPANY_MASTER F              
                 ON A.ACCOUNT_ID = F.COMPANY_NO 
       INNER JOIN ITEM_MASTER C 
              ON A.ITEM_ID = C.ITEM_ID 
       INNER JOIN CONTRACT_MASTER D 
              ON A.CONTRACT_ID = D.CONTRACT_ID
WHERE A.COMPANY_MASTER_SID IS NULL
OR A.ITEM_MASTER_SID IS NULL
OR A.contract_master_sid IS NULL</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>793</xloc>
      <yloc>762</yloc>
      </entry>
    <entry>
      <name>VALIDATION</name>
      <description/>
      <type>SQL</type>
      <sql>

;WITH cte AS ( 
SELECT 
 a.ACTUAL_ID
,a.CONTRACT_ID
,a.UPLOAD_DATE
,a.PROVISION_ID
,a.ACCRUAL_ACTUAL_START_DATE
,a.ACCRUAL_ACTUAL_END_DATE
,a.ITEM_ID
,a.ITEM_IDENTIFIER_CODE_QUALIFIER
,a.ITEM_NO
,a.CASH_PAID_DATE
,a.AMOUNT
,a.QUANTITY
,a.QUANTITY_INCLUSION
,a.SETTLEMENT_NO
,a.ACCOUNT_ID
,a.ACCT_IDENTIFIER_CODE_QUALIFIER
,a.ACCOUNT_NO
,a.ACCOUNT_NAME
,a.ANALYSIS_CODE
,a.IS_ACTIVE
,a.COM_DIV_MKT_BRAND_PROD_KEY
,a.PARENTCOM_DIVMKT_BRAND_PRODKEY
,a.PRICE_ADJUSTMENT_NAME
,a.PRICE
,a.RECORD_SEQUENCE
,a.SENT_OUT
,a.ACCRUAL_PROCESSED
,a.DIVISION_ID
,a.MARKET_ID
,a.BRAND_ID
,a.ADD_CHG_DEL_INDICATOR
,a.CLAIM_INDICATOR
,a.CREATED_BY
,a.CREATED_DATE
,a.MODIFIED_BY
,a.MODIFIED_DATE
,a.BATCH_ID
,a.SOURCE
--,REASON_FOR_FAILURE
,a.SALES_AMOUNT
,a.ORGANIZATION_KEY
,a.MANDATED_DISCOUNT_AMOUNT
,a.PROVISION_CLAIM_INDICATOR
,a.PROGRAM_STATE_CODE
,a.DISPENSED_DATE
,a.ACTUAL_INTFID
,a.SETTLEMENT_METHOD
,a.INVOICE_LINE_NUMBER
,ROW_NUMBER() OVER(PARTITION BY actual_id ORDER BY actual_id)&apos;RowRank&apos;
FROM   STAG_ACTUAL_MASTER A 
       left JOIN COMPANY_MASTER B 
              ON A.ORGANIZATION_KEY = B.COMPANY_ID                
	   left  JOIN COMPANY_MASTER F              
                 ON A.ACCOUNT_ID = F.COMPANY_NO 
       left JOIN ITEM_MASTER C 
              ON A.ITEM_ID = C.ITEM_ID 
       left JOIN CONTRACT_MASTER D 
              ON A.CONTRACT_ID = D.CONTRACT_ID 
       left JOIN RS_MODEL E 
              ON A.PROVISION_ID = E.RS_ID 
WHERE (B.COMPANY_ID   is null or  F.COMPANY_NO  is null or C.ITEM_ID   is null or   D.CONTRACT_ID  is null or  E.RS_ID  is null)
and a.ADD_CHG_DEL_INDICATOR=&apos;A&apos; 
)



 INSERT INTO IVLD_ACTUAL_MASTER(
 
ACTUAL_ID
,CONTRACT_ID
,UPLOAD_DATE
,PROVISION_ID
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_ACTUAL_END_DATE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,CASH_PAID_DATE
,AMOUNT
,QUANTITY
,QUANTITY_INCLUSION
,SETTLEMENT_NO
,ACCOUNT_ID
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACCOUNT_NO
,ACCOUNT_NAME
,ANALYSIS_CODE
,IS_ACTIVE
,COM_DIV_MKT_BRAND_PROD_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE_ADJUSTMENT_NAME
,PRICE
,RECORD_SEQUENCE
,SENT_OUT
,ACCRUAL_PROCESSED
,DIVISION_ID
,MARKET_ID
,BRAND_ID
,ADD_CHG_DEL_INDICATOR
,CLAIM_INDICATOR
,CREATED_BY
,CREATED_DATE
,MODIFIED_BY
,MODIFIED_DATE
,BATCH_ID
,SOURCE
--,REASON_FOR_FAILURE
,SALES_AMOUNT
,ORGANIZATION_KEY
,MANDATED_DISCOUNT_AMOUNT
,PROVISION_CLAIM_INDICATOR
,PROGRAM_STATE_CODE
,DISPENSED_DATE
,ACTUAL_INTFID
,SETTLEMENT_METHOD_NO
,INVOICE_LINE_NO
)

select 
 a.ACTUAL_ID
,a.CONTRACT_ID
,a.UPLOAD_DATE
,a.PROVISION_ID
,a.ACCRUAL_ACTUAL_START_DATE
,a.ACCRUAL_ACTUAL_END_DATE
,a.ITEM_ID
,a.ITEM_IDENTIFIER_CODE_QUALIFIER
,a.ITEM_NO
,a.CASH_PAID_DATE
,a.AMOUNT
,a.QUANTITY
,a.QUANTITY_INCLUSION
,a.SETTLEMENT_NO
,a.ACCOUNT_ID
,a.ACCT_IDENTIFIER_CODE_QUALIFIER
,a.ACCOUNT_NO
,a.ACCOUNT_NAME
,a.ANALYSIS_CODE
,a.IS_ACTIVE
,a.COM_DIV_MKT_BRAND_PROD_KEY
,a.PARENTCOM_DIVMKT_BRAND_PRODKEY
,a.PRICE_ADJUSTMENT_NAME
,a.PRICE
,a.RECORD_SEQUENCE
,a.SENT_OUT
,a.ACCRUAL_PROCESSED
,a.DIVISION_ID
,a.MARKET_ID
,a.BRAND_ID
,a.ADD_CHG_DEL_INDICATOR
,a.CLAIM_INDICATOR
,a.CREATED_BY
,a.CREATED_DATE
,a.MODIFIED_BY
,a.MODIFIED_DATE
,a.BATCH_ID
,a.SOURCE
--,REASON_FOR_FAILURE
,a.SALES_AMOUNT
,a.ORGANIZATION_KEY
,a.MANDATED_DISCOUNT_AMOUNT
,a.PROVISION_CLAIM_INDICATOR
,a.PROGRAM_STATE_CODE
,a.DISPENSED_DATE
,a.ACTUAL_INTFID
,a.SETTLEMENT_METHOD
,a.INVOICE_LINE_NUMBER
  FROM cte A
WHERE RowRank = 1</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1163</xloc>
      <yloc>1316</yloc>
      </entry>
    <entry>
      <name>VALIDATION UPDATE</name>
      <description/>
      <type>SQL</type>
      <sql>update a set 
REASON_FOR_FAILURE=
 CASE 
         WHEN b.company_id IS NULL THEN &apos;Invalid Organizationkey&apos; 
         WHEN f.company_id IS NULL THEN &apos;Invalid AccountId&apos; 
         WHEN c.item_id IS NULL THEN &apos;Invalid ItemId&apos; 
         WHEN d.contract_id IS NULL THEN &apos;Invalid ContractId&apos; 
         WHEN e.rs_id IS NULL THEN &apos;Invalid ProvisionId&apos; 
       END 
FROM   ivld_actual_master a 
       LEFT JOIN company_master B 
              ON A.organization_key = B.company_id 
       LEFT JOIN company_master F 
              ON A.account_id = F.company_no 
       LEFT JOIN item_master C 
              ON A.item_id = C.item_id 
       LEFT JOIN contract_master D 
              ON A.contract_id = D.contract_id 
       LEFT JOIN rs_model E 
              ON A.provision_id = E.rs_id 

		where a.REASON_FOR_FAILURE is null</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1163</xloc>
      <yloc>1402</yloc>
      </entry>
    <entry>
      <name>INVALID_INDICATOR</name>
      <description/>
      <type>SQL</type>
      <sql>insert into IVLD_ACTUAL_MASTER(
 ACTUAL_ID
,CONTRACT_ID
,UPLOAD_DATE
,PROVISION_ID
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_ACTUAL_END_DATE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,CASH_PAID_DATE
,AMOUNT
,QUANTITY
,QUANTITY_INCLUSION
,SETTLEMENT_NO
,ACCOUNT_ID
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACCOUNT_NO
,ACCOUNT_NAME
,ANALYSIS_CODE
,IS_ACTIVE
,COM_DIV_MKT_BRAND_PROD_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE_ADJUSTMENT_NAME
,PRICE
,RECORD_SEQUENCE
,SENT_OUT
,ACCRUAL_PROCESSED
,DIVISION_ID
,MARKET_ID
,BRAND_ID
,ADD_CHG_DEL_INDICATOR
,CLAIM_INDICATOR
,CREATED_BY
,CREATED_DATE
,MODIFIED_BY
,MODIFIED_DATE
,BATCH_ID
,SOURCE
,REASON_FOR_FAILURE
,SALES_AMOUNT
,ORGANIZATION_KEY
,MANDATED_DISCOUNT_AMOUNT
,PROVISION_CLAIM_INDICATOR
,PROGRAM_STATE_CODE
,DISPENSED_DATE
,ACTUAL_INTFID
,SETTLEMENT_METHOD_NO
,INVOICE_LINE_NO

)




SELECT 
a.ACTUAL_ID
,a.CONTRACT_ID
,a.UPLOAD_DATE
,a.PROVISION_ID
,a.ACCRUAL_ACTUAL_START_DATE
,a.ACCRUAL_ACTUAL_END_DATE
,a.ITEM_ID
,a.ITEM_IDENTIFIER_CODE_QUALIFIER
,a.ITEM_NO
,a.CASH_PAID_DATE
,a.AMOUNT
,a.QUANTITY
,a.QUANTITY_INCLUSION
,a.SETTLEMENT_NO
,a.ACCOUNT_ID
,a.ACCT_IDENTIFIER_CODE_QUALIFIER
,a.ACCOUNT_NO
,a.ACCOUNT_NAME
,a.ANALYSIS_CODE
,a.IS_ACTIVE
,a.COM_DIV_MKT_BRAND_PROD_KEY
,a.PARENTCOM_DIVMKT_BRAND_PRODKEY
,a.PRICE_ADJUSTMENT_NAME
,a.PRICE
,a.RECORD_SEQUENCE
,a.SENT_OUT
,a.ACCRUAL_PROCESSED
,a.DIVISION_ID
,a.MARKET_ID
,a.BRAND_ID
,a.ADD_CHG_DEL_INDICATOR
,a.CLAIM_INDICATOR
,a.CREATED_BY
,a.CREATED_DATE
,a.MODIFIED_BY
,a.MODIFIED_DATE
,a.BATCH_ID
,a.SOURCE
,&apos;Invalid Indicator&apos;
,a.SALES_AMOUNT
,a.ORGANIZATION_KEY
,a.MANDATED_DISCOUNT_AMOUNT
,a.PROVISION_CLAIM_INDICATOR
,a.PROGRAM_STATE_CODE
,a.DISPENSED_DATE
,a.ACTUAL_INTFID
,a.SETTLEMENT_METHOD
,a.INVOICE_LINE_NUMBER
FROM   STAG_ACTUAL_MASTER A 
     --  INNER JOIN COMPANY_MASTER B 
     --         ON A.ORGANIZATION_KEY = B.COMPANY_ID                
	  -- INNER JOIN COMPANY_MASTER F              
     --            ON A.ACCOUNT_ID = F.COMPANY_NO 
    --   INNER JOIN ITEM_MASTER C 
    --          ON A.ITEM_ID = C.ITEM_ID 
    --   INNER JOIN CONTRACT_MASTER D 
     --         ON A.CONTRACT_ID = D.CONTRACT_ID 
     --  INNER JOIN RS_MODEL E 
      --        ON A.PROVISION_ID = E.RS_ID 
			  where a.ADD_CHG_DEL_INDICATOR &lt;&gt;&apos;A&apos;

			</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1167</xloc>
      <yloc>1071</yloc>
      </entry>
    <entry>
      <name>DUPLICATE RECORD IN STAGING</name>
      <description/>
      <type>SQL</type>
      <sql>
;WITH cte AS ( 


SELECT A.ACTUAL_INTFID, 
       A.ACTUAL_ID, 
       A.CONTRACT_ID, 
       A.UPLOAD_DATE, 
       A.PROVISION_ID, 
       A.ACCRUAL_ACTUAL_START_DATE, 
       A.ACCRUAL_ACTUAL_END_DATE, 
       A.ITEM_ID, 
       A.ITEM_IDENTIFIER_CODE_QUALIFIER, 
       A.ITEM_NO, 
       A.SETTLEMENT_METHOD, 
       A.CASH_PAID_DATE, 
       A.AMOUNT, 
       A.QUANTITY, 
       A.QUANTITY_INCLUSION, 
       A.SETTLEMENT_NO, 
       A.INVOICE_LINE_NUMBER, 
       A.ACCOUNT_ID, 
       A.ACCT_IDENTIFIER_CODE_QUALIFIER, 
       A.ACCOUNT_NO, 
       A.ACCOUNT_NAME, 
       A.ANALYSIS_CODE, 
       A.IS_ACTIVE, 
       A.COM_DIV_MKT_BRAND_PROD_KEY, 
       A.PARENTCOM_DIVMKT_BRAND_PRODKEY, 
       A.PRICE_ADJUSTMENT_NAME, 
       A.PRICE, 
       A.RECORD_SEQUENCE, 
       A.SENT_OUT, 
       A.ACCRUAL_PROCESSED, 
       A.DIVISION_ID, 
       A.MARKET_ID, 
       A.BRAND_ID, 
       A.CLAIM_INDICATOR, 
       A.SALES_AMOUNT, 
       A.ORGANIZATION_KEY, 
       A.MANDATED_DISCOUNT_AMOUNT, 
       A.PROVISION_CLAIM_INDICATOR, 
       A.PROGRAM_STATE_CODE, 
       A.DISPENSED_DATE, 
       A.CREATED_BY, 
       A.CREATED_DATE, 
       A.MODIFIED_BY, 
       A.MODIFIED_DATE, 
       A.BATCH_ID, 
       A.SOURCE, 
       A.ADD_CHG_DEL_INDICATOR
 
,ROW_NUMBER() OVER(PARTITION BY actual_id ORDER BY actual_id)&apos;RowRank&apos;
        FROM     STAG_ACTUAL_MASTER A 
    --   INNER JOIN COMPANY_MASTER B 
      --        ON A.ORGANIZATION_KEY = B.COMPANY_ID                
	 --  INNER JOIN COMPANY_MASTER F              
    --             ON A.ACCOUNT_ID = F.COMPANY_NO 
    --   INNER JOIN ITEM_MASTER C 
     --         ON A.ITEM_ID = C.ITEM_ID 
    --   INNER JOIN CONTRACT_MASTER D 
      --        ON A.CONTRACT_ID = D.CONTRACT_ID 
     --  INNER JOIN RS_MODEL E 
      --        ON A.PROVISION_ID = E.RS_ID
where a.ADD_CHG_DEL_INDICATOR =&apos;A&apos;
			    )

insert into IVLD_ACTUAL_MASTER(
ACCOUNT_ID
,ACCOUNT_NAME
,ACCOUNT_NO
,ACCRUAL_ACTUAL_END_DATE
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_PROCESSED
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACTUAL_ID
,ACTUAL_INTFID
,ADD_CHG_DEL_INDICATOR
,AMOUNT
,ANALYSIS_CODE
,BATCH_ID
,BRAND_ID
,CASH_PAID_DATE
,CLAIM_INDICATOR
,COM_DIV_MKT_BRAND_PROD_KEY
,CONTRACT_ID
,CREATED_BY
,CREATED_DATE
,DISPENSED_DATE
,DIVISION_ID
,ERROR_CODE
,IS_ACTIVE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,MANDATED_DISCOUNT_AMOUNT
,MARKET_ID
,MODIFIED_BY
,MODIFIED_DATE
,ORGANIZATION_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE
,PRICE_ADJUSTMENT_NAME
,PROGRAM_STATE_CODE
,PROVISION_CLAIM_INDICATOR
,PROVISION_ID
,QUANTITY
,QUANTITY_INCLUSION
,REASON_FOR_FAILURE
,RECORD_SEQUENCE
,SALES_AMOUNT
,SENT_OUT
,SETTLEMENT_NO
,SOURCE
,UPLOAD_DATE
,SETTLEMENT_METHOD_NO
,INVOICE_LINE_NO

)
select 
ACCOUNT_ID
,ACCOUNT_NAME
,ACCOUNT_NO
,ACCRUAL_ACTUAL_END_DATE
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_PROCESSED
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACTUAL_ID
,ACTUAL_INTFID
,ADD_CHG_DEL_INDICATOR
,AMOUNT
,ANALYSIS_CODE
,BATCH_ID
,BRAND_ID
,CASH_PAID_DATE
,CLAIM_INDICATOR
,COM_DIV_MKT_BRAND_PROD_KEY
,CONTRACT_ID
,CREATED_BY
,CREATED_DATE
,DISPENSED_DATE
,DIVISION_ID
,&apos;E04&apos;
,IS_ACTIVE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,MANDATED_DISCOUNT_AMOUNT
,MARKET_ID
,MODIFIED_BY
,MODIFIED_DATE
,ORGANIZATION_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE
,PRICE_ADJUSTMENT_NAME
,PROGRAM_STATE_CODE
,PROVISION_CLAIM_INDICATOR
,PROVISION_ID
,QUANTITY
,QUANTITY_INCLUSION
,&apos;Duplicate record in Staging&apos;
,RECORD_SEQUENCE
,SALES_AMOUNT
,SENT_OUT
,SETTLEMENT_NO
,SOURCE
,UPLOAD_DATE
,SETTLEMENT_METHOD
,INVOICE_LINE_NUMBER

  FROM cte 
WHERE RowRank &gt; 1</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1165</xloc>
      <yloc>1164</yloc>
      </entry>
    <entry>
      <name>DUPLICATE RECORD</name>
      <description/>
      <type>SQL</type>
      <sql>

;WITH cte AS ( 


SELECT A.ACTUAL_INTFID, 
       A.ACTUAL_ID, 
       A.CONTRACT_ID, 
       A.UPLOAD_DATE, 
       A.PROVISION_ID, 
       A.ACCRUAL_ACTUAL_START_DATE, 
       A.ACCRUAL_ACTUAL_END_DATE, 
       A.ITEM_ID, 
       A.ITEM_IDENTIFIER_CODE_QUALIFIER, 
       A.ITEM_NO, 
       A.SETTLEMENT_METHOD, 
       A.CASH_PAID_DATE, 
       A.AMOUNT, 
       A.QUANTITY, 
       A.QUANTITY_INCLUSION, 
       A.SETTLEMENT_NO, 
       A.INVOICE_LINE_NUMBER, 
       A.ACCOUNT_ID, 
       A.ACCT_IDENTIFIER_CODE_QUALIFIER, 
       A.ACCOUNT_NO, 
       A.ACCOUNT_NAME, 
       A.ANALYSIS_CODE, 
       A.IS_ACTIVE, 
       A.COM_DIV_MKT_BRAND_PROD_KEY, 
       A.PARENTCOM_DIVMKT_BRAND_PRODKEY, 
       A.PRICE_ADJUSTMENT_NAME, 
       A.PRICE, 
       A.RECORD_SEQUENCE, 
       A.SENT_OUT, 
       A.ACCRUAL_PROCESSED, 
       A.DIVISION_ID, 
       A.MARKET_ID, 
       A.BRAND_ID, 
       A.CLAIM_INDICATOR, 
       A.SALES_AMOUNT, 
       A.ORGANIZATION_KEY, 
       A.MANDATED_DISCOUNT_AMOUNT, 
       A.PROVISION_CLAIM_INDICATOR, 
       A.PROGRAM_STATE_CODE, 
       A.DISPENSED_DATE, 
       A.CREATED_BY, 
       A.CREATED_DATE, 
       A.MODIFIED_BY, 
       A.MODIFIED_DATE, 
       A.BATCH_ID, 
       A.SOURCE, 
       A.ADD_CHG_DEL_INDICATOR
 
,ROW_NUMBER() OVER(PARTITION BY actual_id ORDER BY actual_id)&apos;RowRank&apos;
        FROM     STAG_ACTUAL_MASTER A 
     INNER JOIN COMPANY_MASTER B 
          ON A.ORGANIZATION_KEY = B.COMPANY_ID                
	   INNER JOIN COMPANY_MASTER F              
               ON A.ACCOUNT_ID = F.COMPANY_NO 
      INNER JOIN ITEM_MASTER C 
            ON A.ITEM_ID = C.ITEM_ID 
      INNER JOIN CONTRACT_MASTER D 
            ON A.CONTRACT_ID = D.CONTRACT_ID 
      INNER JOIN RS_MODEL E 
           ON A.PROVISION_ID = E.RS_ID
where a.ADD_CHG_DEL_INDICATOR =&apos;A&apos; AND exists(select ACTUAL_ID from actuals_master b where a.ACTUAL_ID=b.ACTUAL_ID) 
			    )

insert into IVLD_ACTUAL_MASTER(
ACCOUNT_ID
,ACCOUNT_NAME
,ACCOUNT_NO
,ACCRUAL_ACTUAL_END_DATE
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_PROCESSED
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACTUAL_ID
,ACTUAL_INTFID
,ADD_CHG_DEL_INDICATOR
,AMOUNT
,ANALYSIS_CODE
,BATCH_ID
,BRAND_ID
,CASH_PAID_DATE
,CLAIM_INDICATOR
,COM_DIV_MKT_BRAND_PROD_KEY
,CONTRACT_ID
,CREATED_BY
,CREATED_DATE
,DISPENSED_DATE
,DIVISION_ID
,ERROR_CODE
,IS_ACTIVE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,MANDATED_DISCOUNT_AMOUNT
,MARKET_ID
,MODIFIED_BY
,MODIFIED_DATE
,ORGANIZATION_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE
,PRICE_ADJUSTMENT_NAME
,PROGRAM_STATE_CODE
,PROVISION_CLAIM_INDICATOR
,PROVISION_ID
,QUANTITY
,QUANTITY_INCLUSION
,REASON_FOR_FAILURE
,RECORD_SEQUENCE
,SALES_AMOUNT
,SENT_OUT
,SETTLEMENT_NO
,SOURCE
,UPLOAD_DATE
,SETTLEMENT_METHOD_NO
,INVOICE_LINE_NO


)
select 
ACCOUNT_ID
,ACCOUNT_NAME
,ACCOUNT_NO
,ACCRUAL_ACTUAL_END_DATE
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_PROCESSED
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACTUAL_ID
,ACTUAL_INTFID
,ADD_CHG_DEL_INDICATOR
,AMOUNT
,ANALYSIS_CODE
,BATCH_ID
,BRAND_ID
,CASH_PAID_DATE
,CLAIM_INDICATOR
,COM_DIV_MKT_BRAND_PROD_KEY
,CONTRACT_ID
,CREATED_BY
,CREATED_DATE
,DISPENSED_DATE
,DIVISION_ID
,&apos;E04&apos;
,IS_ACTIVE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,MANDATED_DISCOUNT_AMOUNT
,MARKET_ID
,MODIFIED_BY
,MODIFIED_DATE
,ORGANIZATION_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE
,PRICE_ADJUSTMENT_NAME
,PROGRAM_STATE_CODE
,PROVISION_CLAIM_INDICATOR
,PROVISION_ID
,QUANTITY
,QUANTITY_INCLUSION
,&apos;Duplicate Record&apos;
,RECORD_SEQUENCE
,SALES_AMOUNT
,SENT_OUT
,SETTLEMENT_NO
,SOURCE
,UPLOAD_DATE
,SETTLEMENT_METHOD
,INVOICE_LINE_NUMBER

  FROM cte A
WHERE RowRank = 1</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1164</xloc>
      <yloc>1237</yloc>
      </entry>
    <entry>
      <name>ADD_COUNT</name>
      <description/>
      <type>SQL</type>
      <sql>;WITH cte AS ( 


SELECT A.ACTUAL_INTFID, 
       A.ACTUAL_ID, 
       A.CONTRACT_ID, 
       A.UPLOAD_DATE, 
       A.PROVISION_ID, 
       A.ACCRUAL_ACTUAL_START_DATE, 
       A.ACCRUAL_ACTUAL_END_DATE, 
       A.ITEM_ID, 
       A.ITEM_IDENTIFIER_CODE_QUALIFIER, 
       A.ITEM_NO, 
       A.SETTLEMENT_METHOD, 
       A.CASH_PAID_DATE, 
       A.AMOUNT, 
       A.QUANTITY, 
       A.QUANTITY_INCLUSION, 
       A.SETTLEMENT_NO, 
       A.INVOICE_LINE_NUMBER, 
       A.ACCOUNT_ID, 
       A.ACCT_IDENTIFIER_CODE_QUALIFIER, 
       A.ACCOUNT_NO, 
       A.ACCOUNT_NAME, 
       A.ANALYSIS_CODE, 
       A.IS_ACTIVE, 
       A.COM_DIV_MKT_BRAND_PROD_KEY, 
       A.PARENTCOM_DIVMKT_BRAND_PRODKEY, 
       A.PRICE_ADJUSTMENT_NAME, 
       A.PRICE, 
       A.RECORD_SEQUENCE, 
       A.SENT_OUT, 
       A.ACCRUAL_PROCESSED, 
       A.DIVISION_ID, 
       A.MARKET_ID, 
       A.BRAND_ID, 
       A.CLAIM_INDICATOR, 
       A.SALES_AMOUNT, 
       A.ORGANIZATION_KEY, 
       A.MANDATED_DISCOUNT_AMOUNT, 
       A.PROVISION_CLAIM_INDICATOR, 
       A.PROGRAM_STATE_CODE, 
       A.DISPENSED_DATE, 
       A.CREATED_BY, 
       A.CREATED_DATE, 
       A.MODIFIED_BY, 
       A.MODIFIED_DATE, 
       A.BATCH_ID, 
       A.SOURCE, 
       A.ADD_CHG_DEL_INDICATOR
     , B.COMPANY_MASTER_SID,
	  C.ITEM_MASTER_SID,
	  D.CONTRACT_MASTER_SID


,ROW_NUMBER() OVER(PARTITION BY actual_id ORDER BY (select null))&apos;RowRank&apos;
        FROM     STAG_ACTUAL_MASTER A 
       INNER JOIN COMPANY_MASTER B 
              ON A.ORGANIZATION_KEY = B.COMPANY_ID                
	   INNER JOIN COMPANY_MASTER F              
                 ON A.ACCOUNT_ID = F.COMPANY_NO 
       INNER JOIN ITEM_MASTER C 
              ON A.ITEM_ID = C.ITEM_ID 
       INNER JOIN CONTRACT_MASTER D 
              ON A.CONTRACT_ID = D.CONTRACT_ID 
       INNER JOIN RS_MODEL E 
              ON A.PROVISION_ID = E.RS_ID
			   where a.ADD_CHG_DEL_INDICATOR =&apos;A&apos;
			   and  exists(select ACTUAL_ID from ACTUALS_TEST b where a.ACTUAL_ID=b.ACTUAL_ID)
			    )




  update a
  
  set a.ADD_COUNT= b.new_count
  from AUDIT_MASTER_INBOUND  a
inner join (select 
     count(*) as new_count,BATCH_ID

  FROM cte 
  WHERE RowRank = 1
  group by BATCH_ID)b
  on a.BATCH_ID=b.BATCH_ID
  and a.STATUS=&apos;R&apos;   AND A.APPLICATION_PROCESS=&apos;ACTUAL_MASTER_INTERFACE&apos;








</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1057</xloc>
      <yloc>1718</yloc>
      </entry>
    <entry>
      <name>MASTER_TABLE_INSERT</name>
      <description/>
      <type>SQL</type>
      <sql>
IF OBJECT_ID(&apos;TEMPDB..#item&apos;) IS NOT NULL
DROP TABLE #item

	SELECT a.ITEM_ID,
		   item_master_sid
INTO   #item
	FROM   (SELECT DISTINCT item_id
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN item_master im
			 ON im.item_id = a.item_id

IF OBJECT_ID(&apos;TEMPDB..#company&apos;) IS NOT NULL
DROP TABLE #company
	SELECT a.ORGANIZATION_KEY
		   
INTO   #company
	FROM   (SELECT DISTINCT ORGANIZATION_KEY
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN COMPANY_master im
			 ON im.COMPANY_ID = a.ORGANIZATION_KEY


IF OBJECT_ID(&apos;TEMPDB..#company1&apos;) IS NOT NULL
DROP TABLE #company1
	SELECT a.ACCOUNT_ID,
		   COMPANY_MASTER_SID
INTO   #company1
	FROM   (SELECT DISTINCT ACCOUNT_ID
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN COMPANY_master im
			 ON im.COMPANY_NO = a.ACCOUNT_ID



IF OBJECT_ID(&apos;TEMPDB..#contract&apos;) IS NOT NULL
DROP TABLE #contract
	SELECT a.CONTRACT_ID,
		   CONTRACT_MASTER_SID
INTO   #contract
	FROM   (SELECT DISTINCT CONTRACT_ID
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN CONTRACT_MASTER im
			 ON im.CONTRACT_ID = a.CONTRACT_ID

IF OBJECT_ID(&apos;TEMPDB..#rs_model&apos;) IS NOT NULL
DROP TABLE #rs_model
	SELECT a.PROVISION_ID
INTO   #rs_model
	FROM   (SELECT DISTINCT PROVISION_ID
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN RS_MODEL im
			 ON im.rs_id = a.PROVISION_ID


;WITH cte AS ( 


SELECT A.ACTUAL_INTFID, 
       A.ACTUAL_ID, 
       A.CONTRACT_ID, 
       A.UPLOAD_DATE, 
       A.PROVISION_ID, 
       A.ACCRUAL_ACTUAL_START_DATE, 
       A.ACCRUAL_ACTUAL_END_DATE, 
       A.ITEM_ID, 
       A.ITEM_IDENTIFIER_CODE_QUALIFIER, 
       A.ITEM_NO, 
       A.SETTLEMENT_METHOD, 
       A.CASH_PAID_DATE, 
       A.AMOUNT, 
       A.QUANTITY, 
       A.QUANTITY_INCLUSION, 
       A.SETTLEMENT_NO, 
       A.INVOICE_LINE_NUMBER, 
       A.ACCOUNT_ID, 
       A.ACCT_IDENTIFIER_CODE_QUALIFIER, 
       A.ACCOUNT_NO, 
       A.ACCOUNT_NAME, 
       A.ANALYSIS_CODE, 
       A.IS_ACTIVE, 
       A.COM_DIV_MKT_BRAND_PROD_KEY, 
       A.PARENTCOM_DIVMKT_BRAND_PRODKEY, 
       A.PRICE_ADJUSTMENT_NAME, 
       A.PRICE, 
       A.RECORD_SEQUENCE, 
       A.SENT_OUT, 
       A.ACCRUAL_PROCESSED, 
       A.DIVISION_ID, 
       A.MARKET_ID, 
       A.BRAND_ID, 
       A.CLAIM_INDICATOR, 
       A.SALES_AMOUNT, 
       A.ORGANIZATION_KEY, 
       A.MANDATED_DISCOUNT_AMOUNT, 
       A.PROVISION_CLAIM_INDICATOR, 
       A.PROGRAM_STATE_CODE, 
       A.DISPENSED_DATE, 
       A.CREATED_BY, 
       A.CREATED_DATE, 
       A.MODIFIED_BY, 
       A.MODIFIED_DATE, 
       A.BATCH_ID, 
       A.SOURCE, 
       A.ADD_CHG_DEL_INDICATOR
     , f.COMPANY_MASTER_SID,
	  C.ITEM_MASTER_SID,
	  D.CONTRACT_MASTER_SID



,ROW_NUMBER() OVER(PARTITION BY actual_id ORDER BY (select null))&apos;RowRank&apos;
        FROM     STAG_ACTUAL_MASTER A 
       INNER JOIN #company B 
              ON A.ORGANIZATION_KEY = B.ORGANIZATION_KEY                
	   INNER JOIN #company1 F              
                 ON A.ACCOUNT_ID = F.ACCOUNT_ID 
       INNER JOIN #item C 
              ON A.ITEM_ID = C.ITEM_ID 
       INNER JOIN #contract D 
              ON A.CONTRACT_ID = D.CONTRACT_ID 
       INNER JOIN #rs_model E 
              ON A.PROVISION_ID = E.PROVISION_ID
			   where a.ADD_CHG_DEL_INDICATOR =&apos;A&apos;
	   and not exists(select ACTUAL_ID from actuals_master b where a.ACTUAL_ID=b.ACTUAL_ID)
			    )
insert into ACTUALS_MASTER (
ACCOUNT_ID
,ACCOUNT_NAME
,ACCOUNT_NO
,ACCRUAL_ACTUAL_END_DATE
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_PROCESSED
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACTUAL_ID
,AMOUNT
,ANALYSIS_CODE
,BATCH_ID
,BRAND_ID
,CASH_PAID_DATE
,CLAIM_INDICATOR
,COM_DIV_MKT_BRAND_PROD_KEY
,CONTRACT_ID
,DISPENSED_DATE
,DIVISION_ID
,INBOUND_STATUS
,INVOICE_LINE_NO
,IS_ACTIVE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,MANDATED_DISCOUNT_AMOUNT
,MARKET_ID
,ORGANIZATION_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE
,PRICE_ADJUSTMENT_NAME
,PROGRAM_STATE_CODE
,PROVISION_CLAIM_INDICATOR
,PROVISION_ID
,QUANTITY
,QUANTITY_INCLUSION
,RECORD_SEQUENCE
,SALES_AMOUNT
,SENT_OUT
,SETTLEMENT_METHOD_NO
,SETTLEMENT_NO
,SOURCE
,UPLOAD_DATE
,CREATED_BY
,COMPANY_MASTER_SID
,CONTRACT_MASTER_SID
,ITEM_MASTER_SID


)
select 
 ACCOUNT_ID
,ACCOUNT_NAME
,ACCOUNT_NO
,ACCRUAL_ACTUAL_END_DATE
,ACCRUAL_ACTUAL_START_DATE
,ACCRUAL_PROCESSED
,ACCT_IDENTIFIER_CODE_QUALIFIER
,ACTUAL_ID
,AMOUNT
,ANALYSIS_CODE
,BATCH_ID
,BRAND_ID
,CASH_PAID_DATE
,CLAIM_INDICATOR
,COM_DIV_MKT_BRAND_PROD_KEY
,CONTRACT_ID
,DISPENSED_DATE
,DIVISION_ID
,&apos;A&apos;
,INVOICE_LINE_NUMBER
,IS_ACTIVE
,ITEM_ID
,ITEM_IDENTIFIER_CODE_QUALIFIER
,ITEM_NO
,MANDATED_DISCOUNT_AMOUNT
,MARKET_ID
,ORGANIZATION_KEY
,PARENTCOM_DIVMKT_BRAND_PRODKEY
,PRICE
,PRICE_ADJUSTMENT_NAME
,PROGRAM_STATE_CODE
,PROVISION_CLAIM_INDICATOR
,PROVISION_ID
,QUANTITY
,QUANTITY_INCLUSION
,RECORD_SEQUENCE
,SALES_AMOUNT
,SENT_OUT
,SETTLEMENT_METHOD
,SETTLEMENT_NO
,SOURCE
,UPLOAD_DATE
,CREATED_BY
,COMPANY_MASTER_SID
,CONTRACT_MASTER_SID
,ITEM_MASTER_SID


  FROM cte 
WHERE RowRank = 1</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1180</xloc>
      <yloc>1691</yloc>
      </entry>
    <entry>
      <name>ADD_COUNT 2</name>
      <description/>
      <type>SQL</type>
      <sql>
IF OBJECT_ID(&apos;TEMPDB..#item&apos;) IS NOT NULL
DROP TABLE #item

	SELECT a.ITEM_ID,
		   item_master_sid
INTO   #item
	FROM   (SELECT DISTINCT item_id
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN item_master im
			 ON im.item_id = a.item_id

IF OBJECT_ID(&apos;TEMPDB..#company&apos;) IS NOT NULL
DROP TABLE #company
	SELECT a.ORGANIZATION_KEY
		   
INTO   #company
	FROM   (SELECT DISTINCT ORGANIZATION_KEY
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN COMPANY_master im
			 ON im.COMPANY_ID = a.ORGANIZATION_KEY


IF OBJECT_ID(&apos;TEMPDB..#company1&apos;) IS NOT NULL
DROP TABLE #company1
	SELECT a.ACCOUNT_ID,
		   COMPANY_MASTER_SID
INTO   #company1
	FROM   (SELECT DISTINCT ACCOUNT_ID
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN COMPANY_master im
			 ON im.COMPANY_NO = a.ACCOUNT_ID



IF OBJECT_ID(&apos;TEMPDB..#contract&apos;) IS NOT NULL
DROP TABLE #contract
	SELECT a.CONTRACT_ID,
		   CONTRACT_MASTER_SID
INTO   #contract
	FROM   (SELECT DISTINCT CONTRACT_ID
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN CONTRACT_MASTER im
			 ON im.CONTRACT_ID = a.CONTRACT_ID

IF OBJECT_ID(&apos;TEMPDB..#rs_model&apos;) IS NOT NULL
DROP TABLE #rs_model
	SELECT a.PROVISION_ID
INTO   #rs_model
	FROM   (SELECT DISTINCT PROVISION_ID
			FROM   STAG_ACTUAL_MASTER) a
		   JOIN RS_MODEL im
			 ON im.rs_id = a.PROVISION_ID


;WITH cte AS ( 


SELECT A.ACTUAL_INTFID, 
       A.ACTUAL_ID, 
       A.CONTRACT_ID, 
       A.UPLOAD_DATE, 
       A.PROVISION_ID, 
       A.ACCRUAL_ACTUAL_START_DATE, 
       A.ACCRUAL_ACTUAL_END_DATE, 
       A.ITEM_ID, 
       A.ITEM_IDENTIFIER_CODE_QUALIFIER, 
       A.ITEM_NO, 
       A.SETTLEMENT_METHOD, 
       A.CASH_PAID_DATE, 
       A.AMOUNT, 
       A.QUANTITY, 
       A.QUANTITY_INCLUSION, 
       A.SETTLEMENT_NO, 
       A.INVOICE_LINE_NUMBER, 
       A.ACCOUNT_ID, 
       A.ACCT_IDENTIFIER_CODE_QUALIFIER, 
       A.ACCOUNT_NO, 
       A.ACCOUNT_NAME, 
       A.ANALYSIS_CODE, 
       A.IS_ACTIVE, 
       A.COM_DIV_MKT_BRAND_PROD_KEY, 
       A.PARENTCOM_DIVMKT_BRAND_PRODKEY, 
       A.PRICE_ADJUSTMENT_NAME, 
       A.PRICE, 
       A.RECORD_SEQUENCE, 
       A.SENT_OUT, 
       A.ACCRUAL_PROCESSED, 
       A.DIVISION_ID, 
       A.MARKET_ID, 
       A.BRAND_ID, 
       A.CLAIM_INDICATOR, 
       A.SALES_AMOUNT, 
       A.ORGANIZATION_KEY, 
       A.MANDATED_DISCOUNT_AMOUNT, 
       A.PROVISION_CLAIM_INDICATOR, 
       A.PROGRAM_STATE_CODE, 
       A.DISPENSED_DATE, 
       A.CREATED_BY, 
       A.CREATED_DATE, 
       A.MODIFIED_BY, 
       A.MODIFIED_DATE, 
       A.BATCH_ID, 
       A.SOURCE, 
       A.ADD_CHG_DEL_INDICATOR
     , f.COMPANY_MASTER_SID,
	  C.ITEM_MASTER_SID,
	  D.CONTRACT_MASTER_SID



,ROW_NUMBER() OVER(PARTITION BY actual_id ORDER BY (select null))&apos;RowRank&apos;
        FROM     STAG_ACTUAL_MASTER A 
       INNER JOIN #company B 
              ON A.ORGANIZATION_KEY = B.ORGANIZATION_KEY                
	   INNER JOIN #company1 F              
                 ON A.ACCOUNT_ID = F.ACCOUNT_ID 
       INNER JOIN #item C 
              ON A.ITEM_ID = C.ITEM_ID 
       INNER JOIN #contract D 
              ON A.CONTRACT_ID = D.CONTRACT_ID 
       INNER JOIN #rs_model E 
              ON A.PROVISION_ID = E.PROVISION_ID
			   where a.ADD_CHG_DEL_INDICATOR =&apos;A&apos;
	   and not exists(select ACTUAL_ID from actuals_master b where a.ACTUAL_ID=b.ACTUAL_ID)
			    )



  update a
  
  set a.ADD_COUNT= b.new_count
  from AUDIT_MASTER_INBOUND  a
inner join (select 
     count(*) as new_count,BATCH_ID

  FROM cte 
  WHERE RowRank = 1
  group by BATCH_ID)b
  on a.BATCH_ID=b.BATCH_ID
  and a.STATUS=&apos;R&apos;   AND A.APPLICATION_PROCESS=&apos;ACTUAL_MASTER_INTERFACE&apos;

</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1324</xloc>
      <yloc>1445</yloc>
      </entry>
    <entry>
      <name>ACTUAL FUNCTION</name>
      <description/>
      <type>SQL</type>
      <sql>--MERGE ACTUALS_DETAILS AD 
--USING(

INSERT INTO ACTUALS_DETAILS
(
 [PERIOD_SID]         
 ,[RS_MODEL_SID]      
 ,[CCP_DETAILS_SID]   
 ,[SALES]             
 ,[QUANTITY]          
 ,[DISCOUNT]          
 ,[QUANTITY_INCLUSION]
 ,[ACTUAL_ID]  
)


SELECT PERIOD_SID, 
RM.RS_MODEL_SID, 
             CCP.CCP_DETAILS_SID ,
             --PROVISION_ID,  
             ISNULL((SALES), 0)               AS SALES, 
             ISNULL((QUANTITY), 0)            AS QUANTITY, 
             ISNULL((DISCOUNT), 0)            AS DISCOUNT, 
             ISNULL((QUANTITY_INCLUSION), &apos;Y&apos;)AS QUANTITY_INCLUSION,
             --PERIOD_DATE                    AS START_DATE           ,  
             --EOMONTH(PERIOD_DATE)           AS END_DATE,  
             --A.YEAR,  
             --A.MONTH,  
             --A.QUARTER,  
             --A.COMPANY_MASTER_SID,  
             --A.CONTRACT_MASTER_SID,  
             --A.ITEM_MASTER_SID ,
             ACTUAL_ID
      FROM   (SELECT CONTRACT_MASTER_SID, 
                     COMPANY_MASTER_SID, 
                     ITEM_MASTER_SID, 
                     PROVISION_ID, 
                     PERIOD_SID, 
                     YEAR, 
                     MONTH, 
                     QUARTER, 
                     PERIOD_DATE, 
                     SALES, 
                     QUANTITY, 
                     DISCOUNT, 
                     QUANTITY_INCLUSION ,B.ACTUAL_ID
              FROM   PERIOD A 
                     JOIN (SELECT PROVISION_ID, 
                                  ACCRUAL_ACTUAL_START_DATE   START_DATE, 
                                  ACCRUAL_ACTUAL_END_DATE     END_DATE, 
                                  QUANTITY_INCLUSION, 
                                  A1.CONTRACT_MASTER_SID, 
                                  A1.COMPANY_MASTER_SID, 
                                  A1.ITEM_MASTER_SID, 
                                  (SALES_AMOUNT) &#47; ( DATEDIFF(MM, ACCRUAL_ACTUAL_START_DATE, ACCRUAL_ACTUAL_END_DATE)
                                                        + 1 ) SALES, 
                                  (QUANTITY) &#47; ( DATEDIFF(MM, ACCRUAL_ACTUAL_START_DATE, ACCRUAL_ACTUAL_END_DATE)
                                                    + 1 )     QUANTITY, 
                                  (AMOUNT) &#47; ( DATEDIFF(MM, ACCRUAL_ACTUAL_START_DATE, ACCRUAL_ACTUAL_END_DATE)
                                                  + 1 )       DISCOUNT 
												  ,A1.ACTUAL_ID
                           FROM   ACTUALS_MASTER A1 
                      WHERE   exists (select 1 from STAG_ACTUAL_MASTER sam where a1.ACTUAL_ID=sam.ACTUAL_ID)
						    --COMPANY_MASTER_SID = 46143 
          --                        AND CONTRACT_MASTER_SID = 36 
          --                        AND ITEM_MASTER_SID = 2523 
                         --  A1.BATCH_ID=?  
                           --GROUP  BY PROVISION_ID, 
                           --          ACCRUAL_ACTUAL_START_DATE, 
                           --          ACCRUAL_ACTUAL_END_DATE, 
                           --          QUANTITY_INCLUSION, 
                           --          A1.COMPANY_MASTER_SID, 
                           --          A1.CONTRACT_MASTER_SID, 
                           --          A1.ITEM_MASTER_SID,A1.ACTUAL_ID
									 ) B 
                       ON A.PERIOD_DATE BETWEEN B.START_DATE AND B.END_DATE)A 
             JOIN RS_MODEL RM 
               ON RM.RS_ID = A.PROVISION_ID 
             JOIN CCP_DETAILS CCP 
               ON CCP.COMPANY_MASTER_SID = A.COMPANY_MASTER_SID 
                  AND CCP.ITEM_MASTER_SID = A.ITEM_MASTER_SID 
                  AND CCP.CONTRACT_MASTER_SID = A.CONTRACT_MASTER_SID 
      --GROUP  BY PERIOD_SID, 
      --          CCP_DETAILS_SID, 
      --          RS_MODEL_SID, 
      --          QUANTITY_INCLUSION
			--	)SOURCE 
--ON AD.CCP_DETAILS_SID = SOURCE.CCP_DETAILS_SID 
--   AND AD.RS_MODEL_SID = SOURCE.RS_MODEL_SID 
--   AND AD.PERIOD_SID = SOURCE.PERIOD_SID 
--   AND AD.QUANTITY_INCLUSION = SOURCE.QUANTITY_INCLUSION 
--WHEN MATCHED THEN 
--  UPDATE SET AD.SALES = SOURCE.SALES, 
--             AD.QUANTITY = SOURCE.QUANTITY, 
--             AD.DISCOUNT = SOURCE.DISCOUNT 
--WHEN NOT MATCHED THEN 
--  INSERT ( [PERIOD_SID], 
--           [RS_MODEL_SID], 
--           [SALES], 
--           [QUANTITY], 
--           [DISCOUNT], 
--           [QUANTITY_INCLUSION], 
--           [CCP_DETAILS_SID] ) 
--  VALUES( SOURCE.[PERIOD_SID], 
--          SOURCE.[RS_MODEL_SID], 
--          SOURCE.[SALES], 
--          SOURCE.[QUANTITY], 
--          SOURCE.[DISCOUNT], 
--          SOURCE.[QUANTITY_INCLUSION], 
--          SOURCE.[CCP_DETAILS_SID] ); </sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1266</xloc>
      <yloc>1751</yloc>
      </entry>
    <entry>
      <name>SNAP</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;SNAP_INSERT.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1275</xloc>
      <yloc>965</yloc>
      </entry>
    <entry>
      <name>RETENTION_LOGIC</name>
      <description/>
      <type>JOB</type>
      <specification_method>filename</specification_method>
      <job_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;ZIP_FILE.kjb</filename>
      <jobname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Nothing</loglevel>
      <slave_server_name/>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <pass_export>N</pass_export>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <set_append_logfile>N</set_append_logfile>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1396</xloc>
      <yloc>2481</yloc>
      </entry>
    <entry>
      <name>GETTING_FILE_NAME</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;GETTING_FILE_NAME.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1194</xloc>
      <yloc>485</yloc>
      </entry>
    <entry>
      <name>Check if a folder is empty</name>
      <description/>
      <type>FOLDER_IS_EMPTY</type>
      <foldername>${INBOUND_FILE_PATH}&#47;ACTUAL_MASTER_INTERFACE&#47;Input&#47;</foldername>
      <include_subfolders>N</include_subfolders>
      <specify_wildcard>N</specify_wildcard>
      <wildcard/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>639</xloc>
      <yloc>2441</yloc>
      </entry>
    <entry>
      <name>SET_STAG_COUNT</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;SET_STAG_COUNT.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>692</xloc>
      <yloc>454</yloc>
      </entry>
    <entry>
      <name>TRUNCATE STAG TABLE 2</name>
      <description/>
      <type>TRUNCATE_TABLES</type>
      <connection>BPI DB</connection>
      <arg_from_previous>N</arg_from_previous>
      <fields>
        <field>
          <name>STAG_ACTUAL_MASTER</name>
          <schemaname/>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1208</xloc>
      <yloc>326</yloc>
      </entry>
    <entry>
      <name>STOP PROCESS AUDIT (2) 2</name>
      <description/>
      <type>SQL</type>
      <sql>

UPDATE WORKFLOW_PROFILE SET VALIDATION=&apos;N&apos; where PROCESS_NAME=&apos;ACTUAL_MASTER_INTERFACE&apos;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1742</xloc>
      <yloc>677</yloc>
      </entry>
    <entry>
      <name>ACTUALS_DETAIL_BACKUP_TABLE</name>
      <description/>
      <type>SQL</type>
      <sql>--DECLARE @sql nvarchar(max)
--DECLARE @sql1 nvarchar(max)
--DECLARE @TABLE_NAME varchar(100),@columnName varchar(100)=&apos;a&apos;,@columnName1 varchar(100)=&apos;b&apos;
--SET @TABLE_NAME =(SELECT CONCAT(&apos;ACTUALS_DETAILS&apos;, &apos;_&apos;, YEAR(GETDATE()), &apos;_&apos;, CASE
--    WHEN MONTH(GETDATE()) &lt;=6 THEN &apos;SEMI_ANNUAL_1&apos;
--    ELSE &apos;SEMI_ANNUAL_2&apos;
--  END))
-- -- select @TABLE_NAME

--  IF NOT EXISTS (SELECT &apos;X&apos;
--               FROM   INFORMATION_SCHEMA.TABLES
--               WHERE  TABLE_NAME = @TABLE_NAME
--                      AND TABLE_SCHEMA = &apos;dbo&apos;)
--  BEGIN
--  -- select 1

   
----DECLARE @TABLE_NAME varchar(100)
----SET @TABLE_NAME =(SELECT CONCAT(&apos;A&apos;, &apos;_&apos;, YEAR(GETDATE()), &apos;_&apos;, CASE
----    WHEN MONTH(GETDATE()) &lt;=6 THEN &apos;SEMI_ANNUAL_1&apos;
----    ELSE &apos;SEMI_ANNUAL_2&apos;
----  END))

--  --DECLARE  @SQL NVARCHAR(MAX), @SQL1 NVARCHAR(MAX)
--  set @sql1=&apos;

--		[PERIOD_SID] [int] NOT NULL,
--	[RS_MODEL_SID] [varchar](50) NOT NULL,
--	[CCP_DETAILS_SID] [int] NOT NULL,
--	[SALES] [numeric](22, 6) NOT NULL,
--	[QUANTITY] [numeric](22, 6) NOT NULL,
--	[DISCOUNT] [numeric](22, 6) NOT NULL,
--	[QUANTITY_INCLUSION] [varchar](10) NOT NULL,
--	[ACTUAL_ID] [varchar](50) NOT NULL
--        &apos;
--SET @SQL =&apos;CREATE TABLE &apos;  + @TABLE_NAME + &apos;( &apos;+@sql1+&apos; )&apos;
--exec(  @SQL)





--	  set @sql= &apos;insert into &apos; +@TABLE_NAME+ 
--   &apos; select * from ACTUALS_DETAILS&apos;

--  exec (@sql)
--   end

--   else

--   begin
----select 3
--	  set @sql= &apos;insert into &apos; +@TABLE_NAME+ 
--   &apos; select * from ACTUALS_DETAILS&apos;

--    exec (@sql)

--   end




DECLARE @SQL NVARCHAR(MAX)
       ,@SQL1 NVARCHAR(MAX)
       ,@TABLE_NAME VARCHAR(100)
       ,@SQL2 NVARCHAR(MAX)

SELECT @TABLE_NAME = (SELECT CONCAT (&apos;ACTUALS_DETAILS&apos;,&apos;_&apos;,YEAR(GETDATE()),&apos;_&apos;,CASE WHEN MONTH(GETDATE()) &lt;= 6 THEN &apos;SEMI_ANNUAL_1&apos; ELSE &apos;SEMI_ANNUAL_2&apos; END))


IF NOT EXISTS (
              SELECT &apos;X&apos;
              FROM INFORMATION_SCHEMA.TABLES
              WHERE TABLE_NAME = @TABLE_NAME
                     AND TABLE_SCHEMA = &apos;DBO&apos;
              )
BEGIN
       SET @SQL1 = &apos;
SELECT @SQL2=STUFF((
            SELECT &apos;&apos;,&apos;&apos; + CONCAT(COLUMN_NAME,&apos;&apos; &apos;&apos; ,DATA_TYPE ,CASE  WHEN DATA_TYPE IN ( &apos;&apos;char&apos;&apos; ,&apos;&apos;VARCHAR&apos;&apos; )
                                                THEN CONCAT (
                                                              &apos;&apos;(&apos;&apos;
                                                              ,CHARACTER_MAXIMUM_LENGTH
                                                              ,&apos;&apos;)&apos;&apos;
                                                              )
                                         WHEN DATA_TYPE = &apos;&apos;numeric&apos;&apos;
                                                THEN CONCAT (
                                                              &apos;&apos;(&apos;&apos;
                                                              ,NUMERIC_PRECISION
                                                              ,&apos;&apos;,&apos;&apos;,NUMERIC_SCALE
                                                              ,&apos;&apos;)&apos;&apos;
                                                              )
                                         ELSE &apos;&apos;&apos;&apos;
                                         END
                                  ,&apos;&apos; &apos;&apos; ,CASE WHEN IS_NULLABLE=&apos;&apos;NO&apos;&apos; THEN &apos;&apos;NOT NULL&apos;&apos; ELSE &apos;&apos;NULL&apos;&apos; END )
            FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME =&apos;&apos;ACTUALS_DETAILS&apos;&apos;
                     order by ORDINAL_POSITION 
            FOR XML PATH(&apos;&apos;&apos;&apos;)
            ), 1, 1, &apos;&apos;&apos;&apos;) 
&apos;

       EXEC SP_EXECUTESQL @SQL1
              ,N&apos;@SQL2 NVARCHAR(MAX) OUTPUT&apos;
              ,@SQL2 OUTPUT
       SET @SQL = &apos;CREATE TABLE &apos; + @TABLE_NAME + &apos;( &apos; + @SQL2 + &apos; )&apos;

       EXEC (@SQL)

       SET @SQL = &apos;INSERT INTO &apos; + @TABLE_NAME + &apos; SELECT * FROM ACTUALS_DETAILS&apos;

       EXEC (@SQL)
END
ELSE
BEGIN
       SET @SQL = &apos;INSERT INTO  &apos; + @TABLE_NAME + &apos; SELECT * FROM ACTUALS_DETAILS&apos;

       EXEC (@SQL)
         
END






</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>693</xloc>
      <yloc>1166</yloc>
      </entry>
    <entry>
      <name>ACTUALS_BACKUP_TABLE 2</name>
      <description/>
      <type>SQL</type>
      <sql>--DECLARE @sql nvarchar(max)
--DECLARE @sql1 nvarchar(max)
--DECLARE @TABLE_NAME varchar(100),@columnName varchar(100)=&apos;a&apos;,@columnName1 varchar(100)=&apos;b&apos;
--SET @TABLE_NAME =(SELECT CONCAT(&apos;ACTUALS_MASTER&apos;, &apos;_&apos;, YEAR(GETDATE()), &apos;_&apos;, CASE
--    WHEN MONTH(GETDATE()) &lt;=6 THEN &apos;SEMI_ANNUAL_1&apos;
--    ELSE &apos;SEMI_ANNUAL_2&apos;
--  END))
-- -- select @TABLE_NAME

--  IF NOT EXISTS (SELECT &apos;X&apos;
--               FROM   INFORMATION_SCHEMA.TABLES
--               WHERE  TABLE_NAME = @TABLE_NAME
--                      AND TABLE_SCHEMA = &apos;dbo&apos;)
--  BEGIN
--  -- select 1

   
----DECLARE @TABLE_NAME varchar(100)
----SET @TABLE_NAME =(SELECT CONCAT(&apos;A&apos;, &apos;_&apos;, YEAR(GETDATE()), &apos;_&apos;, CASE
----    WHEN MONTH(GETDATE()) &lt;=6 THEN &apos;SEMI_ANNUAL_1&apos;
----    ELSE &apos;SEMI_ANNUAL_2&apos;
----  END))

--  --DECLARE  @SQL NVARCHAR(MAX), @SQL1 NVARCHAR(MAX)
--  set @sql1=&apos;

--	[ACTUALS_MASTER_SID] [int]  NOT NULL,
--	[ACTUAL_ID] [varchar](50) NOT NULL,
--	[CONTRACT_ID] [varchar](50) NOT NULL,
--	[UPLOAD_DATE] [datetime] NULL,
--	[PROVISION_ID] [varchar](50) NULL,
--	[ACCRUAL_ACTUAL_START_DATE] [datetime] NOT NULL,
--	[ACCRUAL_ACTUAL_END_DATE] [datetime] NOT NULL,
--	[ITEM_ID] [varchar](50) NOT NULL,
--	[ITEM_IDENTIFIER_CODE_QUALIFIER] [varchar](50) NULL,
--	[ITEM_NO] [varchar](50) NULL,
--	[COMPANY_MASTER_SID] [int] NOT NULL,
--	[CONTRACT_MASTER_SID] [int] NOT NULL,
--	[ITEM_MASTER_SID] [int] NOT NULL,
--	[SETTLEMENT_METHOD_NO] [varchar](50) NULL,
--	[CASH_PAID_DATE] [datetime] NOT NULL,
--	[AMOUNT] [numeric](22, 6) NOT NULL,
--	[QUANTITY] [numeric](22, 6) NOT NULL,
--	[QUANTITY_INCLUSION] [varchar](10) NOT NULL,
--	[SETTLEMENT_NO] [varchar](100) NULL,
--	[INVOICE_LINE_NO] [varchar](100) NULL,
--	[ACCOUNT_ID] [varchar](100) NOT NULL,
--	[ACCT_IDENTIFIER_CODE_QUALIFIER] [varchar](100) NULL,
--	[ACCOUNT_NO] [varchar](100) NULL,
--	[ACCOUNT_NAME] [varchar](100) NULL,
--	[ANALYSIS_CODE] [char](50) NULL,
--	[IS_ACTIVE] [char](2) NULL,
--	[COM_DIV_MKT_BRAND_PROD_KEY] [varchar](100) NULL,
--	[PARENTCOM_DIVMKT_BRAND_PRODKEY] [varchar](100) NULL,
--	[PRICE_ADJUSTMENT_NAME] [varchar](100) NULL,
--	[PRICE] [numeric](22, 6) NULL,
--	[RECORD_SEQUENCE] [varchar](30) NULL,
--	[SENT_OUT] [char](5) NULL,
--	[ACCRUAL_PROCESSED] [char](5) NULL,
--	[DIVISION_ID] [varchar](38) NULL,
--	[MARKET_ID] [varchar](38) NULL,
--	[BRAND_ID] [varchar](38) NULL,
--	[CLAIM_INDICATOR] [varchar](50) NULL,
--	[SALES_AMOUNT] [numeric](22, 6) NOT NULL,
--	[ORGANIZATION_KEY] [varchar](50) NOT NULL,
--	[MANDATED_DISCOUNT_AMOUNT] [numeric](22, 6) NULL,
--	[PROVISION_CLAIM_INDICATOR] [varchar](10) NULL,
--	[PROGRAM_STATE_CODE] [varchar](10) NULL,
--	[DISPENSED_DATE] [datetime] NULL,
--	[INBOUND_STATUS] [char](1) NULL,
--	[RECORD_LOCK_STATUS] [bit] NOT NULL,
--	[BATCH_ID] [varchar](50) NOT NULL,
--	[SOURCE] [varchar](50) NULL,
--	[CREATED_BY] [int] NOT NULL,
--	[CREATED_DATE] [datetime] NOT NULL,
--	[MODIFIED_BY] [int] NOT NULL,
--	[MODIFIED_DATE] [datetime] NOT NULL
--        &apos;
--SET @SQL =&apos;CREATE TABLE &apos;  + @TABLE_NAME + &apos;( &apos;+@sql1+&apos; )&apos;
--exec(  @SQL)





--	  set @sql= &apos;insert into &apos; +@TABLE_NAME+ 
--   &apos; select * from actuals_master&apos;

--  exec (@sql)
--   end

--   else

--   begin
----select 3
--	  set @sql= &apos;insert into &apos; +@TABLE_NAME+ 
--   &apos; select * from actuals_master&apos;

--    exec (@sql)

--   end




DECLARE @SQL NVARCHAR(MAX)
       ,@SQL1 NVARCHAR(MAX)
       ,@TABLE_NAME VARCHAR(100)
       ,@SQL2 NVARCHAR(MAX)

SELECT @TABLE_NAME = (SELECT CONCAT (&apos;ACTUALS_MASTER&apos;,&apos;_&apos;,YEAR(GETDATE()),&apos;_&apos;,CASE WHEN MONTH(GETDATE()) &lt;= 6 THEN &apos;SEMI_ANNUAL_1&apos; ELSE &apos;SEMI_ANNUAL_2&apos; END))


IF NOT EXISTS (
              SELECT &apos;X&apos;
              FROM INFORMATION_SCHEMA.TABLES
              WHERE TABLE_NAME = @TABLE_NAME
                     AND TABLE_SCHEMA = &apos;DBO&apos;
              )
BEGIN
       SET @SQL1 = &apos;
SELECT @SQL2=STUFF((
            SELECT &apos;&apos;,&apos;&apos; + CONCAT(COLUMN_NAME,&apos;&apos; &apos;&apos; ,DATA_TYPE ,CASE  WHEN DATA_TYPE IN ( &apos;&apos;char&apos;&apos; ,&apos;&apos;VARCHAR&apos;&apos; )
                                                THEN CONCAT (
                                                              &apos;&apos;(&apos;&apos;
                                                              ,CHARACTER_MAXIMUM_LENGTH
                                                              ,&apos;&apos;)&apos;&apos;
                                                              )
                                         WHEN DATA_TYPE = &apos;&apos;numeric&apos;&apos;
                                                THEN CONCAT (
                                                              &apos;&apos;(&apos;&apos;
                                                              ,NUMERIC_PRECISION
                                                              ,&apos;&apos;,&apos;&apos;,NUMERIC_SCALE
                                                              ,&apos;&apos;)&apos;&apos;
                                                              )
                                         ELSE &apos;&apos;&apos;&apos;
                                         END
                                  ,&apos;&apos; &apos;&apos; ,CASE WHEN IS_NULLABLE=&apos;&apos;NO&apos;&apos; THEN &apos;&apos;NOT NULL&apos;&apos; ELSE &apos;&apos;NULL&apos;&apos; END )
            FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME =&apos;&apos;ACTUALS_MASTER&apos;&apos;
                     order by ORDINAL_POSITION 
            FOR XML PATH(&apos;&apos;&apos;&apos;)
            ), 1, 1, &apos;&apos;&apos;&apos;) 
&apos;

       EXEC SP_EXECUTESQL @SQL1
              ,N&apos;@SQL2 NVARCHAR(MAX) OUTPUT&apos;
              ,@SQL2 OUTPUT
       SET @SQL = &apos;CREATE TABLE &apos; + @TABLE_NAME + &apos;( &apos; + @SQL2 + &apos; )&apos;

       EXEC (@SQL)

       SET @SQL = &apos;INSERT INTO &apos; + @TABLE_NAME + &apos; SELECT * FROM ACTUALS_MASTER&apos;

       EXEC (@SQL)
END
ELSE
BEGIN
       SET @SQL = &apos;INSERT INTO  &apos; + @TABLE_NAME + &apos; SELECT * FROM ACTUALS_MASTER&apos;

       EXEC (@SQL)
         
END



</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>691</xloc>
      <yloc>1282</yloc>
      </entry>
    <entry>
      <name>Simple evaluation 2 4</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${FULLLOAD}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>Y</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>777</xloc>
      <yloc>1064</yloc>
      </entry>
    <entry>
      <name>TRUNCATE ACTUALS_DETAILS&#47;ACTUALS_MASTER</name>
      <description/>
      <type>TRUNCATE_TABLES</type>
      <connection>BPI DB</connection>
      <arg_from_previous>N</arg_from_previous>
      <fields>
        <field>
          <name>ACTUALS_DETAILS</name>
          <schemaname/>
        </field>
        <field>
          <name>ACTUALS_MASTER</name>
          <schemaname/>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>851</xloc>
      <yloc>1441</yloc>
      </entry>
    <entry>
      <name>ACTUALS_BACKUP_TABLE 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>
      INSERT INTO HIST_ACTUALS_MASTER
                  (ACTUALS_MASTER_SID,
                   ACTUAL_ID,
                   CONTRACT_ID,
                   UPLOAD_DATE,
                   PROVISION_ID,
                   ACCRUAL_ACTUAL_START_DATE,
                   ACCRUAL_ACTUAL_END_DATE,
                   ITEM_ID,
                   ITEM_IDENTIFIER_CODE_QUALIFIER,
                   ITEM_NO,
                   [COMPANY_MASTER_SID],
                   [CONTRACT_MASTER_SID],
                   [ITEM_MASTER_SID],
                   SETTLEMENT_METHOD_NO,
                   CASH_PAID_DATE,
                   AMOUNT,
                   QUANTITY,
                   QUANTITY_INCLUSION,
                   SETTLEMENT_NO,
                   INVOICE_LINE_NO,
                   ACCOUNT_ID,
                   ACCT_IDENTIFIER_CODE_QUALIFIER,
                   ACCOUNT_NO,
                   ACCOUNT_NAME,
                   ANALYSIS_CODE,
                   IS_ACTIVE,
                   COM_DIV_MKT_BRAND_PROD_KEY,
                   PARENTCOM_DIVMKT_BRAND_PRODKEY,
                   PRICE_ADJUSTMENT_NAME,
                   PRICE,
                   RECORD_SEQUENCE,
                   SENT_OUT,
                   ACCRUAL_PROCESSED,
                   DIVISION_ID,
                   MARKET_ID,
                   BRAND_ID,
                   CLAIM_INDICATOR,
                   SALES_AMOUNT,
                   ORGANIZATION_KEY,
                   MANDATED_DISCOUNT_AMOUNT,
                   PROVISION_CLAIM_INDICATOR,
                   PROGRAM_STATE_CODE,
                   DISPENSED_DATE,
                   RECORD_LOCK_STATUS,
                   BATCH_ID,
                   SOURCE,
                   INBOUND_STATUS,
                   ACTION_FLAG,
                   CREATED_BY,
                   CREATED_DATE,
                   MODIFIED_BY,
                   MODIFIED_DATE)
      SELECT ACTUALS_MASTER_SID,
             ACTUAL_ID,
             CONTRACT_ID,
             UPLOAD_DATE,
             PROVISION_ID,
             ACCRUAL_ACTUAL_START_DATE,
             ACCRUAL_ACTUAL_END_DATE,
             ITEM_ID,
             ITEM_IDENTIFIER_CODE_QUALIFIER,
             ITEM_NO,
             [COMPANY_MASTER_SID],
             [CONTRACT_MASTER_SID],
             [ITEM_MASTER_SID],
             SETTLEMENT_METHOD_NO,
             CASH_PAID_DATE,
             AMOUNT,
             QUANTITY,
             QUANTITY_INCLUSION,
             SETTLEMENT_NO,
             INVOICE_LINE_NO,
             ACCOUNT_ID,
             ACCT_IDENTIFIER_CODE_QUALIFIER,
             ACCOUNT_NO,
             ACCOUNT_NAME,
             ANALYSIS_CODE,
             IS_ACTIVE,
             COM_DIV_MKT_BRAND_PROD_KEY,
             PARENTCOM_DIVMKT_BRAND_PRODKEY,
             PRICE_ADJUSTMENT_NAME,
             PRICE,
             RECORD_SEQUENCE,
             SENT_OUT,
             ACCRUAL_PROCESSED,
             DIVISION_ID,
             MARKET_ID,
             BRAND_ID,
             CLAIM_INDICATOR,
             SALES_AMOUNT,
             ORGANIZATION_KEY,
             MANDATED_DISCOUNT_AMOUNT,
             PROVISION_CLAIM_INDICATOR,
             PROGRAM_STATE_CODE,
             DISPENSED_DATE,
             RECORD_LOCK_STATUS,
             BATCH_ID,
             SOURCE,
             INBOUND_STATUS,
             &apos;D&apos;,
             CREATED_BY,
             CREATED_DATE,
             MODIFIED_BY,
             MODIFIED_DATE
      FROM   ACTUALS_MASTER


</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>907</xloc>
      <yloc>1284</yloc>
      </entry>
    <entry>
      <name>ACTUALS_DETAIL_BACKUP_TABLE 2</name>
      <description/>
      <type>SQL</type>
      <sql>
IF NOT EXISTS(SELECT 1
              FROM   SYS.TABLES
              WHERE  NAME = &apos;HIST_ACTUALS_DETAILS&apos;)
  SELECT *
  INTO   HIST_ACTUALS_DETAILS
  FROM   ACTUALS_DETAILS
  WHERE  1 = 0

IF NOT EXISTS (SELECT 1
               FROM   INFORMATION_SCHEMA.COLUMNS
               WHERE  TABLE_NAME = &apos;HIST_ACTUALS_DETAILS&apos;
                      AND COLUMN_NAME = &apos;ACTION_DATE&apos;)
  ALTER TABLE HIST_ACTUALS_DETAILS
    ADD ACTION_DATE DATETIME NOT NULL

IF NOT EXISTS(SELECT 1
              FROM   SYS.DEFAULT_CONSTRAINTS
              WHERE  NAME = &apos;DF_HIST_ACTUALS_DETAILS_ACTION_DATE&apos;)
  ALTER TABLE HIST_ACTUALS_DETAILS
    ADD CONSTRAINT DF_HIST_ACTUALS_DETAILS_ACTION_DATE DEFAULT Getdate() FOR ACTION_DATE

INSERT INTO HIST_ACTUALS_DETAILS
            (PERIOD_SID,
             RS_MODEL_SID,
             CCP_DETAILS_SID,
             SALES,
             QUANTITY,
             DISCOUNT,
             QUANTITY_INCLUSION,
             ACTUAL_ID)
SELECT PERIOD_SID,
       RS_MODEL_SID,
       CCP_DETAILS_SID,
       SALES,
       QUANTITY,
       DISCOUNT,
       QUANTITY_INCLUSION,
       ACTUAL_ID
FROM   ACTUALS_DETAILS 
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>926</xloc>
      <yloc>1163</yloc>
      </entry>
    <entry>
      <name>FULL LOAD PURGE DAYS</name>
      <description/>
      <type>SQL</type>
      <sql>DECLARE @NO_OF_DAYS INT=${FULL_LOAD_PURGE_DAYS}
DELETE FROM HIST_ACTUALS_MASTER
WHERE  CONVERT(DATE, ACTION_DATE) &lt;= CONVERT(DATE, Getdate() - @NO_OF_DAYS)


DELETE FROM HIST_ACTUALS_DETAILS
WHERE  CONVERT(DATE, ACTION_DATE) &lt;= CONVERT(DATE, Getdate() - @NO_OF_DAYS)
</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1555</xloc>
      <yloc>2483</yloc>
      </entry>
    <entry>
      <name>SNAP TABLE PURGE</name>
      <description/>
      <type>SQL</type>
      <sql>DECLARE @SQL        VARCHAR(MAX),
        @TABLE_NAME VARCHAR(100)=&apos;SNAP_ACTUAL_MASTER&apos;,
        @NO_OF_DAYS INT=${FULL_LOAD_PURGE_DAYS}
		,@var1 varchar(2)=&apos;&lt;&apos;


SET @SQL=replace((SELECT Concat(&apos;DELETE FROM &apos;, NAME, &apos; WHERE CONVERT(DATE,INTF_INSERTED_DATE)&apos;,@var1,&apos;CONVERT(DATE,GETDATE()-&apos;, @NO_OF_DAYS, &apos;)&apos;, &apos;&apos;)
          FROM   SYS.TABLES
          WHERE  NAME LIKE @TABLE_NAME + &apos;%SEMI_ANNUAL%&apos;
          FOR XML PATH(&apos;&apos;)),&apos;;&apos;,&apos;&apos;)

SET @SQL= Replace(@SQL, &apos;&amp;LT&apos;, &apos;&lt;&apos;)

exec ( @SQL)

SET @SQL=(SELECT Concat(&apos; IF NOT EXISTS (SELECT 1 FROM &apos;, NAME, &apos;) DROP TABLE &apos;, NAME)
          FROM   SYS.TABLES
          WHERE  NAME LIKE @TABLE_NAME + &apos;%SEMI_ANNUAL%&apos;
          FOR XML PATH(&apos;&apos;))

exec( @SQL) 

</sql>
      <useVariableSubstitution>T</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>T</sendOneStatement>
      <connection>STAGING DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1744</xloc>
      <yloc>2484</yloc>
      </entry>
    <entry>
      <name>SET_ENVIROIMENTAL_VARIABLE</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${Internal.Job.Filename.Directory}&#47;SET_ENVIROIMENTAL_VARIABLE.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>442</xloc>
      <yloc>443</yloc>
      </entry>
    <entry>
      <name>Check if a folder is empty 2</name>
      <description/>
      <type>FOLDER_IS_EMPTY</type>
      <foldername>${INBOUND_FILE_PATH}&#47;ACTUAL_MASTER_INTERFACE&#47;Input&#47;</foldername>
      <include_subfolders>N</include_subfolders>
      <specify_wildcard>N</specify_wildcard>
      <wildcard/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1923</xloc>
      <yloc>220</yloc>
      </entry>
    <entry>
      <name>FULLLOAD</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;FULLLOAD.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile>${Internal.Job.Filename.Directory}&#47;Error_log</logfile>
      <logext>txt</logext>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Error</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>659</xloc>
      <yloc>274</yloc>
      </entry>
    <entry>
      <name>Simple evaluation 2 4 2</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${FULLLOAD}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>Y</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>901</xloc>
      <yloc>345</yloc>
      </entry>
    <entry>
      <name>TRUNCATE STAG TABLE 2 2</name>
      <description/>
      <type>TRUNCATE_TABLES</type>
      <connection>BPI DB</connection>
      <arg_from_previous>N</arg_from_previous>
      <fields>
        <field>
          <name>IVLD_ACTUAL_MASTER</name>
          <schemaname/>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1023</xloc>
      <yloc>225</yloc>
      </entry>
    <entry>
      <name>PRECISION</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;COMMON_PRECISION.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1878</xloc>
      <yloc>2484</yloc>
      </entry>
    <entry>
      <name>Simple evaluation 2 4 2 2</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${SOURCE_MODE}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>DATABASE</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1033</xloc>
      <yloc>399</yloc>
      </entry>
    <entry>
      <name>TRUNCATE INTERFACE TABLE 2</name>
      <description/>
      <type>TRUNCATE_TABLES</type>
      <connection>STAGING DB</connection>
      <arg_from_previous>N</arg_from_previous>
      <fields>
        <field>
          <name>ACTUAL_MASTER_INTERFACE</name>
          <schemaname/>
        </field>
      </fields>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1412</xloc>
      <yloc>369</yloc>
      </entry>
    <entry>
      <name>DATABASE FETCH</name>
      <description/>
      <type>JOB</type>
      <specification_method>filename</specification_method>
      <job_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;COMMON_SOURCE_DATABASE.kjb</filename>
      <jobname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Nothing</loglevel>
      <slave_server_name/>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <pass_export>N</pass_export>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <set_append_logfile>N</set_append_logfile>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1039</xloc>
      <yloc>583</yloc>
      </entry>
    <entry>
      <name>Simple evaluation 2 4 2 2 2</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${SOURCE_TABLE_AVAILABLE}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>Y</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1043</xloc>
      <yloc>492</yloc>
      </entry>
    <entry>
      <name>MAIL (2) 2</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;SOURCE_TO_TARGET_FAIL_MAIL.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile/>
      <logext/>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Basic</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1631</xloc>
      <yloc>413</yloc>
      </entry>
    <entry>
      <name>Simple evaluation 2 4 2 2 3</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${SOURCE_MODE}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>DATABASE</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>940</xloc>
      <yloc>2261</yloc>
      </entry>
    <entry>
      <name>Simple evaluation 2 4 2 2 3 2</name>
      <description/>
      <type>SIMPLE_EVAL</type>
      <valuetype>variable</valuetype>
      <fieldname/>
      <variablename>${SOURCE_MODE}</variablename>
      <fieldtype>string</fieldtype>
      <mask/>
      <comparevalue>DATABASE</comparevalue>
      <minvalue/>
      <maxvalue/>
      <successcondition>equal</successcondition>
      <successnumbercondition>equal</successnumbercondition>
      <successbooleancondition>false</successbooleancondition>
      <successwhenvarset>N</successwhenvarset>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>2044</xloc>
      <yloc>536</yloc>
      </entry>
    <entry>
      <name>STOP PROCESS AUDIT (2) 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>update AUDIT_MASTER_INBOUND set status=&apos;E&apos; where STATUS=&apos;R&apos; and APPLICATION_PROCESS=&apos;ACTUAL_MASTER_INTERFACE&apos;



UPDATE WORKFLOW_PROFILE SET VALIDATION=&apos;N&apos; where PROCESS_NAME=&apos;ACTUAL_MASTER_INTERFACE&apos;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>2163</xloc>
      <yloc>1179</yloc>
      </entry>
    <entry>
      <name>STOP PROCESS AUDIT (2) 2 2 2</name>
      <description/>
      <type>SQL</type>
      <sql>

UPDATE WORKFLOW_PROFILE SET VALIDATION=&apos;N&apos; where PROCESS_NAME=&apos;ACTUAL_MASTER_INTERFACE&apos;</sql>
      <useVariableSubstitution>F</useVariableSubstitution>
      <sqlfromfile>F</sqlfromfile>
      <sqlfilename/>
      <sendOneStatement>F</sendOneStatement>
      <connection>BPI DB</connection>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>2140</xloc>
      <yloc>368</yloc>
      </entry>
    <entry>
      <name>Check if a folder is empty 3</name>
      <description/>
      <type>FOLDER_IS_EMPTY</type>
      <foldername>${INBOUND_FILE_PATH}&#47;${INTERFACE_NAME_INPUT}</foldername>
      <include_subfolders>N</include_subfolders>
      <specify_wildcard>N</specify_wildcard>
      <wildcard/>
      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>844</xloc>
      <yloc>236</yloc>
      </entry>
    <entry>
      <name>UNLOCK</name>
      <description/>
      <type>TRANS</type>
      <specification_method>filename</specification_method>
      <trans_object_id/>
      <filename>${COMMON_LOGIC_PATH}&#47;UNLOCK.ktr</filename>
      <transname/>
      <arg_from_previous>N</arg_from_previous>
      <params_from_previous>N</params_from_previous>
      <exec_per_row>N</exec_per_row>
      <clear_rows>N</clear_rows>
      <clear_files>N</clear_files>
      <set_logfile>N</set_logfile>
      <logfile>${Internal.Job.Filename.Directory}&#47;Error_log</logfile>
      <logext>txt</logext>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <loglevel>Error</loglevel>
      <cluster>N</cluster>
      <slave_server_name/>
      <set_append_logfile>N</set_append_logfile>
      <wait_until_finished>Y</wait_until_finished>
      <follow_abort_remote>N</follow_abort_remote>
      <create_parent_folder>N</create_parent_folder>
      <parameters>        <pass_all_parameters>Y</pass_all_parameters>
      </parameters>      <parallel>N</parallel>
      <draw>Y</draw>
      <nr>0</nr>
      <xloc>1183</xloc>
      <yloc>1980</yloc>
      </entry>
  </entries>
  <hops>
    <hop>
      <from>TRUNCATE STAG TABLE</from>
      <to>TRUNCATE INTERFACE TABLE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>CHECKING FILE</from>
      <to>VALIDATING FILE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DATAFETCH</from>
      <to>MAIL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>TRUNCATE STAG TABLE</from>
      <to>MAIL (3)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>TRUNCATE INTERFACE TABLE</from>
      <to>MAIL (4)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>REPROCESSING_INVALID_DATA</from>
      <to>VALIDATIONS</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL</from>
      <to>STOP PROCESS AUDIT (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (2)</from>
      <to>STOP PROCESS AUDIT (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (3)</from>
      <to>STOP PROCESS AUDIT (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (4)</from>
      <to>STOP PROCESS AUDIT (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATING FILE</from>
      <to>HANDLING_AUDIT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>HANDLING_AUDIT</from>
      <to>DATAFETCH</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>HANDLING_AUDIT</from>
      <to>MAIL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DATAFETCH</from>
      <to>STAG</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATIONS</from>
      <to>SQL 3 2 2 3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SQL 3 2 2 3</from>
      <to>SQL 3 2 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATIONS 2</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>INVALID_INDICATOR</from>
      <to>DUPLICATE RECORD IN STAGING</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DUPLICATE RECORD IN STAGING</from>
      <to>DUPLICATE RECORD</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MASTER_TABLE_INSERT</from>
      <to>ADD_COUNT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MASTER_TABLE_INSERT</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DUPLICATE RECORD</from>
      <to>VALIDATION</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATION</from>
      <to>VALIDATION UPDATE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ADD_COUNT</from>
      <to>VALIDATIONS 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATION UPDATE</from>
      <to>ADD_COUNT 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ADD_COUNT 2</from>
      <to>MASTER_TABLE_INSERT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATION UPDATE</from>
      <to>MASTER_TABLE_INSERT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MASTER_TABLE_INSERT</from>
      <to>ACTUAL FUNCTION</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ACTUAL FUNCTION</from>
      <to>VALIDATIONS 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MASTER_TABLE_INSERT</from>
      <to>VALIDATIONS 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STAG</from>
      <to>MAIL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ADD_COUNT 2</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATION UPDATE</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATION</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DUPLICATE RECORD</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DUPLICATE RECORD IN STAGING</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>INVALID_INDICATOR</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ACTUAL FUNCTION</from>
      <to>MAIL (2)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STAG</from>
      <to>SNAP</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SNAP</from>
      <to>MAIL</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STOP PROCESS AUDIT (3)</from>
      <to>RETENTION_LOGIC</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>GETTING_FILE_NAME</from>
      <to>CHECKING FILE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check if a folder is empty</from>
      <to>STOP PROCESS AUDIT (3)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check if a folder is empty</from>
      <to>STOP PROCESS AUDIT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SET_STAG_COUNT</from>
      <to>REPROCESSING_INVALID_DATA</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>CHECKING FILE</from>
      <to>STOP PROCESS AUDIT (2) 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATING FILE</from>
      <to>STOP PROCESS AUDIT (2) 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ACTUALS_DETAIL_BACKUP_TABLE</from>
      <to>ACTUALS_BACKUP_TABLE 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4</from>
      <to>ACTUALS_DETAIL_BACKUP_TABLE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ACTUALS_BACKUP_TABLE 2</from>
      <to>TRUNCATE ACTUALS_DETAILS&#47;ACTUALS_MASTER</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>N</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>TRUNCATE ACTUALS_DETAILS&#47;ACTUALS_MASTER</from>
      <to>INVALID_INDICATOR</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4</from>
      <to>INVALID_INDICATOR</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>REPROCESSING_INVALID_DATA</from>
      <to>INVALID_INDICATOR</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ACTUALS_BACKUP_TABLE 2 2</from>
      <to>TRUNCATE ACTUALS_DETAILS&#47;ACTUALS_MASTER</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4</from>
      <to>ACTUALS_DETAIL_BACKUP_TABLE 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>ACTUALS_DETAIL_BACKUP_TABLE 2</from>
      <to>ACTUALS_BACKUP_TABLE 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>RETENTION_LOGIC</from>
      <to>FULL LOAD PURGE DAYS</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>FULL LOAD PURGE DAYS</from>
      <to>SNAP TABLE PURGE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>START</from>
      <to>SET_ENVIROIMENTAL_VARIABLE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>Y</unconditional>
    </hop>
    <hop>
      <from>SET_ENVIROIMENTAL_VARIABLE</from>
      <to>STOP PROCESS AUDIT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check if a folder is empty 2</from>
      <to>STOP PROCESS</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check if a folder is empty 2</from>
      <to>STOP PROCESS AUDIT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SNAP</from>
      <to>Simple evaluation 2 4</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STOP PROCESS AUDIT</from>
      <to>FULLLOAD</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>FULLLOAD</from>
      <to>SET_STAG_COUNT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>REPROCESSING_INVALID_DATA</from>
      <to>Simple evaluation 2 4 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>TRUNCATE STAG TABLE 2 2</from>
      <to>TRUNCATE STAG TABLE 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2</from>
      <to>TRUNCATE STAG TABLE 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>SNAP TABLE PURGE</from>
      <to>PRECISION</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>TRUNCATE STAG TABLE 2</from>
      <to>TRUNCATE INTERFACE TABLE 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>TRUNCATE INTERFACE TABLE 2</from>
      <to>Simple evaluation 2 4 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2</from>
      <to>GETTING_FILE_NAME</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DATABASE FETCH</from>
      <to>HANDLING_AUDIT</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2</from>
      <to>Simple evaluation 2 4 2 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2 2</from>
      <to>DATABASE FETCH</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2 2</from>
      <to>GETTING_FILE_NAME</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>DATABASE FETCH</from>
      <to>MAIL (2) 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (2) 2</from>
      <to>STOP PROCESS AUDIT (2) 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>TRUNCATE INTERFACE TABLE</from>
      <to>Simple evaluation 2 4 2 2 3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2 3</from>
      <to>STOP PROCESS AUDIT (3)</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2 3</from>
      <to>Check if a folder is empty</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STOP PROCESS AUDIT (2) 2</from>
      <to>Simple evaluation 2 4 2 2 3 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STOP PROCESS AUDIT (2)</from>
      <to>Simple evaluation 2 4 2 2 3 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (2) 2</from>
      <to>STOP PROCESS AUDIT (2) 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL</from>
      <to>STOP PROCESS AUDIT (2) 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STOP PROCESS AUDIT (2) 2 2</from>
      <to>Simple evaluation 2 4 2 2 3 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (2)</from>
      <to>STOP PROCESS AUDIT (2) 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (3)</from>
      <to>STOP PROCESS AUDIT (2) 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>MAIL (4)</from>
      <to>STOP PROCESS AUDIT (2) 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2 3 2</from>
      <to>STOP PROCESS AUDIT (2) 2 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>STOP PROCESS AUDIT (2) 2 2 2</from>
      <to>STOP PROCESS</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2 2 3 2</from>
      <to>Check if a folder is empty 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Simple evaluation 2 4 2</from>
      <to>Check if a folder is empty 3</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check if a folder is empty 3</from>
      <to>TRUNCATE STAG TABLE 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>Check if a folder is empty 3</from>
      <to>TRUNCATE STAG TABLE 2 2</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>N</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>VALIDATIONS 2</from>
      <to>UNLOCK</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
    <hop>
      <from>UNLOCK</from>
      <to>TRUNCATE STAG TABLE</to>
      <from_nr>0</from_nr>
      <to_nr>0</to_nr>
      <enabled>Y</enabled>
      <evaluation>Y</evaluation>
      <unconditional>N</unconditional>
    </hop>
  </hops>
  <notepads>
  </notepads>
</job>
