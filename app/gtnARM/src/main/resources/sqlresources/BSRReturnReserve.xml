<sql>
     
    <entity id="BSummaryCommonQuery-ReturnReserve">
        <query> 
        <![CDATA[
DECLARE @PROJECTION       INT=?, 
    ---------PASS PROJECTION MASTER SID CREATED FOR ADJUSTMENT SUMMARY 
    @STATUS           VARCHAR(20)='PENDING', 
    ---PASS STATUS (APPROVED,REJECTED ETC....) 
    @FREQUENCY        VARCHAR(20)='?',--FREQUENCY USER SELECTED 
    @ADJUSTMENT_TYPE  VARCHAR(1000)='?', 
    @VIEW             VARCHAR(50)='?', 
    @START_PERIOD_SID INT, 
    @END_PERIOD_SID   INT, 
    @STRING           CHAR(1), 
    @FROM_DATE        VARCHAR(50)='?', 
    @TO_DATE          VARCHAR(50)='?',
    @USER_ID          INT=?,
    @SESSION_ID       INT=?
DECLARE @SQL NVARCHAR(MAX)


DECLARE @ARM_BSR_RETURN_RESERVE VARCHAR(200) = CONCAT ('ST_ARM_BSR_RETURN_RESERVE_',@USER_ID,'_',@SESSION_ID,'_',REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', ''))

SET @STRING=LEFT(@FREQUENCY, 1)

IF OBJECT_ID('TEMPDB..#TEMP_PERIOD') IS NOT NULL
  DROP TABLE #TEMP_PERIOD

CREATE TABLE #TEMP_PERIOD
  (
     PERIOD_SID  INT,
     PERIODS     VARCHAR(50),
     PERIOD_DATE DATETIME,
     MONTH       INT,
     YEAR        INT,
     PRIMARY KEY(PERIOD_SID)
  )

INSERT INTO #TEMP_PERIOD
            (PERIOD_SID,
             PERIODS,
             PERIOD_DATE,
             MONTH,
             YEAR)
SELECT PERIOD_SID,
       PERIODS = CASE
                   WHEN @STRING = 'M' THEN CONCAT (LEFT(DATENAME(MM, PERIOD_DATE), 3), ' ', YEAR)
                   WHEN @STRING = 'Q' THEN CONCAT ('Q', QUARTER, ' ', YEAR)
                   WHEN @STRING = 'S' THEN CONCAT ('S', SEMI_ANNUAL, ' ', YEAR)
                   ELSE CAST(YEAR AS CHAR(4))
                 END,
       PERIOD_DATE,
       MONTH,
       YEAR
FROM   PERIOD

SELECT @START_PERIOD_SID = MIN(PERIOD_SID)
FROM   #TEMP_PERIOD
WHERE  PERIODS = @FROM_DATE

SELECT @END_PERIOD_SID = MAX(PERIOD_SID)
FROM   #TEMP_PERIOD
WHERE  PERIODS = @TO_DATE

IF OBJECT_ID('TEMPDB..#TEMP_HELPER') IS NOT NULL
  DROP TABLE #TEMP_HELPER

CREATE TABLE #TEMP_HELPER
  (
     HELPER_TABLE_SID INT,
     DESCRIPTION      VARCHAR(100),
     LIST_NAME        VARCHAR(100),
     PRIMARY KEY (HELPER_TABLE_SID, LIST_NAME, DESCRIPTION)
  )

INSERT INTO #TEMP_HELPER
            (HELPER_TABLE_SID,
             DESCRIPTION,
             LIST_NAME)
SELECT HELPER_TABLE_SID,
       DESCRIPTION,
       LIST_NAME
FROM   HELPER_TABLE
WHERE  LIST_NAME IN ( 'RS_UDC1', 'RS_UDC2', 'RS_UDC3', 'RS_UDC4',
                      'RS_UDC5', 'RS_UDC6', 'RS_TYPE', 'RS_CATEGORY', 'REBATE_PROGRAM_TYPE' )

IF OBJECT_ID('TEMPDB..#TEMP_PROJ_RS') IS NOT NULL
  DROP TABLE #TEMP_PROJ_RS

CREATE TABLE #TEMP_PROJ_RS
  (
     CCP_DETAILS_SID            INT,
     RS_MODEL_SID               INT,
     PROJECTION_MASTER_SID      INT,
     ARM_ADJUSTMENT_DETAILS_SID INT,
     CONTRACT_MASTER_SID        INT,
     COMPANY_MASTER_SID         INT,
     ITEM_MASTER_SID            INT,
     RS_CATEGORY                VARCHAR(50),
     RS_TYPE                    VARCHAR(50),
     REBATE_PROGRAM_TYPE        VARCHAR(50),
     RS_ID                      VARCHAR(50),
     RS_NAME                    VARCHAR(100),
     RS_CONTRACT_SID            INT,
     PRIMARY KEY (ARM_ADJUSTMENT_DETAILS_SID)
  )

INSERT INTO #TEMP_PROJ_RS
            (CCP_DETAILS_SID,
             RS_MODEL_SID,
             PROJECTION_MASTER_SID,
             ARM_ADJUSTMENT_DETAILS_SID,
             CONTRACT_MASTER_SID,
             COMPANY_MASTER_SID,
             ITEM_MASTER_SID,
             RS_CATEGORY,
             RS_TYPE,
             REBATE_PROGRAM_TYPE,
             RS_ID,
             RS_NAME,
             RS_CONTRACT_SID)
SELECT C.CCP_DETAILS_SID,
       A.RS_MODEL_SID,
       A.PROJECTION_MASTER_SID,
       A.ARM_ADJUSTMENT_DETAILS_SID,
       C.CONTRACT_MASTER_SID,
       C.COMPANY_MASTER_SID,
       C.ITEM_MASTER_SID,
       R.RS_CATEGORY,
       R.RS_TYPE,
       R.REBATE_PROGRAM_TYPE,
       R.RS_ID,
       R.RS_NAME,
       R.RS_CONTRACT_SID
FROM   ARM_ADJUSTMENT_DETAILS A
       JOIN CCP_DETAILS C
         ON C.CCP_DETAILS_SID = A.CCP_DETAILS_SID
       JOIN RS_CONTRACT R
         ON R.RS_MODEL_SID = A.RS_MODEL_SID
            AND R.CONTRACT_MASTER_SID = C.CONTRACT_MASTER_SID
       JOIN ARM_DEDUCTION_SELECTION AD
         ON AD.RS_CONTRACT_SID = R.RS_CONTRACT_SID
            AND AD.PROJECTION_MASTER_SID = A.PROJECTION_MASTER_SID
WHERE  A.PROJECTION_MASTER_SID = @PROJECTION

IF NOT EXISTS (SELECT 1
               FROM   TEMPDB.SYS.INDEXES
               WHERE  NAME = 'IX_RS_CAT_TYP_PRGM_TYP')
  BEGIN
      CREATE NONCLUSTERED INDEX IX_RS_CAT_TYP_PRGM_TYP
        ON #TEMP_PROJ_RS (RS_CONTRACT_SID, RS_MODEL_SID, RS_CATEGORY, RS_TYPE, REBATE_PROGRAM_TYPE);
  END

IF OBJECT_ID('TEMPDB..#PROJ') IS NOT NULL
  DROP TABLE #PROJ

CREATE TABLE #PROJ
  (
     CCP_DETAILS_SID            INT,
     RS_MODEL_SID               INT,
     PROJECTION_MASTER_SID      INT,
     ARM_ADJUSTMENT_DETAILS_SID INT,
     CONTRACT_MASTER_SID        INT,
     COMPANY_MASTER_SID         INT,
     ITEM_MASTER_SID            INT,
     BRAND_MASTER_SID           INT,
     ITEM_ID                    VARCHAR(50),
     ITEM_NAME                  VARCHAR(100),
     BRAND_ID                   VARCHAR(50),
     BRAND_NAME                 VARCHAR(100),
     COMPANY_ID                 VARCHAR(50),
     COMPANY_NAME               VARCHAR(100),
     CONTRACT_ID                VARCHAR(50),
     [CONTRACT_NAME]            VARCHAR(100),
     RS_CATEGORY                VARCHAR(50),
     RS_CATEGORY_SID            INT,
     RS_TYPE                    VARCHAR(50),
     RS_TYPE_SID                INT,
     REBATE_PROGRAM_TYPE        VARCHAR(50),
     REBATE_PROGRAM_TYPE_SID    INT,
     RS_ID                      VARCHAR(50),
     RS_NAME                    VARCHAR(100),
     UDC1                       VARCHAR(50),
     UDC1_SID                   INT,
     UDC2                       VARCHAR(50),
     UDC2_SID                   INT,
     UDC3                       VARCHAR(50),
     UDC3_SID                   INT,
     UDC4                       VARCHAR(50),
     UDC4_SID                   INT,
     UDC5                       VARCHAR(50),
     UDC5_SID                   INT,
     UDC6                       VARCHAR(50),
     UDC6_SID                   INT
     PRIMARY KEY (ARM_ADJUSTMENT_DETAILS_SID)
  )

IF NOT EXISTS (SELECT 1
               FROM   TEMPDB.SYS.INDEXES
               WHERE  NAME = 'IX_CCP_RS')
  BEGIN
      CREATE UNIQUE NONCLUSTERED INDEX IX_CCP_RS
        ON #PROJ (CCP_DETAILS_SID, RS_MODEL_SID);
  END

INSERT INTO #PROJ
            (CCP_DETAILS_SID,
             RS_MODEL_SID,
             PROJECTION_MASTER_SID,
             ARM_ADJUSTMENT_DETAILS_SID,
             CONTRACT_MASTER_SID,
             COMPANY_MASTER_SID,
             ITEM_MASTER_SID,
             BRAND_MASTER_SID,
             ITEM_ID,
             ITEM_NAME,
             BRAND_ID,
             BRAND_NAME,
             COMPANY_ID,
             COMPANY_NAME,
             CONTRACT_ID,
             CONTRACT_NAME,
             RS_CATEGORY,
             RS_CATEGORY_SID,
             RS_TYPE,
             RS_TYPE_SID,
             REBATE_PROGRAM_TYPE,
             REBATE_PROGRAM_TYPE_SID,
             RS_ID,
             RS_NAME,
             UDC1,
             UDC1_SID,
             UDC2,
             UDC2_SID,
             UDC3,
             UDC3_SID,
             UDC4,
             UDC4_SID,
             UDC5,
             UDC5_SID,
             UDC6,
             UDC6_SID)
SELECT B.CCP_DETAILS_SID,
       B.RS_MODEL_SID,
       B.PROJECTION_MASTER_SID,
       B.ARM_ADJUSTMENT_DETAILS_SID,
       B.CONTRACT_MASTER_SID,
       B.COMPANY_MASTER_SID,
       B.ITEM_MASTER_SID,
       BM.BRAND_MASTER_SID,
       IM.ITEM_ID,
       IM.ITEM_NAME,
       BM.BRAND_ID,
       BM.BRAND_NAME,
       CM.COMPANY_ID,
       CM.COMPANY_NAME,
       CON.CONTRACT_ID,
       CON.CONTRACT_NAME,
       RS_CAT.DESCRIPTION,
       RS_CAT.HELPER_TABLE_SID,
       RS_TYP.DESCRIPTION,
       RS_TYP.HELPER_TABLE_SID,
       REB_PRGM.DESCRIPTION,
       REB_PRGM.HELPER_TABLE_SID,
       B.RS_ID,
       B.RS_NAME,
       U1.DESCRIPTION,
       U1.HELPER_TABLE_SID,
       U2.DESCRIPTION,
       U2.HELPER_TABLE_SID,
       U3.DESCRIPTION,
       U3.HELPER_TABLE_SID,
       U4.DESCRIPTION,
       U4.HELPER_TABLE_SID,
       U5.DESCRIPTION,
       U5.HELPER_TABLE_SID,
       U6.DESCRIPTION,
       U6.HELPER_TABLE_SID
FROM   #TEMP_PROJ_RS B
       JOIN ITEM_MASTER IM
         ON IM.ITEM_MASTER_SID = B.ITEM_MASTER_SID
       JOIN BRAND_MASTER BM
         ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID
       JOIN COMPANY_MASTER CM
         ON CM.COMPANY_MASTER_SID = B.COMPANY_MASTER_SID
       LEFT JOIN UDCS U
              ON U.MASTER_SID = B.RS_CONTRACT_SID
                 AND U.MASTER_TYPE = 'RS_CONTRACT'
       LEFT JOIN #TEMP_HELPER RS_CAT
              ON RS_CAT.HELPER_TABLE_SID = B.RS_CATEGORY
       LEFT JOIN #TEMP_HELPER RS_TYP
              ON RS_TYP.HELPER_TABLE_SID = B.RS_TYPE
       LEFT JOIN #TEMP_HELPER REB_PRGM
              ON REB_PRGM.HELPER_TABLE_SID = B.REBATE_PROGRAM_TYPE
       LEFT JOIN #TEMP_HELPER U1
              ON U1.HELPER_TABLE_SID = U.UDC1
       LEFT JOIN #TEMP_HELPER U2
              ON U2.HELPER_TABLE_SID = U.UDC2
       LEFT JOIN #TEMP_HELPER U3
              ON U3.HELPER_TABLE_SID = U.UDC3
       LEFT JOIN #TEMP_HELPER U4
              ON U4.HELPER_TABLE_SID = U.UDC4
       LEFT JOIN #TEMP_HELPER U5
              ON U5.HELPER_TABLE_SID = U.UDC5
       LEFT JOIN #TEMP_HELPER U6
              ON U6.HELPER_TABLE_SID = U.UDC6
       JOIN CONTRACT_MASTER CON
         ON CON.CONTRACT_MASTER_SID = B.CONTRACT_MASTER_SID
            AND BM.BRAND_MASTER_SID LIKE '?' 
            AND B.CONTRACT_MASTER_SID LIKE '?' 
            AND B.COMPANY_MASTER_SID LIKE '?' 
            AND  ?  LIKE '?' 
            AND B.ITEM_MASTER_SID LIKE '?' 



----------------------------------------------CCP'S WITH PERIOD POPULATION-----------------------------------
IF OBJECT_ID('TEMPDB..#TEMP_ARM_PROJ_MASTER') IS NOT NULL
  DROP TABLE #TEMP_ARM_PROJ_MASTER

CREATE TABLE #TEMP_ARM_PROJ_MASTER
  (
     ARM_ADJUSTMENT_DETAILS_SID INT,
     CCP_DETAILS_SID            INT,
     RS_MODEL_SID               INT,
     PERIOD_SID                 INT,
     [YEAR]                     INT,
     PERIOD                     INT,
     PRIMARY KEY (ARM_ADJUSTMENT_DETAILS_SID, PERIOD_SID)
  )

INSERT INTO #TEMP_ARM_PROJ_MASTER
            (ARM_ADJUSTMENT_DETAILS_SID,
             CCP_DETAILS_SID,
             RS_MODEL_SID,
             PERIOD_SID,
             [YEAR],
             PERIOD)
SELECT A.ARM_ADJUSTMENT_DETAILS_SID,
       A.CCP_DETAILS_SID,
       A.RS_MODEL_SID,
       P.PERIOD_SID,
       P.YEAR,
       PERIOD = CASE
                  WHEN LEFT(@FREQUENCY, 1) = 'M' THEN MONTH
                  WHEN LEFT(@FREQUENCY, 1) = 'Q' THEN QUARTER
                  WHEN LEFT(@FREQUENCY, 1) = 'S' THEN SEMI_ANNUAL
                  ELSE YEAR
                END
FROM   #TEMP_PROJ_RS A
       CROSS JOIN PERIOD P
WHERE  P.PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID

IF OBJECT_ID('TEMPDB..#TEMP_BALANCE_PIPELINE') IS NOT NULL
  DROP TABLE #TEMP_BALANCE_PIPELINE

CREATE TABLE #TEMP_BALANCE_PIPELINE
  (
     ARM_ADJUSTMENT_DETAILS_SID INT,
     PERIOD_SID INT,
     STARTING_BALANCE  NUMERIC(22,6),
     RETURN_RESERVE NUMERIC(22,6),
	 ENDING_BALANCE NUMERIC(22,6)
  )


SET @SQL=CONCAT('
INSERT INTO #TEMP_BALANCE_PIPELINE
            (ARM_ADJUSTMENT_DETAILS_SID,
             PERIOD_SID,
             STARTING_BALANCE,
             RETURN_RESERVE,
             ENDING_BALANCE)
SELECT BRPP.ARM_ADJUSTMENT_DETAILS_SID,
       BRPP.PERIOD_SID,
       BRPP.STARTING_BALANCE,
       BRPP.RETURN_RESERVE,
	   BRPP.ENDING_BALANCE
FROM   ',@ARM_BSR_RETURN_RESERVE,' BRPP ')

EXEC (@SQL)

SET @SQL=''


---------------------------------------------LEVEL LOGIC STARTS HERE--------------------------------
IF OBJECT_ID('TEMPDB..#TEMP_ADJ_AMOUNT') IS NOT NULL
  DROP TABLE #TEMP_ADJ_AMOUNT

CREATE TABLE #TEMP_ADJ_AMOUNT
  (
     ARM_ADJUSTMENT_DETAILS_SID INT,
     PERIOD                     INT,
     YEAR                       INT,
     ITEM_ID                    VARCHAR(50),
     ITEM_NAME                  VARCHAR(100),
     BRAND_ID                   VARCHAR(50),
     BRAND_NAME                 VARCHAR(100),
     COMPANY_ID                 VARCHAR(50),
     COMPANY_NAME               VARCHAR(100),
     CONTRACT_ID                VARCHAR(50),
     [CONTRACT_NAME]            VARCHAR(100),
     RS_CATEGORY                VARCHAR(50),
     RS_CATEGORY_SID            INT,
     RS_TYPE                    VARCHAR(50),
     RS_TYPE_SID                INT,
     REBATE_PROGRAM_TYPE        VARCHAR(50),
     REBATE_PROGRAM_TYPE_SID    INT,
     RS_ID                      VARCHAR(50),
     RS_NAME                    VARCHAR(100),
     UDC1                       VARCHAR(50),
     UDC1_SID                   INT,
     UDC2                       VARCHAR(50),
     UDC2_SID                   INT,
     UDC3                       VARCHAR(50),
     UDC3_SID                   INT,
     UDC4                       VARCHAR(50),
     UDC4_SID                   INT,
     UDC5                       VARCHAR(50),
     UDC5_SID                   INT,
     UDC6                       VARCHAR(50),
     UDC6_SID                   INT,
     STARTING_BALANCE NUMERIC(22,6),
     RETURN_RESERVE NUMERIC(22,6),
     ENDING_BALANCE NUMERIC(22,6),
     DEDUCTION_SET_1            VARCHAR(150),
     DEDUCTION_SET_2            VARCHAR(150),
     RANK_VIEW                  INT,
	 FREQ_STARTING_BALANCE NUMERIC(22,6)
  )

INSERT INTO #TEMP_ADJ_AMOUNT
            (ARM_ADJUSTMENT_DETAILS_SID,
             PERIOD,
             YEAR,
             ITEM_ID,
             ITEM_NAME,
             BRAND_ID,
             BRAND_NAME,
             COMPANY_ID,
             COMPANY_NAME,
             CONTRACT_ID,
             [CONTRACT_NAME],
             RS_CATEGORY,
             RS_CATEGORY_SID,
             RS_TYPE,
             RS_TYPE_SID,
             REBATE_PROGRAM_TYPE,
             REBATE_PROGRAM_TYPE_SID,
             RS_ID,
             RS_NAME,
             UDC1,
             UDC1_SID,
             UDC2,
             UDC2_SID,
             UDC3,
             UDC3_SID,
             UDC4,
             UDC4_SID,
             UDC5,
             UDC5_SID,
             UDC6,
             UDC6_SID,
             STARTING_BALANCE,
             RETURN_RESERVE,
             ENDING_BALANCE,
             DEDUCTION_SET_1,
             DEDUCTION_SET_2,
             RANK_VIEW,
			 FREQ_STARTING_BALANCE)

SELECT A.ARM_ADJUSTMENT_DETAILS_SID,
       A.PERIOD,
       A.YEAR,
       A.ITEM_ID,
       A.ITEM_NAME,
       A.BRAND_ID,
       A.BRAND_NAME,
       A.COMPANY_ID,
       A.COMPANY_NAME,
       A.CONTRACT_ID,
       A.[CONTRACT_NAME],
       A.RS_CATEGORY,
       A.RS_CATEGORY_SID,
       A.RS_TYPE,
       A.RS_TYPE_SID,
       A.REBATE_PROGRAM_TYPE,
       A.REBATE_PROGRAM_TYPE_SID,
       A.RS_ID,
       A.RS_NAME,
       A.UDC1,
       A.UDC1_SID,
       A.UDC2,
       A.UDC2_SID,
       A.UDC3,
       A.UDC3_SID,
       A.UDC4,
       A.UDC4_SID,
       A.UDC5,
       A.UDC5_SID,
       A.UDC6,
       A.UDC6_SID,
       STARTING_BALANCE,
       RETURN_RESERVE,
       ENDING_BALANCE,DEDUCTION_SET_1,DEDUCTION_SET_2,RANK_VIEW,CASE WHEN RN=1 THEN STARTING_BALANCE 
			ELSE NULL END AS FREQ_STARTING_BALANCE FROM (
SELECT B.ARM_ADJUSTMENT_DETAILS_SID,
       Arm.PERIOD,
       Arm.YEAR,
       B.ITEM_ID,
       B.ITEM_NAME,
       B.BRAND_ID,
       B.BRAND_NAME,
       B.COMPANY_ID,
       B.COMPANY_NAME,
       B.CONTRACT_ID,
       B.[CONTRACT_NAME],
       B.RS_CATEGORY,
       B.RS_CATEGORY_SID,
       B.RS_TYPE,
       B.RS_TYPE_SID,
       B.REBATE_PROGRAM_TYPE,
       B.REBATE_PROGRAM_TYPE_SID,
       B.RS_ID,
       B.RS_NAME,
       B.UDC1,
       B.UDC1_SID,
       B.UDC2,
       B.UDC2_SID,
       B.UDC3,
       B.UDC3_SID,
       B.UDC4,
       B.UDC4_SID,
       B.UDC5,
       B.UDC5_SID,
       B.UDC6,
       B.UDC6_SID,
             STARTING_BALANCE,
             RETURN_RESERVE,
             ENDING_BALANCE,
           DEDUCTION_SET_1= CASE
                          WHEN @VIEW = 'DEDUCTION PROGRAM' THEN B.REBATE_PROGRAM_TYPE
                          WHEN @VIEW = 'DEDUCTION CATEGORY' THEN B.RS_CATEGORY
                          WHEN @VIEW = 'DEDUCTION TYPE' THEN B.RS_TYPE
                          WHEN @VIEW = 'DEDUCTION' THEN B.RS_ID
                          WHEN @VIEW = 'DEDUCTION CATEGORY' THEN B.UDC1
                          WHEN @VIEW = 'DEDUCTION CATEGORY 2' THEN B.UDC2
                          WHEN @VIEW = 'DEDUCTION CATEGORY 3' THEN B.UDC3
                          WHEN @VIEW = 'DEDUCTION CATEGORY 4' THEN B.UDC4
                          WHEN @VIEW = 'DEDUCTION CATEGORY 5' THEN B.UDC5
                          WHEN @VIEW = 'DEDUCTION CATEGORY 6' THEN B.UDC5
                          WHEN @VIEW = 'PRODUCT' THEN ( B.ITEM_ID + ' - ' + B.ITEM_NAME )
                          WHEN @VIEW = 'BRAND' THEN ( B.BRAND_ID + ' - ' + B.BRAND_NAME )
                          WHEN @VIEW = 'CUSTOMER' THEN ( B.COMPANY_ID + ' - ' + B.COMPANY_NAME )
                          WHEN @VIEW = 'CONTRACT' THEN ( B.CONTRACT_ID + ' - ' + B.CONTRACT_NAME )
                          ELSE ''
                        END,
       DEDUCTION_SET_2=CASE
                         WHEN @VIEW = 'DEDUCTION PROGRAM' THEN B.REBATE_PROGRAM_TYPE_SID
                         WHEN @VIEW = 'DEDUCTION CATEGORY' THEN B.RS_CATEGORY_SID
                         WHEN @VIEW = 'DEDUCTION TYPE' THEN B.RS_TYPE_SID
                         WHEN @VIEW = 'DEDUCTION' THEN B.RS_MODEL_SID
                         WHEN @VIEW = 'DEDUCTION CATEGORY' THEN B.UDC1_SID
                         WHEN @VIEW = 'DEDUCTION CATEGORY 2' THEN B.UDC2_SID
                         WHEN @VIEW = 'DEDUCTION CATEGORY 3' THEN B.UDC3_SID
                         WHEN @VIEW = 'DEDUCTION CATEGORY 4' THEN B.UDC4_SID
                         WHEN @VIEW = 'DEDUCTION CATEGORY 5' THEN B.UDC5_SID
                         WHEN @VIEW = 'DEDUCTION CATEGORY 6' THEN B.UDC5_SID
                         WHEN @VIEW = 'PRODUCT' THEN B.ITEM_MASTER_SID
                         WHEN @VIEW = 'BRAND' THEN B.BRAND_MASTER_SID
                         WHEN @VIEW = 'CUSTOMER' THEN B.COMPANY_MASTER_SID
                         WHEN @VIEW = 'CONTRACT' THEN B.CONTRACT_MASTER_SID
                         ELSE ''
                       END,
       RANK_VIEW=DENSE_RANK()
                   OVER(
                     ORDER BY CASE WHEN @VIEW = 'PRODUCT' THEN B.ITEM_MASTER_SID WHEN @VIEW = 'BRAND' THEN B.BRAND_MASTER_SID WHEN @VIEW = 'CUSTOMER' THEN B.COMPANY_MASTER_SID WHEN @VIEW = 'CONTRACT' THEN B.CONTRACT_MASTER_SID END ),
ROW_NUMBER() OVER(PARTITION BY B.ARM_ADJUSTMENT_DETAILS_SID,Arm.PERIOD,Arm.YEAR ORDER BY
				B.ARM_ADJUSTMENT_DETAILS_SID,Arm.PERIOD,Arm.YEAR) AS RN
FROM   #TEMP_BALANCE_PIPELINE A  
       JOIN #PROJ B
         ON A.ARM_ADJUSTMENT_DETAILS_SID = B.ARM_ADJUSTMENT_DETAILS_SID
		 join #TEMP_ARM_PROJ_MASTER arm on arm.ARM_ADJUSTMENT_DETAILS_SID=b.ARM_ADJUSTMENT_DETAILS_SID
		 and arm.PERIOD_sid=a.PERIOD_SID
         ? )A

        ]]>    
        </query>
    </entity>
    <entity id="BSummaryCount-ReturnReserve">
        <query> 
        <![CDATA[
            SELECT  count(DISTINCT DEDUCTION_SET_2)
    FROM   (
     SELECT DEDUCTION_SET_1, 
               DEDUCTION_SET_2, 
               PERIOD, 
               YEAR, 
              ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,
             ISNULL(SUM(RETURN_RESERVE),0) AS RETURN_RESERVE,
             ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE
               FROM   #TEMP_ADJ_AMOUNT 
        --ELSE CAST(YEAR AS VARCHAR(10)) + CAST(PERIOD AS VARCHAR(10)) END BETWEEN ? AND ?)W          // COMMENTED TO GENERATE INPUTS
        --WHERE  DEDUCTION_SET_1 IN ('COMMERICAL') 
        GROUP  BY DEDUCTION_SET_1, 
                  DEDUCTION_SET_2, 
                  PERIOD, 
                  YEAR 
                  )A
        ]]>    
        </query>
    </entity>
    <entity id="BSummaryLoadData-ReturnReserve">
        <query> 
        <![CDATA[
                      
    ;WITH CTE AS (
    SELECT W.DEDUCTION_SET_1,W.DEDUCTION_SET_2,W.PERIOD,W.YEAR,W.PERIOD_FILTER,W.STARTING_BALANCE
    ,W.RETURN_RESERVE,W.ENDING_BALANCE,0 AS INDICATOR FROM (
    SELECT DEDUCTION_SET_1, 
               DEDUCTION_SET_2, 
               PERIOD, 
               YEAR,
			   CASE WHEN LEN(PERIOD)=1 THEN CAST(YEAR AS VARCHAR(10))+ '0' + CAST(PERIOD AS VARCHAR(10))
			   ELSE CAST(YEAR AS VARCHAR(10)) + CAST(PERIOD AS VARCHAR(10)) END AS PERIOD_FILTER,
              ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,
             ISNULL(SUM(RETURN_RESERVE),0) AS RETURN_RESERVE,
             ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,
			 DENSE_RANK()
                 OVER(
                   ORDER BY DEDUCTION_SET_2 ) AS RANKING
               FROM   #TEMP_ADJ_AMOUNT 
        --WHERE  DEDUCTION_SET_1 IN ('COMMERICAL') 
        GROUP  BY DEDUCTION_SET_1, 
                  DEDUCTION_SET_2, 
                  PERIOD, 
                  YEAR
                HAVING  CASE WHEN LEN(PERIOD)=1 THEN CAST(YEAR AS VARCHAR(10))+ '0' + CAST(PERIOD AS VARCHAR(10))
			   ELSE CAST(YEAR AS VARCHAR(10)) + CAST(PERIOD AS VARCHAR(10)) END BETWEEN ? AND ?)W

        WHERE  W.RANKING BETWEEN ? AND ?


		UNION ALL

		SELECT DEDUCTION_SET_1, 
               DEDUCTION_SET_2, 
               99999 AS PERIOD, 
               99999 AS YEAR,
               99999 AS PERIOD_FILTER,
             ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,
             ISNULL(SUM(RETURN_RESERVE),0) AS PIPELINE_ACCRUAL,
             ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,
			 1 AS INDICATOR
               FROM   #TEMP_ADJ_AMOUNT 
        --WHERE  DEDUCTION_SET_1 IN ('COMMERICAL') 
        GROUP  BY DEDUCTION_SET_1, 
                  DEDUCTION_SET_2
                 ) SELECT * FROM CTE order BY  DEDUCTION_SET_1,DEDUCTION_SET_2,PERIOD
                 
        ]]>    
        </query>
    </entity>
    <entity id="BSummaryLoadTotalData-ReturnReserve">
        <query> 
        <![CDATA[
        SELECT 'TOTAL'                AS DEDUCTION_SET_1, 
              'TOTAL'                AS DEDUCTION_SET_2,W.PERIOD,W.YEAR,W.PERIOD_FILTER,SUM(W.STARTING_BALANCE) AS STARTING_BALANCE
,SUM(W.RETURN_RESERVE) AS RETURN_RESERVE,SUM(W.ENDING_BALANCE) AS ENDING_BALANCE,0 AS INDICATOR FROM (
    SELECT 'TOTAL'                AS DEDUCTION_SET_1, 
            'TOTAL'                AS  DEDUCTION_SET_2, 
               PERIOD, 
               YEAR,
			   CASE WHEN LEN(PERIOD)=1 THEN CAST(YEAR AS VARCHAR(10))+ '0' + CAST(PERIOD AS VARCHAR(10))
			   ELSE CAST(YEAR AS VARCHAR(10)) + CAST(PERIOD AS VARCHAR(10)) END AS PERIOD_FILTER,
              ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,
             ISNULL(SUM(RETURN_RESERVE),0) AS RETURN_RESERVE,
             ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,
			 DENSE_RANK()
                 OVER(
                   ORDER BY DEDUCTION_SET_2 ) AS RANKING
               FROM   #TEMP_ADJ_AMOUNT 
        GROUP  BY DEDUCTION_SET_1, 
                  DEDUCTION_SET_2, 
                  PERIOD, 
                  YEAR
                HAVING  CASE WHEN LEN(PERIOD)=1 THEN CAST(YEAR AS VARCHAR(10))+ '0' + CAST(PERIOD AS VARCHAR(10))
			   ELSE CAST(YEAR AS VARCHAR(10)) + CAST(PERIOD AS VARCHAR(10)) END BETWEEN ? AND ?)W
        GROUP BY DEDUCTION_SET_1,DEDUCTION_SET_2,W.PERIOD,W.YEAR,W.PERIOD_FILTER
		UNION ALL
		SELECT 'TOTAL'                AS DEDUCTION_SET_1, 
               'TOTAL' AS                DEDUCTION_SET_2, 
               99999 AS PERIOD, 
               99999 AS YEAR,
               99999 AS PERIOD_FILTER,
             ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,
             ISNULL(SUM(RETURN_RESERVE),0) AS PIPELINE_ACCRUAL,
             ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,
			 1 AS INDICATOR
               FROM   #TEMP_ADJ_AMOUNT 
        GROUP  BY DEDUCTION_SET_1, 
                  DEDUCTION_SET_2
        ]]>    
        </query>
    </entity>
    <entity id="getBSummaryExcelQuery-ReturnReserve">
        <query> 
        <![CDATA[
DECLARE @LEVEL                 VARCHAR(30)='@LEVEL_VAL', 
        @MAX_VAL               INT=0, 
        @I                     INT=1, 
        @SQL                   NVARCHAR(MAX)='', 
        @SQL_TEMP              NVARCHAR(MAX)='', 
        @VAR                   VARCHAR(1000)='', 
        @VAR_ADD               VARCHAR(1000)='', 
        @VAR_TEST              VARCHAR(1000)='', 
        @SQL_GROUP             NVARCHAR(MAX), 
        @SQL_SELECT            NVARCHAR(MAX), 
        @SQL_UNION             NVARCHAR(4000), 
        @SQL_OUTER_SELECT      NVARCHAR(1000)='', 
        @SQL_COUNT             NVARCHAR(1000)='', 
        @SQL_ADD_COUNT         NVARCHAR(1000)='', 
        @CONDITION             VARCHAR(50)='@DEDUCTIONLEVEL', 
        @CONDITION_VALUE       VARCHAR(1000)='@DEDUCTIONVALUE', 
        @PROJECTION_MASTER_SID INT = @PROJECTIONMASTERSID, 
        @USER_ID               INT = @USERID, 
        @SESSION_ID            INT = @SESSIONID, 
        @LEV                   VARCHAR(10), 
        @FREQUENCY             VARCHAR(20)='@FREQUENCYSELECTED', 
        @START                 VARCHAR(20)='@STARTPERIOD', 
        @START_SID             INT, 
        @END                   VARCHAR(20)='@ENDPERIOD', 
        @END_SID               INT 
        
        
  SELECT @START_SID = MIN(PERIOD_SID)
  FROM   PERIOD P
  WHERE  CASE
           WHEN @FREQUENCY = 'MONTHLY' THEN LEFT(DATENAME( MONTH, DATEADD( MONTH, P.PERIOD_SID, -1 ) ), 3)
                                            + ' ' + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'QUARTERLY' THEN 'Q' + CONVERT(VARCHAR(4), P.QUARTER) + ' '
                                              + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'SEMI-ANNUALLY' THEN 'S' + CONVERT(VARCHAR(4), P.SEMI_ANNUAL) + ' '
                                                  + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'ANNUALLY' THEN CONVERT(VARCHAR(4), P.YEAR)
         END = @START

  SELECT @END_SID = MAX(PERIOD_SID)
  FROM   PERIOD P
  WHERE  CASE
           WHEN @FREQUENCY = 'MONTHLY' THEN LEFT(DATENAME( MONTH, DATEADD( MONTH, P.PERIOD_SID, -1 ) ), 3)
                                            + ' ' + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'QUARTERLY' THEN 'Q' + CONVERT(VARCHAR(4), P.QUARTER) + ' '
                                              + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'SEMI-ANNUALLY' THEN 'S' + CONVERT(VARCHAR(4), P.SEMI_ANNUAL) + ' '
                                                  + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'ANNUALLY' THEN CONVERT(VARCHAR(4), P.YEAR)
         END = @END


DECLARE @ARM_BSR_RETURN_RESERVE VARCHAR(200) = CONCAT ('ST_ARM_BSR_RETURN_RESERVE_',@USER_ID,'_',@SESSION_ID,'_',REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', ''))

  ----------------------------------------------PERIOD POPULATION-----------------------------------
  IF OBJECT_ID('TEMPDB..#TEMP_PERIOD') IS NOT NULL
    DROP TABLE #TEMP_PERIOD

  CREATE TABLE #TEMP_PERIOD
    (
       PERIOD_SID  INT,
       [YEAR]      INT,
       PERIOD      INT,
       PERIOD_YEAR VARCHAR(50)
    )

  INSERT INTO #TEMP_PERIOD
              (PERIOD_SID,
               [YEAR],
               PERIOD,
               PERIOD_YEAR)
  SELECT P.PERIOD_SID,
         P.YEAR,
         PERIOD = CASE
                    WHEN LEFT(@FREQUENCY, 1) = 'M' THEN MONTH
                    WHEN LEFT(@FREQUENCY, 1) = 'Q' THEN QUARTER
                    WHEN LEFT(@FREQUENCY, 1) = 'S' THEN SEMI_ANNUAL
                    ELSE YEAR
                  END,
         PERIOD_YEAR= CASE
                        WHEN LEFT(@FREQUENCY, 1) = 'M' THEN LEFT(DATENAME( MONTH, DATEADD( MONTH, P.PERIOD_SID, -1 ) ), 3)
                                                            + ' ' + CONVERT(VARCHAR(4), P.YEAR)
                        WHEN LEFT(@FREQUENCY, 1) = 'Q' THEN 'Q' + CONVERT(VARCHAR(4), P.QUARTER) + ' '
                                                            + CONVERT(VARCHAR(4), P.YEAR)
                        WHEN LEFT(@FREQUENCY, 1) = 'S' THEN 'S' + CONVERT(VARCHAR(4), P.SEMI_ANNUAL) + ' '
                                                            + CONVERT(VARCHAR(4), P.YEAR)
                        ELSE CONVERT(VARCHAR(4), P.YEAR)
                      END
  FROM   PERIOD P
  WHERE  P.PERIOD_SID BETWEEN @START_SID AND @END_SID

  SET @SQL=';WITH CTE1
       AS (SELECT B.CONTRACT_MASTER_SID,
                  CN.CONTRACT_ID,
                  CN.CONTRACT_NAME,
                  B.COMPANY_MASTER_SID,
                  CM.COMPANY_ID,
                  CM.COMPANY_NAME,
                  B.ITEM_MASTER_SID,
                  IM.ITEM_ID,
                  IM.ITEM_NAME,
                  BM.BRAND_MASTER_SID,
                  BM.BRAND_ID,
                  BM.BRAND_NAME,
                  A.RS_MODEL_SID,
                  RS.RS_ID,
                  RS_NAME,
                  P.PERIOD_YEAR,
                  ARP.PERIOD_SID,          
                  ARP.STARTING_BALANCE,
                  ARP.RETURN_RESERVE AS RETURN_RESERVE,
                  ARP.ARM_ADJUSTMENT_DETAILS_SID,
				  ARP.ENDING_BALANCE,
                 ROW_NUMBER() OVER(PARTITION BY ARP.ARM_ADJUSTMENT_DETAILS_SID,P.PERIOD_YEAR ORDER BY
				ARP.ARM_ADJUSTMENT_DETAILS_SID,P.PERIOD_SID,P.PERIOD_YEAR) AS RN'
                     SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',RS_CAT.DESCRIPTION AS RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',RS_TYP.DESCRIPTION AS RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',RS_PGM_TYP.DESCRIPTION AS REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',DC2.DESCRIPTION AS DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',DC3.DESCRIPTION AS DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',DC4.DESCRIPTION AS DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',DC5.DESCRIPTION AS DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',DC6.DESCRIPTION AS DEDUCTION_CATEGORY_6'
                                                                   ELSE ''
                                                          END
                         SET @SQL+=' FROM   ARM_ADJUSTMENT_DETAILS A
                  JOIN CCP_DETAILS B
                    ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
                  JOIN ITEM_MASTER IM
                    ON IM.ITEM_MASTER_SID = B.ITEM_MASTER_SID
                  JOIN BRAND_MASTER BM
                    ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID
                        JOIN ' + @ARM_BSR_RETURN_RESERVE + ' ARP
                          ON ARP.ARM_ADJUSTMENT_DETAILS_SID = A.ARM_ADJUSTMENT_DETAILS_SID
                                        JOIN CONTRACT_MASTER CN
                                          ON CN.CONTRACT_MASTER_SID=B.CONTRACT_MASTER_SID
                                        JOIN COMPANY_MASTER CM
                                          ON CM.COMPANY_MASTER_SID=B.COMPANY_MASTER_SID
                                        JOIN RS_CONTRACT RS
                                          ON RS.RS_MODEL_SID=A.RS_MODEL_SID AND RS.CONTRACT_MASTER_SID=B.CONTRACT_MASTER_SID
										 JOIN #TEMP_PERIOD P ON P.PERIOD_SID=ARP.PERIOD_SID
                                        JOIN ARM_DEDUCTION_SELECTION ADS
                                          ON ADS.PROJECTION_MASTER_SID=A.PROJECTION_MASTER_SID AND ADS.RS_CONTRACT_SID=RS.RS_CONTRACT_SID'
                                        SET @SQL+=CASE WHEN @CONDITION IN ('DEDUCTION CATEGORY 2','DEDUCTION CATEGORY 3','DEDUCTION CATEGORY 4','DEDUCTION CATEGORY 5','DEDUCTION CATEGORY 6') THEN '  LEFT JOIN UDCS U ON U.MASTER_TYPE=''RS_CONTRACT'' AND U.MASTER_SID=RS.RS_CONTRACT_SID' ELSE '' END
                                        SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ' JOIN HELPER_TABLE RS_CAT ON RS_CAT.HELPER_TABLE_SID=RS.RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ' JOIN HELPER_TABLE RS_TYP ON RS_TYP.HELPER_TABLE_SID=RS.RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ' JOIN HELPER_TABLE RS_PGM_TYP ON RS_PGM_TYP.HELPER_TABLE_SID=RS.REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ' JOIN HELPER_TABLE DC2 ON DC2.HELPER_TABLE_SID=U.UDC2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ' JOIN HELPER_TABLE DC3 ON DC3.HELPER_TABLE_SID=U.UDC3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ' JOIN HELPER_TABLE DC4 ON DC4.HELPER_TABLE_SID=U.UDC4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ' JOIN HELPER_TABLE DC5 ON DC5.HELPER_TABLE_SID=U.UDC5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ' JOIN HELPER_TABLE DC6 ON DC6.HELPER_TABLE_SID=U.UDC6'
                                                                   ELSE ''
                                                          END
                SET @SQL+=CASE WHEN @CONDITION='DEDUCTION' THEN ' AND RS.RS_ID IN ('+@CONDITION_VALUE+')' WHEN @CONDITION='DEDUCTION CATEGORY' THEN ' AND RS_CAT.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                WHEN @CONDITION='DEDUCTION TYPE' THEN ' AND RS_TYP.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION PROGRAM' THEN ' AND RS_PGM_TYP.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ' AND DC2.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ' AND DC3.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ' AND DC4.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ' AND DC5.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ' AND DC6.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 ELSE '' END SET @SQL+='),
       CTE2
       AS (SELECT A.CONTRACT_MASTER_SID,
                  A.CONTRACT_ID,
                  A.CONTRACT_NAME,
                  A.COMPANY_MASTER_SID,
                  A.COMPANY_ID,
                  A.COMPANY_NAME,
                  A.ITEM_MASTER_SID,
                  A.ITEM_ID,
                  A.ITEM_NAME,
                  A.BRAND_MASTER_SID,
                  A.BRAND_ID,
                  A.BRAND_NAME,
                  A.RS_MODEL_SID,
                  A.RS_ID,
                  A.RS_NAME,
				  A.PERIOD_YEAR,
                  A.PERIOD_SID,
                  A.STARTING_BALANCE,
                  A.RETURN_RESERVE AS RETURN_RESERVE,
                  A.ARM_ADJUSTMENT_DETAILS_SID,
				  A.ENDING_BALANCE,
                   CASE WHEN RN=1 THEN STARTING_BALANCE 
			ELSE NULL END AS FREQ_STARTING_BALANCE'
                                  SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',A.RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',A.RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',A.REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',A.DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',A.DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',A.DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',A.DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',A.DEDUCTION_CATEGORY_6'
                                                                   ELSE ''
                                                          END
           SET @SQL+=' FROM  CTE1  A),
		    CTE3
       AS (SELECT A.CONTRACT_MASTER_SID,
                  A.CONTRACT_ID,
                  A.CONTRACT_NAME,
                  A.COMPANY_MASTER_SID,
                  A.COMPANY_ID,
                  A.COMPANY_NAME,
                  A.ITEM_MASTER_SID,
                  A.ITEM_ID,
                  A.ITEM_NAME,
                  A.BRAND_MASTER_SID,
                  A.BRAND_ID,
                  A.BRAND_NAME,
                  A.RS_MODEL_SID,
                  A.RS_ID,
                  A.RS_NAME,
				  ''0'' AS PERIOD_YEAR,
				   0 AS PERIOD_SID,
                  A.STARTING_BALANCE,
                  A.RETURN_RESERVE AS RETURN_RESERVE,
                  A.ARM_ADJUSTMENT_DETAILS_SID,
				  A.ENDING_BALANCE,
                  A.FREQ_STARTING_BALANCE'
                                  SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',A.RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',A.RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',A.REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',A.DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',A.DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',A.DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',A.DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',A.DEDUCTION_CATEGORY_6'
                                                                   ELSE ''
                                                          END
           SET @SQL+=' FROM  CTE2  A),'


        IF OBJECT_ID('tempdb..#TEMP_TABLE')IS NOT NULL
        DROP TABLE #TEMP_TABLE

        CREATE TABLE #TEMP_TABLE
        (
                ID INT IDENTITY(1,1),
                STRING CHAR(3),
                COLUMN_NAME VARCHAR(50),
                COLUMN_ADD_NAME VARCHAR(50),
                ALIAS_NAME VARCHAR(50)
        )
        --LEFT(@String, LEN(@String) - 1)
        INSERT INTO #TEMP_TABLE(STRING,COLUMN_NAME,COLUMN_ADD_NAME,ALIAS_NAME)
        SELECT token,CASE WHEN token='B' THEN 'BRAND_MASTER_SID'
                                          WHEN token='I' THEN 'ITEM_MASTER_SID'
                                          WHEN token='T' THEN 'COMPANY_MASTER_SID'
                                          WHEN token='C' THEN 'CONTRACT_MASTER_SID'
                                          WHEN token='D' THEN 'RS_MODEL_SID'
                                          WHEN token='DC' THEN 'RS_CATEGORY'
                                          WHEN token='DT' THEN 'RS_TYPE'
                                          WHEN token='DP'  THEN 'REBATE_PROGRAM_TYPE'
                                          WHEN token='DC2' THEN 'DEDUCTION_CATEGORY_2'
                                          WHEN token='DC3' THEN 'DEDUCTION_CATEGORY_3'
                                          WHEN token='DC4' THEN 'DEDUCTION_CATEGORY_4'
                                          WHEN token='DC5' THEN 'DEDUCTION_CATEGORY_5'
                                          WHEN token='DC6' THEN 'DEDUCTION_CATEGORY_6'
                             END AS COLUMN_NAME,
                                 CASE WHEN token='B' THEN 'BRAND_ID+'' - ''+BRAND_NAME'
                                                 WHEN token='I' THEN 'ITEM_ID+'' - ''+ITEM_NAME'
                                                 WHEN token='T' THEN 'COMPANY_ID+'' - ''+COMPANY_NAME'
                                                 WHEN token='C' THEN 'CONTRACT_ID+'' - ''+CONTRACT_NAME'
                                                 WHEN token='D' THEN 'RS_ID+'' - ''+RS_NAME'
                                                 WHEN token='DC' THEN 'RS_CATEGORY'
                                                 WHEN token='DT' THEN 'RS_TYPE'
                                                 WHEN token='DP' THEN 'REBATE_PROGRAM_TYPE'
                                                 WHEN token='DC2' THEN 'DEDUCTION_CATEGORY_2'
                                                 WHEN token='DC3' THEN 'DEDUCTION_CATEGORY_3'
                                                 WHEN token='DC4' THEN 'DEDUCTION_CATEGORY_4'
                                                 WHEN token='DC5' THEN 'DEDUCTION_CATEGORY_5'
                                                 WHEN token='DC6' THEN 'DEDUCTION_CATEGORY_6'
                                    END AS COLUMN_ADD_NAME,
                                        CASE WHEN token='B' THEN 'BRAND '
                                                 WHEN token='I' THEN 'ITEM '
                                                 WHEN token='T' THEN 'COMPANY'
                                                 WHEN token='C' THEN 'CONTRACT'
                                                 WHEN token='D' THEN 'DEDUCTION'
                                                 WHEN token='DC' THEN 'DEDUCTION_CATEGORY'
                                                 WHEN token='DT' THEN 'DEDUCTION_TYPE'
                                                 WHEN token='DP' THEN 'DEDUCTION_PROGRAM_TYPE'
                                                 WHEN token='DC2' THEN 'DEDUCTION_CATEGORY2'
                                                 WHEN token='DC3' THEN 'DEDUCTION_CATEGORY3'
                                                 WHEN token='DC4' THEN 'DEDUCTION_CATEGORY4'
                                                 WHEN token='DC5' THEN 'DEDUCTION_CATEGORY5'
                                                 WHEN token='DC6' THEN 'DEDUCTION_CATEGORY6'
                                    END AS ALIAS_NAME
        FROM udf_splitstring(@LEVEL,',')

        SELECT  @MAX_VAL=MAX(ID) FROM #TEMP_TABLE

        WHILE(@I<=@MAX_VAL)

        BEGIN
         SELECT
            @SQL_SELECT=
            STUFF((
                SELECT ', NULL AS ' + U.COLUMN_NAME +', NULL AS ' +U.ALIAS_NAME
                FROM #TEMP_TABLE U
                WHERE U.ID = ID AND U.ID>@I
                ORDER BY U.ID
                FOR XML PATH('')
            ),1,1,'') ,
                @SQL_COUNT=
      STUFF((
      SELECT ', ''0'' AS ' + U.COLUMN_NAME +', ''TOTAL'' AS ' +U.ALIAS_NAME
      FROM #TEMP_TABLE U
      WHERE U.ID = ID AND U.ID>=1
      ORDER BY U.ID
      FOR XML PATH('')),1,1,'') ,
                @SQL_ADD_COUNT=
                STUFF((
                SELECT ', NULL AS ' + U.ALIAS_NAME
                FROM #TEMP_TABLE U
                WHERE U.ID = ID AND U.ID>@I
                ORDER BY U.ID
                FOR XML PATH('')),1,1,'')
        FROM #TEMP_TABLE
         SET   @SQL_SELECT+=','
         SET   @SQL_ADD_COUNT+=','
         SET @SQL_SELECT=ISNULL(@SQL_SELECT,'')
         SET @SQL_ADD_COUNT=ISNULL(@SQL_ADD_COUNT,'')
         SET @SQL_COUNT=ISNULL(@SQL_COUNT,'')

         SELECT @LEV=STRING FROM #TEMP_TABLE WHERE ID=@I
         SELECT @VAR=@VAR+COLUMN_NAME+','+COLUMN_ADD_NAME+' AS '+ALIAS_NAME+',', @SQL_UNION=STRING FROM #TEMP_TABLE WHERE ID=@I
         SELECT @VAR_ADD+=COLUMN_NAME+','+COLUMN_ADD_NAME+',' FROM #TEMP_TABLE WHERE ID=@I

         SELECT @SQL_OUTER_SELECT+='SELECT * FROM '+@SQL_UNION+' UNION ALL '
         SET @VAR_ADD=LEFT(@VAR_ADD, LEN(@VAR) - 1)

         SET @SQL_TEMP+=',' +@SQL_UNION+' AS (SELECT '+@VAR+@SQL_SELECT+'PERIOD_YEAR,'+   'ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,'+ 'ISNULL(SUM(RETURN_RESERVE),0) AS RETURN_RESERVE ,'+ 
               'ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,0 AS INDICATOR '
    +' FROM   CTE2 WHERE PERIOD_SID  BETWEEN @STARTFILTER AND @ENDFILTER
                 GROUP  BY '+@VAR_ADD+'PERIOD_YEAR'+CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',DEDUCTION_CATEGORY_6'
                                                                   WHEN @CONDITION='DEDUCTION' THEN ',RS_ID'
                                                                   ELSE ''
                                                          END+
                         ')'
         SET @I+=1


        END

        SET @SQL_OUTER_SELECT=LEFT(@SQL_OUTER_SELECT, LEN(@SQL_OUTER_SELECT) - 10)

                SET @SQL+='TOTAL AS (SELECT '+@SQL_COUNT+',PERIOD_YEAR,'+  'ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,'+  'ISNULL(SUM(RETURN_RESERVE),0) AS RETURN_RESERVE ,'+ 
                'ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,1 AS INDICATOR '
    +' FROM   CTE2 WHERE PERIOD_SID  BETWEEN @STARTFILTER AND @ENDFILTER
       GROUP  BY PERIOD_YEAR'+
               ')'+@SQL_TEMP


        SET @SQL+=' SELECT * FROM TOTAL UNION ALL '+@SQL_OUTER_SELECT


      EXEC   (@SQL)
      

        ]]>    
        </query>
    </entity>
    <entity id="getBSummaryExcelTotalQuery-ReturnReserve">
        <query> 
        <![CDATA[
    DECLARE @LEVEL                 VARCHAR(30)='@LEVEL_VAL', 
        @MAX_VAL               INT=0, 
        @I                     INT=1, 
        @SQL                   NVARCHAR(MAX)='', 
        @SQL_TEMP              NVARCHAR(MAX)='', 
        @VAR                   VARCHAR(1000)='', 
        @VAR_ADD               VARCHAR(1000)='', 
        @VAR_TEST              VARCHAR(1000)='', 
        @SQL_GROUP             NVARCHAR(MAX), 
        @SQL_SELECT            NVARCHAR(MAX), 
        @SQL_UNION             NVARCHAR(4000), 
        @SQL_OUTER_SELECT      NVARCHAR(1000)='', 
        @SQL_COUNT             NVARCHAR(1000)='', 
        @SQL_ADD_COUNT         NVARCHAR(1000)='', 
        @CONDITION             VARCHAR(50)='@DEDUCTIONLEVEL', 
        @CONDITION_VALUE       VARCHAR(1000)='@DEDUCTIONVALUE', 
        @PROJECTION_MASTER_SID INT = @PROJECTIONMASTERSID, 
        @USER_ID               INT = @USERID, 
        @SESSION_ID            INT = @SESSIONID, 
        @LEV                   VARCHAR(10), 
        @FREQUENCY             VARCHAR(20)='@FREQUENCYSELECTED', 
        @START                 VARCHAR(20)='@STARTPERIOD', 
        @START_SID             INT, 
        @END                   VARCHAR(20)='@ENDPERIOD', 
        @END_SID               INT 
        

  SELECT @START_SID = MIN(PERIOD_SID)
  FROM   PERIOD P
  WHERE  CASE
           WHEN @FREQUENCY = 'MONTHLY' THEN LEFT(DATENAME( MONTH, DATEADD( MONTH, P.PERIOD_SID, -1 ) ), 3)
                                            + ' ' + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'QUARTERLY' THEN 'Q' + CONVERT(VARCHAR(4), P.QUARTER) + ' '
                                              + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'SEMI-ANNUALLY' THEN 'S' + CONVERT(VARCHAR(4), P.SEMI_ANNUAL) + ' '
                                                  + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'ANNUALLY' THEN CONVERT(VARCHAR(4), P.YEAR)
         END = @START

  SELECT @END_SID = MAX(PERIOD_SID)
  FROM   PERIOD P
  WHERE  CASE
           WHEN @FREQUENCY = 'MONTHLY' THEN LEFT(DATENAME( MONTH, DATEADD( MONTH, P.PERIOD_SID, -1 ) ), 3)
                                            + ' ' + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'QUARTERLY' THEN 'Q' + CONVERT(VARCHAR(4), P.QUARTER) + ' '
                                              + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'SEMI-ANNUALLY' THEN 'S' + CONVERT(VARCHAR(4), P.SEMI_ANNUAL) + ' '
                                                  + CONVERT(VARCHAR(4), P.YEAR)
           WHEN @FREQUENCY = 'ANNUALLY' THEN CONVERT(VARCHAR(4), P.YEAR)
         END = @END


DECLARE @ARM_BSR_RETURN_RESERVE VARCHAR(200) = CONCAT ('ST_ARM_BSR_RETURN_RESERVE_',@USER_ID,'_',@SESSION_ID,'_',REPLACE(CONVERT(VARCHAR(50), GETDATE(), 2), '.', ''))

  ----------------------------------------------PERIOD POPULATION-----------------------------------
  IF OBJECT_ID('TEMPDB..#TEMP_PERIOD') IS NOT NULL
    DROP TABLE #TEMP_PERIOD

  CREATE TABLE #TEMP_PERIOD
    (
       PERIOD_SID  INT,
       [YEAR]      INT,
       PERIOD      INT,
       PERIOD_YEAR VARCHAR(50)
    )

  INSERT INTO #TEMP_PERIOD
              (PERIOD_SID,
               [YEAR],
               PERIOD,
               PERIOD_YEAR)
  SELECT P.PERIOD_SID,
         P.YEAR,
         PERIOD = CASE
                    WHEN LEFT(@FREQUENCY, 1) = 'M' THEN MONTH
                    WHEN LEFT(@FREQUENCY, 1) = 'Q' THEN QUARTER
                    WHEN LEFT(@FREQUENCY, 1) = 'S' THEN SEMI_ANNUAL
                    ELSE YEAR
                  END,
         PERIOD_YEAR= CASE
                        WHEN LEFT(@FREQUENCY, 1) = 'M' THEN LEFT(DATENAME( MONTH, DATEADD( MONTH, P.PERIOD_SID, -1 ) ), 3)
                                                            + ' ' + CONVERT(VARCHAR(4), P.YEAR)
                        WHEN LEFT(@FREQUENCY, 1) = 'Q' THEN 'Q' + CONVERT(VARCHAR(4), P.QUARTER) + ' '
                                                            + CONVERT(VARCHAR(4), P.YEAR)
                        WHEN LEFT(@FREQUENCY, 1) = 'S' THEN 'S' + CONVERT(VARCHAR(4), P.SEMI_ANNUAL) + ' '
                                                            + CONVERT(VARCHAR(4), P.YEAR)
                        ELSE CONVERT(VARCHAR(4), P.YEAR)
                      END
  FROM   PERIOD P
  WHERE  P.PERIOD_SID BETWEEN @START_SID AND @END_SID

  SET @SQL=';WITH CTE1
       AS (SELECT B.CONTRACT_MASTER_SID,
                  CN.CONTRACT_ID,
                  CN.CONTRACT_NAME,
                  B.COMPANY_MASTER_SID,
                  CM.COMPANY_ID,
                  CM.COMPANY_NAME,
                  B.ITEM_MASTER_SID,
                  IM.ITEM_ID,
                  IM.ITEM_NAME,
                  BM.BRAND_MASTER_SID,
                  BM.BRAND_ID,
                  BM.BRAND_NAME,
                  A.RS_MODEL_SID,
                  RS.RS_ID,
                  RS_NAME,
                  P.PERIOD_YEAR,
                  ARP.PERIOD_SID,          
                  ARP.STARTING_BALANCE,
                  ARP.RETURN_RESERVE AS RETURN_RESERVE,
                  ARP.ARM_ADJUSTMENT_DETAILS_SID,
				  ARP.ENDING_BALANCE,
                 ROW_NUMBER() OVER(PARTITION BY ARP.ARM_ADJUSTMENT_DETAILS_SID,P.PERIOD_YEAR ORDER BY
				ARP.ARM_ADJUSTMENT_DETAILS_SID,P.PERIOD_YEAR) AS RN'
                     SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',RS_CAT.DESCRIPTION AS RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',RS_TYP.DESCRIPTION AS RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',RS_PGM_TYP.DESCRIPTION AS REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',DC2.DESCRIPTION AS DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',DC3.DESCRIPTION AS DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',DC4.DESCRIPTION AS DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',DC5.DESCRIPTION AS DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',DC6.DESCRIPTION AS DEDUCTION_CATEGORY_6'
                                                                   ELSE ''
                                                          END
                         SET @SQL+=' FROM   ARM_ADJUSTMENT_DETAILS A
                  JOIN CCP_DETAILS B
                    ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
                  JOIN ITEM_MASTER IM
                    ON IM.ITEM_MASTER_SID = B.ITEM_MASTER_SID
                  JOIN BRAND_MASTER BM
                    ON BM.BRAND_MASTER_SID = IM.BRAND_MASTER_SID
                        JOIN ' + @ARM_BSR_RETURN_RESERVE + ' ARP
                          ON ARP.ARM_ADJUSTMENT_DETAILS_SID = A.ARM_ADJUSTMENT_DETAILS_SID
                                        JOIN CONTRACT_MASTER CN
                                          ON CN.CONTRACT_MASTER_SID=B.CONTRACT_MASTER_SID
                                        JOIN COMPANY_MASTER CM
                                          ON CM.COMPANY_MASTER_SID=B.COMPANY_MASTER_SID
                                        JOIN RS_CONTRACT RS
                                          ON RS.RS_MODEL_SID=A.RS_MODEL_SID AND RS.CONTRACT_MASTER_SID=B.CONTRACT_MASTER_SID
										 JOIN #TEMP_PERIOD P ON P.PERIOD_SID=ARP.PERIOD_SID
                                        JOIN ARM_DEDUCTION_SELECTION ADS
                                          ON ADS.PROJECTION_MASTER_SID=A.PROJECTION_MASTER_SID AND ADS.RS_CONTRACT_SID=RS.RS_CONTRACT_SID'
                                        SET @SQL+=CASE WHEN @CONDITION IN ('DEDUCTION CATEGORY 2','DEDUCTION CATEGORY 3','DEDUCTION CATEGORY 4','DEDUCTION CATEGORY 5','DEDUCTION CATEGORY 6') THEN '  LEFT JOIN UDCS U ON U.MASTER_TYPE=''RS_CONTRACT'' AND U.MASTER_SID=RS.RS_CONTRACT_SID' ELSE '' END
                                        SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ' JOIN HELPER_TABLE RS_CAT ON RS_CAT.HELPER_TABLE_SID=RS.RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ' JOIN HELPER_TABLE RS_TYP ON RS_TYP.HELPER_TABLE_SID=RS.RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ' JOIN HELPER_TABLE RS_PGM_TYP ON RS_PGM_TYP.HELPER_TABLE_SID=RS.REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ' JOIN HELPER_TABLE DC2 ON DC2.HELPER_TABLE_SID=U.UDC2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ' JOIN HELPER_TABLE DC3 ON DC3.HELPER_TABLE_SID=U.UDC3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ' JOIN HELPER_TABLE DC4 ON DC4.HELPER_TABLE_SID=U.UDC4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ' JOIN HELPER_TABLE DC5 ON DC5.HELPER_TABLE_SID=U.UDC5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ' JOIN HELPER_TABLE DC6 ON DC6.HELPER_TABLE_SID=U.UDC6'
                                                                   ELSE ''
                                                          END
                SET @SQL+=CASE WHEN @CONDITION='DEDUCTION' THEN ' AND RS.RS_ID IN ('+@CONDITION_VALUE+')' WHEN @CONDITION='DEDUCTION CATEGORY' THEN ' AND RS_CAT.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                WHEN @CONDITION='DEDUCTION TYPE' THEN ' AND RS_TYP.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION PROGRAM' THEN ' AND RS_PGM_TYP.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ' AND DC2.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ' AND DC3.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ' AND DC4.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ' AND DC5.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ' AND DC6.DESCRIPTION IN ('+@CONDITION_VALUE+')'
                 ELSE '' END SET @SQL+='),
       CTE2
       AS (SELECT A.CONTRACT_MASTER_SID,
                  A.CONTRACT_ID,
                  A.CONTRACT_NAME,
                  A.COMPANY_MASTER_SID,
                  A.COMPANY_ID,
                  A.COMPANY_NAME,
                  A.ITEM_MASTER_SID,
                  A.ITEM_ID,
                  A.ITEM_NAME,
                  A.BRAND_MASTER_SID,
                  A.BRAND_ID,
                  A.BRAND_NAME,
                  A.RS_MODEL_SID,
                  A.RS_ID,
                  A.RS_NAME,
				  A.PERIOD_YEAR,
                  A.PERIOD_SID,
                  A.STARTING_BALANCE,
                  A.RETURN_RESERVE AS RETURN_RESERVE,
                  A.ARM_ADJUSTMENT_DETAILS_SID,
				  A.ENDING_BALANCE,
                   CASE WHEN RN=1 THEN STARTING_BALANCE 
			ELSE NULL END AS FREQ_STARTING_BALANCE'
                                  SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',A.RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',A.RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',A.REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',A.DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',A.DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',A.DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',A.DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',A.DEDUCTION_CATEGORY_6'
                                                                   ELSE ''
                                                          END
           SET @SQL+=' FROM  CTE1  A),
		    CTE3
       AS (SELECT A.CONTRACT_MASTER_SID,
                  A.CONTRACT_ID,
                  A.CONTRACT_NAME,
                  A.COMPANY_MASTER_SID,
                  A.COMPANY_ID,
                  A.COMPANY_NAME,
                  A.ITEM_MASTER_SID,
                  A.ITEM_ID,
                  A.ITEM_NAME,
                  A.BRAND_MASTER_SID,
                  A.BRAND_ID,
                  A.BRAND_NAME,
                  A.RS_MODEL_SID,
                  A.RS_ID,
                  A.RS_NAME,
				  ''0'' AS PERIOD_YEAR,
				   0 AS PERIOD_SID,
                  A.STARTING_BALANCE,
                  A.RETURN_RESERVE AS RETURN_RESERVE,
                  A.ARM_ADJUSTMENT_DETAILS_SID,
				  A.ENDING_BALANCE,
                  A.FREQ_STARTING_BALANCE'
                                  SET @SQL+=CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',A.RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',A.RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',A.REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',A.DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',A.DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',A.DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',A.DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',A.DEDUCTION_CATEGORY_6'
                                                                   ELSE ''
                                                          END
           SET @SQL+=' FROM  CTE2  A),'


        IF OBJECT_ID('tempdb..#TEMP_TABLE')IS NOT NULL
        DROP TABLE #TEMP_TABLE

        CREATE TABLE #TEMP_TABLE
        (
                ID INT IDENTITY(1,1),
                STRING CHAR(3),
                COLUMN_NAME VARCHAR(50),
                COLUMN_ADD_NAME VARCHAR(50),
                ALIAS_NAME VARCHAR(50)
        )
        --LEFT(@String, LEN(@String) - 1)
        INSERT INTO #TEMP_TABLE(STRING,COLUMN_NAME,COLUMN_ADD_NAME,ALIAS_NAME)
        SELECT token,CASE WHEN token='B' THEN 'BRAND_MASTER_SID'
                                          WHEN token='I' THEN 'ITEM_MASTER_SID'
                                          WHEN token='T' THEN 'COMPANY_MASTER_SID'
                                          WHEN token='C' THEN 'CONTRACT_MASTER_SID'
                                          WHEN token='D' THEN 'RS_MODEL_SID'
                                          WHEN token='DC' THEN 'RS_CATEGORY'
                                          WHEN token='DT' THEN 'RS_TYPE'
                                          WHEN token='DP'  THEN 'REBATE_PROGRAM_TYPE'
                                          WHEN token='DC2' THEN 'DEDUCTION_CATEGORY_2'
                                          WHEN token='DC3' THEN 'DEDUCTION_CATEGORY_3'
                                          WHEN token='DC4' THEN 'DEDUCTION_CATEGORY_4'
                                          WHEN token='DC5' THEN 'DEDUCTION_CATEGORY_5'
                                          WHEN token='DC6' THEN 'DEDUCTION_CATEGORY_6'
                             END AS COLUMN_NAME,
                                 CASE WHEN token='B' THEN 'BRAND_ID+'' - ''+BRAND_NAME'
                                                 WHEN token='I' THEN 'ITEM_ID+'' - ''+ITEM_NAME'
                                                 WHEN token='T' THEN 'COMPANY_ID+'' - ''+COMPANY_NAME'
                                                 WHEN token='C' THEN 'CONTRACT_ID+'' - ''+CONTRACT_NAME'
                                                 WHEN token='D' THEN 'RS_ID+'' - ''+RS_NAME'
                                                 WHEN token='DC' THEN 'RS_CATEGORY'
                                                 WHEN token='DT' THEN 'RS_TYPE'
                                                 WHEN token='DP' THEN 'REBATE_PROGRAM_TYPE'
                                                 WHEN token='DC2' THEN 'DEDUCTION_CATEGORY_2'
                                                 WHEN token='DC3' THEN 'DEDUCTION_CATEGORY_3'
                                                 WHEN token='DC4' THEN 'DEDUCTION_CATEGORY_4'
                                                 WHEN token='DC5' THEN 'DEDUCTION_CATEGORY_5'
                                                 WHEN token='DC6' THEN 'DEDUCTION_CATEGORY_6'
                                    END AS COLUMN_ADD_NAME,
                                        CASE WHEN token='B' THEN 'BRAND '
                                                 WHEN token='I' THEN 'ITEM '
                                                 WHEN token='T' THEN 'COMPANY'
                                                 WHEN token='C' THEN 'CONTRACT'
                                                 WHEN token='D' THEN 'DEDUCTION'
                                                 WHEN token='DC' THEN 'DEDUCTION_CATEGORY'
                                                 WHEN token='DT' THEN 'DEDUCTION_TYPE'
                                                 WHEN token='DP' THEN 'DEDUCTION_PROGRAM_TYPE'
                                                 WHEN token='DC2' THEN 'DEDUCTION_CATEGORY2'
                                                 WHEN token='DC3' THEN 'DEDUCTION_CATEGORY3'
                                                 WHEN token='DC4' THEN 'DEDUCTION_CATEGORY4'
                                                 WHEN token='DC5' THEN 'DEDUCTION_CATEGORY5'
                                                 WHEN token='DC6' THEN 'DEDUCTION_CATEGORY6'
                                    END AS ALIAS_NAME
        FROM udf_splitstring(@LEVEL,',')

        SELECT  @MAX_VAL=MAX(ID) FROM #TEMP_TABLE

        WHILE(@I<=@MAX_VAL)

        BEGIN
         SELECT
            @SQL_SELECT=
            STUFF((
                SELECT ', NULL AS ' + U.COLUMN_NAME +', NULL AS ' +U.ALIAS_NAME
                FROM #TEMP_TABLE U
                WHERE U.ID = ID AND U.ID>@I
                ORDER BY U.ID
                FOR XML PATH('')
            ),1,1,'') ,
                @SQL_COUNT=
      STUFF((
      SELECT ', ''0'' AS ' + U.COLUMN_NAME +', ''TOTAL'' AS ' +U.ALIAS_NAME
      FROM #TEMP_TABLE U
      WHERE U.ID = ID AND U.ID>=1
      ORDER BY U.ID
      FOR XML PATH('')),1,1,'') ,
                @SQL_ADD_COUNT=
                STUFF((
                SELECT ', NULL AS ' + U.ALIAS_NAME
                FROM #TEMP_TABLE U
                WHERE U.ID = ID AND U.ID>@I
                ORDER BY U.ID
                FOR XML PATH('')),1,1,'')
        FROM #TEMP_TABLE
         SET   @SQL_SELECT+=','
         SET   @SQL_ADD_COUNT+=','
         SET @SQL_SELECT=ISNULL(@SQL_SELECT,'')
         SET @SQL_ADD_COUNT=ISNULL(@SQL_ADD_COUNT,'')
         SET @SQL_COUNT=ISNULL(@SQL_COUNT,'')

         SELECT @LEV=STRING FROM #TEMP_TABLE WHERE ID=@I
         SELECT @VAR=@VAR+COLUMN_NAME+','+COLUMN_ADD_NAME+' AS '+ALIAS_NAME+',', @SQL_UNION=STRING FROM #TEMP_TABLE WHERE ID=@I
         SELECT @VAR_ADD+=COLUMN_NAME+','+COLUMN_ADD_NAME+',' FROM #TEMP_TABLE WHERE ID=@I

         SELECT @SQL_OUTER_SELECT+='SELECT * FROM '+@SQL_UNION+' UNION ALL '
         SET @VAR_ADD=LEFT(@VAR_ADD, LEN(@VAR) - 1)

         SET @SQL_TEMP+=',' +@SQL_UNION+' AS (SELECT '+@VAR+@SQL_SELECT+'PERIOD_YEAR,'+   'ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,'+ 'ISNULL(SUM(RETURN_RESERVE),0) AS RETURN_RESERVE ,'+ 
               'ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,0 AS INDICATOR '
    +' FROM   CTE3
                 GROUP  BY '+@VAR_ADD+'PERIOD_YEAR'+CASE WHEN @CONDITION='DEDUCTION CATEGORY' THEN ',RS_CATEGORY'
                                                       WHEN @CONDITION='DEDUCTION TYPE' THEN ',RS_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION PROGRAM' THEN ',REBATE_PROGRAM_TYPE'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 2' THEN ',DEDUCTION_CATEGORY_2'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 3' THEN ',DEDUCTION_CATEGORY_3'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 4' THEN ',DEDUCTION_CATEGORY_4'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 5' THEN ',DEDUCTION_CATEGORY_5'
                                                                   WHEN @CONDITION='DEDUCTION CATEGORY 6' THEN ',DEDUCTION_CATEGORY_6'
                                                                   WHEN @CONDITION='DEDUCTION' THEN ',RS_ID'
                                                                   ELSE ''
                                                          END+
                         ')'
         SET @I+=1


        END

        SET @SQL_OUTER_SELECT=LEFT(@SQL_OUTER_SELECT, LEN(@SQL_OUTER_SELECT) - 10)

                SET @SQL+='TOTAL AS (SELECT '+@SQL_COUNT+',PERIOD_YEAR,'+  'ISNULL(SUM(FREQ_STARTING_BALANCE),0) AS STARTING_BALANCE,'+  'ISNULL(SUM(RETURN_RESERVE),0) AS RETURN_RESERVE ,'+ 
                'ISNULL(SUM(FREQ_STARTING_BALANCE),0) + ISNULL(SUM(RETURN_RESERVE),0) AS ENDING_BALANCE,1 AS INDICATOR '
    +' FROM   CTE3
       GROUP  BY PERIOD_YEAR'+
               ')'+@SQL_TEMP


        SET @SQL+=' SELECT * FROM TOTAL UNION ALL '+@SQL_OUTER_SELECT


      EXEC   (@SQL)
        ]]>    
        </query>
    </entity>
</sql>