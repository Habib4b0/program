--------------------------------------------------------- NM_PPA_PROJECTION_MASTER ----------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
			AND TABLE_SCHEMA = 'dbo'
		)
BEGIN
	CREATE TABLE [dbo].[NM_PPA_PROJECTION_MASTER] (
		[PROJECTION_DETAILS_SID] [int] NOT NULL
		,[ACTUAL_PRICE_CAP] [numeric](22, 6) NULL
		,[PRICE_BASIS] [varchar](50) NULL
		,[USER_GROUP] [varchar](50) NULL
		,[PRICE_PROTECTION_START_DATE] [datetime] NOT NULL
		,[PRICE_PROTECTION_END_DATE] [datetime] NULL
		,[CHECK_RECORD] [bit] NOT NULL
		,[PRICE_PROTECTION_STATUS] [int] NULL
		,[RS_MODEL_SID] [int] NOT NULL
		,[REBATE_FREQUENCY] [int] NOT NULL
		)
END
GO



IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION_MASTER'
			AND column_name = 'PRICE_PROTECTION_STATUS'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ADD PRICE_PROTECTION_STATUS INT
END
GO


IF NOT EXISTS (SELECT 1
               FROM   INFORMATION_SCHEMA.COLUMNS
               WHERE  TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
                      AND COLUMN_NAME = 'RS_MODEL_SID'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      ALTER TABLE NM_PPA_PROJECTION_MASTER
        ADD RS_MODEL_SID INT
  END

GO


IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'REBATE_FREQUENCY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ADD REBATE_FREQUENCY INT 
	END
GO

IF EXISTS (SELECT 1 FROM NM_PPA_PROJECTION_MASTER WHERE RS_MODEL_SID IS NULL OR  REBATE_FREQUENCY IS NULL  )
BEGIN
DECLARE @RS_MODEL_SID INT,@REBATE_FREQUENCY INT
SET @RS_MODEL_SID =(SELECT TOP 1 RS_MODEL_SID FROM RS_CONTRACT)
SET @REBATE_FREQUENCY = 0
UPDATE NM_PPA_PROJECTION_MASTER SET RS_MODEL_SID=@RS_MODEL_SID,REBATE_FREQUENCY=@REBATE_FREQUENCY WHERE RS_MODEL_SID IS NULL OR  REBATE_FREQUENCY IS NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ALTER COLUMN RS_MODEL_SID INT NOT NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'REBATE_FREQUENCY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ALTER COLUMN REBATE_FREQUENCY INT NOT NULL
END
GO
------ALG-81
IF NOT EXISTS (
SELECT 1
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
AND COLUMN_NAME = 'PPA_INDEX_NO'
AND TABLE_SCHEMA = 'DBO'
)
BEGIN
IF EXISTS (
SELECT 1
FROM NM_PPA_PROJECTION_MASTER
)
BEGIN
ALTER TABLE NM_PPA_PROJECTION_MASTER ADD PPA_INDEX_NO INT
END
ELSE
BEGIN
ALTER TABLE NM_PPA_PROJECTION_MASTER ADD PPA_INDEX_NO INT NOT NULL
END
END
GO


IF EXISTS (
SELECT 1
FROM INFORMATION_SCHEMA.COLUMNS
WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
AND COLUMN_NAME = 'PPA_INDEX_NO'
AND TABLE_SCHEMA = 'DBO'
AND DATA_TYPE = 'INT'
AND IS_NULLABLE = 'YES'
)
BEGIN
UPDATE NM_PPA_PROJECTION_MASTER
SET PPA_INDEX_NO = 1
WHERE PPA_INDEX_NO IS NULL

ALTER TABLE NM_PPA_PROJECTION_MASTER

ALTER COLUMN PPA_INDEX_NO INT NOT NULL
END 
----
------------------ PRIMARY KEY -----------------------------------------

IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID'
			AND TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER DROP CONSTRAINT PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID 
END
GO
---------------------------------------------------GAL-1163 STARTS-------------------------------------------
IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_MODEL_SID'
			AND TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER DROP CONSTRAINT PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_MODEL_SID
END
GO
IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE Object_name(PARENT_OBJECT_ID) = 'NM_PPA_PROJECTION_MASTER'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_PPA_PROJECTION_MASTER_RS_MODEL_RS_MODEL_SID'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER DROP CONSTRAINT FK_NM_PPA_PROJECTION_MASTER_RS_MODEL_RS_MODEL_SID
END
GO
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'RS_MODEL_SID'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ALTER COLUMN RS_MODEL_SID INT NULL
END
GO




------------------------------------ADDING RS_CONTRACT_SID C0LUMN----------------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'RS_CONTRACT_SID'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ADD RS_CONTRACT_SID INT NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM NM_PPA_PROJECTION_MASTER WHERE RS_CONTRACT_SID IS NULL
		)
BEGIN
	UPDATE M
	SET RS_CONTRACT_SID = R.RS_CONTRACT_SID
	FROM NM_PPA_PROJECTION_MASTER M
	JOIN PROJECTION_DETAILS P ON P.PROJECTION_DETAILS_SID = M.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS C ON C.CCP_DETAILS_SID = P.CCP_DETAILS_SID
	JOIN RS_CONTRACT R ON R.CONTRACT_MASTER_SID = C.CONTRACT_MASTER_SID
		AND R.RS_MODEL_SID = M.RS_MODEL_SID
	JOIN HELPER_TABLE H ON H.HELPER_TABLE_SID = R.REBATE_PROGRAM_TYPE
		AND H.DESCRIPTION = 'Price Protection'

	UPDATE NM_PPA_PROJECTION_MASTER
	SET RS_CONTRACT_SID = (
		SELECT TOP 1 RS_CONTRACT_SID
		FROM RS_CONTRACT
		WHERE INBOUND_STATUS = 'D'
		)
	WHERE RS_CONTRACT_SID IS NULL

END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'RS_CONTRACT_SID'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ALTER COLUMN RS_CONTRACT_SID INT NOT NULL
END
GO

-- IF NOT EXISTS (
		-- SELECT 'X'
		-- FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		-- WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_CONTRACT_SID'
			-- AND TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
		-- )
-- BEGIN
	-- ALTER TABLE NM_PPA_PROJECTION_MASTER ADD CONSTRAINT PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_CONTRACT_SID PRIMARY KEY (PROJECTION_DETAILS_SID,RS_CONTRACT_SID)
-- END
-- GO
IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_PPA_PROJECTION_MASTER'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_NM_PPA_PROJECTION_MASTER_RS_CONTRACT_RS_CONTRACT_SID'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE NM_PPA_PROJECTION_MASTER ADD CONSTRAINT FK_NM_PPA_PROJECTION_MASTER_RS_CONTRACT_RS_CONTRACT_SID FOREIGN KEY(RS_CONTRACT_SID) REFERENCES RS_CONTRACT(RS_CONTRACT_SID)
  END
GO 
---------------ALG-81

IF  EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_CONTRACT_SID'
			AND TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER DROP CONSTRAINT PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_CONTRACT_SID 
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_CONTRACT_SID_PPA_INDEX_NO'
			AND TABLE_NAME = 'NM_PPA_PROJECTION_MASTER'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION_MASTER ADD CONSTRAINT PK_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_CONTRACT_SID_PPA_INDEX_NO PRIMARY KEY (PROJECTION_DETAILS_SID,RS_CONTRACT_SID,PPA_INDEX_NO)
END
GO
---------------------------------------------------GAL-1163 ENDS-------------------------------------------
--------------------------------------------------------- ST_NM_PPA_PROJECTION_MASTER -----------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION_MASTER'
			AND TABLE_SCHEMA = 'dbo'
		)
BEGIN
	CREATE TABLE [dbo].[ST_NM_PPA_PROJECTION_MASTER] (
		[PROJECTION_DETAILS_SID] [int] NOT NULL
		,[ACTUAL_PRICE_CAP] [numeric](22, 6) NULL
		,[PRICE_BASIS] [varchar](50) NULL
		,[USER_GROUP] [varchar](50) NULL
		,[PRICE_PROTECTION_START_DATE] [datetime] NOT NULL
		,[PRICE_PROTECTION_END_DATE] [datetime] NULL
		,[CHECK_RECORD] [bit] NOT NULL
		,[USER_ID] [int] NOT NULL
		,[SESSION_ID] [int] NOT NULL
		,[LAST_MODIFIED_DATE] [datetime] NOT NULL
		,[PRICE_PROTECTION_STATUS] [int] NULL
		,[RS_MODEL_SID] [int] NOT NULL
		,[REBATE_FREQUENCY] [int] NOT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION_MASTER'
			AND column_name = 'PRICE_PROTECTION_STATUS'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER ADD PRICE_PROTECTION_STATUS INT
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER ADD RS_MODEL_SID INT 
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'REBATE_FREQUENCY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER ADD REBATE_FREQUENCY INT 
END
GO


IF EXISTS (SELECT 1 FROM ST_NM_PPA_PROJECTION_MASTER WHERE RS_MODEL_SID IS NULL OR  REBATE_FREQUENCY IS NULL  )
BEGIN
DECLARE @RS_MODEL_SID INT,@REBATE_FREQUENCY INT
SET @RS_MODEL_SID =(SELECT TOP 1 RS_MODEL_SID FROM RS_CONTRACT)
SET @REBATE_FREQUENCY = 0
UPDATE ST_NM_PPA_PROJECTION_MASTER SET RS_MODEL_SID=@RS_MODEL_SID,REBATE_FREQUENCY=@REBATE_FREQUENCY WHERE RS_MODEL_SID IS NULL OR  REBATE_FREQUENCY IS NULL
END
GO
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER ALTER COLUMN RS_MODEL_SID INT NOT NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION_MASTER'
			AND COLUMN_NAME = 'REBATE_FREQUENCY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER ALTER COLUMN REBATE_FREQUENCY INT NOT NULL
END
GO


------------------ PRIMARY KEY -----------------------------------------

IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_ST_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_USER_ID_SESSION_ID'
			AND TABLE_NAME = 'ST_NM_PPA_PROJECTION_MASTER'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER DROP CONSTRAINT PK_ST_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_USER_ID_SESSION_ID 
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_ST_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_MODEL_SID_USER_ID_SESSION_ID'
			AND TABLE_NAME = 'ST_NM_PPA_PROJECTION_MASTER'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER ADD CONSTRAINT PK_ST_NM_PPA_PROJECTION_MASTER_PROJECTION_DETAILS_SID_RS_MODEL_SID_USER_ID_SESSION_ID PRIMARY KEY (PROJECTION_DETAILS_SID,RS_MODEL_SID,USER_ID,SESSION_ID)
END
GO

--Default Constraints
IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'ST_NM_PPA_PROJECTION_MASTER'
			AND Schema_name(SCHEMA_ID) = 'dbo'
			AND NAME = 'DF_ST_NM_PPA_PROJECTION_MASTER_LAST_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION_MASTER ADD CONSTRAINT DF_ST_NM_PPA_PROJECTION_MASTER_LAST_MODIFIED_DATE DEFAULT(Getdate())
	FOR LAST_MODIFIED_DATE
END
GO

----------------------------------------------------------------- NM_ACTUAL_PPA ------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'NM_ACTUAL_PPA'
			AND TABLE_SCHEMA = 'dbo'
		)
BEGIN
	CREATE TABLE [dbo].[NM_ACTUAL_PPA] (
		[PROJECTION_DETAILS_SID] [int] NOT NULL
		,[PERIOD_SID] [int] NOT NULL
		,[ACTUAL_RATE] [numeric](22, 6) NULL
		,[ACTUAL_SALES] [numeric](22, 6) NULL
		,[ACTUAL_DISCOUNT_DOLLAR] [numeric](22, 6) NULL
		,[ACTUAL_DISCOUNT_UNITS] [numeric](22, 6) NULL
		,[ACTUAL_PROJECTION_SALES] [numeric](22, 6) NULL
		,[ACTUAL_PROJECTION_RATE] [numeric](22, 6) NULL
		,[ACTUAL_PROJ_DISCOUNT_DOLLAR] [numeric](22, 6) NULL
		,[ACTUAL_PROJ_DISCOUNT_UNITS] [numeric](22, 6) NULL
		,[ITEM_PRICING_QUALIFIER_SID] [int] NULL
		,[NEP] [numeric](22, 6) NULL
		,[NEP_FORMULA] [varchar](100) NULL
		,[BASE_PRICE_TYPE] [int] NULL
		,[BASE_PRICE_MANUAL] [numeric](22, 6) NULL
		,[BASE_PRICE_DATE] [datetime] NULL
		,[BASE_PRICE_PRICE_TYPE] [int] NULL
		,[NET_BASE_PRICE] [int] NULL
		,[NET_BASE_PRICE_FORMULA] [int] NULL
		,[SUBSEQUENT_PERIOD_PRICE_TYPE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE_FORMULA] [int] NULL
		,[PRICE_TOLERANCE_INTERVAL] [int] NULL
		,[PRICE_TOLERANCE_FREQUENCY] [int] NULL
		,[PRICE_TOLERANCE_TYPE] [int] NULL
		,[PRICE_TOLERANCE] [numeric](22, 6) NULL
		,[MAX_INCREMENTAL_CHANGE] [numeric](22, 6) NULL
		,[RESET_ELIGIBLE] [int] NULL
		,[RESET_TYPE] [int] NULL
		,[RESET_DATE] [datetime] NULL
		,[RESET_INTERVAL] [int] NULL
		,[RESET_FREQUENCY] [int] NULL
		,[RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_FORMULA] [int] NULL
		,[NET_PRICE_TYPE] [int] NULL
		,[NET_PRICE_TYPE_FORMULA] [int] NULL
		,[ATTACHED_DATE] [datetime] NULL
		,[Price] [numeric](22, 6) NULL
		,[PriceChange] [numeric](22, 6) NULL
		,[TotalDeductions] [numeric](22, 6) NULL
		,[NetPrice] [numeric](22, 6) NULL
		,[NetMap] [numeric](22, 6) NULL
		,[PriceProtectionAmountPerUnit] [numeric](22, 6) NULL
		,[PriceProtectionPercentage] [numeric](22, 6) NULL
		,[TotalPriceProtectionDeduction] [numeric](22, 6) NULL
		,DEDUCTION_PER_UNIT NUMERIC(22,6) NULL
		,[RS_MODEL_SID] [int] NOT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'ITEM_PRICING_QUALIFIER_SID'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD ITEM_PRICING_QUALIFIER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NEP'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NEP NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NEP_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NEP_FORMULA VARCHAR(100)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD BASE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_MANUAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD BASE_PRICE_MANUAL NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD BASE_PRICE_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD BASE_PRICE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_BASE_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_BASE_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_BASE_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_BASE_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'SUBSEQUENT_PERIOD_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD SUBSEQUENT_PERIOD_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_SUBSEQUENT_PERIOD_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_SUBSEQUENT_PERIOD_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD PRICE_TOLERANCE_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD PRICE_TOLERANCE_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD PRICE_TOLERANCE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD PRICE_TOLERANCE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'MAX_INCREMENTAL_CHANGE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD MAX_INCREMENTAL_CHANGE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'RESET_ELIGIBLE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RESET_ELIGIBLE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'RESET_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RESET_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'RESET_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RESET_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'RESET_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RESET_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'RESET_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RESET_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_RESET_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_RESET_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NET_PRICE_TYPE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NET_PRICE_TYPE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'ATTACHED_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD ATTACHED_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'Price'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD Price NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'PriceChange'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD PriceChange NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'TotalDeductions'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD TotalDeductions NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NetPrice'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NetPrice NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'NetMap'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD NetMap NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'PriceProtectionAmountPerUnit'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD PriceProtectionAmountPerUnit NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'PriceProtectionPercentage'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD PriceProtectionPercentage NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_ACTUAL_PPA'
			AND column_name = 'TotalPriceProtectionDeduction'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD TotalPriceProtectionDeduction NUMERIC(22, 6)
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'DEDUCTION_PER_UNIT'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD DEDUCTION_PER_UNIT NUMERIC(22,6)
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RS_MODEL_SID INT
END
GO

IF EXISTS (SELECT 1 FROM NM_ACTUAL_PPA WHERE RS_MODEL_SID IS NULL)
BEGIN
DECLARE @RS_MODEL_SID INT
SET @RS_MODEL_SID =(SELECT TOP 1 RS_MODEL_SID FROM RS_CONTRACT)
UPDATE NM_ACTUAL_PPA SET RS_MODEL_SID=@RS_MODEL_SID WHERE RS_MODEL_SID IS NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ALTER COLUMN RS_MODEL_SID INT NOT NULL
END
GO

------------------ PRIMARY KEY -----------------------------------------

IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_PERIOD_SID'
			AND TABLE_NAME = 'NM_ACTUAL_PPA'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT PK_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_PERIOD_SID 
END
GO
-------------------------------------------------------GAL-1163 STARTS-------------------------------------------
IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID'
			AND TABLE_NAME = 'NM_ACTUAL_PPA'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT PK_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE Object_name(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_RS_MODEL_RS_MODEL_SID'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_RS_MODEL_RS_MODEL_SID
END
GO
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'RS_MODEL_SID'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ALTER COLUMN RS_MODEL_SID INT NULL
END
GO
----------------------------------------rs_contract_sid addition---------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'RS_CONTRACT_SID'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD RS_CONTRACT_SID INT NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM NM_ACTUAL_PPA WHERE RS_CONTRACT_SID IS NULL
		) 
BEGIN
	UPDATE M
	SET RS_CONTRACT_SID = R.RS_CONTRACT_SID
	FROM NM_ACTUAL_PPA M
	JOIN PROJECTION_DETAILS P ON P.PROJECTION_DETAILS_SID = M.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS C ON C.CCP_DETAILS_SID = P.CCP_DETAILS_SID
	JOIN RS_CONTRACT R ON R.CONTRACT_MASTER_SID = C.CONTRACT_MASTER_SID
		AND R.RS_CONTRACT_SID = M.RS_CONTRACT_SID
	JOIN HELPER_TABLE H ON H.HELPER_TABLE_SID = R.REBATE_PROGRAM_TYPE
		AND H.DESCRIPTION = 'Price Protection'
	
	UPDATE NM_ACTUAL_PPA
	SET RS_CONTRACT_SID = (
		SELECT TOP 1 RS_CONTRACT_SID
		FROM RS_CONTRACT
		WHERE INBOUND_STATUS = 'D'
		)
	WHERE RS_CONTRACT_SID IS NULL
END
GO
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'RS_CONTRACT_SID'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ALTER COLUMN RS_CONTRACT_SID INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_RS_CONTRACT_SID_PERIOD_SID'
			AND TABLE_NAME = 'NM_ACTUAL_PPA'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA ADD CONSTRAINT PK_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_RS_CONTRACT_SID_PERIOD_SID PRIMARY KEY (PROJECTION_DETAILS_SID,RS_CONTRACT_SID,PERIOD_SID)
END
GO
IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_NM_ACTUAL_PPA_RS_CONTRACT_RS_CONTRACT_SID'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE NM_ACTUAL_PPA ADD CONSTRAINT FK_NM_ACTUAL_PPA_RS_CONTRACT_RS_CONTRACT_SID FOREIGN KEY(RS_CONTRACT_SID) REFERENCES RS_CONTRACT(RS_CONTRACT_SID)
  END
GO
-------------------------------------------------------GAL-1163 ENDS-------------------------------------------

---------------------------------------------------------- ST_NM_ACTUAL_PPA -----------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'ST_NM_ACTUAL_PPA'
			AND TABLE_SCHEMA = 'dbo'
		)
BEGIN
	CREATE TABLE [dbo].[ST_NM_ACTUAL_PPA] (
		[PROJECTION_DETAILS_SID] [int] NOT NULL
		,[PERIOD_SID] [int] NOT NULL
		,[ACTUAL_RATE] [numeric](22, 6) NULL
		,[ACTUAL_SALES] [numeric](22, 6) NULL
		,[ACTUAL_DISCOUNT_DOLLAR] [numeric](22, 6) NULL
		,[ACTUAL_DISCOUNT_UNITS] [numeric](22, 6) NULL
		,[ACTUAL_PROJECTION_SALES] [numeric](22, 6) NULL
		,[ACTUAL_PROJECTION_RATE] [numeric](22, 6) NULL
		,[ACTUAL_PROJ_DISCOUNT_DOLLAR] [numeric](22, 6) NULL
		,[ACTUAL_PROJ_DISCOUNT_UNITS] [numeric](22, 6) NULL
		,[USER_ID] [int] NOT NULL
		,[SESSION_ID] [int] NOT NULL
		,[LAST_MODIFIED_DATE] [datetime] NOT NULL
		,[ITEM_PRICING_QUALIFIER_SID] [int] NULL
		,[NEP] [numeric](22, 6) NULL
		,[NEP_FORMULA] [varchar](100) NULL
		,[BASE_PRICE_TYPE] [int] NULL
		,[BASE_PRICE_MANUAL] [numeric](22, 6) NULL
		,[BASE_PRICE_DATE] [datetime] NULL
		,[BASE_PRICE_PRICE_TYPE] [int] NULL
		,[NET_BASE_PRICE] [int] NULL
		,[NET_BASE_PRICE_FORMULA] [int] NULL
		,[SUBSEQUENT_PERIOD_PRICE_TYPE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE_FORMULA] [int] NULL
		,[PRICE_TOLERANCE_INTERVAL] [int] NULL
		,[PRICE_TOLERANCE_FREQUENCY] [int] NULL
		,[PRICE_TOLERANCE_TYPE] [int] NULL
		,[PRICE_TOLERANCE] [numeric](22, 6) NULL
		,[MAX_INCREMENTAL_CHANGE] [numeric](22, 6) NULL
		,[RESET_ELIGIBLE] [int] NULL
		,[RESET_TYPE] [int] NULL
		,[RESET_DATE] [datetime] NULL
		,[RESET_INTERVAL] [int] NULL
		,[RESET_FREQUENCY] [int] NULL
		,[RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_FORMULA] [int] NULL
		,[NET_PRICE_TYPE] [int] NULL
		,[NET_PRICE_TYPE_FORMULA] [int] NULL
		,[ATTACHED_DATE] [datetime] NULL
		,[Price] [numeric](22, 6) NULL
		,[PriceChange] [numeric](22, 6) NULL
		,[TotalDeductions] [numeric](22, 6) NULL
		,[NetPrice] [numeric](22, 6) NULL
		,[NetMap] [numeric](22, 6) NULL
		,[PriceProtectionAmountPerUnit] [numeric](22, 6) NULL
		,[PriceProtectionPercentage] [numeric](22, 6) NULL
		,[TotalPriceProtectionDeduction] [numeric](22, 6) NULL
		,DEDUCTION_PER_UNIT NUMERIC(22,6) NULL
		,[RS_MODEL_SID] [int] NOT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'ITEM_PRICING_QUALIFIER_SID'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD ITEM_PRICING_QUALIFIER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NEP'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NEP NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NEP_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NEP_FORMULA VARCHAR(100)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD BASE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_MANUAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD BASE_PRICE_MANUAL NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD BASE_PRICE_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'BASE_PRICE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD BASE_PRICE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_BASE_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_BASE_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_BASE_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_BASE_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'SUBSEQUENT_PERIOD_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD SUBSEQUENT_PERIOD_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_SUBSEQUENT_PERIOD_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_SUBSEQUENT_PERIOD_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD PRICE_TOLERANCE_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD PRICE_TOLERANCE_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD PRICE_TOLERANCE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'PRICE_TOLERANCE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD PRICE_TOLERANCE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'MAX_INCREMENTAL_CHANGE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD MAX_INCREMENTAL_CHANGE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'RESET_ELIGIBLE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD RESET_ELIGIBLE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'RESET_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD RESET_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'RESET_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD RESET_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'RESET_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD RESET_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'RESET_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD RESET_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_RESET_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_RESET_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NET_PRICE_TYPE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NET_PRICE_TYPE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'ATTACHED_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD ATTACHED_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'Price'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD Price NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'PriceChange'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD PriceChange NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'TotalDeductions'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD TotalDeductions NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NetPrice'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NetPrice NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'NetMap'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD NetMap NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'PriceProtectionAmountPerUnit'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD PriceProtectionAmountPerUnit NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'PriceProtectionPercentage'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD PriceProtectionPercentage NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_ACTUAL_PPA'
			AND column_name = 'TotalPriceProtectionDeduction'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD TotalPriceProtectionDeduction NUMERIC(22, 6)
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'DEDUCTION_PER_UNIT'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD DEDUCTION_PER_UNIT NUMERIC(22,6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD RS_MODEL_SID INT
END
GO

IF EXISTS (SELECT 1 FROM ST_NM_ACTUAL_PPA WHERE RS_MODEL_SID IS NULL)
BEGIN
DECLARE @RS_MODEL_SID INT
SET @RS_MODEL_SID =(SELECT TOP 1 RS_MODEL_SID FROM RS_CONTRACT)
UPDATE ST_NM_ACTUAL_PPA SET RS_MODEL_SID=@RS_MODEL_SID WHERE RS_MODEL_SID IS NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_ACTUAL_PPA'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ALTER COLUMN RS_MODEL_SID INT NOT NULL
END
GO

------------------ PRIMARY KEY -----------------------------------------
IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_ST_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_PERIOD_SID_USER_ID_SESSION_ID'
			AND TABLE_NAME = 'ST_NM_ACTUAL_PPA'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA DROP CONSTRAINT PK_ST_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_PERIOD_SID_USER_ID_SESSION_ID 
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_ST_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID_USER_ID_SESSION_ID'
			AND TABLE_NAME = 'ST_NM_ACTUAL_PPA'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD CONSTRAINT PK_ST_NM_ACTUAL_PPA_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID_USER_ID_SESSION_ID PRIMARY KEY (PROJECTION_DETAILS_SID,RS_MODEL_SID,PERIOD_SID,USER_ID,SESSION_ID)
END
GO

--Default Constraints
IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'ST_NM_ACTUAL_PPA'
			AND Schema_name(SCHEMA_ID) = 'dbo'
			AND NAME = 'DF_ST_NM_ACTUAL_PPA_LAST_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE ST_NM_ACTUAL_PPA ADD CONSTRAINT DF_ST_NM_ACTUAL_PPA_LAST_MODIFIED_DATE DEFAULT(Getdate())
	FOR LAST_MODIFIED_DATE
END
GO

---------------------------------------------------------- NM_PPA_PROJECTION -----------------------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION'
			AND TABLE_SCHEMA = 'dbo'
		)
BEGIN
	CREATE TABLE [dbo].[NM_PPA_PROJECTION] (
		[PROJECTION_DETAILS_SID] [int] NOT NULL
		,[PRICE_CAP] [numeric](22, 6) NULL
		,[RESET] [bit] NULL
		,[PERIOD_SID] [int] NOT NULL
		,[RESET_PRICE_CAP] [bit] NULL
		,[PROJECTION_MAP] [numeric](22, 6) NULL
		,[PROJECTION_RATE] [numeric](22, 6) NULL
		,[PROJECTION_SALES] [numeric](22, 6) NULL
		,[PROJECTION_DISCOUNT_DOLLAR] [numeric](22, 6) NULL
		,[PROJECTION_DISCOUNT_UNITS] [numeric](22, 6) NULL
		,[ITEM_PRICING_QUALIFIER_SID] [int] NULL
		,[NEP] [numeric](22, 6) NULL
		,[NEP_FORMULA] [varchar](100) NULL
		,[BASE_PRICE_TYPE] [int] NULL
		,[BASE_PRICE_MANUAL] [numeric](22, 6) NULL
		,[BASE_PRICE_DATE] [datetime] NULL
		,[BASE_PRICE_PRICE_TYPE] [int] NULL
		,[NET_BASE_PRICE] [int] NULL
		,[NET_BASE_PRICE_FORMULA] [int] NULL
		,[SUBSEQUENT_PERIOD_PRICE_TYPE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE_FORMULA] [int] NULL
		,[PRICE_TOLERANCE_INTERVAL] [int] NULL
		,[PRICE_TOLERANCE_FREQUENCY] [int] NULL
		,[PRICE_TOLERANCE_TYPE] [int] NULL
		,[PRICE_TOLERANCE] [numeric](22, 6) NULL
		,[MAX_INCREMENTAL_CHANGE] [numeric](22, 6) NULL
		,[RESET_ELIGIBLE] [int] NULL
		,[RESET_TYPE] [int] NULL
		,[RESET_DATE] [datetime] NULL
		,[RESET_INTERVAL] [int] NULL
		,[RESET_FREQUENCY] [int] NULL
		,[RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_FORMULA] [int] NULL
		,[NET_PRICE_TYPE] [int] NULL
		,[NET_PRICE_TYPE_FORMULA] [int] NULL
		,[ATTACHED_DATE] [datetime] NULL
		,[Price] [numeric](22, 6) NULL
		,[PriceChange] [numeric](22, 6) NULL
		,[TotalDeductions] [numeric](22, 6) NULL
		,[NetPrice] [numeric](22, 6) NULL
		,[NetMap] [numeric](22, 6) NULL
		,[PriceProtectionAmountPerUnit] [numeric](22, 6) NULL
		,[PriceProtectionPercentage] [numeric](22, 6) NULL
		,[TotalPriceProtectionDeduction] [numeric](22, 6) NULL
		,DEDUCTION_PER_UNIT NUMERIC(22,6) NULL
		,[RS_MODEL_SID] [int] NOT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'ITEM_PRICING_QUALIFIER_SID'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD ITEM_PRICING_QUALIFIER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NEP'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NEP NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NEP_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NEP_FORMULA VARCHAR(100)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD BASE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_MANUAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD BASE_PRICE_MANUAL NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD BASE_PRICE_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD BASE_PRICE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_BASE_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_BASE_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_BASE_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_BASE_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'SUBSEQUENT_PERIOD_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD SUBSEQUENT_PERIOD_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_SUBSEQUENT_PERIOD_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_SUBSEQUENT_PERIOD_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD PRICE_TOLERANCE_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD PRICE_TOLERANCE_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD PRICE_TOLERANCE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD PRICE_TOLERANCE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'MAX_INCREMENTAL_CHANGE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD MAX_INCREMENTAL_CHANGE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'RESET_ELIGIBLE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RESET_ELIGIBLE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'RESET_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RESET_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'RESET_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RESET_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'RESET_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RESET_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'RESET_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RESET_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_RESET_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_RESET_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NET_PRICE_TYPE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NET_PRICE_TYPE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'ATTACHED_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD ATTACHED_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'Price'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD Price NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'PriceChange'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD PriceChange NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'TotalDeductions'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD TotalDeductions NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NetPrice'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NetPrice NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'NetMap'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD NetMap NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'PriceProtectionAmountPerUnit'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD PriceProtectionAmountPerUnit NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'PriceProtectionPercentage'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD PriceProtectionPercentage NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'NM_PPA_PROJECTION'
			AND column_name = 'TotalPriceProtectionDeduction'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD TotalPriceProtectionDeduction NUMERIC(22, 6)
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'DEDUCTION_PER_UNIT'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD DEDUCTION_PER_UNIT NUMERIC(22,6)
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RS_MODEL_SID INT
END
GO

IF EXISTS (SELECT 1 FROM NM_PPA_PROJECTION WHERE RS_MODEL_SID IS NULL)
BEGIN
DECLARE @RS_MODEL_SID INT
SET @RS_MODEL_SID =(SELECT TOP 1 RS_MODEL_SID FROM RS_CONTRACT)
UPDATE NM_PPA_PROJECTION SET RS_MODEL_SID=@RS_MODEL_SID WHERE RS_MODEL_SID IS NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ALTER COLUMN RS_MODEL_SID INT NOT NULL
END
GO

------------------ PRIMARY KEY -----------------------------------------

IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_PERIOD_SID'
			AND TABLE_NAME = 'NM_PPA_PROJECTION'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION DROP CONSTRAINT PK_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_PERIOD_SID 
END
GO

-----------------------------------------------------------GAL-1163 STARTS-------------------------------------------

IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID'
			AND TABLE_NAME = 'NM_PPA_PROJECTION'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION DROP CONSTRAINT PK_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE Object_name(PARENT_OBJECT_ID) = 'NM_PPA_PROJECTION'
			AND Schema_name(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_PPA_PROJECTION_RS_MODEL_RS_MODEL_SID'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION DROP CONSTRAINT FK_NM_PPA_PROJECTION_RS_MODEL_RS_MODEL_SID
END
GO
IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'RS_MODEL_SID'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ALTER COLUMN RS_MODEL_SID INT NULL
END
GO
------------------------------------ADDING RS_CONTRACT_SID C0LUMN----------------------------
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'RS_CONTRACT_SID'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD RS_CONTRACT_SID INT NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM NM_PPA_PROJECTION WHERE RS_CONTRACT_SID IS NULL
		)
BEGIN
	UPDATE M
	SET RS_CONTRACT_SID = R.RS_CONTRACT_SID
	FROM NM_PPA_PROJECTION M
	JOIN PROJECTION_DETAILS P ON P.PROJECTION_DETAILS_SID = M.PROJECTION_DETAILS_SID
	JOIN CCP_DETAILS C ON C.CCP_DETAILS_SID = P.CCP_DETAILS_SID
	JOIN RS_CONTRACT R ON R.CONTRACT_MASTER_SID = C.CONTRACT_MASTER_SID
		AND R.RS_MODEL_SID = M.RS_MODEL_SID
	JOIN HELPER_TABLE H ON H.HELPER_TABLE_SID = R.REBATE_PROGRAM_TYPE
		AND H.DESCRIPTION = 'Price Protection'

	UPDATE NM_PPA_PROJECTION
	SET RS_CONTRACT_SID = (
		SELECT TOP 1 RS_CONTRACT_SID
		FROM RS_CONTRACT
		WHERE INBOUND_STATUS = 'D'
		)
	WHERE RS_CONTRACT_SID IS NULL
END
GO


IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'RS_CONTRACT_SID'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ALTER COLUMN RS_CONTRACT_SID INT NOT NULL
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_RS_CONTRACT_SID_PERIOD_SID'
			AND TABLE_NAME = 'NM_PPA_PROJECTION'
		)
BEGIN
	ALTER TABLE NM_PPA_PROJECTION ADD CONSTRAINT PK_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_RS_CONTRACT_SID_PERIOD_SID PRIMARY KEY (PROJECTION_DETAILS_SID,RS_CONTRACT_SID,PERIOD_SID)
END
GO
IF NOT EXISTS(SELECT 1
              FROM   SYS.FOREIGN_KEYS
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_PPA_PROJECTION'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'FK_NM_PPA_PROJECTION_RS_CONTRACT_RS_CONTRACT_SID'
                     AND TYPE = 'F')
  BEGIN
      ALTER TABLE NM_PPA_PROJECTION ADD CONSTRAINT FK_NM_PPA_PROJECTION_RS_CONTRACT_RS_CONTRACT_SID FOREIGN KEY(RS_CONTRACT_SID) REFERENCES RS_CONTRACT(RS_CONTRACT_SID)
  END
GO 
-----------------------------------------------------------GAL-1163 ENDS-------------------------------------------
----------------------------------------------- ST_NM_PPA_PROJECTION --------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION'
			AND TABLE_SCHEMA = 'dbo'
		)
BEGIN
	CREATE TABLE [dbo].[ST_NM_PPA_PROJECTION] (
		[PROJECTION_DETAILS_SID] [int] NOT NULL
		,[PRICE_CAP] [numeric](22, 6) NULL
		,[RESET] [bit] NULL
		,[PERIOD_SID] [int] NOT NULL
		,[RESET_PRICE_CAP] [bit] NULL
		,[PROJECTION_MAP] [numeric](22, 6) NULL
		,[PROJECTION_RATE] [numeric](22, 6) NULL
		,[PROJECTION_SALES] [numeric](22, 6) NULL
		,[PROJECTION_DISCOUNT_DOLLAR] [numeric](22, 6) NULL
		,[PROJECTION_DISCOUNT_UNITS] [numeric](22, 6) NULL
		,[USER_ID] [int] NOT NULL
		,[SESSION_ID] [int] NOT NULL
		,[LAST_MODIFIED_DATE] [datetime] NOT NULL
		,[ITEM_PRICING_QUALIFIER_SID] [int] NULL
		,[NEP] [numeric](22, 6) NULL
		,[NEP_FORMULA] [varchar](100) NULL
		,[BASE_PRICE_TYPE] [int] NULL
		,[BASE_PRICE_MANUAL] [numeric](22, 6) NULL
		,[BASE_PRICE_DATE] [datetime] NULL
		,[BASE_PRICE_PRICE_TYPE] [int] NULL
		,[NET_BASE_PRICE] [int] NULL
		,[NET_BASE_PRICE_FORMULA] [int] NULL
		,[SUBSEQUENT_PERIOD_PRICE_TYPE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE] [int] NULL
		,[NET_SUBSEQUENT_PERIOD_PRICE_FORMULA] [int] NULL
		,[PRICE_TOLERANCE_INTERVAL] [int] NULL
		,[PRICE_TOLERANCE_FREQUENCY] [int] NULL
		,[PRICE_TOLERANCE_TYPE] [int] NULL
		,[PRICE_TOLERANCE] [numeric](22, 6) NULL
		,[MAX_INCREMENTAL_CHANGE] [numeric](22, 6) NULL
		,[RESET_ELIGIBLE] [int] NULL
		,[RESET_TYPE] [int] NULL
		,[RESET_DATE] [datetime] NULL
		,[RESET_INTERVAL] [int] NULL
		,[RESET_FREQUENCY] [int] NULL
		,[RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_TYPE] [int] NULL
		,[NET_RESET_PRICE_FORMULA] [int] NULL
		,[NET_PRICE_TYPE] [int] NULL
		,[NET_PRICE_TYPE_FORMULA] [int] NULL
		,[ATTACHED_DATE] [datetime] NULL
		,[Price] [numeric](22, 6) NULL
		,[PriceChange] [numeric](22, 6) NULL
		,[TotalDeductions] [numeric](22, 6) NULL
		,[NetPrice] [numeric](22, 6) NULL
		,[NetMap] [numeric](22, 6) NULL
		,[PriceProtectionAmountPerUnit] [numeric](22, 6) NULL
		,[PriceProtectionPercentage] [numeric](22, 6) NULL
		,[TotalPriceProtectionDeduction] [numeric](22, 6) NULL
		,DEDUCTION_PER_UNIT NUMERIC(22,6) NULL
		,[RS_MODEL_SID] [int] NOT NULL
		)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'ITEM_PRICING_QUALIFIER_SID'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD ITEM_PRICING_QUALIFIER_SID INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NEP'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NEP NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NEP_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NEP_FORMULA VARCHAR(100)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD BASE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_MANUAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD BASE_PRICE_MANUAL NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD BASE_PRICE_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'BASE_PRICE_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD BASE_PRICE_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_BASE_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_BASE_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_BASE_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_BASE_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'SUBSEQUENT_PERIOD_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD SUBSEQUENT_PERIOD_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_SUBSEQUENT_PERIOD_PRICE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_SUBSEQUENT_PERIOD_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_SUBSEQUENT_PERIOD_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD PRICE_TOLERANCE_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD PRICE_TOLERANCE_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD PRICE_TOLERANCE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'PRICE_TOLERANCE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD PRICE_TOLERANCE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'MAX_INCREMENTAL_CHANGE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD MAX_INCREMENTAL_CHANGE NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'RESET_ELIGIBLE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD RESET_ELIGIBLE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'RESET_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD RESET_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'RESET_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD RESET_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'RESET_INTERVAL'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD RESET_INTERVAL INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'RESET_FREQUENCY'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD RESET_FREQUENCY INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_RESET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_RESET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_RESET_PRICE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_RESET_PRICE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_PRICE_TYPE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_PRICE_TYPE INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NET_PRICE_TYPE_FORMULA'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NET_PRICE_TYPE_FORMULA INT
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'ATTACHED_DATE'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD ATTACHED_DATE DATETIME
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'Price'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD Price NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'PriceChange'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD PriceChange NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'TotalDeductions'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD TotalDeductions NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NetPrice'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NetPrice NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'NetMap'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD NetMap NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'PriceProtectionAmountPerUnit'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD PriceProtectionAmountPerUnit NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'PriceProtectionPercentage'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD PriceProtectionPercentage NUMERIC(22, 6)
END
GO

IF NOT EXISTS (
		SELECT 1
		FROM information_schema.columns
		WHERE table_name = 'ST_NM_PPA_PROJECTION'
			AND column_name = 'TotalPriceProtectionDeduction'
			AND table_schema = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD TotalPriceProtectionDeduction NUMERIC(22, 6)
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'DEDUCTION_PER_UNIT'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD DEDUCTION_PER_UNIT NUMERIC(22,6)
END
GO
IF NOT EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD RS_MODEL_SID INT
END
GO

IF EXISTS (SELECT 1 FROM ST_NM_PPA_PROJECTION WHERE RS_MODEL_SID IS NULL)
BEGIN
DECLARE @RS_MODEL_SID INT
SET @RS_MODEL_SID =(SELECT TOP 1 RS_MODEL_SID FROM RS_CONTRACT)
UPDATE ST_NM_PPA_PROJECTION SET RS_MODEL_SID=@RS_MODEL_SID WHERE RS_MODEL_SID IS NULL
END
GO

IF EXISTS (
		SELECT 1
		FROM INFORMATION_SCHEMA.COLUMNS
		WHERE TABLE_NAME = 'ST_NM_PPA_PROJECTION'
			AND COLUMN_NAME = 'RS_MODEL_SID'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ALTER COLUMN RS_MODEL_SID INT NOT NULL
END
GO

------------------ PRIMARY KEY -----------------------------------------

IF EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_ST_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_PERIOD_SID_USER_ID_SESSION_ID'
			AND TABLE_NAME = 'ST_NM_PPA_PROJECTION'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION DROP CONSTRAINT PK_ST_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_PERIOD_SID_USER_ID_SESSION_ID 
END
GO

IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_ST_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID_USER_ID_SESSION_ID'
			AND TABLE_NAME = 'ST_NM_PPA_PROJECTION'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD CONSTRAINT PK_ST_NM_PPA_PROJECTION_PROJECTION_DETAILS_SID_RS_MODEL_SID_PERIOD_SID_USER_ID_SESSION_ID PRIMARY KEY (PROJECTION_DETAILS_SID,RS_MODEL_SID,PERIOD_SID,USER_ID,SESSION_ID)
END
GO

--Default Constraints
IF NOT EXISTS (
		SELECT 1
		FROM SYS.DEFAULT_CONSTRAINTS
		WHERE Object_name(PARENT_OBJECT_ID) = 'ST_NM_PPA_PROJECTION'
			AND Schema_name(SCHEMA_ID) = 'dbo'
			AND NAME = 'DF_ST_NM_PPA_PROJECTION_LAST_MODIFIED_DATE'
		)
BEGIN
	ALTER TABLE ST_NM_PPA_PROJECTION ADD CONSTRAINT DF_ST_NM_PPA_PROJECTION_LAST_MODIFIED_DATE DEFAULT(Getdate())
	FOR LAST_MODIFIED_DATE
END
GO

----------------------------------NM_ACTUAL_PPA----------------------------------------------
IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_BASE_PRICE_TYPE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_BASE_PRICE_TYPE 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_BASE_PRICE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_BASE_PRICE
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_PRICE_TYPE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_PRICE_TYPE
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_RESET_PRICE_TYPE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_RESET_PRICE_TYPE 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_SUBSEQUENT_PERIOD_PRICE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_NET_SUBSEQUENT_PERIOD_PRICE 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_PRICE_TOLERANCE_FREQUENCY'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_PRICE_TOLERANCE_FREQUENCY 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_PRICE_TOLERANCE_INTERVAL'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_PRICE_TOLERANCE_INTERVAL 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_PRICE_TOLERANCE_TYPE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_PRICE_TOLERANCE_TYPE 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_RESET_ELIGIBLE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_RESET_ELIGIBLE 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_RESET_FREQUENCY'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_RESET_FREQUENCY 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_HELPER_TABLE_RESET_INTERVAL'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_HELPER_TABLE_RESET_INTERVAL 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_BASE_PRICE_PRICE_TYPE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_BASE_PRICE_PRICE_TYPE 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_ITEM_PRICING_QUALIFIER_SID'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_ITEM_PRICING_QUALIFIER_SID 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_RESET_PRICE_TYPE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_RESET_PRICE_TYPE 
END
	GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_SUBSEQUENT_PERIOD_PRICE_TYPE'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_ITEM_PRICING_QUALIFIER_SUBSEQUENT_PERIOD_PRICE_TYPE 
END
	GO


IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_BASE_PRICE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA

	DROP CONSTRAINT FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_BASE_PRICE_FORMULA
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_SUBSEQUENT_PERIOD_PRICE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA

	DROP CONSTRAINT FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_SUBSEQUENT_PERIOD_PRICE_FORMULA
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_PRICE_TYPE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA

	DROP CONSTRAINT FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_PRICE_TYPE_FORMULA
END
GO

IF EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_RESET_PRICE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA

	DROP CONSTRAINT FK_NM_ACTUAL_PPA_FORECASTING_FORMULA_NET_RESET_PRICE_FORMULA
END
GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_BASE_PRICE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA DROP CONSTRAINT FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_BASE_PRICE_FORMULA 
END
GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_SUBSEQUENT_PERIOD_PRICE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA drop CONSTRAINT FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_SUBSEQUENT_PERIOD_PRICE_FORMULA 
END
GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_PRICE_TYPE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA drop CONSTRAINT FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_PRICE_TYPE_FORMULA 
END
GO

IF  EXISTS (
		SELECT 1
		FROM SYS.FOREIGN_KEYS
		WHERE OBJECT_NAME(PARENT_OBJECT_ID) = 'NM_ACTUAL_PPA'
			AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
			AND NAME = 'FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_RESET_PRICE_FORMULA'
			AND TYPE = 'F'
		)
BEGIN
	ALTER TABLE NM_ACTUAL_PPA drop CONSTRAINT FK_NM_ACTUAL_PPA_NET_SALES_FORMULA_MASTER_NET_RESET_PRICE_FORMULA 
END
GO



IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'ACTUAL_PROJECTION_SALES')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN ACTUAL_PROJECTION_SALES 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'ACTUAL_PROJECTION_RATE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN ACTUAL_PROJECTION_RATE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'ACTUAL_PROJ_DISCOUNT_DOLLAR')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN ACTUAL_PROJ_DISCOUNT_DOLLAR 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'ACTUAL_PROJ_DISCOUNT_UNITS')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN ACTUAL_PROJ_DISCOUNT_UNITS 

GO



IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'ITEM_PRICING_QUALIFIER_SID')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN ITEM_PRICING_QUALIFIER_SID 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NEP')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NEP 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NEP_FORMULA')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NEP_FORMULA 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'BASE_PRICE_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN BASE_PRICE_TYPE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'BASE_PRICE_MANUAL')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN BASE_PRICE_MANUAL 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'BASE_PRICE_DATE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN BASE_PRICE_DATE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'BASE_PRICE_PRICE_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN BASE_PRICE_PRICE_TYPE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_BASE_PRICE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_BASE_PRICE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_BASE_PRICE_FORMULA')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_BASE_PRICE_FORMULA 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'SUBSEQUENT_PERIOD_PRICE_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN SUBSEQUENT_PERIOD_PRICE_TYPE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_SUBSEQUENT_PERIOD_PRICE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_SUBSEQUENT_PERIOD_PRICE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_SUBSEQUENT_PERIOD_PRICE_FORMULA')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_SUBSEQUENT_PERIOD_PRICE_FORMULA 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICE_TOLERANCE_INTERVAL')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICE_TOLERANCE_INTERVAL 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICE_TOLERANCE_FREQUENCY')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICE_TOLERANCE_FREQUENCY 

GO




IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICE_TOLERANCE_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICE_TOLERANCE_TYPE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICE_TOLERANCE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICE_TOLERANCE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'MAX_INCREMENTAL_CHANGE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN MAX_INCREMENTAL_CHANGE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'RESET_ELIGIBLE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN RESET_ELIGIBLE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'RESET_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN RESET_TYPE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'RESET_DATE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN RESET_DATE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'RESET_INTERVAL')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN RESET_INTERVAL 

GO



IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'RESET_INTERVAL')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN RESET_INTERVAL 

GO



IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'RESET_FREQUENCY')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN RESET_FREQUENCY 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'RESET_PRICE_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN RESET_PRICE_TYPE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_RESET_PRICE_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_RESET_PRICE_TYPE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_RESET_PRICE_FORMULA')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_RESET_PRICE_FORMULA 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_PRICE_TYPE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_PRICE_TYPE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NET_PRICE_TYPE_FORMULA')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NET_PRICE_TYPE_FORMULA 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'ATTACHED_DATE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN ATTACHED_DATE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICECHANGE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICECHANGE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'TOTALDEDUCTIONS')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN TOTALDEDUCTIONS 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NETPRICE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NETPRICE 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'NETMAP')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN NETMAP 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICEPROTECTIONAMOUNTPERUNIT')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICEPROTECTIONAMOUNTPERUNIT 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'PRICEPROTECTIONPERCENTAGE')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN PRICEPROTECTIONPERCENTAGE 

GO


IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'TOTALPRICEPROTECTIONDEDUCTION')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN TOTALPRICEPROTECTIONDEDUCTION 

GO

IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'NM_ACTUAL_PPA'
                  AND COLUMN_NAME = 'DEDUCTION_PER_UNIT')
  ALTER TABLE NM_ACTUAL_PPA  DROP COLUMN DEDUCTION_PER_UNIT 

GO









