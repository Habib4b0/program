IF EXISTS (SELECT 'X' 
           FROM   INFORMATION_SCHEMA.ROUTINES 
           WHERE  ROUTINE_NAME = 'PRC_REPORT_DASHBOARD_GENERATE' 
                  AND ROUTINE_SCHEMA = 'DBO') 
  BEGIN 
      DROP PROCEDURE [dbo].[PRC_REPORT_DASHBOARD_GENERATE] 
  END 

GO 

CREATE PROCEDURE [dbo].[PRC_REPORT_DASHBOARD_GENERATE] (

@FREQUENCY VARCHAR(50),
@ANNUAL_TOTAL CHAR(3),
@COMPARISION_BASIS VARCHAR(20),
@CCP VARCHAR(8000),
@SALES_INCLUSION BIT,
@DEDUCTION_INCLUSION BIT,
@UOM_CODE VARCHAR(10),
@CURRENCY_DISPLAY VARCHAR(100),
@START_PERIOD_SID INT,
@END_PERIOD_SID INT,
@CUSTOM_VIEW_MASTER_SID INT,
@CUSTOM_LEVEL_NO INT,
@SESSION_ID VARCHAR(50),
@DISCOUNT_ID varchar(8000),
@USER_ID INT,
@HIERARCHY_NO varchar(8000),
@VARAIBLE_TYPE varchar(100)
 )
 AS
 SET NOCOUNT ON
 BEGIN
 BEGIN TRY

DECLARE @CUSTOM_TABLE_SALES VARCHAR(200) = Concat('ST_CUSTOM_SALES_REPORT_', @USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
@CUSTOM_TABLE_DISCOUNT VARCHAR(200) = CONCAT ('ST_CUSTOM_DISCOUNT_REPORT_',@USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
@CCP_HIERARCHY VARCHAR(200) = CONCAT ('ST_CCP_HIERARCHY_',@USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
@REPORTING_TABLE VARCHAR(200) = CONCAT ('ST_REPORTING_RESULT_',@USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
@PRIOR_TABLE VARCHAR(200) = CONCAT ('ST_APPROVED_REPORT_',@USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
@CUSTOM_CCP_SALES VARCHAR(200)=  Concat('ST_CUSTOM_CCP_SALES_', @USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
@CUSTOM_VARIABLE_HIERARCHY VARCHAR(200)=Concat('ST_CUSTOM_VARIABLE_HIERARCHY_', @USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), Getdate(), 2), '.', '')),
@COMPARISION_BREAK_DOWN VARCHAR(200)=  Concat('ST_COMPARISION_REPORT_', @USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), getdate(), 2), '.', '')),
@VARIABLE_BREAK_DOWN VARCHAR(200)=Concat('ST_VARIABLE_BR_REPORT_', @USER_ID, '_', @SESSION_ID, '_', Replace(CONVERT(VARCHAR(50), getdate(), 2), '.', ''))

DECLARE @CONVERTED_CURRENCY_DISPLAY NUMERIC(22,6) 
SELECT @CONVERTED_CURRENCY_DISPLAY=SUBSTRING(DESCRIPTION, CHARINDEX('~',DESCRIPTION,1)+1,1+LEN(DESCRIPTION)-CHARINDEX('~',DESCRIPTION,1)) FROM HELPER_TABLE WHERE HELPER_TABLE_SID=@CURRENCY_DISPLAY
IF OBJECT_ID('TEMPDB..#CCP_DETAILS_TEMP') IS NOT NULL -------IT CONTAIN CCP DETAIL'S 
DROP TABLE #CCP_DETAILS_TEMP

CREATE TABLE #CCP_DETAILS_TEMP (
CCP_DETAILS_SID INT,
COMPANY_MASTER_SID INT,
ITEM_MASTER_SID INT,
CONTRACT_MASTER_SID INT,
HIERARCHY_NO VARCHAR(8000),
RS_CONTRACT_SID INT,
level_no int,
CUSTOM_VIEW_DETAILS_SID int,
RELATIONSHIP_LEVEL_VALUES int,
HIERARCHY_INDICATOR char(10),
VARIABLE_COUNT int,
PRIMARY KEY(HIERARCHY_NO,CCP_DETAILS_SID,ITEM_MASTER_SID,RS_CONTRACT_SID)
)

DECLARE @SQL NVARCHAR(MAX)


SET @SQL = CONCAT (
'
INSERT INTO #CCP_DETAILS_TEMP (
CCP_DETAILS_SID
,COMPANY_MASTER_SID
,ITEM_MASTER_SID
,CONTRACT_MASTER_SID,
HIERARCHY_NO
-- ROW_ID 
,RS_CONTRACT_SID,
LEVEL_NO,
CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,
VARIABLE_COUNT
)
SELECT B.CCP_DETAILS_SID,
COMPANY_MASTER_SID,
ITEM_MASTER_SID,
CONTRACT_MASTER_SID,
A.HIERARCHY_NO,
RS_CONTRACT_SID,
C.LEVEL_NO,
c.CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,VARIABLE_COUNT
FROM ',@CUSTOM_VARIABLE_HIERARCHY,'  A
INNER JOIN CUST_VIEW_DETAILS C
ON C.CUSTOM_VIEW_DETAILS_SID = A.CUSTOM_VIEW_DETAILS_SID
AND C.LEVEL_NO = A.LEVEL_NO
INNER JOIN ',@CUSTOM_CCP_SALES,' B
ON REPLACE(COALESCE(STUFF(A.HIERARCHY_NO, PATINDEX(''%[A-Z]%'', A.HIERARCHY_NO), 1, ''''), A.HIERARCHY_NO), ''..'', ''.'') = B.HIERARCHY_NO
INNER JOIN CCP_DETAILS CD
ON CD.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@CCP, '','') U
WHERE CD.CCP_DETAILS_SID =U.TOKEN
)
OR @CCP IS NULL
)
WHERE  C.CUSTom_VIEW_MASTER_SID= @CUSTOM_VIEW_MASTER_SID  
                        AND C.LEVEL_NO <= @CUSTOM_LEVEL_NO+1
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@DISCOUNT_ID, '','') U
WHERE (b.RS_CONTRACT_SID =U.TOKEN OR b.RS_CONTRACT_SID=0)
)
OR @DISCOUNT_ID IS NULL
)
---AND A.HIERARCHY_NO=''',@HIERARCHY_NO,'''
 '
)
if object_id('tempdb..#CUSTOM_CCP_SALES') is not null
drop table #CUSTOM_CCP_SALES
create  table #CUSTOM_CCP_SALES(
HIERARCHY_NO	varchar(8000)
,CCP_DETAILS_SID	int	
,LEVEL_NO	int	
,CUST_VIEW_MASTER_SID	int	
,RELATIONSHIP_LEVEL_VALES	int	
,ROWID	int	
,RS_CONTRACT_SID	int
,parent_HIERARCHY_NO	varchar(8000))	

declare @tra bit=0
set @sql =concat('if exists (select 1 from ',@CUSTOM_CCP_SALES,' where HIERARCHY_NO=''',@HIERARCHY_NO,''')
begin
set @tra=1
end
else
begin
set @tra=0
end
')
EXEC Sp_executesql @SQL,N'@tra bit output',@tra=@tra output

set @sql =concat('
insert into #CUSTOM_CCP_SALES
select * from (select a.*,concat(b.RELATIONSHIP_LEVEL_VALES,''.'',a.RELATIONSHIP_LEVEL_VALES) vales 
from ',@CUSTOM_CCP_SALES,' a join ',@CUSTOM_CCP_SALES,' b on a.LEVEL_NO = b.LEVEL_NO+1
and a.CCP_DETAILS_SID = b.CCP_DETAILS_SID
and a.RS_CONTRACT_SID = b.RS_CONTRACT_SID
AND a.HIERARCHY_NO like  b.HIERARCHY_NO+''%'' 
where ''',@HIERARCHY_NO,''' like ''%''+concat(b.RELATIONSHIP_LEVEL_VALES,''.'',a.RELATIONSHIP_LEVEL_VALES)+''%'')a '
,case when @tra=1 then concat('where a.HIERARCHY_NO like ''',@HIERARCHY_NO,'''+''%''') end)
EXEC Sp_executesql @SQL
SET @SQL = CONCAT (
'if exists (select 1 from ',@CUSTOM_CCP_SALES,' where LEVEL_NO = @CUSTOM_LEVEL_NO)
begin
INSERT INTO #CCP_DETAILS_TEMP (
CCP_DETAILS_SID
,COMPANY_MASTER_SID
,ITEM_MASTER_SID
,CONTRACT_MASTER_SID,
HIERARCHY_NO
,RS_CONTRACT_SID,
LEVEL_NO,
CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,
VARIABLE_COUNT
)
SELECT distinct B.CCP_DETAILS_SID,
COMPANY_MASTER_SID,
ITEM_MASTER_SID,
CONTRACT_MASTER_SID,
A.HIERARCHY_NO,
RS_CONTRACT_SID,
C.LEVEL_NO,
c.CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,VARIABLE_COUNT
FROM ',@CUSTOM_VARIABLE_HIERARCHY,'  A
INNER JOIN CUST_VIEW_DETAILS C
ON C.CUSTOM_VIEW_DETAILS_SID = A.CUSTOM_VIEW_DETAILS_SID
AND C.LEVEL_NO = A.LEVEL_NO
INNER JOIN ',@CUSTOM_CCP_SALES,' B
ON 
B.LEVEL_NO=A.LEVEL_NO AND B.RELATIONSHIP_LEVEL_VALES=A.RELATIONSHIP_LEVEL_VALUES AND C.CUSTOM_VIEW_MASTER_SID=B.CUST_VIEW_MASTER_SID 
 
INNER JOIN CCP_DETAILS CD
ON CD.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@CCP, '','') U
WHERE CD.CCP_DETAILS_SID =U.TOKEN
)
OR @CCP IS NULL
)
WHERE  C.CUSTom_VIEW_MASTER_SID= @CUSTOM_VIEW_MASTER_SID  
                        AND C.LEVEL_NO = @CUSTOM_LEVEL_NO
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@DISCOUNT_ID, '','') U
WHERE (b.RS_CONTRACT_SID =U.TOKEN OR b.RS_CONTRACT_SID=0)
)
OR @DISCOUNT_ID IS NULL
)
AND A.HIERARCHY_NO like ''',iif(right(@HIERARCHY_NO,1)='.',substring(@HIERARCHY_NO,1,len(@HIERARCHY_NO)-1),@HIERARCHY_NO),'''+''%''
'
,case when 1=(select top 1 1 from #CUSTOM_CCP_SALES) then 'and exists (select 1 from #CUSTOM_CCP_SALES ccds where ccds.CCP_DETAILS_SID=b.CCP_DETAILS_SID and ccds.RS_CONTRACT_SID=b.RS_CONTRACT_SID )
 ' end ,'end '
)
--and REPLACE(COALESCE(STUFF(A.HIERARCHY_NO, PATINDEX(''%[A-Z]%'', A.HIERARCHY_NO), 1, ''''), A.HIERARCHY_NO), ''..'', ''.'') <> B.HIERARCHY_NO
if not exists (select 1 from #CUSTOM_CCP_SALES where @CUSTOM_LEVEL_NO-1=LEVEL_NO
)
begin
EXEC Sp_executesql @SQL,
N'@CCP VARCHAR(8000),@DISCOUNT_ID VARCHAR(8000),@HIERARCHY_NO VARCHAR(8000),@CUSTOM_VIEW_MASTER_SID  int, @CUSTOM_LEVEL_NO int',
@CCP = @CCP,
@DISCOUNT_ID=@DISCOUNT_ID,
@HIERARCHY_NO=@HIERARCHY_NO,
@CUSTOM_VIEW_MASTER_SID=@CUSTOM_VIEW_MASTER_SID,
@CUSTOM_LEVEL_NO= @CUSTOM_LEVEL_NO
end 
else
begin
SET @SQL = CONCAT (
'if exists (select 1 from ',@CUSTOM_CCP_SALES,' where LEVEL_NO = @CUSTOM_LEVEL_NO)
begin
INSERT INTO #CCP_DETAILS_TEMP (
CCP_DETAILS_SID
,COMPANY_MASTER_SID
,ITEM_MASTER_SID
,CONTRACT_MASTER_SID,
HIERARCHY_NO
,RS_CONTRACT_SID,
LEVEL_NO,
CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,
VARIABLE_COUNT
)
SELECT distinct B.CCP_DETAILS_SID,
COMPANY_MASTER_SID,
ITEM_MASTER_SID,
CONTRACT_MASTER_SID,
A.HIERARCHY_NO,
RS_CONTRACT_SID,
C.LEVEL_NO,
c.CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,VARIABLE_COUNT
FROM ',@CUSTOM_VARIABLE_HIERARCHY,'  A
INNER JOIN CUST_VIEW_DETAILS C
ON C.CUSTOM_VIEW_DETAILS_SID = A.CUSTOM_VIEW_DETAILS_SID
AND C.LEVEL_NO = A.LEVEL_NO
INNER JOIN #CUSTOM_CCP_SALES B
ON 
B.LEVEL_NO=A.LEVEL_NO AND B.RELATIONSHIP_LEVEL_VALES=A.RELATIONSHIP_LEVEL_VALUES AND C.CUSTOM_VIEW_MASTER_SID=B.CUST_VIEW_MASTER_SID 
 
INNER JOIN CCP_DETAILS CD
ON CD.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@CCP, '','') U
WHERE CD.CCP_DETAILS_SID =U.TOKEN
)
OR @CCP IS NULL
)
WHERE  C.CUSTom_VIEW_MASTER_SID= @CUSTOM_VIEW_MASTER_SID  
                        AND C.LEVEL_NO = @CUSTOM_LEVEL_NO
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@DISCOUNT_ID, '','') U
WHERE (b.RS_CONTRACT_SID =U.TOKEN OR b.RS_CONTRACT_SID=0)
)
OR @DISCOUNT_ID IS NULL
)
AND A.HIERARCHY_NO like ''',iif(right(@HIERARCHY_NO,1)='.',substring(@HIERARCHY_NO,1,len(@HIERARCHY_NO)-1),@HIERARCHY_NO),'''+''%''
 end '
)
EXEC Sp_executesql @SQL,
N'@CCP VARCHAR(8000),@DISCOUNT_ID VARCHAR(8000),@HIERARCHY_NO VARCHAR(8000),@CUSTOM_VIEW_MASTER_SID  int, @CUSTOM_LEVEL_NO int',
@CCP = @CCP,
@DISCOUNT_ID=@DISCOUNT_ID,
@HIERARCHY_NO=@HIERARCHY_NO,
@CUSTOM_VIEW_MASTER_SID=@CUSTOM_VIEW_MASTER_SID,
@CUSTOM_LEVEL_NO= @CUSTOM_LEVEL_NO
end 


SET @SQL = CONCAT (
'if not exists (select 1 from ',@CUSTOM_CCP_SALES,' where LEVEL_NO = @CUSTOM_LEVEL_NO) and not exists (select 1 from #CUSTOM_CCP_SALES where LEVEL_NO = @CUSTOM_LEVEL_NO-1
)
begin
INSERT INTO #CCP_DETAILS_TEMP (
CCP_DETAILS_SID
,COMPANY_MASTER_SID
,ITEM_MASTER_SID
,CONTRACT_MASTER_SID,
HIERARCHY_NO
,RS_CONTRACT_SID,
LEVEL_NO,
CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,
VARIABLE_COUNT
)
SELECT distinct B.CCP_DETAILS_SID,
COMPANY_MASTER_SID,
ITEM_MASTER_SID,
CONTRACT_MASTER_SID,
@HIERARCHY_NO,
RS_CONTRACT_SID,
@CUSTOM_LEVEL_NO,
c.CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,VARIABLE_COUNT
FROM ',@CUSTOM_VARIABLE_HIERARCHY,'  A
INNER JOIN CUST_VIEW_DETAILS C
ON C.CUSTOM_VIEW_DETAILS_SID = A.CUSTOM_VIEW_DETAILS_SID
AND C.LEVEL_NO = A.LEVEL_NO
INNER JOIN ',@CUSTOM_CCP_SALES,' B
ON 
B.LEVEL_NO=A.LEVEL_NO AND B.RELATIONSHIP_LEVEL_VALES=A.RELATIONSHIP_LEVEL_VALUES AND C.CUSTOM_VIEW_MASTER_SID=B.CUST_VIEW_MASTER_SID 
 
INNER JOIN CCP_DETAILS CD
ON CD.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@CCP, '','') U
WHERE CD.CCP_DETAILS_SID =U.TOKEN
)
OR @CCP IS NULL
)
WHERE  C.CUSTom_VIEW_MASTER_SID= @CUSTOM_VIEW_MASTER_SID  
                        AND C.LEVEL_NO = @CUSTOM_LEVEL_NO-1
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@DISCOUNT_ID, '','') U
WHERE (b.RS_CONTRACT_SID =U.TOKEN OR b.RS_CONTRACT_SID=0)
)
OR @DISCOUNT_ID IS NULL
)
AND ''',iif(right(@HIERARCHY_NO,1)='.',substring(@HIERARCHY_NO,1,len(@HIERARCHY_NO)-1),@HIERARCHY_NO),'''like A.HIERARCHY_NO +''%''
'
,case when 1=(select top 1 1 from #CUSTOM_CCP_SALES) then 'and exists (select 1 from #CUSTOM_CCP_SALES ccds where ccds.CCP_DETAILS_SID=b.CCP_DETAILS_SID and ccds.RS_CONTRACT_SID=b.RS_CONTRACT_SID )
 ' end ,'end ')

--select @SQL

EXEC Sp_executesql @SQL,
N'@CCP VARCHAR(8000),@DISCOUNT_ID VARCHAR(8000),@HIERARCHY_NO VARCHAR(8000),@CUSTOM_VIEW_MASTER_SID  int, @CUSTOM_LEVEL_NO int',
@CCP = @CCP,
@DISCOUNT_ID=@DISCOUNT_ID,
@HIERARCHY_NO=@HIERARCHY_NO,
@CUSTOM_VIEW_MASTER_SID=@CUSTOM_VIEW_MASTER_SID,
@CUSTOM_LEVEL_NO= @CUSTOM_LEVEL_NO

 SET @SQL = CONCAT (
'if not exists (select 1 from ',@CUSTOM_CCP_SALES,' where LEVEL_NO = @CUSTOM_LEVEL_NO) and exists (select 1 from #CUSTOM_CCP_SALES  where LEVEL_NO = @CUSTOM_LEVEL_NO-1)
begin
INSERT INTO #CCP_DETAILS_TEMP (
CCP_DETAILS_SID
,COMPANY_MASTER_SID
,ITEM_MASTER_SID
,CONTRACT_MASTER_SID,
HIERARCHY_NO
,RS_CONTRACT_SID,
LEVEL_NO,
CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,
VARIABLE_COUNT
)
SELECT distinct B.CCP_DETAILS_SID,
COMPANY_MASTER_SID,
ITEM_MASTER_SID,
CONTRACT_MASTER_SID,
@HIERARCHY_NO,
RS_CONTRACT_SID,
@CUSTOM_LEVEL_NO,
c.CUSTOM_VIEW_DETAILS_SID,
RELATIONSHIP_LEVEL_VALUES,
HIERARCHY_INDICATOR,VARIABLE_COUNT
FROM ',@CUSTOM_VARIABLE_HIERARCHY,'  A
INNER JOIN CUST_VIEW_DETAILS C
ON C.CUSTOM_VIEW_DETAILS_SID = A.CUSTOM_VIEW_DETAILS_SID
AND C.LEVEL_NO = A.LEVEL_NO
INNER JOIN #CUSTOM_CCP_SALES B
ON 
B.LEVEL_NO=A.LEVEL_NO AND 
B.RELATIONSHIP_LEVEL_VALES=A.RELATIONSHIP_LEVEL_VALUES AND C.CUSTOM_VIEW_MASTER_SID=B.CUST_VIEW_MASTER_SID 
 
INNER JOIN CCP_DETAILS CD
ON CD.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@CCP, '','') U
WHERE CD.CCP_DETAILS_SID =U.TOKEN
)
OR @CCP IS NULL
)
WHERE  C.CUSTom_VIEW_MASTER_SID= @CUSTOM_VIEW_MASTER_SID  
                        AND C.LEVEL_NO = @CUSTOM_LEVEL_NO-1
AND (
EXISTS (
SELECT 1
FROM UDF_SPLITSTRING(@DISCOUNT_ID, '','') U
WHERE (b.RS_CONTRACT_SID =U.TOKEN OR b.RS_CONTRACT_SID=0)
)
OR @DISCOUNT_ID IS NULL
)
AND ''',iif(right(@HIERARCHY_NO,1)='.',substring(@HIERARCHY_NO,1,len(@HIERARCHY_NO)-1),@HIERARCHY_NO),'''like A.HIERARCHY_NO +''%''
 end '
)

--select @SQL

EXEC Sp_executesql @SQL,
N'@CCP VARCHAR(8000),@DISCOUNT_ID VARCHAR(8000),@HIERARCHY_NO VARCHAR(8000),@CUSTOM_VIEW_MASTER_SID  int, @CUSTOM_LEVEL_NO int',
@CCP = @CCP,
@DISCOUNT_ID=@DISCOUNT_ID,
@HIERARCHY_NO=@HIERARCHY_NO,
@CUSTOM_VIEW_MASTER_SID=@CUSTOM_VIEW_MASTER_SID,
@CUSTOM_LEVEL_NO= @CUSTOM_LEVEL_NO




 
IF Object_id('TEMPDB..#ITEM_UOM_DETAILS', 'U') IS NOT NULL
DROP TABLE #ITEM_UOM_DETAILS;

CREATE TABLE #ITEM_UOM_DETAILS (
CCP_DETAILS_SID INT NOT NULL,
UOM_VALUE NUMERIC(22, 6)
)

SET @sql = CONCAT (
'INSERT INTO  #ITEM_UOM_DETAILS
         SELECT DISTINCT A.CCP_DETAILS_SID,UOM_VALUE 
         FROM ',
@CCP_HIERARCHY,
' A JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID=A.CCP_DETAILS_SID 
         JOIN  ITEM_UOM_DETAILS B ON CD.ITEM_MASTER_SID=B.ITEM_MASTER_SID
         WHERE  UOM_CODE=@UOM_CODE 
         '
)

EXEC Sp_executesql @sql,
N'@UOM_CODE VARCHAR(50)',
@UOM_CODE = @UOM_CODE

IF OBJECT_ID('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
DROP TABLE #PERIOD;

CREATE TABLE #PERIOD
(PERIOD_SID SMALLINT,
PERIOD_DATE DATETIME,
MONTH SMALLINT,
QUARTER SMALLINT,
YEAR SMALLINT,
SEMI_ANNUAL SMALLINT,
PERIOD INT,
PRIMARY KEY (PERIOD_SID,PERIOD,YEAR))


INSERT INTO #PERIOD
(PERIOD_SID,
PERIOD_DATE,
MONTH,
QUARTER,
SEMI_ANNUAL,
YEAR,PERIOD)

SELECT PERIOD_SID,
PERIOD_DATE,
MONTH,
QUARTER,
SEMI_ANNUAL,
YEAR,
CASE 
WHEN LEFT(@FREQUENCY, 1) = 'M'
THEN MONTH
WHEN LEFT(@FREQUENCY, 1) = 'Q'
THEN QUARTER
WHEN LEFT(@FREQUENCY, 1) = 'S'
THEN SEMI_ANNUAL
ELSE 1
END AS PERIOD
FROM PERIOD
WHERE PERIOD_SID BETWEEN @START_PERIOD_SID
AND @END_PERIOD_SID

DECLARE @MUL INT = CASE 
WHEN LEFT(@FREQUENCY, 1) = 'M'
THEN 12
WHEN LEFT(@FREQUENCY, 1) = 'Q'
THEN 4
WHEN LEFT(@FREQUENCY, 1) = 'S'
THEN 2
ELSE 1
END;

--This scenario was done for Rows-Expandable in Custom_View.. 
DECLARE @CHANGE_VARIABLE_TYPE bit=0
;
WITH cte
AS (SELECT
  CUSTOM_VIEW_MASTER_SID,
  MAX(LEVEL_NO) max_level,
  var_level = MAX(CASE
    WHEN HIERARCHY_INDICATOR = 'V' THEN LEVEL_NO
  END)
FROM CUST_VIEW_DETAILS
WHERE CUSTOM_VIEW_MASTER_SID = @CUSTOM_VIEW_MASTER_SID
GROUP BY CUSTOM_VIEW_MASTER_SID
HAVING MAX(CASE
  WHEN HIERARCHY_INDICATOR = 'V' THEN LEVEL_NO
END) IS NOT NULL)
SELECT TOP 1
  @CHANGE_VARIABLE_TYPE = iif(@VARAIBLE_TYPE = 'Expandable', 1, 0)
FROM cte
WHERE @CUSTOM_LEVEL_NO BETWEEN var_level AND max_level
SELECT
  @VARAIBLE_TYPE = iif(@CHANGE_VARIABLE_TYPE = 1, 'VARIABLE', @VARAIBLE_TYPE)

IF OBJECT_ID('TEMPDB.DBO.#DATA_TABLE', 'U') IS NOT NULL
DROP TABLE #DATA_TABLE;

CREATE TABLE #DATA_TABLE (
HIERARCHY_NO VARCHAR(8000),
DESCRIPTION VARCHAR(100),
LEVEL_NO INT,
VARIABLE_COUNT INT,
PERIOD SMALLINT,
YEAR SMALLINT,
--HIERARCHY_NO1 varchar(8000),
HIERARCHY_INDICATOR varchar(100)
)

INSERT INTO #DATA_TABLE
(HIERARCHY_NO,
DESCRIPTION,
LEVEL_NO,
VARIABLE_COUNT,
HIERARCHY_INDICATOR,
PERIOD,
YEAR)
SELECT DISTINCT HIERARCHY_NO,
CASE 
WHEN HIERARCHY_INDICATOR = 'V' or @CHANGE_VARIABLE_TYPE=1
THEN DESCRIPTION
ELSE NULL
END DESCRIPTION,
LEVEL_NO,
VARIABLE_COUNT,
HIERARCHY_INDICATOR,
PERIOD,
YEAR
FROM (
SELECT HIERARCHY_NO,
---CUSTOM_VIEW_DETAILS_SID,
LEVEL_NO,
HIERARCHY_INDICATOR,
RELATIONSHIP_LEVEL_VALUES,
VARIABLE_COUNT
FROM #CCP_DETAILS_TEMP
WHERE LEVEL_NO BETWEEN @CUSTOM_LEVEL_NO-1 AND @CUSTOM_LEVEL_NO+1
GROUP BY HIERARCHY_NO,
--CUSTOM_VIEW_DETAILS_SID,
LEVEL_NO,
HIERARCHY_INDICATOR,
RELATIONSHIP_LEVEL_VALUES,
VARIABLE_COUNT
) A
LEFT JOIN HELPER_TABLE B
ON B.HELPER_TABLE_SID = A.RELATIONSHIP_LEVEL_VALUES
CROSS JOIN #PERIOD
WHERE PERIOD_SID BETWEEN @START_PERIOD_SID
AND @END_PERIOD_SID
---ORDER BY HIERARCHY_NO

--UPDATE a
--SET HIERARCHY_NO1 = PARENT_HIERARCHY_NO
--FROM #DATA_TABLE a
--INNER JOIN (
-- SELECT DISTINCT t.HIERARCHY_NO,
-- t.LEVEL_NO,
-- LEFT(m.parent_hierarchy_no, Len(m.parent_hierarchy_no) - 1) AS PARENT_HIERARCHY_NO,
-- t.rs_contract_sid
-- FROM  #CCP_DETAILS_TEMP t
-- CROSS APPLY (
-- SELECT DISTINCT CONVERT(VARCHAR(8000), ltrim(HIERARCHY_NO) + '~')  
-- FROM #CCP_DETAILS_TEMP r
-- WHERE t.CCP_DETAILS_SID = r.CCP_DETAILS_SID
-- and t.rs_contract_sid = r.rs_contract_sid 
--      --and iif(t.HIERARCHY_INDICATOR = 'V',t.RELATIONSHIP_LEVEL_VALUES,1)=iif(r.HIERARCHY_INDICATOR = 'V',r.RELATIONSHIP_LEVEL_VALUES,1)
-- AND t.LEVEL_NO > r.LEVEL_NO
-- FOR XML path('')
-- ) m(PARENT_HIERARCHY_NO)
-- ) b
-- ON a.HIERARCHY_NO = b.HIERARCHY_NO

IF Object_id('TEMPDB..#PROJECTION_MASTER') IS NOT NULL
  TRUNCATE TABLE #PROJECTION_MASTER
ELSE
  CREATE TABLE #PROJECTION_MASTER
    (
       ID                    INT IDENTITY(1, 1),
       PROJECTION_MASTER_SID INT
    )

SET @SQL=CONCAT('
INSERT INTO #PROJECTION_MASTER(PROJECTION_MASTER_SID)

SELECT 0 AS PROJECTION_MASTER_SID 
UNION 
SELECT DISTINCT PROJECTION_MASTER_SID FROM ',@PRIOR_TABLE,'')
EXEC SP_EXECUTESQL @SQL


IF OBJECT_ID('TEMPDB.DBO.#COMPARISION_REPORT_PERIOD', 'U') IS NOT NULL
DROP TABLE #COMPARISION_REPORT_PERIOD;

;WITH CTE
AS (
SELECT B.YEAR,
B.PERIOD,
PROJECTION_MASTER_SID,
PERIOD_SID + (SELECTED_VARIABLE * @MUL) AS PERIOD_SID
FROM #PERIOD B
INNER JOIN COMPARISION_REPORT C
ON C.YEAR = B.YEAR
AND B.PERIOD = C.PERIOD
)
SELECT PROJECTION_MASTER_SID,
YEAR,
PERIOD,
YEAR1,
PERIOD1
into #COMPARISION_REPORT_PERIOD
FROM CTE A
CROSS APPLY (
SELECT B.YEAR YEAR1,
B.PERIOD  PERIOD1
FROM #PERIOD B
WHERE A.PERIOD_SID = B.PERIOD_SID
) CS


IF OBJECT_ID('TEMPDB.DBO.#CURRENT_TOTAL_SALES', 'U') IS NOT NULL
DROP TABLE #CURRENT_TOTAL_SALES;

CREATE TABLE #CURRENT_TOTAL_SALES
(
CFF_MASTER_SID INT,
YEAR SMALLINT,
PERIOD SMALLINT,
TOT_ACTUAL_SALES NUMERIC(22,6),
TOT_PROJECTION_SALES  NUMERIC(22,6),TOT_EXFACTORY_SALES#ACT NUMERIC(22,6),TOT_EXFACTORY_SALES#PROJ NUMERIC(22,6))

IF OBJECT_ID('TEMPDB.DBO.#EX_VARIABLE', 'U') IS NOT NULL
DROP TABLE #EX_VARIABLE;
CREATE TABLE #EX_VARIABLE(
CFF_MASTER_SID INT,
CCP_DETAILS_SID INT,
ITEM_MASTER_SID INT,
RN INT
)
SET @SQL=CONCAT('INSERT INTO #EX_VARIABLE
SELECT 0,C.CCP_DETAILS_SID,
	ITEM_MASTER_SID,
	ROW_NUMBER() OVER (
		PARTITION BY ITEM_MASTER_SID ORDER BY C.CCP_DETAILS_SID
		) RN
FROM ',@CCP_HIERARCHY,' C
JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = C.CCP_DETAILS_SID')

EXEC SP_EXECUTESQL @SQL

SET @SQL=CONCAT('
INSERT INTO #CURRENT_TOTAL_SALES
SELECT 0,
P.YEAR,
P.PERIOD,
COALESCE(SUM(CASE 
WHEN    INDICATOR =CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END ',CASE WHEN @SALES_INCLUSION IS NOT NULL THEN '  AND (SALES_INCLUSION = @SALES_INCLUSION) ' END ,'
THEN SALES
ELSE NULL
END),0) ACTUAL_SALES,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END ',CASE WHEN @SALES_INCLUSION IS NOT NULL THEN '  AND (SALES_INCLUSION = @SALES_INCLUSION) ' END ,' 
THEN SALES
ELSE NULL
END),0) PROJECTION_SALES
,
	COALESCE(SUM(CASE 
				WHEN INDICATOR = CASE SELECTED_VARIABLE
						WHEN 3
							THEN NULL
						WHEN 2
							THEN 1
						ELSE 0
						END
					THEN CASE WHEN A.RN=1 THEN EXFACTORY_SALES END 
				ELSE NULL
				END), 0) EXFACTORY_SALES#ACT,
	COALESCE(SUM(CASE 
				WHEN INDICATOR = CASE SELECTED_VARIABLE
						WHEN 3
							THEN NULL
						WHEN 1
							THEN 0
						ELSE 1
						END
					THEN CASE WHEN A.RN=1 THEN EXFACTORY_SALES END 
				ELSE NULL
				END), 0) EXFACTORY_SALES#PROJ

FROM (
SELECT *
FROM #EX_VARIABLE
) A
CROSS JOIN (SELECT DISTINCT PERIOD ,YEAR FROM #PERIOD 
WHERE PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID) P

LEFT JOIN ',@CUSTOM_TABLE_SALES,' B
ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND P.YEAR = B.YEAR
AND P.PERIOD = B.PERIOD
LEFT JOIN #ITEM_UOM_DETAILS IU ON IU.CCP_DETAILS_SID=A.CCP_DETAILS_SID
LEFT JOIN (SELECT PERIOD,YEAR,SELECTED_VARIABLE FROM ',@VARIABLE_BREAK_DOWN,' WHERE MASTER_SID=0) C
ON P.YEAR=C.YEAR AND P.PERIOD=C.PERIOD
GROUP BY --A.HIERARCHY_NO,
P.YEAR,
P.PERIOD
')
EXEC SP_EXECUTESQL @SQL,
N'@SALES_INCLUSION BIT,@START_PERIOD_SID INT,@END_PERIOD_SID INT,@HIERARCHY_NO VARCHAR(8000),@CUSTOM_LEVEL_NO INT',
@SALES_INCLUSION=@SALES_INCLUSION,
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID,
@HIERARCHY_NO=@HIERARCHY_NO,
@CUSTOM_LEVEL_NO=@CUSTOM_LEVEL_NO


IF OBJECT_ID('TEMPDB.DBO.#CURRENT_SALES', 'U') IS NOT NULL
DROP TABLE #CURRENT_SALES;

CREATE TABLE #CURRENT_SALES
(
HIERARCHY_NO VARCHAR(8000),
YEAR SMALLINT,
PERIOD SMALLINT,
ACTUAL_SALES NUMERIC(22,6),
PROJECTION_SALES  NUMERIC(22,6),
ACTUAL_UNITS NUMERIC(22,6),
PROJECTION_UNITS NUMERIC(22,6))

SET @SQL=CONCAT('
INSERT INTO #CURRENT_SALES
SELECT A.HIERARCHY_NO,
p.YEAR,
P.PERIOD,
COALESCE(SUM(CASE 
WHEN    INDICATOR =CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END ',case when @SALES_INCLUSION IS not NULL then '  AND (SALES_INCLUSION = @SALES_INCLUSION) ' end ,'
THEN SALES
ELSE NULL
END),0) ACTUAL_SALES,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END ',case when @SALES_INCLUSION IS not NULL then '  AND (SALES_INCLUSION = @SALES_INCLUSION) ' end ,' 
THEN SALES
ELSE NULL
END),0) PROJECTION_SALES
,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END ',case when @SALES_INCLUSION IS not NULL then '  AND (SALES_INCLUSION = @SALES_INCLUSION) ' end ,'
THEN (UNITS * COALESCE(NULLIF(UOM_VALUE, 0),1) )
ELSE NULL
END),0) ACTUAL_UNITS,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END ',case when @SALES_INCLUSION IS not NULL then '  AND (SALES_INCLUSION = @SALES_INCLUSION) ' end ,'
THEN (UNITS * COALESCE(NULLIF(UOM_VALUE, 0),1) )
ELSE NULL
END),0) PROJECTION_UNITS
FROM (
SELECT HIERARCHY_NO,
CCP_DETAILS_SID,
ITEM_MASTER_SID
FROM #CCP_DETAILS_TEMP 
WHERE  LEVEL_NO BETWEEN @CUSTOM_LEVEL_NO-1 AND @CUSTOM_LEVEL_NO+1
GROUP BY CCP_DETAILS_SID,
ITEM_MASTER_SID,
HIERARCHY_NO
) A
cross join (select distinct period ,YEAR from #PERIOD 
where PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID) P

LEFT JOIN ',@CUSTOM_TABLE_SALES,' B
ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND P.YEAR = B.YEAR
AND P.PERIOD = B.PERIOD
LEFT JOIN #ITEM_UOM_DETAILS IU ON IU.CCP_DETAILS_SID=A.CCP_DETAILS_SID
LEFT JOIN (SELECT PERIOD,YEAR,SELECTED_VARIABLE FROM ',@VARIABLE_BREAK_DOWN,' WHERE MASTER_SID=0) C
ON P.YEAR=C.YEAR AND P.PERIOD=C.PERIOD
GROUP BY A.HIERARCHY_NO,
p.YEAR,
p.PERIOD
ORDER BY A.HIERARCHY_NO,
p.YEAR,
p.PERIOD')

---select @SQL

EXEC SP_EXECUTESQL @SQL,
N'@SALES_INCLUSION BIT,@START_PERIOD_SID INT,@END_PERIOD_SID INT,@HIERARCHY_NO varchar(8000),@CUSTOM_LEVEL_NO int',
@SALES_INCLUSION=@SALES_INCLUSION,
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID,
@HIERARCHY_NO=@HIERARCHY_NO,
@CUSTOM_LEVEL_NO=@CUSTOM_LEVEL_NO



IF OBJECT_ID('TEMPDB.DBO.#CURRENT_EXFACTORY', 'U') IS NOT NULL
DROP TABLE #CURRENT_EXFACTORY;
CREATE TABLE #CURRENT_EXFACTORY
(
HIERARCHY_NO VARCHAR(8000),
YEAR SMALLINT,
PERIOD SMALLINT,
EXFACTORY_SALES#ACT NUMERIC(22,6),
EXFACTORY_SALES#PROJ  NUMERIC(22,6))

SET @SQL=CONCAT('
INSERT INTO #CURRENT_EXFACTORY
SELECT A.HIERARCHY_NO,
	A.YEAR,
	A.PERIOD,
	COALESCE(sum(CASE 
				WHEN INDICATOR = CASE SELECTED_VARIABLE
						WHEN 3
							THEN NULL
						WHEN 2
							THEN 1
						ELSE 0
						END
					THEN EXFACTORY_SALES
				ELSE NULL
				END), 0) EXFACTORY_SALES#ACT,
	COALESCE(sum(CASE 
				WHEN INDICATOR = CASE SELECTED_VARIABLE
						WHEN 3
							THEN NULL
						WHEN 1
							THEN 0
						ELSE 1
						END
					THEN EXFACTORY_SALES
				ELSE NULL
				END), 0) EXFACTORY_SALES#PROJ
FROM (
	SELECT HIERARCHY_NO,
		item_master_sid,
		YEAR,
		PERIOD
	FROM #CCP_DETAILS_TEMP
	INNER JOIN #PERIOD
		ON PERIOD_SID BETWEEN @START_PERIOD_SID
				AND @END_PERIOD_SID
			AND LEVEL_NO = @CUSTOM_LEVEL_NO
	GROUP BY HIERARCHY_NO,
		item_master_sid,
		YEAR,
		PERIOD
	) A
INNER JOIN (
	SELECT ITEM_MASTER_SID,
		YEAR,
		PERIOD,
		INDICATOR,
		EXFACTORY_SALES
	FROM ',@CUSTOM_TABLE_SALES,' A
	INNER JOIN CCP_DETAILS CD
		ON CD.CCP_DETAILS_SID = A.CCP_DETAILS_SID
	GROUP BY ITEM_MASTER_SID,
		YEAR,
		PERIOD,
		INDICATOR,
		EXFACTORY_SALES
	) B
	ON A.item_master_sid = B.item_master_sid
		AND A.YEAR = B.YEAR
		AND A.PERIOD = B.PERIOD
LEFT JOIN (
	SELECT PERIOD,
		YEAR,
		SELECTED_VARIABLE
	FROM ',@VARIABLE_BREAK_DOWN,'
	WHERE MASTER_SID = - 1
	) C
	ON A.YEAR = C.YEAR
		AND A.PERIOD = C.PERIOD
GROUP BY A.HIERARCHY_NO,
	A.YEAR,
	A.PERIOD
ORDER BY A.HIERARCHY_NO,
	A.YEAR,
	A.PERIOD')

EXEC SP_EXECUTESQL @SQL,
N'@START_PERIOD_SID INT,@END_PERIOD_SID INT,@HIERARCHY_NO varchar(8000),@CUSTOM_LEVEL_NO int',
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID,
@HIERARCHY_NO=@HIERARCHY_NO,
@CUSTOM_LEVEL_NO=@CUSTOM_LEVEL_NO


IF OBJECT_ID('TEMPDB.DBO.#CURRENT_DISCOUNT', 'U') IS NOT NULL
DROP TABLE #CURRENT_DISCOUNT;

CREATE TABLE #CURRENT_DISCOUNT
(
HIERARCHY_NO VARCHAR(8000),
YEAR SMALLINT,
PERIOD SMALLINT,
ACTUAL_DISCOUNT NUMERIC(38,6),
PROJECTION_DISCOUNT  NUMERIC(38,6),
ACTUAL_ACCURAL_DISCOUNT NUMERIC(38,6),
PROJECTION_ACCURAL_DISCOUNT NUMERIC(38,6))

SET @SQL=CONCAT('
INSERT INTO #CURRENT_DISCOUNT 
SELECT A.HIERARCHY_NO,
p.YEAR,
p.PERIOD,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN 0 WHEN 2 THEN 1 ELSE 0 END AND (DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL ) 
THEN  CASE SELECTED_VARIABLE WHEN 3 then ACCURAL_DISCOUNT else DISCOUNT end
ELSE NULL
END),0) ACTUAL_DISCOUNT,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN 1 WHEN 1 THEN 0 ELSE 1 END AND (DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL ) 
THEN CASE SELECTED_VARIABLE WHEN 3 then ACCURAL_DISCOUNT else DISCOUNT end
ELSE NULL
END),0) PROJECTION_DISCOUNT,
COALESCE(SUM(CASE 
WHEN INDICATOR = 0 
THEN ACCURAL_DISCOUNT
ELSE NULL
END),0) ACTUAL_ACCURAL_DISCOUNT,
COALESCE(SUM(CASE 
WHEN INDICATOR = 1 
THEN ACCURAL_DISCOUNT 
ELSE NULL
END),0) PROJECTION_ACCURAL_DISCOUNT 

FROM (
SELECT HIERARCHY_NO,
CCP_DETAILS_SID,
RS_CONTRACT_SID
FROM #CCP_DETAILS_TEMP
WHERE LEVEL_NO BETWEEN @CUSTOM_LEVEL_NO-1 AND @CUSTOM_LEVEL_NO+1
GROUP BY HIERARCHY_NO,
CCP_DETAILS_SID,
RS_CONTRACT_SID
) A

cross join (select distinct period ,YEAR from #PERIOD 
where PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID) P

LEFT JOIN ',@CUSTOM_TABLE_DISCOUNT,' B
ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND A.RS_CONTRACT_SID=B.RS_CONTRACT_SID
AND P.YEAR = B.YEAR
AND P.PERIOD = B.PERIOD
LEFT JOIN (SELECT PERIOD,YEAR,SELECTED_VARIABLE FROM ',@VARIABLE_BREAK_DOWN,' WHERE MASTER_SID=0) C
ON P.YEAR=C.YEAR AND P.PERIOD=C.PERIOD
GROUP BY A.HIERARCHY_NO,
p.YEAR,
p.PERIOD
ORDER BY A.HIERARCHY_NO,
p.YEAR,
p.PERIOD')

EXEC SP_EXECUTESQL @SQL,
N'@START_PERIOD_SID INT,@END_PERIOD_SID INT, @DEDUCTION_INCLUSION  INT,@HIERARCHY_NO VARCHAR(8000),@CUSTOM_LEVEL_NO int',
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID,
 @DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION,
 @HIERARCHY_NO=@HIERARCHY_NO,
 @CUSTOM_LEVEL_NO=@CUSTOM_LEVEL_NO 

 

IF Object_id('TEMPDB..#PRIOR_TEMP_CCP') IS NOT NULL
DROP TABLE #PRIOR_TEMP_CCP

CREATE TABLE #PRIOR_TEMP_CCP (
COMPANY_MASTER_SID INT,
CONTRACT_MASTER_SID INT,
ITEM_MASTER_SID INT,
CCP_DETAILS_SID INT,
PROJECTION_MASTER_SID INT,
PROJECTION_DETAILS_SID INT,
HIERARCHY_NO VARCHAR(8000),
RS_CONTRACT_SID INT
--,BUSINESS_UNIT INT
PRIMARY KEY (
PROJECTION_MASTER_SID,
CCP_DETAILS_SID,RS_CONTRACT_SID,HIERARCHY_NO
)
)

INSERT INTO #PRIOR_TEMP_CCP (
HIERARCHY_NO,
COMPANY_MASTER_SID,
CONTRACT_MASTER_SID,
ITEM_MASTER_SID,
CCP_DETAILS_SID,
RS_CONTRACT_SID,
PROJECTION_MASTER_SID,
PROJECTION_DETAILS_SID
)
SELECT HIERARCHY_NO,CD.COMPANY_MASTER_SID,
CD.CONTRACT_MASTER_SID,
CD.ITEM_MASTER_SID,
CD.CCP_DETAILS_SID,
RS_CONTRACT_SID,
A.PROJECTION_MASTER_SID,
pd.PROJECTION_DETAILS_SID
FROM #PROJECTION_MASTER A
INNER JOIN PROJECTION_DETAILS PD
ON A.PROJECTION_MASTER_SID = PD.PROJECTION_MASTER_SID
AND ID <> 1
INNER JOIN CCP_DETAILS CD
ON PD.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
JOIN  #CCP_DETAILS_TEMP TC
ON TC.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
WHERE LEVEL_NO BETWEEN @CUSTOM_LEVEL_NO-1 AND @CUSTOM_LEVEL_NO+1

IF OBJECT_ID('TEMPDB.DBO.#prior_SALES', 'U') IS NOT NULL
DROP TABLE #PRIOR_SALES;
CREATE TABLE #PRIOR_SALES
(
PROJECTION_MASTER_SID INT,
HIERARCHY_NO VARCHAR(8000),
YEAR SMALLINT,
PERIOD SMALLINT,
ACTUAL_SALES NUMERIC(22,6),
PROJECTION_SALES  NUMERIC(22,6),
ACTUAL_UNITS NUMERIC(22,6),
PROJECTION_UNITS NUMERIC(22,6))

SET @SQL=CONCAT('
INSERT INTO #PRIOR_SALES
SELECT A.PROJECTION_MASTER_SID,
A.HIERARCHY_NO,
p.YEAR,
p.PERIOD,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END
AND (
SALES_INCLUSION = @SALES_INCLUSION
OR @SALES_INCLUSION IS NULL
)
THEN SALES
ELSE NULL
END),0) ACTUAL_SALES,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END
AND (
SALES_INCLUSION = @SALES_INCLUSION
OR @SALES_INCLUSION IS NULL
)
THEN SALES
ELSE NULL
END),0) PROJECTION_SALES,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END 
AND (
SALES_INCLUSION = @SALES_INCLUSION
OR @SALES_INCLUSION IS NULL
)
THEN (UNITS * COALESCE(NULLIF(UOM_VALUE, 0),1) )
ELSE NULL
END),0) ACTUAL_UNITS,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END
AND (
SALES_INCLUSION = @SALES_INCLUSION
OR @SALES_INCLUSION IS NULL
)
THEN (UNITS * COALESCE(NULLIF(UOM_VALUE, 0),1) )
ELSE NULL
END),0) PROJECTION_UNITS

FROM (
SELECT HIERARCHY_NO,
PROJECTION_MASTER_SID,
A.CCP_DETAILS_SID,
ITEM_MASTER_SID,
SALES_INCLUSION
FROM #PRIOR_TEMP_CCP A
INNER JOIN ',@CCP_HIERARCHY,' B
ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
GROUP BY HIERARCHY_NO,
PROJECTION_MASTER_SID,
A.CCP_DETAILS_SID,
ITEM_MASTER_SID,
SALES_INCLUSION
) A

cross join (select distinct period ,YEAR from #PERIOD 
where PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID) P

LEFT JOIN (
SELECT PROJECTION_MASTER_SID,
CCP_DETAILS_SID,
PERIOD,
YEAR,
SALES,
UNITS,
INDICATOR
FROM ',@PRIOR_TABLE,'
GROUP BY PROJECTION_MASTER_SID,
CCP_DETAILS_SID,
PERIOD,
YEAR,
SALES,
UNITS,
INDICATOR
) B
ON 
A.PROJECTION_MASTER_SID = B.PROJECTION_MASTER_SID AND A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND P.YEAR = B.YEAR
AND P.PERIOD = B.PERIOD
LEFT JOIN #ITEM_UOM_DETAILS IU
ON IU.CCP_DETAILS_SID = A.CCP_DETAILS_SID
LEFT JOIN ',@VARIABLE_BREAK_DOWN,' C
ON A.PROJECTION_MASTER_SID=c.MASTER_SID and P.YEAR=C.YEAR AND P.PERIOD=C.PERIOD
GROUP BY A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
P.YEAR,
P.PERIOD
ORDER BY A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
P.YEAR,
P.PERIOD')
if exists (select 1 from #PROJECTION_MASTER where ID <> 1 )
begin
EXEC SP_EXECUTESQL @SQL,
N'@SALES_INCLUSION BIT,@START_PERIOD_SID INT,@END_PERIOD_SID INT',
@SALES_INCLUSION=@SALES_INCLUSION,
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID
end 

IF OBJECT_ID('TEMPDB.DBO.#PRIOR_TOTAL_SALES', 'U') IS NOT NULL
DROP TABLE #PRIOR_TOTAL_SALES;
CREATE TABLE #PRIOR_TOTAL_SALES
(
PROJECTION_MASTER_SID INT,
YEAR SMALLINT,
PERIOD SMALLINT,
TOT_ACTUAL_SALES NUMERIC(22,6),
TOT_PROJECTION_SALES  NUMERIC(22,6)
,TOT_EXFACTORY_SALES#ACT NUMERIC(22,6),TOT_EXFACTORY_SALES#PROJ NUMERIC(22,6))


SET @SQL=CONCAT('
INSERT INTO #PRIOR_TOTAL_SALES
SELECT A.PROJECTION_MASTER_SID,
P.YEAR,
P.PERIOD,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END
AND (
SALES_INCLUSION = @SALES_INCLUSION
OR @SALES_INCLUSION IS NULL
)
THEN CASE WHEN SALES_RN= 1 THEN SALES END
ELSE NULL
END),0) ACTUAL_SALES,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END
AND (
SALES_INCLUSION = @SALES_INCLUSION
OR @SALES_INCLUSION IS NULL
)
THEN CASE WHEN SALES_RN= 1 THEN SALES END
ELSE NULL
END),0) PROJECTION_SALES,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END
THEN CASE WHEN EX_RN= 1 THEN  EXFACTORY_SALES END
ELSE NULL
END),0) EXFACTORY_SALES#ACT,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END
THEN CASE WHEN EX_RN= 1 THEN  EXFACTORY_SALES END
ELSE NULL
END),0) EXFACTORY_SALES#PROJ
FROM (
SELECT X.CCP_DETAILS_SID,
	X.PERIOD,
	X.YEAR,
	X.PROJECTION_MASTER_SID,
	X.SALES,
	X.EXFACTORY_SALES,
	X.INDICATOR,
	CD.ITEM_MASTER_SID,SALES_INCLUSION,
	ROW_NUMBER() OVER (
		PARTITION BY X.CCP_DETAILS_SID,
		X.PERIOD,
		X.YEAR,
		X.PROJECTION_MASTER_SID,
		X.INDICATOR ORDER BY X.RS_CONTRACT_SID
		) SALES_RN,
	ROW_NUMBER() OVER (
		PARTITION BY CD.ITEM_MASTER_SID,
		X.PERIOD,
		X.YEAR,
		X.PROJECTION_MASTER_SID,
		X.INDICATOR ORDER BY X.CCP_DETAILS_SID
		) EX_RN
FROM ',@PRIOR_TABLE,' X
JOIN CCP_DETAILS CD ON CD.CCP_DETAILS_SID = X.CCP_DETAILS_SID
INNER JOIN ',@CCP_HIERARCHY,' B
ON CD.CCP_DETAILS_SID = B.CCP_DETAILS_SID
) A

JOIN (SELECT DISTINCT PERIOD ,YEAR FROM #PERIOD 
WHERE PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID) P
ON P.PERIOD=A.PERIOD
AND P.YEAR=A.YEAR
LEFT JOIN ',@VARIABLE_BREAK_DOWN,' C
ON A.PROJECTION_MASTER_SID=C.MASTER_SID AND P.YEAR=C.YEAR AND P.PERIOD=C.PERIOD
GROUP BY A.PROJECTION_MASTER_SID,--A.HIERARCHY_NO,
P.YEAR,
P.PERIOD
ORDER BY A.PROJECTION_MASTER_SID,--A.HIERARCHY_NO,
P.YEAR,
P.PERIOD')
IF EXISTS (SELECT 1 FROM #PROJECTION_MASTER WHERE ID <> 1 )
BEGIN
EXEC SP_EXECUTESQL @SQL,
N'@SALES_INCLUSION BIT,@START_PERIOD_SID INT,@END_PERIOD_SID INT',
@SALES_INCLUSION=@SALES_INCLUSION,
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID
END 

IF OBJECT_ID('TEMPDB.DBO.#PRIOR_EXFACTORY', 'U') IS NOT NULL
DROP TABLE #PRIOR_EXFACTORY;

CREATE TABLE #PRIOR_EXFACTORY
(
PROJECTION_MASTER_SID INT,
HIERARCHY_NO VARCHAR(8000),
YEAR SMALLINT,
PERIOD SMALLINT,
EXFACTORY_SALES#ACT NUMERIC(22,6),
EXFACTORY_SALES#PROJ  NUMERIC(22,6))
SET @SQL=CONCAT('
INSERT INTO #PRIOR_EXFACTORY
SELECT A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
P.YEAR,
P.PERIOD,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 2 THEN 1 ELSE 0 END
THEN EXFACTORY_SALES
ELSE NULL
END),0) EXFACTORY_SALES#ACT,
COALESCE(SUM(CASE 
WHEN INDICATOR = CASE SELECTED_VARIABLE WHEN 3 THEN NULL WHEN 1 THEN 0 ELSE 1 END
THEN EXFACTORY_SALES
ELSE NULL
END),0) EXFACTORY_SALES#PROJ

FROM (
SELECT HIERARCHY_NO,
PROJECTION_MASTER_SID,
ITEM_MASTER_SID
FROM #PRIOR_TEMP_CCP 
GROUP BY HIERARCHY_NO,
PROJECTION_MASTER_SID,
ITEM_MASTER_SID
) A
cross join (select distinct period ,YEAR from #PERIOD 
where PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID) P
LEFT JOIN (

SELECT PROJECTION_MASTER_SID,
ITEM_MASTER_SID,
PERIOD,
YEAR,
SUM(EXFACTORY_SALES) EXFACTORY_SALES,
INDICATOR
FROM (select a.PROJECTION_MASTER_SID
		,cd.ITEM_MASTER_SID
		,a.PERIOD
		,a.YEAR,INDICATOR
		,EXFACTORY_SALES,row_number() over(partition by a.PROJECTION_MASTER_SID
		,cd.ITEM_MASTER_SID
		,a.PERIOD
		,a.YEAR,INDICATOR order by a.CCP_DETAILS_SID) rn
		 from  ',@PRIOR_TABLE,'  A
INNER JOIN CCP_DETAILS CD
ON CD.CCP_DETAILS_SID = A.CCP_DETAILS_SID)a
where a.rn=1
GROUP BY PROJECTION_MASTER_SID,
ITEM_MASTER_SID,
PERIOD,
YEAR,
INDICATOR
) B
ON A.PROJECTION_MASTER_SID = B.PROJECTION_MASTER_SID AND  A.ITEM_MASTER_SID = B.ITEM_MASTER_SID
AND P.YEAR = B.YEAR
AND P.PERIOD = B.PERIOD
LEFT JOIN ',@VARIABLE_BREAK_DOWN,' C
ON A.PROJECTION_MASTER_SID=c.MASTER_SID and P.YEAR=C.YEAR AND P.PERIOD=C.PERIOD
GROUP BY A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
P.YEAR,
P.PERIOD
ORDER BY A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
P.YEAR,
P.PERIOD')
if exists (select 1 from #PROJECTION_MASTER where ID <> 1 )
begin
EXEC SP_EXECUTESQL @SQL,
N'@START_PERIOD_SID INT,@END_PERIOD_SID INT',
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID
 end 
IF OBJECT_ID('TEMPDB.DBO.#prior_DISCOUNT', 'U') IS NOT NULL
DROP TABLE #PRIOR_DISCOUNT;

CREATE TABLE #PRIOR_DISCOUNT
(
PROJECTION_MASTER_SID INT,
HIERARCHY_NO VARCHAR(8000),
YEAR SMALLINT,
PERIOD SMALLINT,
ACTUAL_DISCOUNT NUMERIC(38,6),
PROJECTION_DISCOUNT  NUMERIC(38,6),
ACTUAL_ACCURAL_DISCOUNT NUMERIC(38,6),
PROJECTION_ACCURAL_DISCOUNT NUMERIC(38,6))


SET @SQL=CONCAT('insert INTO #PRIOR_DISCOUNT
SELECT A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
p.YEAR,
p.PERIOD,
COALESCE(SUM( 
CASE 
WHEN INDICATOR =  CASE SELECTED_VARIABLE WHEN 3 THEN 0 WHEN 2 THEN 1 ELSE 0 END AND (DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL ) 
THEN CASE SELECTED_VARIABLE WHEN 3 then ACCURAL_DISCOUNT else DISCOUNT end
ELSE NULL
END),0) ACTUAL_DISCOUNT,
COALESCE(SUM(CASE 
WHEN INDICATOR =  CASE SELECTED_VARIABLE WHEN 3 THEN 1 WHEN 1 THEN 0 ELSE 1 END  AND (DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION OR @DEDUCTION_INCLUSION IS NULL ) 
THEN CASE SELECTED_VARIABLE WHEN 3 then ACCURAL_DISCOUNT else DISCOUNT end 
ELSE NULL
END),0) PROJECTION_DISCOUNT,
COALESCE(SUM(CASE 
WHEN INDICATOR = 0 
THEN ACCURAL_DISCOUNT
ELSE NULL
END),0) ACTUAL_ACCURAL_DISCOUNT,
COALESCE(SUM(CASE 
WHEN INDICATOR = 1 
THEN ACCURAL_DISCOUNT 
ELSE NULL
END),0) PROJECTION_ACCURAL_DISCOUNT 

FROM (
SELECT HIERARCHY_NO,
PROJECTION_MASTER_SID,
A.CCP_DETAILS_SID,
A.RS_CONTRACT_SID,
DEDUCTION_INCLUSION
FROM #PRIOR_TEMP_CCP A JOIN (SELECT CCP_DETAILS_SID,
RS_CONTRACT_SID,
DEDUCTION_INCLUSION
FROM ',@CUSTOM_TABLE_DISCOUNT,'
GROUP BY CCP_DETAILS_SID,
RS_CONTRACT_SID,
DEDUCTION_INCLUSION)B ON A.CCP_DETAILS_SID=B.CCP_DETAILS_SID
AND A.RS_CONTRACT_SID=B.RS_CONTRACT_SID
GROUP BY HIERARCHY_NO,
PROJECTION_MASTER_SID,
A.CCP_DETAILS_SID,
A.RS_CONTRACT_SID,
DEDUCTION_INCLUSION
) A
cross join (select distinct period ,YEAR from #PERIOD 
where PERIOD_SID BETWEEN @START_PERIOD_SID AND @END_PERIOD_SID) P
LEFT JOIN ',@PRIOR_TABLE,' B
ON A.PROJECTION_MASTER_SID = B.PROJECTION_MASTER_SID AND A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
AND A.RS_CONTRACT_SID=B.RS_CONTRACT_SID
AND P.YEAR = B.YEAR
AND P.PERIOD = B.PERIOD
LEFT JOIN ',@VARIABLE_BREAK_DOWN,' C
ON A.PROJECTION_MASTER_SID=c.MASTER_SID and P.YEAR=C.YEAR AND P.PERIOD=C.PERIOD
GROUP BY A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
p.YEAR,
p.PERIOD
ORDER BY  A.PROJECTION_MASTER_SID,A.HIERARCHY_NO,
p.YEAR,
p.PERIOD')
if exists (select 1 from #PROJECTION_MASTER where ID <> 1 )
begin
EXEC SP_EXECUTESQL @SQL,
N'@START_PERIOD_SID INT,@END_PERIOD_SID INT, @DEDUCTION_INCLUSION  INT',
@START_PERIOD_SID=@START_PERIOD_SID,
@END_PERIOD_SID=@END_PERIOD_SID,
 @DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION 
 end 

IF OBJECT_ID('TEMPDB.DBO.#COLUMNS_TABLE', 'U') IS NOT NULL
DROP TABLE #COLUMNS_TABLE;

CREATE TABLE #COLUMNS_TABLE (
row_no INT NOT NULL identity(1, 1),
COLUMN_NAME VARCHAR(200),
ID INT
)


INSERT INTO #COLUMNS_TABLE(COLUMN_NAME,ID)
VALUES('EXFACTORY_SALES#ACT_1',1),
('EXFACTORY_SALES#PROJ_1',1),
('DISCOUNT_AMOUNT#ACT_1',1),
('DISCOUNT_AMOUNT#PROJ_1',1),
('CONTRACT_SALES#ACT_1',1),
('CONTRACT_SALES#PROJ_1',1),
('CONT_SALES_PER_OF_TOTAL_SALES#ACT_1',1),
('CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1',1),
('CONTRACT_UNITS#ACT_1',1),
('CONTRACT_UNITS#PROJ_1',1),
('DISCOUNT_RATE#ACT_1',1),
('DISCOUNT_RATE#PROJ_1',1),
('RPU#ACT_1',1),
('RPU#PROJ_1',1),
('NET_SALES#ACT_1',1),
('NET_SALES#PROJ_1',1),
('CON_SALES_PER_FO_EX#ACT_1',1),
('CON_SALES_PER_FO_EX#PROJ_1',1),
('NET_EX_SALES#ACT_1',1),
('NET_EX_SALES#PROJ_1',1),
('DISC_PER_OF_EX#ACT_1',1),
('DISC_PER_OF_EX#PROJ_1',1),
('NET_CON_SALES_PER_OF_EX#ACT_1',1),
('NET_CON_SALES_PER_OF_EX#PROJ_1',1),
('NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1',1),
('NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1',1),
('WEIGHTED_GTN_CONTRIBUTION#ACT_1',1),
('WEIGHTED_GTN_CONTRIBUTION#PROJ_1',1),
('ACCURAL_DISCOUNT_1',1),
('EXFACTORY_SALES#PROJ_2',2),
('DISCOUNT_AMOUNT#PROJ_2',2),
('CONTRACT_SALES#PROJ_2',2),
('CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2',2),
('CONTRACT_UNITS#PROJ_2',2),
('DISCOUNT_RATE#PROJ_2',2),
('RPU#PROJ_2',2),
('NET_SALES#PROJ_2',2),
('CON_SALES_PER_FO_EX#PROJ_2',2),
('NET_EX_SALES#PROJ_2',2),
('DISC_PER_OF_EX#PROJ_2',2),
('NET_CON_SALES_PER_OF_EX#PROJ_2',2),
('NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2',2),
('WEIGHTED_GTN_CONTRIBUTION#PROJ_2',2),
('ACCURAL_DISCOUNT_2',2),
('EXFACTORY_SALES#PROJ_3',3),
('DISCOUNT_AMOUNT#PROJ_3',3),
('CONTRACT_SALES#PROJ_3',3),
('CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3',3),
('CONTRACT_UNITS#PROJ_3',3),
('DISCOUNT_RATE#PROJ_3',3),
('RPU#PROJ_3',3),
('NET_SALES#PROJ_3',3),
('CON_SALES_PER_FO_EX#PROJ_3',3),
('NET_EX_SALES#PROJ_3',3),
('DISC_PER_OF_EX#PROJ_3',3),
('NET_CON_SALES_PER_OF_EX#PROJ_3',3),
('NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3',3),
('WEIGHTED_GTN_CONTRIBUTION#PROJ_3',3),
('ACCURAL_DISCOUNT_3',3),
('EXFACTORY_SALES#PROJ_4',4),
('DISCOUNT_AMOUNT#PROJ_4',4),
('CONTRACT_SALES#PROJ_4',4),
('CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4',4),
('CONTRACT_UNITS#PROJ_4',4),
('DISCOUNT_RATE#PROJ_4',4),
('RPU#PROJ_4',4),
('NET_SALES#PROJ_4',4),
('CON_SALES_PER_FO_EX#PROJ_4',4),
('NET_EX_SALES#PROJ_4',4),
('DISC_PER_OF_EX#PROJ_4',4),
('NET_CON_SALES_PER_OF_EX#PROJ_4',4),
('NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4',4),
('WEIGHTED_GTN_CONTRIBUTION#PROJ_4',4),
('ACCURAL_DISCOUNT_4',4),
('EXFACTORY_SALES#PROJ_5',5),
('DISCOUNT_AMOUNT#PROJ_5',5),
('CONTRACT_SALES#PROJ_5',5),
('CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5',5),
('CONTRACT_UNITS#PROJ_5',5),
('DISCOUNT_RATE#PROJ_5',5),
('RPU#PROJ_5',5),
('NET_SALES#PROJ_5',5),
('CON_SALES_PER_FO_EX#PROJ_5',5),
('NET_EX_SALES#PROJ_5',5),
('DISC_PER_OF_EX#PROJ_5',5),
('NET_CON_SALES_PER_OF_EX#PROJ_5',5),
('NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5',5),
('WEIGHTED_GTN_CONTRIBUTION#PROJ_5',5),
('ACCURAL_DISCOUNT_5',5),
('EXFACTORY_SALES#PROJ_6',6),
('DISCOUNT_AMOUNT#PROJ_6',6),
('CONTRACT_SALES#PROJ_6',6),
('CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6',6),
('CONTRACT_UNITS#PROJ_6',6),
('DISCOUNT_RATE#PROJ_6',6),
('RPU#PROJ_6',6),
('NET_SALES#PROJ_6',6),
('CON_SALES_PER_FO_EX#PROJ_6',6),
('NET_EX_SALES#PROJ_6',6),
('DISC_PER_OF_EX#PROJ_6',6),
('NET_CON_SALES_PER_OF_EX#PROJ_6',6),
('NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6',6),
('WEIGHTED_GTN_CONTRIBUTION#PROJ_6',6),
('ACCURAL_DISCOUNT_6',6)

IF OBJECT_ID('TEMPDB.DBO.#VARIABLE_DATA_TABLE', 'U') IS NOT NULL
DROP TABLE #VARIABLE_DATA_TABLE;

CREATE TABLE #VARIABLE_DATA_TABLE (
HIERARCHY_NO VARCHAR(8000),
LEVEL_NO INT,
PERIOD SMALLINT,
YEAR SMALLINT,
PROJECTION_MASTER_SID INT,
EXFACTORY_SALES#ACT NUMERIC(38, 6),
EXFACTORY_SALES#PROJ NUMERIC(38, 6),
DISCOUNT_AMOUNT#ACT NUMERIC(38, 6),
DISCOUNT_AMOUNT#PROJ NUMERIC(38, 6),
CONTRACT_SALES#ACT NUMERIC(38, 6),
CONTRACT_SALES#PROJ NUMERIC(38, 6),
CONT_SALES_PER_OF_TOTAL_SALES#ACT NUMERIC(38, 6),
CONT_SALES_PER_OF_TOTAL_SALES#PROJ NUMERIC(38, 6),
CONTRACT_UNITS#ACT NUMERIC(38, 6),
CONTRACT_UNITS#PROJ NUMERIC(38, 6),
DISCOUNT_RATE#ACT NUMERIC(38, 6),
DISCOUNT_RATE#PROJ NUMERIC(38, 6),
RPU#ACT NUMERIC(38, 6),
RPU#PROJ NUMERIC(38, 6),
NET_SALES#ACT NUMERIC(38, 6),
NET_SALES#PROJ NUMERIC(38, 6),
CON_SALES_PER_FO_EX#ACT NUMERIC(38, 6),
CON_SALES_PER_FO_EX#PROJ NUMERIC(38, 6),
NET_EX_SALES#ACT NUMERIC(38, 6),
NET_EX_SALES#PROJ NUMERIC(38, 6),
DISC_PER_OF_EX#ACT NUMERIC(38, 6),
DISC_PER_OF_EX#PROJ NUMERIC(38, 6),
NET_CON_SALES_PER_OF_EX#ACT NUMERIC(38, 6),
NET_CON_SALES_PER_OF_EX#PROJ NUMERIC(38, 6),
NET_EXP_SALES_PER_OF_TOATL_EX#ACT NUMERIC(38, 6),
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ NUMERIC(38, 6),
WEIGHTED_GTN_CONTRIBUTION#ACT NUMERIC(38, 6),
WEIGHTED_GTN_CONTRIBUTION#PROJ NUMERIC(38, 6),
ACCURAL_DISCOUNT NUMERIC(38, 6)
)

IF OBJECT_ID('TEMPDB..#CTE_RESULT', 'U') IS NOT NULL
DROP TABLE #CTE_RESULT;

CREATE TABLE #CTE_RESULT (
HIERARCHY_NO VARCHAR(8000),Description varchar(1000),variable_count int,HIERARCHY_INDICATOR varchar(50),

PERIOD SMALLINT,
YEAR SMALLINT,
PROJECTION_MASTER_SID INT,LEVEL_NO INT,
EXFACTORY_SALES#ACT NUMERIC(38, 6),
EXFACTORY_SALES#PROJ NUMERIC(38, 6),
DISCOUNT_AMOUNT#ACT NUMERIC(38, 6),
DISCOUNT_AMOUNT#PROJ NUMERIC(38, 6),
CONTRACT_SALES#ACT NUMERIC(38, 6),
CONTRACT_SALES#PROJ NUMERIC(38, 6),
CONT_SALES_PER_OF_TOTAL_SALES#ACT NUMERIC(38, 6),
CONT_SALES_PER_OF_TOTAL_SALES#PROJ NUMERIC(38, 6),
CONTRACT_UNITS#ACT NUMERIC(38, 6),
CONTRACT_UNITS#PROJ NUMERIC(38, 6),
DISCOUNT_RATE#ACT NUMERIC(38, 6),
DISCOUNT_RATE#PROJ NUMERIC(38, 6),
RPU#ACT NUMERIC(38, 6),
RPU#PROJ NUMERIC(38, 6),
NET_SALES#ACT NUMERIC(38, 6),
NET_SALES#PROJ NUMERIC(38, 6),
CON_SALES_PER_FO_EX#ACT NUMERIC(38, 6),
CON_SALES_PER_FO_EX#PROJ NUMERIC(38, 6),
NET_EX_SALES#ACT NUMERIC(38, 6),
NET_EX_SALES#PROJ NUMERIC(38, 6),
DISC_PER_OF_EX#ACT NUMERIC(38, 6),
DISC_PER_OF_EX#PROJ NUMERIC(38, 6),
NET_CON_SALES_PER_OF_EX#ACT NUMERIC(38, 6),
NET_CON_SALES_PER_OF_EX#PROJ NUMERIC(38, 6),
NET_EXP_SALES_PER_OF_TOATL_EX#ACT NUMERIC(38, 6),
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ NUMERIC(38, 6),
WEIGHTED_GTN_CONTRIBUTION#ACT NUMERIC(38, 6),
WEIGHTED_GTN_CONTRIBUTION#PROJ NUMERIC(38, 6),
ACCURAL_DISCOUNT NUMERIC(38, 6)
)
if exists (select 1 where @VARAIBLE_TYPE is null)
begin
set @VARAIBLE_TYPE =''
end
SET @SQL=''
SET @SQL = CONCAT (
'insert into #CTE_RESULT','
SELECT A.HIERARCHY_NO,
--a.HIERARCHY_NO1,
DESCRIPTION,
VARIABLE_COUNT,
HIERARCHY_INDICATOR,
A.PERIOD,
A.YEAR,
0 AS PROJECTION_MASTER_SID,
level_no,
CASE 
WHEN ((DESCRIPTION = ''Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN EXFACTORY_SALES#ACT 
END EXFACTORY_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN EXFACTORY_SALES#PROJ
END EXFACTORY_SALES#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Deduction $'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN ACTUAL_DISCOUNT
END DISCOUNT_AMOUNT#ACT,
CASE 
WHEN ((DESCRIPTION = ''Deduction $'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_DISCOUNT
END DISCOUNT_AMOUNT#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Gross Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN ACTUAL_SALES
END CONTRACT_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Gross Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_SALES
END CONTRACT_SALES#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Contract Sales % of Total Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
--THEN SUM(ACTUAL_SALES) OVER (PARTITION BY A.HIERARCHY_NO,A.YEAR,A.PERIOD)
THEN (ACTUAL_SALES/nullif(cts.tot_ACTUAL_SALES,0))*100
END CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Contract Sales % of Total Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
--THEN SUM(PROJECTION_SALES) OVER (PARTITION BY A.HIERARCHY_NO,A.YEAR,A.PERIOD)
THEN (PROJECTION_SALES/nullif(cts.tot_PROJECTION_SALES,0))*100
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Contract Units'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN ACTUAL_UNITS
END CONTRACT_UNITS#ACT,
CASE 
WHEN ((DESCRIPTION = ''Contract Units'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_UNITS
END CONTRACT_UNITS#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Deduction %'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (ACTUAL_DISCOUNT / NULLIF(ACTUAL_SALES,0)) * 100
END DISCOUNT_RATE#ACT,
CASE 
WHEN ((DESCRIPTION = ''Deduction %'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (PROJECTION_DISCOUNT / NULLIF(PROJECTION_SALES,0)) * 100
END DISCOUNT_RATE#PROJ,
CASE 
WHEN ((DESCRIPTION = ''RPU'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (ACTUAL_DISCOUNT / NULLIF(ACTUAL_UNITS,0)) 
END RPU#ACT,
CASE  
WHEN ((DESCRIPTION = ''RPU'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (PROJECTION_DISCOUNT / NULLIF(PROJECTION_UNITS, 0))
END RPU#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Net Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN ACTUAL_SALES - ACTUAL_DISCOUNT
END NET_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_SALES - PROJECTION_DISCOUNT
END NET_SALES#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Gross Contract Sales % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (Isnull(ACTUAL_SALES / NULLIF(EXFACTORY_SALES#ACT, 0), 0)) * 100
END CON_SALES_PER_FO_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Gross Contract Sales % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (Isnull(PROJECTION_SALES / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100
END CON_SALES_PER_FO_EX#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Net Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN EXFACTORY_SALES#ACT - ACTUAL_DISCOUNT
END NET_EX_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN EXFACTORY_SALES#PROJ - PROJECTION_DISCOUNT
END NET_EX_SALES#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Deduction % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (Isnull(ACTUAL_DISCOUNT / NULLIF(EXFACTORY_SALES#ACT, 0), 0)) * 100
END DISC_PER_OF_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Deduction % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (Isnull(PROJECTION_DISCOUNT / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100
END DISC_PER_OF_EX#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Net Contract Sales % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (ACTUAL_SALES - ACTUAL_DISCOUNT) / NULLIF(EXFACTORY_SALES#ACT, 0)
END NET_CON_SALES_PER_OF_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Contract Sales % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (PROJECTION_SALES - PROJECTION_DISCOUNT) / NULLIF(EXFACTORY_SALES#PROJ, 0)*100
END NET_CON_SALES_PER_OF_EX#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Net Ex-Factory Sales % of Total Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN ((EXFACTORY_SALES#ACT - ACTUAL_DISCOUNT) / NULLIF(cts.tot_EXFACTORY_SALES#ACT,0))*100
END NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Ex-Factory Sales % of Total Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN ((EXFACTORY_SALES#PROJ - PROJECTION_DISCOUNT) / NULLIF(cts.tot_EXFACTORY_SALES#PROJ,0))*100
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
CASE 
WHEN ((DESCRIPTION = ''Weighted GTN Contribution'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))

--THEN (EXFACTORY_SALES#ACT / NULLIF(SUM(EXFACTORY_SALES#ACT) OVER (PARTITION BY LEVEL_NO,A.YEAR,A.PERIOD),0)) * ((Isnull(ACTUAL_DISCOUNT / NULLIF(EXFACTORY_SALES#ACT, 0), 0)) * 100)
THEN (EXFACTORY_SALES#ACT / NULLIF(cts.TOT_EXFACTORY_SALES#ACT,0)) * ((Isnull(ACTUAL_DISCOUNT / NULLIF(EXFACTORY_SALES#ACT, 0), 0)) * 100)
END WEIGHTED_GTN_CONTRIBUTION#ACT,
CASE 
WHEN ((DESCRIPTION = ''Weighted GTN Contribution'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
--THEN (EXFACTORY_SALES#PROJ / NULLIF(SUM(EXFACTORY_SALES#PROJ) OVER (PARTITION BY LEVEL_NO,A.YEAR,A.PERIOD),0)) * ((Isnull(PROJECTION_DISCOUNT / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100)
THEN (EXFACTORY_SALES#PROJ / NULLIF(cts.TOT_EXFACTORY_SALES#PROJ,0)) * ((Isnull(PROJECTION_DISCOUNT / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100)
END WEIGHTED_GTN_CONTRIBUTION#PROJ,
COALESCE(PROJECTION_ACCURAL_DISCOUNT,ACTUAL_ACCURAL_DISCOUNT) ACCURAL_DISCOUNT
FROM #DATA_TABLE A
left JOIN #CURRENT_SALES B
ON A.HIERARCHY_NO = B.HIERARCHY_NO
AND A.PERIOD = B.PERIOD
AND A.YEAR = B.YEAR
left JOIN #CURRENT_EXFACTORY C
ON A.HIERARCHY_NO = C.HIERARCHY_NO
AND A.PERIOD = C.PERIOD
AND A.YEAR = C.YEAR
left JOIN #CURRENT_DISCOUNT d
ON A.HIERARCHY_NO = d.HIERARCHY_NO
AND A.PERIOD = d.PERIOD
AND A.YEAR = d.YEAR
left join #CURRENT_TOTAL_SALES cts on 
 A.PERIOD = cts.PERIOD
AND A.YEAR = cts.YEAR
---where a.VARIABLE_COUNT<1
UNION ALL

SELECT A.HIERARCHY_NO,
     -- a.HIERARCHY_NO1,
DESCRIPTION,
VARIABLE_COUNT,
HIERARCHY_INDICATOR,
A.PERIOD,
A.YEAR,
E.PROJECTION_MASTER_SID,
level_no,
NULL EXFACTORY_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN EXFACTORY_SALES#PROJ
END EXFACTORY_SALES#PROJ,
NULL DISCOUNT_AMOUNT#ACT,
CASE 
WHEN ((DESCRIPTION = ''Deduction $'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_DISCOUNT
END DISCOUNT_AMOUNT#PROJ,
NULL CONTRACT_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Gross Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_SALES
END CONTRACT_SALES#PROJ,
NULL CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Contract Sales % of Total Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
--THEN SUM(PROJECTION_SALES) OVER (PARTITION BY LEVEL_NO,A.YEAR,A.PERIOD)
THEN (PROJECTION_SALES/nullif(Pts.tot_PROJECTION_SALES,0))*100
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
NULL CONTRACT_UNITS#ACT,
CASE 
WHEN ((DESCRIPTION = ''Contract Units'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_UNITS
END CONTRACT_UNITS#PROJ,
NULL DISCOUNT_RATE#ACT,
CASE 
WHEN ((DESCRIPTION = ''Deduction %'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (PROJECTION_DISCOUNT / NULLIF(PROJECTION_SALES,0)) * 100
END DISCOUNT_RATE#PROJ,
NULL RPU#ACT,
CASE  
WHEN ((DESCRIPTION = ''RPU'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (PROJECTION_DISCOUNT / NULLIF(PROJECTION_UNITS, 0))
END RPU#PROJ,
NULL NET_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Contract Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN PROJECTION_SALES - PROJECTION_DISCOUNT
END NET_SALES#PROJ,
NULL CON_SALES_PER_FO_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Gross Contract Sales % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (Isnull(PROJECTION_SALES / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100
END CON_SALES_PER_FO_EX#PROJ,
NULL NET_EX_SALES#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN EXFACTORY_SALES#PROJ - PROJECTION_DISCOUNT
END NET_EX_SALES#PROJ,
NULL DISC_PER_OF_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Deduction % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN (Isnull(PROJECTION_DISCOUNT / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100
END DISC_PER_OF_EX#PROJ,
NULL NET_CON_SALES_PER_OF_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Contract Sales % of Ex-Factory'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
THEN ((PROJECTION_SALES - PROJECTION_DISCOUNT) / NULLIF(EXFACTORY_SALES#PROJ, 0))*100
END NET_CON_SALES_PER_OF_EX#PROJ,
NULL NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
CASE 
WHEN ((DESCRIPTION = ''Net Ex-Factory Sales % of Total Ex-Factory Sales'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
--THEN (EXFACTORY_SALES#PROJ - PROJECTION_DISCOUNT) / NULLIF(SUM(EXFACTORY_SALES#PROJ) OVER (PARTITION BY LEVEL_NO,A.YEAR,A.PERIOD),0)
THEN ((EXFACTORY_SALES#PROJ - PROJECTION_DISCOUNT) / NULLIF(PTS.tot_EXFACTORY_SALES#PROJ,0))*100
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
NULL WEIGHTED_GTN_CONTRIBUTION#ACT,
CASE 
WHEN ((DESCRIPTION = ''Weighted GTN Contribution'' AND @VARAIBLE_TYPE <>''VARIABLE'') OR (@VARAIBLE_TYPE=''VARIABLE''))
--THEN (EXFACTORY_SALES#PROJ / NULLIF(SUM(EXFACTORY_SALES#PROJ) OVER (PARTITION BY LEVEL_NO),0)) * ((Isnull(PROJECTION_DISCOUNT / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100)
THEN (EXFACTORY_SALES#PROJ / NULLIF(PTS.TOT_EXFACTORY_SALES#PROJ,0)) * ((Isnull(PROJECTION_DISCOUNT / NULLIF(EXFACTORY_SALES#PROJ, 0), 0)) * 100)
END WEIGHTED_GTN_CONTRIBUTION#PROJ,
COALESCE(PROJECTION_ACCURAL_DISCOUNT,ACTUAL_ACCURAL_DISCOUNT) ACCURAL_DISCOUNT
FROM #DATA_TABLE A
JOIN ( SELECT HIERARCHY_NO,PROJECTION_MASTER_SID FROM #PRIOR_TEMP_CCP GROUP BY HIERARCHY_NO,PROJECTION_MASTER_SID )E ON A.HIERARCHY_NO=E.HIERARCHY_NO

left JOIN #PRIOR_SALES B
ON  E.PROJECTION_MASTER_SID = B.PROJECTION_MASTER_SID AND A.HIERARCHY_NO = B.HIERARCHY_NO
AND A.PERIOD = B.PERIOD
AND A.YEAR = B.YEAR
left JOIN #PRIOR_EXFACTORY C
ON E.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID AND A.HIERARCHY_NO = C.HIERARCHY_NO
AND A.PERIOD = C.PERIOD
AND A.YEAR = C.YEAR
left JOIN #PRIOR_DISCOUNT D
ON E.PROJECTION_MASTER_SID = D.PROJECTION_MASTER_SID AND A.HIERARCHY_NO = D.HIERARCHY_NO
AND A.PERIOD = D.PERIOD
AND A.YEAR = D.YEAR
LEFT JOIN #PRIOR_TOTAL_SALES PTS
 ON A.PERIOD = pts.PERIOD
AND A.YEAR = pts.YEAR
--where a.VARIABLE_COUNT<1')


---select min(LEVEL_NO), max(LEVEL_NO) from #DATA_TABLE

 EXEC sp_executesql @SQL,N'@VARAIBLE_TYPE varchar(100)',@VARAIBLE_TYPE=@VARAIBLE_TYPE
 --create index idx_cte_result on #cte_res_1(Hierarchy_No,period,year,Level_No)
 ---create index idx_cte_result on #CTE_RESULT(Hierarchy_No,Level_No,period,year)
 declare @min_level int ,@max_level int

 select @min_level=min(level_no),@max_level=max(level_no) from #DATA_TABLE
-- if OBJECT_ID('tempdb..#CTE_RESU') is not null
--drop table #CTE_RESU
INSERT INTO #VARIABLE_DATA_TABLE (
HIERARCHY_NO,
LEVEL_NO,
PERIOD,
YEAR,
PROJECTION_MASTER_SID,
EXFACTORY_SALES#ACT,
EXFACTORY_SALES#PROJ,
DISCOUNT_AMOUNT#ACT,
DISCOUNT_AMOUNT#PROJ,
CONTRACT_SALES#ACT,
CONTRACT_SALES#PROJ,
CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
CONTRACT_UNITS#ACT,
CONTRACT_UNITS#PROJ,
DISCOUNT_RATE#ACT,
DISCOUNT_RATE#PROJ,
RPU#ACT,
RPU#PROJ,
NET_SALES#ACT,
NET_SALES#PROJ,
CON_SALES_PER_FO_EX#ACT,
CON_SALES_PER_FO_EX#PROJ,
NET_EX_SALES#ACT,
NET_EX_SALES#PROJ,
DISC_PER_OF_EX#ACT,
DISC_PER_OF_EX#PROJ,
NET_CON_SALES_PER_OF_EX#ACT,
NET_CON_SALES_PER_OF_EX#PROJ,
NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
WEIGHTED_GTN_CONTRIBUTION#ACT,
WEIGHTED_GTN_CONTRIBUTION#PROJ,
ACCURAL_DISCOUNT
)
select d.HIERARCHY_NO,
d.LEVEL_NO,
d.PERIOD,
d.YEAR,
cr.PROJECTION_MASTER_SID,
isnull(cr.EXFACTORY_SALES#ACT/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.EXFACTORY_SALES#PROJ/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.DISCOUNT_AMOUNT#ACT/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.DISCOUNT_AMOUNT#PROJ/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.CONTRACT_SALES#ACT/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.CONTRACT_SALES#PROJ/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.CONT_SALES_PER_OF_TOTAL_SALES#ACT,0),
isnull(cr.CONT_SALES_PER_OF_TOTAL_SALES#PROJ,0),
isnull(cr.CONTRACT_UNITS#ACT,0),
isnull(cr.CONTRACT_UNITS#PROJ,0),
isnull(cr.DISCOUNT_RATE#ACT,0),
isnull(cr.DISCOUNT_RATE#PROJ,0),
isnull(cr.RPU#ACT,0),
isnull(cr.RPU#PROJ,0),
isnull(cr.NET_SALES#ACT/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.NET_SALES#PROJ/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.CON_SALES_PER_FO_EX#ACT,0),
isnull(cr.CON_SALES_PER_FO_EX#PROJ,0),
isnull(cr.NET_EX_SALES#ACT/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.NET_EX_SALES#PROJ/coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0),
isnull(cr.DISC_PER_OF_EX#ACT,0),
isnull(cr.DISC_PER_OF_EX#PROJ,0),
isnull(cr.NET_CON_SALES_PER_OF_EX#ACT,0),
isnull(cr.NET_CON_SALES_PER_OF_EX#PROJ,0),
isnull(cr.NET_EXP_SALES_PER_OF_TOATL_EX#ACT,0),
isnull(cr.NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,0),
isnull(cr.WEIGHTED_GTN_CONTRIBUTION#ACT,0),
isnull(cr.WEIGHTED_GTN_CONTRIBUTION#PROJ,0),
isnull(cr.ACCURAL_DISCOUNT,0)
--into #CTE_RESU
from #DATA_TABLE D left join #CTE_RESULT cr on cr.HIERARCHY_NO=d.HIERARCHY_NO 
AND cr.PERIOD = D.PERIOD
AND cr.YEAR = D.YEAR
--AND cr.VARIABLE_COUNT = D.VARIABLE_COUNT
and d.level_no=cr.level_no
set @min_level+=1
while @min_level<=@max_level 
begin

insert into #VARIABLE_DATA_TABLE (HIERARCHY_NO,
LEVEL_NO,
PERIOD,
YEAR,
PROJECTION_MASTER_SID,
EXFACTORY_SALES#ACT,
EXFACTORY_SALES#PROJ,
DISCOUNT_AMOUNT#ACT,
DISCOUNT_AMOUNT#PROJ,
CONTRACT_SALES#ACT,
CONTRACT_SALES#PROJ,
CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
CONTRACT_UNITS#ACT,
CONTRACT_UNITS#PROJ,
DISCOUNT_RATE#ACT,
DISCOUNT_RATE#PROJ,
RPU#ACT,
RPU#PROJ,
NET_SALES#ACT,
NET_SALES#PROJ,
CON_SALES_PER_FO_EX#ACT,
CON_SALES_PER_FO_EX#PROJ,
NET_EX_SALES#ACT,
NET_EX_SALES#PROJ,
DISC_PER_OF_EX#ACT,
DISC_PER_OF_EX#PROJ,
NET_CON_SALES_PER_OF_EX#ACT,
NET_CON_SALES_PER_OF_EX#PROJ,
NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
WEIGHTED_GTN_CONTRIBUTION#ACT,
WEIGHTED_GTN_CONTRIBUTION#PROJ,
ACCURAL_DISCOUNT)
select d.HIERARCHY_NO,
--d.DESCRIPTION,
--d.VARIABLE_COUNT,
--d.HIERARCHY_INDICATOR,
d.PERIOD,
d.YEAR,
b.PROJECTION_MASTER_SID,
d.level_no,
isnull(SUM(b.EXFACTORY_SALES#ACT) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  EXFACTORY_SALES#ACT,
isnull(SUM(b.EXFACTORY_SALES#PROJ) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  EXFACTORY_SALES#PROJ,
isnull(SUM(b.DISCOUNT_AMOUNT#ACT) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  DISCOUNT_AMOUNT#ACT,
isnull(SUM(b.DISCOUNT_AMOUNT#PROJ) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  DISCOUNT_AMOUNT#PROJ,
isnull(SUM(b.CONTRACT_SALES#ACT) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  CONTRACT_SALES#ACT,
isnull(SUM(b.CONTRACT_SALES#PROJ)/coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  CONTRACT_SALES#PROJ,
isnull(SUM(b.CONT_SALES_PER_OF_TOTAL_SALES#ACT) ,0) as  CONT_SALES_PER_OF_TOTAL_SALES#ACT,
isnull(SUM(b.CONT_SALES_PER_OF_TOTAL_SALES#PROJ) ,0) as  CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
isnull(SUM(b.CONTRACT_UNITS#ACT) ,0) as  CONTRACT_UNITS#ACT,
isnull(SUM(b.CONTRACT_UNITS#PROJ) ,0) as  CONTRACT_UNITS#PROJ,
isnull(SUM(b.DISCOUNT_RATE#ACT) ,0) as  DISCOUNT_RATE#ACT,
isnull(SUM(b.DISCOUNT_RATE#PROJ) ,0) as  DISCOUNT_RATE#PROJ,
isnull(SUM(b.RPU#ACT) ,0) as  RPU#ACT,
isnull(SUM(b.RPU#PROJ) ,0) as  RPU#PROJ,
isnull(SUM(b.NET_SALES#ACT) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  NET_SALES#ACT,
isnull(SUM(b.NET_SALES#PROJ) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  NET_SALES#PROJ,
isnull(SUM(b.CON_SALES_PER_FO_EX#ACT) ,0) as  CON_SALES_PER_FO_EX#ACT, 
isnull(SUM(b.CON_SALES_PER_FO_EX#PROJ) ,0) as  CON_SALES_PER_FO_EX#PROJ, 
isnull(SUM(b.NET_EX_SALES#ACT) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1) ,0) as  NET_EX_SALES#ACT,
isnull(SUM(b.NET_EX_SALES#PROJ) /coalesce(@CONVERTED_CURRENCY_DISPLAY,1),0) as  NET_EX_SALES#PROJ,
isnull(SUM(b.DISC_PER_OF_EX#ACT) ,0) as  DISC_PER_OF_EX#ACT,
isnull(SUM(b.DISC_PER_OF_EX#PROJ) ,0) as  DISC_PER_OF_EX#PROJ,
isnull(SUM(b.NET_CON_SALES_PER_OF_EX#ACT) ,0) as  NET_CON_SALES_PER_OF_EX#ACT,
isnull(SUM(b.NET_CON_SALES_PER_OF_EX#PROJ) ,0) as  NET_CON_SALES_PER_OF_EX#PROJ,
isnull(SUM(b.NET_EXP_SALES_PER_OF_TOATL_EX#ACT) ,0) as  NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
isnull(SUM(b.NET_EXP_SALES_PER_OF_TOATL_EX#PROJ) ,0) as  NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
isnull(SUM(b.WEIGHTED_GTN_CONTRIBUTION#ACT) ,0) as  WEIGHTED_GTN_CONTRIBUTION#ACT, 
isnull(SUM(b.WEIGHTED_GTN_CONTRIBUTION#PROJ) ,0) as  WEIGHTED_GTN_CONTRIBUTION#PROJ,
isnull(SUM(b.ACCURAL_DISCOUNT) ,0) as  ACCURAL_DISCOUNT--- ,d.level_no
 from #DATA_TABLE  D join #VARIABLE_DATA_TABLE b on d.HIERARCHY_NO like b.HIERARCHY_NO+'%'
AND b.PERIOD = D.PERIOD
AND b.YEAR = D.YEAR
and d.level_no=b.level_no+1
where d.LEVEL_NO<=@max_level and d.LEVEL_NO=@min_level
group by d.HIERARCHY_NO,
--d.DESCRIPTION,
--d.VARIABLE_COUNT,
--d.HIERARCHY_INDICATOR,
d.PERIOD,
d.YEAR,
b.PROJECTION_MASTER_SID,
d.level_no
---AND cr.VARIABLE_COUNT = D.VARIABLE_COUNT
set @min_level+=1
end 
/*
INSERT INTO #VARIABLE_DATA_TABLE (
HIERARCHY_NO,
LEVEL_NO,
PERIOD,
YEAR,
PROJECTION_MASTER_SID,
EXFACTORY_SALES#ACT,
EXFACTORY_SALES#PROJ,
DISCOUNT_AMOUNT#ACT,
DISCOUNT_AMOUNT#PROJ,
CONTRACT_SALES#ACT,
CONTRACT_SALES#PROJ,
CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
CONTRACT_UNITS#ACT,
CONTRACT_UNITS#PROJ,
DISCOUNT_RATE#ACT,
DISCOUNT_RATE#PROJ,
RPU#ACT,
RPU#PROJ,
NET_SALES#ACT,
NET_SALES#PROJ,
CON_SALES_PER_FO_EX#ACT,
CON_SALES_PER_FO_EX#PROJ,
NET_EX_SALES#ACT,
NET_EX_SALES#PROJ,
DISC_PER_OF_EX#ACT,
DISC_PER_OF_EX#PROJ,
NET_CON_SALES_PER_OF_EX#ACT,
NET_CON_SALES_PER_OF_EX#PROJ,
NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
WEIGHTED_GTN_CONTRIBUTION#ACT,
WEIGHTED_GTN_CONTRIBUTION#PROJ,
ACCURAL_DISCOUNT
)
select HIERARCHY_NO,
LEVEL_NO,
PERIOD,
YEAR,
PROJECTION_MASTER_SID,
EXFACTORY_SALES#ACT,
EXFACTORY_SALES#PROJ,
DISCOUNT_AMOUNT#ACT,
DISCOUNT_AMOUNT#PROJ,
CONTRACT_SALES#ACT,
CONTRACT_SALES#PROJ,
CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
CONTRACT_UNITS#ACT,
CONTRACT_UNITS#PROJ,
DISCOUNT_RATE#ACT,
DISCOUNT_RATE#PROJ,
RPU#ACT,
RPU#PROJ,
NET_SALES#ACT,
NET_SALES#PROJ,
CON_SALES_PER_FO_EX#ACT,
CON_SALES_PER_FO_EX#PROJ,
NET_EX_SALES#ACT,
NET_EX_SALES#PROJ,
DISC_PER_OF_EX#ACT,
DISC_PER_OF_EX#PROJ,
NET_CON_SALES_PER_OF_EX#ACT,
NET_CON_SALES_PER_OF_EX#PROJ,
NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
WEIGHTED_GTN_CONTRIBUTION#ACT,
WEIGHTED_GTN_CONTRIBUTION#PROJ,
ACCURAL_DISCOUNT from #CTE_RESU
 

INSERT INTO #VARIABLE_DATA_TABLE (
HIERARCHY_NO,
LEVEL_NO,
PERIOD,
YEAR,
PROJECTION_MASTER_SID,
EXFACTORY_SALES#ACT,
EXFACTORY_SALES#PROJ,
DISCOUNT_AMOUNT#ACT,
DISCOUNT_AMOUNT#PROJ,
CONTRACT_SALES#ACT,
CONTRACT_SALES#PROJ,
CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
CONTRACT_UNITS#ACT,
CONTRACT_UNITS#PROJ,
DISCOUNT_RATE#ACT,
DISCOUNT_RATE#PROJ,
RPU#ACT,
RPU#PROJ,
NET_SALES#ACT,
NET_SALES#PROJ,
CON_SALES_PER_FO_EX#ACT,
CON_SALES_PER_FO_EX#PROJ,
NET_EX_SALES#ACT,
NET_EX_SALES#PROJ,
DISC_PER_OF_EX#ACT,
DISC_PER_OF_EX#PROJ,
NET_CON_SALES_PER_OF_EX#ACT,
NET_CON_SALES_PER_OF_EX#PROJ,
NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
WEIGHTED_GTN_CONTRIBUTION#ACT,
WEIGHTED_GTN_CONTRIBUTION#PROJ,
ACCURAL_DISCOUNT
)
SELECT a.HIERARCHY_NO,
a.LEVEL_NO,
a.PERIOD,
a.YEAR,
a.PROJECTION_MASTER_SID,
iif(VARIABLE_COUNT < 1,coalesce(a.EXFACTORY_SALES#ACT,cs.EXFACTORY_SALES#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.EXFACTORY_SALES#PROJ,cs.EXFACTORY_SALES#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.DISCOUNT_AMOUNT#ACT,cs.DISCOUNT_AMOUNT#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.DISCOUNT_AMOUNT#PROJ,cs.DISCOUNT_AMOUNT#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CONTRACT_SALES#ACT,cs.CONTRACT_SALES#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CONTRACT_SALES#PROJ,cs.CONTRACT_SALES#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CONT_SALES_PER_OF_TOTAL_SALES#ACT,cs.CONT_SALES_PER_OF_TOTAL_SALES#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CONT_SALES_PER_OF_TOTAL_SALES#PROJ ,cs.CONT_SALES_PER_OF_TOTAL_SALES#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CONTRACT_UNITS#ACT,cs.CONTRACT_UNITS#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CONTRACT_UNITS#PROJ,cs.CONTRACT_UNITS#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.DISCOUNT_RATE#ACT,cs.DISCOUNT_RATE#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.DISCOUNT_RATE#PROJ,cs.DISCOUNT_RATE#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.RPU#ACT,cs.RPU#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.RPU#PROJ,cs.RPU#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_SALES#ACT,cs.NET_SALES#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_SALES#PROJ,cs.NET_SALES#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CON_SALES_PER_FO_EX#ACT,cs.CON_SALES_PER_FO_EX#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.CON_SALES_PER_FO_EX#PROJ,cs.CON_SALES_PER_FO_EX#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_EX_SALES#ACT,cs.NET_EX_SALES#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_EX_SALES#PROJ,cs.NET_EX_SALES#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.DISC_PER_OF_EX#ACT,cs.DISC_PER_OF_EX#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.DISC_PER_OF_EX#PROJ,cs.DISC_PER_OF_EX#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_CON_SALES_PER_OF_EX#ACT,cs.NET_CON_SALES_PER_OF_EX#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_CON_SALES_PER_OF_EX#PROJ,cs.NET_CON_SALES_PER_OF_EX#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_EXP_SALES_PER_OF_TOATL_EX#ACT,cs.NET_EXP_SALES_PER_OF_TOATL_EX#ACT),null),
iif(VARIABLE_COUNT < 1,coalesce(a.NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,cs.NET_EXP_SALES_PER_OF_TOATL_EX#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.WEIGHTED_GTN_CONTRIBUTION#ACT,cs.WEIGHTED_GTN_CONTRIBUTION#ACT),null), 
iif(VARIABLE_COUNT < 1,coalesce(a.WEIGHTED_GTN_CONTRIBUTION#PROJ,cs.WEIGHTED_GTN_CONTRIBUTION#PROJ),null),
iif(VARIABLE_COUNT < 1,coalesce(a.ACCURAL_DISCOUNT,cs.ACCURAL_DISCOUNT),null)
from #CTE_RESULT a
left join #cte_res_2 b on   b.Hierarchy_No = a.Hierarchy_No--- + '%'
and a.period=b.period
and a.year =b.year
and a.Level_No = b.Level_No
*/



UPDATE A
SET A.EXFACTORY_SALES#ACT = B.EXFACTORY_SALES#ACT,
A.EXFACTORY_SALES#PROJ = B.EXFACTORY_SALES#PROJ,
A.DISCOUNT_AMOUNT#ACT = B.DISCOUNT_AMOUNT#ACT,
A.DISCOUNT_AMOUNT#PROJ = B.DISCOUNT_AMOUNT#PROJ,
A.CONTRACT_SALES#ACT = B.CONTRACT_SALES#ACT,
A.CONTRACT_SALES#PROJ = B.CONTRACT_SALES#PROJ,
A.CONT_SALES_PER_OF_TOTAL_SALES#ACT = B.CONT_SALES_PER_OF_TOTAL_SALES#ACT,
A.CONT_SALES_PER_OF_TOTAL_SALES#PROJ = B.CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
A.CONTRACT_UNITS#ACT = B.CONTRACT_UNITS#ACT,
A.CONTRACT_UNITS#PROJ = B.CONTRACT_UNITS#PROJ,
A.DISCOUNT_RATE#ACT = B.DISCOUNT_RATE#ACT,
A.DISCOUNT_RATE#PROJ = B.DISCOUNT_RATE#PROJ,
A.RPU#ACT = B.RPU#ACT,
A.RPU#PROJ = B.RPU#PROJ,
A.NET_SALES#ACT = B.NET_SALES#ACT,
A.NET_SALES#PROJ = B.NET_SALES#PROJ,
A.CON_SALES_PER_FO_EX#ACT = B.CON_SALES_PER_FO_EX#ACT,
A.CON_SALES_PER_FO_EX#PROJ = B.CON_SALES_PER_FO_EX#PROJ,
A.NET_EX_SALES#ACT = B.NET_EX_SALES#ACT,
A.NET_EX_SALES#PROJ = B.NET_EX_SALES#PROJ,
A.DISC_PER_OF_EX#ACT = B.DISC_PER_OF_EX#ACT,
A.DISC_PER_OF_EX#PROJ = B.DISC_PER_OF_EX#PROJ,
A.NET_CON_SALES_PER_OF_EX#ACT = B.NET_CON_SALES_PER_OF_EX#ACT,
A.NET_CON_SALES_PER_OF_EX#PROJ = B.NET_CON_SALES_PER_OF_EX#PROJ,
A.NET_EXP_SALES_PER_OF_TOATL_EX#ACT = B.NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
A.NET_EXP_SALES_PER_OF_TOATL_EX#PROJ = B.NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
A.WEIGHTED_GTN_CONTRIBUTION#ACT = B.WEIGHTED_GTN_CONTRIBUTION#ACT,
A.WEIGHTED_GTN_CONTRIBUTION#PROJ = B.WEIGHTED_GTN_CONTRIBUTION#PROJ,
A.ACCURAL_DISCOUNT = B.ACCURAL_DISCOUNT
FROM #VARIABLE_DATA_TABLE A
INNER JOIN (
SELECT B.PROJECTION_MASTER_SID,
C.YEAR,
C.PERIOD,
EXFACTORY_SALES#ACT,
EXFACTORY_SALES#PROJ,
DISCOUNT_AMOUNT#ACT,
DISCOUNT_AMOUNT#PROJ,
CONTRACT_SALES#ACT,
CONTRACT_SALES#PROJ,
CONT_SALES_PER_OF_TOTAL_SALES#ACT,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ,
CONTRACT_UNITS#ACT,
CONTRACT_UNITS#PROJ,
DISCOUNT_RATE#ACT,
DISCOUNT_RATE#PROJ,
RPU#ACT,
RPU#PROJ,
NET_SALES#ACT,
NET_SALES#PROJ,
CON_SALES_PER_FO_EX#ACT,
CON_SALES_PER_FO_EX#PROJ,
NET_EX_SALES#ACT,
NET_EX_SALES#PROJ,
DISC_PER_OF_EX#ACT,
DISC_PER_OF_EX#PROJ,
NET_CON_SALES_PER_OF_EX#ACT,
NET_CON_SALES_PER_OF_EX#PROJ,
NET_EXP_SALES_PER_OF_TOATL_EX#ACT,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ,
WEIGHTED_GTN_CONTRIBUTION#ACT,
WEIGHTED_GTN_CONTRIBUTION#PROJ,
ACCURAL_DISCOUNT
FROM #VARIABLE_DATA_TABLE B
INNER JOIN #COMPARISION_REPORT_PERIOD C
ON B.PROJECTION_MASTER_SID = C.PROJECTION_MASTER_SID
AND B.YEAR = C.YEAR1
AND B.PERIOD = C.YEAR1
) B
ON A.PROJECTION_MASTER_SID = B.PROJECTION_MASTER_SID
AND A.YEAR = B.YEAR
AND A.PERIOD = B.PERIOD


  SET @SQL=Concat('
IF EXISTS (SELECT 1
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME =''', @REPORTING_TABLE, ''' 
                      AND TABLE_SCHEMA = ''DBO'')
                                    BEGIN
                        DROP TABLE ', @REPORTING_TABLE, ' 
       END
  
CREATE TABLE ', @REPORTING_TABLE, '
  (
     HIERARCHY_NO VARCHAR(8000),
--DESCRIPTION VARCHAR(100),
--VARIABLE_COUNT INT,
LEVEL_NO INT,
PERIOD SMALLINT,
YEAR SMALLINT 
  ) 
  ')
  EXEC sp_executesql @SQL 
 
DECLARE @SCRIPT_PREPARE  NVARCHAR(MAX);

DECLARE @COUNT INT
SELECT @COUNT=MAX(ID) FROM #PROJECTION_MASTER
 SET @SCRIPT_PREPARE = (SELECT  'ALTER TABLE '+@REPORTING_TABLE+' ADD  '+ COLUMN_NAME + ' NUMERIC(38,6) ; '
                                 FROM    #COLUMNS_TABLE 
order by row_no
                                 FOR XML PATH (''))

 EXEC sp_executesql @SCRIPT_PREPARE


 DECLARE @COLUMNS NVARCHAR(MAX)
SELECT @COLUMNS =STUFF((SELECT  ',' + COLUMN_NAME 
                     FROM    #COLUMNS_TABLE where id<=@COUNT
order by row_no
                                 FOR XML PATH (''), TYPE
            ).value('.', 'NVARCHAR(MAX)') 
        ,1,1,'')
DECLARE @SQL1      NVARCHAR(MAX),
              @LOOP_CNTR INT,
              @MAX_CCP   INT

      SET @SQL1 = '
INSERT INTO ' + @REPORTING_TABLE + ' with (tablock)(
HIERARCHY_NO ,
--DESCRIPTION ,
--VARIABLE_COUNT ,
LEVEL_NO,
PERIOD ,
YEAR ,
'+ @COLUMNS +'
)
SELECT HIERARCHY_NO,
--DESCRIPTION,
--VARIABLE_COUNT,
LEVEL_NO,
PERIOD,
YEAR,'
      SET @LOOP_CNTR = 1
      SET @MAX_CCP = (SELECT MAX(ID)
                      FROM   #PROJECTION_MASTER)

      WHILE @LOOP_CNTR <= @MAX_CCP
        BEGIN
            IF @LOOP_CNTR = 1
              BEGIN
                  SET @SQL1 += 'EXFACTORY_SALES#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN EXFACTORY_SALES#ACT END), 
   EXFACTORY_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN EXFACTORY_SALES#PROJ END),
   DISCOUNT_AMOUNT#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISCOUNT_AMOUNT#ACT END), 
   DISCOUNT_AMOUNT#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISCOUNT_AMOUNT#PROJ END),
   CONTRACT_SALES#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONTRACT_SALES#ACT END), 
   CONTRACT_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONTRACT_SALES#PROJ END),
   CONT_SALES_PER_OF_TOTAL_SALES#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONT_SALES_PER_OF_TOTAL_SALES#ACT END), 
   CONT_SALES_PER_OF_TOTAL_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ END),
   CONTRACT_UNITS#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONTRACT_UNITS#ACT END), 
   CONTRACT_UNITS#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONTRACT_UNITS#PROJ END),
   DISCOUNT_RATE#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISCOUNT_RATE#ACT END), 
   DISCOUNT_RATE#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISCOUNT_RATE#PROJ END),
   RPU#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN RPU#ACT END), 
   RPU#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN RPU#PROJ END),
   NET_SALES#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_SALES#ACT END), 
   NET_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_SALES#PROJ END),
   CON_SALES_PER_FO_EX#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CON_SALES_PER_FO_EX#ACT END), 
   CON_SALES_PER_FO_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CON_SALES_PER_FO_EX#PROJ END),
   NET_EX_SALES#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_EX_SALES#ACT END), 
   NET_EX_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_EX_SALES#PROJ END),
   DISC_PER_OF_EX#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISC_PER_OF_EX#ACT END), 
   DISC_PER_OF_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISC_PER_OF_EX#PROJ END),
   NET_CON_SALES_PER_OF_EX#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_CON_SALES_PER_OF_EX#ACT END), 
   NET_CON_SALES_PER_OF_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_CON_SALES_PER_OF_EX#PROJ END),
   NET_EXP_SALES_PER_OF_TOATL_EX#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_EXP_SALES_PER_OF_TOATL_EX#ACT END), 
   NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ END),
   WEIGHTED_GTN_CONTRIBUTION#ACT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN WEIGHTED_GTN_CONTRIBUTION#ACT END), 
   WEIGHTED_GTN_CONTRIBUTION#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN WEIGHTED_GTN_CONTRIBUTION#PROJ END),
ACCURAL_DISCOUNT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN ACCURAL_DISCOUNT END),'
              END
            ELSE
              BEGIN
                  SET @SQL1 +=  'EXFACTORY_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN EXFACTORY_SALES#PROJ END),
  DISCOUNT_AMOUNT#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISCOUNT_AMOUNT#PROJ END),
  CONTRACT_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONTRACT_SALES#PROJ END),
  CONT_SALES_PER_OF_TOTAL_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ END),
  CONTRACT_UNITS#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CONTRACT_UNITS#PROJ END),
  DISCOUNT_RATE#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISCOUNT_RATE#PROJ END),
  RPU#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN RPU#PROJ END),
  NET_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_SALES#PROJ END),
  CON_SALES_PER_FO_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN CON_SALES_PER_FO_EX#PROJ END),
  NET_EX_SALES#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_EX_SALES#PROJ END),
  DISC_PER_OF_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN DISC_PER_OF_EX#PROJ END),
  NET_CON_SALES_PER_OF_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_CON_SALES_PER_OF_EX#PROJ END),
  NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ END),
  WEIGHTED_GTN_CONTRIBUTION#PROJ_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN WEIGHTED_GTN_CONTRIBUTION#PROJ END),
  ACCURAL_DISCOUNT_'
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + ' = SUM(CASE WHEN ID = '
                               + Cast(@LOOP_CNTR AS VARCHAR(10))
                               + 'THEN ACCURAL_DISCOUNT END),'
              END

            SET @LOOP_CNTR += 1
        END

      SET @SQL1 = LEFT(@SQL1, Len(@SQL1) - 1)
  

  SET @SQL1 += ' FROM  #VARIABLE_DATA_TABLE PR
               INNER JOIN #PROJECTION_MASTER PM
                       ON PR.PROJECTION_MASTER_SID = PM.PROJECTION_MASTER_SID
                                  GROUP  BY HIERARCHY_NO,
--DESCRIPTION,
--VARIABLE_COUNT,
LEVEL_NO,
PERIOD,
YEAR
                                  ORDER BY [YEAR],PERIOD'

          EXEC Sp_executesql
            @SQL1

SET @SQL1=''
DECLARE @SQL2 NVARCHAR(MAX)
DECLARE @SQL3 NVARCHAR(MAX)
DECLARE @SQL4 NVARCHAR(MAX)
DECLARE @SQL5  NVARCHAR(MAX)
DECLARE @SQL6  NVARCHAR(MAX)
DECLARE @SQL7  NVARCHAR(MAX)


SET @SQL1 = CONCAT(@SQL1 ,'
SELECT HIERARCHY_NO,
LEVEL_NO,
PERIOD,
YEAR,
EXFACTORY_SALES#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_6
END EXFACTORY_SALES#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_6
END EXFACTORY_SALES#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_1) / NULLIF(EXFACTORY_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_2) / NULLIF(EXFACTORY_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_3) / NULLIF(EXFACTORY_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_4) / NULLIF(EXFACTORY_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_5) / NULLIF(EXFACTORY_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_6) / NULLIF(EXFACTORY_SALES#PROJ_6, 0)
END *100 EXFACTORY_SALES#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#ACT_1) / NULLIF(EXFACTORY_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (EXFACTORY_SALES#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_2) / NULLIF(EXFACTORY_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''                                    
THEN (EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_3) / NULLIF(EXFACTORY_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                    
THEN (EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_4) / NULLIF(EXFACTORY_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                    
THEN (EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_5) / NULLIF(EXFACTORY_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                    
THEN (EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_6) / NULLIF(EXFACTORY_SALES#PROJ_6, 0)
END*100 EXFACTORY_SALES#PROJ_PER_CHANGE_1,
EXFACTORY_SALES#ACT_1 AS EXFACTORY_SALES#ACTUAL_VALUE_1,
NULL AS EXFACTORY_SALES#ACCRUAL_1,
    DISCOUNT_AMOUNT#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_2
WHEN ''PROJECTION_3''
THEN DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_6
END DISCOUNT_AMOUNT#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_AMOUNT#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_2
WHEN ''PROJECTION_3''
THEN DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_6
END DISCOUNT_AMOUNT#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_1) / NULLIF(DISCOUNT_AMOUNT#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_2) / NULLIF(DISCOUNT_AMOUNT#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_3) / NULLIF(DISCOUNT_AMOUNT#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_4) / NULLIF(DISCOUNT_AMOUNT#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_5) / NULLIF(DISCOUNT_AMOUNT#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_AMOUNT#ACT_1 - DISCOUNT_AMOUNT#PROJ_6) / NULLIF(DISCOUNT_AMOUNT#PROJ_6, 0)
END*100 DISCOUNT_AMOUNT#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#ACT_1) / NULLIF(DISCOUNT_AMOUNT#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_AMOUNT#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_2) / NULLIF(DISCOUNT_AMOUNT#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_3) / NULLIF(DISCOUNT_AMOUNT#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_4) / NULLIF(DISCOUNT_AMOUNT#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_5) / NULLIF(DISCOUNT_AMOUNT#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_AMOUNT#PROJ_1 - DISCOUNT_AMOUNT#PROJ_6) / NULLIF(DISCOUNT_AMOUNT#PROJ_6, 0)
END*100 DISCOUNT_AMOUNT#PROJ_PER_CHANGE_1,
DISCOUNT_AMOUNT#ACT_1 AS DISCOUNT_AMOUNT#ACTUAL_VALUE_1,
NULL AS DISCOUNT_AMOUNT#ACCRUAL_1,
CONTRACT_SALES#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_6
END CONTRACT_SALES#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_SALES#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_6
END CONTRACT_SALES#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_1) / NULLIF(CONTRACT_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_2) / NULLIF(CONTRACT_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_3) / NULLIF(CONTRACT_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_4) / NULLIF(CONTRACT_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_5) / NULLIF(CONTRACT_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_SALES#ACT_1 - CONTRACT_SALES#PROJ_6) / NULLIF(CONTRACT_SALES#PROJ_6, 0)
END*100 CONTRACT_SALES#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#ACT_1) / NULLIF(CONTRACT_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_SALES#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_2) / NULLIF(CONTRACT_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_3) / NULLIF(CONTRACT_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_4) / NULLIF(CONTRACT_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_5) / NULLIF(CONTRACT_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_SALES#PROJ_1 - CONTRACT_SALES#PROJ_6) / NULLIF(CONTRACT_SALES#PROJ_6, 0)
END*100 CONTRACT_SALES#PROJ_PER_CHANGE_1,
CONTRACT_SALES#ACT_1 AS CONTRACT_SALES#ACTUAL_VALUE_1,
NULL AS CONTRACT_SALES#ACCRUAL_1,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6
END CONT_SALES_PER_OF_TOTAL_SALES#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ_VARIANCE_1,

CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6, 0)
END*100 CONT_SALES_PER_OF_TOTAL_SALES#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6, 0)
END*100 CONT_SALES_PER_OF_TOTAL_SALES#PROJ_PER_CHANGE_1,
CONT_SALES_PER_OF_TOTAL_SALES#ACT_1 AS CONT_SALES_PER_OF_TOTAL_SALES#ACTUAL_VALUE_1,
NULL AS CONT_SALES_PER_OF_TOTAL_SALES#ACCRUAL_1,

CONTRACT_UNITS#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_2
WHEN ''PROJECTION_3''
THEN CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_6
END CONTRACT_UNITS#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_UNITS#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_2
WHEN ''PROJECTION_3''
THEN CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_6
END CONTRACT_UNITS#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_1) / NULLIF(CONTRACT_UNITS#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_2) / NULLIF(CONTRACT_UNITS#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_3) / NULLIF(CONTRACT_UNITS#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_4) / NULLIF(CONTRACT_UNITS#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_5) / NULLIF(CONTRACT_UNITS#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_UNITS#ACT_1 - CONTRACT_UNITS#PROJ_6) / NULLIF(CONTRACT_UNITS#PROJ_6, 0)
END*100 CONTRACT_UNITS#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#ACT_1) / NULLIF(CONTRACT_UNITS#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_UNITS#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_2) / NULLIF(CONTRACT_UNITS#PROJ_2, 0)
WHEN ''PROJECTION_3''                                  
THEN (CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_3) / NULLIF(CONTRACT_UNITS#PROJ_3, 0)
WHEN ''PROJECTION_4''                                  
THEN (CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_4) / NULLIF(CONTRACT_UNITS#PROJ_4, 0)
WHEN ''PROJECTION_5''                                  
THEN (CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_5) / NULLIF(CONTRACT_UNITS#PROJ_5, 0)
WHEN ''PROJECTION_6''                                  
THEN (CONTRACT_UNITS#PROJ_1 - CONTRACT_UNITS#PROJ_6) / NULLIF(CONTRACT_UNITS#PROJ_6, 0)
END*100 CONTRACT_UNITS#PROJ_PER_CHANGE_1,
CONTRACT_UNITS#ACT_1 AS CONTRACT_UNITS#ACTUAL_VALUE_1,
NULL AS CONTRACT_UNITS#ACCRUAL_1,
DISCOUNT_RATE#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_2
WHEN ''PROJECTION_3''
THEN DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_6
END DISCOUNT_RATE#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_RATE#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_2
WHEN ''PROJECTION_3''
THEN DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_6
END DISCOUNT_RATE#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_1) / NULLIF(DISCOUNT_RATE#PROJ_1, 0)
WHEN ''PROJECTION_2''                                                          
THEN (DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_2) / NULLIF(DISCOUNT_RATE#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                          
THEN (DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_3) / NULLIF(DISCOUNT_RATE#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                          
THEN (DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_4) / NULLIF(DISCOUNT_RATE#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                          
THEN (DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_5) / NULLIF(DISCOUNT_RATE#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                          
THEN (DISCOUNT_RATE#ACT_1 - DISCOUNT_RATE#PROJ_6) / NULLIF(DISCOUNT_RATE#PROJ_6, 0)
END*100 DISCOUNT_RATE#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#ACT_1) / NULLIF(DISCOUNT_RATE#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_RATE#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_2) / NULLIF(DISCOUNT_RATE#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_3) / NULLIF(DISCOUNT_RATE#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_4) / NULLIF(DISCOUNT_RATE#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_5) / NULLIF(DISCOUNT_RATE#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_RATE#PROJ_1 - DISCOUNT_RATE#PROJ_6) / NULLIF(DISCOUNT_RATE#PROJ_6, 0)
END*100 DISCOUNT_RATE#PROJ_PER_CHANGE_1,
DISCOUNT_RATE#ACT_1 AS DISCOUNT_RATE#ACTUAL_VALUE_1,
NULL AS DISCOUNT_RATE#ACCRUAL_1,
RPU#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN RPU#ACT_1 - RPU#PROJ_1
WHEN ''PROJECTION_2''
THEN RPU#ACT_1 - RPU#PROJ_2
WHEN ''PROJECTION_3''
THEN RPU#ACT_1 - RPU#PROJ_3
WHEN ''PROJECTION_4''
THEN RPU#ACT_1 - RPU#PROJ_4
WHEN ''PROJECTION_5''
THEN RPU#ACT_1 - RPU#PROJ_5
WHEN ''PROJECTION_6''
THEN RPU#ACT_1 - RPU#PROJ_6
END RPU#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN RPU#PROJ_1 - RPU#ACT_1
WHEN ''ACCRUALS''
THEN RPU#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN RPU#PROJ_1 - RPU#PROJ_2
WHEN ''PROJECTION_3''
THEN RPU#PROJ_1 - RPU#PROJ_3
WHEN ''PROJECTION_4''
THEN RPU#PROJ_1 - RPU#PROJ_4
WHEN ''PROJECTION_5''
THEN RPU#PROJ_1 - RPU#PROJ_5
WHEN ''PROJECTION_6''
THEN RPU#PROJ_1 - RPU#PROJ_6
END RPU#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (RPU#ACT_1 - RPU#PROJ_1) / NULLIF(RPU#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (RPU#ACT_1 - RPU#PROJ_2) / NULLIF(RPU#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (RPU#ACT_1 - RPU#PROJ_3) / NULLIF(RPU#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (RPU#ACT_1 - RPU#PROJ_4) / NULLIF(RPU#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (RPU#ACT_1 - RPU#PROJ_5) / NULLIF(RPU#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (RPU#ACT_1 - RPU#PROJ_6) / NULLIF(RPU#PROJ_6, 0)
END*100 RPU#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (RPU#PROJ_1 - RPU#ACT_1) / NULLIF(RPU#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (RPU#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (RPU#PROJ_1 - RPU#PROJ_2) / NULLIF(RPU#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN (RPU#PROJ_1 - RPU#PROJ_3) / NULLIF(RPU#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (RPU#PROJ_1 - RPU#PROJ_4) / NULLIF(RPU#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (RPU#PROJ_1 - RPU#PROJ_5) / NULLIF(RPU#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (RPU#PROJ_1 - RPU#PROJ_6) / NULLIF(RPU#PROJ_6, 0)
END*100 RPU#PROJ_PER_CHANGE_1,
RPU#ACT_1 AS RPU#ACTUAL_VALUE_1,
NULL AS RPU#ACCRUAL_1,


NET_SALES#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN NET_SALES#ACT_1 - NET_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_SALES#ACT_1 - NET_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_SALES#ACT_1 - NET_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_SALES#ACT_1 - NET_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_SALES#ACT_1 - NET_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_SALES#ACT_1 - NET_SALES#PROJ_6
END NET_SALES#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_SALES#PROJ_1 - NET_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_SALES#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_6
END NET_SALES#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (NET_SALES#ACT_1 - NET_SALES#PROJ_1) / NULLIF(NET_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''                                        
THEN (NET_SALES#ACT_1 - NET_SALES#PROJ_2) / NULLIF(NET_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''                                        
THEN (NET_SALES#ACT_1 - NET_SALES#PROJ_3) / NULLIF(NET_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                        
THEN (NET_SALES#ACT_1 - NET_SALES#PROJ_4) / NULLIF(NET_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                        
THEN (NET_SALES#ACT_1 - NET_SALES#PROJ_5) / NULLIF(NET_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                        
THEN (NET_SALES#ACT_1 - NET_SALES#PROJ_6) / NULLIF(NET_SALES#PROJ_6, 0)
END*100 NET_SALES#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_SALES#PROJ_1 - NET_SALES#ACT_1) / NULLIF(NET_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_SALES#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_2) / NULLIF(NET_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_3) / NULLIF(NET_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_4) / NULLIF(NET_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_5) / NULLIF(NET_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_6) / NULLIF(NET_SALES#PROJ_6, 0)
END*100 NET_SALES#PROJ_PER_CHANGE_1,
NET_SALES#ACT_1 AS NET_SALES#ACTUAL_VALUE_1,
NULL AS NET_SALES#ACCRUAL_1,

CON_SALES_PER_FO_EX#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN CON_SALES_PER_FO_EX#ACT_1 - CON_SALES_PER_FO_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN CON_SALES_PER_FO_EX#ACT_1 - CON_SALES_PER_FO_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN CON_SALES_PER_FO_EX#ACT_1 - CON_SALES_PER_FO_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN CON_SALES_PER_FO_EX#ACT_1 - CON_SALES_PER_FO_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN CON_SALES_PER_FO_EX#ACT_1 - CON_SALES_PER_FO_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN CON_SALES_PER_FO_EX#ACT_1 - CON_SALES_PER_FO_EX#PROJ_6
END CON_SALES_PER_FO_EX#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#ACT_1
WHEN ''ACCRUALS''
THEN CON_SALES_PER_FO_EX#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_6
END CON_SALES_PER_FO_EX#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (CON_SALES_PER_FO_EX#ACT_1 - NET_SALES#PROJ_1) / NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''PROJECTION_2''
THEN (CON_SALES_PER_FO_EX#ACT_1 - NET_SALES#PROJ_2) / NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''PROJECTION_3''
THEN (CON_SALES_PER_FO_EX#ACT_1 - NET_SALES#PROJ_3) / NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''PROJECTION_4''
THEN (CON_SALES_PER_FO_EX#ACT_1 - NET_SALES#PROJ_4) / NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''PROJECTION_5''
THEN (CON_SALES_PER_FO_EX#ACT_1 - NET_SALES#PROJ_5) / NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''PROJECTION_6''
THEN (CON_SALES_PER_FO_EX#ACT_1 - NET_SALES#PROJ_6) / NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
END*100 CON_SALES_PER_FO_EX#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#ACT_1) / NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_2) / NULLIF(CON_SALES_PER_FO_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                   
THEN (CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_3) / NULLIF(CON_SALES_PER_FO_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                   
THEN (CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_4) / NULLIF(CON_SALES_PER_FO_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                   
THEN (CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_5) / NULLIF(CON_SALES_PER_FO_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                   
THEN (CON_SALES_PER_FO_EX#PROJ_1 - CON_SALES_PER_FO_EX#PROJ_6) / NULLIF(CON_SALES_PER_FO_EX#PROJ_6, 0)
END*100 CON_SALES_PER_FO_EX#PROJ_PER_CHANGE_1,
CON_SALES_PER_FO_EX#ACT_1 AS CON_SALES_PER_FO_EX#ACTUAL_VALUE_1,
NULL AS CON_SALES_PER_FO_EX#ACCRUAL_1,
NET_EX_SALES#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN NET_EX_SALES#ACT_1 - NET_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EX_SALES#ACT_1 - NET_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_EX_SALES#ACT_1 - NET_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EX_SALES#ACT_1 - NET_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EX_SALES#ACT_1 - NET_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EX_SALES#ACT_1 - NET_SALES#PROJ_6
END NET_EX_SALES#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_SALES#PROJ_1 - NET_EX_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_SALES#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_SALES#PROJ_1 - NET_SALES#PROJ_6
END NET_EX_SALES#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (NET_EX_SALES#ACT_1 - NET_SALES#PROJ_1) / NULLIF(NET_EX_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''                                              
THEN (NET_EX_SALES#ACT_1 - NET_SALES#PROJ_2) / NULLIF(NET_EX_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''                                              
THEN (NET_EX_SALES#ACT_1 - NET_SALES#PROJ_3) / NULLIF(NET_EX_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                              
THEN (NET_EX_SALES#ACT_1 - NET_SALES#PROJ_4) / NULLIF(NET_EX_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                              
THEN (NET_EX_SALES#ACT_1 - NET_SALES#PROJ_5) / NULLIF(NET_EX_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                              
THEN (NET_EX_SALES#ACT_1 - NET_SALES#PROJ_6) / NULLIF(NET_EX_SALES#PROJ_6, 0)
END*100 NET_EX_SALES#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_SALES#PROJ_1 - NET_EX_SALES#ACT_1) / NULLIF(NET_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_SALES#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_2) / NULLIF(NET_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_3) / NULLIF(NET_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_4) / NULLIF(NET_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_5) / NULLIF(NET_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                         
THEN (NET_SALES#PROJ_1 - NET_SALES#PROJ_6) / NULLIF(NET_SALES#PROJ_6, 0)
END*100 NET_EX_SALES#PROJ_PER_CHANGE_1,
NET_EX_SALES#ACT_1 AS NET_EX_SALES#ACTUAL_VALUE_1,
NULL AS NET_EX_SALES#ACCRUAL_1,

DISC_PER_OF_EX#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_6
END DISC_PER_OF_EX#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_6
END DISC_PER_OF_EX#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (DISC_PER_OF_EX#ACT_1 - NET_SALES#PROJ_1) / NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''PROJECTION_2''
THEN (DISC_PER_OF_EX#ACT_1 - NET_SALES#PROJ_2) / NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''PROJECTION_3''
THEN (DISC_PER_OF_EX#ACT_1 - NET_SALES#PROJ_3) / NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''PROJECTION_4''
THEN (DISC_PER_OF_EX#ACT_1 - NET_SALES#PROJ_4) / NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''PROJECTION_5''
THEN (DISC_PER_OF_EX#ACT_1 - NET_SALES#PROJ_5) / NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''PROJECTION_6''
THEN (DISC_PER_OF_EX#ACT_1 - NET_SALES#PROJ_6) / NULLIF(DISC_PER_OF_EX#ACT_1, 0)
END*100 DISC_PER_OF_EX#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#ACT_1) / NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISC_PER_OF_EX#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_2) / NULLIF(DISC_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''                                         
THEN (DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_3) / NULLIF(DISC_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                         
THEN (DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_4) / NULLIF(DISC_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                         
THEN (DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_5) / NULLIF(DISC_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                         
THEN (DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_6) / NULLIF(DISC_PER_OF_EX#PROJ_6, 0)
END*100 DISC_PER_OF_EX#PROJ_PER_CHANGE_1,
DISC_PER_OF_EX#ACT_1 AS DISC_PER_OF_EX#ACTUAL_VALUE_1,
NULL AS DISC_PER_OF_EX#ACCRUAL_1,
NET_CON_SALES_PER_OF_EX#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_6
END NET_CON_SALES_PER_OF_EX#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_6
END NET_CON_SALES_PER_OF_EX#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_1) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''                                                          
THEN (NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_2) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                          
THEN (NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_3) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                          
THEN (NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_4) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                          
THEN (NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_5) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                          
THEN (NET_CON_SALES_PER_OF_EX#ACT_1 - NET_CON_SALES_PER_OF_EX#PROJ_6) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_6, 0)
END*100 NET_CON_SALES_PER_OF_EX#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#ACT_1) / NULLIF(NET_CON_SALES_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_2) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                           
THEN (NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_3) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                           
THEN (NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_4) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                           
THEN (NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_5) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                           
THEN (NET_CON_SALES_PER_OF_EX#PROJ_1 - NET_CON_SALES_PER_OF_EX#PROJ_6) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_6, 0)
END*100 NET_CON_SALES_PER_OF_EX#PROJ_PER_CHANGE_1,
NET_CON_SALES_PER_OF_EX#ACT_1 AS NET_CON_SALES_PER_OF_EX#ACTUAL_VALUE_1,
NULL AS NET_CON_SALES_PER_OF_EX#ACCRUAL_1,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6
END NET_EXP_SALES_PER_OF_TOATL_EX#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''                                                                      
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                                      
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                                      
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                                      
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                                      
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6, 0)
END*100 NET_EXP_SALES_PER_OF_TOATL_EX#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                                       
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                                       
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                                       
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                                       
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6, 0)
END*100 NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_PER_CHANGE_1,
NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1 AS NET_EXP_SALES_PER_OF_TOATL_EX#ACTUAL_VALUE_1,
NULL AS NET_EXP_SALES_PER_OF_TOATL_EX#ACCRUAL_1,
WEIGHTED_GTN_CONTRIBUTION#PROJ_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1
WHEN ''PROJECTION_2''
THEN WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2
WHEN ''PROJECTION_3''
THEN WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3
WHEN ''PROJECTION_4''
THEN WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4
WHEN ''PROJECTION_5''
THEN WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5
WHEN ''PROJECTION_6''
THEN WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6
END WEIGHTED_GTN_CONTRIBUTION#ACT_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#ACT_1
WHEN ''ACCRUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2
WHEN ''PROJECTION_3''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3
WHEN ''PROJECTION_4''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4
WHEN ''PROJECTION_5''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5
WHEN ''PROJECTION_6''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6
END WEIGHTED_GTN_CONTRIBUTION#PROJ_VARIANCE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN (WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_1, 0)
WHEN ''PROJECTION_2''                                                              
THEN (WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                              
THEN (WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                              
THEN (WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                              
THEN (WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                              
THEN (WEIGHTED_GTN_CONTRIBUTION#ACT_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_6, 0)
END*100  WEIGHTED_GTN_CONTRIBUTION#ACT_PER_CHANGE_1,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#ACT_1) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - ACCURAL_DISCOUNT_1) / NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_2, 0)
WHEN ''PROJECTION_3''                                                               
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                               
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                               
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                               
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_1 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_6, 0)
END*100  WEIGHTED_GTN_CONTRIBUTION#PROJ_PER_CHANGE_1,
WEIGHTED_GTN_CONTRIBUTION#ACT_1 AS WEIGHTED_GTN_CONTRIBUTION#ACTUAL_VALUE_1,
NULL AS WEIGHTED_GTN_CONTRIBUTION#ACCRUAL_1,
')
--DISC_PER_OF_EX#PROJ_VARIANCE_1,
DECLARE @sql11_1 nvarchar(max)=''
set @sql11_1=concat('','(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_6
END ) * (DISC_PER_OF_EX#ACT_1) AS ACT_VOLUME_1
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_6
END ) * (DISC_PER_OF_EX#PROJ_1) AS VOLUME_1
,EXFACTORY_SALES#ACT_1 * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_6
END)*100  AS ACT_RATE_1
,EXFACTORY_SALES#PROJ_1 * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_6
END )*100  AS RATE_1
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#ACT_1 - EXFACTORY_SALES#PROJ_6
END ) * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NULL
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#ACT_1 - DISC_PER_OF_EX#PROJ_6
END)*100  AS ACT_CHANGEINCHANGE_1
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_1 - EXFACTORY_SALES#PROJ_6
END ) * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_1 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NULL
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_1 - DISC_PER_OF_EX#PROJ_6
END )*100  AS CHANGEINCHANGE_1,')

set @sql2=''
set @sql2=concat(@sql2,'EXFACTORY_SALES#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_6
END EXFACTORY_SALES#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#ACT_1)/ NULLIF(EXFACTORY_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (EXFACTORY_SALES#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_1) / NULLIF(EXFACTORY_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_3) / NULLIF(EXFACTORY_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                           
THEN (EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_4) / NULLIF(EXFACTORY_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                           
THEN (EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_5) / NULLIF(EXFACTORY_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                           
THEN (EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_6) / NULLIF(EXFACTORY_SALES#PROJ_6, 0)
END*100  EXFACTORY_SALES#PROJ_PER_CHANGE_2,

DISCOUNT_AMOUNT#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_AMOUNT#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_6
END DISCOUNT_AMOUNT#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#ACT_1)/ NULLIF(DISCOUNT_AMOUNT#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_AMOUNT#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_1) / NULLIF(DISCOUNT_AMOUNT#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_3) / NULLIF(DISCOUNT_AMOUNT#PROJ_3, 0)
WHEN ''PROJECTION_4''                                           
THEN (DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_4) / NULLIF(DISCOUNT_AMOUNT#PROJ_4, 0)
WHEN ''PROJECTION_5''                                           
THEN (DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_5) / NULLIF(DISCOUNT_AMOUNT#PROJ_5, 0)
WHEN ''PROJECTION_6''                                           
THEN (DISCOUNT_AMOUNT#PROJ_2 - DISCOUNT_AMOUNT#PROJ_6) / NULLIF(DISCOUNT_AMOUNT#PROJ_6, 0)
END*100  DISCOUNT_AMOUNT#PROJ_PER_CHANGE_2,
CONTRACT_SALES#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_6
END CONTRACT_SALES#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#ACT_1)/ NULLIF(CONTRACT_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_SALES#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_1) / NULLIF(CONTRACT_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_3) / NULLIF(CONTRACT_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                         
THEN (CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_4) / NULLIF(CONTRACT_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                         
THEN (CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_5) / NULLIF(CONTRACT_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                         
THEN (CONTRACT_SALES#PROJ_2 - CONTRACT_SALES#PROJ_6) / NULLIF(CONTRACT_SALES#PROJ_6, 0)
END*100  CONTRACT_SALES#PROJ_PER_CHANGE_2,
CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1)/ NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                                       
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                                       
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                                       
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6, 0)
END*100  CONT_SALES_PER_OF_TOTAL_SALES#PROJ_PER_CHANGE_2,
CONTRACT_UNITS#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_UNITS#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_6
END CONTRACT_UNITS#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#ACT_1)/ NULLIF(CONTRACT_UNITS#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_UNITS#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_1) / NULLIF(CONTRACT_UNITS#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_3) / NULLIF(CONTRACT_UNITS#PROJ_3, 0)
WHEN ''PROJECTION_4''                                         
THEN (CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_4) / NULLIF(CONTRACT_UNITS#PROJ_4, 0)
WHEN ''PROJECTION_5''                                         
THEN (CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_5) / NULLIF(CONTRACT_UNITS#PROJ_5, 0)
WHEN ''PROJECTION_6''                                         
THEN (CONTRACT_UNITS#PROJ_2 - CONTRACT_UNITS#PROJ_6) / NULLIF(CONTRACT_UNITS#PROJ_6, 0)
END*100  CONTRACT_UNITS#PROJ_PER_CHANGE_2,
DISCOUNT_RATE#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_RATE#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_6
END DISCOUNT_RATE#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#ACT_1)/ NULLIF(DISCOUNT_RATE#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_RATE#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_1) / NULLIF(DISCOUNT_RATE#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_3) / NULLIF(DISCOUNT_RATE#PROJ_3, 0)
WHEN ''PROJECTION_4''                                       
THEN (DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_4) / NULLIF(DISCOUNT_RATE#PROJ_4, 0)
WHEN ''PROJECTION_5''                                       
THEN (DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_5) / NULLIF(DISCOUNT_RATE#PROJ_5, 0)
WHEN ''PROJECTION_6''                                       
THEN (DISCOUNT_RATE#PROJ_2 - DISCOUNT_RATE#PROJ_6) / NULLIF(DISCOUNT_RATE#PROJ_6, 0)
END*100  DISCOUNT_RATE#PROJ_PER_CHANGE_2,
RPU#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN RPU#PROJ_2 - RPU#ACT_1
WHEN ''ACCRUALS''
THEN RPU#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN RPU#PROJ_2 - RPU#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN RPU#PROJ_2 - RPU#PROJ_3
WHEN ''PROJECTION_4''
THEN RPU#PROJ_2 - RPU#PROJ_4
WHEN ''PROJECTION_5''
THEN RPU#PROJ_2 - RPU#PROJ_5
WHEN ''PROJECTION_6''
THEN RPU#PROJ_2 - RPU#PROJ_6
END RPU#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (RPU#PROJ_2 - RPU#ACT_1)/ NULLIF(RPU#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (RPU#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (RPU#PROJ_2 - RPU#PROJ_1) / NULLIF(RPU#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (RPU#PROJ_2 - RPU#PROJ_3) / NULLIF(RPU#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (RPU#PROJ_2 - RPU#PROJ_4) / NULLIF(RPU#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (RPU#PROJ_2 - RPU#PROJ_5) / NULLIF(RPU#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (RPU#PROJ_2 - RPU#PROJ_6) / NULLIF(RPU#PROJ_6, 0)
END*100  RPU#PROJ_PER_CHANGE_2,
NET_SALES#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_SALES#PROJ_2 - NET_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_SALES#PROJ_2 - NET_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_SALES#PROJ_2 - NET_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_SALES#PROJ_2 - NET_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_SALES#PROJ_2 - NET_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_SALES#PROJ_2 - NET_SALES#PROJ_6
END NET_SALES#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_SALES#PROJ_2 - NET_SALES#ACT_1)/ NULLIF(NET_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_SALES#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_SALES#PROJ_2 - NET_SALES#PROJ_1) / NULLIF(NET_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_SALES#PROJ_2 - NET_SALES#PROJ_3) / NULLIF(NET_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_SALES#PROJ_2 - NET_SALES#PROJ_4) / NULLIF(NET_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_SALES#PROJ_2 - NET_SALES#PROJ_5) / NULLIF(NET_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_SALES#PROJ_2 - NET_SALES#PROJ_6) / NULLIF(NET_SALES#PROJ_6, 0)
END*100  NET_SALES#PROJ_PER_CHANGE_2,
CON_SALES_PER_FO_EX#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#ACT_1
WHEN ''ACCRUALS''
THEN CON_SALES_PER_FO_EX#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_6
END CON_SALES_PER_FO_EX#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#ACT_1)/ NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_1) / NULLIF(CON_SALES_PER_FO_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_3) / NULLIF(CON_SALES_PER_FO_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                   
THEN (CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_4) / NULLIF(CON_SALES_PER_FO_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                   
THEN (CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_5) / NULLIF(CON_SALES_PER_FO_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                   
THEN (CON_SALES_PER_FO_EX#PROJ_2 - CON_SALES_PER_FO_EX#PROJ_6) / NULLIF(CON_SALES_PER_FO_EX#PROJ_6, 0)
END*100  CON_SALES_PER_FO_EX#PROJ_PER_CHANGE_2,
NET_EX_SALES#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EX_SALES#PROJ_2 - NET_EX_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_EX_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_6
END NET_EX_SALES#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EX_SALES#PROJ_2 - NET_EX_SALES#ACT_1)/ NULLIF(NET_EX_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EX_SALES#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_1) / NULLIF(NET_EX_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_3) / NULLIF(NET_EX_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''                                     
THEN (NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_4) / NULLIF(NET_EX_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                     
THEN (NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_5) / NULLIF(NET_EX_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                     
THEN (NET_EX_SALES#PROJ_2 - NET_EX_SALES#PROJ_6) / NULLIF(NET_EX_SALES#PROJ_6, 0)
END*100  NET_EX_SALES#PROJ_PER_CHANGE_2,

DISC_PER_OF_EX#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_EX_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_6
END DISC_PER_OF_EX#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#ACT_1)/ NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISC_PER_OF_EX#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_1) / NULLIF(DISC_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_3) / NULLIF(DISC_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                         
THEN (DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_4) / NULLIF(DISC_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                         
THEN (DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_5) / NULLIF(DISC_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                         
THEN (DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_6) / NULLIF(DISC_PER_OF_EX#PROJ_6, 0)
END*100  DISC_PER_OF_EX#PROJ_PER_CHANGE_2,
NET_CON_SALES_PER_OF_EX#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_6
END NET_CON_SALES_PER_OF_EX#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#ACT_1)/ NULLIF(NET_CON_SALES_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_1) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_3) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                           
THEN (NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_4) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                           
THEN (NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_5) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                           
THEN (NET_CON_SALES_PER_OF_EX#PROJ_2 - NET_CON_SALES_PER_OF_EX#PROJ_6) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_6, 0)
END*100  NET_CON_SALES_PER_OF_EX#PROJ_PER_CHANGE_2,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1)/ NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                                       
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                                       
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                                       
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6, 0)
END*100  NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_PER_CHANGE_2,
WEIGHTED_GTN_CONTRIBUTION#PROJ_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#ACT_1
WHEN ''ACCRUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3
WHEN ''PROJECTION_4''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4
WHEN ''PROJECTION_5''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5
WHEN ''PROJECTION_6''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6
END WEIGHTED_GTN_CONTRIBUTION#PROJ_VARIANCE_2,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#ACT_1)/ NULLIF(WEIGHTED_GTN_CONTRIBUTION#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_3, 0)
WHEN ''PROJECTION_4''                                                               
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                               
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                               
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_2 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_6, 0)
END*100  WEIGHTED_GTN_CONTRIBUTION#PROJ_PER_CHANGE_2,
')

set @sql3=''
set @sql3=concat(@sql3,'EXFACTORY_SALES#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN null
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_6
END EXFACTORY_SALES#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#ACT_1)/ NULLIF(EXFACTORY_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (EXFACTORY_SALES#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_1) / NULLIF(EXFACTORY_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_2) / NULLIF(EXFACTORY_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_4) / NULLIF(EXFACTORY_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                           
THEN (EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_5) / NULLIF(EXFACTORY_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                           
THEN (EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_6) / NULLIF(EXFACTORY_SALES#PROJ_6, 0)
END*100  EXFACTORY_SALES#PROJ_PER_CHANGE_3,

DISCOUNT_AMOUNT#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_AMOUNT#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_6
END DISCOUNT_AMOUNT#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#ACT_1)/ NULLIF(DISCOUNT_AMOUNT#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_AMOUNT#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_1) / NULLIF(DISCOUNT_AMOUNT#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_2) / NULLIF(DISCOUNT_AMOUNT#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_4) / NULLIF(DISCOUNT_AMOUNT#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_5) / NULLIF(DISCOUNT_AMOUNT#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_AMOUNT#PROJ_3 - DISCOUNT_AMOUNT#PROJ_6) / NULLIF(DISCOUNT_AMOUNT#PROJ_6, 0)
END*100  DISCOUNT_AMOUNT#PROJ_PER_CHANGE_3,
CONTRACT_SALES#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_SALES#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_6
END CONTRACT_SALES#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#ACT_1)/ NULLIF(CONTRACT_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_SALES#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_1) / NULLIF(CONTRACT_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_2) / NULLIF(CONTRACT_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_4) / NULLIF(CONTRACT_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_5) / NULLIF(CONTRACT_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_SALES#PROJ_3 - CONTRACT_SALES#PROJ_6) / NULLIF(CONTRACT_SALES#PROJ_6, 0)
END*100  CONTRACT_SALES#PROJ_PER_CHANGE_3,

CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1)/ NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''ACCRUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''PROJECTION_2''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6, 0)
END*100  CONT_SALES_PER_OF_TOTAL_SALES#PROJ_PER_CHANGE_3,
CONTRACT_UNITS#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_UNITS#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_2
WHEN ''PROJECTION_3''
THEN null
WHEN ''PROJECTION_4''
THEN CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_6
END CONTRACT_UNITS#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#ACT_1)/ NULLIF(CONTRACT_UNITS#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_UNITS#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_1) / NULLIF(CONTRACT_UNITS#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_2) / NULLIF(CONTRACT_UNITS#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_4) / NULLIF(CONTRACT_UNITS#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_5) / NULLIF(CONTRACT_UNITS#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_UNITS#PROJ_3 - CONTRACT_UNITS#PROJ_6) / NULLIF(CONTRACT_UNITS#PROJ_6, 0)
END*100  CONTRACT_UNITS#PROJ_PER_CHANGE_3,
DISCOUNT_RATE#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_RATE#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_6
END DISCOUNT_RATE#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#ACT_1)/ NULLIF(DISCOUNT_RATE#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_RATE#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_1) / NULLIF(DISCOUNT_RATE#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_2) / NULLIF(DISCOUNT_RATE#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_4) / NULLIF(DISCOUNT_RATE#PROJ_4, 0)
WHEN ''PROJECTION_5''                                                     
THEN (DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_5) / NULLIF(DISCOUNT_RATE#PROJ_5, 0)
WHEN ''PROJECTION_6''                                                     
THEN (DISCOUNT_RATE#PROJ_3 - DISCOUNT_RATE#PROJ_6) / NULLIF(DISCOUNT_RATE#PROJ_6, 0)
END*100  DISCOUNT_RATE#PROJ_PER_CHANGE_3,
RPU#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN RPU#PROJ_3 - RPU#ACT_1
WHEN ''ACCRUALS''
THEN RPU#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN RPU#PROJ_3 - RPU#PROJ_1
WHEN ''PROJECTION_2''
THEN RPU#PROJ_3 - RPU#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN RPU#PROJ_3 - RPU#PROJ_4
WHEN ''PROJECTION_5''
THEN RPU#PROJ_3 - RPU#PROJ_5
WHEN ''PROJECTION_6''
THEN RPU#PROJ_3 - RPU#PROJ_6
END RPU#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (RPU#PROJ_3 - RPU#ACT_1)/ NULLIF(RPU#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (RPU#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (RPU#PROJ_3 - RPU#PROJ_1) / NULLIF(RPU#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (RPU#PROJ_3 - RPU#PROJ_2) / NULLIF(RPU#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (RPU#PROJ_3 - RPU#PROJ_4) / NULLIF(RPU#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (RPU#PROJ_3 - RPU#PROJ_5) / NULLIF(RPU#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (RPU#PROJ_3 - RPU#PROJ_6) / NULLIF(RPU#PROJ_6, 0)
END*100  RPU#PROJ_PER_CHANGE_3,
NET_SALES#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_SALES#PROJ_3 - NET_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_SALES#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_SALES#PROJ_3 - NET_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_SALES#PROJ_3 - NET_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN NET_SALES#PROJ_3 - NET_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_SALES#PROJ_3 - NET_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_SALES#PROJ_3 - NET_SALES#PROJ_6
END NET_SALES#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_SALES#PROJ_3 - NET_SALES#ACT_1)/ NULLIF(NET_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_SALES#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_SALES#PROJ_3 - NET_SALES#PROJ_1) / NULLIF(NET_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_SALES#PROJ_3 - NET_SALES#PROJ_2) / NULLIF(NET_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (NET_SALES#PROJ_3 - NET_SALES#PROJ_4) / NULLIF(NET_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_SALES#PROJ_3 - NET_SALES#PROJ_5) / NULLIF(NET_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_SALES#PROJ_3 - NET_SALES#PROJ_6) / NULLIF(NET_SALES#PROJ_6, 0)
END*100  NET_SALES#PROJ_PER_CHANGE_3,
CON_SALES_PER_FO_EX#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#ACT_1
WHEN ''ACCRUALS''
THEN CON_SALES_PER_FO_EX#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_6
END CON_SALES_PER_FO_EX#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#ACT_1)/ NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_1) / NULLIF(CON_SALES_PER_FO_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_2) / NULLIF(CON_SALES_PER_FO_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_4) / NULLIF(CON_SALES_PER_FO_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_5) / NULLIF(CON_SALES_PER_FO_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CON_SALES_PER_FO_EX#PROJ_3 - CON_SALES_PER_FO_EX#PROJ_6) / NULLIF(CON_SALES_PER_FO_EX#PROJ_6, 0)
END*100  CON_SALES_PER_FO_EX#PROJ_PER_CHANGE_3,
NET_EX_SALES#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EX_SALES#PROJ_3 - NET_EX_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_EX_SALES#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_6
END NET_EX_SALES#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EX_SALES#PROJ_3 - NET_EX_SALES#ACT_1)/ NULLIF(NET_EX_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EX_SALES#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_1) / NULLIF(NET_EX_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_2) / NULLIF(NET_EX_SALES#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_4) / NULLIF(NET_EX_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_5) / NULLIF(NET_EX_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_EX_SALES#PROJ_3 - NET_EX_SALES#PROJ_6) / NULLIF(NET_EX_SALES#PROJ_6, 0)
END*100  NET_EX_SALES#PROJ_PER_CHANGE_3,

DISC_PER_OF_EX#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_6
END DISC_PER_OF_EX#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#ACT_1)/ NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISC_PER_OF_EX#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_1) / NULLIF(DISC_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_2) / NULLIF(DISC_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_4) / NULLIF(DISC_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_5) / NULLIF(DISC_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_6) / NULLIF(DISC_PER_OF_EX#PROJ_6, 0)
END*100  DISC_PER_OF_EX#PROJ_PER_CHANGE_3,
NET_CON_SALES_PER_OF_EX#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_6
END NET_CON_SALES_PER_OF_EX#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#ACT_1)/ NULLIF(NET_CON_SALES_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_1) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_2) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_4) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_5) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_3 - NET_CON_SALES_PER_OF_EX#PROJ_6) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_6, 0)
END*100  NET_CON_SALES_PER_OF_EX#PROJ_PER_CHANGE_3,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1)  / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6, 0)
END*100  NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_PER_CHANGE_3,

WEIGHTED_GTN_CONTRIBUTION#PROJ_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#ACT_1
WHEN ''ACCRUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1
WHEN ''PROJECTION_2''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4
WHEN ''PROJECTION_5''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5
WHEN ''PROJECTION_6''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6
END WEIGHTED_GTN_CONTRIBUTION#PROJ_VARIANCE_3,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#ACT_1)  / NULLIF(WEIGHTED_GTN_CONTRIBUTION#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_2, 0)
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_3 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_6, 0)
END*100  WEIGHTED_GTN_CONTRIBUTION#PROJ_PER_CHANGE_3,
')

set @sql4 =''
set @sql4 = concat(@sql4,'EXFACTORY_SALES#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_4''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_6
END EXFACTORY_SALES#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#ACT_1)/ NULLIF(EXFACTORY_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (EXFACTORY_SALES#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_1) / NULLIF(EXFACTORY_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_2) / NULLIF(EXFACTORY_SALES#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_3) / NULLIF(EXFACTORY_SALES#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_5) / NULLIF(EXFACTORY_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_6) / NULLIF(EXFACTORY_SALES#PROJ_6, 0)
END*100  EXFACTORY_SALES#PROJ_PER_CHANGE_4,

DISCOUNT_AMOUNT#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_AMOUNT#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_3
WHEN ''PROJECTION_5''
THEN DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_6
END DISCOUNT_AMOUNT#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#ACT_1)/ NULLIF(DISCOUNT_AMOUNT#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_AMOUNT#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_1) / NULLIF(DISCOUNT_AMOUNT#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_2) / NULLIF(DISCOUNT_AMOUNT#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_3) / NULLIF(DISCOUNT_AMOUNT#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_5) / NULLIF(DISCOUNT_AMOUNT#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_AMOUNT#PROJ_4 - DISCOUNT_AMOUNT#PROJ_6) / NULLIF(DISCOUNT_AMOUNT#PROJ_6, 0)
END*100  DISCOUNT_AMOUNT#PROJ_PER_CHANGE_4,
CONTRACT_SALES#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_SALES#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_3
WHEN ''PROJECTION_5''
THEN CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_6
END CONTRACT_SALES#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#ACT_1)/ NULLIF(CONTRACT_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_SALES#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_1) / NULLIF(CONTRACT_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_2) / NULLIF(CONTRACT_SALES#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_3) / NULLIF(CONTRACT_SALES#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_5) / NULLIF(CONTRACT_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_SALES#PROJ_4 - CONTRACT_SALES#PROJ_6) / NULLIF(CONTRACT_SALES#PROJ_6, 0)
END*100  CONTRACT_SALES#PROJ_PER_CHANGE_4,

CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3
WHEN ''PROJECTION_5''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1)/ NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6, 0)
END*100  CONT_SALES_PER_OF_TOTAL_SALES#PROJ_PER_CHANGE_4,
CONTRACT_UNITS#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_UNITS#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_2
WHEN ''PROJECTION_4''
THEN null
WHEN ''PROJECTION_3''
THEN CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_3
WHEN ''PROJECTION_5''
THEN CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_5
WHEN ''PROJECTION_6''
THEN CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_6
END CONTRACT_UNITS#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#ACT_1)/ NULLIF(CONTRACT_UNITS#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_UNITS#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_1) / NULLIF(CONTRACT_UNITS#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_2) / NULLIF(CONTRACT_UNITS#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_3) / NULLIF(CONTRACT_UNITS#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_5) / NULLIF(CONTRACT_UNITS#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_UNITS#PROJ_4 - CONTRACT_UNITS#PROJ_6) / NULLIF(CONTRACT_UNITS#PROJ_6, 0)
END*100  CONTRACT_UNITS#PROJ_PER_CHANGE_4,
DISCOUNT_RATE#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_RATE#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_3
WHEN ''PROJECTION_5''
THEN DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_5
WHEN ''PROJECTION_6''
THEN DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_6
END DISCOUNT_RATE#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#ACT_1)/ NULLIF(DISCOUNT_RATE#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_RATE#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_1) / NULLIF(DISCOUNT_RATE#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_2) / NULLIF(DISCOUNT_RATE#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_3) / NULLIF(DISCOUNT_RATE#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_5) / NULLIF(DISCOUNT_RATE#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_RATE#PROJ_4 - DISCOUNT_RATE#PROJ_6) / NULLIF(DISCOUNT_RATE#PROJ_6, 0)
END*100  DISCOUNT_RATE#PROJ_PER_CHANGE_4,
RPU#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN RPU#PROJ_4 - RPU#ACT_1
WHEN ''ACCRUALS''
THEN RPU#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN RPU#PROJ_4 - RPU#PROJ_1
WHEN ''PROJECTION_2''
THEN RPU#PROJ_4 - RPU#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN RPU#PROJ_4 - RPU#PROJ_3
WHEN ''PROJECTION_5''
THEN RPU#PROJ_4 - RPU#PROJ_5
WHEN ''PROJECTION_6''
THEN RPU#PROJ_4 - RPU#PROJ_6
END RPU#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (RPU#PROJ_4 - RPU#ACT_1)/ NULLIF(RPU#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (RPU#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (RPU#PROJ_4 - RPU#PROJ_1) / NULLIF(RPU#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (RPU#PROJ_4 - RPU#PROJ_2) / NULLIF(RPU#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (RPU#PROJ_4 - RPU#PROJ_3) / NULLIF(RPU#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (RPU#PROJ_4 - RPU#PROJ_5) / NULLIF(RPU#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (RPU#PROJ_4 - RPU#PROJ_6) / NULLIF(RPU#PROJ_6, 0)
END*100  RPU#PROJ_PER_CHANGE_4,
NET_SALES#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_SALES#PROJ_4 - NET_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_SALES#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_SALES#PROJ_4 - NET_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_SALES#PROJ_4 - NET_SALES#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_SALES#PROJ_4 - NET_SALES#PROJ_3
WHEN ''PROJECTION_5''
THEN NET_SALES#PROJ_4 - NET_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_SALES#PROJ_4 - NET_SALES#PROJ_6
END NET_SALES#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_SALES#PROJ_4 - NET_SALES#ACT_1)/ NULLIF(NET_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_SALES#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_SALES#PROJ_4 - NET_SALES#PROJ_1) / NULLIF(NET_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_SALES#PROJ_4 - NET_SALES#PROJ_2) / NULLIF(NET_SALES#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_SALES#PROJ_4 - NET_SALES#PROJ_3) / NULLIF(NET_SALES#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (NET_SALES#PROJ_4 - NET_SALES#PROJ_5) / NULLIF(NET_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_SALES#PROJ_4 - NET_SALES#PROJ_6) / NULLIF(NET_SALES#PROJ_6, 0)
END*100  NET_SALES#PROJ_PER_CHANGE_4,
CON_SALES_PER_FO_EX#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#ACT_1
WHEN ''ACCRUALS''
THEN CON_SALES_PER_FO_EX#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_3
WHEN ''PROJECTION_5''
THEN CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_6
END CON_SALES_PER_FO_EX#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#ACT_1)/ NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_1) / NULLIF(CON_SALES_PER_FO_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_2) / NULLIF(CON_SALES_PER_FO_EX#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_3) / NULLIF(CON_SALES_PER_FO_EX#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_5) / NULLIF(CON_SALES_PER_FO_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (CON_SALES_PER_FO_EX#PROJ_4 - CON_SALES_PER_FO_EX#PROJ_6) / NULLIF(CON_SALES_PER_FO_EX#PROJ_6, 0)
END*100  CON_SALES_PER_FO_EX#PROJ_PER_CHANGE_4,
NET_EX_SALES#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EX_SALES#PROJ_4 - NET_EX_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_EX_SALES#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_3
WHEN ''PROJECTION_5''
THEN NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_6
END NET_EX_SALES#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EX_SALES#PROJ_4 - NET_EX_SALES#ACT_1)/ NULLIF(NET_EX_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EX_SALES#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_1) / NULLIF(NET_EX_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_2) / NULLIF(NET_EX_SALES#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_3) / NULLIF(NET_EX_SALES#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_5) / NULLIF(NET_EX_SALES#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_EX_SALES#PROJ_4 - NET_EX_SALES#PROJ_6) / NULLIF(NET_EX_SALES#PROJ_6, 0)
END*100  NET_EX_SALES#PROJ_PER_CHANGE_4,

DISC_PER_OF_EX#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_6
END DISC_PER_OF_EX#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#ACT_1)/ NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISC_PER_OF_EX#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_1) / NULLIF(DISC_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_2) / NULLIF(DISC_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_3) / NULLIF(DISC_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_5) / NULLIF(DISC_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_6) / NULLIF(DISC_PER_OF_EX#PROJ_6, 0)
END*100  DISC_PER_OF_EX#PROJ_PER_CHANGE_4,
NET_CON_SALES_PER_OF_EX#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_5''
THEN NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_6
END NET_CON_SALES_PER_OF_EX#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#ACT_1)/ NULLIF(NET_CON_SALES_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_1) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_2) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_3) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_5) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_4 - NET_CON_SALES_PER_OF_EX#PROJ_6) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_6, 0)
END*100  NET_CON_SALES_PER_OF_EX#PROJ_PER_CHANGE_4,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3
WHEN ''PROJECTION_5''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1)/ NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6, 0)
END*100  NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_PER_CHANGE_4,

WEIGHTED_GTN_CONTRIBUTION#PROJ_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#ACT_1
WHEN ''ACCRUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1
WHEN ''PROJECTION_2''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3
WHEN ''PROJECTION_5''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5
WHEN ''PROJECTION_6''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6
END WEIGHTED_GTN_CONTRIBUTION#PROJ_VARIANCE_4,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#ACT_1)/ NULLIF(WEIGHTED_GTN_CONTRIBUTION#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_2, 0)
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_3, 0)
WHEN ''PROJECTION_5''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_5, 0)
WHEN ''PROJECTION_6''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_4 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_6, 0)
END*100  WEIGHTED_GTN_CONTRIBUTION#PROJ_PER_CHANGE_4,
')

set @sql5=''
set @sql5=concat(@sql5,'EXFACTORY_SALES#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_5''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_6
END EXFACTORY_SALES#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#ACT_1)/ NULLIF(EXFACTORY_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (EXFACTORY_SALES#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_1) / NULLIF(EXFACTORY_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_2) / NULLIF(EXFACTORY_SALES#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_3) / NULLIF(EXFACTORY_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_4) / NULLIF(EXFACTORY_SALES#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_6) / NULLIF(EXFACTORY_SALES#PROJ_6, 0)
END*100  EXFACTORY_SALES#PROJ_PER_CHANGE_5,

DISCOUNT_AMOUNT#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_AMOUNT#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_4
WHEN ''PROJECTION_6''
THEN DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_6
END DISCOUNT_AMOUNT#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#ACT_1)/ NULLIF(DISCOUNT_AMOUNT#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_AMOUNT#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_1) / NULLIF(DISCOUNT_AMOUNT#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_2) / NULLIF(DISCOUNT_AMOUNT#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_3) / NULLIF(DISCOUNT_AMOUNT#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_4) / NULLIF(DISCOUNT_AMOUNT#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_AMOUNT#PROJ_5 - DISCOUNT_AMOUNT#PROJ_6) / NULLIF(DISCOUNT_AMOUNT#PROJ_6, 0)
END*100  DISCOUNT_AMOUNT#PROJ_PER_CHANGE_5,
CONTRACT_SALES#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_SALES#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_4
WHEN ''PROJECTION_6''
THEN CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_6
END CONTRACT_SALES#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#ACT_1)/ NULLIF(CONTRACT_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_SALES#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_1) / NULLIF(CONTRACT_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_2) / NULLIF(CONTRACT_SALES#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_3) / NULLIF(CONTRACT_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_4) / NULLIF(CONTRACT_SALES#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_SALES#PROJ_5 - CONTRACT_SALES#PROJ_6) / NULLIF(CONTRACT_SALES#PROJ_6, 0)
END*100  CONTRACT_SALES#PROJ_PER_CHANGE_5,

CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4
WHEN ''PROJECTION_6''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1)/ NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6, 0)
END*100  CONT_SALES_PER_OF_TOTAL_SALES#PROJ_PER_CHANGE_5,
CONTRACT_UNITS#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_UNITS#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_2
WHEN ''PROJECTION_5''
THEN null
WHEN ''PROJECTION_3''
THEN CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_4
WHEN ''PROJECTION_6''
THEN CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_6
END CONTRACT_UNITS#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#ACT_1)/ NULLIF(CONTRACT_UNITS#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_UNITS#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_1) / NULLIF(CONTRACT_UNITS#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_2) / NULLIF(CONTRACT_UNITS#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_3) / NULLIF(CONTRACT_UNITS#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_4) / NULLIF(CONTRACT_UNITS#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (CONTRACT_UNITS#PROJ_5 - CONTRACT_UNITS#PROJ_6) / NULLIF(CONTRACT_UNITS#PROJ_6, 0)
END*100  CONTRACT_UNITS#PROJ_PER_CHANGE_5,
DISCOUNT_RATE#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_RATE#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_4
WHEN ''PROJECTION_6''
THEN DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_6
END DISCOUNT_RATE#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#ACT_1)/ NULLIF(DISCOUNT_RATE#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_RATE#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_1) / NULLIF(DISCOUNT_RATE#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_2) / NULLIF(DISCOUNT_RATE#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_3) / NULLIF(DISCOUNT_RATE#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_4) / NULLIF(DISCOUNT_RATE#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (DISCOUNT_RATE#PROJ_5 - DISCOUNT_RATE#PROJ_6) / NULLIF(DISCOUNT_RATE#PROJ_6, 0)
END*100  DISCOUNT_RATE#PROJ_PER_CHANGE_5,
RPU#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN RPU#PROJ_5 - RPU#ACT_1
WHEN ''ACCRUALS''
THEN RPU#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN RPU#PROJ_5 - RPU#PROJ_1
WHEN ''PROJECTION_2''
THEN RPU#PROJ_5 - RPU#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN RPU#PROJ_5 - RPU#PROJ_3
WHEN ''PROJECTION_4''
THEN RPU#PROJ_5 - RPU#PROJ_4
WHEN ''PROJECTION_6''
THEN RPU#PROJ_5 - RPU#PROJ_6
END RPU#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (RPU#PROJ_5 - RPU#ACT_1)/ NULLIF(RPU#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (RPU#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (RPU#PROJ_5 - RPU#PROJ_1) / NULLIF(RPU#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (RPU#PROJ_5 - RPU#PROJ_2) / NULLIF(RPU#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (RPU#PROJ_5 - RPU#PROJ_3) / NULLIF(RPU#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (RPU#PROJ_5 - RPU#PROJ_4) / NULLIF(RPU#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (RPU#PROJ_5 - RPU#PROJ_6) / NULLIF(RPU#PROJ_6, 0)
END*100  RPU#PROJ_PER_CHANGE_5,
NET_SALES#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_SALES#PROJ_5 - NET_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_SALES#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_SALES#PROJ_5 - NET_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_SALES#PROJ_5 - NET_SALES#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_SALES#PROJ_5 - NET_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_SALES#PROJ_5 - NET_SALES#PROJ_4
WHEN ''PROJECTION_6''
THEN NET_SALES#PROJ_5 - NET_SALES#PROJ_6
END NET_SALES#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_SALES#PROJ_5 - NET_SALES#ACT_1)/ NULLIF(NET_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_SALES#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_SALES#PROJ_5 - NET_SALES#PROJ_1) / NULLIF(NET_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_SALES#PROJ_5 - NET_SALES#PROJ_2) / NULLIF(NET_SALES#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_SALES#PROJ_5 - NET_SALES#PROJ_3) / NULLIF(NET_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_SALES#PROJ_5 - NET_SALES#PROJ_4) / NULLIF(NET_SALES#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (NET_SALES#PROJ_5 - NET_SALES#PROJ_6) / NULLIF(NET_SALES#PROJ_6, 0)
END*100  NET_SALES#PROJ_PER_CHANGE_5,
CON_SALES_PER_FO_EX#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#ACT_1
WHEN ''ACCRUALS''
THEN CON_SALES_PER_FO_EX#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_4
WHEN ''PROJECTION_6''
THEN CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_6
END CON_SALES_PER_FO_EX#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#ACT_1)/ NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_1) / NULLIF(CON_SALES_PER_FO_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_2) / NULLIF(CON_SALES_PER_FO_EX#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_3) / NULLIF(CON_SALES_PER_FO_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_4) / NULLIF(CON_SALES_PER_FO_EX#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (CON_SALES_PER_FO_EX#PROJ_5 - CON_SALES_PER_FO_EX#PROJ_6) / NULLIF(CON_SALES_PER_FO_EX#PROJ_6, 0)
END*100  CON_SALES_PER_FO_EX#PROJ_PER_CHANGE_5,
NET_EX_SALES#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EX_SALES#PROJ_5 - NET_EX_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_EX_SALES#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_4
WHEN ''PROJECTION_6''
THEN NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_6
END NET_EX_SALES#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EX_SALES#PROJ_5 - NET_EX_SALES#ACT_1)/ NULLIF(NET_EX_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EX_SALES#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_1) / NULLIF(NET_EX_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_2) / NULLIF(NET_EX_SALES#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_3) / NULLIF(NET_EX_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_4) / NULLIF(NET_EX_SALES#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (NET_EX_SALES#PROJ_5 - NET_EX_SALES#PROJ_6) / NULLIF(NET_EX_SALES#PROJ_6, 0)
END*100  NET_EX_SALES#PROJ_PER_CHANGE_5,

DISC_PER_OF_EX#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_6
END DISC_PER_OF_EX#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#ACT_1)/ NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISC_PER_OF_EX#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_1) / NULLIF(DISC_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_2) / NULLIF(DISC_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_3) / NULLIF(DISC_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_4) / NULLIF(DISC_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_6) / NULLIF(DISC_PER_OF_EX#PROJ_6, 0)
END*100  DISC_PER_OF_EX#PROJ_PER_CHANGE_5,,
NET_CON_SALES_PER_OF_EX#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_6''
THEN NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_6
END NET_CON_SALES_PER_OF_EX#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#ACT_1)/ NULLIF(NET_CON_SALES_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_1) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_2) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_3) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_4) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_5 - NET_CON_SALES_PER_OF_EX#PROJ_6) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_6, 0)
END*100  NET_CON_SALES_PER_OF_EX#PROJ_PER_CHANGE_5,
NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4
WHEN ''PROJECTION_6''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1)/ NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6, 0)
END*100  NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_PER_CHANGE_5,

WEIGHTED_GTN_CONTRIBUTION#PROJ_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#ACT_1
WHEN ''ACCRUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1
WHEN ''PROJECTION_2''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3
WHEN ''PROJECTION_4''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4
WHEN ''PROJECTION_6''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6
END WEIGHTED_GTN_CONTRIBUTION#PROJ_VARIANCE_5,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#ACT_1)/ NULLIF(WEIGHTED_GTN_CONTRIBUTION#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_2, 0)
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_4, 0)
WHEN ''PROJECTION_6''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_5 - WEIGHTED_GTN_CONTRIBUTION#PROJ_6) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_6, 0)
END*100  WEIGHTED_GTN_CONTRIBUTION#PROJ_PER_CHANGE_5,
')
 
 set @sql6=''
 set @sql6=concat(@sql6,'
EXFACTORY_SALES#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_6''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_5
END EXFACTORY_SALES#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#ACT_1)/ NULLIF(EXFACTORY_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (EXFACTORY_SALES#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_1) / NULLIF(EXFACTORY_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_2) / NULLIF(EXFACTORY_SALES#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_3) / NULLIF(EXFACTORY_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_4) / NULLIF(EXFACTORY_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_5) / NULLIF(EXFACTORY_SALES#PROJ_5, 0)
END*100  EXFACTORY_SALES#PROJ_PER_CHANGE_6,

DISCOUNT_AMOUNT#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_AMOUNT#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_5
END DISCOUNT_AMOUNT#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#ACT_1)/ NULLIF(DISCOUNT_AMOUNT#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_AMOUNT#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_1) / NULLIF(DISCOUNT_AMOUNT#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_2) / NULLIF(DISCOUNT_AMOUNT#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_3) / NULLIF(DISCOUNT_AMOUNT#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_4) / NULLIF(DISCOUNT_AMOUNT#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_AMOUNT#PROJ_6 - DISCOUNT_AMOUNT#PROJ_5) / NULLIF(DISCOUNT_AMOUNT#PROJ_5, 0)
END*100  DISCOUNT_AMOUNT#PROJ_PER_CHANGE_6,
CONTRACT_SALES#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_SALES#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_5
END CONTRACT_SALES#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#ACT_1)/ NULLIF(CONTRACT_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_SALES#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_1) / NULLIF(CONTRACT_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_2) / NULLIF(CONTRACT_SALES#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_3) / NULLIF(CONTRACT_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_4) / NULLIF(CONTRACT_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_SALES#PROJ_6 - CONTRACT_SALES#PROJ_5) / NULLIF(CONTRACT_SALES#PROJ_5, 0)
END*100  CONTRACT_SALES#PROJ_PER_CHANGE_6,

CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1
WHEN ''ACCRUALS''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5
END CONT_SALES_PER_OF_TOTAL_SALES#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#ACT_1)/ NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONT_SALES_PER_OF_TOTAL_SALES#PROJ_6 - CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5) / NULLIF(CONT_SALES_PER_OF_TOTAL_SALES#PROJ_5, 0)
END*100  CONT_SALES_PER_OF_TOTAL_SALES#PROJ_PER_CHANGE_6,
CONTRACT_UNITS#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#ACT_1
WHEN ''ACCRUALS''
THEN CONTRACT_UNITS#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_1
WHEN ''PROJECTION_2''
THEN CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_2
WHEN ''PROJECTION_6''
THEN null
WHEN ''PROJECTION_3''
THEN CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_3
WHEN ''PROJECTION_4''
THEN CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_4
WHEN ''PROJECTION_5''
THEN CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_5
END CONTRACT_UNITS#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#ACT_1)/ NULLIF(CONTRACT_UNITS#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CONTRACT_UNITS#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_1) / NULLIF(CONTRACT_UNITS#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_2) / NULLIF(CONTRACT_UNITS#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_3) / NULLIF(CONTRACT_UNITS#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_4) / NULLIF(CONTRACT_UNITS#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CONTRACT_UNITS#PROJ_6 - CONTRACT_UNITS#PROJ_5) / NULLIF(CONTRACT_UNITS#PROJ_5, 0)
END*100  CONTRACT_UNITS#PROJ_PER_CHANGE_6,
DISCOUNT_RATE#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#ACT_1
WHEN ''ACCRUALS''
THEN DISCOUNT_RATE#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_1
WHEN ''PROJECTION_2''
THEN DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_3
WHEN ''PROJECTION_4''
THEN DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_4
WHEN ''PROJECTION_5''
THEN DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_5
END DISCOUNT_RATE#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#ACT_1)/ NULLIF(DISCOUNT_RATE#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISCOUNT_RATE#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_1) / NULLIF(DISCOUNT_RATE#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_2) / NULLIF(DISCOUNT_RATE#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_3) / NULLIF(DISCOUNT_RATE#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_4) / NULLIF(DISCOUNT_RATE#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISCOUNT_RATE#PROJ_6 - DISCOUNT_RATE#PROJ_5) / NULLIF(DISCOUNT_RATE#PROJ_5, 0)
END*100  DISCOUNT_RATE#PROJ_PER_CHANGE_6,
RPU#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN RPU#PROJ_6 - RPU#ACT_1
WHEN ''ACCRUALS''
THEN RPU#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN RPU#PROJ_6 - RPU#PROJ_1
WHEN ''PROJECTION_2''
THEN RPU#PROJ_6 - RPU#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN RPU#PROJ_6 - RPU#PROJ_3
WHEN ''PROJECTION_4''
THEN RPU#PROJ_6 - RPU#PROJ_4
WHEN ''PROJECTION_5''
THEN RPU#PROJ_6 - RPU#PROJ_5
END RPU#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (RPU#PROJ_6 - RPU#ACT_1)/ NULLIF(RPU#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (RPU#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (RPU#PROJ_6 - RPU#PROJ_1) / NULLIF(RPU#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (RPU#PROJ_6 - RPU#PROJ_2) / NULLIF(RPU#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (RPU#PROJ_6 - RPU#PROJ_3) / NULLIF(RPU#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (RPU#PROJ_6 - RPU#PROJ_4) / NULLIF(RPU#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (RPU#PROJ_6 - RPU#PROJ_5) / NULLIF(RPU#PROJ_5, 0)
END*100  RPU#PROJ_PER_CHANGE_6,
NET_SALES#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_SALES#PROJ_6 - NET_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_SALES#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_SALES#PROJ_6 - NET_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_SALES#PROJ_6 - NET_SALES#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_SALES#PROJ_6 - NET_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_SALES#PROJ_6 - NET_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_SALES#PROJ_6 - NET_SALES#PROJ_5
END NET_SALES#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_SALES#PROJ_6 - NET_SALES#ACT_1)/ NULLIF(NET_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_SALES#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_SALES#PROJ_6 - NET_SALES#PROJ_1) / NULLIF(NET_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_SALES#PROJ_6 - NET_SALES#PROJ_2) / NULLIF(NET_SALES#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_SALES#PROJ_6 - NET_SALES#PROJ_3) / NULLIF(NET_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_SALES#PROJ_6 - NET_SALES#PROJ_4) / NULLIF(NET_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_SALES#PROJ_6 - NET_SALES#PROJ_5) / NULLIF(NET_SALES#PROJ_5, 0)
END*100  NET_SALES#PROJ_PER_CHANGE_6,
CON_SALES_PER_FO_EX#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#ACT_1
WHEN ''ACCRUALS''
THEN CON_SALES_PER_FO_EX#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_5
END CON_SALES_PER_FO_EX#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#ACT_1)/ NULLIF(CON_SALES_PER_FO_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (CON_SALES_PER_FO_EX#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_1) / NULLIF(CON_SALES_PER_FO_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_2) / NULLIF(CON_SALES_PER_FO_EX#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_3) / NULLIF(CON_SALES_PER_FO_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_4) / NULLIF(CON_SALES_PER_FO_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (CON_SALES_PER_FO_EX#PROJ_6 - CON_SALES_PER_FO_EX#PROJ_5) / NULLIF(CON_SALES_PER_FO_EX#PROJ_5, 0)
END*100  CON_SALES_PER_FO_EX#PROJ_PER_CHANGE_6,

NET_EX_SALES#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EX_SALES#PROJ_6 - NET_EX_SALES#ACT_1
WHEN ''ACCRUALS''
THEN NET_EX_SALES#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_5
END NET_EX_SALES#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EX_SALES#PROJ_6 - NET_EX_SALES#ACT_1)/ NULLIF(NET_EX_SALES#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EX_SALES#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_1) / NULLIF(NET_EX_SALES#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_2) / NULLIF(NET_EX_SALES#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_3) / NULLIF(NET_EX_SALES#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_4) / NULLIF(NET_EX_SALES#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_EX_SALES#PROJ_6 - NET_EX_SALES#PROJ_5) / NULLIF(NET_EX_SALES#PROJ_5, 0)
END*100  NET_EX_SALES#PROJ_PER_CHANGE_6,

DISC_PER_OF_EX#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_5
END DISC_PER_OF_EX#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#ACT_1)/ NULLIF(DISC_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (DISC_PER_OF_EX#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_1) / NULLIF(DISC_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_2) / NULLIF(DISC_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_3) / NULLIF(DISC_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_4) / NULLIF(DISC_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_5) / NULLIF(DISC_PER_OF_EX#PROJ_5, 0)
END*100  DISC_PER_OF_EX#PROJ_PER_CHANGE_6,

NET_CON_SALES_PER_OF_EX#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_CON_SALES_PER_OF_EX#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_5
END NET_CON_SALES_PER_OF_EX#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#ACT_1)/ NULLIF(NET_CON_SALES_PER_OF_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_1) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_2) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_3) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_4) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_CON_SALES_PER_OF_EX#PROJ_6 - NET_CON_SALES_PER_OF_EX#PROJ_5) / NULLIF(NET_CON_SALES_PER_OF_EX#PROJ_5, 0)
END*100  NET_CON_SALES_PER_OF_EX#PROJ_PER_CHANGE_6,

NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1
WHEN ''ACCRUALS''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5
END NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1)/ NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_6 - NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5) / NULLIF(NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_5, 0)
END*100  NET_EXP_SALES_PER_OF_TOATL_EX#PROJ_PER_CHANGE_6,


WEIGHTED_GTN_CONTRIBUTION#PROJ_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#ACT_1
WHEN ''ACCRUALS''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1
WHEN ''PROJECTION_2''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3
WHEN ''PROJECTION_4''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4
WHEN ''PROJECTION_5''
THEN WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5
END WEIGHTED_GTN_CONTRIBUTION#PROJ_VARIANCE_6,
CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#ACT_1)/ NULLIF(WEIGHTED_GTN_CONTRIBUTION#ACT_1, 0)
WHEN ''ACCRUALS''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - ACCURAL_DISCOUNT_1)/ NULLIF(ACCURAL_DISCOUNT_1, 0)
WHEN ''PROJECTION_1''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_1) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_1, 0)
WHEN ''PROJECTION_2''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_2) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_2, 0)
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_3) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_3, 0)
WHEN ''PROJECTION_4''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_4) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_4, 0)
WHEN ''PROJECTION_5''
THEN (WEIGHTED_GTN_CONTRIBUTION#PROJ_6 - WEIGHTED_GTN_CONTRIBUTION#PROJ_5) / NULLIF(WEIGHTED_GTN_CONTRIBUTION#PROJ_5, 0)
END*100  WEIGHTED_GTN_CONTRIBUTION#PROJ_PER_CHANGE_6,
')

SET @SQL2 =CONCAT( @SQL2,'(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_6
END ) * (DISC_PER_OF_EX#PROJ_2) AS VOLUME_2
,EXFACTORY_SALES#PROJ_2 * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_6
END )*100  AS RATE_2
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_2 - EXFACTORY_SALES#PROJ_6
END ) * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_2 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_2 - DISC_PER_OF_EX#PROJ_6
END )*100  AS CHANGEINCHANGE_2,')

SET @SQL3 =CONCAT( @SQL3,'(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN null
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_6
END ) * (DISC_PER_OF_EX#PROJ_3) AS VOLUME_3
,EXFACTORY_SALES#PROJ_3 * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_6
END)*100  AS RATE_3
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_3''
THEN null
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_3 - EXFACTORY_SALES#PROJ_6
END) * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_3 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_3''
THEN NULL
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_3 - DISC_PER_OF_EX#PROJ_6
END)*100  AS CHANGEINCHANGE_3,')

SET @SQL4 =CONCAT( @SQL4,'(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_4''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_6
END) * (DISC_PER_OF_EX#PROJ_4) AS VOLUME_4
,EXFACTORY_SALES#PROJ_4 *  (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_6
END)*100  AS RATE_4
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_4''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_5
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_4 - EXFACTORY_SALES#PROJ_6
END) * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_4 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_4''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_5
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_4 - DISC_PER_OF_EX#PROJ_6
END)*100  AS CHANGEINCHANGE_4,')

SET @SQL5 =CONCAT( @SQL5,'(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_5''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_6
END) * (DISCOUNT_RATE#PROJ_5) AS VOLUME_5
,EXFACTORY_SALES#PROJ_2 *  (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_6
END)*100   AS RATE_5
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_5''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_6''
THEN EXFACTORY_SALES#PROJ_5 - EXFACTORY_SALES#PROJ_6
END) * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_5 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_5''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_6''
THEN DISC_PER_OF_EX#PROJ_5 - DISC_PER_OF_EX#PROJ_6
END)*100  AS CHANGEINCHANGE_5,')

SET @SQL6 =CONCAT( @SQL6,'(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_6''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_5
END) * (DISC_PER_OF_EX#PROJ_6) AS VOLUME_6
,EXFACTORY_SALES#PROJ_6 * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_5
END) *100 AS RATE_6
,(CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#ACT_1
WHEN ''ACCRUALS''
THEN EXFACTORY_SALES#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_1
WHEN ''PROJECTION_2''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_2
WHEN ''PROJECTION_6''
THEN null
WHEN ''PROJECTION_3''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_3
WHEN ''PROJECTION_4''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_4
WHEN ''PROJECTION_5''
THEN EXFACTORY_SALES#PROJ_6 - EXFACTORY_SALES#PROJ_5
END) * (CASE @COMPARISION_BASIS
WHEN ''ACTUALS''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#ACT_1
WHEN ''ACCRUALS''
THEN DISC_PER_OF_EX#PROJ_6 - ACCURAL_DISCOUNT_1
WHEN ''PROJECTION_1''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_1
WHEN ''PROJECTION_2''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_2
WHEN ''PROJECTION_6''
THEN NULL
WHEN ''PROJECTION_3''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_3
WHEN ''PROJECTION_4''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_4
WHEN ''PROJECTION_5''
THEN DISC_PER_OF_EX#PROJ_6 - DISC_PER_OF_EX#PROJ_5
END)*100 AS CHANGEINCHANGE_6,')

SET @SQL7=CONCAT( @SQL7,'
FROM ',@REPORTING_TABLE,'  WHERE LEVEL_NO = @LEVEL_NO AND ( HIERARCHY_NO=@HIERARCHY_NO OR @HIERARCHY_NO IS NULL) ')

IF(@COUNT<=2)
BEGIN
print 1
SET @SQL2 = LEFT(@SQL2, LEN(@SQL2) - 1)
SELECT @SQL1 as Sql1,@sql11_1 as sql11_1,@SQL2 as sql2,@SQL7 as sql7
END
IF(@COUNT=3)
BEGIN
SET @SQL3 = LEFT(@SQL3, LEN(@SQL3) - 1)
SELECT @SQL1 as SQL1,@sql11_1 as sql11_1,@SQL2 AS SQL2,@SQL3 AS SQL3,@SQL7 AS SQL7
END
IF(@COUNT=4)
BEGIN
SET @SQL4 = LEFT(@SQL4, LEN(@SQL4) - 1)
SELECT @SQL1 AS SQL1,@sql11_1 as sql11_1,@SQL2 AS SQL2,@SQL3 AS SQL3,@SQL4 AS SQL4,@SQL7 AS SQL7
END
IF(@COUNT=5)
BEGIN
SET @SQL5 = LEFT(@SQL5, LEN(@SQL5) - 1)
SELECT @SQL1 AS SQL1,@sql11_1 as sql11_1,@SQL2 AS SQL2,@SQL3 AS SQL3,@SQL4 AS SQL4,@SQL5 AS SQL5,@SQL7 AS SQL7
END
IF(@COUNT=6)
BEGIN
SET @SQL6 = LEFT(@SQL6, LEN(@SQL6) - 1)
SELECT @SQL1 AS SQL1,@sql11_1 as sql11_1,@SQL2 AS SQL2,@SQL3 AS SQL3,@SQL4 AS SQL4,@SQL5 AS SQL5,@SQL6 AS SQL6,@SQL7 AS SQL7
END

END TRY
 BEGIN CATCH
 DECLARE @ERRORMESSAGE NVARCHAR(4000);
 DECLARE @ERRORSEVERITY INT;
 DECLARE @ERRORSTATE INT;
 DECLARE @ERRORNUMBER INT;
 DECLARE @ERRORPROCEDURE VARCHAR(200);
 DECLARE @ERRORLINE INT;

 EXEC Usperrorcollector

 SELECT @ERRORMESSAGE = Error_message(),
 @ERRORSEVERITY = Error_severity(),
 @ERRORSTATE = Error_state(),
 @ERRORPROCEDURE = Error_procedure(),
 @ERRORLINE = Error_line(),
 @ERRORNUMBER = Error_number()

 RAISERROR (
 @ERRORMESSAGE, -- MESSAGE TEXT.
 @ERRORSEVERITY, -- SEVERITY.
 @ERRORSTATE, -- STATE.
 @ERRORPROCEDURE, -- PROCEDURE_NAME.
 @ERRORNUMBER, -- ERRORNUMBER
 @ERRORLINE -- ERRORLINE
 );
 END CATCH
END
GO


