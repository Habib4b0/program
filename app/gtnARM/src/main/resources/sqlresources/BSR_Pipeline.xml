<sql>
     
    <entity id="insertBalanceSummaryCCP">
        <query> 
            <![CDATA[
            DECLARE @PROJECTION_MASTER_SID INT = ?; 

IF OBJECT_ID('TEMPDB..#TEMP_CCP_PLUS_D') IS NOT NULL
  DROP TABLE #TEMP_CCP_PLUS_D

CREATE TABLE #TEMP_CCP_PLUS_D
  (
     ARM_ADJUSTMENT_MASTER_SID  INT,
     ARM_ADJUSTMENT_DETAILS_SID INT,
     PROJECTION_MASTER_SID      INT,
     CCP_DETAILS_SID            INT,
     RS_MODEL_SID               INT,
     GL_COMPANY_MASTER_SID      INT,
     BU_COMPANY_MASTER_SID      INT,
     TRANSACTION_TYPE           VARCHAR(50),
     BRAND_MASTER_SID           INT,
     PRIMARY KEY ( ARM_ADJUSTMENT_DETAILS_SID, CCP_DETAILS_SID, RS_MODEL_SID )
  )

INSERT INTO #TEMP_CCP_PLUS_D
            (BU_COMPANY_MASTER_SID,
             GL_COMPANY_MASTER_SID,
             ARM_ADJUSTMENT_MASTER_SID,
             ARM_ADJUSTMENT_DETAILS_SID,
             PROJECTION_MASTER_SID,
             CCP_DETAILS_SID,
             RS_MODEL_SID,
             TRANSACTION_TYPE,
             BRAND_MASTER_SID)
SELECT AM.BU_COMPANY_MASTER_SID,
       PM.COMPANY_MASTER_SID AS GL_COMPANY_MASTER_SID,
       AM.ARM_ADJUSTMENT_MASTER_SID,
       ARM_ADJUSTMENT_DETAILS_SID,
       AD.PROJECTION_MASTER_SID,
       AD.CCP_DETAILS_SID,
       AD.RS_MODEL_SID,
       AM.TRANSACTION_TYPE,
       IM.BRAND_MASTER_SID
FROM   PROJECTION_MASTER PM
       INNER JOIN ARM_ADJUSTMENT_MASTER AM
               ON PM.PROJECTION_MASTER_SID = AM.PROJECTION_MASTER_SID
       INNER JOIN ARM_ADJUSTMENT_DETAILS AD
               ON PM.PROJECTION_MASTER_SID = AD.PROJECTION_MASTER_SID
       INNER JOIN CCP_DETAILS CD
               ON AD.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
       INNER JOIN ITEM_MASTER IM
               ON CD.ITEM_MASTER_SID = IM.ITEM_MASTER_SID
WHERE  PM.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID

INSERT INTO ARM_BSR_CCP
            (ARM_ADJUSTMENT_DETAILS_SID,
             ARM_ADJ_RES_CONFIG_MASTER_SID,
             SUMMARY_TYPE,
             ACCOUNT,
             PIPELINE_ACCRUAL,
             DEMAND_ACCRUAL,
             PIPELINE_INVENTORY,
             DEMAND_REFORECAST,
             DEMAND_PAYMENT_TRUE_UP,
             FEES_ACCRUAL,
             INFLATION_ADJ,
             CREDIT_CARD_FEES,
             OTHER_FIXED_DOLLAR_FEES,
             INVENTORY_VALULATION,
             RETURN_RESERVE)
SELECT TD.ARM_ADJUSTMENT_DETAILS_SID,
       AAM.ARM_ADJ_RES_CONFIG_MASTER_SID,
       ASD.REPORT_TYPE,
       ASD.ACCOUNT,
       ASD.PIPELINE_ACCRUAL,
       ASD.DEMAND_ACCRUAL,
       ASD.PIPELINE_INVENTORY,
       ASD.DEMAND_REFORECAST,
       ASD.DEMAND_PAYMENT_TRUE_UP,
       ASD.FEES_ACCRUAL,
       ASD.INFLATION_ADJ,
       ASD.CREDIT_CARD_FEES,
       ASD.OTHER_FIXED_DOLLAR_FEES,
       ASD.INVENTORY_VALULATION,
       ASD.RETURN_RESERVE
FROM   #TEMP_CCP_PLUS_D TD
       JOIN CCP_DETAILS C
         ON C.CCP_DETAILS_SID = TD.CCP_DETAILS_SID
       JOIN RS_CONTRACT R
         ON R.RS_MODEL_SID = TD.RS_MODEL_SID
            AND R.CONTRACT_MASTER_SID = C.CONTRACT_MASTER_SID
       JOIN ARM_DEDUCTION_SELECTION ADS
         ON ADS.PROJECTION_MASTER_SID = TD.PROJECTION_MASTER_SID
            AND ADS.RS_CONTRACT_SID = R.RS_CONTRACT_SID
       JOIN ARM_ADJ_RES_CONFIG_MASTER AAM
         ON AAM.RS_CATEGORY = R.RS_CATEGORY
            AND AAM.RS_TYPE = R.RS_TYPE
            AND AAM.REBATE_PROGRAM_TYPE = R.REBATE_PROGRAM_TYPE
            AND TD.GL_COMPANY_MASTER_SID = AAM.GL_COMPANY_MASTER_SID
            AND TD.BU_COMPANY_MASTER_SID = AAM.BU_COMPANY_MASTER_SID
       JOIN ARM_BALANCE_SUMMARY_CONFIG ASD
         ON ASD.REPORT_TYPE = TD.TRANSACTION_TYPE
            AND ASD.ARM_ADJ_RES_CONFIG_MASTER_SID = AAM.ARM_ADJ_RES_CONFIG_MASTER_SID
    ]]>    
        </query>
    </entity>
    <entity id="getPeriodsforBSR">
        <query> 
        <![CDATA[
         DECLARE @FROMPERIOD DATETIME;
DECLARE @TOPERIOD DATETIME;

SET @FROMPERIOD = (SELECT TOP 1 PERIOD_DATE
                   FROM   DBO.PERIOD
                   WHERE  ? = ?
                          AND YEAR = ?
                   ORDER  BY PERIOD_DATE ASC);
SET @TOPERIOD = (SELECT TOP 1 PERIOD_DATE
                 FROM   DBO.PERIOD
                 WHERE  ? = ?
                        AND YEAR = ?
                 ORDER  BY PERIOD_DATE ASC);

;
WITH CTE
     AS (SELECT DISTINCT YEAR,
                         ?
         FROM   PERIOD
         WHERE  PERIOD_DATE <= ( @TOPERIOD )
                AND PERIOD_DATE >= ( @FROMPERIOD ))
SELECT COUNT(*)
FROM   CTE    
    ]]>    
        </query>
    </entity>
    <entity id="getPeriodSidsforBSR">
        <query> 
        <![CDATA[
         SELECT PERIOD_SID FROM PERIOD WHERE PERIOD_SID =
      (SELECT MIN(PERIOD_SID) FROM PERIOD WHERE ? YEAR = ?) OR PERIOD_SID = 
      (SELECT MAX(PERIOD_SID) FROM dbo.PERIOD WHERE ? YEAR = ?)
    ]]>    
        </query>
    </entity>
</sql>