package com.stpl.app.model;

import com.stpl.portal.kernel.bean.AutoEscape;
import com.stpl.portal.model.BaseModel;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.service.ServiceContext;

import com.stpl.portlet.expando.model.ExpandoBridge;

import java.io.Serializable;

/**
 * The base model interface for the TransactionModuleMaster service. Represents a row in the &quot;TRANSACTION_MODULE_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.stpl.app.model.impl.TransactionModuleMasterModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.stpl.app.model.impl.TransactionModuleMasterImpl}.
 * </p>
 *
 * @author
 * @see TransactionModuleMaster
 * @see com.stpl.app.model.impl.TransactionModuleMasterImpl
 * @see com.stpl.app.model.impl.TransactionModuleMasterModelImpl
 * @generated
 */
public interface TransactionModuleMasterModel extends BaseModel<TransactionModuleMaster> {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this interface directly. All methods that expect a transaction module master model instance should use the {@link TransactionModuleMaster} interface instead.
     */

    /**
     * Returns the primary key of this transaction module master.
     *
     * @return the primary key of this transaction module master
     */
    public int getPrimaryKey();

    /**
     * Sets the primary key of this transaction module master.
     *
     * @param primaryKey the primary key of this transaction module master
     */
    public void setPrimaryKey(int primaryKey);

    /**
     * Returns the transaction module master sid of this transaction module master.
     *
     * @return the transaction module master sid of this transaction module master
     */
    public int getTransactionModuleMasterSid();

    /**
     * Sets the transaction module master sid of this transaction module master.
     *
     * @param transactionModuleMasterSid the transaction module master sid of this transaction module master
     */
    public void setTransactionModuleMasterSid(int transactionModuleMasterSid);

    /**
     * Returns the invalid table name of this transaction module master.
     *
     * @return the invalid table name of this transaction module master
     */
    @AutoEscape
    public String getInvalidTableName();

    /**
     * Sets the invalid table name of this transaction module master.
     *
     * @param invalidTableName the invalid table name of this transaction module master
     */
    public void setInvalidTableName(String invalidTableName);

    /**
     * Returns the table name of this transaction module master.
     *
     * @return the table name of this transaction module master
     */
    @AutoEscape
    public String getTableName();

    /**
     * Sets the table name of this transaction module master.
     *
     * @param tableName the table name of this transaction module master
     */
    public void setTableName(String tableName);

    /**
     * Returns the module name of this transaction module master.
     *
     * @return the module name of this transaction module master
     */
    @AutoEscape
    public String getModuleName();

    /**
     * Sets the module name of this transaction module master.
     *
     * @param moduleName the module name of this transaction module master
     */
    public void setModuleName(String moduleName);

    /**
     * Returns the tab name of this transaction module master.
     *
     * @return the tab name of this transaction module master
     */
    @AutoEscape
    public String getTabName();

    /**
     * Sets the tab name of this transaction module master.
     *
     * @param tabName the tab name of this transaction module master
     */
    public void setTabName(String tabName);

    @Override
    public boolean isNew();

    @Override
    public void setNew(boolean n);

    @Override
    public boolean isCachedModel();

    @Override
    public void setCachedModel(boolean cachedModel);

    @Override
    public boolean isEscapedModel();

    @Override
    public Serializable getPrimaryKeyObj();

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj);

    @Override
    public ExpandoBridge getExpandoBridge();

    @Override
    public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

    @Override
    public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

    @Override
    public void setExpandoBridgeAttributes(ServiceContext serviceContext);

    @Override
    public Object clone();

    @Override
    public int compareTo(TransactionModuleMaster transactionModuleMaster);

    @Override
    public int hashCode();

    @Override
    public CacheModel<TransactionModuleMaster> toCacheModel();

    @Override
    public TransactionModuleMaster toEscapedModel();

    @Override
    public TransactionModuleMaster toUnescapedModel();

    @Override
    public String toString();

    @Override
    public String toXmlString();
}
