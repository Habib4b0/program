package com.stpl.app.model.impl;

import com.stpl.app.model.ProjectionMaster;
import com.stpl.app.model.ProjectionMasterModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the ProjectionMaster service. Represents a row in the &quot;PROJECTION_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.ProjectionMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link ProjectionMasterImpl}.
 * </p>
 *
 * @author
 * @see ProjectionMasterImpl
 * @see com.stpl.app.model.ProjectionMaster
 * @see com.stpl.app.model.ProjectionMasterModel
 * @generated
 */
public class ProjectionMasterModelImpl extends BaseModelImpl<ProjectionMaster>
    implements ProjectionMasterModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a projection master model instance should use the {@link com.stpl.app.model.ProjectionMaster} interface instead.
     */
    public static final String TABLE_NAME = "PROJECTION_MASTER";
    public static final Object[][] TABLE_COLUMNS = {
            { "PRODUCT_HIERARCHY_LEVEL", Types.INTEGER },
            { "SAVE_FLAG", Types.BOOLEAN },
            { "PROJECTION_NAME", Types.VARCHAR },
            { "TO_DATE", Types.TIMESTAMP },
            { "PROJECTION_MASTER_SID", Types.INTEGER },
            { "FORECASTING_TYPE", Types.VARCHAR },
            { "PRODUCT_HIER_VERSION_NO", Types.INTEGER },
            { "CUSTOMER_HIER_VERSION_NO", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "CUSTOMER_HIERARCHY_LEVEL", Types.INTEGER },
            { "FROM_DATE", Types.TIMESTAMP },
            { "PRODUCT_HIERARCHY_SID", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "CUSTOMER_HIERARCHY_SID", Types.VARCHAR },
            { "COMPANY_GROUP_SID", Types.VARCHAR },
            { "BRAND_TYPE", Types.BOOLEAN },
            { "MODIFIED_BY", Types.INTEGER },
            { "PROJECTION_DESCRIPTION", Types.VARCHAR },
            { "IS_APPROVED", Types.VARCHAR },
            { "ITEM_GROUP_SID", Types.VARCHAR },
            { "COMPANY_MASTER_SID", Types.VARCHAR },
            { "CUSTOMER_HIERARCHY_INNER_LEVEL", Types.INTEGER },
            { "PRODUCT_HIERARCHY_INNER_LEVEL", Types.INTEGER },
            { "CUST_RELATIONSHIP_BUILDER_SID", Types.VARCHAR },
            { "PROD_RELATIONSHIP_BUILDER_SID", Types.VARCHAR },
            { "DISCOUNT_TYPE", Types.INTEGER },
            { "BUSINESS_UNIT", Types.INTEGER },
            { "DEDUCTION_HIERARCHY_SID", Types.VARCHAR },
            { "DED_RELATIONSHIP_BULDER_SID", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table PROJECTION_MASTER (PRODUCT_HIERARCHY_LEVEL INTEGER,SAVE_FLAG BOOLEAN,PROJECTION_NAME VARCHAR(75) null,TO_DATE DATE null,PROJECTION_MASTER_SID INTEGER not null primary key IDENTITY,FORECASTING_TYPE VARCHAR(75) null,PRODUCT_HIER_VERSION_NO INTEGER,CUSTOMER_HIER_VERSION_NO INTEGER,MODIFIED_DATE DATE null,CUSTOMER_HIERARCHY_LEVEL INTEGER,FROM_DATE DATE null,PRODUCT_HIERARCHY_SID VARCHAR(75) null,CREATED_DATE DATE null,CREATED_BY INTEGER,CUSTOMER_HIERARCHY_SID VARCHAR(75) null,COMPANY_GROUP_SID VARCHAR(75) null,BRAND_TYPE BOOLEAN,MODIFIED_BY INTEGER,PROJECTION_DESCRIPTION VARCHAR(75) null,IS_APPROVED VARCHAR(75) null,ITEM_GROUP_SID VARCHAR(75) null,COMPANY_MASTER_SID VARCHAR(75) null,CUSTOMER_HIERARCHY_INNER_LEVEL INTEGER,PRODUCT_HIERARCHY_INNER_LEVEL INTEGER,CUST_RELATIONSHIP_BUILDER_SID VARCHAR(75) null,PROD_RELATIONSHIP_BUILDER_SID VARCHAR(75) null,DISCOUNT_TYPE INTEGER,BUSINESS_UNIT INTEGER,DEDUCTION_HIERARCHY_SID VARCHAR(75) null,DED_RELATIONSHIP_BULDER_SID VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table PROJECTION_MASTER";
    public static final String ORDER_BY_JPQL = " ORDER BY projectionMaster.projectionMasterSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY PROJECTION_MASTER.PROJECTION_MASTER_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.ProjectionMaster"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.ProjectionMaster"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.ProjectionMaster"));
    private static ClassLoader _classLoader = ProjectionMaster.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            ProjectionMaster.class
        };
    private int _productHierarchyLevel;
    private boolean _saveFlag;
    private String _projectionName;
    private Date _toDate;
    private int _projectionMasterSid;
    private String _forecastingType;
    private int _productHierVersionNo;
    private int _customerHierVersionNo;
    private Date _modifiedDate;
    private int _customerHierarchyLevel;
    private Date _fromDate;
    private String _productHierarchySid;
    private Date _createdDate;
    private int _createdBy;
    private String _customerHierarchySid;
    private String _companyGroupSid;
    private boolean _brandType;
    private int _modifiedBy;
    private String _projectionDescription;
    private String _isApproved;
    private String _itemGroupSid;
    private String _companyMasterSid;
    private int _customerHierarchyInnerLevel;
    private int _productHierarchyInnerLevel;
    private String _custRelationshipBuilderSid;
    private String _prodRelationshipBuilderSid;
    private int _discountType;
    private int _businessUnit;
    private String _deductionHierarchySid;
    private String _dedRelationshipBuilderSid;
    private ProjectionMaster _escapedModel;

    public ProjectionMasterModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _projectionMasterSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setProjectionMasterSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _projectionMasterSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return ProjectionMaster.class;
    }

    @Override
    public String getModelClassName() {
        return ProjectionMaster.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("productHierarchyLevel", getProductHierarchyLevel());
        attributes.put("saveFlag", getSaveFlag());
        attributes.put("projectionName", getProjectionName());
        attributes.put("toDate", getToDate());
        attributes.put("projectionMasterSid", getProjectionMasterSid());
        attributes.put("forecastingType", getForecastingType());
        attributes.put("productHierVersionNo", getProductHierVersionNo());
        attributes.put("customerHierVersionNo", getCustomerHierVersionNo());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("customerHierarchyLevel", getCustomerHierarchyLevel());
        attributes.put("fromDate", getFromDate());
        attributes.put("productHierarchySid", getProductHierarchySid());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("customerHierarchySid", getCustomerHierarchySid());
        attributes.put("companyGroupSid", getCompanyGroupSid());
        attributes.put("brandType", getBrandType());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("projectionDescription", getProjectionDescription());
        attributes.put("isApproved", getIsApproved());
        attributes.put("itemGroupSid", getItemGroupSid());
        attributes.put("companyMasterSid", getCompanyMasterSid());
        attributes.put("customerHierarchyInnerLevel",
            getCustomerHierarchyInnerLevel());
        attributes.put("productHierarchyInnerLevel",
            getProductHierarchyInnerLevel());
        attributes.put("custRelationshipBuilderSid",
            getCustRelationshipBuilderSid());
        attributes.put("prodRelationshipBuilderSid",
            getProdRelationshipBuilderSid());
        attributes.put("discountType", getDiscountType());
        attributes.put("businessUnit", getBusinessUnit());
        attributes.put("deductionHierarchySid", getDeductionHierarchySid());
        attributes.put("dedRelationshipBuilderSid",
            getDedRelationshipBuilderSid());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer productHierarchyLevel = (Integer) attributes.get(
                "productHierarchyLevel");

        if (productHierarchyLevel != null) {
            setProductHierarchyLevel(productHierarchyLevel);
        }

        Boolean saveFlag = (Boolean) attributes.get("saveFlag");

        if (saveFlag != null) {
            setSaveFlag(saveFlag);
        }

        String projectionName = (String) attributes.get("projectionName");

        if (projectionName != null) {
            setProjectionName(projectionName);
        }

        Date toDate = (Date) attributes.get("toDate");

        if (toDate != null) {
            setToDate(toDate);
        }

        Integer projectionMasterSid = (Integer) attributes.get(
                "projectionMasterSid");

        if (projectionMasterSid != null) {
            setProjectionMasterSid(projectionMasterSid);
        }

        String forecastingType = (String) attributes.get("forecastingType");

        if (forecastingType != null) {
            setForecastingType(forecastingType);
        }

        Integer productHierVersionNo = (Integer) attributes.get(
                "productHierVersionNo");

        if (productHierVersionNo != null) {
            setProductHierVersionNo(productHierVersionNo);
        }

        Integer customerHierVersionNo = (Integer) attributes.get(
                "customerHierVersionNo");

        if (customerHierVersionNo != null) {
            setCustomerHierVersionNo(customerHierVersionNo);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        Integer customerHierarchyLevel = (Integer) attributes.get(
                "customerHierarchyLevel");

        if (customerHierarchyLevel != null) {
            setCustomerHierarchyLevel(customerHierarchyLevel);
        }

        Date fromDate = (Date) attributes.get("fromDate");

        if (fromDate != null) {
            setFromDate(fromDate);
        }

        String productHierarchySid = (String) attributes.get(
                "productHierarchySid");

        if (productHierarchySid != null) {
            setProductHierarchySid(productHierarchySid);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String customerHierarchySid = (String) attributes.get(
                "customerHierarchySid");

        if (customerHierarchySid != null) {
            setCustomerHierarchySid(customerHierarchySid);
        }

        String companyGroupSid = (String) attributes.get("companyGroupSid");

        if (companyGroupSid != null) {
            setCompanyGroupSid(companyGroupSid);
        }

        Boolean brandType = (Boolean) attributes.get("brandType");

        if (brandType != null) {
            setBrandType(brandType);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String projectionDescription = (String) attributes.get(
                "projectionDescription");

        if (projectionDescription != null) {
            setProjectionDescription(projectionDescription);
        }

        String isApproved = (String) attributes.get("isApproved");

        if (isApproved != null) {
            setIsApproved(isApproved);
        }

        String itemGroupSid = (String) attributes.get("itemGroupSid");

        if (itemGroupSid != null) {
            setItemGroupSid(itemGroupSid);
        }

        String companyMasterSid = (String) attributes.get("companyMasterSid");

        if (companyMasterSid != null) {
            setCompanyMasterSid(companyMasterSid);
        }

        Integer customerHierarchyInnerLevel = (Integer) attributes.get(
                "customerHierarchyInnerLevel");

        if (customerHierarchyInnerLevel != null) {
            setCustomerHierarchyInnerLevel(customerHierarchyInnerLevel);
        }

        Integer productHierarchyInnerLevel = (Integer) attributes.get(
                "productHierarchyInnerLevel");

        if (productHierarchyInnerLevel != null) {
            setProductHierarchyInnerLevel(productHierarchyInnerLevel);
        }

        String custRelationshipBuilderSid = (String) attributes.get(
                "custRelationshipBuilderSid");

        if (custRelationshipBuilderSid != null) {
            setCustRelationshipBuilderSid(custRelationshipBuilderSid);
        }

        String prodRelationshipBuilderSid = (String) attributes.get(
                "prodRelationshipBuilderSid");

        if (prodRelationshipBuilderSid != null) {
            setProdRelationshipBuilderSid(prodRelationshipBuilderSid);
        }

        Integer discountType = (Integer) attributes.get("discountType");

        if (discountType != null) {
            setDiscountType(discountType);
        }

        Integer businessUnit = (Integer) attributes.get("businessUnit");

        if (businessUnit != null) {
            setBusinessUnit(businessUnit);
        }

        String deductionHierarchySid = (String) attributes.get(
                "deductionHierarchySid");

        if (deductionHierarchySid != null) {
            setDeductionHierarchySid(deductionHierarchySid);
        }

        String dedRelationshipBuilderSid = (String) attributes.get(
                "dedRelationshipBuilderSid");

        if (dedRelationshipBuilderSid != null) {
            setDedRelationshipBuilderSid(dedRelationshipBuilderSid);
        }
    }

    @Override
    public int getProductHierarchyLevel() {
        return _productHierarchyLevel;
    }

    @Override
    public void setProductHierarchyLevel(int productHierarchyLevel) {
        _productHierarchyLevel = productHierarchyLevel;
    }

    @Override
    public boolean getSaveFlag() {
        return _saveFlag;
    }

    @Override
    public boolean isSaveFlag() {
        return _saveFlag;
    }

    @Override
    public void setSaveFlag(boolean saveFlag) {
        _saveFlag = saveFlag;
    }

    @Override
    public String getProjectionName() {
        if (_projectionName == null) {
            return StringPool.BLANK;
        } else {
            return _projectionName;
        }
    }

    @Override
    public void setProjectionName(String projectionName) {
        _projectionName = projectionName;
    }

    @Override
    public Date getToDate() {
        return _toDate;
    }

    @Override
    public void setToDate(Date toDate) {
        _toDate = toDate;
    }

    @Override
    public int getProjectionMasterSid() {
        return _projectionMasterSid;
    }

    @Override
    public void setProjectionMasterSid(int projectionMasterSid) {
        _projectionMasterSid = projectionMasterSid;
    }

    @Override
    public String getForecastingType() {
        if (_forecastingType == null) {
            return StringPool.BLANK;
        } else {
            return _forecastingType;
        }
    }

    @Override
    public void setForecastingType(String forecastingType) {
        _forecastingType = forecastingType;
    }

    @Override
    public int getProductHierVersionNo() {
        return _productHierVersionNo;
    }

    @Override
    public void setProductHierVersionNo(int productHierVersionNo) {
        _productHierVersionNo = productHierVersionNo;
    }

    @Override
    public int getCustomerHierVersionNo() {
        return _customerHierVersionNo;
    }

    @Override
    public void setCustomerHierVersionNo(int customerHierVersionNo) {
        _customerHierVersionNo = customerHierVersionNo;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public int getCustomerHierarchyLevel() {
        return _customerHierarchyLevel;
    }

    @Override
    public void setCustomerHierarchyLevel(int customerHierarchyLevel) {
        _customerHierarchyLevel = customerHierarchyLevel;
    }

    @Override
    public Date getFromDate() {
        return _fromDate;
    }

    @Override
    public void setFromDate(Date fromDate) {
        _fromDate = fromDate;
    }

    @Override
    public String getProductHierarchySid() {
        return _productHierarchySid;
    }

    @Override
    public void setProductHierarchySid(String productHierarchySid) {
        _productHierarchySid = productHierarchySid;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getCustomerHierarchySid() {
        return _customerHierarchySid;
    }

    @Override
    public void setCustomerHierarchySid(String customerHierarchySid) {
        _customerHierarchySid = customerHierarchySid;
    }

    @Override
    public String getCompanyGroupSid() {
        return _companyGroupSid;
    }

    @Override
    public void setCompanyGroupSid(String companyGroupSid) {
        _companyGroupSid = companyGroupSid;
    }

    @Override
    public boolean getBrandType() {
        return _brandType;
    }

    @Override
    public boolean isBrandType() {
        return _brandType;
    }

    @Override
    public void setBrandType(boolean brandType) {
        _brandType = brandType;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getProjectionDescription() {
        if (_projectionDescription == null) {
            return StringPool.BLANK;
        } else {
            return _projectionDescription;
        }
    }

    @Override
    public void setProjectionDescription(String projectionDescription) {
        _projectionDescription = projectionDescription;
    }

    @Override
    public String getIsApproved() {
        if (_isApproved == null) {
            return StringPool.BLANK;
        } else {
            return _isApproved;
        }
    }

    @Override
    public void setIsApproved(String isApproved) {
        _isApproved = isApproved;
    }

    @Override
    public String getItemGroupSid() {
        return _itemGroupSid;
    }

    @Override
    public void setItemGroupSid(String itemGroupSid) {
        _itemGroupSid = itemGroupSid;
    }

    @Override
    public String getCompanyMasterSid() {
        return _companyMasterSid;
    }

    @Override
    public void setCompanyMasterSid(String companyMasterSid) {
        _companyMasterSid = companyMasterSid;
    }

    @Override
    public int getCustomerHierarchyInnerLevel() {
        return _customerHierarchyInnerLevel;
    }

    @Override
    public void setCustomerHierarchyInnerLevel(int customerHierarchyInnerLevel) {
        _customerHierarchyInnerLevel = customerHierarchyInnerLevel;
    }

    @Override
    public int getProductHierarchyInnerLevel() {
        return _productHierarchyInnerLevel;
    }

    @Override
    public void setProductHierarchyInnerLevel(int productHierarchyInnerLevel) {
        _productHierarchyInnerLevel = productHierarchyInnerLevel;
    }

    @Override
    public String getCustRelationshipBuilderSid() {
        return _custRelationshipBuilderSid;
    }

    @Override
    public void setCustRelationshipBuilderSid(String custRelationshipBuilderSid) {
        _custRelationshipBuilderSid = custRelationshipBuilderSid;
    }

    @Override
    public String getProdRelationshipBuilderSid() {
        return _prodRelationshipBuilderSid;
    }

    @Override
    public void setProdRelationshipBuilderSid(String prodRelationshipBuilderSid) {
        _prodRelationshipBuilderSid = prodRelationshipBuilderSid;
    }

    @Override
    public int getDiscountType() {
        return _discountType;
    }

    @Override
    public void setDiscountType(int discountType) {
        _discountType = discountType;
    }

    @Override
    public int getBusinessUnit() {
        return _businessUnit;
    }

    @Override
    public void setBusinessUnit(int businessUnit) {
        _businessUnit = businessUnit;
    }

    @Override
    public String getDeductionHierarchySid() {
        return _deductionHierarchySid;
    }

    @Override
    public void setDeductionHierarchySid(String deductionHierarchySid) {
        _deductionHierarchySid = deductionHierarchySid;
    }

    @Override
    public String getDedRelationshipBuilderSid() {
        return _dedRelationshipBuilderSid;
    }

    @Override
    public void setDedRelationshipBuilderSid(String dedRelationshipBuilderSid) {
        _dedRelationshipBuilderSid = dedRelationshipBuilderSid;
    }

    @Override
    public ProjectionMaster toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (ProjectionMaster) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        ProjectionMasterImpl projectionMasterImpl = new ProjectionMasterImpl();

        projectionMasterImpl.setProductHierarchyLevel(getProductHierarchyLevel());
        projectionMasterImpl.setSaveFlag(getSaveFlag());
        projectionMasterImpl.setProjectionName(getProjectionName());
        projectionMasterImpl.setToDate(getToDate());
        projectionMasterImpl.setProjectionMasterSid(getProjectionMasterSid());
        projectionMasterImpl.setForecastingType(getForecastingType());
        projectionMasterImpl.setProductHierVersionNo(getProductHierVersionNo());
        projectionMasterImpl.setCustomerHierVersionNo(getCustomerHierVersionNo());
        projectionMasterImpl.setModifiedDate(getModifiedDate());
        projectionMasterImpl.setCustomerHierarchyLevel(getCustomerHierarchyLevel());
        projectionMasterImpl.setFromDate(getFromDate());
        projectionMasterImpl.setProductHierarchySid(getProductHierarchySid());
        projectionMasterImpl.setCreatedDate(getCreatedDate());
        projectionMasterImpl.setCreatedBy(getCreatedBy());
        projectionMasterImpl.setCustomerHierarchySid(getCustomerHierarchySid());
        projectionMasterImpl.setCompanyGroupSid(getCompanyGroupSid());
        projectionMasterImpl.setBrandType(getBrandType());
        projectionMasterImpl.setModifiedBy(getModifiedBy());
        projectionMasterImpl.setProjectionDescription(getProjectionDescription());
        projectionMasterImpl.setIsApproved(getIsApproved());
        projectionMasterImpl.setItemGroupSid(getItemGroupSid());
        projectionMasterImpl.setCompanyMasterSid(getCompanyMasterSid());
        projectionMasterImpl.setCustomerHierarchyInnerLevel(getCustomerHierarchyInnerLevel());
        projectionMasterImpl.setProductHierarchyInnerLevel(getProductHierarchyInnerLevel());
        projectionMasterImpl.setCustRelationshipBuilderSid(getCustRelationshipBuilderSid());
        projectionMasterImpl.setProdRelationshipBuilderSid(getProdRelationshipBuilderSid());
        projectionMasterImpl.setDiscountType(getDiscountType());
        projectionMasterImpl.setBusinessUnit(getBusinessUnit());
        projectionMasterImpl.setDeductionHierarchySid(getDeductionHierarchySid());
        projectionMasterImpl.setDedRelationshipBuilderSid(getDedRelationshipBuilderSid());

        projectionMasterImpl.resetOriginalValues();

        return projectionMasterImpl;
    }

    @Override
    public int compareTo(ProjectionMaster projectionMaster) {
        int primaryKey = projectionMaster.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof ProjectionMaster)) {
            return false;
        }

        ProjectionMaster projectionMaster = (ProjectionMaster) obj;

        int primaryKey = projectionMaster.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<ProjectionMaster> toCacheModel() {
        ProjectionMasterCacheModel projectionMasterCacheModel = new ProjectionMasterCacheModel();

        projectionMasterCacheModel.productHierarchyLevel = getProductHierarchyLevel();

        projectionMasterCacheModel.saveFlag = getSaveFlag();

        projectionMasterCacheModel.projectionName = getProjectionName();

        String projectionName = projectionMasterCacheModel.projectionName;

        if ((projectionName != null) && (projectionName.length() == 0)) {
            projectionMasterCacheModel.projectionName = null;
        }

        Date toDate = getToDate();

        if (toDate != null) {
            projectionMasterCacheModel.toDate = toDate.getTime();
        } else {
            projectionMasterCacheModel.toDate = Long.MIN_VALUE;
        }

        projectionMasterCacheModel.projectionMasterSid = getProjectionMasterSid();

        projectionMasterCacheModel.forecastingType = getForecastingType();

        String forecastingType = projectionMasterCacheModel.forecastingType;

        if ((forecastingType != null) && (forecastingType.length() == 0)) {
            projectionMasterCacheModel.forecastingType = null;
        }

        projectionMasterCacheModel.productHierVersionNo = getProductHierVersionNo();

        projectionMasterCacheModel.customerHierVersionNo = getCustomerHierVersionNo();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            projectionMasterCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            projectionMasterCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        projectionMasterCacheModel.customerHierarchyLevel = getCustomerHierarchyLevel();

        Date fromDate = getFromDate();

        if (fromDate != null) {
            projectionMasterCacheModel.fromDate = fromDate.getTime();
        } else {
            projectionMasterCacheModel.fromDate = Long.MIN_VALUE;
        }

        projectionMasterCacheModel.productHierarchySid = getProductHierarchySid();

        String productHierarchySid = projectionMasterCacheModel.productHierarchySid;

        if ((productHierarchySid != null) &&
                (productHierarchySid.length() == 0)) {
            projectionMasterCacheModel.productHierarchySid = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            projectionMasterCacheModel.createdDate = createdDate.getTime();
        } else {
            projectionMasterCacheModel.createdDate = Long.MIN_VALUE;
        }

        projectionMasterCacheModel.createdBy = getCreatedBy();

        projectionMasterCacheModel.customerHierarchySid = getCustomerHierarchySid();

        String customerHierarchySid = projectionMasterCacheModel.customerHierarchySid;

        if ((customerHierarchySid != null) &&
                (customerHierarchySid.length() == 0)) {
            projectionMasterCacheModel.customerHierarchySid = null;
        }

        projectionMasterCacheModel.companyGroupSid = getCompanyGroupSid();

        String companyGroupSid = projectionMasterCacheModel.companyGroupSid;

        if ((companyGroupSid != null) && (companyGroupSid.length() == 0)) {
            projectionMasterCacheModel.companyGroupSid = null;
        }

        projectionMasterCacheModel.brandType = getBrandType();

        projectionMasterCacheModel.modifiedBy = getModifiedBy();

        projectionMasterCacheModel.projectionDescription = getProjectionDescription();

        String projectionDescription = projectionMasterCacheModel.projectionDescription;

        if ((projectionDescription != null) &&
                (projectionDescription.length() == 0)) {
            projectionMasterCacheModel.projectionDescription = null;
        }

        projectionMasterCacheModel.isApproved = getIsApproved();

        String isApproved = projectionMasterCacheModel.isApproved;

        if ((isApproved != null) && (isApproved.length() == 0)) {
            projectionMasterCacheModel.isApproved = null;
        }

        projectionMasterCacheModel.itemGroupSid = getItemGroupSid();

        String itemGroupSid = projectionMasterCacheModel.itemGroupSid;

        if ((itemGroupSid != null) && (itemGroupSid.length() == 0)) {
            projectionMasterCacheModel.itemGroupSid = null;
        }

        projectionMasterCacheModel.companyMasterSid = getCompanyMasterSid();

        String companyMasterSid = projectionMasterCacheModel.companyMasterSid;

        if ((companyMasterSid != null) && (companyMasterSid.length() == 0)) {
            projectionMasterCacheModel.companyMasterSid = null;
        }

        projectionMasterCacheModel.customerHierarchyInnerLevel = getCustomerHierarchyInnerLevel();

        projectionMasterCacheModel.productHierarchyInnerLevel = getProductHierarchyInnerLevel();

        projectionMasterCacheModel.custRelationshipBuilderSid = getCustRelationshipBuilderSid();

        String custRelationshipBuilderSid = projectionMasterCacheModel.custRelationshipBuilderSid;

        if ((custRelationshipBuilderSid != null) &&
                (custRelationshipBuilderSid.length() == 0)) {
            projectionMasterCacheModel.custRelationshipBuilderSid = null;
        }

        projectionMasterCacheModel.prodRelationshipBuilderSid = getProdRelationshipBuilderSid();

        String prodRelationshipBuilderSid = projectionMasterCacheModel.prodRelationshipBuilderSid;

        if ((prodRelationshipBuilderSid != null) &&
                (prodRelationshipBuilderSid.length() == 0)) {
            projectionMasterCacheModel.prodRelationshipBuilderSid = null;
        }

        projectionMasterCacheModel.discountType = getDiscountType();

        projectionMasterCacheModel.businessUnit = getBusinessUnit();

        projectionMasterCacheModel.deductionHierarchySid = getDeductionHierarchySid();

        String deductionHierarchySid = projectionMasterCacheModel.deductionHierarchySid;

        if ((deductionHierarchySid != null) &&
                (deductionHierarchySid.length() == 0)) {
            projectionMasterCacheModel.deductionHierarchySid = null;
        }

        projectionMasterCacheModel.dedRelationshipBuilderSid = getDedRelationshipBuilderSid();

        String dedRelationshipBuilderSid = projectionMasterCacheModel.dedRelationshipBuilderSid;

        if ((dedRelationshipBuilderSid != null) &&
                (dedRelationshipBuilderSid.length() == 0)) {
            projectionMasterCacheModel.dedRelationshipBuilderSid = null;
        }

        return projectionMasterCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(61);

        sb.append("{productHierarchyLevel=");
        sb.append(getProductHierarchyLevel());
        sb.append(", saveFlag=");
        sb.append(getSaveFlag());
        sb.append(", projectionName=");
        sb.append(getProjectionName());
        sb.append(", toDate=");
        sb.append(getToDate());
        sb.append(", projectionMasterSid=");
        sb.append(getProjectionMasterSid());
        sb.append(", forecastingType=");
        sb.append(getForecastingType());
        sb.append(", productHierVersionNo=");
        sb.append(getProductHierVersionNo());
        sb.append(", customerHierVersionNo=");
        sb.append(getCustomerHierVersionNo());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", customerHierarchyLevel=");
        sb.append(getCustomerHierarchyLevel());
        sb.append(", fromDate=");
        sb.append(getFromDate());
        sb.append(", productHierarchySid=");
        sb.append(getProductHierarchySid());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", customerHierarchySid=");
        sb.append(getCustomerHierarchySid());
        sb.append(", companyGroupSid=");
        sb.append(getCompanyGroupSid());
        sb.append(", brandType=");
        sb.append(getBrandType());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", projectionDescription=");
        sb.append(getProjectionDescription());
        sb.append(", isApproved=");
        sb.append(getIsApproved());
        sb.append(", itemGroupSid=");
        sb.append(getItemGroupSid());
        sb.append(", companyMasterSid=");
        sb.append(getCompanyMasterSid());
        sb.append(", customerHierarchyInnerLevel=");
        sb.append(getCustomerHierarchyInnerLevel());
        sb.append(", productHierarchyInnerLevel=");
        sb.append(getProductHierarchyInnerLevel());
        sb.append(", custRelationshipBuilderSid=");
        sb.append(getCustRelationshipBuilderSid());
        sb.append(", prodRelationshipBuilderSid=");
        sb.append(getProdRelationshipBuilderSid());
        sb.append(", discountType=");
        sb.append(getDiscountType());
        sb.append(", businessUnit=");
        sb.append(getBusinessUnit());
        sb.append(", deductionHierarchySid=");
        sb.append(getDeductionHierarchySid());
        sb.append(", dedRelationshipBuilderSid=");
        sb.append(getDedRelationshipBuilderSid());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(94);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.ProjectionMaster");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>productHierarchyLevel</column-name><column-value><![CDATA[");
        sb.append(getProductHierarchyLevel());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>saveFlag</column-name><column-value><![CDATA[");
        sb.append(getSaveFlag());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>projectionName</column-name><column-value><![CDATA[");
        sb.append(getProjectionName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>toDate</column-name><column-value><![CDATA[");
        sb.append(getToDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>projectionMasterSid</column-name><column-value><![CDATA[");
        sb.append(getProjectionMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>forecastingType</column-name><column-value><![CDATA[");
        sb.append(getForecastingType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>productHierVersionNo</column-name><column-value><![CDATA[");
        sb.append(getProductHierVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerHierVersionNo</column-name><column-value><![CDATA[");
        sb.append(getCustomerHierVersionNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerHierarchyLevel</column-name><column-value><![CDATA[");
        sb.append(getCustomerHierarchyLevel());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>fromDate</column-name><column-value><![CDATA[");
        sb.append(getFromDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>productHierarchySid</column-name><column-value><![CDATA[");
        sb.append(getProductHierarchySid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerHierarchySid</column-name><column-value><![CDATA[");
        sb.append(getCustomerHierarchySid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyGroupSid</column-name><column-value><![CDATA[");
        sb.append(getCompanyGroupSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>brandType</column-name><column-value><![CDATA[");
        sb.append(getBrandType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>projectionDescription</column-name><column-value><![CDATA[");
        sb.append(getProjectionDescription());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>isApproved</column-name><column-value><![CDATA[");
        sb.append(getIsApproved());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemGroupSid</column-name><column-value><![CDATA[");
        sb.append(getItemGroupSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyMasterSid</column-name><column-value><![CDATA[");
        sb.append(getCompanyMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerHierarchyInnerLevel</column-name><column-value><![CDATA[");
        sb.append(getCustomerHierarchyInnerLevel());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>productHierarchyInnerLevel</column-name><column-value><![CDATA[");
        sb.append(getProductHierarchyInnerLevel());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>custRelationshipBuilderSid</column-name><column-value><![CDATA[");
        sb.append(getCustRelationshipBuilderSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>prodRelationshipBuilderSid</column-name><column-value><![CDATA[");
        sb.append(getProdRelationshipBuilderSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>discountType</column-name><column-value><![CDATA[");
        sb.append(getDiscountType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>businessUnit</column-name><column-value><![CDATA[");
        sb.append(getBusinessUnit());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>deductionHierarchySid</column-name><column-value><![CDATA[");
        sb.append(getDeductionHierarchySid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>dedRelationshipBuilderSid</column-name><column-value><![CDATA[");
        sb.append(getDedRelationshipBuilderSid());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
