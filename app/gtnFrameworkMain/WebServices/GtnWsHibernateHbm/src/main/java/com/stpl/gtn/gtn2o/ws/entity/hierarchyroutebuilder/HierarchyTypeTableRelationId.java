package com.stpl.gtn.gtn2o.ws.entity.hierarchyroutebuilder;
// default package
// Generated Aug 24, 2017 1:33:48 PM by Hibernate Tools 5.2.3.Final

/**
 * HierarchyTypeTableRelationId generated by hbm2java
 */
public class HierarchyTypeTableRelationId implements java.io.Serializable {

	private int entityId;
	private String tableName;
	private String hierarchyType;

	public HierarchyTypeTableRelationId() {
	}

	public HierarchyTypeTableRelationId(int entityId, String tableName, String hierarchyType) {
		this.entityId = entityId;
		this.tableName = tableName;
		this.hierarchyType = hierarchyType;
	}

	public int getEntityId() {
		return this.entityId;
	}

	public void setEntityId(int entityId) {
		this.entityId = entityId;
	}

	public String getTableName() {
		return this.tableName;
	}

	public void setTableName(String tableName) {
		this.tableName = tableName;
	}

	public String getHierarchyType() {
		return this.hierarchyType;
	}

	public void setHierarchyType(String hierarchyType) {
		this.hierarchyType = hierarchyType;
	}

	public boolean equals(Object other) {
		if ((this == other))
			return true;
		if ((other == null))
			return false;
		if (!(other instanceof HierarchyTypeTableRelationId))
			return false;
		HierarchyTypeTableRelationId castOther = (HierarchyTypeTableRelationId) other;

		return (this.getEntityId() == castOther.getEntityId())
				&& ((this.getTableName() == castOther.getTableName()) || (this.getTableName() != null
						&& castOther.getTableName() != null && this.getTableName().equals(castOther.getTableName())))
				&& ((this.getHierarchyType() == castOther.getHierarchyType())
						|| (this.getHierarchyType() != null && castOther.getHierarchyType() != null
								&& this.getHierarchyType().equals(castOther.getHierarchyType())));
	}

	public int hashCode() {
		int result = 17;

		result = 37 * result + this.getEntityId();
		result = 37 * result + (getTableName() == null ? 0 : this.getTableName().hashCode());
		result = 37 * result + (getHierarchyType() == null ? 0 : this.getHierarchyType().hashCode());
		return result;
	}

}
