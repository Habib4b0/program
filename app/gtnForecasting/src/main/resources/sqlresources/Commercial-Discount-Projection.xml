<?xml version="1.0" encoding="UTF-8"?>
<!--
To change this license header, choose License Headers in Project Properties.
To change this template file, choose Tools | Templates
and open the template in the editor.
-->


<sql>
    <entity id="discountGenerate">
        <query> 
            <![CDATA[            
              DECLARE @VAR CHAR(1)='?RS'
            DECLARE @FREQUENCY CHAR(1)='?F'
             
            IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
              DROP TABLE #PERIOD

            SELECT PERIOD_SID,
                    YEAR,
                   PERIOD = CASE
                              WHEN @FREQUENCY = 'M' THEN  MONTH
                              WHEN @FREQUENCY = 'Q' THEN  QUARTER
                              WHEN @FREQUENCY = 'S' THEN  SEMI_ANNUAL
                              ELSE YEAR 
                            END
            INTO   #PERIOD
            FROM   PERIOD
            
            @REBATE_QUERY
            
            @HIERARCHY_QUERY
            
            IF Object_id('TEMPDB..#ST_NM_DISCOUNT_PROJ_MASTER') IS NOT NULL
                DROP TABLE #ST_NM_DISCOUNT_PROJ_MASTER

              SELECT DPM.CCP_DETAILS_SID,
                     PRICE_GROUP_TYPE,
                     RC.RS_NAME,
                     RC.RS_CONTRACT_SID,   
                     USER_GROUP,
                CHECK_RECORD
              
              INTO   #ST_NM_DISCOUNT_PROJ_MASTER
              FROM   ST_NM_DISCOUNT_PROJ_MASTER DPM
                INNER JOIN RS_CONTRACT RC
                             ON RC.RS_CONTRACT_SID = DPM.RS_CONTRACT_SID  
                    
              WHERE  EXISTS (SELECT 1
                              FROM   CFP_CONTRACT CC
                                     INNER JOIN IFP_CONTRACT IC
                                             ON CC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                                AND CC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                                     INNER JOIN PS_CONTRACT PC
                                             ON PC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                                AND PC.IFP_CONTRACT_SID = IC.IFP_CONTRACT_SID
                                                AND PC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                              WHERE  RC.CFP_CONTRACT_SID = CC.CFP_CONTRACT_SID
                                     AND CC.CFP_CONTRACT_SID = RC.CFP_CONTRACT_SID
                                     AND IC.IFP_CONTRACT_SID = RC.IFP_CONTRACT_SID
                                     AND PC.PS_CONTRACT_SID = RC.PS_CONTRACT_SID
                                     AND CC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                                     AND IC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                                     AND PC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID)
                      AND EXISTS (SELECT 1
                             FROM   #SELECTED_HIERARCHY_NO P
                             WHERE  P.CCP_DETAILS_SID = DPM.CCP_DETAILS_SID
AND P.RS_CONTRACT_SID=DPM.RS_CONTRACT_SID )

              IF Object_id('TEMPDB..#ACTUAL_SALES') IS NOT NULL
                DROP TABLE #ACTUAL_SALES

              SELECT HIERARCHY_NO,
              DISCOUNT,
		  @RS_CONTRACT_ID
                     I.PERIOD,
                     I.YEAR,
                     ACTUAL_SALES=Sum(ACTUAL_SALES),
                     ACTUAL_UNITS=Sum(ACTUAL_UNITS)
              INTO   #ACTUAL_SALES
              FROM   ST_NM_ACTUAL_SALES S
                     INNER JOIN @SELECTED_HIERARCHY_NO C
                             ON C.CCP_DETAILS_SID = S.CCP_DETAILS_SID
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
              GROUP  BY HIERARCHY_NO,
              DISCOUNT,
		  @RS_CONTRACT_ID
                        I.PERIOD,
                        I.YEAR

              IF Object_id('TEMPDB..#ACTUAL_DISCOUNT') IS NOT NULL
                DROP TABLE #ACTUAL_DISCOUNT

              SELECT  HIERARCHY_NO,
                     I.PERIOD,
                     I.YEAR,
                     DISCOUNT_ACTUALS=Sum(ACTUAL_SALES),
                    CASE
         WHEN @VAR = 'R' THEN rs.rs_name
         ELSE m.price_group_type
       END AS discount
       @RS_ID
              INTO   #ACTUAL_DISCOUNT
              FROM   ST_NM_ACTUAL_DISCOUNT S
       JOIN RS_CONTRACT rs
         ON rs.RS_CONTRACT_SID = S.RS_CONTRACT_SID
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
                             
                     JOIN ST_NM_DISCOUNT_PROJ_MASTER m
         ON m.RS_CONTRACT_SID = s.RS_CONTRACT_SID
           AND m.ccp_details_sid = s.ccp_details_sid
	   INNER JOIN #SELECTED_HIERARCHY_NO C
               ON C.CCP_DETAILS_SID = S.CCP_DETAILS_SID
			   AND C.RS_CONTRACT_SID=S.RS_CONTRACT_SID

WHERE  EXISTS (SELECT 1
               FROM   @TABLENAME sr
               WHERE  sr.RS_CONTRACT_SID = rs.RS_CONTRACT_SID
and SR.CCP_DETAILS_SID = S.CCP_DETAILS_SID)
GROUP  BY I.PERIOD,
                        I.YEAR,
                        case 
                        WHEN @VAR = 'R' THEN rs.rs_name
            ELSE m.price_group_type
          END
@RS_ID
,  HIERARCHY_NO

              IF Object_id('TEMPDB..#PROJECTION_SALES') IS NOT NULL
                DROP TABLE #PROJECTION_SALES

             SELECT I.PERIOD,
       I.YEAR,
       PROJECTION_SALES=SUM(PROJECTION_SALES),
       PROJECTION_UNITS=SUM(PROJECTION_UNITS),
       DISCOUNT
       @RS_NO
,	   HIERARCHY_NO
INTO   #PROJECTION_SALES
              FROM   ST_NM_SALES_PROJECTION S
                     INNER JOIN @SELECTED_HIERARCHY_NO C
                             ON C.CCP_DETAILS_SID = S.CCP_DETAILS_SID
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
                     
              GROUP  BY HIERARCHY_NO,
                        I.PERIOD,
                        I.YEAR,
                       DISCOUNT
@RS_NO

              IF Object_id('TEMPDB..#DISCOUNT_PROJECTION') IS NOT NULL
                DROP TABLE #DISCOUNT_PROJECTION

              SELECT  HIERARCHY_NO,
                     I.PERIOD,
                     I.YEAR,
                     PROJECTED_DISCOUNT=Sum(PROJECTION_SALES),
                     AVG(GROWTH) GROWTH,
       CASE
         WHEN @VAR = 'R' THEN rs.rs_name
         ELSE m.price_group_type
       END AS discount
@RS_ID
              INTO   #DISCOUNT_PROJECTION
              FROM   ST_NM_DISCOUNT_PROJECTION S
                     JOIN RS_CONTRACT rs
         ON rs.RS_CONTRACT_SID = S.RS_CONTRACT_SID
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
                    JOIN ST_NM_DISCOUNT_PROJ_MASTER m
         ON m.RS_CONTRACT_SID = s.RS_CONTRACT_SID
            AND m.ccp_details_sid = s.ccp_details_sid

		  INNER JOIN #SELECTED_HIERARCHY_NO C
               ON C.CCP_DETAILS_SID = S.CCP_DETAILS_SID
			   AND C.RS_CONTRACT_SID=S.RS_CONTRACT_SID
WHERE  EXISTS (SELECT 1
               FROM   @TABLENAME sr
               WHERE  sr.RS_CONTRACT_SID = rs.RS_CONTRACT_SID 
               and  SR.CCP_DETAILS_SID = S.CCP_DETAILS_SID)
GROUP  BY I.PERIOD,
                        I.YEAR,
                        CASE
                           WHEN @VAR = 'R' THEN rs.rs_name
            ELSE m.price_group_type
          END
@RS_ID
,		  HIERARCHY_NO

              IF Object_id('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL
                DROP TABLE #DISCOUNT_PROJECTION_MASTER

              SELECT DISCOUNT=CASE
                               WHEN @VAR = 'R' THEN DM.RS_NAME
                              ELSE DM.PRICE_GROUP_TYPE
                             END,
                     @RS_CONTRACT_SID       
                     USER_GROUP=Max(DM.USER_GROUP),
                     CHECK_RECORD=Min(CASE( DM.CHECK_RECORD )
                                        WHEN 1 THEN 1
                                        ELSE 0
                                      END),
                     UNCHECK_COUNT=Sum(CASE( DM.CHECK_RECORD )
                                         WHEN 1 THEN 0
                                         ELSE 1
                                       END),
                       P.HIERARCHY_NO,
                     Count(*) AS CCP_COUNT
              INTO   #DISCOUNT_PROJECTION_MASTER
              FROM   #SELECTED_HIERARCHY_NO P
                     INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM
                             ON P.CCP_DETAILS_SID = DM.CCP_DETAILS_SID
                        AND DM.RS_CONTRACT_SID=P.RS_CONTRACT_SID
              GROUP  BY CASE
                          WHEN @VAR = 'R' THEN DM.RS_NAME
                          ELSE DM.PRICE_GROUP_TYPE
                        END,
                        @RS_CONTRACT_SID
                        P.HIERARCHY_NO
                        
                  IF Object_id('TEMPDB..#CCP_COUNT') IS NOT NULL
                    DROP TABLE #CCP_COUNT
                    SELECT HIERARCHY_NO,DISCOUNT,COUNT(DISTINCT DISCOUNT) CCPS_COUNT
                    INTO #CCP_COUNT
                    FROM #SELECTED_HIERARCHY_NO
                    GROUP BY HIERARCHY_NO,DISCOUNT,CCP_DETAILS_SID

          

           SELECT CHECK_RECORD,
                     DPM.HIERARCHY_NO,
                     AD.YEAR,
                     AD.PERIOD,
                     DPM.DISCOUNT,
                     COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_SALES, 0), 0) * 100 AS ACTUAL_RATE,
                     NULL PROJECTION_RATE,
                     0                                                             AS AP_TABLE_INDICATOR,
                     USER_GROUP,
                     CCP_COUNT,
                     UNCHECK_COUNT,
                     DISCOUNT_ACTUALS                           AS ACTUAL_SALES,
                     COALESCE(DISCOUNT_ACTUALS/ NULLIF(ACTUAL_UNITS, 0), 0)       AS ACTUAL_RPU,
                     NULL                                      AS PROJECTION_SALES,
                     NULL                                                          AS PROJECTION_RPU,
                     NULL                                                          AS GROWTH
                     @DPM_RS_CONTRACT_SID
              FROM   #DISCOUNT_PROJECTION_MASTER DPM
                     INNER JOIN #ACTUAL_DISCOUNT AD
                             ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO
                                AND DPM.DISCOUNT = AD.DISCOUNT
				    @CONDITION1
                     INNER JOIN #ACTUAL_SALES SA
                             ON SA.HIERARCHY_NO = AD.HIERARCHY_NO
                                AND SA.YEAR = AD.YEAR
                                AND SA.PERIOD = AD.PERIOD
                                AND SA.DISCOUNT = AD.DISCOUNT
				     @CONDITION2
                                     inner join #CCP_COUNT cc on cc.HIERARCHY_NO=ad.HIERARCHY_NO
                                     AND cc.DISCOUNT = AD.DISCOUNT
UNION ALL
 SELECT CHECK_RECORD,
                     DPM.HIERARCHY_NO,
                     AD.YEAR,
                     AD.PERIOD,
                     DPM.DISCOUNT,
                     NULL AS                                                              ACTUAL_RATE,
                     COALESCE((PROJECTED_DISCOUNT/NULLIF(CCPS_COUNT,0)) / NULLIF(PROJECTION_SALES, 0), 0) * 100 AS PROJECTION_RATE,
                     1                                                                   AS AP_TABLE_INDICATOR,
                     USER_GROUP,
                        CCP_COUNT,
                     UNCHECK_COUNT,
                     NULL                                                                AS ACTUAL_SALES,
                     NULL                                                                AS ACTUAL_RPU,
                     PROJECTED_DISCOUNT                                                   AS PROJECTION_SALES,
                     COALESCE((PROJECTED_DISCOUNT/NULLIF(CCPS_COUNT,0)) / NULLIF(PROJECTION_UNITS, 0), 0)       AS PROJECTION_RPU,
                     GROWTH
                     @DPM_RS_CONTRACT_SID
              FROM   #DISCOUNT_PROJECTION_MASTER DPM
                     INNER JOIN #DISCOUNT_PROJECTION AD
                             ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO
                                 AND DPM.DISCOUNT = AD.DISCOUNT
				     @CONDITION1
                     INNER JOIN #PROJECTION_SALES SA
                             ON SA.HIERARCHY_NO = AD.HIERARCHY_NO
                                AND SA.discount = AD.discount
                                AND SA.YEAR = AD.YEAR
                                AND SA.PERIOD = AD.PERIOD
                                inner join #CCP_COUNT cc on cc.HIERARCHY_NO=ad.HIERARCHY_NO
                                AND cc.DISCOUNT = AD.DISCOUNT

              ORDER  BY 
                        @CONDITION3 ,
                        DISCOUNT,
                        @ORDER_RS_CONTRACT_SID
                    YEAR,
                        PERIOD,
                        AP_TABLE_INDICATOR 
            
            
                 ]]>
        </query>
    </entity>
    
     <entity id="discountGenerateCustom">
        <query> 
            <![CDATA[            
            DECLARE @VAR CHAR(1)='?RS'
            DECLARE @FREQUENCY CHAR(1)='?F'
            DECLARE @PARENT varchar(1000)='?P'

            IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
	DROP TABLE #PERIOD

SELECT PERIOD_SID,
	YEAR,
	PERIOD = CASE 
                              WHEN @FREQUENCY = 'M' THEN  MONTH
                              WHEN @FREQUENCY = 'Q' THEN  QUARTER
                              WHEN @FREQUENCY = 'S' THEN  SEMI_ANNUAL
		ELSE YEAR
		END
            INTO   #PERIOD
            FROM   PERIOD

            IF Object_id('TEMPDB..#PARENT_VALIDATE') IS NOT NULL
                DROP TABLE #PARENT_VALIDATE

                           CREATE TABLE #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID INT,
                           PARENT_HIERARCHY   VARCHAR(MAX)
                           )
                           insert into #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID,
                           PARENT_HIERARCHY
                           )

                           SELECT DISTINCT mas.RS_CONTRACT_SID,RLD.PARENT_HIERARCHY_NO FROM
                           ST_NM_DISCOUNT_PROJ_MASTER MAS
                           JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON LEVEL_NO=10 AND relationship_builder_sid = @RELVALUE 
                           AND VERSION_NO = @RELVERSION 
                           AND RLD.RELATIONSHIP_LEVEL_VALUES=MAS.RS_CONTRACT_SID
   
            @HIERARCHY_QUERY
            
                        
            IF Object_id('TEMPDB..#ST_NM_DISCOUNT_PROJ_MASTER') IS NOT NULL
                DROP TABLE #ST_NM_DISCOUNT_PROJ_MASTER

              SELECT DPM.CCP_DETAILS_SID,
                     PRICE_GROUP_TYPE,
                     RC.RS_NAME,
                     RC.RS_CONTRACT_SID,   
                     USER_GROUP,
                CHECK_RECORD
              
              INTO   #ST_NM_DISCOUNT_PROJ_MASTER
              FROM   ST_NM_DISCOUNT_PROJ_MASTER DPM
                INNER JOIN RS_CONTRACT RC
                             ON RC.RS_CONTRACT_SID = DPM.RS_CONTRACT_SID  
                    
              WHERE  EXISTS (SELECT 1
                              FROM   CFP_CONTRACT CC
                                     INNER JOIN IFP_CONTRACT IC
                                             ON CC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                                AND CC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                                     INNER JOIN PS_CONTRACT PC
                                             ON PC.CFP_CONTRACT_SID = IC.CFP_CONTRACT_SID
                                                AND PC.IFP_CONTRACT_SID = IC.IFP_CONTRACT_SID
                                                AND PC.CONTRACT_MASTER_SID = IC.CONTRACT_MASTER_SID
                              WHERE  RC.CFP_CONTRACT_SID = CC.CFP_CONTRACT_SID
                                     AND CC.CFP_CONTRACT_SID = RC.CFP_CONTRACT_SID
                                     AND IC.IFP_CONTRACT_SID = RC.IFP_CONTRACT_SID
		AND (
				PC.PS_CONTRACT_SID = RC.PS_CONTRACT_SID
				OR RC.PS_CONTRACT_SID IS NULL
			)
                                     AND CC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                                     AND IC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID
                                     AND PC.CONTRACT_MASTER_SID = RC.CONTRACT_MASTER_SID)
                      AND EXISTS (SELECT 1
                             FROM   #SELECTED_HIERARCHY_NO P
                             WHERE  P.CCP_DETAILS_SID = DPM.CCP_DETAILS_SID
AND P.RS_CONTRACT_SID=DPM.RS_CONTRACT_SID @DPMDEDINCLLUSION @FILTERCCP)

              IF Object_id('TEMPDB..#ACTUAL_SALES') IS NOT NULL
                DROP TABLE #ACTUAL_SALES

              SELECT HIERARCHY_NO,
		  @RS_CONTRACT_ID
                     I.PERIOD,
                     I.YEAR,
                     ACTUAL_SALES=Sum(ACTUAL_SALES),
                     @UOMACTUAL
              INTO   #ACTUAL_SALES
              FROM   ST_NM_ACTUAL_SALES S
                     INNER JOIN (
	SELECT DISTINCT HIERARCHY_NO
		,ccp_details_sid
	FROM #SELECTED_HIERARCHY_NO
	@DEDINCLNWHR
	) C ON C.CCP_DETAILS_SID = S.CCP_DETAILS_SID
JOIN CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID = S.CCP_DETAILS_SID
 @UOMJOIN
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
              GROUP  BY HIERARCHY_NO,
		  @RS_CONTRACT_ID
                        I.PERIOD,
                        I.YEAR

              IF Object_id('TEMPDB..#ACTUAL_DISCOUNT') IS NOT NULL
                DROP TABLE #ACTUAL_DISCOUNT

              SELECT  HIERARCHY_NO,
                     I.PERIOD,
                     I.YEAR,
                     DISCOUNT_ACTUALS=Sum(ACTUAL_SALES)
                    
       @RS_ID
              INTO   #ACTUAL_DISCOUNT
              FROM   ST_NM_ACTUAL_DISCOUNT S
       JOIN RS_CONTRACT rs
         ON rs.RS_CONTRACT_SID = S.RS_CONTRACT_SID
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
                             
                     JOIN ST_NM_DISCOUNT_PROJ_MASTER m
         ON m.RS_CONTRACT_SID = s.RS_CONTRACT_SID
           AND m.ccp_details_sid = s.ccp_details_sid
	   INNER JOIN #SELECTED_HIERARCHY_NO P
               ON P.CCP_DETAILS_SID = S.CCP_DETAILS_SID
			   AND P.RS_CONTRACT_SID=S.RS_CONTRACT_SID
                           @DPMDEDINCLLUSION
WHERE  EXISTS (SELECT 1
               FROM   @TABLENAME sr
               WHERE  sr.RS_CONTRACT_SID = rs.RS_CONTRACT_SID
and SR.CCP_DETAILS_SID = S.CCP_DETAILS_SID)
GROUP  BY I.PERIOD,
                        I.YEAR 
@RS_ID
,  HIERARCHY_NO

              IF Object_id('TEMPDB..#PROJECTION_SALES') IS NOT NULL
                DROP TABLE #PROJECTION_SALES

             SELECT I.PERIOD,
       I.YEAR,
       PROJECTION_SALES=SUM(PROJECTION_SALES),
       @UOMPROJ
       @RS_NO
,	   HIERARCHY_NO
INTO   #PROJECTION_SALES
              FROM   ST_NM_SALES_PROJECTION S
                     INNER JOIN (SELECT DISTINCT HIERARCHY_NO , ccp_details_sid FROM #SELECTED_HIERARCHY_NO @DEDINCLNWHR )C
                             ON C.CCP_DETAILS_SID = S.CCP_DETAILS_SID
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
                     JOIN CCP_DETAILS CCP ON CCP.CCP_DETAILS_SID = S.CCP_DETAILS_SID @UOMJOIN
              GROUP  BY HIERARCHY_NO,
                        I.PERIOD,
                        I.YEAR
@RS_NO

              IF Object_id('TEMPDB..#DISCOUNT_PROJECTION') IS NOT NULL
                DROP TABLE #DISCOUNT_PROJECTION

              SELECT  HIERARCHY_NO,
                     I.PERIOD,
                     I.YEAR,
                     PROJECTED_DISCOUNT=Sum(PROJECTION_SALES),
                     AVG(GROWTH) GROWTH
@RS_ID
              INTO   #DISCOUNT_PROJECTION
              FROM   ST_NM_DISCOUNT_PROJECTION S
                     JOIN RS_CONTRACT rs
         ON rs.RS_CONTRACT_SID = S.RS_CONTRACT_SID
                     INNER JOIN #PERIOD I
                             ON I.PERIOD_SID = S.PERIOD_SID
                    JOIN ST_NM_DISCOUNT_PROJ_MASTER m
         ON m.RS_CONTRACT_SID = s.RS_CONTRACT_SID
            AND m.ccp_details_sid = s.ccp_details_sid

		  INNER JOIN #SELECTED_HIERARCHY_NO P
               ON P.CCP_DETAILS_SID = S.CCP_DETAILS_SID
			   AND P.RS_CONTRACT_SID=S.RS_CONTRACT_SID @DPMDEDINCLLUSION
WHERE  EXISTS (SELECT 1
               FROM   @TABLENAME sr
               WHERE  sr.RS_CONTRACT_SID = rs.RS_CONTRACT_SID 
               and  SR.CCP_DETAILS_SID = S.CCP_DETAILS_SID)
GROUP  BY I.PERIOD,
                        I.YEAR
@RS_ID
,		  HIERARCHY_NO

              IF Object_id('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL
	DROP TABLE #DISCOUNT_PROJECTION_MASTER

              SELECT 
                     @RS_CONTRACT_SID       
                     USER_GROUP=Max(DM.USER_GROUP),
                     CHECK_RECORD=Min(CASE( DM.CHECK_RECORD )
                                        WHEN 1 THEN 1
			ELSE 0
			END),
                     UNCHECK_COUNT=Sum(CASE( DM.CHECK_RECORD )
                                         WHEN 1 THEN 0
			ELSE 1
			END),
	P.HIERARCHY_NO,
                     Count(*) AS CCP_COUNT @HASHDP
              INTO   #DISCOUNT_PROJECTION_MASTER
              FROM   #SELECTED_HIERARCHY_NO P
                     INNER JOIN #ST_NM_DISCOUNT_PROJ_MASTER DM
                             ON P.CCP_DETAILS_SID = DM.CCP_DETAILS_SID
                        AND DM.RS_CONTRACT_SID=P.RS_CONTRACT_SID @DPMDEDINCLLUSION
              GROUP  BY
                        @RS_CONTRACT_SID
                        P.HIERARCHY_NO @HASHDP

                  IF Object_id('TEMPDB..#CCP_COUNT') IS NOT NULL
                    DROP TABLE #CCP_COUNT
                    SELECT HIERARCHY_NO,COUNT(DISTINCT RS_CONTRACT_SID) CCPS_COUNT
                    INTO #CCP_COUNT
                    FROM #SELECTED_HIERARCHY_NO
                    GROUP BY HIERARCHY_NO

                 DECLARE @STAT_SALES INT
	,@EN_SALES INT
	,@ACTUAL_END_PERIOD INT
	,@ACTUAL_START_PERIOD INT

SET @STAT_SALES = (
		SELECT min(PERIOD_SID)
		FROM ST_NM_ACTUAL_SALES
		)
SET @ACTUAL_END_PERIOD = (
		SELECT MAX(PERIOD_SID)
		FROM ST_NM_SALES_PROJECTION
		)
SET @EN_SALES = (
		SELECT MAX(PERIOD_SID)
		FROM ST_NM_ACTUAL_SALES
		)
SET @ACTUAL_START_PERIOD = (
		SELECT MIN(PERIOD_SID)
		FROM ST_NM_SALES_PROJECTION
		)


              SELECT CHECK_RECORD
	,concat(@PARENT,SH.HIERARCHY_NO) as HIERARCHY_NO 
	,SH.YEAR
	,SH.PERIOD
        ,'' DISCOUNT
	,COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_SALES, 0), 0) * 100 AS ACTUAL_RATE
	,NULL PROJECTION_RATE
	,0 AS AP_TABLE_INDICATOR
	,USER_GROUP
	,CCP_COUNT
	,UNCHECK_COUNT
	,DISCOUNT_ACTUALS AS ACTUAL_SALES
	,COALESCE(DISCOUNT_ACTUALS / NULLIF(ACTUAL_UNITS, 0), 0) AS ACTUAL_RPU
	,NULL AS PROJECTION_SALES
	,NULL AS PROJECTION_RPU
	,NULL AS GROWTH @SELCOLDED,INSTR
FROM (
	SELECT HIERARCHY_NO
		,year
		,P.PERIOD,INSTR
	FROM #SELECTED_HIERARCHY_NO SHS
	CROSS JOIN #PERIOD P
	WHERE P.PERIOD_SID BETWEEN @STAT_SALES
			AND @EN_SALES
	GROUP BY year
		,P.PERIOD
		,HIERARCHY_NO,INSTR
	) SH
LEFT JOIN #DISCOUNT_PROJECTION_MASTER DPM ON DPM.HIERARCHY_NO = SH.HIERARCHY_NO
LEFT JOIN #ACTUAL_DISCOUNT AD ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO
	AND SH.YEAR = AD.YEAR
	AND SH.PERIOD = AD.PERIOD
LEFT JOIN #ACTUAL_SALES SA ON SA.HIERARCHY_NO = AD.HIERARCHY_NO
	AND SA.YEAR = SH.YEAR
	AND SA.PERIOD = SH.PERIOD
UNION ALL

SELECT CHECK_RECORD
	,concat(@PARENT,SH.HIERARCHY_NO) as HIERARCHY_NO 
	,SH.YEAR
	,SH.PERIOD
        ,'' DISCOUNT
	,NULL AS ACTUAL_RATE
	,COALESCE((PROJECTED_DISCOUNT) / NULLIF(PROJECTION_SALES, 0), 0) * 100 AS PROJECTION_RATE
	,1 AS AP_TABLE_INDICATOR
	,USER_GROUP
	,CCP_COUNT
	,UNCHECK_COUNT
	,NULL AS ACTUAL_SALES
	,NULL AS ACTUAL_RPU
	,PROJECTED_DISCOUNT AS PROJECTION_SALES
	,COALESCE((PROJECTED_DISCOUNT) / NULLIF(PROJECTION_UNITS, 0), 0) AS PROJECTION_RPU
	,GROWTH @SELCOLDED,INSTR
FROM (
	SELECT HIERARCHY_NO
		,year
		,P.PERIOD,INSTR
	FROM #SELECTED_HIERARCHY_NO SHS
	CROSS JOIN #PERIOD P
	WHERE P.PERIOD_SID BETWEEN @ACTUAL_START_PERIOD
			AND @ACTUAL_END_PERIOD
	GROUP BY year
		,P.PERIOD
		,HIERARCHY_NO,INSTR
	) SH
LEFT JOIN #DISCOUNT_PROJECTION_MASTER DPM ON DPM.HIERARCHY_NO = SH.HIERARCHY_NO
LEFT JOIN #DISCOUNT_PROJECTION AD ON AD.HIERARCHY_NO = DPM.HIERARCHY_NO
	AND SH.YEAR = AD.YEAR
	AND SH.PERIOD = AD.PERIOD
LEFT JOIN #PROJECTION_SALES SA ON SA.HIERARCHY_NO = AD.HIERARCHY_NO
	AND SA.YEAR = SH.YEAR
	AND SA.PERIOD = SH.PERIOD
ORDER BY INSTR,HIERARCHY_NO
	,YEAR
	,PERIOD
	,AP_TABLE_INDICATOR


                 ]]>
        </query>
    </entity>
    
    <entity id="Program_Category">
        <query> 
            <![CDATA[  
        SELECT DISTINCT M.USER_GROUP FROM  ST_NM_DISCOUNT_PROJ_MASTER M
    WHERE M.PRICE_GROUP_TYPE in (@PROGRAM_CATEGORY) AND M.USER_GROUP IS NOT NULL
    ORDER BY M.USER_GROUP 
         ]]>
        </query>
    </entity>
    <entity id="All_level_UserGroup">
        <query> 
            <![CDATA[  
        SELECT DISTINCT M.USER_GROUP FROM  ST_NM_DISCOUNT_PROJ_MASTER M
    WHERE FILTER_CCP=1 AND M.USER_GROUP IS NOT NULL
    ORDER BY M.USER_GROUP 
         ]]>
        </query>
    </entity>
    
    <entity id="Program">
        <query> 
            <![CDATA[  
        SELECT DISTINCT M.USER_GROUP FROM  ST_NM_DISCOUNT_PROJ_MASTER M
   JOIN RS_CONTRACT J ON M.RS_CONTRACT_SID= J.RS_CONTRACT_SID
    WHERE J.RS_NAME in (@PROGRAMS) 
   AND M.USER_GROUP IS NOT NULL ORDER BY M.USER_GROUP
    
         ]]>
        </query>
    </entity>
    
    <entity id="UPDATE_PROGRAM_CATEGORY_CHECKRECORD">
        <query> 
            <![CDATA[ 
        UPDATE MAS SET CHECK_RECORD = @CHECK_RECORD From ST_NM_DISCOUNT_PROJ_MASTER MAS 
    JOIN ST_CCP_HIERARCHY CCPH ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
    WHERE @HIERARCHY_COLUMN LIKE '@HIERARCHY_NO%'  AND MAS.PRICE_GROUP_TYPE in (@PROGRAM_CATEGORY) @CUSTOM_VIEW
      ]]>
        </query>
    </entity>
    
    <entity id="UPDATE_ALL_LEVEL_HEAD_CHECKRECORD">
        <query> 
            <![CDATA[ 
            
  IF OBJECT_ID('TEMPDB..#DED_HIERARCHY_NO') IS NOT NULL
                    DROP TABLE #DED_HIERARCHY_NO

                    CREATE TABLE #DED_HIERARCHY_NO (HIERARCHY_NO VARCHAR(8000))

                    INSERT INTO #DED_HIERARCHY_NO (HIERARCHY_NO)
                    SELECT HIERARCHY_NO
                    FROM RELATIONSHIP_LEVEL_DEFINITION
                    WHERE RELATIONSHIP_LEVEL_VALUES IN (
                                  @RELATIONSIDS
                                  )
                    AND RELATIONSHIP_BUILDER_SID = @BUILDERSID   
                    AND VERSION_NO = @RELVERSION   
                    AND LEVEL_NO = @LEVNO   
      ]]>
        </query>
    </entity>
    <entity id="UPDATE_ALL_LEVEL_CHECKRECORD">
        <query> 
            <![CDATA[ 
            @DEDTABLE
        UPDATE MAS SET CHECK_RECORD = @CHECK_RECORD From ST_NM_DISCOUNT_PROJ_MASTER MAS 
    JOIN ST_CCP_HIERARCHY CCPH ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
    @DEDJOIN
    WHERE @HIERARCHY_COLUMN LIKE '@HIERARCHY_NO%'  
      ]]>
        </query>
    </entity>
    
    <entity id="UPDATE_PROGRAM_CHECKRECORD">
        <query> 
            <![CDATA[ 
            UPDATE MAS SET CHECK_RECORD = @CHECK_RECORD From ST_NM_DISCOUNT_PROJ_MASTER MAS 
        JOIN ST_CCP_HIERARCHY CCPH ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
        JOIN RS_CONTRACT J ON MAS.RS_CONTRACT_SID = J.RS_CONTRACT_SID
        WHERE J.RS_CONTRACT_SID in (@PROGRAMS) and @HIERARCHY_COLUMN LIKE '@HIERARCHY_NO%' @CUSTOM_VIEW
      ]]>
        </query>
    </entity>
    
    <entity id="GET_COUNT">
        <query> 
            <![CDATA[ 
    IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
                DROP TABLE #SELECTED_HIERARCHY_NO
                CREATE TABLE #SELECTED_HIERARCHY_NO (HIERARCHY_NO varchar(50),INSTR INT)
                INSERT INTO #SELECTED_HIERARCHY_NO
                (HIERARCHY_NO,INSTR)
                SELECT HIERARCHY_NO,INSTR
                FROM   (VALUES  @HIERARCHY_NO )A(HIERARCHY_NO,INSTR)
                
                @REBATE

            SELECT COUNT(DISTINCT SHN.HIERARCHY_NO) from  ST_NM_DISCOUNT_PROJ_MASTER MAS
            JOIN ST_CCP_HIERARCHY CCPH ON MAS.CCP_DETAILS_SID = CCPH.CCP_DETAILS_SID
            JOIN #SELECTED_HIERARCHY_NO SHN ON CCPH.@COLUMN_NAME LIKE SHN.HIERARCHY_NO+'%' @FOR_CUSTOM
            JOIN  #SELECTED_REBATE SR ON SR.PRICE_GROUP_TYPE = MAS.@RS_COLUMN
    
     ]]>
        </query>
    </entity>
    <entity id="GET_COUNT_ALL_LEVEL">
        <query> 
            <![CDATA[ 
    IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
                DROP TABLE #SELECTED_HIERARCHY_NO
                CREATE TABLE #SELECTED_HIERARCHY_NO (HIERARCHY_NO varchar(50),INSTR INT)
                INSERT INTO #SELECTED_HIERARCHY_NO
                (HIERARCHY_NO,INSTR)
                SELECT HIERARCHY_NO,INSTR
                FROM   (VALUES  @HIERARCHY_NO )A(HIERARCHY_NO,INSTR)
                
                IF Object_id('TEMPDB..#SELECTED_REBATE') IS NOT NULL
	DROP TABLE #SELECTED_REBATE

CREATE TABLE #SELECTED_REBATE (DED_HIERARCHY_NO VARCHAR(1000) )

INSERT INTO #SELECTED_REBATE (DED_HIERARCHY_NO)
SELECT   (DED_HIERARCHY_NO)
FROM (
	VALUES @SELECTED_REBATE
		
	) A(DED_HIERARCHY_NO)
        
        ;WITH HIERARCHY AS (
                
            SELECT DISTINCT  A.HIERARCHY_NO,RLD1.RELATIONSHIP_LEVEL_VALUES from  ST_NM_DISCOUNT_PROJ_MASTER MAS
            JOIN ST_CCP_HIERARCHY CCPH ON MAS.CCP_DETAILS_SID = CCPH.CCP_DETAILS_SID
            JOIN  #SELECTED_REBATE SR ON MAS.DEDUCTION_HIERARCHY_NO like SR.DED_HIERARCHY_NO+'%'
            JOIN  #SELECTED_HIERARCHY_NO A ON CCPH.@CUSTORPROD like A.HIERARCHY_NO+'%' AND FILTER_CCP=1 
            @RELJOIN )
            
            SELECT COUNT(DISTINCT HIERARCHY_NO)   FROM (SELECT HIERARCHY_NO = STUFF((
SELECT DISTINCT ', ' + HIERARCHY_NO
FROM HIERARCHY B
WHERE B.RELATIONSHIP_LEVEL_VALUES = A.RELATIONSHIP_LEVEL_VALUES
FOR XML PATH('')
), 1, 2, '')
FROM HIERARCHY A
@RELJOIN )S
           
     ]]>
        </query>
    </entity>
    <entity id="UPDATE_TEMP_GROUP">
        <query> 
            <![CDATA[ 
    
IF Object_id('TEMPDB..#SELECTED_REBATE') IS NOT NULL
	DROP TABLE #SELECTED_REBATE

CREATE TABLE #SELECTED_REBATE (DED_HIERARCHY_NO VARCHAR(1000) )

INSERT INTO #SELECTED_REBATE (DED_HIERARCHY_NO)
SELECT   (DED_HIERARCHY_NO)
FROM (
	VALUES @SELECTED_REBATE
		
	) A(DED_HIERARCHY_NO)
	
	UPDATE MAS SET MAS.USER_GROUP='@USER_GROUP' FROM ST_NM_DISCOUNT_PROJ_MASTER MAS
JOIN ST_CCP_HIERARCHY CCPH ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
JOIN  #SELECTED_REBATE SR ON MAS.DEDUCTION_HIERARCHY_NO like SR.DED_HIERARCHY_NO+'%'
WHERE CUST_HIERARCHY_NO LIKE '@HIERARCHY_NO'
    
     ]]>
        </query>
    </entity>
    
    <entity id="GET_COUNT_PROGRAM_CATEGORY">
        <query> 
            <![CDATA[ 
                    IF Object_id('TEMPDB..#SELECTED_REBATE') IS NOT NULL
                DROP TABLE #SELECTED_REBATE
                CREATE TABLE #SELECTED_REBATE (PRICE_GROUP_TYPE varchar(50))
                INSERT INTO #SELECTED_REBATE
                (PRICE_GROUP_TYPE)
                SELECT PRICE_GROUP_TYPE
                FROM   (VALUES  @DISCOUNT )A(PRICE_GROUP_TYPE)
                  ]]>
        </query>
    </entity>
    
    
    <entity id="GET_COUNT_PROGRAM">
        <query> 
            <![CDATA[ 
                    IF Object_id('TEMPDB..#SELECTED_REBATE') IS NOT NULL
                DROP TABLE #SELECTED_REBATE
                CREATE TABLE #SELECTED_REBATE (PRICE_GROUP_TYPE varchar(50))
                             
                            INSERT INTO #SELECTED_REBATE
                        (PRICE_GROUP_TYPE)
            SELECT A.RS_CONTRACT_SID 
            FROM   (VALUES @DISCOUNT )A(RS_CONTRACT_SID)
                   JOIN RS_CONTRACT R
                     ON R.RS_CONTRACT_SID = A.RS_CONTRACT_SID

                  ]]>
        </query>
    </entity>
    
    
    <entity id="CUSTOM_JOIN">
        <query> 
            <![CDATA[
            AND CCPH.@COLUMN LIKE '@HIERARCHY_NO%'  
                  ]]>
        </query>
    </entity>
    
    <entity id="MANUAL_ENTRY_DISCOUNT">
        <query> 
            <![CDATA[
                @PERIOD_TABLE
                
                 IF OBJECT_ID('TEMPDB..#SELECTED_REBATE') IS NOT NULL
DROP TABLE #SELECTED_REBATE
CREATE TABLE #SELECTED_REBATE (HIERARCHY_NO VARCHAR(8000))
 
INSERT INTO #SELECTED_REBATE (HIERARCHY_NO)
SELECT HIERARCHY_NO
FROM RELATIONSHIP_LEVEL_DEFINITION
WHERE RELATIONSHIP_LEVEL_VALUES IN (
             @RELATIONSIDS
              )
       AND RELATIONSHIP_BUILDER_SID = @BUILDERSID
       AND VERSION_NO = @RELVERSION
       
       
       IF OBJECT_ID('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
       DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO VARCHAR(50),
       CCP_DETAILS_SID INT,
       DISCOUNT VARCHAR(8000),
       RS_CONTRACT_SID INT
       )

INSERT INTO #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO,
       CCP_DETAILS_SID,
       DISCOUNT,
       RS_CONTRACT_SID
       )
SELECT DISTINCT A.HIERARCHY_NO,
       CCPH.CCP_DETAILS_SID,
       SR.HIERARCHY_NO,
       M.RS_CONTRACT_SID
FROM (
       VALUES ('@HIERARCHY_NO')
       ) A(HIERARCHY_NO)
INNER JOIN ST_CCP_HIERARCHY CCPH
       ON (
                     CCPH.PROD_HIERARCHY_NO LIKE HIERARCHY_NO + '%'
                     OR CCPH.CUST_HIERARCHY_NO LIKE HIERARCHY_NO + '%'
                     )
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER M
       ON CCPH.CCP_DETAILS_SID = M.CCP_DETAILS_SID
INNER JOIN #SELECTED_REBATE SR
       ON M.DEDUCTION_HIERARCHY_NO LIKE SR.HIERARCHY_NO + '%' AND FILTER_CCP = 1;

WITH CTE
AS (
       SELECT COUNT(SR.RS_CONTRACT_SID) OVER (
                     PARTITION BY HIERARCHY_NO,
                     DISCOUNT
                     ) AMOUNT_COUNT,
              SR.*,
              COUNT(SR.RS_CONTRACT_SID) OVER (
                     PARTITION BY HIERARCHY_NO,
                     SR.CCP_DETAILS_SID,
                     DISCOUNT
                     ) RATE_RPU_COUNT
       FROM #SELECTED_HIERARCHY_NO SR
       )
UPDATE DPT
SET @SETTER ,
       DPT.REFRESHED_NAME = @REFRESHED_NAME
FROM ST_NM_DISCOUNT_PROJECTION DPT
INNER JOIN CTE M
       ON M.CCP_DETAILS_SID = DPT.CCP_DETAILS_SID
              AND DPT.RS_CONTRACT_SID = M.RS_CONTRACT_SID
INNER JOIN #PERIOD I
       ON I.PERIOD_SID = DPT.PERIOD_SID
WHERE I.YEAR = ?Y
        ]]>
        </query>
    </entity>    
    <entity id="PERIOD_TABLE">
        <query> 
         <![CDATA[
            DECLARE @FREQUENCY CHAR(1)='?F'
            DECLARE @RELVALUE VARCHAR(20)='?R'
            DECLARE @REFRESHED_NAME VARCHAR(10) = '@REFNAME'
             
            IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
            DROP TABLE #PERIOD

            SELECT PERIOD_SID,
            YEAR,
            PERIOD = CASE
            WHEN @FREQUENCY = 'M' THEN  MONTH
            WHEN @FREQUENCY = 'Q' THEN  QUARTER
            WHEN @FREQUENCY = 'S' THEN  SEMI_ANNUAL
            ELSE YEAR 
            END
            INTO   #PERIOD
            FROM   PERIOD
            
            DECLARE @PERIOD_COUNT INT = CASE 
              WHEN @FREQUENCY = 'M'
                     THEN 1
              WHEN @FREQUENCY = 'Q'
                     THEN 3
              WHEN @FREQUENCY = 'S'
                     THEN 6
              ELSE 12
              END

            
             IF Object_id('TEMPDB..#PARENT_VALIDATE') IS NOT NULL
                DROP TABLE #PARENT_VALIDATE

                           CREATE TABLE #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID INT,
                           PARENT_HIERARCHY   VARCHAR(MAX)
                           )
                           insert into #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID,
                           PARENT_HIERARCHY
                           )

                           SELECT DISTINCT mas.RS_CONTRACT_SID,RLD.PARENT_HIERARCHY_NO FROM
                           ST_NM_DISCOUNT_PROJ_MASTER MAS
                           JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON LEVEL_NO=10 
                           AND relationship_builder_sid = @RELVALUE AND VERSION_NO = @RELVERSION AND RLD.RELATIONSHIP_LEVEL_VALUES=MAS.RS_CONTRACT_SID
            
            ]]>
        </query>
    </entity>
    <entity id="discount-selected-hierarchy">
        <query>
            <![CDATA[     
            IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
  DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO
  (
     HIERARCHY_NO    VARCHAR(50),
     CCP_DETAILS_SID INT,
	 DISCOUNT         VARCHAR(100),
	 RS_CONTRACT_SID INT ,DEDUCTION_INCLUSION CHAR(1),INSTR INT
  )
;WITH HIERARCHY AS (SELECT DISTINCT A.HIERARCHY_NO,INSTR,RELATIONSHIP_LEVEL_VALUES
        FROM   (VALUES [?HIERARCHY_NO_VALUES] 
  )A(HIERARCHY_NO,INSTR) 
@RELJOIN
WHERE  EXISTS (SELECT 1
               FROM   ST_NM_DISCOUNT_PROJ_MASTER MAS
                      [?SELECTED_HIERARCHY_JOIN]
                        @RSJOIN
           @USER_GROUP
ORDER  BY HIERARCHY_NO OFFSET
@START ROWS FETCH NEXT @OFFSET ROWS ONLY )
)
INSERT INTO #SELECTED_HIERARCHY_NO
            (HIERARCHY_NO,
             CCP_DETAILS_SID,
			 DISCOUNT,
			 RS_CONTRACT_SID,DEDUCTION_INCLUSION,INSTR
			 )
SELECT DISTINCT STUFF(( SELECT DISTINCT ', ' + HIERARCHY_NO
                           FROM HIERARCHY B
                           WHERE B.RELATIONSHIP_LEVEL_VALUES = A.RELATIONSHIP_LEVEL_VALUES
                           FOR XML PATH('')
                           ), 1, 2, '') HIERARCHY_NO,
INSTR,
       CH.CCP_DETAILS_SID,
	    CASE
                  WHEN @VAR = 'R' THEN rs_name
                  ELSE SPM.price_group_type
                END,
                SPM.rs_contract_sid,SPM.DEDUCTION_INCLUSION
FROM   HIERARCHY A
       [?SELECTED_HIERARCHY_JOIN] 
       @DEDCUSTJOIN
       
            ]]>
        </query>
    </entity>
    <entity id="discount-selected-hierarchy-Custom">
        <query>
            <![CDATA[  
 IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
  DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO
  (
     HIERARCHY_NO    VARCHAR(50),INSTR INT,
     CCP_DETAILS_SID INT,
	 RS_CONTRACT_SID INT ,DEDUCTION_INCLUSION CHAR(1)
  )
  
  ;WITH HIERARCHY AS (SELECT DISTINCT A.HIERARCHY_NO,INSTR,RELATIONSHIP_LEVEL_VALUES
        FROM   (VALUES [?HIERARCHY_NO_VALUES] 
  )A(HIERARCHY_NO,INSTR) 
  @RELJOIN
WHERE  EXISTS (SELECT 1
               FROM   ST_NM_DISCOUNT_PROJ_MASTER MAS
                      [?SELECTED_HIERARCHY_JOIN]
                        @RSJOIN
           @USER_GROUP  and SPM.FILTER_CCP=1 @DEDCUSTJOIN
ORDER  BY A.HIERARCHY_NO OFFSET
@START ROWS FETCH NEXT @OFFSET ROWS ONLY )
)

INSERT INTO #SELECTED_HIERARCHY_NO
            (HIERARCHY_NO,INSTR,
             CCP_DETAILS_SID,
			 RS_CONTRACT_SID,DEDUCTION_INCLUSION
			 )
SELECT DISTINCT STUFF(( SELECT DISTINCT ', ' + HIERARCHY_NO
                           FROM HIERARCHY B
                           WHERE B.RELATIONSHIP_LEVEL_VALUES = A.RELATIONSHIP_LEVEL_VALUES
                           FOR XML PATH('')
                           ), 1, 2, '') HIERARCHY_NO,
       INSTR,
       CH.CCP_DETAILS_SID,
	    
                SPM.rs_contract_sid,SPM.DEDUCTION_INCLUSION
FROM   HIERARCHY A
       [?SELECTED_HIERARCHY_JOIN]    and SPM.FILTER_CCP=1
       @DEDCUSTJOIN
       
            ]]>
        </query>
    </entity>
    
    <entity id="discount-selected-hierarchy-Custom-Count">
        <query>
            <![CDATA[  
 
IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
                DROP TABLE #SELECTED_HIERARCHY_NO
                CREATE TABLE #SELECTED_HIERARCHY_NO (HIERARCHY_NO varchar(50),INSTR INT,CCP_DETAILS_SID INT)

                INSERT INTO #SELECTED_HIERARCHY_NO
                (HIERARCHY_NO,INSTR,
                CCP_DETAILS_SID)
                SELECT DISTINCT A.HIERARCHY_NO,INSTR,CH.CCP_DETAILS_SID
                FROM   (VALUES 	[?HIERARCHY_NO_VALUES])A(HIERARCHY_NO,INSTR)                
               INNER JOIN CUSTOM_CCP_SALES RLD1
	ON RLD1.HIERARCHY_NO = A.HIERARCHY_NO
		AND RLD1.CUST_VIEW_MASTER_SID = @RELVALUE
INNER JOIN ST_CCP_HIERARCHY CH
	ON CH.CCP_DETAILS_SID = RLD1.CCP_DETAILS_SID
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER SPM
	ON SPM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
		AND (
			RLD1.RS_CONTRACT_SID = SPM.RS_CONTRACT_SID
			OR NULLIF(RLD1.RS_CONTRACT_SID, 0) IS NULL
			)

--AND SPM.FILTER_CCP = 1
SELECT COUNT(DISTINCT HIERARCHY_NO)
FROM #SELECTED_HIERARCHY_NO
                   ]]>
        </query>
    </entity>
   
    <entity id="MANUAL_USER_GROUP_SAVE">
        <query>
            <![CDATA[   
      @REBATE_QUERY   
   UPDATE MAS SET MAS.USER_GROUP='@USER_GROUP' FROM ST_NM_DISCOUNT_PROJ_MASTER MAS
JOIN ST_CCP_HIERARCHY CCPH ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
JOIN  #SELECTED_REBATE SR ON SR.PRICE_GROUP_TYPE = MAS.@REBATE_NAME
WHERE CCPH.CUST_HIERARCHY_NO  LIKE '@HIERARCHYNO%'
   
   ]]>
        </query>
    </entity>
    <entity id="BASELINE_UPDATE_QUERY">
        <query>
            <![CDATA[   
                UPDATE  DPM
                  SET DPM.CALCULATION_PERIODS = '@CALCULATION_PERIODS ',
                         DPM.METHODOLOGY = '@METHODOLOGY' FROM ST_NM_DISCOUNT_PROJ_MASTER DPM
                    JOIN  RS_CONTRACT RS ON RS.RS_CONTRACT_SID = DPM.RS_CONTRACT_SID
                WHERE $COLUMN_NAME IN ( '@PRICE_GROUP_TYPE' )
                AND CHECK_RECORD = 1;
   
   ]]>
        </query>
    </entity>
    <entity id="BASELINE_UPDATE_QUERY_NEW">
        <query>
            <![CDATA[   
            IF OBJECT_ID('TEMPDB..#HIER_NO') IS NOT NULL
            DROP TABLE #HIER_NO


            CREATE TABLE #HIER_NO
            (
            HIERARCHY_NO VARCHAR(1000)
            )
            INSERT #HIER_NO
            (
            HIERARCHY_NO
            )

            SELECT HIERARCHY_NO FROM RELATIONSHIP_LEVEL_DEFINITION WHERE RELATIONSHIP_LEVEL_VALUES IN
            (
            @LEVELVALUES
            )
            and RELATIONSHIP_BUILDER_SID=@RELBUILDSID 
            and VERSION_NO = @RELVERSION 
            
                UPDATE  DPM
                  SET DPM.CALCULATION_PERIODS = '@CALCULATION_PERIODS ',
                         DPM.METHODOLOGY = '@METHODOLOGY' FROM ST_NM_DISCOUNT_PROJ_MASTER DPM
                    JOIN  RS_CONTRACT RS ON RS.RS_CONTRACT_SID = DPM.RS_CONTRACT_SID
                    JOIN #HIER_NO HR ON DPM.DEDUCTION_HIERARCHY_NO  like  HR.HIERARCHY_NO+'%'
                AND CHECK_RECORD = 1;
   
   ]]>
        </query>
    </entity>
   
    <entity id="BASELINE_UPDATE_QUERY_CUSTOM">
        <query>
            <![CDATA[   
                UPDATE  DPM
                  SET DPM.CALCULATION_PERIODS = '@CALCULATION_PERIODS ',
                         DPM.METHODOLOGY = '@METHODOLOGY' FROM ST_NM_DISCOUNT_PROJ_MASTER DPM
                WHERE CHECK_RECORD = 1;
   
   ]]>
        </query>
    </entity>
   
    <entity id="DEDUCTION_LEVEL_NO">
        <query>
            <![CDATA[   
                select
      *
 from
      (
              select
                      LEVEL_NO,
                      dense_rank() 
                      OVER(                  
                      order by
                              CAST(LEVEL_NO AS INT)asc
                      ) rn
              from
                      dbo.RELATIONSHIP_LEVEL_DEFINITION
              where
                      RELATIONSHIP_BUILDER_SID = ?
      ) A
 where
     a.rn =1
   
   ]]>
        </query>
    </entity>
    
     <entity id="UPDATE_CUSTOM_CHECKRECORD">
        <query> 
            <![CDATA[ 
    IF OBJECT_ID('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
	DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO (
	HIERARCHY_NO VARCHAR(50),
	CCP_DETAILS_SID INT,
	RS_CONTRACT_SID INT
	)

INSERT INTO #SELECTED_HIERARCHY_NO (
	HIERARCHY_NO,
	CCP_DETAILS_SID,
	RS_CONTRACT_SID
	)
SELECT DISTINCT A.HIERARCHY_NO,
	CH.CCP_DETAILS_SID,
	NDP.RS_CONTRACT_SID
FROM (
	VALUES ('@HIERARCHY_NO')
	) A(HIERARCHY_NO)
INNER JOIN CUSTOM_CCP_SALES RLD1
	ON RLD1.HIERARCHY_NO = A.HIERARCHY_NO
INNER JOIN ST_CCP_HIERARCHY CH
	ON RLD1.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER NDP
	ON NDP.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
		AND (
			NDP.RS_CONTRACT_SID = RLD1.RS_CONTRACT_SID
			OR RLD1.RS_CONTRACT_SID = 0
			)
    
    UPDATE NDP
SET CHECK_RECORD = @CHECK_RECORD
FROM #SELECTED_HIERARCHY_NO SHN INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER NDP
	ON NDP.CCP_DETAILS_SID = SHN.CCP_DETAILS_SID
		AND NDP.RS_CONTRACT_SID = SHN.RS_CONTRACT_SID
		AND FILTER_CCP = 1
      ]]>
        </query>
    </entity>
    <entity id="GET_RS_CONTRACT_SID">
        <query> 
            <![CDATA[ 
            IF Object_id('TEMPDB..#PARENT_VALIDATE') IS NOT NULL
                DROP TABLE #PARENT_VALIDATE

                           CREATE TABLE #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID INT,
                           PARENT_HIERARCHY   VARCHAR(MAX)
                           )
                           insert into #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID,
                           PARENT_HIERARCHY
                           )

                           SELECT DISTINCT mas.RS_CONTRACT_SID,RLD.PARENT_HIERARCHY_NO FROM
                           ST_NM_DISCOUNT_PROJ_MASTER MAS
                           JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON LEVEL_NO=10 
                           AND relationship_builder_sid = @RELVALUE AND VERSION_NO = @RELVERSION AND RLD.RELATIONSHIP_LEVEL_VALUES=MAS.RS_CONTRACT_SID
                           
        Select DISTINCT MAS.RS_CONTRACT_SID From ST_NM_DISCOUNT_PROJ_MASTER MAS 
        JOIN ST_CCP_HIERARCHY CCPH ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
        AND @HIERARCHY_COLUMN LIKE '@HIERARCHY_NO%' @CUSTOM_VIEW
      ]]>
        </query>
    </entity>
    
        <entity id="MANUAL_ENTRY_DISCOUNT_CUSTOM">
        <query> 
            <![CDATA[
                 @PERIOD_TABLE
                @TEMP_TABLE_DISCOUNT
                IF OBJECT_ID('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
       DROP TABLE #SELECTED_HIERARCHY_NO
 
CREATE TABLE #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO_1 VARCHAR(1000),
       CCP_DETAILS_SID INT,
       HIERARCHY_NO_2 VARCHAR(8000),
       RS_CONTRACT_SID INT
       )
 
INSERT INTO #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO_1,
       CCP_DETAILS_SID,
       HIERARCHY_NO_2,
       RS_CONTRACT_SID
       )
SELECT DISTINCT CUST_HIERARCHY_NO,
       CCPH.CCP_DETAILS_SID,
       PROD_HIERARCHY_NO,
       MAS.RS_CONTRACT_SID
FROM ST_CCP_HIERARCHY CCPH
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER MAS
       ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
       @COLUMN_NAME @CUSTOM_VIEW;
 
WITH CTE
AS (
       SELECT COUNT(SR.RS_CONTRACT_SID) OVER (
                     PARTITION BY HIERARCHY_NO_1,
                     HIERARCHY_NO_2
                     ) AMOUNT_COUNT,
              SR.*,
              COUNT(SR.RS_CONTRACT_SID) OVER (
                     PARTITION BY HIERARCHY_NO_1,
                     SR.CCP_DETAILS_SID,
                     HIERARCHY_NO_2
                     ) RATE_RPU_COUNT
       FROM #SELECTED_HIERARCHY_NO SR
       )
               UPDATE DPT
SET @SETTER ,
       DPT.REFRESHED_NAME = @REFRESHED_NAME
FROM ST_NM_DISCOUNT_PROJECTION DPT
INNER JOIN CTE M
       ON M.CCP_DETAILS_SID = DPT.CCP_DETAILS_SID
              AND DPT.RS_CONTRACT_SID = M.RS_CONTRACT_SID
INNER JOIN #PERIOD I
       ON I.PERIOD_SID = DPT.PERIOD_SID
WHERE I.YEAR = ?Y
        ]]>
        </query>
        </entity>  
    
        <entity id="GET_CUSTOM_COUNT">
            <query> 
            <![CDATA[ 
            IF Object_id('TEMPDB..#PARENT_VALIDATE') IS NOT NULL
                DROP TABLE #PARENT_VALIDATE

                           CREATE TABLE #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID INT,
                           PARENT_HIERARCHY   VARCHAR(MAX)
                           )
                           insert into #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID,
                           PARENT_HIERARCHY
                           )

                           SELECT DISTINCT mas.RS_CONTRACT_SID,RLD.PARENT_HIERARCHY_NO FROM
                           ST_NM_DISCOUNT_PROJ_MASTER MAS
                           JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON LEVEL_NO=10 
                           AND relationship_builder_sid = @RELVALUE AND VERSION_NO = @RELVERSION
                           AND RLD.RELATIONSHIP_LEVEL_VALUES=MAS.RS_CONTRACT_SID
    IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
                DROP TABLE #SELECTED_HIERARCHY_NO
                CREATE TABLE #SELECTED_HIERARCHY_NO (HIERARCHY_NO varchar(50))
                INSERT INTO #SELECTED_HIERARCHY_NO
                (HIERARCHY_NO)
                SELECT HIERARCHY_NO
                FROM   (VALUES  @HIERARCHY_NO )A(HIERARCHY_NO)
                
            SELECT COUNT(DISTINCT @REPLACE) from  ST_NM_DISCOUNT_PROJ_MASTER MAS
JOIN ST_CCP_HIERARCHY CCPH ON MAS.CCP_DETAILS_SID = CCPH.CCP_DETAILS_SID
            @DEDCUSTJOIN
            JOIN #SELECTED_HIERARCHY_NO SHN ON @COLUMN_NAME @FOR_CUSTOM @CUSTOM
            @DEDUCTIONJOIN
            AND FILTER_CCP=1
     ]]>
            </query>
        </entity>
        
        
         <entity id="GET_CUSTOM_COUNT_QUERY">
            <query> 
            <![CDATA[ 
           IF Object_id('TEMPDB..#PARENT_VALIDATE') IS NOT NULL
                DROP TABLE #PARENT_VALIDATE

                           CREATE TABLE #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID INT,
                           PARENT_HIERARCHY   VARCHAR(MAX)
                           )
                           insert into #PARENT_VALIDATE
                           (
                           RS_CONTRACT_SID,
                           PARENT_HIERARCHY
                           )

                           SELECT DISTINCT mas.RS_CONTRACT_SID,RLD.PARENT_HIERARCHY_NO FROM
                           ST_NM_DISCOUNT_PROJ_MASTER MAS
                           JOIN RELATIONSHIP_LEVEL_DEFINITION RLD ON LEVEL_NO=10 AND relationship_builder_sid = @RELVALUE AND VERSION_NO = @RELVERSION
                           AND RLD.RELATIONSHIP_LEVEL_VALUES=MAS.RS_CONTRACT_SID
   
            @HIERARCHY_QUERY
     ]]>
            </query>
        </entity>
    
        <entity id="CUSTOM_JOIN_DEDUCTION">
            <query> 
            <![CDATA[
             @COLUMN LIKE '@HIERARCHY_NO%'  
                  ]]>
        </query>
    </entity>
    
    
    
   
   <entity id="MASSUPDATE-DISCOUNT-AMOUNT">
       <query>
            <![CDATA[   
                IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
  DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO
  (
     HIERARCHY_NO    VARCHAR(50),
     SEC_HIERARCHYNO   VARCHAR(50),
      INSTTR INT ,
      HIERARCHY_INDICATOR VARCHAR(50),
     CCP_DETAILS_SID INT,
     RS_CONTRACT_SID INT, rebates varchar(100)
  )
INSERT INTO #SELECTED_HIERARCHY_NO
            (HIERARCHY_NO,
            SEC_HIERARCHYNO,
            INSTTR,
            HIERARCHY_INDICATOR,
            CCP_DETAILS_SID,RS_CONTRACT_SID, REBATES)
SELECT DISTINCT A.HIERARCHY_NO,
                SEC_HIERARCHYNO,
                INSTTR,
                HIERARCHY_INDICATOR,
                CH.CCP_DETAILS_SID,  SPM.RS_CONTRACT_SID, SR.DED_HIE_NO
FROM   (VALUES [?Hierarchy-Combination]


)A(HIERARCHY_NO,SEC_HIERARCHYNO,HIERARCHY_INDICATOR,INSTTR)
       JOIN ST_CCP_HIERARCHY CH
         ON ((CH.CUST_HIERARCHY_NO LIKE A.HIERARCHY_NO + '%' OR  CH.PROD_HIERARCHY_NO LIKE A.SEC_HIERARCHYNO + '%') AND (HIERARCHY_NO IS NULL OR SEC_HIERARCHYNO IS NULL)) OR
		   ((CH.CUST_HIERARCHY_NO LIKE A.SEC_HIERARCHYNO + '%' OR  CH.PROD_HIERARCHY_NO LIKE A.HIERARCHY_NO + '%') AND (HIERARCHY_NO IS NULL OR SEC_HIERARCHYNO IS NULL)) OR
			((CH.CUST_HIERARCHY_NO LIKE A.SEC_HIERARCHYNO + '%' AND  CH.PROD_HIERARCHY_NO LIKE A.HIERARCHY_NO + '%') AND (HIERARCHY_NO IS NOT NULL AND SEC_HIERARCHYNO IS NOT NULL)) OR 
			((CH.CUST_HIERARCHY_NO LIKE A.HIERARCHY_NO + '%' AND  CH.PROD_HIERARCHY_NO LIKE A.SEC_HIERARCHYNO + '%') AND (HIERARCHY_NO IS NOT NULL AND SEC_HIERARCHYNO IS NOT NULL))
       JOIN ST_NM_DISCOUNT_PROJ_MASTER SPM
         ON SPM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
		JOIN #SELECTED_REBATE SR
           ON SPM.DEDUCTION_HIERARCHY_NO like SR.DED_HIE_NO+'%'
         SET @FREQUENCY_COUNT= (SELECT CASE
                                WHEN @FREQUENCY = 'M' THEN 1
                                WHEN @FREQUENCY = 'Q' THEN 3
                                WHEN @FREQUENCY = 'S' THEN 6
                                ELSE 12
                              END);
         
         WITH CTE
     AS (SELECT HIERARCHY_NO,
             CCP_DETAILS_SID,
             RS_CONTRACT_SID,
                Count(CCP_DETAILS_SID)
                  OVER(
                    PARTITION BY HIERARCHY_NO, COALESCE(SEC_HIERARCHYNO,HIERARCHY_NO),rebates ) CCP_COUNT
         FROM   #SELECTED_HIERARCHY_NO H
         WHERE  EXISTS(SELECT 1
                       FROM   ST_NM_DISCOUNT_PROJ_MASTER MAS
                       WHERE  MAS.CCP_DETAILS_SID = H.CCP_DETAILS_SID
                              AND MAS.RS_CONTRACT_SID = H.RS_CONTRACT_SID
                              AND MAS.CHECK_RECORD = 1)),
     SELECTED_HIERARCHY_NO
     AS (SELECT *,
                DISCOUNT_AMOUNT = COALESCE(@DISCOUNT_AMOUNT / ( NULLIF(CCP_COUNT, 0) * @FREQUENCY_COUNT ), 0)
         FROM   CTE)
UPDATE DP
SET    DP.PROJECTION_SALES = M.DISCOUNT_AMOUNT
FROM   SELECTED_HIERARCHY_NO M
       JOIN ST_NM_DISCOUNT_PROJECTION DP
         ON DP.CCP_DETAILS_SID = M.CCP_DETAILS_SID
            AND DP.RS_CONTRACT_SID = M.RS_CONTRACT_SID
       JOIN "PERIOD" P
         ON DP.PERIOD_SID = P.PERIOD_SID
WHERE  P.PERIOD_DATE BETWEEN Datefromparts(@START_YEAR, @START_MONTH, 1) AND Datefromparts (@END_YEAR, @END_MONTH, 1) 
         
   
   ]]>
       </query>
   </entity>
   
     <entity id="discount-generate-RS-Contract-Id">
       <query>
            <![CDATA[   
            DECLARE @VAR CHAR(1) = 'R'
              DECLARE @FREQUENCY CHAR(1) = '?F'
 
IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
       DROP TABLE #PERIOD
 
SELECT PERIOD_SID,
       YEAR,
       QUARTER,
       PERIOD = CASE
              WHEN @FREQUENCY = 'M'
                     THEN MONTH
              WHEN @FREQUENCY = 'Q'
                     THEN QUARTER
              WHEN @FREQUENCY = 'S'
                     THEN SEMI_ANNUAL
              ELSE YEAR
              END
INTO #PERIOD
FROM PERIOD
 
IF Object_id('TEMPDB..#SELECTED_REBATE') IS NOT NULL
       DROP TABLE #SELECTED_REBATE
 
CREATE TABLE #SELECTED_REBATE (HIERARCHY_NO VARCHAR(1000))
 
INSERT INTO #SELECTED_REBATE (HIERARCHY_NO)
SELECT A.HIERARCHY_NO
FROM (
       VALUES @SELECTED_REBATE
       ) A(HIERARCHY_NO)
 
IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
       DROP TABLE #SELECTED_HIERARCHY_NO
 
CREATE TABLE #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO VARCHAR(50),
       INSTR INT,
       DISCOUNT VARCHAR(1000),
       RS_CONTRACT_SID INT,
       DEDUCTION_INCLUSION CHAR(1),
       USER_GROUP VARCHAR(50)
       )
 
IF Object_id('TEMPDB..#HIERARCHY') IS NOT NULL
       DROP TABLE #HIERARCHY
 
SELECT DISTINCT A.HIERARCHY_NO,
       INSTR,
       RELATIONSHIP_LEVEL_VALUES
INTO #HIERARCHY
FROM (
       VALUES @DEDHIERVALUES 
             
       ) A(HIERARCHY_NO, INSTR)
    @RELJOIN 
WHERE EXISTS (
              SELECT 1
              FROM ST_NM_DISCOUNT_PROJ_MASTER MAS
              INNER JOIN ST_CCP_HIERARCHY CCPH
                     ON MAS.CCP_DETAILS_SID = CCPH.CCP_DETAILS_SID
              INNER JOIN #SELECTED_REBATE SR
                     ON MAS.DEDUCTION_HIERARCHY_NO LIKE SR.HIERARCHY_NO + '%'
              WHERE CCPH.@CUSTORPROD LIKE A.HIERARCHY_NO + '%'
                    
              )
ORDER BY INSTR OFFSET @FIRSTROW ROWS
 
FETCH NEXT @NEXTROW ROWS ONLY
 
INSERT INTO #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO,
       DISCOUNT,
       RS_CONTRACT_SID,
       INSTR,DEDUCTION_INCLUSION
       )
SELECT DISTINCT STUFF((
                     SELECT DISTINCT ', ' + HIERARCHY_NO
                     FROM #HIERARCHY B
                     WHERE B.RELATIONSHIP_LEVEL_VALUES = A.RELATIONSHIP_LEVEL_VALUES
                     FOR XML PATH('')
                     ), 1, 2, '') HIERARCHY_NO,
       rld.relationship_level_values,
       SPM.RS_CONTRACT_SID,
      
       INSTR,SPM.DEDUCTION_INCLUSION
FROM #HIERARCHY A
INNER JOIN ST_CCP_HIERARCHY CH
       ON CH.@CUSTORPROD LIKE A.HIERARCHY_NO + '%'
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER SPM
       ON SPM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
INNER JOIN RS_CONTRACT RSC
       ON RSC.RS_CONTRACT_SID = SPM.RS_CONTRACT_SID
INNER JOIN #SELECTED_REBATE SR
       ON SPM.DEDUCTION_HIERARCHY_NO LIKE SR.HIERARCHY_NO + '%'
INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD
       ON RLD.HIERARCHY_NO = SR.HIERARCHY_NO
 
IF Object_id('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL
       DROP TABLE #DISCOUNT_PROJECTION_MASTER
 
SELECT DISCOUNT,
      SHN.RS_CONTRACT_SID,
       USER_GROUP = Max(shn.USER_GROUP),
       CHECK_RECORD = Min(CASE (MSPM.CHECK_RECORD)
                     WHEN 1
                           THEN 1
                     ELSE 0
                     END),
       UNCHECK_COUNT = Sum(CASE (MSPM.CHECK_RECORD)
                     WHEN 1
                           THEN 0
                     ELSE 1
                     END),
       SHN.HIERARCHY_NO,
       Count(*) AS CCP_COUNT,
       shn.DEDUCTION_INCLUSION
INTO #DISCOUNT_PROJECTION_MASTER
FROM #SELECTED_HIERARCHY_NO SHN
INNER JOIN ST_CCP_HIERARCHY CCP
       ON CCP.@CUSTORPROD LIKE SHN.HIERARCHY_NO + '%'
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER MSPM
       ON MSPM.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
              AND MSPM.RS_CONTRACT_SID = SHN.RS_CONTRACT_SID
              @DPMDEDINCLLUSION
        GROUP BY DISCOUNT,
        SHN.RS_CONTRACT_SID,
        SHN.HIERARCHY_NO,
        SHN.DEDUCTION_INCLUSION
 
SELECT   DPM.CHECK_RECORD,A.HIERARCHY_NO,
                    YEAR,
                     PERIOD,
                    A.DISCOUNT,
                      ACTUAL_RATE,
                      PROJECTION_RATE,
                     AP_TABLE_INDICATOR,
                     USER_GROUP,
                     CCP_COUNT,
                     UNCHECK_COUNT,
                   ACTUAL_SALES,
                     ACTUAL_RPU,
                     PROJECTION_SALES,
                     PROJECTION_RPU,
                     GROWTH,A.RS_CONTRACT_SID AS RS_CONTRACT_SID
                      ,RELATIONSHIP_LEVEL_VALUES 
                                    ,DPM.DEDUCTION_INCLUSION ,INSTR FROM
   
 
(SELECT
       SH.HIERARCHY_NO,
       STC.YEAR,
       STC.PERIOD,
       SH.DISCOUNT,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(SALES), 0), 0) * 100 AS ACTUAL_RATE,
       NULL PROJECTION_RATE,
       0 AS AP_TABLE_INDICATOR,
       SUM(STC.DISCOUNT) AS ACTUAL_SALES,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(UNITS), 0), 0) AS ACTUAL_RPU,
       NULL AS PROJECTION_SALES,
       NULL AS PROJECTION_RPU,
       NULL AS GROWTH,
         SH.RS_CONTRACT_SID AS RS_CONTRACT_SID,
       SH.DISCOUNT AS RELATIONSHIP_LEVEL_VALUES,
       STC.DEDUCTION_INCLUSION,
       INSTR
FROM @VIEWTABLE STC
INNER JOIN #SELECTED_HIERARCHY_NO SH
       ON STC.HIERARCHY_NO LIKE SH.HIERARCHY_NO + '%' and stc.RS_CONTRACT_SID=SH.RS_CONTRACT_SID 
 
WHERE INDICATOR = 0
       @DEDINCLUSION
GROUP BY SH.HIERARCHY_NO,
 SH.RS_CONTRACT_SID,
SH.DISCOUNT,
       PERIOD,
       YEAR,
       STC.DEDUCTION_INCLUSION,   INSTR
      
 
UNION ALL
 
SELECT
       SH.HIERARCHY_NO,
       STC.YEAR,
       STC.PERIOD,
       SH.DISCOUNT,
       NULL AS ACTUAL_RATE,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(SALES), 0), 0) * 100 AS PROJECTION_RATE,
       1 AS AP_TABLE_INDICATOR,
       NULL AS ACTUAL_SALES,
       NULL AS ACTUAL_RPU,
       SUM(STC.DISCOUNT) AS PROJECTION_SALES,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(UNITS), 0), 0) AS PROJECTION_RPU,
       AVG(GROWTH),
       sh.RS_CONTRACT_SID AS RS_CONTRACT_SID,
       SH.DISCOUNT AS RELATIONSHIP_LEVEL_VALUES,
       STC.DEDUCTION_INCLUSION,
       INSTR
FROM @VIEWTABLE STC
INNER JOIN #SELECTED_HIERARCHY_NO SH
       ON STC.HIERARCHY_NO LIKE SH.HIERARCHY_NO + '%' and stc.RS_CONTRACT_SID=SH.RS_CONTRACT_SID 
WHERE INDICATOR = 0
       @DEDINCLUSION
       GROUP BY SH.HIERARCHY_NO,
       SH.DISCOUNT,
              PERIOD,
              Sh.RS_CONTRACT_SID,
              YEAR,
              STC.DEDUCTION_INCLUSION,
              INDICATOR,    INSTR
              
              )A
              JOIN #DISCOUNT_PROJECTION_MASTER DPM ON DPM.HIERARCHY_NO=A.HIERARCHY_NO
                  @DEDINCLNWHR
                   ORDER  BY
                        INSTR,HIERARCHY_NO,DISCOUNT,
                        YEAR, PERIOD,AP_TABLE_INDICATOR
            
            
        
     
        
   
   ]]>
       </query>
   </entity>
   
   <entity id="discount-generate-First-Nine-Level">
       <query>
            <![CDATA[   
        
              DECLARE @VAR CHAR(1) = 'R'
DECLARE @FREQUENCY CHAR(1) = '?F'
 
IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
       DROP TABLE #PERIOD
 
SELECT PERIOD_SID,
       YEAR,
       QUARTER,
       PERIOD = CASE
              WHEN @FREQUENCY = 'M'
                     THEN MONTH
              WHEN @FREQUENCY = 'Q'
                     THEN QUARTER
              WHEN @FREQUENCY = 'S'
                     THEN SEMI_ANNUAL
              ELSE YEAR
              END
INTO #PERIOD
FROM PERIOD
 
IF Object_id('TEMPDB..#SELECTED_REBATE') IS NOT NULL
       DROP TABLE #SELECTED_REBATE
 
CREATE TABLE #SELECTED_REBATE (HIERARCHY_NO VARCHAR(1000))
 
INSERT INTO #SELECTED_REBATE (HIERARCHY_NO)
SELECT A.HIERARCHY_NO
FROM (
       VALUES @SELECTED_REBATE
       ) A(HIERARCHY_NO)
 
IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
       DROP TABLE #SELECTED_HIERARCHY_NO
 
CREATE TABLE #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO VARCHAR(50),
       INSTR INT,
       DISCOUNT VARCHAR(1000),
       RS_CONTRACT_SID INT,
       DEDUCTION_INCLUSION CHAR(1),
       USER_GROUP VARCHAR(50)
       )
 
IF Object_id('TEMPDB..#HIERARCHY') IS NOT NULL
       DROP TABLE #HIERARCHY
 
SELECT DISTINCT A.HIERARCHY_NO,
       INSTR,
       RELATIONSHIP_LEVEL_VALUES
INTO #HIERARCHY
FROM (
       VALUES @DEDHIERVALUES
             
       ) A(HIERARCHY_NO, INSTR)
        @RELJOIN 
WHERE EXISTS (
              SELECT 1
              FROM ST_NM_DISCOUNT_PROJ_MASTER MAS
              INNER JOIN ST_CCP_HIERARCHY CCPH
                     ON MAS.CCP_DETAILS_SID = CCPH.CCP_DETAILS_SID
              INNER JOIN #SELECTED_REBATE SR
                     ON MAS.DEDUCTION_HIERARCHY_NO LIKE SR.HIERARCHY_NO + '%'
              WHERE CCPH.@CUSTORPROD LIKE A.HIERARCHY_NO + '%'
                    
              )
ORDER BY INSTR OFFSET @FIRSTROW ROWS
 
FETCH NEXT @NEXTROW ROWS ONLY
 
INSERT INTO #SELECTED_HIERARCHY_NO (
       HIERARCHY_NO,
       DISCOUNT,
       RS_CONTRACT_SID,
       INSTR,DEDUCTION_INCLUSION
       )
SELECT DISTINCT STUFF((
                     SELECT DISTINCT ', ' + HIERARCHY_NO
                     FROM #HIERARCHY B
                     WHERE B.RELATIONSHIP_LEVEL_VALUES = A.RELATIONSHIP_LEVEL_VALUES
                     FOR XML PATH('')
                     ), 1, 2, '') HIERARCHY_NO,
       rld.relationship_level_values,
       SPM.RS_CONTRACT_SID,
      
       INSTR,SPM.DEDUCTION_INCLUSION
FROM #HIERARCHY A
INNER JOIN ST_CCP_HIERARCHY CH
       ON CH.@CUSTORPROD LIKE A.HIERARCHY_NO + '%'
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER SPM
       ON SPM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
INNER JOIN RS_CONTRACT RSC
       ON RSC.RS_CONTRACT_SID = SPM.RS_CONTRACT_SID
INNER JOIN #SELECTED_REBATE SR
       ON SPM.DEDUCTION_HIERARCHY_NO LIKE SR.HIERARCHY_NO + '%'
INNER JOIN RELATIONSHIP_LEVEL_DEFINITION RLD
       ON RLD.HIERARCHY_NO = SR.HIERARCHY_NO
 
IF Object_id('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL
       DROP TABLE #DISCOUNT_PROJECTION_MASTER
 
SELECT DISCOUNT,
      
       USER_GROUP = Max(shn.USER_GROUP),
       CHECK_RECORD = Min(CASE (MSPM.CHECK_RECORD)
                     WHEN 1
                           THEN 1
                     ELSE 0
                     END),
       UNCHECK_COUNT = Sum(CASE (MSPM.CHECK_RECORD)
                     WHEN 1
                           THEN 0
                     ELSE 1
                     END),
       SHN.HIERARCHY_NO,
       Count(*) AS CCP_COUNT,
       shn.DEDUCTION_INCLUSION
INTO #DISCOUNT_PROJECTION_MASTER
FROM #SELECTED_HIERARCHY_NO SHN
INNER JOIN ST_CCP_HIERARCHY CCP
       ON CCP.@CUSTORPROD LIKE SHN.HIERARCHY_NO + '%'
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER MSPM
       ON MSPM.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
              AND MSPM.RS_CONTRACT_SID = SHN.RS_CONTRACT_SID
              @DPMDEDINCLLUSION
        GROUP BY DISCOUNT,
        SHN.HIERARCHY_NO,
        SHN.DEDUCTION_INCLUSION
 
SELECT  DPM.CHECK_RECORD,A.HIERARCHY_NO,
                    YEAR,
                     PERIOD,
                    A.DISCOUNT,
                      ACTUAL_RATE,
                      PROJECTION_RATE,
                     AP_TABLE_INDICATOR,
                     USER_GROUP,
                     CCP_COUNT,
                     UNCHECK_COUNT,
                   ACTUAL_SALES,
                     ACTUAL_RPU,
                     PROJECTION_SALES,
                     PROJECTION_RPU,
                     GROWTH
                      ,RELATIONSHIP_LEVEL_VALUES 
                                    ,DPM.DEDUCTION_INCLUSION ,INSTR FROM
   
 
(SELECT
       SH.HIERARCHY_NO,
       STC.YEAR,
       STC.PERIOD,
       SH.DISCOUNT,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(SALES), 0), 0) * 100 AS ACTUAL_RATE,
       NULL PROJECTION_RATE,
       0 AS AP_TABLE_INDICATOR,
       SUM(STC.DISCOUNT) AS ACTUAL_SALES,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(UNITS), 0), 0) AS ACTUAL_RPU,
       NULL AS PROJECTION_SALES,
       NULL AS PROJECTION_RPU,
       NULL AS GROWTH,
       SH.DISCOUNT AS RELATIONSHIP_LEVEL_VALUES,
       STC.DEDUCTION_INCLUSION,
       INSTR
FROM @VIEWTABLE STC
INNER JOIN #SELECTED_HIERARCHY_NO SH
       ON STC.HIERARCHY_NO LIKE SH.HIERARCHY_NO + '%' and stc.RS_CONTRACT_SID=SH.DISCOUNT 
 
WHERE INDICATOR = 0
       @DEDINCLUSION
GROUP BY SH.HIERARCHY_NO,
 
SH.DISCOUNT,
       PERIOD,
       YEAR,
       STC.DEDUCTION_INCLUSION,   INSTR
      
 
UNION ALL
 
SELECT 
       SH.HIERARCHY_NO,
       STC.YEAR,
       STC.PERIOD,
       SH.DISCOUNT,
       NULL AS ACTUAL_RATE,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(SALES), 0), 0) * 100 AS PROJECTION_RATE,
       1 AS AP_TABLE_INDICATOR,
       NULL AS ACTUAL_SALES,
       NULL AS ACTUAL_RPU,
       SUM(STC.DISCOUNT) AS PROJECTION_SALES,
       COALESCE(SUM(STC.DISCOUNT) / NULLIF(SUM(UNITS), 0), 0) AS PROJECTION_RPU,
       AVG(GROWTH),
       SH.DISCOUNT AS RELATIONSHIP_LEVEL_VALUES,
       STC.DEDUCTION_INCLUSION,
       INSTR
FROM @VIEWTABLE STC
INNER JOIN #SELECTED_HIERARCHY_NO SH
       ON STC.HIERARCHY_NO LIKE SH.HIERARCHY_NO + '%' and stc.RS_CONTRACT_SID=SH.DISCOUNT 
WHERE INDICATOR = 0
       @DEDINCLUSION
       GROUP BY SH.HIERARCHY_NO,
       SH.DISCOUNT,
              PERIOD,
              YEAR,
              STC.DEDUCTION_INCLUSION,
              INDICATOR,    INSTR
              
              )A
              JOIN #DISCOUNT_PROJECTION_MASTER DPM ON DPM.HIERARCHY_NO=A.HIERARCHY_NO
                @DEDINCLNWHR
                   ORDER  BY
                        INSTR,HIERARCHY_NO,DISCOUNT,
                        YEAR, PERIOD,AP_TABLE_INDICATOR
            
   
   ]]>
       </query>
   </entity>
   
   <entity id="GET_LEVEL_NAME">
        <query> 
            <![CDATA[
            select
	Distinct LEVEL_NAME
from
	relationship_level_definition
where
	relationship_builder_sid = ?
	and relationship_level_values = ?;
 
                  ]]>
        </query>
    </entity>
    
   <entity id="discount-adjustment-query">
        <query> 
            <![CDATA[
            DECLARE @FREQUENCY VARCHAR(50) = '?',
@ADJUSTED_PERIODS VARCHAR(1000) ='?',
@ADJUSTMENT_BASIS VARCHAR(20) = '?',
@ADJUSTED_VALUE NUMERIC(22, 6) = '?',
@ADJUEST_METHOD VARCHAR(100) = '?',
@ADJUSTMENT_FLAG BIT=?,
@DEDUCTION_INCLUSION BIT=?,
@BASELINE_PERIODS VARCHAR(1000)='?'

SET @FREQUENCY = LEFT(@FREQUENCY, 1)

IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
       DROP TABLE #PERIOD;

CREATE TABLE #PERIOD (
       PERIOD_SID INT,
       PERIOD_DATE DATE,
       PERIOD_MONTH INT,
       PERIOD_QUARTER INT,
       PERIOD_SEMI INT,
       PERIOD_YEAR INT,
       PERIOD VARCHAR(10) PRIMARY KEY (PERIOD_SID)
       )

 
INSERT INTO #PERIOD
            (PERIOD_SID,
             PERIOD_DATE,
             PERIOD_MONTH,
             PERIOD_QUARTER,
             PERIOD_SEMI,
             PERIOD_YEAR,
             PERIOD)
SELECT PERIOD_SID,
       PERIOD_DATE,
       MONTH AS PERIOD_MONTH,
       QUARTER AS PERIOD_QUARTER,
       SEMI_ANNUAL AS PERIOD_SEMI,
       YEAR AS PERIOD_YEAR,
       CASE
                  WHEN @FREQUENCY = 'M' THEN Concat ('M', MONTH, ' ', YEAR)
                  WHEN @FREQUENCY = 'Q' THEN Concat ('Q', QUARTER, ' ', YEAR)
                  WHEN @FREQUENCY = 'S' THEN Concat ('S', SEMI_ANNUAL, ' ', YEAR)
                  ELSE Cast(YEAR AS CHAR(4))
                END AS PERIOD 
FROM   PERIOD
WHERE  EXISTS  (
                           SELECT 1
                           FROM DBO.UDF_SPLITSTRING(@ADJUSTED_PERIODS, ',') A
                           WHERE A.TOKEN = CASE
                  WHEN @FREQUENCY = 'M' THEN Concat ('M', MONTH, ' ', YEAR)
                  WHEN @FREQUENCY = 'Q' THEN Concat ('Q', QUARTER, ' ', YEAR)
                  WHEN @FREQUENCY = 'S' THEN Concat ('S', SEMI_ANNUAL, ' ', YEAR)
                  ELSE Cast(YEAR AS CHAR(4))
                END
                           )
IF Object_id('TEMPDB..#CCP_DETAILS_TEMP') IS NOT NULL
       DROP TABLE #CCP_DETAILS_TEMP

CREATE TABLE #CCP_DETAILS_TEMP (
       CCP_DETAILS_SID INT,
       COMPANY_MASTER_SID INT,
       ITEM_MASTER_SID INT,
       CONTRACT_MASTER_SID INT,
       NEW BIT DEFAULT(0),
       RS_CONTRACT_SID INT,
       ADJUSTED_CCP INT,
       SALES_INCLUSION INT,
       DEDUCTION_INCLUSION INT
       )

INSERT INTO #CCP_DETAILS_TEMP (
       CCP_DETAILS_SID,
       COMPANY_MASTER_SID,
       ITEM_MASTER_SID,
       CONTRACT_MASTER_SID,
       RS_CONTRACT_SID,
       ADJUSTED_CCP,
       SALES_INCLUSION,
       DEDUCTION_INCLUSION
       )
SELECT CH.CCP_DETAILS_SID,
       COMPANY_MASTER_SID,
       ITEM_MASTER_SID,
       CONTRACT_MASTER_SID,
       RS_CONTRACT_SID,
       ADJUSTED_CCP,
       SALES_INCLUSION,
       DEDUCTION_INCLUSION
FROM ST_CCP_HIERARCHY CH
INNER JOIN CCP_DETAILS CD
       ON CH.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER NDP
       ON NDP.CCP_DETAILS_SID = CD.CCP_DETAILS_SID
              AND NDP.CHECK_RECORD = 1
INNER JOIN ST_NM_SALES_PROJECTION_MASTER NSP
       ON NSP.CCP_DETAILS_SID = CD.CCP_DETAILS_SID;

IF (@ADJUSTMENT_FLAG = 0)
BEGIN
       UPDATE NDP
SET NDP.PROJECTION_SALES = IIF((
                     DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION
                     OR @DEDUCTION_INCLUSION IS NULL
                     ), NAD.ACTUAL_SALES, NULL)
FROM ST_NM_DISCOUNT_PROJECTION NDP
INNER JOIN #PERIOD P
       ON P.PERIOD_SID = NDP.PERIOD_SID

INNER JOIN #CCP_DETAILS_TEMP CCP
       ON CCP.CCP_DETAILS_SID = NDP.CCP_DETAILS_SID
              AND CCP.RS_CONTRACT_SID = NDP.RS_CONTRACT_SID
LEFT JOIN  ST_NM_ACTUAL_DISCOUNT NAD         
ON NAD.CCP_DETAILS_SID = NDP.CCP_DETAILS_SID
              AND NAD.RS_CONTRACT_SID = NDP.RS_CONTRACT_SID
              AND NAD.PERIOD_SID=NDP.PERIOD_SID
END
ELSE
BEGIN
       WITH FINAL_RESULT
       AS (
              SELECT distinct CCP.CCP_DETAILS_SID,
                     CCP.RS_CONTRACT_SID,
                     COALESCE(CASE
                                  WHEN @ADJUSTMENT_BASIS = 'AMOUNT'
                                         THEN @ADJUSTED_VALUE
                                  ELSE COALESCE(SUM(IIF((
                                                                     DEDUCTION_INCLUSION = @DEDUCTION_INCLUSION
                                                                     OR @DEDUCTION_INCLUSION IS NULL
                                                                     ), NDP.PROJECTION_SALES, NULL)) OVER (PARTITION BY CCP.RS_CONTRACT_SID), 0) * (@ADJUSTED_VALUE / 100)
                                  END * (COALESCE(EXFACTORY_FORECAST_SALES, EXFACTORY_ACTUAL_SALES) / (COALESCE(SUM(COALESCE(EXFACTORY_FORECAST_SALES, EXFACTORY_ACTUAL_SALES)) OVER (ORDER BY PERIOD), 0))), 0) DISCOUNT_AMOUNT,
                     P.PERIOD_SID
              FROM #CCP_DETAILS_TEMP CCP
              CROSS JOIN #PERIOD P
              LEFT JOIN ST_NM_ACTUAL_DISCOUNT NAD
                     ON NAD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
                           AND NAD.RS_CONTRACT_SID = CCP.RS_CONTRACT_SID
                           AND P.PERIOD_SID = NAD.PERIOD_SID
              LEFT JOIN ST_NM_DISCOUNT_PROJECTION NDP
                     ON NDP.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
                           AND NDP.RS_CONTRACT_SID = CCP.RS_CONTRACT_SID
                           AND P.PERIOD_SID = NDP.PERIOD_SID
              LEFT JOIN ST_PRODUCT_FILE PF
                     ON PF.ITEM_MASTER_SID = CCP.ITEM_MASTER_SID
                           AND PF.PERIOD_SID = P.PERIOD_SID
              LEFT JOIN ST_NM_SALES_PROJECTION NSP
                     ON NSP.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
                           AND NSP.PERIOD_SID = P.PERIOD_SID
              )
       UPDATE NDP
       SET NDP.PROJECTION_SALES = DISCOUNT_AMOUNT + IIF(@ADJUEST_METHOD = 'OVERRIDE', 0, ISNULL(NDP.PROJECTION_SALES, 0))
       FROM ST_NM_DISCOUNT_PROJECTION NDP
       INNER JOIN FINAL_RESULT FR
              ON FR.CCP_DETAILS_SID = NDP.CCP_DETAILS_SID
                     AND FR.RS_CONTRACT_SID = NDP.RS_CONTRACT_SID
                     AND NDP.PERIOD_SID = FR.PERIOD_SID
END


 
                  ]]>
        </query>
    </entity>
  <entity id="discount-adjustment-query-Validation">
        <query> 
            <![CDATA[
           
SELECT MAX(CNT) CNT
FROM (
	SELECT DISTINCT COUNT(A.CCP_DETAILS_SID) OVER (PARTITION BY ITEM_MASTER_SID) CNT
	FROM ST_CCP_HIERARCHY A
	INNER JOIN CCP_DETAILS B
		ON A.CCP_DETAILS_SID = B.CCP_DETAILS_SID
	WHERE EXISTS (
			SELECT 1
			FROM ST_NM_DISCOUNT_PROJ_MASTER C
			WHERE A.CCP_DETAILS_SID = C.CCP_DETAILS_SID AND FILTER_CCP = 1
				AND C.CHECK_RECORD = 1
			)
	) A

                  ]]>
        </query>
    </entity>
    
     <entity id="UPDATE_ALL_LEVEL_CHECKRECORD_ADJUST">
        <query> 
            <![CDATA[ 
            UPDATE ST_NM_DISCOUNT_PROJ_MASTER SET CHECK_RECORD=0;
            
             IF OBJECT_ID('TEMPDB..#DED_HIERARCHY_NO') IS NOT NULL
                    DROP TABLE #DED_HIERARCHY_NO

                    CREATE TABLE #DED_HIERARCHY_NO (HIERARCHY_NO VARCHAR(8000))

                    INSERT INTO #DED_HIERARCHY_NO (HIERARCHY_NO)
                    SELECT HIERARCHY_NO
                    FROM RELATIONSHIP_LEVEL_DEFINITION
                    WHERE RELATIONSHIP_LEVEL_VALUES IN (
                                  @RELATIONSIDS
                                  )
                    AND RELATIONSHIP_BUILDER_SID = @BUILDERSID    
                    AND LEVEL_NO = @LEVNO   
                     
            IF OBJECT_ID('TEMPDB..#HIERARCHY_NO') IS NOT NULL
                    DROP TABLE #HIERARCHY_NO

                    CREATE TABLE #HIERARCHY_NO (HIERARCHY_NO VARCHAR(8000))

                    INSERT INTO #HIERARCHY_NO (HIERARCHY_NO)
                    SELECT HIERARCHY_NO FROM
                    (VALUES  @HIERARCHY_NO)A(HIERARCHY_NO)
                    
        UPDATE MAS SET CHECK_RECORD = 1 From ST_NM_DISCOUNT_PROJ_MASTER MAS 
    JOIN ST_CCP_HIERARCHY CCPH ON CCPH.CCP_DETAILS_SID = MAS.CCP_DETAILS_SID
    JOIN #DED_HIERARCHY_NO DH ON MAS.DEDUCTION_HIERARCHY_NO like DH.HIERARCHY_NO+'%'
    JOIN #HIERARCHY_NO SH ON @HIERARCHY_COLUMN like SH.HIERARCHY_NO+'%'  
    AND FILTER_CCP=1
      ]]>
        </query>
    </entity>
    
    <entity id="HIER_VALUES">
        <query> 
            <![CDATA[ 
            IF OBJECT_ID('TEMPDB..#HIERARCHY_NO') IS NOT NULL
                    DROP TABLE #HIERARCHY_NO

                    CREATE TABLE #HIERARCHY_NO (HIERARCHY_NO VARCHAR(8000))

                    INSERT INTO #HIERARCHY_NO (HIERARCHY_NO)
                    SELECT HIERARCHY_NO FROM
                    (VALUES  @HIERARCHY_NO)A(HIERARCHY_NO)
         
      ]]>
        </query>
    </entity>
    <entity id="discRatemassPopulate">
        <query> 
             <![CDATA[
    DECLARE @INFO TABLE (
      CCP_DETAILS_SID int,
      PERIOD_SID int,
      RS_CONTRACT_SID int
    )


    INSERT INTO @INFO
                (CCP_DETAILS_SID,
                 PERIOD_SID,
                 RS_CONTRACT_SID)
    SELECT M.CCP_DETAILS_SID,
           DP.PERIOD_SID,
           RS.RS_CONTRACT_SID
    FROM   ST_NM_DISCOUNT_PROJ_MASTER M,
           ST_NM_DISCOUNT_PROJECTION DP,
           RS_CONTRACT RS,
           "PERIOD" P,#SELECTED_REBATE SR
    WHERE   M.DEDUCTION_HIERARCHY_NO like SR.DED_HIE_NO+'%' AND M.CHECK_RECORD = 1
           AND DP.CCP_DETAILS_SID = M.CCP_DETAILS_SID
           AND M.RS_CONTRACT_SID = RS.RS_CONTRACT_SID
           AND DP.PERIOD_SID = P.PERIOD_SID
           AND P.PERIOD_DATE BETWEEN Datefromparts(@START_YEAR, @START_MONTH, 1) AND Datefromparts (@END_YEAR, @END_MONTH, 1)

    UPDATE DPT
    @COL2
    FROM ST_NM_DISCOUNT_PROJECTION DPT,
    @INFO A
    INNER JOIN ST_NM_SALES_PROJECTION NM
    ON A.CCP_DETAILS_SID = NM.CCP_DETAILS_SID
    AND A.PERIOD_SID = NM.PERIOD_SID
    WHERE DPT.CCP_DETAILS_SID = A.CCP_DETAILS_SID
    AND DPT.PERIOD_SID = A.PERIOD_SID
    AND DPT.RS_CONTRACT_SID = A.RS_CONTRACT_SID
             ]]>
        </query>
    </entity>
    
     <entity id="discount-selected-hierarchy-Custom-View">
        <query>
            <![CDATA[  
IF Object_id('TEMPDB..#HIERARCHY') IS NOT NULL
DROP TABLE #HIERARCHY
SELECT DISTINCT A.HIERARCHY_NO,INSTR,DEDUCTION_INCLUSION,ROWID INTO #HIERARCHY
        FROM   (VALUES [?HIERARCHY_NO_VALUES] 
  )A(HIERARCHY_NO,INSTR) 
INNER JOIN CUSTOM_CCP_SALES RLD1
	ON RLD1.HIERARCHY_NO like  A.HIERARCHY_NO +'%' and LEVEL_NO=@level_no
		AND RLD1.CUST_VIEW_MASTER_SID = @CUST_VIEW_MASTER_SID
INNER JOIN ST_CCP_HIERARCHY CH
	ON CH.CCP_DETAILS_SID = RLD1.CCP_DETAILS_SID
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER SPM
	ON SPM.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
		AND (
			RLD1.RS_CONTRACT_SID = SPM.RS_CONTRACT_SID
			OR RLD1.RS_CONTRACT_SID= 0
			)
                        ORDER  BY A.HIERARCHY_NO OFFSET
@START ROWS FETCH NEXT @OFFSET ROWS ONLY
            ]]>
        </query>
    </entity>
    
    
     <entity id="discount-selected-hierarchy-Custom-View-New">
        <query>
            <![CDATA[  
  
 IF Object_id('TEMPDB..#CURRENT_SPLIT') IS NOT NULL
DROP TABLE #CURRENT_SPLIT

SELECT *
INTO #CURRENT_SPLIT
FROM
 RELATIONSHIP_LEVEL_DEFINITION
WHERE PARENT_HIERARCHY_NO LIKE '%%%'
AND 
@REL_COLUMN


  
  IF Object_id('TEMPDB..#HIERARCHY') IS NOT NULL
DROP TABLE #HIERARCHY
SELECT DISTINCT A.HIERARCHY_NO,INSTR,RELATIONSHIP_LEVEL_VALUES INTO #HIERARCHY
        FROM   (VALUES [?HIERARCHY_NO_VALUES] 
  )A(HIERARCHY_NO,INSTR) 
  @RELJOIN
WHERE  EXISTS (SELECT 1
               FROM   ST_NM_DISCOUNT_PROJ_MASTER MAS
                      [?SELECTED_HIERARCHY_JOIN]
                        @RSJOIN
           @USER_GROUP  and SPM.FILTER_CCP=1 
@DEDCUSTJOIN)
ORDER  BY A.HIERARCHY_NO OFFSET
@START ROWS FETCH NEXT @OFFSET ROWS ONLY
  
 IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
  DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO
  (
     HIERARCHY_NO    VARCHAR(50),INSTR INT,
     CCP_DETAILS_SID INT,
	 RS_CONTRACT_SID INT ,DEDUCTION_INCLUSION CHAR(1)
  )
INSERT INTO #SELECTED_HIERARCHY_NO
            (HIERARCHY_NO,INSTR,
             CCP_DETAILS_SID,
			 RS_CONTRACT_SID,DEDUCTION_INCLUSION
			 )
SELECT DISTINCT STUFF(( SELECT DISTINCT ', ' + HIERARCHY_NO
                           FROM #HIERARCHY B
                           WHERE B.RELATIONSHIP_LEVEL_VALUES = A.RELATIONSHIP_LEVEL_VALUES
                           FOR XML PATH('')
                           ), 1, 2, '') HIERARCHY_NO,
       INSTR,
       CH.CCP_DETAILS_SID,
	    
                SPM.rs_contract_sid,SPM.DEDUCTION_INCLUSION
FROM   #HIERARCHY A
       [?SELECTED_HIERARCHY_JOIN]    and SPM.FILTER_CCP=1
       @DEDCUSTJOIN
       
            ]]>
        </query>
    </entity>
    
    
    
    
    <entity id="discountGenerateCustomView">
        <query> 
            <![CDATA[            
            DECLARE @START_PERIOD INT,
	@END_PERIOD INT

SELECT @START_PERIOD = MAX(CASE 
			WHEN PERIOD_DATE = DATEADD(YY, DATEDIFF(YY, 0, DATEADD(YY, - 3, GETDATE())), 0)
				THEN PERIOD_SID
			END),
	@END_PERIOD = MAX(CASE 
			WHEN PERIOD_DATE = DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0)
				THEN PERIOD_SID
			END)
FROM PROJECTION_MASTER
INNER JOIN PERIOD P
	ON PERIOD_DATE IN (
			DATEADD(YY, DATEDIFF(YY, 0, DATEADD(YY, - 3, GETDATE())), 0),
			DATEADD(QQ, DATEDIFF(QQ, 0, GETDATE()), 0),
			DATEFROMPARTS(YEAR(FROM_DATE), 1, 1),
			DATEFROMPARTS(YEAR(TO_DATE), 12, 1)
			)
WHERE PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID

DECLARE @VAR CHAR(1) = '?RS'
DECLARE @FREQUENCY CHAR(1) = '?F'
DECLARE @PARENT VARCHAR(1000) = '?P'

IF OBJECT_ID('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
	DROP TABLE #PERIOD

SELECT PERIOD_SID,
	YEAR,
	PERIOD = CASE 
		WHEN @FREQUENCY = 'M'
			THEN MONTH
		WHEN @FREQUENCY = 'Q'
			THEN QUARTER
		WHEN @FREQUENCY = 'S'
			THEN SEMI_ANNUAL
		ELSE YEAR
		END
INTO #PERIOD
FROM PERIOD

declare @level_no int
select @level_no=max(level_no) from CUST_VIEW_DETAILS where CUSTOM_VIEW_MASTER_SID = @CUST_VIEW_MASTER_SID

@HIERARCHY_QUERY

IF OBJECT_ID('TEMPDB..#DISCOUNT_PROJECTION_MASTER') IS NOT NULL
	DROP TABLE #DISCOUNT_PROJECTION_MASTER

SELECT USER_GROUP = MAX(MSPM.USER_GROUP),
	CHECK_RECORD = MIN(CASE (MSPM.CHECK_RECORD)
			WHEN 1
				THEN 1
			ELSE 0
			END),
	UNCHECK_COUNT = SUM(CASE (MSPM.CHECK_RECORD)
			WHEN 1
				THEN 0
			ELSE 1
			END),
	P.HIERARCHY_NO,
	COUNT(*) AS CCP_COUNT,
	mspm.DEDUCTION_INCLUSION,
	max(p.ROWID) ROWID
INTO #DISCOUNT_PROJECTION_MASTER
FROM #HIERARCHY P
INNER JOIN CUSTOM_CCP_SALES RLD1
	ON RLD1.HIERARCHY_NO = P.HIERARCHY_NO
		AND RLD1.CUST_VIEW_MASTER_SID = @CUST_VIEW_MASTER_SID
INNER JOIN ST_CCP_HIERARCHY CCP
	ON CCP.CCP_DETAILS_SID = RLD1.CCP_DETAILS_SID
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER MSPM
	ON MSPM.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
		AND P.DEDUCTION_INCLUSION = MSPM.DEDUCTION_INCLUSION
		AND (
			RLD1.RS_CONTRACT_SID = MSPM.RS_CONTRACT_SID
			OR RLD1.RS_CONTRACT_SID=0
			)
		@DEDINCLDPM
GROUP BY P.HIERARCHY_NO,
	MSPM.DEDUCTION_INCLUSION

IF OBJECT_ID('TEMPDB..#SALES') IS NOT NULL
	DROP TABLE #SALES;

SELECT p.ROWID,
	SUM(PROJECTION_SALES) PROJECTION_SALES,
	SUM(PROJECTION_UNITS) PROJECTION_UNITS,
	NULL AS ACTUAL_SALES,
	NULL AS ACTUAL_UNITS,
	YEAR,
	PERIOD,
	P.DEDUCTION_INCLUSION
INTO #SALES
FROM #HIERARCHY P
INNER JOIN (
	SELECT CCP_DETAILS_SID,
		HIERARCHY_NO,
		ROWID
	FROM CUSTOM_CCP_SALES
	WHERE CUST_VIEW_MASTER_SID = @CUST_VIEW_MASTER_SID
	GROUP BY CCP_DETAILS_SID,
		HIERARCHY_NO,
		ROWID
	) RLD1
	ON RLD1.HIERARCHY_NO = P.HIERARCHY_NO
INNER JOIN ST_CCP_HIERARCHY CCP
	ON CCP.CCP_DETAILS_SID = RLD1.CCP_DETAILS_SID
INNER JOIN (
	SELECT CCP_DETAILS_SID,
		DEDUCTION_INCLUSION
	FROM ST_NM_DISCOUNT_PROJ_MASTER
	GROUP BY CCP_DETAILS_SID,
		DEDUCTION_INCLUSION
	) MSPM
	ON MSPM.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
		AND P.DEDUCTION_INCLUSION = MSPM.DEDUCTION_INCLUSION
INNER JOIN ST_NM_SALES_PROJECTION a
	ON A.CCP_DETAILS_SID = MSPM.CCP_DETAILS_SID
INNER JOIN #PERIOD P1
	ON P1.PERIOD_SID = A.PERIOD_SID
GROUP BY P.ROWID,
	P.DEDUCTION_INCLUSION,
	YEAR,
	PERIOD

UNION ALL

SELECT P.ROWID,
	NULL PROJECTION_SALES,
	NULL PROJECTION_UNITS,
	SUM(SALES) ACTUAL_SALES,
	SUM(QUANTITY) ACTUAL_UNITS,
	PERIOD,
	YEAR,
	P.DEDUCTION_INCLUSION
FROM #HIERARCHY P
INNER JOIN (
	SELECT CCP_DETAILS_SID,
		HIERARCHY_NO,
		ROWID
	FROM CUSTOM_CCP_SALES
	WHERE CUST_VIEW_MASTER_SID = @CUST_VIEW_MASTER_SID
	GROUP BY CCP_DETAILS_SID,
		HIERARCHY_NO,
		ROWID
	) RLD1
	ON RLD1.HIERARCHY_NO = P.HIERARCHY_NO
INNER JOIN ST_CCP_HIERARCHY CCP
	ON CCP.CCP_DETAILS_SID = RLD1.CCP_DETAILS_SID
INNER JOIN (
	SELECT CCP_DETAILS_SID,
		DEDUCTION_INCLUSION
	FROM ST_NM_DISCOUNT_PROJ_MASTER
	GROUP BY CCP_DETAILS_SID,
		DEDUCTION_INCLUSION
	) MSPM
	ON MSPM.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
		AND P.DEDUCTION_INCLUSION = MSPM.DEDUCTION_INCLUSION

LEFT JOIN ACTUALS_DETAILS AD
	ON AD.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID
        INNER JOIN #PERIOD P1
	ON P1.PERIOD_SID BETWEEN @START_PERIOD
			AND @END_PERIOD
		AND AD.PERIOD_SID = P1.PERIOD_SID
		AND AD.QUANTITY_INCLUSION = 'Y'
GROUP BY P.ROWID,
	P.DEDUCTION_INCLUSION,
	YEAR,
	PERIOD

SELECT CHECK_RECORD,
	HY.HIERARCHY_NO,
	CD.YEAR,
	CD.PERIOD,
	'' DISCOUNT,
	convert(numeric(22,6),COALESCE(DISCOUNT / NULLIF(ACTUAL_SALES, 0), 0) * 100) AS ACTUAL_RATE,
	NULL PROJECTION_RATE,
	0 AS AP_TABLE_INDICATOR,
	USER_GROUP,
	CCP_COUNT,
	UNCHECK_COUNT,
	DISCOUNT AS ACTUAL_SALES,
	convert(numeric(22,6),COALESCE(DISCOUNT / NULLIF(ACTUAL_UNITS, 0), 0),0) AS ACTUAL_RPU,
	NULL AS PROJECTION_SALES,
	NULL AS PROJECTION_RPU,
	NULL AS GROWTH,
	HY.DEDUCTION_INCLUSION,
	INSTR
FROM ST_CUSTOM_DISCOUNT CD
INNER JOIN #HIERARCHY HY
	ON HY.ROWID = CD.HIERARCHY_NO
INNER JOIN #DISCOUNT_PROJECTION_MASTER DPM
	ON DPM.ROWID = CD.HIERARCHY_NO
		@DPMDEDINCLLUSION
INNER JOIN #SALES AD
	ON AD.ROWID = CD.HIERARCHY_NO
		AND CD.YEAR = AD.YEAR
		AND CD.PERIOD = AD.PERIOD

UNION ALL

SELECT CHECK_RECORD,
	HY.HIERARCHY_NO,
	CD.YEAR,
	CD.PERIOD,
	'' DISCOUNT,
	NULL AS ACTUAL_RATE,
	convert(numeric(22,6),COALESCE((DISCOUNT) / NULLIF(PROJECTION_SALES, 0), 0) * 100 )AS PROJECTION_RATE,
	1 AS AP_TABLE_INDICATOR,
	USER_GROUP,
	CCP_COUNT,
	UNCHECK_COUNT,
	NULL AS ACTUAL_SALES,
	NULL AS ACTUAL_RPU,
	DISCOUNT AS PROJECTION_SALES,
	convert(numeric(22,6),COALESCE((DISCOUNT) / NULLIF(PROJECTION_UNITS, 0), 0)) AS PROJECTION_RPU,
	GROWTH,
	HY.DEDUCTION_INCLUSION,
	INSTR
FROM ST_CUSTOM_DISCOUNT CD
INNER JOIN #HIERARCHY HY
	ON HY.ROWID = CD.HIERARCHY_NO
INNER JOIN #DISCOUNT_PROJECTION_MASTER DPM
	ON DPM.ROWID = CD.HIERARCHY_NO
		@DPMDEDINCLLUSION
INNER JOIN #SALES AD
	ON AD.ROWID = CD.HIERARCHY_NO
		AND CD.YEAR = AD.YEAR
		AND CD.PERIOD = AD.PERIOD

UNION ALL

SELECT NULL,HIERARCHY_NO,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL,
	NULL
FROM #HIERARCHY
WHERE DEDUCTION_INCLUSION = 0
ORDER BY INSTR,
	HY.HIERARCHY_NO,
	CD.YEAR,
	CD.PERIOD,
	AP_TABLE_INDICATOR

            
            
                 ]]>
        </query>
    </entity>
   <entity id="customViewMassUpdate">
        <query> 
            <![CDATA[   
    DECLARE @FREQUENCY CHAR(1)='?F'
            DECLARE @RELVALUE VARCHAR(20)='?R'
            DECLARE @REFRESHED_NAME VARCHAR(10) = '@REFNAME'
             
            IF Object_id('TEMPDB.DBO.#PERIOD', 'U') IS NOT NULL
            DROP TABLE #PERIOD

            SELECT PERIOD_SID,
            YEAR,
            PERIOD = CASE
            WHEN @FREQUENCY = 'M' THEN  MONTH
            WHEN @FREQUENCY = 'Q' THEN  QUARTER
            WHEN @FREQUENCY = 'S' THEN  SEMI_ANNUAL
            ELSE YEAR 
            END
            INTO   #PERIOD
            FROM   PERIOD
            
            DECLARE @PERIOD_COUNT INT = CASE 
              WHEN @FREQUENCY = 'M'
                     THEN 1
              WHEN @FREQUENCY = 'Q'
                     THEN 3
              WHEN @FREQUENCY = 'S'
                     THEN 6
              ELSE 12
              END

IF OBJECT_ID('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
	DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO (
	HIERARCHY_NO VARCHAR(50),
	CCP_DETAILS_SID INT,
	RS_CONTRACT_SID INT
	)

INSERT INTO #SELECTED_HIERARCHY_NO (
	HIERARCHY_NO,
	CCP_DETAILS_SID,
	RS_CONTRACT_SID
	)
SELECT DISTINCT A.HIERARCHY_NO,
	CH.CCP_DETAILS_SID,
	NDP.RS_CONTRACT_SID
FROM (
	VALUES ('@HIERARCHY_NO')
	) A(HIERARCHY_NO)
INNER JOIN CUSTOM_CCP_SALES RLD1
	ON RLD1.HIERARCHY_NO = A.HIERARCHY_NO
INNER JOIN ST_CCP_HIERARCHY CH
	ON RLD1.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER NDP
	ON NDP.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
		AND (
			NDP.RS_CONTRACT_SID = RLD1.RS_CONTRACT_SID
			OR RLD1.RS_CONTRACT_SID = 0
			)

;WITH CTE AS (
		SELECT COUNT(SR.RS_CONTRACT_SID) OVER (PARTITION BY HIERARCHY_NO) AMOUNT_COUNT,
			SR.*,
			COUNT(SR.RS_CONTRACT_SID) OVER (
				PARTITION BY HIERARCHY_NO,
				SR.CCP_DETAILS_SID
				) RATE_RPU_COUNT
		FROM #SELECTED_HIERARCHY_NO SR
		)
UPDATE DPT
SET @SETTER ,
       DPT.REFRESHED_NAME = @REFRESHED_NAME
FROM ST_NM_DISCOUNT_PROJECTION DPT
INNER JOIN CTE M
       ON M.CCP_DETAILS_SID = DPT.CCP_DETAILS_SID
              AND DPT.RS_CONTRACT_SID = M.RS_CONTRACT_SID
INNER JOIN #PERIOD I
       ON I.PERIOD_SID = DPT.PERIOD_SID
WHERE I.YEAR = ?Y
                ]]>
        </query>
    </entity>
    
    <entity id="MASSUPDATE-DISCOUNT-AMOUNT-CUSTOM">
       <query>
            <![CDATA[   
                IF Object_id('TEMPDB..#SELECTED_HIERARCHY_NO') IS NOT NULL
  DROP TABLE #SELECTED_HIERARCHY_NO

CREATE TABLE #SELECTED_HIERARCHY_NO
  (
     HIERARCHY_NO    VARCHAR(50),
      INSTTR INT ,
     CCP_DETAILS_SID INT,
     RS_CONTRACT_SID INT
  )
INSERT INTO #SELECTED_HIERARCHY_NO
            (HIERARCHY_NO,
            CCP_DETAILS_SID,RS_CONTRACT_SID)
SELECT DISTINCT A.HIERARCHY_NO,
                CH.CCP_DETAILS_SID,  NDP.RS_CONTRACT_SID
FROM   (VALUES [?Hierarchy-Combination]


)A(HIERARCHY_NO)
     INNER JOIN CUSTOM_CCP_SALES RLD1
	ON RLD1.HIERARCHY_NO = A.HIERARCHY_NO
INNER JOIN ST_CCP_HIERARCHY CH
	ON RLD1.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
INNER JOIN ST_NM_DISCOUNT_PROJ_MASTER NDP
	ON NDP.CCP_DETAILS_SID = CH.CCP_DETAILS_SID
		AND (
			NDP.RS_CONTRACT_SID = RLD1.RS_CONTRACT_SID
			OR RLD1.RS_CONTRACT_SID = 0
			)
      
   SET @FREQUENCY_COUNT= (SELECT CASE
                                WHEN @FREQUENCY = 'M' THEN 1
                                WHEN @FREQUENCY = 'Q' THEN 3
                                WHEN @FREQUENCY = 'S' THEN 6
                                ELSE 12
                              END)
         
         ;WITH CTE
     AS (SELECT HIERARCHY_NO,
             CCP_DETAILS_SID,
             RS_CONTRACT_SID,
                Count(CCP_DETAILS_SID)
                  OVER(
                    PARTITION BY HIERARCHY_NO, RS_CONTRACT_SID ) CCP_COUNT
         FROM   #SELECTED_HIERARCHY_NO H
         WHERE  EXISTS(SELECT 1
                       FROM   ST_NM_DISCOUNT_PROJ_MASTER MAS
                       WHERE  MAS.CCP_DETAILS_SID = H.CCP_DETAILS_SID
                              AND MAS.RS_CONTRACT_SID = H.RS_CONTRACT_SID
                              AND MAS.CHECK_RECORD = 1)),
     SELECTED_HIERARCHY_NO
     AS (SELECT *,
                DISCOUNT_AMOUNT = COALESCE(@DISCOUNT_AMOUNT / ( NULLIF(CCP_COUNT, 0) * @FREQUENCY_COUNT ), 0)
         FROM   CTE)
UPDATE DP
SET    DP.PROJECTION_SALES = M.DISCOUNT_AMOUNT
FROM   SELECTED_HIERARCHY_NO M
       JOIN ST_NM_DISCOUNT_PROJECTION DP
         ON DP.CCP_DETAILS_SID = M.CCP_DETAILS_SID
            AND DP.RS_CONTRACT_SID = M.RS_CONTRACT_SID
       JOIN PERIOD P
         ON DP.PERIOD_SID = P.PERIOD_SID
WHERE  P.PERIOD_DATE BETWEEN Datefromparts(@START_YEAR, @START_MONTH, 1) AND Datefromparts (@END_YEAR, @END_MONTH, 1) 
         
   
   ]]>
       </query>
   </entity>
</sql>

