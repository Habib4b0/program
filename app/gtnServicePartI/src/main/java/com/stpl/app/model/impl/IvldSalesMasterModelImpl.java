package com.stpl.app.model.impl;

import com.stpl.app.model.IvldSalesMaster;
import com.stpl.app.model.IvldSalesMasterModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldSalesMaster service. Represents a row in the &quot;IVLD_SALES_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.IvldSalesMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldSalesMasterImpl}.
 * </p>
 *
 * @author
 * @see IvldSalesMasterImpl
 * @see com.stpl.app.model.IvldSalesMaster
 * @see com.stpl.app.model.IvldSalesMasterModel
 * @generated
 */
public class IvldSalesMasterModelImpl extends BaseModelImpl<IvldSalesMaster>
    implements IvldSalesMasterModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a ivld sales master model instance should use the {@link com.stpl.app.model.IvldSalesMaster} interface instead.
     */
    public static final String TABLE_NAME = "IVLD_SALES_MASTER";
    public static final Object[][] TABLE_COLUMNS = {
            { "ACCOUNT_ID", Types.VARCHAR },
            { "SALES_INTFID", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "ORGANIZATION_KEY", Types.VARCHAR },
            { "DIVISION_ID", Types.VARCHAR },
            { "SOURCE", Types.VARCHAR },
            { "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
            { "ANALYSIS_CODE", Types.VARCHAR },
            { "IVLD_SALES_MASTER_SID", Types.INTEGER },
            { "DOC_TYPE", Types.VARCHAR },
            { "MODIFIED_BY", Types.VARCHAR },
            { "LOT_NO", Types.VARCHAR },
            { "QUANTITY", Types.VARCHAR },
            { "INVOICE_LINE_NUMBER", Types.VARCHAR },
            { "IDENTIFIER_CODE_QUALIFIER", Types.VARCHAR },
            { "ACCOUNT_CODE_QUALIFIER", Types.VARCHAR },
            { "PARENT_ITEM_ID", Types.VARCHAR },
            { "ACCOUNT_NO", Types.VARCHAR },
            { "REASON_FOR_FAILURE", Types.VARCHAR },
            { "ACCOUNT_NAME", Types.VARCHAR },
            { "PROVISION_ID", Types.VARCHAR },
            { "AMOUNT", Types.VARCHAR },
            { "MARKET_ID", Types.VARCHAR },
            { "IS_ACTIVE", Types.VARCHAR },
            { "WHOLESALE_OWNER_ID", Types.VARCHAR },
            { "PRICE_ADJUSTMENT_NAME", Types.VARCHAR },
            { "SALES_ID", Types.VARCHAR },
            { "ERROR_FIELD", Types.VARCHAR },
            { "RECORD_SEQUENCE", Types.VARCHAR },
            { "PRICE", Types.VARCHAR },
            { "CUSTOMER_SUBTYPE", Types.VARCHAR },
            { "PARENT_ITEM_NO", Types.VARCHAR },
            { "ITEM_ID", Types.VARCHAR },
            { "ORDER_RECEIVED_DATE", Types.VARCHAR },
            { "ORDER_NUMBER", Types.VARCHAR },
            { "ACCOUNT_TYPE", Types.VARCHAR },
            { "UPLOAD_DATE", Types.VARCHAR },
            { "CREATED_BY", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "ERROR_CODE", Types.VARCHAR },
            { "ITEM_UOM", Types.VARCHAR },
            { "INTF_INSERTED_DATE", Types.TIMESTAMP },
            { "INVOICE_NUMBER", Types.VARCHAR },
            { "ORDER_SUBTYPE", Types.VARCHAR },
            { "ITEM_NO", Types.VARCHAR },
            { "REPROCESSED_FLAG", Types.VARCHAR },
            { "CONTRACT_ID", Types.VARCHAR },
            { "CUSTOMER_COMPANY_CODE", Types.VARCHAR },
            { "ORDER_TYPE", Types.VARCHAR },
            { "COMPANY_ID", Types.VARCHAR },
            { "BRAND_ID", Types.VARCHAR },
            { "INVOICE_DATE", Types.VARCHAR },
            { "BATCH_ID", Types.VARCHAR },
            { "CONTRACT_NO", Types.VARCHAR },
            { "CHECK_RECORD", Types.BOOLEAN }
        };
    public static final String TABLE_SQL_CREATE = "create table IVLD_SALES_MASTER (ACCOUNT_ID VARCHAR(75) null,SALES_INTFID VARCHAR(75) null,MODIFIED_DATE DATE null,ORGANIZATION_KEY VARCHAR(75) null,DIVISION_ID VARCHAR(75) null,SOURCE VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,ANALYSIS_CODE VARCHAR(75) null,IVLD_SALES_MASTER_SID INTEGER not null primary key IDENTITY,DOC_TYPE VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,LOT_NO VARCHAR(75) null,QUANTITY VARCHAR(75) null,INVOICE_LINE_NUMBER VARCHAR(75) null,IDENTIFIER_CODE_QUALIFIER VARCHAR(75) null,ACCOUNT_CODE_QUALIFIER VARCHAR(75) null,PARENT_ITEM_ID VARCHAR(75) null,ACCOUNT_NO VARCHAR(75) null,REASON_FOR_FAILURE VARCHAR(75) null,ACCOUNT_NAME VARCHAR(75) null,PROVISION_ID VARCHAR(75) null,AMOUNT VARCHAR(75) null,MARKET_ID VARCHAR(75) null,IS_ACTIVE VARCHAR(75) null,WHOLESALE_OWNER_ID VARCHAR(75) null,PRICE_ADJUSTMENT_NAME VARCHAR(75) null,SALES_ID VARCHAR(75) null,ERROR_FIELD VARCHAR(75) null,RECORD_SEQUENCE VARCHAR(75) null,PRICE VARCHAR(75) null,CUSTOMER_SUBTYPE VARCHAR(75) null,PARENT_ITEM_NO VARCHAR(75) null,ITEM_ID VARCHAR(75) null,ORDER_RECEIVED_DATE VARCHAR(75) null,ORDER_NUMBER VARCHAR(75) null,ACCOUNT_TYPE VARCHAR(75) null,UPLOAD_DATE VARCHAR(75) null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,ERROR_CODE VARCHAR(75) null,ITEM_UOM VARCHAR(75) null,INTF_INSERTED_DATE DATE null,INVOICE_NUMBER VARCHAR(75) null,ORDER_SUBTYPE VARCHAR(75) null,ITEM_NO VARCHAR(75) null,REPROCESSED_FLAG VARCHAR(75) null,CONTRACT_ID VARCHAR(75) null,CUSTOMER_COMPANY_CODE VARCHAR(75) null,ORDER_TYPE VARCHAR(75) null,COMPANY_ID VARCHAR(75) null,BRAND_ID VARCHAR(75) null,INVOICE_DATE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,CONTRACT_NO VARCHAR(75) null,CHECK_RECORD BOOLEAN)";
    public static final String TABLE_SQL_DROP = "drop table IVLD_SALES_MASTER";
    public static final String ORDER_BY_JPQL = " ORDER BY ivldSalesMaster.ivldSalesMasterSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY IVLD_SALES_MASTER.IVLD_SALES_MASTER_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.IvldSalesMaster"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.IvldSalesMaster"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.IvldSalesMaster"));
    private static ClassLoader _classLoader = IvldSalesMaster.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            IvldSalesMaster.class
        };
    private String _accountId;
    private String _salesIntfid;
    private Date _modifiedDate;
    private String _organizationKey;
    private String _divisionId;
    private String _source;
    private String _addChgDelIndicator;
    private String _analysisCode;
    private int _ivldSalesMasterSid;
    private String _docType;
    private String _modifiedBy;
    private String _lotNo;
    private String _quantity;
    private String _invoiceLineNumber;
    private String _identifierCodeQualifier;
    private String _accountCodeQualifier;
    private String _parentItemId;
    private String _accountNo;
    private String _reasonForFailure;
    private String _accountName;
    private String _provisionId;
    private String _amount;
    private String _marketId;
    private String _isActive;
    private String _wholesaleOwnerId;
    private String _priceAdjustmentName;
    private String _salesId;
    private String _errorField;
    private String _recordSequence;
    private String _price;
    private String _customerSubtype;
    private String _parentItemNo;
    private String _itemId;
    private String _orderReceivedDate;
    private String _orderNumber;
    private String _accountType;
    private String _uploadDate;
    private String _createdBy;
    private Date _createdDate;
    private String _errorCode;
    private String _itemUom;
    private Date _intfInsertedDate;
    private String _invoiceNumber;
    private String _orderSubtype;
    private String _itemNo;
    private String _reprocessedFlag;
    private String _contractId;
    private String _customerCompanyCode;
    private String _orderType;
    private String _companyId;
    private String _brandId;
    private String _invoiceDate;
    private String _batchId;
    private String _contractNo;
    private boolean _checkRecord;
    private IvldSalesMaster _escapedModel;

    public IvldSalesMasterModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _ivldSalesMasterSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setIvldSalesMasterSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _ivldSalesMasterSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return IvldSalesMaster.class;
    }

    @Override
    public String getModelClassName() {
        return IvldSalesMaster.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("accountId", getAccountId());
        attributes.put("salesIntfid", getSalesIntfid());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("organizationKey", getOrganizationKey());
        attributes.put("divisionId", getDivisionId());
        attributes.put("source", getSource());
        attributes.put("addChgDelIndicator", getAddChgDelIndicator());
        attributes.put("analysisCode", getAnalysisCode());
        attributes.put("ivldSalesMasterSid", getIvldSalesMasterSid());
        attributes.put("docType", getDocType());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("lotNo", getLotNo());
        attributes.put("quantity", getQuantity());
        attributes.put("invoiceLineNumber", getInvoiceLineNumber());
        attributes.put("identifierCodeQualifier", getIdentifierCodeQualifier());
        attributes.put("accountCodeQualifier", getAccountCodeQualifier());
        attributes.put("parentItemId", getParentItemId());
        attributes.put("accountNo", getAccountNo());
        attributes.put("reasonForFailure", getReasonForFailure());
        attributes.put("accountName", getAccountName());
        attributes.put("provisionId", getProvisionId());
        attributes.put("amount", getAmount());
        attributes.put("marketId", getMarketId());
        attributes.put("isActive", getIsActive());
        attributes.put("wholesaleOwnerId", getWholesaleOwnerId());
        attributes.put("priceAdjustmentName", getPriceAdjustmentName());
        attributes.put("salesId", getSalesId());
        attributes.put("errorField", getErrorField());
        attributes.put("recordSequence", getRecordSequence());
        attributes.put("price", getPrice());
        attributes.put("customerSubtype", getCustomerSubtype());
        attributes.put("parentItemNo", getParentItemNo());
        attributes.put("itemId", getItemId());
        attributes.put("orderReceivedDate", getOrderReceivedDate());
        attributes.put("orderNumber", getOrderNumber());
        attributes.put("accountType", getAccountType());
        attributes.put("uploadDate", getUploadDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("errorCode", getErrorCode());
        attributes.put("itemUom", getItemUom());
        attributes.put("intfInsertedDate", getIntfInsertedDate());
        attributes.put("invoiceNumber", getInvoiceNumber());
        attributes.put("orderSubtype", getOrderSubtype());
        attributes.put("itemNo", getItemNo());
        attributes.put("reprocessedFlag", getReprocessedFlag());
        attributes.put("contractId", getContractId());
        attributes.put("customerCompanyCode", getCustomerCompanyCode());
        attributes.put("orderType", getOrderType());
        attributes.put("companyId", getCompanyId());
        attributes.put("brandId", getBrandId());
        attributes.put("invoiceDate", getInvoiceDate());
        attributes.put("batchId", getBatchId());
        attributes.put("contractNo", getContractNo());
        attributes.put("checkRecord", getCheckRecord());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String accountId = (String) attributes.get("accountId");

        if (accountId != null) {
            setAccountId(accountId);
        }

        String salesIntfid = (String) attributes.get("salesIntfid");

        if (salesIntfid != null) {
            setSalesIntfid(salesIntfid);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String organizationKey = (String) attributes.get("organizationKey");

        if (organizationKey != null) {
            setOrganizationKey(organizationKey);
        }

        String divisionId = (String) attributes.get("divisionId");

        if (divisionId != null) {
            setDivisionId(divisionId);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        String addChgDelIndicator = (String) attributes.get(
                "addChgDelIndicator");

        if (addChgDelIndicator != null) {
            setAddChgDelIndicator(addChgDelIndicator);
        }

        String analysisCode = (String) attributes.get("analysisCode");

        if (analysisCode != null) {
            setAnalysisCode(analysisCode);
        }

        Integer ivldSalesMasterSid = (Integer) attributes.get(
                "ivldSalesMasterSid");

        if (ivldSalesMasterSid != null) {
            setIvldSalesMasterSid(ivldSalesMasterSid);
        }

        String docType = (String) attributes.get("docType");

        if (docType != null) {
            setDocType(docType);
        }

        String modifiedBy = (String) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String lotNo = (String) attributes.get("lotNo");

        if (lotNo != null) {
            setLotNo(lotNo);
        }

        String quantity = (String) attributes.get("quantity");

        if (quantity != null) {
            setQuantity(quantity);
        }

        String invoiceLineNumber = (String) attributes.get("invoiceLineNumber");

        if (invoiceLineNumber != null) {
            setInvoiceLineNumber(invoiceLineNumber);
        }

        String identifierCodeQualifier = (String) attributes.get(
                "identifierCodeQualifier");

        if (identifierCodeQualifier != null) {
            setIdentifierCodeQualifier(identifierCodeQualifier);
        }

        String accountCodeQualifier = (String) attributes.get(
                "accountCodeQualifier");

        if (accountCodeQualifier != null) {
            setAccountCodeQualifier(accountCodeQualifier);
        }

        String parentItemId = (String) attributes.get("parentItemId");

        if (parentItemId != null) {
            setParentItemId(parentItemId);
        }

        String accountNo = (String) attributes.get("accountNo");

        if (accountNo != null) {
            setAccountNo(accountNo);
        }

        String reasonForFailure = (String) attributes.get("reasonForFailure");

        if (reasonForFailure != null) {
            setReasonForFailure(reasonForFailure);
        }

        String accountName = (String) attributes.get("accountName");

        if (accountName != null) {
            setAccountName(accountName);
        }

        String provisionId = (String) attributes.get("provisionId");

        if (provisionId != null) {
            setProvisionId(provisionId);
        }

        String amount = (String) attributes.get("amount");

        if (amount != null) {
            setAmount(amount);
        }

        String marketId = (String) attributes.get("marketId");

        if (marketId != null) {
            setMarketId(marketId);
        }

        String isActive = (String) attributes.get("isActive");

        if (isActive != null) {
            setIsActive(isActive);
        }

        String wholesaleOwnerId = (String) attributes.get("wholesaleOwnerId");

        if (wholesaleOwnerId != null) {
            setWholesaleOwnerId(wholesaleOwnerId);
        }

        String priceAdjustmentName = (String) attributes.get(
                "priceAdjustmentName");

        if (priceAdjustmentName != null) {
            setPriceAdjustmentName(priceAdjustmentName);
        }

        String salesId = (String) attributes.get("salesId");

        if (salesId != null) {
            setSalesId(salesId);
        }

        String errorField = (String) attributes.get("errorField");

        if (errorField != null) {
            setErrorField(errorField);
        }

        String recordSequence = (String) attributes.get("recordSequence");

        if (recordSequence != null) {
            setRecordSequence(recordSequence);
        }

        String price = (String) attributes.get("price");

        if (price != null) {
            setPrice(price);
        }

        String customerSubtype = (String) attributes.get("customerSubtype");

        if (customerSubtype != null) {
            setCustomerSubtype(customerSubtype);
        }

        String parentItemNo = (String) attributes.get("parentItemNo");

        if (parentItemNo != null) {
            setParentItemNo(parentItemNo);
        }

        String itemId = (String) attributes.get("itemId");

        if (itemId != null) {
            setItemId(itemId);
        }

        String orderReceivedDate = (String) attributes.get("orderReceivedDate");

        if (orderReceivedDate != null) {
            setOrderReceivedDate(orderReceivedDate);
        }

        String orderNumber = (String) attributes.get("orderNumber");

        if (orderNumber != null) {
            setOrderNumber(orderNumber);
        }

        String accountType = (String) attributes.get("accountType");

        if (accountType != null) {
            setAccountType(accountType);
        }

        String uploadDate = (String) attributes.get("uploadDate");

        if (uploadDate != null) {
            setUploadDate(uploadDate);
        }

        String createdBy = (String) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        String errorCode = (String) attributes.get("errorCode");

        if (errorCode != null) {
            setErrorCode(errorCode);
        }

        String itemUom = (String) attributes.get("itemUom");

        if (itemUom != null) {
            setItemUom(itemUom);
        }

        Date intfInsertedDate = (Date) attributes.get("intfInsertedDate");

        if (intfInsertedDate != null) {
            setIntfInsertedDate(intfInsertedDate);
        }

        String invoiceNumber = (String) attributes.get("invoiceNumber");

        if (invoiceNumber != null) {
            setInvoiceNumber(invoiceNumber);
        }

        String orderSubtype = (String) attributes.get("orderSubtype");

        if (orderSubtype != null) {
            setOrderSubtype(orderSubtype);
        }

        String itemNo = (String) attributes.get("itemNo");

        if (itemNo != null) {
            setItemNo(itemNo);
        }

        String reprocessedFlag = (String) attributes.get("reprocessedFlag");

        if (reprocessedFlag != null) {
            setReprocessedFlag(reprocessedFlag);
        }

        String contractId = (String) attributes.get("contractId");

        if (contractId != null) {
            setContractId(contractId);
        }

        String customerCompanyCode = (String) attributes.get(
                "customerCompanyCode");

        if (customerCompanyCode != null) {
            setCustomerCompanyCode(customerCompanyCode);
        }

        String orderType = (String) attributes.get("orderType");

        if (orderType != null) {
            setOrderType(orderType);
        }

        String companyId = (String) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        String brandId = (String) attributes.get("brandId");

        if (brandId != null) {
            setBrandId(brandId);
        }

        String invoiceDate = (String) attributes.get("invoiceDate");

        if (invoiceDate != null) {
            setInvoiceDate(invoiceDate);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        String contractNo = (String) attributes.get("contractNo");

        if (contractNo != null) {
            setContractNo(contractNo);
        }

        Boolean checkRecord = (Boolean) attributes.get("checkRecord");

        if (checkRecord != null) {
            setCheckRecord(checkRecord);
        }
    }

    @Override
    public String getAccountId() {
        if (_accountId == null) {
            return StringPool.BLANK;
        } else {
            return _accountId;
        }
    }

    @Override
    public void setAccountId(String accountId) {
        _accountId = accountId;
    }

    @Override
    public String getSalesIntfid() {
        if (_salesIntfid == null) {
            return StringPool.BLANK;
        } else {
            return _salesIntfid;
        }
    }

    @Override
    public void setSalesIntfid(String salesIntfid) {
        _salesIntfid = salesIntfid;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getOrganizationKey() {
        if (_organizationKey == null) {
            return StringPool.BLANK;
        } else {
            return _organizationKey;
        }
    }

    @Override
    public void setOrganizationKey(String organizationKey) {
        _organizationKey = organizationKey;
    }

    @Override
    public String getDivisionId() {
        if (_divisionId == null) {
            return StringPool.BLANK;
        } else {
            return _divisionId;
        }
    }

    @Override
    public void setDivisionId(String divisionId) {
        _divisionId = divisionId;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public String getAddChgDelIndicator() {
        if (_addChgDelIndicator == null) {
            return StringPool.BLANK;
        } else {
            return _addChgDelIndicator;
        }
    }

    @Override
    public void setAddChgDelIndicator(String addChgDelIndicator) {
        _addChgDelIndicator = addChgDelIndicator;
    }

    @Override
    public String getAnalysisCode() {
        if (_analysisCode == null) {
            return StringPool.BLANK;
        } else {
            return _analysisCode;
        }
    }

    @Override
    public void setAnalysisCode(String analysisCode) {
        _analysisCode = analysisCode;
    }

    @Override
    public int getIvldSalesMasterSid() {
        return _ivldSalesMasterSid;
    }

    @Override
    public void setIvldSalesMasterSid(int ivldSalesMasterSid) {
        _ivldSalesMasterSid = ivldSalesMasterSid;
    }

    @Override
    public String getDocType() {
        if (_docType == null) {
            return StringPool.BLANK;
        } else {
            return _docType;
        }
    }

    @Override
    public void setDocType(String docType) {
        _docType = docType;
    }

    @Override
    public String getModifiedBy() {
        if (_modifiedBy == null) {
            return StringPool.BLANK;
        } else {
            return _modifiedBy;
        }
    }

    @Override
    public void setModifiedBy(String modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getLotNo() {
        if (_lotNo == null) {
            return StringPool.BLANK;
        } else {
            return _lotNo;
        }
    }

    @Override
    public void setLotNo(String lotNo) {
        _lotNo = lotNo;
    }

    @Override
    public String getQuantity() {
        if (_quantity == null) {
            return StringPool.BLANK;
        } else {
            return _quantity;
        }
    }

    @Override
    public void setQuantity(String quantity) {
        _quantity = quantity;
    }

    @Override
    public String getInvoiceLineNumber() {
        if (_invoiceLineNumber == null) {
            return StringPool.BLANK;
        } else {
            return _invoiceLineNumber;
        }
    }

    @Override
    public void setInvoiceLineNumber(String invoiceLineNumber) {
        _invoiceLineNumber = invoiceLineNumber;
    }

    @Override
    public String getIdentifierCodeQualifier() {
        if (_identifierCodeQualifier == null) {
            return StringPool.BLANK;
        } else {
            return _identifierCodeQualifier;
        }
    }

    @Override
    public void setIdentifierCodeQualifier(String identifierCodeQualifier) {
        _identifierCodeQualifier = identifierCodeQualifier;
    }

    @Override
    public String getAccountCodeQualifier() {
        if (_accountCodeQualifier == null) {
            return StringPool.BLANK;
        } else {
            return _accountCodeQualifier;
        }
    }

    @Override
    public void setAccountCodeQualifier(String accountCodeQualifier) {
        _accountCodeQualifier = accountCodeQualifier;
    }

    @Override
    public String getParentItemId() {
        if (_parentItemId == null) {
            return StringPool.BLANK;
        } else {
            return _parentItemId;
        }
    }

    @Override
    public void setParentItemId(String parentItemId) {
        _parentItemId = parentItemId;
    }

    @Override
    public String getAccountNo() {
        if (_accountNo == null) {
            return StringPool.BLANK;
        } else {
            return _accountNo;
        }
    }

    @Override
    public void setAccountNo(String accountNo) {
        _accountNo = accountNo;
    }

    @Override
    public String getReasonForFailure() {
        if (_reasonForFailure == null) {
            return StringPool.BLANK;
        } else {
            return _reasonForFailure;
        }
    }

    @Override
    public void setReasonForFailure(String reasonForFailure) {
        _reasonForFailure = reasonForFailure;
    }

    @Override
    public String getAccountName() {
        if (_accountName == null) {
            return StringPool.BLANK;
        } else {
            return _accountName;
        }
    }

    @Override
    public void setAccountName(String accountName) {
        _accountName = accountName;
    }

    @Override
    public String getProvisionId() {
        if (_provisionId == null) {
            return StringPool.BLANK;
        } else {
            return _provisionId;
        }
    }

    @Override
    public void setProvisionId(String provisionId) {
        _provisionId = provisionId;
    }

    @Override
    public String getAmount() {
        if (_amount == null) {
            return StringPool.BLANK;
        } else {
            return _amount;
        }
    }

    @Override
    public void setAmount(String amount) {
        _amount = amount;
    }

    @Override
    public String getMarketId() {
        if (_marketId == null) {
            return StringPool.BLANK;
        } else {
            return _marketId;
        }
    }

    @Override
    public void setMarketId(String marketId) {
        _marketId = marketId;
    }

    @Override
    public String getIsActive() {
        if (_isActive == null) {
            return StringPool.BLANK;
        } else {
            return _isActive;
        }
    }

    @Override
    public void setIsActive(String isActive) {
        _isActive = isActive;
    }

    @Override
    public String getWholesaleOwnerId() {
        if (_wholesaleOwnerId == null) {
            return StringPool.BLANK;
        } else {
            return _wholesaleOwnerId;
        }
    }

    @Override
    public void setWholesaleOwnerId(String wholesaleOwnerId) {
        _wholesaleOwnerId = wholesaleOwnerId;
    }

    @Override
    public String getPriceAdjustmentName() {
        if (_priceAdjustmentName == null) {
            return StringPool.BLANK;
        } else {
            return _priceAdjustmentName;
        }
    }

    @Override
    public void setPriceAdjustmentName(String priceAdjustmentName) {
        _priceAdjustmentName = priceAdjustmentName;
    }

    @Override
    public String getSalesId() {
        if (_salesId == null) {
            return StringPool.BLANK;
        } else {
            return _salesId;
        }
    }

    @Override
    public void setSalesId(String salesId) {
        _salesId = salesId;
    }

    @Override
    public String getErrorField() {
        if (_errorField == null) {
            return StringPool.BLANK;
        } else {
            return _errorField;
        }
    }

    @Override
    public void setErrorField(String errorField) {
        _errorField = errorField;
    }

    @Override
    public String getRecordSequence() {
        if (_recordSequence == null) {
            return StringPool.BLANK;
        } else {
            return _recordSequence;
        }
    }

    @Override
    public void setRecordSequence(String recordSequence) {
        _recordSequence = recordSequence;
    }

    @Override
    public String getPrice() {
        if (_price == null) {
            return StringPool.BLANK;
        } else {
            return _price;
        }
    }

    @Override
    public void setPrice(String price) {
        _price = price;
    }

    @Override
    public String getCustomerSubtype() {
        if (_customerSubtype == null) {
            return StringPool.BLANK;
        } else {
            return _customerSubtype;
        }
    }

    @Override
    public void setCustomerSubtype(String customerSubtype) {
        _customerSubtype = customerSubtype;
    }

    @Override
    public String getParentItemNo() {
        if (_parentItemNo == null) {
            return StringPool.BLANK;
        } else {
            return _parentItemNo;
        }
    }

    @Override
    public void setParentItemNo(String parentItemNo) {
        _parentItemNo = parentItemNo;
    }

    @Override
    public String getItemId() {
        if (_itemId == null) {
            return StringPool.BLANK;
        } else {
            return _itemId;
        }
    }

    @Override
    public void setItemId(String itemId) {
        _itemId = itemId;
    }

    @Override
    public String getOrderReceivedDate() {
        if (_orderReceivedDate == null) {
            return StringPool.BLANK;
        } else {
            return _orderReceivedDate;
        }
    }

    @Override
    public void setOrderReceivedDate(String orderReceivedDate) {
        _orderReceivedDate = orderReceivedDate;
    }

    @Override
    public String getOrderNumber() {
        if (_orderNumber == null) {
            return StringPool.BLANK;
        } else {
            return _orderNumber;
        }
    }

    @Override
    public void setOrderNumber(String orderNumber) {
        _orderNumber = orderNumber;
    }

    @Override
    public String getAccountType() {
        if (_accountType == null) {
            return StringPool.BLANK;
        } else {
            return _accountType;
        }
    }

    @Override
    public void setAccountType(String accountType) {
        _accountType = accountType;
    }

    @Override
    public String getUploadDate() {
        if (_uploadDate == null) {
            return StringPool.BLANK;
        } else {
            return _uploadDate;
        }
    }

    @Override
    public void setUploadDate(String uploadDate) {
        _uploadDate = uploadDate;
    }

    @Override
    public String getCreatedBy() {
        if (_createdBy == null) {
            return StringPool.BLANK;
        } else {
            return _createdBy;
        }
    }

    @Override
    public void setCreatedBy(String createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public String getErrorCode() {
        if (_errorCode == null) {
            return StringPool.BLANK;
        } else {
            return _errorCode;
        }
    }

    @Override
    public void setErrorCode(String errorCode) {
        _errorCode = errorCode;
    }

    @Override
    public String getItemUom() {
        if (_itemUom == null) {
            return StringPool.BLANK;
        } else {
            return _itemUom;
        }
    }

    @Override
    public void setItemUom(String itemUom) {
        _itemUom = itemUom;
    }

    @Override
    public Date getIntfInsertedDate() {
        return _intfInsertedDate;
    }

    @Override
    public void setIntfInsertedDate(Date intfInsertedDate) {
        _intfInsertedDate = intfInsertedDate;
    }

    @Override
    public String getInvoiceNumber() {
        if (_invoiceNumber == null) {
            return StringPool.BLANK;
        } else {
            return _invoiceNumber;
        }
    }

    @Override
    public void setInvoiceNumber(String invoiceNumber) {
        _invoiceNumber = invoiceNumber;
    }

    @Override
    public String getOrderSubtype() {
        if (_orderSubtype == null) {
            return StringPool.BLANK;
        } else {
            return _orderSubtype;
        }
    }

    @Override
    public void setOrderSubtype(String orderSubtype) {
        _orderSubtype = orderSubtype;
    }

    @Override
    public String getItemNo() {
        if (_itemNo == null) {
            return StringPool.BLANK;
        } else {
            return _itemNo;
        }
    }

    @Override
    public void setItemNo(String itemNo) {
        _itemNo = itemNo;
    }

    @Override
    public String getReprocessedFlag() {
        if (_reprocessedFlag == null) {
            return StringPool.BLANK;
        } else {
            return _reprocessedFlag;
        }
    }

    @Override
    public void setReprocessedFlag(String reprocessedFlag) {
        _reprocessedFlag = reprocessedFlag;
    }

    @Override
    public String getContractId() {
        if (_contractId == null) {
            return StringPool.BLANK;
        } else {
            return _contractId;
        }
    }

    @Override
    public void setContractId(String contractId) {
        _contractId = contractId;
    }

    @Override
    public String getCustomerCompanyCode() {
        if (_customerCompanyCode == null) {
            return StringPool.BLANK;
        } else {
            return _customerCompanyCode;
        }
    }

    @Override
    public void setCustomerCompanyCode(String customerCompanyCode) {
        _customerCompanyCode = customerCompanyCode;
    }

    @Override
    public String getOrderType() {
        if (_orderType == null) {
            return StringPool.BLANK;
        } else {
            return _orderType;
        }
    }

    @Override
    public void setOrderType(String orderType) {
        _orderType = orderType;
    }

    @Override
    public String getCompanyId() {
        if (_companyId == null) {
            return StringPool.BLANK;
        } else {
            return _companyId;
        }
    }

    @Override
    public void setCompanyId(String companyId) {
        _companyId = companyId;
    }

    @Override
    public String getBrandId() {
        if (_brandId == null) {
            return StringPool.BLANK;
        } else {
            return _brandId;
        }
    }

    @Override
    public void setBrandId(String brandId) {
        _brandId = brandId;
    }

    @Override
    public String getInvoiceDate() {
        if (_invoiceDate == null) {
            return StringPool.BLANK;
        } else {
            return _invoiceDate;
        }
    }

    @Override
    public void setInvoiceDate(String invoiceDate) {
        _invoiceDate = invoiceDate;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public String getContractNo() {
        if (_contractNo == null) {
            return StringPool.BLANK;
        } else {
            return _contractNo;
        }
    }

    @Override
    public void setContractNo(String contractNo) {
        _contractNo = contractNo;
    }

    @Override
    public boolean getCheckRecord() {
        return _checkRecord;
    }

    @Override
    public boolean isCheckRecord() {
        return _checkRecord;
    }

    @Override
    public void setCheckRecord(boolean checkRecord) {
        _checkRecord = checkRecord;
    }

    @Override
    public IvldSalesMaster toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (IvldSalesMaster) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        IvldSalesMasterImpl ivldSalesMasterImpl = new IvldSalesMasterImpl();

        ivldSalesMasterImpl.setAccountId(getAccountId());
        ivldSalesMasterImpl.setSalesIntfid(getSalesIntfid());
        ivldSalesMasterImpl.setModifiedDate(getModifiedDate());
        ivldSalesMasterImpl.setOrganizationKey(getOrganizationKey());
        ivldSalesMasterImpl.setDivisionId(getDivisionId());
        ivldSalesMasterImpl.setSource(getSource());
        ivldSalesMasterImpl.setAddChgDelIndicator(getAddChgDelIndicator());
        ivldSalesMasterImpl.setAnalysisCode(getAnalysisCode());
        ivldSalesMasterImpl.setIvldSalesMasterSid(getIvldSalesMasterSid());
        ivldSalesMasterImpl.setDocType(getDocType());
        ivldSalesMasterImpl.setModifiedBy(getModifiedBy());
        ivldSalesMasterImpl.setLotNo(getLotNo());
        ivldSalesMasterImpl.setQuantity(getQuantity());
        ivldSalesMasterImpl.setInvoiceLineNumber(getInvoiceLineNumber());
        ivldSalesMasterImpl.setIdentifierCodeQualifier(getIdentifierCodeQualifier());
        ivldSalesMasterImpl.setAccountCodeQualifier(getAccountCodeQualifier());
        ivldSalesMasterImpl.setParentItemId(getParentItemId());
        ivldSalesMasterImpl.setAccountNo(getAccountNo());
        ivldSalesMasterImpl.setReasonForFailure(getReasonForFailure());
        ivldSalesMasterImpl.setAccountName(getAccountName());
        ivldSalesMasterImpl.setProvisionId(getProvisionId());
        ivldSalesMasterImpl.setAmount(getAmount());
        ivldSalesMasterImpl.setMarketId(getMarketId());
        ivldSalesMasterImpl.setIsActive(getIsActive());
        ivldSalesMasterImpl.setWholesaleOwnerId(getWholesaleOwnerId());
        ivldSalesMasterImpl.setPriceAdjustmentName(getPriceAdjustmentName());
        ivldSalesMasterImpl.setSalesId(getSalesId());
        ivldSalesMasterImpl.setErrorField(getErrorField());
        ivldSalesMasterImpl.setRecordSequence(getRecordSequence());
        ivldSalesMasterImpl.setPrice(getPrice());
        ivldSalesMasterImpl.setCustomerSubtype(getCustomerSubtype());
        ivldSalesMasterImpl.setParentItemNo(getParentItemNo());
        ivldSalesMasterImpl.setItemId(getItemId());
        ivldSalesMasterImpl.setOrderReceivedDate(getOrderReceivedDate());
        ivldSalesMasterImpl.setOrderNumber(getOrderNumber());
        ivldSalesMasterImpl.setAccountType(getAccountType());
        ivldSalesMasterImpl.setUploadDate(getUploadDate());
        ivldSalesMasterImpl.setCreatedBy(getCreatedBy());
        ivldSalesMasterImpl.setCreatedDate(getCreatedDate());
        ivldSalesMasterImpl.setErrorCode(getErrorCode());
        ivldSalesMasterImpl.setItemUom(getItemUom());
        ivldSalesMasterImpl.setIntfInsertedDate(getIntfInsertedDate());
        ivldSalesMasterImpl.setInvoiceNumber(getInvoiceNumber());
        ivldSalesMasterImpl.setOrderSubtype(getOrderSubtype());
        ivldSalesMasterImpl.setItemNo(getItemNo());
        ivldSalesMasterImpl.setReprocessedFlag(getReprocessedFlag());
        ivldSalesMasterImpl.setContractId(getContractId());
        ivldSalesMasterImpl.setCustomerCompanyCode(getCustomerCompanyCode());
        ivldSalesMasterImpl.setOrderType(getOrderType());
        ivldSalesMasterImpl.setCompanyId(getCompanyId());
        ivldSalesMasterImpl.setBrandId(getBrandId());
        ivldSalesMasterImpl.setInvoiceDate(getInvoiceDate());
        ivldSalesMasterImpl.setBatchId(getBatchId());
        ivldSalesMasterImpl.setContractNo(getContractNo());
        ivldSalesMasterImpl.setCheckRecord(getCheckRecord());

        ivldSalesMasterImpl.resetOriginalValues();

        return ivldSalesMasterImpl;
    }

    @Override
    public int compareTo(IvldSalesMaster ivldSalesMaster) {
        int primaryKey = ivldSalesMaster.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof IvldSalesMaster)) {
            return false;
        }

        IvldSalesMaster ivldSalesMaster = (IvldSalesMaster) obj;

        int primaryKey = ivldSalesMaster.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<IvldSalesMaster> toCacheModel() {
        IvldSalesMasterCacheModel ivldSalesMasterCacheModel = new IvldSalesMasterCacheModel();

        ivldSalesMasterCacheModel.accountId = getAccountId();

        String accountId = ivldSalesMasterCacheModel.accountId;

        if ((accountId != null) && (accountId.length() == 0)) {
            ivldSalesMasterCacheModel.accountId = null;
        }

        ivldSalesMasterCacheModel.salesIntfid = getSalesIntfid();

        String salesIntfid = ivldSalesMasterCacheModel.salesIntfid;

        if ((salesIntfid != null) && (salesIntfid.length() == 0)) {
            ivldSalesMasterCacheModel.salesIntfid = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            ivldSalesMasterCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            ivldSalesMasterCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        ivldSalesMasterCacheModel.organizationKey = getOrganizationKey();

        String organizationKey = ivldSalesMasterCacheModel.organizationKey;

        if ((organizationKey != null) && (organizationKey.length() == 0)) {
            ivldSalesMasterCacheModel.organizationKey = null;
        }

        ivldSalesMasterCacheModel.divisionId = getDivisionId();

        String divisionId = ivldSalesMasterCacheModel.divisionId;

        if ((divisionId != null) && (divisionId.length() == 0)) {
            ivldSalesMasterCacheModel.divisionId = null;
        }

        ivldSalesMasterCacheModel.source = getSource();

        String source = ivldSalesMasterCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            ivldSalesMasterCacheModel.source = null;
        }

        ivldSalesMasterCacheModel.addChgDelIndicator = getAddChgDelIndicator();

        String addChgDelIndicator = ivldSalesMasterCacheModel.addChgDelIndicator;

        if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
            ivldSalesMasterCacheModel.addChgDelIndicator = null;
        }

        ivldSalesMasterCacheModel.analysisCode = getAnalysisCode();

        String analysisCode = ivldSalesMasterCacheModel.analysisCode;

        if ((analysisCode != null) && (analysisCode.length() == 0)) {
            ivldSalesMasterCacheModel.analysisCode = null;
        }

        ivldSalesMasterCacheModel.ivldSalesMasterSid = getIvldSalesMasterSid();

        ivldSalesMasterCacheModel.docType = getDocType();

        String docType = ivldSalesMasterCacheModel.docType;

        if ((docType != null) && (docType.length() == 0)) {
            ivldSalesMasterCacheModel.docType = null;
        }

        ivldSalesMasterCacheModel.modifiedBy = getModifiedBy();

        String modifiedBy = ivldSalesMasterCacheModel.modifiedBy;

        if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
            ivldSalesMasterCacheModel.modifiedBy = null;
        }

        ivldSalesMasterCacheModel.lotNo = getLotNo();

        String lotNo = ivldSalesMasterCacheModel.lotNo;

        if ((lotNo != null) && (lotNo.length() == 0)) {
            ivldSalesMasterCacheModel.lotNo = null;
        }

        ivldSalesMasterCacheModel.quantity = getQuantity();

        String quantity = ivldSalesMasterCacheModel.quantity;

        if ((quantity != null) && (quantity.length() == 0)) {
            ivldSalesMasterCacheModel.quantity = null;
        }

        ivldSalesMasterCacheModel.invoiceLineNumber = getInvoiceLineNumber();

        String invoiceLineNumber = ivldSalesMasterCacheModel.invoiceLineNumber;

        if ((invoiceLineNumber != null) && (invoiceLineNumber.length() == 0)) {
            ivldSalesMasterCacheModel.invoiceLineNumber = null;
        }

        ivldSalesMasterCacheModel.identifierCodeQualifier = getIdentifierCodeQualifier();

        String identifierCodeQualifier = ivldSalesMasterCacheModel.identifierCodeQualifier;

        if ((identifierCodeQualifier != null) &&
                (identifierCodeQualifier.length() == 0)) {
            ivldSalesMasterCacheModel.identifierCodeQualifier = null;
        }

        ivldSalesMasterCacheModel.accountCodeQualifier = getAccountCodeQualifier();

        String accountCodeQualifier = ivldSalesMasterCacheModel.accountCodeQualifier;

        if ((accountCodeQualifier != null) &&
                (accountCodeQualifier.length() == 0)) {
            ivldSalesMasterCacheModel.accountCodeQualifier = null;
        }

        ivldSalesMasterCacheModel.parentItemId = getParentItemId();

        String parentItemId = ivldSalesMasterCacheModel.parentItemId;

        if ((parentItemId != null) && (parentItemId.length() == 0)) {
            ivldSalesMasterCacheModel.parentItemId = null;
        }

        ivldSalesMasterCacheModel.accountNo = getAccountNo();

        String accountNo = ivldSalesMasterCacheModel.accountNo;

        if ((accountNo != null) && (accountNo.length() == 0)) {
            ivldSalesMasterCacheModel.accountNo = null;
        }

        ivldSalesMasterCacheModel.reasonForFailure = getReasonForFailure();

        String reasonForFailure = ivldSalesMasterCacheModel.reasonForFailure;

        if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
            ivldSalesMasterCacheModel.reasonForFailure = null;
        }

        ivldSalesMasterCacheModel.accountName = getAccountName();

        String accountName = ivldSalesMasterCacheModel.accountName;

        if ((accountName != null) && (accountName.length() == 0)) {
            ivldSalesMasterCacheModel.accountName = null;
        }

        ivldSalesMasterCacheModel.provisionId = getProvisionId();

        String provisionId = ivldSalesMasterCacheModel.provisionId;

        if ((provisionId != null) && (provisionId.length() == 0)) {
            ivldSalesMasterCacheModel.provisionId = null;
        }

        ivldSalesMasterCacheModel.amount = getAmount();

        String amount = ivldSalesMasterCacheModel.amount;

        if ((amount != null) && (amount.length() == 0)) {
            ivldSalesMasterCacheModel.amount = null;
        }

        ivldSalesMasterCacheModel.marketId = getMarketId();

        String marketId = ivldSalesMasterCacheModel.marketId;

        if ((marketId != null) && (marketId.length() == 0)) {
            ivldSalesMasterCacheModel.marketId = null;
        }

        ivldSalesMasterCacheModel.isActive = getIsActive();

        String isActive = ivldSalesMasterCacheModel.isActive;

        if ((isActive != null) && (isActive.length() == 0)) {
            ivldSalesMasterCacheModel.isActive = null;
        }

        ivldSalesMasterCacheModel.wholesaleOwnerId = getWholesaleOwnerId();

        String wholesaleOwnerId = ivldSalesMasterCacheModel.wholesaleOwnerId;

        if ((wholesaleOwnerId != null) && (wholesaleOwnerId.length() == 0)) {
            ivldSalesMasterCacheModel.wholesaleOwnerId = null;
        }

        ivldSalesMasterCacheModel.priceAdjustmentName = getPriceAdjustmentName();

        String priceAdjustmentName = ivldSalesMasterCacheModel.priceAdjustmentName;

        if ((priceAdjustmentName != null) &&
                (priceAdjustmentName.length() == 0)) {
            ivldSalesMasterCacheModel.priceAdjustmentName = null;
        }

        ivldSalesMasterCacheModel.salesId = getSalesId();

        String salesId = ivldSalesMasterCacheModel.salesId;

        if ((salesId != null) && (salesId.length() == 0)) {
            ivldSalesMasterCacheModel.salesId = null;
        }

        ivldSalesMasterCacheModel.errorField = getErrorField();

        String errorField = ivldSalesMasterCacheModel.errorField;

        if ((errorField != null) && (errorField.length() == 0)) {
            ivldSalesMasterCacheModel.errorField = null;
        }

        ivldSalesMasterCacheModel.recordSequence = getRecordSequence();

        String recordSequence = ivldSalesMasterCacheModel.recordSequence;

        if ((recordSequence != null) && (recordSequence.length() == 0)) {
            ivldSalesMasterCacheModel.recordSequence = null;
        }

        ivldSalesMasterCacheModel.price = getPrice();

        String price = ivldSalesMasterCacheModel.price;

        if ((price != null) && (price.length() == 0)) {
            ivldSalesMasterCacheModel.price = null;
        }

        ivldSalesMasterCacheModel.customerSubtype = getCustomerSubtype();

        String customerSubtype = ivldSalesMasterCacheModel.customerSubtype;

        if ((customerSubtype != null) && (customerSubtype.length() == 0)) {
            ivldSalesMasterCacheModel.customerSubtype = null;
        }

        ivldSalesMasterCacheModel.parentItemNo = getParentItemNo();

        String parentItemNo = ivldSalesMasterCacheModel.parentItemNo;

        if ((parentItemNo != null) && (parentItemNo.length() == 0)) {
            ivldSalesMasterCacheModel.parentItemNo = null;
        }

        ivldSalesMasterCacheModel.itemId = getItemId();

        String itemId = ivldSalesMasterCacheModel.itemId;

        if ((itemId != null) && (itemId.length() == 0)) {
            ivldSalesMasterCacheModel.itemId = null;
        }

        ivldSalesMasterCacheModel.orderReceivedDate = getOrderReceivedDate();

        String orderReceivedDate = ivldSalesMasterCacheModel.orderReceivedDate;

        if ((orderReceivedDate != null) && (orderReceivedDate.length() == 0)) {
            ivldSalesMasterCacheModel.orderReceivedDate = null;
        }

        ivldSalesMasterCacheModel.orderNumber = getOrderNumber();

        String orderNumber = ivldSalesMasterCacheModel.orderNumber;

        if ((orderNumber != null) && (orderNumber.length() == 0)) {
            ivldSalesMasterCacheModel.orderNumber = null;
        }

        ivldSalesMasterCacheModel.accountType = getAccountType();

        String accountType = ivldSalesMasterCacheModel.accountType;

        if ((accountType != null) && (accountType.length() == 0)) {
            ivldSalesMasterCacheModel.accountType = null;
        }

        ivldSalesMasterCacheModel.uploadDate = getUploadDate();

        String uploadDate = ivldSalesMasterCacheModel.uploadDate;

        if ((uploadDate != null) && (uploadDate.length() == 0)) {
            ivldSalesMasterCacheModel.uploadDate = null;
        }

        ivldSalesMasterCacheModel.createdBy = getCreatedBy();

        String createdBy = ivldSalesMasterCacheModel.createdBy;

        if ((createdBy != null) && (createdBy.length() == 0)) {
            ivldSalesMasterCacheModel.createdBy = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            ivldSalesMasterCacheModel.createdDate = createdDate.getTime();
        } else {
            ivldSalesMasterCacheModel.createdDate = Long.MIN_VALUE;
        }

        ivldSalesMasterCacheModel.errorCode = getErrorCode();

        String errorCode = ivldSalesMasterCacheModel.errorCode;

        if ((errorCode != null) && (errorCode.length() == 0)) {
            ivldSalesMasterCacheModel.errorCode = null;
        }

        ivldSalesMasterCacheModel.itemUom = getItemUom();

        String itemUom = ivldSalesMasterCacheModel.itemUom;

        if ((itemUom != null) && (itemUom.length() == 0)) {
            ivldSalesMasterCacheModel.itemUom = null;
        }

        Date intfInsertedDate = getIntfInsertedDate();

        if (intfInsertedDate != null) {
            ivldSalesMasterCacheModel.intfInsertedDate = intfInsertedDate.getTime();
        } else {
            ivldSalesMasterCacheModel.intfInsertedDate = Long.MIN_VALUE;
        }

        ivldSalesMasterCacheModel.invoiceNumber = getInvoiceNumber();

        String invoiceNumber = ivldSalesMasterCacheModel.invoiceNumber;

        if ((invoiceNumber != null) && (invoiceNumber.length() == 0)) {
            ivldSalesMasterCacheModel.invoiceNumber = null;
        }

        ivldSalesMasterCacheModel.orderSubtype = getOrderSubtype();

        String orderSubtype = ivldSalesMasterCacheModel.orderSubtype;

        if ((orderSubtype != null) && (orderSubtype.length() == 0)) {
            ivldSalesMasterCacheModel.orderSubtype = null;
        }

        ivldSalesMasterCacheModel.itemNo = getItemNo();

        String itemNo = ivldSalesMasterCacheModel.itemNo;

        if ((itemNo != null) && (itemNo.length() == 0)) {
            ivldSalesMasterCacheModel.itemNo = null;
        }

        ivldSalesMasterCacheModel.reprocessedFlag = getReprocessedFlag();

        String reprocessedFlag = ivldSalesMasterCacheModel.reprocessedFlag;

        if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
            ivldSalesMasterCacheModel.reprocessedFlag = null;
        }

        ivldSalesMasterCacheModel.contractId = getContractId();

        String contractId = ivldSalesMasterCacheModel.contractId;

        if ((contractId != null) && (contractId.length() == 0)) {
            ivldSalesMasterCacheModel.contractId = null;
        }

        ivldSalesMasterCacheModel.customerCompanyCode = getCustomerCompanyCode();

        String customerCompanyCode = ivldSalesMasterCacheModel.customerCompanyCode;

        if ((customerCompanyCode != null) &&
                (customerCompanyCode.length() == 0)) {
            ivldSalesMasterCacheModel.customerCompanyCode = null;
        }

        ivldSalesMasterCacheModel.orderType = getOrderType();

        String orderType = ivldSalesMasterCacheModel.orderType;

        if ((orderType != null) && (orderType.length() == 0)) {
            ivldSalesMasterCacheModel.orderType = null;
        }

        ivldSalesMasterCacheModel.companyId = getCompanyId();

        String companyId = ivldSalesMasterCacheModel.companyId;

        if ((companyId != null) && (companyId.length() == 0)) {
            ivldSalesMasterCacheModel.companyId = null;
        }

        ivldSalesMasterCacheModel.brandId = getBrandId();

        String brandId = ivldSalesMasterCacheModel.brandId;

        if ((brandId != null) && (brandId.length() == 0)) {
            ivldSalesMasterCacheModel.brandId = null;
        }

        ivldSalesMasterCacheModel.invoiceDate = getInvoiceDate();

        String invoiceDate = ivldSalesMasterCacheModel.invoiceDate;

        if ((invoiceDate != null) && (invoiceDate.length() == 0)) {
            ivldSalesMasterCacheModel.invoiceDate = null;
        }

        ivldSalesMasterCacheModel.batchId = getBatchId();

        String batchId = ivldSalesMasterCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            ivldSalesMasterCacheModel.batchId = null;
        }

        ivldSalesMasterCacheModel.contractNo = getContractNo();

        String contractNo = ivldSalesMasterCacheModel.contractNo;

        if ((contractNo != null) && (contractNo.length() == 0)) {
            ivldSalesMasterCacheModel.contractNo = null;
        }

        ivldSalesMasterCacheModel.checkRecord = getCheckRecord();

        return ivldSalesMasterCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(111);

        sb.append("{accountId=");
        sb.append(getAccountId());
        sb.append(", salesIntfid=");
        sb.append(getSalesIntfid());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", organizationKey=");
        sb.append(getOrganizationKey());
        sb.append(", divisionId=");
        sb.append(getDivisionId());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", addChgDelIndicator=");
        sb.append(getAddChgDelIndicator());
        sb.append(", analysisCode=");
        sb.append(getAnalysisCode());
        sb.append(", ivldSalesMasterSid=");
        sb.append(getIvldSalesMasterSid());
        sb.append(", docType=");
        sb.append(getDocType());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", lotNo=");
        sb.append(getLotNo());
        sb.append(", quantity=");
        sb.append(getQuantity());
        sb.append(", invoiceLineNumber=");
        sb.append(getInvoiceLineNumber());
        sb.append(", identifierCodeQualifier=");
        sb.append(getIdentifierCodeQualifier());
        sb.append(", accountCodeQualifier=");
        sb.append(getAccountCodeQualifier());
        sb.append(", parentItemId=");
        sb.append(getParentItemId());
        sb.append(", accountNo=");
        sb.append(getAccountNo());
        sb.append(", reasonForFailure=");
        sb.append(getReasonForFailure());
        sb.append(", accountName=");
        sb.append(getAccountName());
        sb.append(", provisionId=");
        sb.append(getProvisionId());
        sb.append(", amount=");
        sb.append(getAmount());
        sb.append(", marketId=");
        sb.append(getMarketId());
        sb.append(", isActive=");
        sb.append(getIsActive());
        sb.append(", wholesaleOwnerId=");
        sb.append(getWholesaleOwnerId());
        sb.append(", priceAdjustmentName=");
        sb.append(getPriceAdjustmentName());
        sb.append(", salesId=");
        sb.append(getSalesId());
        sb.append(", errorField=");
        sb.append(getErrorField());
        sb.append(", recordSequence=");
        sb.append(getRecordSequence());
        sb.append(", price=");
        sb.append(getPrice());
        sb.append(", customerSubtype=");
        sb.append(getCustomerSubtype());
        sb.append(", parentItemNo=");
        sb.append(getParentItemNo());
        sb.append(", itemId=");
        sb.append(getItemId());
        sb.append(", orderReceivedDate=");
        sb.append(getOrderReceivedDate());
        sb.append(", orderNumber=");
        sb.append(getOrderNumber());
        sb.append(", accountType=");
        sb.append(getAccountType());
        sb.append(", uploadDate=");
        sb.append(getUploadDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", errorCode=");
        sb.append(getErrorCode());
        sb.append(", itemUom=");
        sb.append(getItemUom());
        sb.append(", intfInsertedDate=");
        sb.append(getIntfInsertedDate());
        sb.append(", invoiceNumber=");
        sb.append(getInvoiceNumber());
        sb.append(", orderSubtype=");
        sb.append(getOrderSubtype());
        sb.append(", itemNo=");
        sb.append(getItemNo());
        sb.append(", reprocessedFlag=");
        sb.append(getReprocessedFlag());
        sb.append(", contractId=");
        sb.append(getContractId());
        sb.append(", customerCompanyCode=");
        sb.append(getCustomerCompanyCode());
        sb.append(", orderType=");
        sb.append(getOrderType());
        sb.append(", companyId=");
        sb.append(getCompanyId());
        sb.append(", brandId=");
        sb.append(getBrandId());
        sb.append(", invoiceDate=");
        sb.append(getInvoiceDate());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", contractNo=");
        sb.append(getContractNo());
        sb.append(", checkRecord=");
        sb.append(getCheckRecord());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(169);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.IvldSalesMaster");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>accountId</column-name><column-value><![CDATA[");
        sb.append(getAccountId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>salesIntfid</column-name><column-value><![CDATA[");
        sb.append(getSalesIntfid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>organizationKey</column-name><column-value><![CDATA[");
        sb.append(getOrganizationKey());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>divisionId</column-name><column-value><![CDATA[");
        sb.append(getDivisionId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
        sb.append(getAddChgDelIndicator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>analysisCode</column-name><column-value><![CDATA[");
        sb.append(getAnalysisCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ivldSalesMasterSid</column-name><column-value><![CDATA[");
        sb.append(getIvldSalesMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>docType</column-name><column-value><![CDATA[");
        sb.append(getDocType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lotNo</column-name><column-value><![CDATA[");
        sb.append(getLotNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>quantity</column-name><column-value><![CDATA[");
        sb.append(getQuantity());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>invoiceLineNumber</column-name><column-value><![CDATA[");
        sb.append(getInvoiceLineNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>identifierCodeQualifier</column-name><column-value><![CDATA[");
        sb.append(getIdentifierCodeQualifier());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>accountCodeQualifier</column-name><column-value><![CDATA[");
        sb.append(getAccountCodeQualifier());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentItemId</column-name><column-value><![CDATA[");
        sb.append(getParentItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>accountNo</column-name><column-value><![CDATA[");
        sb.append(getAccountNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
        sb.append(getReasonForFailure());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>accountName</column-name><column-value><![CDATA[");
        sb.append(getAccountName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>provisionId</column-name><column-value><![CDATA[");
        sb.append(getProvisionId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>amount</column-name><column-value><![CDATA[");
        sb.append(getAmount());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>marketId</column-name><column-value><![CDATA[");
        sb.append(getMarketId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>isActive</column-name><column-value><![CDATA[");
        sb.append(getIsActive());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>wholesaleOwnerId</column-name><column-value><![CDATA[");
        sb.append(getWholesaleOwnerId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>priceAdjustmentName</column-name><column-value><![CDATA[");
        sb.append(getPriceAdjustmentName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>salesId</column-name><column-value><![CDATA[");
        sb.append(getSalesId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>errorField</column-name><column-value><![CDATA[");
        sb.append(getErrorField());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordSequence</column-name><column-value><![CDATA[");
        sb.append(getRecordSequence());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>price</column-name><column-value><![CDATA[");
        sb.append(getPrice());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerSubtype</column-name><column-value><![CDATA[");
        sb.append(getCustomerSubtype());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>parentItemNo</column-name><column-value><![CDATA[");
        sb.append(getParentItemNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemId</column-name><column-value><![CDATA[");
        sb.append(getItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>orderReceivedDate</column-name><column-value><![CDATA[");
        sb.append(getOrderReceivedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>orderNumber</column-name><column-value><![CDATA[");
        sb.append(getOrderNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>accountType</column-name><column-value><![CDATA[");
        sb.append(getAccountType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>uploadDate</column-name><column-value><![CDATA[");
        sb.append(getUploadDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>errorCode</column-name><column-value><![CDATA[");
        sb.append(getErrorCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemUom</column-name><column-value><![CDATA[");
        sb.append(getItemUom());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
        sb.append(getIntfInsertedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>invoiceNumber</column-name><column-value><![CDATA[");
        sb.append(getInvoiceNumber());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>orderSubtype</column-name><column-value><![CDATA[");
        sb.append(getOrderSubtype());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemNo</column-name><column-value><![CDATA[");
        sb.append(getItemNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
        sb.append(getReprocessedFlag());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractId</column-name><column-value><![CDATA[");
        sb.append(getContractId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>customerCompanyCode</column-name><column-value><![CDATA[");
        sb.append(getCustomerCompanyCode());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>orderType</column-name><column-value><![CDATA[");
        sb.append(getOrderType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>brandId</column-name><column-value><![CDATA[");
        sb.append(getBrandId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>invoiceDate</column-name><column-value><![CDATA[");
        sb.append(getInvoiceDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractNo</column-name><column-value><![CDATA[");
        sb.append(getContractNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>checkRecord</column-name><column-value><![CDATA[");
        sb.append(getCheckRecord());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
