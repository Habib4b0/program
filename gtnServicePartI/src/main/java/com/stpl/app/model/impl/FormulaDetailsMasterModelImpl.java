package com.stpl.app.model.impl;

import com.stpl.app.model.FormulaDetailsMaster;
import com.stpl.app.model.FormulaDetailsMasterModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the FormulaDetailsMaster service. Represents a row in the &quot;FORMULA_DETAILS_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.FormulaDetailsMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link FormulaDetailsMasterImpl}.
 * </p>
 *
 * @author
 * @see FormulaDetailsMasterImpl
 * @see com.stpl.app.model.FormulaDetailsMaster
 * @see com.stpl.app.model.FormulaDetailsMasterModel
 * @generated
 */
public class FormulaDetailsMasterModelImpl extends BaseModelImpl<FormulaDetailsMaster>
    implements FormulaDetailsMasterModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a formula details master model instance should use the {@link com.stpl.app.model.FormulaDetailsMaster} interface instead.
     */
    public static final String TABLE_NAME = "FORMULA_DETAILS_MASTER";
    public static final Object[][] TABLE_COLUMNS = {
            { "COMPANY_ID", Types.VARCHAR },
            { "CONTRACT_PRICE_1", Types.DOUBLE },
            { "CONTRACT_PRICE_2", Types.DOUBLE },
            { "END_DATE", Types.TIMESTAMP },
            { "FORMULA_NO", Types.VARCHAR },
            { "FORMULA_DETAILS_MASTER_SID", Types.INTEGER },
            { "ITEM_ID", Types.VARCHAR },
            { "REBATE_PERCENT_1", Types.DOUBLE },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "FORMULA_DESC", Types.VARCHAR },
            { "REBATE_PERCENT_2", Types.DOUBLE },
            { "REBATE_PERCENT_3", Types.DOUBLE },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "START_DATE", Types.TIMESTAMP },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "SOURCE", Types.VARCHAR },
            { "BATCH_ID", Types.VARCHAR },
            { "CONTRACT_PRICE_3", Types.DOUBLE },
            { "MODIFIED_BY", Types.INTEGER },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "FORMULA_ID", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table FORMULA_DETAILS_MASTER (COMPANY_ID VARCHAR(75) null,CONTRACT_PRICE_1 DOUBLE,CONTRACT_PRICE_2 DOUBLE,END_DATE DATE null,FORMULA_NO VARCHAR(75) null,FORMULA_DETAILS_MASTER_SID INTEGER not null primary key IDENTITY,ITEM_ID VARCHAR(75) null,REBATE_PERCENT_1 DOUBLE,MODIFIED_DATE DATE null,FORMULA_DESC VARCHAR(75) null,REBATE_PERCENT_2 DOUBLE,REBATE_PERCENT_3 DOUBLE,RECORD_LOCK_STATUS BOOLEAN,START_DATE DATE null,CREATED_DATE DATE null,CREATED_BY INTEGER,SOURCE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,CONTRACT_PRICE_3 DOUBLE,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,FORMULA_ID VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table FORMULA_DETAILS_MASTER";
    public static final String ORDER_BY_JPQL = " ORDER BY formulaDetailsMaster.formulaDetailsMasterSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY FORMULA_DETAILS_MASTER.FORMULA_DETAILS_MASTER_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.FormulaDetailsMaster"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.FormulaDetailsMaster"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.stpl.app.model.FormulaDetailsMaster"),
            true);
    public static long COMPANYID_COLUMN_BITMASK = 1L;
    public static long ENDDATE_COLUMN_BITMASK = 2L;
    public static long FORMULAID_COLUMN_BITMASK = 4L;
    public static long FORMULANO_COLUMN_BITMASK = 8L;
    public static long ITEMID_COLUMN_BITMASK = 16L;
    public static long STARTDATE_COLUMN_BITMASK = 32L;
    public static long FORMULADETAILSMASTERSID_COLUMN_BITMASK = 64L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.FormulaDetailsMaster"));
    private static ClassLoader _classLoader = FormulaDetailsMaster.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            FormulaDetailsMaster.class
        };
    private String _companyId;
    private String _originalCompanyId;
    private double _contractPrice1;
    private double _contractPrice2;
    private Date _endDate;
    private Date _originalEndDate;
    private String _formulaNo;
    private String _originalFormulaNo;
    private int _formulaDetailsMasterSid;
    private String _itemId;
    private String _originalItemId;
    private double _rebatePercent1;
    private Date _modifiedDate;
    private String _formulaDesc;
    private double _rebatePercent2;
    private double _rebatePercent3;
    private boolean _recordLockStatus;
    private Date _startDate;
    private Date _originalStartDate;
    private Date _createdDate;
    private int _createdBy;
    private String _source;
    private String _batchId;
    private double _contractPrice3;
    private int _modifiedBy;
    private String _inboundStatus;
    private String _formulaId;
    private String _originalFormulaId;
    private long _columnBitmask;
    private FormulaDetailsMaster _escapedModel;

    public FormulaDetailsMasterModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _formulaDetailsMasterSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setFormulaDetailsMasterSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _formulaDetailsMasterSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return FormulaDetailsMaster.class;
    }

    @Override
    public String getModelClassName() {
        return FormulaDetailsMaster.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("companyId", getCompanyId());
        attributes.put("contractPrice1", getContractPrice1());
        attributes.put("contractPrice2", getContractPrice2());
        attributes.put("endDate", getEndDate());
        attributes.put("formulaNo", getFormulaNo());
        attributes.put("formulaDetailsMasterSid", getFormulaDetailsMasterSid());
        attributes.put("itemId", getItemId());
        attributes.put("rebatePercent1", getRebatePercent1());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("formulaDesc", getFormulaDesc());
        attributes.put("rebatePercent2", getRebatePercent2());
        attributes.put("rebatePercent3", getRebatePercent3());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("startDate", getStartDate());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("source", getSource());
        attributes.put("batchId", getBatchId());
        attributes.put("contractPrice3", getContractPrice3());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("formulaId", getFormulaId());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        String companyId = (String) attributes.get("companyId");

        if (companyId != null) {
            setCompanyId(companyId);
        }

        Double contractPrice1 = (Double) attributes.get("contractPrice1");

        if (contractPrice1 != null) {
            setContractPrice1(contractPrice1);
        }

        Double contractPrice2 = (Double) attributes.get("contractPrice2");

        if (contractPrice2 != null) {
            setContractPrice2(contractPrice2);
        }

        Date endDate = (Date) attributes.get("endDate");

        if (endDate != null) {
            setEndDate(endDate);
        }

        String formulaNo = (String) attributes.get("formulaNo");

        if (formulaNo != null) {
            setFormulaNo(formulaNo);
        }

        Integer formulaDetailsMasterSid = (Integer) attributes.get(
                "formulaDetailsMasterSid");

        if (formulaDetailsMasterSid != null) {
            setFormulaDetailsMasterSid(formulaDetailsMasterSid);
        }

        String itemId = (String) attributes.get("itemId");

        if (itemId != null) {
            setItemId(itemId);
        }

        Double rebatePercent1 = (Double) attributes.get("rebatePercent1");

        if (rebatePercent1 != null) {
            setRebatePercent1(rebatePercent1);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String formulaDesc = (String) attributes.get("formulaDesc");

        if (formulaDesc != null) {
            setFormulaDesc(formulaDesc);
        }

        Double rebatePercent2 = (Double) attributes.get("rebatePercent2");

        if (rebatePercent2 != null) {
            setRebatePercent2(rebatePercent2);
        }

        Double rebatePercent3 = (Double) attributes.get("rebatePercent3");

        if (rebatePercent3 != null) {
            setRebatePercent3(rebatePercent3);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        Date startDate = (Date) attributes.get("startDate");

        if (startDate != null) {
            setStartDate(startDate);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        Double contractPrice3 = (Double) attributes.get("contractPrice3");

        if (contractPrice3 != null) {
            setContractPrice3(contractPrice3);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        String formulaId = (String) attributes.get("formulaId");

        if (formulaId != null) {
            setFormulaId(formulaId);
        }
    }

    @Override
    public String getCompanyId() {
        if (_companyId == null) {
            return StringPool.BLANK;
        } else {
            return _companyId;
        }
    }

    @Override
    public void setCompanyId(String companyId) {
        _columnBitmask |= COMPANYID_COLUMN_BITMASK;

        if (_originalCompanyId == null) {
            _originalCompanyId = _companyId;
        }

        _companyId = companyId;
    }

    public String getOriginalCompanyId() {
        return GetterUtil.getString(_originalCompanyId);
    }

    @Override
    public double getContractPrice1() {
        return _contractPrice1;
    }

    @Override
    public void setContractPrice1(double contractPrice1) {
        _contractPrice1 = contractPrice1;
    }

    @Override
    public double getContractPrice2() {
        return _contractPrice2;
    }

    @Override
    public void setContractPrice2(double contractPrice2) {
        _contractPrice2 = contractPrice2;
    }

    @Override
    public Date getEndDate() {
        return _endDate;
    }

    @Override
    public void setEndDate(Date endDate) {
        _columnBitmask |= ENDDATE_COLUMN_BITMASK;

        if (_originalEndDate == null) {
            _originalEndDate = _endDate;
        }

        _endDate = endDate;
    }

    public Date getOriginalEndDate() {
        return _originalEndDate;
    }

    @Override
    public String getFormulaNo() {
        if (_formulaNo == null) {
            return StringPool.BLANK;
        } else {
            return _formulaNo;
        }
    }

    @Override
    public void setFormulaNo(String formulaNo) {
        _columnBitmask |= FORMULANO_COLUMN_BITMASK;

        if (_originalFormulaNo == null) {
            _originalFormulaNo = _formulaNo;
        }

        _formulaNo = formulaNo;
    }

    public String getOriginalFormulaNo() {
        return GetterUtil.getString(_originalFormulaNo);
    }

    @Override
    public int getFormulaDetailsMasterSid() {
        return _formulaDetailsMasterSid;
    }

    @Override
    public void setFormulaDetailsMasterSid(int formulaDetailsMasterSid) {
        _formulaDetailsMasterSid = formulaDetailsMasterSid;
    }

    @Override
    public String getItemId() {
        if (_itemId == null) {
            return StringPool.BLANK;
        } else {
            return _itemId;
        }
    }

    @Override
    public void setItemId(String itemId) {
        _columnBitmask |= ITEMID_COLUMN_BITMASK;

        if (_originalItemId == null) {
            _originalItemId = _itemId;
        }

        _itemId = itemId;
    }

    public String getOriginalItemId() {
        return GetterUtil.getString(_originalItemId);
    }

    @Override
    public double getRebatePercent1() {
        return _rebatePercent1;
    }

    @Override
    public void setRebatePercent1(double rebatePercent1) {
        _rebatePercent1 = rebatePercent1;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getFormulaDesc() {
        if (_formulaDesc == null) {
            return StringPool.BLANK;
        } else {
            return _formulaDesc;
        }
    }

    @Override
    public void setFormulaDesc(String formulaDesc) {
        _formulaDesc = formulaDesc;
    }

    @Override
    public double getRebatePercent2() {
        return _rebatePercent2;
    }

    @Override
    public void setRebatePercent2(double rebatePercent2) {
        _rebatePercent2 = rebatePercent2;
    }

    @Override
    public double getRebatePercent3() {
        return _rebatePercent3;
    }

    @Override
    public void setRebatePercent3(double rebatePercent3) {
        _rebatePercent3 = rebatePercent3;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public Date getStartDate() {
        return _startDate;
    }

    @Override
    public void setStartDate(Date startDate) {
        _columnBitmask |= STARTDATE_COLUMN_BITMASK;

        if (_originalStartDate == null) {
            _originalStartDate = _startDate;
        }

        _startDate = startDate;
    }

    public Date getOriginalStartDate() {
        return _originalStartDate;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public double getContractPrice3() {
        return _contractPrice3;
    }

    @Override
    public void setContractPrice3(double contractPrice3) {
        _contractPrice3 = contractPrice3;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public String getFormulaId() {
        if (_formulaId == null) {
            return StringPool.BLANK;
        } else {
            return _formulaId;
        }
    }

    @Override
    public void setFormulaId(String formulaId) {
        _columnBitmask |= FORMULAID_COLUMN_BITMASK;

        if (_originalFormulaId == null) {
            _originalFormulaId = _formulaId;
        }

        _formulaId = formulaId;
    }

    public String getOriginalFormulaId() {
        return GetterUtil.getString(_originalFormulaId);
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public FormulaDetailsMaster toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (FormulaDetailsMaster) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        FormulaDetailsMasterImpl formulaDetailsMasterImpl = new FormulaDetailsMasterImpl();

        formulaDetailsMasterImpl.setCompanyId(getCompanyId());
        formulaDetailsMasterImpl.setContractPrice1(getContractPrice1());
        formulaDetailsMasterImpl.setContractPrice2(getContractPrice2());
        formulaDetailsMasterImpl.setEndDate(getEndDate());
        formulaDetailsMasterImpl.setFormulaNo(getFormulaNo());
        formulaDetailsMasterImpl.setFormulaDetailsMasterSid(getFormulaDetailsMasterSid());
        formulaDetailsMasterImpl.setItemId(getItemId());
        formulaDetailsMasterImpl.setRebatePercent1(getRebatePercent1());
        formulaDetailsMasterImpl.setModifiedDate(getModifiedDate());
        formulaDetailsMasterImpl.setFormulaDesc(getFormulaDesc());
        formulaDetailsMasterImpl.setRebatePercent2(getRebatePercent2());
        formulaDetailsMasterImpl.setRebatePercent3(getRebatePercent3());
        formulaDetailsMasterImpl.setRecordLockStatus(getRecordLockStatus());
        formulaDetailsMasterImpl.setStartDate(getStartDate());
        formulaDetailsMasterImpl.setCreatedDate(getCreatedDate());
        formulaDetailsMasterImpl.setCreatedBy(getCreatedBy());
        formulaDetailsMasterImpl.setSource(getSource());
        formulaDetailsMasterImpl.setBatchId(getBatchId());
        formulaDetailsMasterImpl.setContractPrice3(getContractPrice3());
        formulaDetailsMasterImpl.setModifiedBy(getModifiedBy());
        formulaDetailsMasterImpl.setInboundStatus(getInboundStatus());
        formulaDetailsMasterImpl.setFormulaId(getFormulaId());

        formulaDetailsMasterImpl.resetOriginalValues();

        return formulaDetailsMasterImpl;
    }

    @Override
    public int compareTo(FormulaDetailsMaster formulaDetailsMaster) {
        int primaryKey = formulaDetailsMaster.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof FormulaDetailsMaster)) {
            return false;
        }

        FormulaDetailsMaster formulaDetailsMaster = (FormulaDetailsMaster) obj;

        int primaryKey = formulaDetailsMaster.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        FormulaDetailsMasterModelImpl formulaDetailsMasterModelImpl = this;

        formulaDetailsMasterModelImpl._originalCompanyId = formulaDetailsMasterModelImpl._companyId;

        formulaDetailsMasterModelImpl._originalEndDate = formulaDetailsMasterModelImpl._endDate;

        formulaDetailsMasterModelImpl._originalFormulaNo = formulaDetailsMasterModelImpl._formulaNo;

        formulaDetailsMasterModelImpl._originalItemId = formulaDetailsMasterModelImpl._itemId;

        formulaDetailsMasterModelImpl._originalStartDate = formulaDetailsMasterModelImpl._startDate;

        formulaDetailsMasterModelImpl._originalFormulaId = formulaDetailsMasterModelImpl._formulaId;

        formulaDetailsMasterModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<FormulaDetailsMaster> toCacheModel() {
        FormulaDetailsMasterCacheModel formulaDetailsMasterCacheModel = new FormulaDetailsMasterCacheModel();

        formulaDetailsMasterCacheModel.companyId = getCompanyId();

        String companyId = formulaDetailsMasterCacheModel.companyId;

        if ((companyId != null) && (companyId.length() == 0)) {
            formulaDetailsMasterCacheModel.companyId = null;
        }

        formulaDetailsMasterCacheModel.contractPrice1 = getContractPrice1();

        formulaDetailsMasterCacheModel.contractPrice2 = getContractPrice2();

        Date endDate = getEndDate();

        if (endDate != null) {
            formulaDetailsMasterCacheModel.endDate = endDate.getTime();
        } else {
            formulaDetailsMasterCacheModel.endDate = Long.MIN_VALUE;
        }

        formulaDetailsMasterCacheModel.formulaNo = getFormulaNo();

        String formulaNo = formulaDetailsMasterCacheModel.formulaNo;

        if ((formulaNo != null) && (formulaNo.length() == 0)) {
            formulaDetailsMasterCacheModel.formulaNo = null;
        }

        formulaDetailsMasterCacheModel.formulaDetailsMasterSid = getFormulaDetailsMasterSid();

        formulaDetailsMasterCacheModel.itemId = getItemId();

        String itemId = formulaDetailsMasterCacheModel.itemId;

        if ((itemId != null) && (itemId.length() == 0)) {
            formulaDetailsMasterCacheModel.itemId = null;
        }

        formulaDetailsMasterCacheModel.rebatePercent1 = getRebatePercent1();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            formulaDetailsMasterCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            formulaDetailsMasterCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        formulaDetailsMasterCacheModel.formulaDesc = getFormulaDesc();

        String formulaDesc = formulaDetailsMasterCacheModel.formulaDesc;

        if ((formulaDesc != null) && (formulaDesc.length() == 0)) {
            formulaDetailsMasterCacheModel.formulaDesc = null;
        }

        formulaDetailsMasterCacheModel.rebatePercent2 = getRebatePercent2();

        formulaDetailsMasterCacheModel.rebatePercent3 = getRebatePercent3();

        formulaDetailsMasterCacheModel.recordLockStatus = getRecordLockStatus();

        Date startDate = getStartDate();

        if (startDate != null) {
            formulaDetailsMasterCacheModel.startDate = startDate.getTime();
        } else {
            formulaDetailsMasterCacheModel.startDate = Long.MIN_VALUE;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            formulaDetailsMasterCacheModel.createdDate = createdDate.getTime();
        } else {
            formulaDetailsMasterCacheModel.createdDate = Long.MIN_VALUE;
        }

        formulaDetailsMasterCacheModel.createdBy = getCreatedBy();

        formulaDetailsMasterCacheModel.source = getSource();

        String source = formulaDetailsMasterCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            formulaDetailsMasterCacheModel.source = null;
        }

        formulaDetailsMasterCacheModel.batchId = getBatchId();

        String batchId = formulaDetailsMasterCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            formulaDetailsMasterCacheModel.batchId = null;
        }

        formulaDetailsMasterCacheModel.contractPrice3 = getContractPrice3();

        formulaDetailsMasterCacheModel.modifiedBy = getModifiedBy();

        formulaDetailsMasterCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = formulaDetailsMasterCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            formulaDetailsMasterCacheModel.inboundStatus = null;
        }

        formulaDetailsMasterCacheModel.formulaId = getFormulaId();

        String formulaId = formulaDetailsMasterCacheModel.formulaId;

        if ((formulaId != null) && (formulaId.length() == 0)) {
            formulaDetailsMasterCacheModel.formulaId = null;
        }

        return formulaDetailsMasterCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(45);

        sb.append("{companyId=");
        sb.append(getCompanyId());
        sb.append(", contractPrice1=");
        sb.append(getContractPrice1());
        sb.append(", contractPrice2=");
        sb.append(getContractPrice2());
        sb.append(", endDate=");
        sb.append(getEndDate());
        sb.append(", formulaNo=");
        sb.append(getFormulaNo());
        sb.append(", formulaDetailsMasterSid=");
        sb.append(getFormulaDetailsMasterSid());
        sb.append(", itemId=");
        sb.append(getItemId());
        sb.append(", rebatePercent1=");
        sb.append(getRebatePercent1());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", formulaDesc=");
        sb.append(getFormulaDesc());
        sb.append(", rebatePercent2=");
        sb.append(getRebatePercent2());
        sb.append(", rebatePercent3=");
        sb.append(getRebatePercent3());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", startDate=");
        sb.append(getStartDate());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", contractPrice3=");
        sb.append(getContractPrice3());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", formulaId=");
        sb.append(getFormulaId());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(70);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.FormulaDetailsMaster");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>companyId</column-name><column-value><![CDATA[");
        sb.append(getCompanyId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractPrice1</column-name><column-value><![CDATA[");
        sb.append(getContractPrice1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractPrice2</column-name><column-value><![CDATA[");
        sb.append(getContractPrice2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>endDate</column-name><column-value><![CDATA[");
        sb.append(getEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaNo</column-name><column-value><![CDATA[");
        sb.append(getFormulaNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaDetailsMasterSid</column-name><column-value><![CDATA[");
        sb.append(getFormulaDetailsMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemId</column-name><column-value><![CDATA[");
        sb.append(getItemId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePercent1</column-name><column-value><![CDATA[");
        sb.append(getRebatePercent1());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaDesc</column-name><column-value><![CDATA[");
        sb.append(getFormulaDesc());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePercent2</column-name><column-value><![CDATA[");
        sb.append(getRebatePercent2());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>rebatePercent3</column-name><column-value><![CDATA[");
        sb.append(getRebatePercent3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>startDate</column-name><column-value><![CDATA[");
        sb.append(getStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractPrice3</column-name><column-value><![CDATA[");
        sb.append(getContractPrice3());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>formulaId</column-name><column-value><![CDATA[");
        sb.append(getFormulaId());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
