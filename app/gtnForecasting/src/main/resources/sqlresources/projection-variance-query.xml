<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<sql>
<entity id="projection-variance-select-periods">
<query> <![CDATA[
        
            SELECT C0.YEARS, C0.PERIODS,
        
    ]]> </query>
</entity>
<entity id="gov-projection-variance-select-columns-query">
<query> <![CDATA[
        
            @PROJ_NUM.CONTRACT_PROJECTION_SALES AS @PROJ_NUMCONTRACT_PROJECTION_SALES, 
            @PROJ_NUM.CONTRACT_PROJECTION_UNITS AS @PROJ_NUMCONTRACT_PROJECTION_UNITS, 
            @PROJ_NUM.TOTAL_PROJECTION_RATE AS @PROJ_NUMTOTAL_PROJECTION_RATE, 
            @PROJ_NUM.TOTAL_PROJECTION_DOLAR AS @PROJ_NUMTOTAL_PROJECTION_DOLAR, 
            @PROJ_NUM.NET_PROJECTION_SALES AS @PROJ_NUMNET_PROJECTION_SALES, 
            @PROJ_NUM.MANDATED_PROJECTED_SALES AS @PROJ_NUMMANDATED_PROJECTED_SALES, 
            @PROJ_NUM.MANDATED_PROJECTED_RATE AS @PROJ_NUMMANDATED_PROJECTED_RATE, 
            @PROJ_NUM.SUPPLEMENTAL_PROJECTED_SALES AS @PROJ_NUMSUPPLEMENTAL_PROJECTED_SALES, 
            @PROJ_NUM.SUPPLEMENTAL_PROJECTED_RATE AS @PROJ_NUMSUPPLEMENTAL_PROJECTED_RATE,
            @PROJ_NUM.RPU AS @PROJ_NUMRPU,
            @PROJ_NUM.MANDATED_RPU AS @PROJ_NUMMRPU,
            @PROJ_NUM.SUPP_RPU AS @PROJ_NUMSRPU,
            @PROJ_NUM.COGS_PROJECTED AS @PROJ_NUMCOGC, 
            @PROJ_NUM.NET_PROFIT_PROJECTED AS @PROJ_NUMNET_PROFIT

        
    ]]> </query>
</entity>
<entity id="gov-current-projection-query">
<query> <![CDATA[
        
                (SELECT 
                D.YEARS as YEARS, 
                D.PERIODS AS PERIODS,
                D.PROJECTION_SALES  AS CONTRACT_PROJECTION_SALES,
                D.PROJECTION_UNITS AS CONTRACT_PROJECTION_UNITS,	
                COALESCE(( ( Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) ) + Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) ) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS TOTAL_PROJECTION_RATE,
                (Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) ) + Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) AS TOTAL_PROJECTION_DOLAR,
                (Isnull(D.PROJECTION_SALES, 0) - Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) - Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)) AS NET_PROJECTION_SALES,
                Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0)  AS MANDATED_PROJECTED_SALES,
                COALESCE(Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS MANDATED_PROJECTED_RATE,
                Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)  AS SUPPLEMENTAL_PROJECTED_SALES,
                COALESCE(Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS SUPPLEMENTAL_PROJECTED_RATE,
                (CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE ((((Isnull(D.MANDATED_RPU, 0)) /D.PROJECTION_UNITS) * 100 )) + ((((Isnull(D.SUPP_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) )  END) AS RPU,                
                CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE (((Isnull(D.MANDATED_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) END  AS MANDATED_RPU,
                CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE (((Isnull(D.SUPP_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) END  AS SUPP_RPU,
                COGS_PROJECTED = ISNULL(D.COGS_PROJECTED, 0),
                NET_PROFIT_PROJECTED = ((Isnull(D.PROJECTION_SALES, 0) - Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) - Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)) - ISNULL(D.COGS_PROJECTED, 0))

                FROM  (
            SELECT  YEARS
                   , PERIODS
                   , SUM(A.MANDATED_DISCOUNT_AMOUNT) AS MANDATED_DISCOUNT_AMOUNT
                   , SUM(A.SUPP_DISCOUNT_AMOUNT) AS SUPP_DISCOUNT_AMOUNT
                   , SUM(A.PROJECTION_SALES) AS PROJECTION_SALES
                   , SUM(A.PROJECTION_UNITS) AS PROJECTION_UNITS
                   , SUM(A.MANDATED_RPU) AS MANDATED_RPU
                   , SUM(A.SUPP_RPU) AS SUPP_RPU
                   ,SUM(COGS_PROJECTED)AS COGS_PROJECTED
       FROM     


                (SELECT
                    E."YEAR" AS YEARS, 
                    E.@FREQUENCY AS PERIODS,
                    C.PROJECTION_SALES AS MANDATED_DISCOUNT_AMOUNT,
                    B.PROJECTION_SALES AS SUPP_DISCOUNT_AMOUNT,
                    A.PROJECTION_SALES AS PROJECTION_SALES,
                    A.PROJECTION_UNITS AS PROJECTION_UNITS,
                    C.PROJECTION_RPU AS MANDATED_RPU,
                    B.PROJECTION_RPU AS SUPP_RPU,
                    COGS_PROJECTED = (ISNULL(A.PROJECTION_UNITS, 0) * ISNULL(U.ITEM_PRICE, 0))

                FROM 
                        
                        #SELECTED_HIERARCHY_NO CCP
                JOIN 
                        ST_M_SALES_PROJECTION A ON A.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID 
                JOIN CCP_DETAILS CC
                           ON CC.CCP_DETAILS_SID=A.CCP_DETAILS_SID
                LEFT JOIN 
                        ST_M_SUPPLEMENTAL_DISC_PROJ B ON B.CCP_DETAILS_SID = CCP.CCP_DETAILS_SID  AND A.PERIOD_SID = B.PERIOD_SID
                LEFT JOIN 
                        ST_M_DISCOUNT_PROJECTION C ON C.CCP_DETAILS_SID = A.CCP_DETAILS_SID  AND A.PERIOD_SID = C.PERIOD_SID
                LEFT JOIN [DBO].[UDF_ITEM_PRICING](@ITEMID, 'COGS', @START_PERIOD_SID, @END_PERIOD_SID, 'UN') U
                          ON CC.ITEM_MASTER_SID = U.ITEM_MASTER_SID
                                 AND A.PERIOD_SID = U.PERIOD_SID
                JOIN 
                        PERIOD E ON E.PERIOD_SID = A.PERIOD_SID 
                WHERE 
                        PERIOD_DATE BETWEEN CONVERT(DATE,'@START_DATE') AND CONVERT(DATE,'@END_DATE') 
                        )A
                GROUP BY 
                        YEARS
                        ,PERIODS) D 
                        )C0
        
    ]]> </query>
</entity>
<entity id="gov-prior-projection-query">
<query> <![CDATA[
        
            (SELECT 
            D.YEARS as YEARS, 
            D.PERIODS AS PERIODS,
            D.PROJECTION_SALES  AS CONTRACT_PROJECTION_SALES,
            D.PROJECTION_UNITS AS CONTRACT_PROJECTION_UNITS,	
            COALESCE(( ( Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) ) + Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) ) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS TOTAL_PROJECTION_RATE,
            (Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) ) + Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) AS TOTAL_PROJECTION_DOLAR,
            (Isnull(D.PROJECTION_SALES, 0) - Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) - Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)) AS NET_PROJECTION_SALES,
            Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0)  AS MANDATED_PROJECTED_SALES,
            COALESCE(Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS MANDATED_PROJECTED_RATE,
            Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)  AS SUPPLEMENTAL_PROJECTED_SALES,
            COALESCE(Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS SUPPLEMENTAL_PROJECTED_RATE,
            (CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE ((((Isnull(D.MANDATED_RPU, 0)) /D.PROJECTION_UNITS) * 100 )) + ((((Isnull(D.SUPP_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) )  END) AS RPU,
            CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE (((Isnull(D.MANDATED_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) END  AS MANDATED_RPU,
            CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE (((Isnull(D.SUPP_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) END  AS SUPP_RPU,
            COGS_PROJECTED = ISNULL(D.COGS_PROJECTED, 0) ,
            NET_PROFIT_PROJECTED = ((Isnull(D.PROJECTION_SALES, 0) - Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) - Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)) - ISNULL(D.COGS_PROJECTED, 0))
            FROM  
            (
            SELECT  YEARS
                   , PERIODS
                   , SUM(A.MANDATED_DISCOUNT_AMOUNT) AS MANDATED_DISCOUNT_AMOUNT
                   , SUM(A.SUPP_DISCOUNT_AMOUNT) AS SUPP_DISCOUNT_AMOUNT
                   , SUM(A.PROJECTION_SALES) AS PROJECTION_SALES
                   , SUM(A.PROJECTION_UNITS) AS PROJECTION_UNITS
                   , SUM(A.MANDATED_RPU) AS MANDATED_RPU
                   , SUM(A.SUPP_RPU) AS SUPP_RPU
                   ,SUM(COGS_PROJECTED)AS COGS_PROJECTED
       FROM     

            (SELECT
                    E."YEAR" AS YEARS, 
                    E.@FREQUENCY AS PERIODS,
                    C.PROJECTION_SALES AS MANDATED_DISCOUNT_AMOUNT,
                    B.PROJECTION_SALES AS SUPP_DISCOUNT_AMOUNT,
                    A.PROJECTION_SALES AS PROJECTION_SALES,
                    A.PROJECTION_UNITS AS PROJECTION_UNITS,
                    C.PROJECTION_RPU AS MANDATED_RPU,
                    B.PROJECTION_RPU AS SUPP_RPU,
                    COGS_PROJECTED = (ISNULL(A.PROJECTION_UNITS, 0) * ISNULL(U.ITEM_PRICE, 0))

           FROM 
                    PROJECTION_DETAILS PD
                JOIN 
                    #SELECTED_HIERARCHY_NO CCP ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID AND PD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
            JOIN 
                    M_SALES_PROJECTION A ON A.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                JOIN CCP_DETAILS CC
                           ON CC.CCP_DETAILS_SID=PD.CCP_DETAILS_SID
                LEFT JOIN 
                    M_SUPPLEMENTAL_DISC_PROJ B ON B.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID AND A.PERIOD_SID = B.PERIOD_SID
                LEFT JOIN 
                    M_DISCOUNT_PROJECTION C ON C.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID AND C.SAVE_FLAG = 1 AND A.PERIOD_SID = C.PERIOD_SID
                LEFT JOIN [DBO].[UDF_ITEM_PRICING](@ITEMID, 'COGS', @START_PERIOD_SID, @END_PERIOD_SID, 'UN') U
                          ON CC.ITEM_MASTER_SID = U.ITEM_MASTER_SID
                                 AND A.PERIOD_SID = U.PERIOD_SID
                JOIN 
                        PERIOD E ON E.PERIOD_SID = A.PERIOD_SID 
                WHERE 
                        PERIOD_DATE BETWEEN CONVERT(DATE,'@START_DATE') AND CONVERT(DATE,'@END_DATE') 
                        )A
                GROUP BY 
                        YEARS
                        ,PERIODS) D 
                    ) 

        
    ]]> </query>
</entity>
<entity id="gov-current-projection-query-for-view">
<query> <![CDATA[
        
                (SELECT 
                D.YEARS as YEARS, 
                D.PERIODS AS PERIODS,
                D.PROJECTION_SALES  AS CONTRACT_PROJECTION_SALES,
                D.PROJECTION_UNITS AS CONTRACT_PROJECTION_UNITS,	
                COALESCE(( ( Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) ) + Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) ) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS TOTAL_PROJECTION_RATE,
                (Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) ) + Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) AS TOTAL_PROJECTION_DOLAR,
                (Isnull(D.PROJECTION_SALES, 0) - Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) - Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)) AS NET_PROJECTION_SALES,
                Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0)  AS MANDATED_PROJECTED_SALES,
                COALESCE(Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS MANDATED_PROJECTED_RATE,
                Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)  AS SUPPLEMENTAL_PROJECTED_SALES,
                COALESCE(Isnull(D.SUPP_DISCOUNT_AMOUNT, 0) / NULLIF(D.PROJECTION_SALES, 0), 0)*100 AS SUPPLEMENTAL_PROJECTED_RATE,
                (CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE ((((Isnull(D.MANDATED_RPU, 0)) /D.PROJECTION_UNITS) * 100 )) + ((((Isnull(D.SUPP_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) )  END) AS RPU,                
                CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE (((Isnull(D.MANDATED_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) END  AS MANDATED_RPU,
                CASE WHEN D.PROJECTION_UNITS = 0 THEN 0 ELSE (((Isnull(D.SUPP_RPU, 0)) /D.PROJECTION_UNITS) * 100 ) END  AS SUPP_RPU,
                COGS_PROJECTED = ISNULL(D.COGS_PROJECTED, 0),
                NET_PROFIT_PROJECTED = ((Isnull(D.PROJECTION_SALES, 0) - Isnull(D.MANDATED_DISCOUNT_AMOUNT, 0) - Isnull(D.SUPP_DISCOUNT_AMOUNT, 0)) - ISNULL(D.COGS_PROJECTED, 0))
    
                FROM  (
            SELECT  YEARS
                   , PERIODS
                   , SUM(A.MANDATED_DISCOUNT_AMOUNT) AS MANDATED_DISCOUNT_AMOUNT
                   , SUM(A.SUPP_DISCOUNT_AMOUNT) AS SUPP_DISCOUNT_AMOUNT
                   , SUM(A.PROJECTION_SALES) AS PROJECTION_SALES
                   , SUM(A.PROJECTION_UNITS) AS PROJECTION_UNITS
                   , SUM(A.MANDATED_RPU) AS MANDATED_RPU
                   , SUM(A.SUPP_RPU) AS SUPP_RPU
                   ,SUM(COGS_PROJECTED)AS COGS_PROJECTED
       FROM     


                (SELECT
                    E."YEAR" AS YEARS, 
                    E.@FREQUENCY AS PERIODS,
                    C.PROJECTION_SALES AS MANDATED_DISCOUNT_AMOUNT,
                    B.PROJECTION_SALES AS SUPP_DISCOUNT_AMOUNT,
                    A.PROJECTION_SALES AS PROJECTION_SALES,
                    A.PROJECTION_UNITS AS PROJECTION_UNITS,
                    C.PROJECTION_RPU AS MANDATED_RPU,
                    B.PROJECTION_RPU AS SUPP_RPU,
                    COGS_PROJECTED = (ISNULL(A.PROJECTION_UNITS, 0) * ISNULL(U.ITEM_PRICE, 0))

                FROM 
                        PROJECTION_DETAILS PD
                JOIN 
                        @CCP CCP ON CCP.CCP_DETAILS_SID = PD.CCP_DETAILS_SID AND PD.PROJECTION_MASTER_SID = @PROJECTION_MASTER_SID
                JOIN 
                        M_SALES_PROJECTION A ON A.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID 
                JOIN CCP_DETAILS CC
                           ON CC.CCP_DETAILS_SID=PD.CCP_DETAILS_SID
                LEFT JOIN 
                        M_SUPPLEMENTAL_DISC_PROJ B ON B.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID AND A.PERIOD_SID = B.PERIOD_SID
                LEFT JOIN 
                        M_DISCOUNT_PROJECTION C ON C.PROJECTION_DETAILS_SID = PD.PROJECTION_DETAILS_SID AND C.USER_ID = @USER_ID AND C.SESSION_ID = @SESSION_ID AND A.PERIOD_SID = C.PERIOD_SID
                LEFT JOIN [DBO].[UDF_ITEM_PRICING](@ITEMID, 'COGS', @START_PERIOD_SID, @END_PERIOD_SID, 'UN') U
                          ON CC.ITEM_MASTER_SID = U.ITEM_MASTER_SID
                                 AND A.PERIOD_SID = U.PERIOD_SID
                JOIN 
                        PERIOD E ON E.PERIOD_SID = A.PERIOD_SID 
                WHERE 
                        PERIOD_DATE BETWEEN CONVERT(DATE,'@START_DATE') AND CONVERT(DATE,'@END_DATE') 
                        )A
                GROUP BY 
                        YEARS
                        ,PERIODS) D 
                        )C0
        
    ]]> </query>
</entity>
</sql>
