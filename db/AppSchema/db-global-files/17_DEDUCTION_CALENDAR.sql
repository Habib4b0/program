IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'DEDUCTION_CALENDAR_MASTER'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[DEDUCTION_CALENDAR_MASTER]
        (
           [DEDUCTION_CALENDAR_MASTER_SID] [INT] IDENTITY(1, 1) NOT NULL,
           [DEDUCTION_CALENDAR_NO]         [VARCHAR](50) NULL,
           [DEDUCTION_CALENDAR_NAME]       [VARCHAR](100) NULL,
           [DEDUCTION_CALENDAR_DESC]       [VARCHAR](250) NULL,
           [CATEGORY]                      [INT] NULL,
           [USER_ID]                       [INT] NULL,
           [ADDITIONAL_NOTES]              [VARCHAR](MAX) NULL,
           [INBOUND_STATUS]                [CHAR](1) NOT NULL,
           [CREATED_BY]                    [INT] NOT NULL,
           [CREATED_DATE]                  [DATETIME] NOT NULL,
           [MODIFIED_BY]                   [INT] NOT NULL,
           [MODIFIED_DATE]                 [DATETIME] NOT NULL
        )
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
               WHERE  CONSTRAINT_NAME = 'PK_DEDUCTION_CALENDAR_MASTER_DEDUCTION_CALENDAR_MASTER_SID'
                      AND TABLE_NAME = 'DEDUCTION_CALENDAR_MASTER')
  BEGIN
      ALTER TABLE [DBO].DEDUCTION_CALENDAR_MASTER
        ADD CONSTRAINT PK_DEDUCTION_CALENDAR_MASTER_DEDUCTION_CALENDAR_MASTER_SID PRIMARY KEY (DEDUCTION_CALENDAR_MASTER_SID)
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.DEDUCTION_CALENDAR_MASTER')
                      AND NAME = 'DF_DEDUCTION_CALENDAR_MASTER_CREATED_BY')
  BEGIN
      ALTER TABLE [DBO].[DEDUCTION_CALENDAR_MASTER]
        ADD CONSTRAINT [DF_DEDUCTION_CALENDAR_MASTER_CREATED_BY] DEFAULT (1) FOR CREATED_BY
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.DEDUCTION_CALENDAR_MASTER')
                      AND NAME = 'DF_DEDUCTION_CALENDAR_MASTER_CREATED_DATE')
  BEGIN
      ALTER TABLE [DBO].[DEDUCTION_CALENDAR_MASTER]
        ADD CONSTRAINT [DF_DEDUCTION_CALENDAR_MASTER_CREATED_DATE] DEFAULT (GETDATE()) FOR CREATED_DATE
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.DEDUCTION_CALENDAR_MASTER')
                      AND NAME = 'DF_DEDUCTION_CALENDAR_MASTER_MODIFIED_BY')
  BEGIN
      ALTER TABLE [DBO].[DEDUCTION_CALENDAR_MASTER]
        ADD CONSTRAINT [DF_DEDUCTION_CALENDAR_MASTER_MODIFIED_BY] DEFAULT (1) FOR MODIFIED_BY
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.DEDUCTION_CALENDAR_MASTER')
                      AND NAME = 'DF_DEDUCTION_CALENDAR_MASTER_MODIFIED_DATE')
  BEGIN
      ALTER TABLE [DBO].[DEDUCTION_CALENDAR_MASTER]
        ADD CONSTRAINT [DF_DEDUCTION_CALENDAR_MASTER_MODIFIED_DATE] DEFAULT (GETDATE()) FOR MODIFIED_DATE
  END

GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'DEDUCTION_CALENDAR_MASTER'--TABLE NAME
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME)
                       + '.' + QUOTENAME(@TABLENAME) + '.'
                       + QUOTENAME(@STATSNAME)

            --PRINT @SQL
            EXEC SP_EXECUTESQL
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME)
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID))
         + '.' + QUOTENAME(T.NAME) + ' ('
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC SP_EXECUTESQL
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'HIST_DEDUCTION_CALENDAR_MASTER'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].HIST_DEDUCTION_CALENDAR_MASTER
        (
           [DEDUCTION_CALENDAR_MASTER_SID] [INT] NOT NULL,
           [DEDUCTION_CALENDAR_NO]         [VARCHAR](50) NULL,
           [DEDUCTION_CALENDAR_NAME]       [VARCHAR](100) NULL,
           [DEDUCTION_CALENDAR_DESC]       [VARCHAR](250) NULL,
           [CATEGORY]                      [INT] NULL,
           [USER_ID]                       [INT] NULL,
           [ADDITIONAL_NOTES]              [VARCHAR](MAX) NULL,
           [INBOUND_STATUS]                [CHAR](1) NOT NULL,
           [CREATED_BY]                    [INT] NOT NULL,
           [CREATED_DATE]                  [DATETIME] NOT NULL,
           [MODIFIED_BY]                   [INT] NOT NULL,
           [MODIFIED_DATE]                 [DATETIME] NOT NULL,
           ACTION_DATE                     DATETIME NOT NULL,
           ACTION_FLAG                     CHAR(1) NOT NULL
        )
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.HIST_DEDUCTION_CALENDAR_MASTER')
                      AND NAME = 'DF_HIST_DEDUCTION_CALENDAR_MASTER_ACTION_DATE')
  BEGIN
      ALTER TABLE [DBO].[HIST_DEDUCTION_CALENDAR_MASTER]
        ADD CONSTRAINT [DF_HIST_DEDUCTION_CALENDAR_MASTER_ACTION_DATE] DEFAULT (GETDATE()) FOR ACTION_DATE
  END

GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_DEDUCTION_CALENDAR_MASTER'--TABLE NAME
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME)
                       + '.' + QUOTENAME(@TABLENAME) + '.'
                       + QUOTENAME(@STATSNAME)

            --PRINT @SQL
            EXEC SP_EXECUTESQL
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME)
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID))
         + '.' + QUOTENAME(T.NAME) + ' ('
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC SP_EXECUTESQL
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_DEDUCTION_CALENDAR_MASTER_UPD')
  BEGIN
      DROP TRIGGER DBO.TRG_DEDUCTION_CALENDAR_MASTER_UPD
  END

GO

CREATE TRIGGER [DBO].[TRG_DEDUCTION_CALENDAR_MASTER_UPD]
ON [DBO].[DEDUCTION_CALENDAR_MASTER]
AFTER UPDATE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS (SELECT *
                 FROM   INSERTED)
         AND EXISTS (SELECT *
                     FROM   DELETED)
        INSERT INTO HIST_DEDUCTION_CALENDAR_MASTER
                    (DEDUCTION_CALENDAR_MASTER_SID,
                     DEDUCTION_CALENDAR_NO,
                     DEDUCTION_CALENDAR_NAME,
                     DEDUCTION_CALENDAR_DESC,
                     CATEGORY,
                     USER_ID,
                     ADDITIONAL_NOTES,
                     INBOUND_STATUS,
                     CREATED_BY,
                     CREATED_DATE,
                     MODIFIED_BY,
                     MODIFIED_DATE,
                     ACTION_FLAG)
        SELECT DEDUCTION_CALENDAR_MASTER_SID,
               DEDUCTION_CALENDAR_NO,
               DEDUCTION_CALENDAR_NAME,
               DEDUCTION_CALENDAR_DESC,
               CATEGORY,
               USER_ID,
               ADDITIONAL_NOTES,
               INBOUND_STATUS,
               CREATED_BY,
               CREATED_DATE,
               MODIFIED_BY,
               MODIFIED_DATE,
               'C'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_DEDUCTION_CALENDAR_MASTER_INS')
  BEGIN
      DROP TRIGGER DBO.TRG_DEDUCTION_CALENDAR_MASTER_INS
  END

GO

CREATE TRIGGER [DBO].[TRG_DEDUCTION_CALENDAR_MASTER_INS]
ON [DBO].[DEDUCTION_CALENDAR_MASTER]
AFTER INSERT
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   INSERTED)
        INSERT INTO HIST_DEDUCTION_CALENDAR_MASTER
                    (DEDUCTION_CALENDAR_MASTER_SID,
                     DEDUCTION_CALENDAR_NO,
                     DEDUCTION_CALENDAR_NAME,
                     DEDUCTION_CALENDAR_DESC,
                     CATEGORY,
                     USER_ID,
                     ADDITIONAL_NOTES,
                     INBOUND_STATUS,
                     CREATED_BY,
                     CREATED_DATE,
                     MODIFIED_BY,
                     MODIFIED_DATE,
                     ACTION_FLAG)
        SELECT DEDUCTION_CALENDAR_MASTER_SID,
               DEDUCTION_CALENDAR_NO,
               DEDUCTION_CALENDAR_NAME,
               DEDUCTION_CALENDAR_DESC,
               CATEGORY,
               USER_ID,
               ADDITIONAL_NOTES,
               INBOUND_STATUS,
               CREATED_BY,
               CREATED_DATE,
               MODIFIED_BY,
               MODIFIED_DATE,
               'A'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_DEDUCTION_CALENDAR_MASTER_DEL')
  BEGIN
      DROP TRIGGER DBO.TRG_DEDUCTION_CALENDAR_MASTER_DEL
  END

GO

CREATE TRIGGER [DBO].[TRG_DEDUCTION_CALENDAR_MASTER_DEL]
ON [DBO].[DEDUCTION_CALENDAR_MASTER]
AFTER DELETE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   DELETED)
        INSERT INTO HIST_DEDUCTION_CALENDAR_MASTER
                    (DEDUCTION_CALENDAR_MASTER_SID,
                     DEDUCTION_CALENDAR_NO,
                     DEDUCTION_CALENDAR_NAME,
                     DEDUCTION_CALENDAR_DESC,
                     CATEGORY,
                     USER_ID,
                     ADDITIONAL_NOTES,
                     INBOUND_STATUS,
                     CREATED_BY,
                     CREATED_DATE,
                     MODIFIED_BY,
                     MODIFIED_DATE,
                     ACTION_FLAG)
        SELECT DEDUCTION_CALENDAR_MASTER_SID,
               DEDUCTION_CALENDAR_NO,
               DEDUCTION_CALENDAR_NAME,
               DEDUCTION_CALENDAR_DESC,
               CATEGORY,
               USER_ID,
               ADDITIONAL_NOTES,
               INBOUND_STATUS,
               CREATED_BY,
               CREATED_DATE,
               MODIFIED_BY,
               MODIFIED_DATE,
               'D'
        FROM   DELETED
  END

GO

------------------------------------------ST_SELECTION_TABLE


IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'ST_DEDUCTION_CALENDAR_ITEM'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[ST_DEDUCTION_CALENDAR_ITEM] (
		ITEM_MASTER_SID INT NOT NULL
		,USER_ID INT NOT NULL
		,SESSION_ID VARCHAR(100) NOT NULL
		)
END
GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'ST_DEDUCTION_CALENDAR_ITEM'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO
-------------PRIMARY KEYS--------------------
IF NOT EXISTS(SELECT 'X'
              FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
              WHERE  CONSTRAINT_NAME = 'PK_ST_DEDUCTION_CALENDAR_ITEM_ITEM_MASTER_SID_USER_ID_SESSION_ID'
                     AND TABLE_NAME = 'ST_DEDUCTION_CALENDAR_ITEM')
  ALTER TABLE ST_DEDUCTION_CALENDAR_ITEM
    ADD CONSTRAINT PK_ST_DEDUCTION_CALENDAR_ITEM_ITEM_MASTER_SID_USER_ID_SESSION_ID PRIMARY KEY(ITEM_MASTER_SID,USER_ID,SESSION_ID)
GO


---------------------------------------------DEDUCTION_CALENDAR_DETAILS
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'DEDUCTION_CALENDAR_DETAILS'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
    CREATE TABLE [DBO].[DEDUCTION_CALENDAR_DETAILS] (
		CP_DETAILS_SID INT NULL
		,YEAR INT NOT NULL
		,JAN_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,FEB_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,MAR_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,APR_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,MAY_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,JUN_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,JUL_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,AUG_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,SEP_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,OCT_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,NOV_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,DEC_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,CHECK_RECORD BIT NULL
     ,DEDUCTION_CALENDAR_MASTER_SID INT NOT NULL
		)
END
GO


DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'DEDUCTION_CALENDAR_DETAILS'--TABLE NAME
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME)
                       + '.' + QUOTENAME(@TABLENAME) + '.'
                       + QUOTENAME(@STATSNAME)

            --PRINT @SQL
            EXEC SP_EXECUTESQL
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME)
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID))
         + '.' + QUOTENAME(T.NAME) + ' ('
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC SP_EXECUTESQL
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'HIST_DEDUCTION_CALENDAR_DETAILS'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
    CREATE TABLE [DBO].[HIST_DEDUCTION_CALENDAR_DETAILS] (
		CP_DETAILS_SID INT NULL
		,YEAR INT NOT NULL
		,JAN_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,FEB_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,MAR_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,APR_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,MAY_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,JUN_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,JUL_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,AUG_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,SEP_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,OCT_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,NOV_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,DEC_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,CHECK_RECORD BIT NULL
    ,DEDUCTION_CALENDAR_MASTER_SID INT NOT NULL
    ,ACTION_DATE    DATETIME NOT NULL
    ,ACTION_FLAG    CHAR(1) NOT NULL
		)
END
GO


IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = OBJECT_ID('DBO.HIST_DEDUCTION_CALENDAR_DETAILS')
                      AND NAME = 'DF_HIST_DEDUCTION_CALENDAR_DETAILS_ACTION_DATE')
  BEGIN
      ALTER TABLE [DBO].[HIST_DEDUCTION_CALENDAR_DETAILS]
        ADD CONSTRAINT [DF_HIST_DEDUCTION_CALENDAR_DETAILS_ACTION_DATE] DEFAULT (GETDATE()) FOR ACTION_DATE
  END

GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_DEDUCTION_CALENDAR_DETAILS'--TABLE NAME
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME)
                       + '.' + QUOTENAME(@TABLENAME) + '.'
                       + QUOTENAME(@STATSNAME)

            --PRINT @SQL
            EXEC SP_EXECUTESQL
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME)
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID))
         + '.' + QUOTENAME(T.NAME) + ' ('
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC SP_EXECUTESQL
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_DEDUCTION_CALENDAR_DETAILS_UPD')
  BEGIN
      DROP TRIGGER DBO.TRG_DEDUCTION_CALENDAR_DETAILS_UPD
  END

GO

CREATE TRIGGER [DBO].[TRG_DEDUCTION_CALENDAR_DETAILS_UPD]
ON [DBO].[DEDUCTION_CALENDAR_DETAILS]
AFTER UPDATE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS (SELECT *
                 FROM   INSERTED)
         AND EXISTS (SELECT *
                     FROM   DELETED)
        INSERT INTO HIST_DEDUCTION_CALENDAR_DETAILS
    (CP_DETAILS_SID 
		,YEAR  
		,JAN_DISCOUNT_AMOUNT 
		,FEB_DISCOUNT_AMOUNT 
		,MAR_DISCOUNT_AMOUNT 
		,APR_DISCOUNT_AMOUNT 
		,MAY_DISCOUNT_AMOUNT 
		,JUN_DISCOUNT_AMOUNT 
		,JUL_DISCOUNT_AMOUNT 
		,AUG_DISCOUNT_AMOUNT 
		,SEP_DISCOUNT_AMOUNT 
		,OCT_DISCOUNT_AMOUNT 
		,NOV_DISCOUNT_AMOUNT 
		,DEC_DISCOUNT_AMOUNT 
		,CHECK_RECORD 
    ,DEDUCTION_CALENDAR_MASTER_SID 
    ,ACTION_FLAG    
          )
       SELECT CP_DETAILS_SID 
		,YEAR  
		,JAN_DISCOUNT_AMOUNT 
		,FEB_DISCOUNT_AMOUNT 
		,MAR_DISCOUNT_AMOUNT 
		,APR_DISCOUNT_AMOUNT 
		,MAY_DISCOUNT_AMOUNT 
		,JUN_DISCOUNT_AMOUNT 
		,JUL_DISCOUNT_AMOUNT 
		,AUG_DISCOUNT_AMOUNT 
		,SEP_DISCOUNT_AMOUNT 
		,OCT_DISCOUNT_AMOUNT 
		,NOV_DISCOUNT_AMOUNT 
		,DEC_DISCOUNT_AMOUNT 
		,CHECK_RECORD 
    ,DEDUCTION_CALENDAR_MASTER_SID,
               'C'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_DEDUCTION_CALENDAR_DETAILS_INS')
  BEGIN
      DROP TRIGGER DBO.TRG_DEDUCTION_CALENDAR_DETAILS_INS
  END

GO

CREATE TRIGGER [DBO].[TRG_DEDUCTION_CALENDAR_DETAILS_INS]
ON [DBO].[DEDUCTION_CALENDAR_DETAILS]
AFTER INSERT
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   INSERTED)
        INSERT INTO HIST_DEDUCTION_CALENDAR_DETAILS
                    (CP_DETAILS_SID 
		,YEAR  
		,JAN_DISCOUNT_AMOUNT 
		,FEB_DISCOUNT_AMOUNT 
		,MAR_DISCOUNT_AMOUNT 
		,APR_DISCOUNT_AMOUNT 
		,MAY_DISCOUNT_AMOUNT 
		,JUN_DISCOUNT_AMOUNT 
		,JUL_DISCOUNT_AMOUNT 
		,AUG_DISCOUNT_AMOUNT 
		,SEP_DISCOUNT_AMOUNT 
		,OCT_DISCOUNT_AMOUNT 
		,NOV_DISCOUNT_AMOUNT 
		,DEC_DISCOUNT_AMOUNT 
		,CHECK_RECORD 
    ,DEDUCTION_CALENDAR_MASTER_SID,
                     ACTION_FLAG)
        SELECT CP_DETAILS_SID 
		,YEAR  
		,JAN_DISCOUNT_AMOUNT 
		,FEB_DISCOUNT_AMOUNT 
		,MAR_DISCOUNT_AMOUNT 
		,APR_DISCOUNT_AMOUNT 
		,MAY_DISCOUNT_AMOUNT 
		,JUN_DISCOUNT_AMOUNT 
		,JUL_DISCOUNT_AMOUNT 
		,AUG_DISCOUNT_AMOUNT 
		,SEP_DISCOUNT_AMOUNT 
		,OCT_DISCOUNT_AMOUNT 
		,NOV_DISCOUNT_AMOUNT 
		,DEC_DISCOUNT_AMOUNT 
		,CHECK_RECORD 
    ,DEDUCTION_CALENDAR_MASTER_SID,
               'A'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [NAME] = N'TRG_DEDUCTION_CALENDAR_DETAILS_DEL')
  BEGIN
      DROP TRIGGER DBO.TRG_DEDUCTION_CALENDAR_DETAILS_DEL
  END

GO

CREATE TRIGGER [DBO].[TRG_DEDUCTION_CALENDAR_DETAILS_DEL]
ON [DBO].[DEDUCTION_CALENDAR_DETAILS]
AFTER DELETE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   DELETED)
        INSERT INTO HIST_DEDUCTION_CALENDAR_DETAILS
                    (CP_DETAILS_SID 
		,YEAR  
		,JAN_DISCOUNT_AMOUNT 
		,FEB_DISCOUNT_AMOUNT 
		,MAR_DISCOUNT_AMOUNT 
		,APR_DISCOUNT_AMOUNT 
		,MAY_DISCOUNT_AMOUNT 
		,JUN_DISCOUNT_AMOUNT 
		,JUL_DISCOUNT_AMOUNT 
		,AUG_DISCOUNT_AMOUNT 
		,SEP_DISCOUNT_AMOUNT 
		,OCT_DISCOUNT_AMOUNT 
		,NOV_DISCOUNT_AMOUNT 
		,DEC_DISCOUNT_AMOUNT 
		,CHECK_RECORD 
    ,DEDUCTION_CALENDAR_MASTER_SID,
                     ACTION_FLAG)
        SELECT CP_DETAILS_SID 
		,YEAR  
		,JAN_DISCOUNT_AMOUNT 
		,FEB_DISCOUNT_AMOUNT 
		,MAR_DISCOUNT_AMOUNT 
		,APR_DISCOUNT_AMOUNT 
		,MAY_DISCOUNT_AMOUNT 
		,JUN_DISCOUNT_AMOUNT 
		,JUL_DISCOUNT_AMOUNT 
		,AUG_DISCOUNT_AMOUNT 
		,SEP_DISCOUNT_AMOUNT 
		,OCT_DISCOUNT_AMOUNT 
		,NOV_DISCOUNT_AMOUNT 
		,DEC_DISCOUNT_AMOUNT 
		,CHECK_RECORD 
    ,DEDUCTION_CALENDAR_MASTER_SID ,
               'D'
        FROM   DELETED
  END

GO

--------------------------------------------ST_DEDUCTION_CALENDAR_DETAILS---------------------------------
-----------------------------------ST_DEDUCTION_CALENDAR_COMPANY-----------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'ST_DEDUCTION_CALENDAR_COMPANY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[ST_DEDUCTION_CALENDAR_COMPANY] (
		COMPANY_MASTER_SID INT NOT NULL
		,USER_ID INT NOT NULL
		,SESSION_ID VARCHAR(100) NOT NULL
		)
END
GO

--------------------------statistics---------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'ST_DEDUCTION_CALENDAR_COMPANY'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO
-------------PRIMARY KEYS--------------------
IF NOT EXISTS(SELECT 'X'
              FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
              WHERE  CONSTRAINT_NAME = 'PK_ST_DEDUCTION_CALENDAR_MASTER_COMPANY_MASTER_SID_USER_ID_SESSION_ID'
                     AND TABLE_NAME = 'ST_DEDUCTION_CALENDAR_COMPANY')
  ALTER TABLE ST_DEDUCTION_CALENDAR_COMPANY
    ADD CONSTRAINT PK_ST_DEDUCTION_CALENDAR_MASTER_COMPANY_MASTER_SID_USER_ID_SESSION_ID PRIMARY KEY(COMPANY_MASTER_SID,USER_ID,SESSION_ID)
GO


-------------------------------------------------ST_DEDUCTION_CALENDAR_DETAILS-----------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'ST_DEDUCTION_CALENDAR_DETAILS'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[ST_DEDUCTION_CALENDAR_DETAILS] (
		CP_DETAILS_SID INT NULL
		,YEAR INT NOT NULL
		,JAN_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,FEB_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,MAR_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,APR_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,MAY_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,JUN_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,JUL_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,AUG_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,SEP_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,OCT_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,NOV_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,DEC_DISCOUNT_AMOUNT NUMERIC(22, 6) NULL
		,CHECK_RECORD BIT NULL
		,USER_ID INT NOT NULL
		,SESSION_ID VARCHAR(100) NOT NULL
		)
END
GO

--------------------------statistics---------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'ST_DEDUCTION_CALENDAR_DETAILS'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO


---------------------------DEDUCTION_CALENDAR_COMPANY-------------------------------------


IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'DEDUCTION_CALENDAR_COMPANY'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[DEDUCTION_CALENDAR_COMPANY] (
		DEDUCTION_CALENDAR_MASTER_SID INT NOT NULL
		,COMPANY_MASTER_SID INT NOT NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		)
END
GO


--------------------------statistics---------------------------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'DEDUCTION_CALENDAR_COMPANY'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            --PRINT @SQL
            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

-------------PRIMARY KEYS--------------------
IF NOT EXISTS(SELECT 'X'
              FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
              WHERE  CONSTRAINT_NAME = 'PK_DEDUCTION_CALENDAR_COMPANY_DEDUCTION_CALENDAR_MASTER_SID_COMPANY_MASTER_SID'
                     AND TABLE_NAME = 'DEDUCTION_CALENDAR_COMPANY')
  ALTER TABLE DEDUCTION_CALENDAR_COMPANY
    ADD CONSTRAINT PK_DEDUCTION_CALENDAR_COMPANY_DEDUCTION_CALENDAR_MASTER_SID_COMPANY_MASTER_SID PRIMARY KEY(DEDUCTION_CALENDAR_MASTER_SID,COMPANY_MASTER_SID)
GO

-------DEDUCTION_CALENDAR_ITEM----------------------------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLES
		WHERE TABLE_NAME = 'DEDUCTION_CALENDAR_ITEM'
			AND TABLE_SCHEMA = 'DBO'
		)
BEGIN
	CREATE TABLE [DBO].[DEDUCTION_CALENDAR_ITEM] (
		DEDUCTION_CALENDAR_MASTER_SID INT NOT NULL
		,ITEM_MASTER_SID INT NOT NULL
		,INBOUND_STATUS CHAR(1) NOT NULL
		)
END
GO

-------------PRIMARY KEYS--------------------
IF NOT EXISTS (
		SELECT 'X'
		FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS
		WHERE CONSTRAINT_NAME = 'PK_DEDUCTION_CALENDAR_ITEM_DEDUCTION_CALENDAR_MASTER_SID_ITEM_MASTER_SID'
			AND TABLE_NAME = 'DEDUCTION_CALENDAR_ITEM'
		)
	ALTER TABLE DEDUCTION_CALENDAR_ITEM ADD CONSTRAINT PK_DEDUCTION_CALENDAR_ITEM_DEDUCTION_CALENDAR_MASTER_SID_ITEM_MASTER_SID PRIMARY KEY (
		DEDUCTION_CALENDAR_MASTER_SID
		,ITEM_MASTER_SID
		)
GO



DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'DEDUCTION_CALENDAR_ITEM'--TABLE NAME
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME)
                       + '.' + QUOTENAME(@TABLENAME) + '.'
                       + QUOTENAME(@STATSNAME)

            --PRINT @SQL
            EXEC SP_EXECUTESQL
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME)
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID))
         + '.' + QUOTENAME(T.NAME) + ' ('
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC SP_EXECUTESQL
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO


--------------------'CP_DETAILS'------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CP_DETAILS'
                      AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[CP_DETAILS]
        (
           CP_DETAILS_SID     INT IDENTITY(1, 1) NOT NULL,
           COMPANY_MASTER_SID INT NULL,
           ITEM_MASTER_SID    INT NULL,
           INBOUND_STATUS     CHAR(1) NULL
        )
  END

GO

-------------PRIMARY KEYS--------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  OBJECT_NAME(PARENT_OBJECT_ID) = 'CP_DETAILS'
                     AND SCHEMA_NAME(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CP_DETAILS_CP_DETAILS_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE [DBO].[CP_DETAILS]
        ADD CONSTRAINT PK_CP_DETAILS_CP_DETAILS_SID PRIMARY KEY ( CP_DETAILS_SID)
  END

GO

IF NOT EXISTS (SELECT NAME
               FROM   SYS.INDEXES
               WHERE  NAME = N'NIX_CP_DETAILS_COMPANY_MASTER_SID_ITEM_MASTER_SID')
  BEGIN
      CREATE NONCLUSTERED INDEX NIX_CP_DETAILS_COMPANY_MASTER_SID_ITEM_MASTER_SID
        ON CP_DETAILS (COMPANY_MASTER_SID, ITEM_MASTER_SID);
  END

  GO
-------------
DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CP_DETAILS'--TABLE NAME
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME
IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT OBJECT_NAME(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               SCHEMA_NAME(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND OBJECT_NAME(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + QUOTENAME(@SCHEMANAME)
                       + '.' + QUOTENAME(@TABLENAME) + '.'
                       + QUOTENAME(@STATSNAME)

            --PRINT @SQL
            EXEC SP_EXECUTESQL
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + QUOTENAME(C.NAME)
         + ' ON ' + QUOTENAME(SCHEMA_NAME(SCHEMA_ID))
         + '.' + QUOTENAME(T.NAME) + ' ('
         + QUOTENAME(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = SCHEMA_NAME(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND SCHEMA_NAME(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC SP_EXECUTESQL
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO 












