IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'CONTRACT_MASTER'
                      AND TABLE_SCHEMA = 'dbo')
  BEGIN
      CREATE TABLE CONTRACT_MASTER
        (
           CONTRACT_MASTER_SID          INT NOT NULL IDENTITY(1, 1),
           CONTRACT_ID                  VARCHAR(50) NOT NULL,
           CONTRACT_NO                  VARCHAR(50) NOT NULL,
           [CONTRACT_NAME]              VARCHAR(100) NULL,
           CONTRACT_TYPE                INT NULL,
           CONTRACT_STATUS              INT NOT NULL,
           [START_DATE]                 DATETIME NOT NULL,
           END_DATE                     DATETIME NULL,
           MANF_COMPANY_MASTER_SID      INT NULL,
           CONT_HOLD_COMPANY_MASTER_SID INT NULL,
           BUNIT_COMPANY_MASTER_SID     INT NULL,
           CONTRACT_TRADE_CLASS         INT NULL,
           ORGANIZATION_KEY             VARCHAR(50) NULL,
           DOCUMENT_TYPE                INT NULL,
           DOCUMENT_CLASS               INT NULL,
           TERM                         INT NULL,
           RENEGOTIATION_START_DATE     DATETIME NULL,
           RENEGOTIATION_END_DATE       DATETIME NULL,
           PRICEPROTECTION_START_DATE   DATETIME NULL,
           PRICEPROTECTION_END_DATE     DATETIME NULL,
           ADVANCE_NOTICE_DAYS          NUMERIC(22, 6) NULL,
           INSIDE_OWNER                 VARCHAR(50) NULL,
           INSIDE_PHONE                 VARCHAR(50) NULL,
           INSIDE_AUTHOR                VARCHAR(50) NULL,
           INSIDE_ADDITIONAL            VARCHAR(50) NULL,
           INSIDE_ADDITIONAL_NAME       VARCHAR(50) NULL,
           INSIDE_ADDITIONAL_PHONE      VARCHAR(50) NULL,
           OUTSIDE_OWNER                VARCHAR(50) NULL,
           OUTSIDE_PHONE                VARCHAR(50) NULL,
           OUTSIDE_AUTHOR               VARCHAR(50) NULL,
           OUTSIDE_ADDITIONAL           VARCHAR(50) NULL,
           OUTSIDE_ADDITIONAL_NAME      VARCHAR(50) NULL,
           OUTSIDE_ADDITIONAL_PHONE     VARCHAR(50) NULL,
           AFFILIATED_CONTRACT_INFO     VARCHAR(50) NULL,
           SHIPPING_TERMS               VARCHAR(50) NULL,
           INTERNAL_NOTES               VARCHAR(4000) NULL,
           PROPOSAL_START_DATE          DATETIME NULL,
           PROPOSAL_END_DATE            DATETIME NULL,
           ORIGINAL_START_DATE          DATETIME NULL,
           ORIGINAL_END_DATE            DATETIME NULL,
           AWARD_STATUS                 INT NULL,
           LAST_UPDATED_DATE            DATETIME NULL,
           PRICE_ESCALATION_CLAUSE      VARCHAR(50) NULL,
           EXEMPT_FROM_LOW_PRICE        VARCHAR(25) NULL,
           PRICE_RESET_INDICATOR        VARCHAR(20) NULL,
           CANCELLATION_CLAUSE          VARCHAR(50) NULL,
           MOST_FAVORED_NATION          VARCHAR(50) NULL,
           CATEGORY                     VARCHAR(50) NULL,
           CURRENCY                     VARCHAR(20) NULL,
           MINIMUM_ORDER                VARCHAR(50) NULL,
           PAYMENT_TERMS                INT NULL,
           PROCESS_STATUS               BIT NULL,
           INBOUND_STATUS               CHAR(1) NOT NULL,
           RECORD_LOCK_STATUS           BIT NOT NULL,
           BATCH_ID                     VARCHAR(50) NULL,
           [SOURCE]                     VARCHAR(50) NULL,
           [CREATED_BY]                 INT NOT NULL,
           [CREATED_DATE]               DATETIME NOT NULL,
           [MODIFIED_BY]                INT NOT NULL,
           [MODIFIED_DATE]              DATETIME NOT NULL
        )
  END

GO
--------------------------PRIMARY KEY CONSTRAINTS--------------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CONTRACT_MASTER_CONTRACT_MASTER_SID'
                     AND TYPE = 'PK')
  BEGIN
      ALTER TABLE CONTRACT_MASTER
        ADD CONSTRAINT PK_CONTRACT_MASTER_CONTRACT_MASTER_SID PRIMARY KEY(CONTRACT_MASTER_SID)
  END

GO

---------------------------------------column rename starts------------------------
IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='CONTRACT_MASTER' AND COLUMN_NAME='TRADE_CLASS')
BEGIN
exec sp_RENAME 'CONTRACT_MASTER.TRADE_CLASS','CONTRACT_TRADE_CLASS','COLUMN'
END

GO
---------------------------------------column rename ends--------------------------

-------------DEFAULT CONSTRAINTS---------------------
IF NOT EXISTS (SELECT *
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_MASTER_RECORD_LOCK_STATUS')
  BEGIN
      ALTER TABLE CONTRACT_MASTER
        ADD CONSTRAINT DF_CONTRACT_MASTER_RECORD_LOCK_STATUS DEFAULT (1) FOR RECORD_LOCK_STATUS
  END

IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_MASTER_CREATED_BY')
  BEGIN
      ALTER TABLE CONTRACT_MASTER
        ADD CONSTRAINT DF_CONTRACT_MASTER_CREATED_BY DEFAULT (1) FOR CREATED_BY
  END

IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_MASTER_CREATED_DATE')
  BEGIN
      ALTER TABLE CONTRACT_MASTER
        ADD CONSTRAINT DF_CONTRACT_MASTER_CREATED_DATE DEFAULT (Getdate()) FOR CREATED_DATE
  END

IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_MASTER_MODIFIED_BY')
  BEGIN
      ALTER TABLE CONTRACT_MASTER
        ADD CONSTRAINT DF_CONTRACT_MASTER_MODIFIED_BY DEFAULT (1) FOR MODIFIED_BY
  END

IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_MASTER_MODIFIED_DATE')
  BEGIN
      ALTER TABLE CONTRACT_MASTER
        ADD CONSTRAINT DF_CONTRACT_MASTER_MODIFIED_DATE DEFAULT (Getdate()) FOR MODIFIED_DATE
  END

----------------------------------------UNIQUE_CONSTRAINT-------------------------------------
IF EXISTS (SELECT NAME
           FROM   SYS.TABLES
           WHERE  NAME = 'CONTRACT_MASTER')
  BEGIN
      IF NOT EXISTS (SELECT 1
                     FROM   SYS.KEY_CONSTRAINTS
                     WHERE  TYPE_DESC = 'UNIQUE_CONSTRAINT'
                            AND PARENT_OBJECT_ID = Object_id('CONTRACT_MASTER')
                            AND NAME = 'UQ_CONTRACT_MASTER_CONTRACT_ID')
        BEGIN
            ALTER TABLE CONTRACT_MASTER
              ADD CONSTRAINT UQ_CONTRACT_MASTER_CONTRACT_ID UNIQUE(CONTRACT_ID)
        END
  END

GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CONTRACT_MASTER'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME
IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

--------------------------------------HIST_CONTRACT_MASTER------------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'HIST_CONTRACT_MASTER'
                      AND TABLE_SCHEMA = 'dbo')
  BEGIN
      CREATE TABLE HIST_CONTRACT_MASTER
        (
           CONTRACT_MASTER_SID          INT NOT NULL,
           CONTRACT_ID                  VARCHAR(50) NOT NULL,
           CONTRACT_NO                  VARCHAR(50) NOT NULL,
           [CONTRACT_NAME]              VARCHAR(100) NULL,
           CONTRACT_TYPE                INT NULL,
           CONTRACT_STATUS              INT NOT NULL,
           [START_DATE]                 DATETIME NOT NULL,
           END_DATE                     DATETIME NULL,
           MANF_COMPANY_MASTER_SID      INT NULL,
           CONT_HOLD_COMPANY_MASTER_SID INT NULL,
           BUNIT_COMPANY_MASTER_SID     INT NULL,
           CONTRACT_TRADE_CLASS         INT NULL,
           ORGANIZATION_KEY             VARCHAR(50) NULL,
           DOCUMENT_TYPE                INT NULL,
           DOCUMENT_CLASS               INT NULL,
           TERM                         INT NULL,
           RENEGOTIATION_START_DATE     DATETIME NULL,
           RENEGOTIATION_END_DATE       DATETIME NULL,
           PRICEPROTECTION_START_DATE   DATETIME NULL,
           PRICEPROTECTION_END_DATE     DATETIME NULL,
           ADVANCE_NOTICE_DAYS          NUMERIC(22, 6) NULL,
           INSIDE_OWNER                 VARCHAR(50) NULL,
           INSIDE_PHONE                 VARCHAR(50) NULL,
           INSIDE_AUTHOR                VARCHAR(50) NULL,
           INSIDE_ADDITIONAL            VARCHAR(50) NULL,
           INSIDE_ADDITIONAL_NAME       VARCHAR(50) NULL,
           INSIDE_ADDITIONAL_PHONE      VARCHAR(50) NULL,
           OUTSIDE_OWNER                VARCHAR(50) NULL,
           OUTSIDE_PHONE                VARCHAR(50) NULL,
           OUTSIDE_AUTHOR               VARCHAR(50) NULL,
           OUTSIDE_ADDITIONAL           VARCHAR(50) NULL,
           OUTSIDE_ADDITIONAL_NAME      VARCHAR(50) NULL,
           OUTSIDE_ADDITIONAL_PHONE     VARCHAR(50) NULL,
           AFFILIATED_CONTRACT_INFO     VARCHAR(50) NULL,
           SHIPPING_TERMS               VARCHAR(50) NULL,
           INTERNAL_NOTES               VARCHAR(4000) NULL,
           PROPOSAL_START_DATE          DATETIME NULL,
           PROPOSAL_END_DATE            DATETIME NULL,
           ORIGINAL_START_DATE          DATETIME NULL,
           ORIGINAL_END_DATE            DATETIME NULL,
           AWARD_STATUS                 INT NULL,
           LAST_UPDATED_DATE            DATETIME NULL,
           PRICE_ESCALATION_CLAUSE      VARCHAR(50) NULL,
           EXEMPT_FROM_LOW_PRICE        VARCHAR(25) NULL,
           PRICE_RESET_INDICATOR        VARCHAR(20) NULL,
           CANCELLATION_CLAUSE          VARCHAR(50) NULL,
           MOST_FAVORED_NATION          VARCHAR(50) NULL,
           CATEGORY                     VARCHAR(50) NULL,
           CURRENCY                     VARCHAR(20) NULL,
           MINIMUM_ORDER                VARCHAR(50) NULL,
           PAYMENT_TERMS                INT NULL,
           PROCESS_STATUS               BIT NULL,
           INBOUND_STATUS               CHAR(1) NOT NULL,
           RECORD_LOCK_STATUS           BIT NOT NULL,
           BATCH_ID                     VARCHAR(50) NULL,
           [SOURCE]                     VARCHAR(50) NULL,
           [CREATED_BY]                 INT NOT NULL,
           [CREATED_DATE]               DATETIME NOT NULL,
           [MODIFIED_BY]                INT NULL,
           [MODIFIED_DATE]              DATETIME NULL,
           ACTION_FLAG                  CHAR(1) NOT NULL,
           ACTION_DATE                  DATETIME NOT NULL
        )
  END

GO
--IF NOT EXISTS(SELECT 1
--			  FROM   SYS.KEY_CONSTRAINTS
--			  WHERE  OBJECT_NAME(PARENT_OBJECT_ID)='HIST_CONTRACT_MASTER'
--			  AND SCHEMA_NAME(SCHEMA_ID)='DBO'
--			  AND NAME='PK_HIST_CONTRACT_MASTER_CONTRACT_MASTER_SID_VERSION_NO'
--			  AND TYPE='PK')
--BEGIN
--  ALTER TABLE HIST_CONTRACT_MASTER
--    ADD CONSTRAINT PK_HIST_CONTRACT_MASTER_CONTRACT_MASTER_SID_VERSION_NO PRIMARY KEY(CONTRACT_MASTER_SID_VERSION_NO)
--END
--GO 

-------------ALTER COLUMN MODIFIED_BY--------------------
IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'HIST_CONTRACT_MASTER'
                  AND COLUMN_NAME = 'MODIFIED_BY'
                  AND IS_NULLABLE = 'NO')
  BEGIN
      ALTER TABLE CONTRACT_MASTER
        ALTER COLUMN MODIFIED_BY INT NULL
  END 

-------------ALTER COLUMN MODIFIED_DATE--------------------
IF EXISTS (SELECT 1
           FROM   INFORMATION_SCHEMA.COLUMNS
           WHERE  TABLE_NAME = 'HIST_CONTRACT_MASTER'
                  AND COLUMN_NAME = 'MODIFIED_DATE'
                  AND IS_NULLABLE = 'NO')
  BEGIN
      ALTER TABLE HIST_CONTRACT_MASTER
        ALTER COLUMN MODIFIED_DATE DATETIME NULL
  END 

-------------DEFAULT CONSTRAINTS---------------------
IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'HIST_CONTRACT_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_HIST_CONTRACT_MASTER_ACTION_DATE')
  BEGIN
      ALTER TABLE HIST_CONTRACT_MASTER
        ADD CONSTRAINT DF_HIST_CONTRACT_MASTER_ACTION_DATE DEFAULT (Getdate()) FOR ACTION_DATE
  END

GO

IF NOT EXISTS (SELECT *
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'HIST_CONTRACT_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_HIST_CONTRACT_MASTER_RECORD_LOCK_STATUS')
  BEGIN
      ALTER TABLE HIST_CONTRACT_MASTER
        ADD CONSTRAINT DF_HIST_CONTRACT_MASTER_RECORD_LOCK_STATUS DEFAULT (1) FOR RECORD_LOCK_STATUS
  END

GO

---------------------------------------column rename starts------------------------
IF EXISTS (SELECT 1 FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='HIST_CONTRACT_MASTER' AND COLUMN_NAME='TRADE_CLASS')
BEGIN
exec sp_RENAME 'HIST_CONTRACT_MASTER.TRADE_CLASS','CONTRACT_TRADE_CLASS','COLUMN'
END

GO
---------------------------------------column rename ends--------------------------

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_CONTRACT_MASTER'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

--------------------------------------CONTRACT_MASTER TRIGGER---------------------------------------
IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [Name] = N'TRG_CONTRACT_MASTER_INS')
  BEGIN
      DROP TRIGGER dbo.TRG_CONTRACT_MASTER_INS
  END

GO

CREATE TRIGGER [dbo].[TRG_CONTRACT_MASTER_INS]
ON [dbo].[CONTRACT_MASTER]
AFTER INSERT
AS
  BEGIN
      SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   INSERTED)
        INSERT INTO HIST_CONTRACT_MASTER
                    (CONTRACT_MASTER_SID,CONTRACT_ID,CONTRACT_NO,[CONTRACT_NAME],
                     CONTRACT_TYPE,CONTRACT_STATUS,START_DATE,END_DATE,
                     MANF_COMPANY_MASTER_SID,CONT_HOLD_COMPANY_MASTER_SID,BUNIT_COMPANY_MASTER_SID,CONTRACT_TRADE_CLASS,
                     ORGANIZATION_KEY,DOCUMENT_TYPE,DOCUMENT_CLASS,TERM,
                     RENEGOTIATION_START_DATE,RENEGOTIATION_END_DATE,PRICEPROTECTION_START_DATE,PRICEPROTECTION_END_DATE,
                     ADVANCE_NOTICE_DAYS,INSIDE_OWNER,INSIDE_PHONE,INSIDE_AUTHOR,
                     INSIDE_ADDITIONAL,INSIDE_ADDITIONAL_NAME,INSIDE_ADDITIONAL_PHONE,OUTSIDE_OWNER,
                     OUTSIDE_PHONE,OUTSIDE_AUTHOR,OUTSIDE_ADDITIONAL,OUTSIDE_ADDITIONAL_NAME,
                     OUTSIDE_ADDITIONAL_PHONE,AFFILIATED_CONTRACT_INFO,SHIPPING_TERMS,INTERNAL_NOTES,
                     PROPOSAL_START_DATE,PROPOSAL_END_DATE,ORIGINAL_START_DATE,ORIGINAL_END_DATE,
                     AWARD_STATUS,LAST_UPDATED_DATE,PRICE_ESCALATION_CLAUSE,EXEMPT_FROM_LOW_PRICE,
                     PRICE_RESET_INDICATOR,CANCELLATION_CLAUSE,MOST_FAVORED_NATION,CATEGORY,
                     CURRENCY,MINIMUM_ORDER,PAYMENT_TERMS,PROCESS_STATUS,
                     INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
                     CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,ACTION_FLAG)
        SELECT CONTRACT_MASTER_SID,CONTRACT_ID,CONTRACT_NO,[CONTRACT_NAME],
               CONTRACT_TYPE,CONTRACT_STATUS,START_DATE,END_DATE,
               MANF_COMPANY_MASTER_SID,CONT_HOLD_COMPANY_MASTER_SID,BUNIT_COMPANY_MASTER_SID,CONTRACT_TRADE_CLASS,
               ORGANIZATION_KEY,DOCUMENT_TYPE,DOCUMENT_CLASS,TERM,
               RENEGOTIATION_START_DATE,RENEGOTIATION_END_DATE,PRICEPROTECTION_START_DATE,PRICEPROTECTION_END_DATE,
               ADVANCE_NOTICE_DAYS,INSIDE_OWNER,INSIDE_PHONE,INSIDE_AUTHOR,
               INSIDE_ADDITIONAL,INSIDE_ADDITIONAL_NAME,INSIDE_ADDITIONAL_PHONE,OUTSIDE_OWNER,
               OUTSIDE_PHONE,OUTSIDE_AUTHOR,OUTSIDE_ADDITIONAL,OUTSIDE_ADDITIONAL_NAME,
               OUTSIDE_ADDITIONAL_PHONE,AFFILIATED_CONTRACT_INFO,SHIPPING_TERMS,INTERNAL_NOTES,
               PROPOSAL_START_DATE,PROPOSAL_END_DATE,ORIGINAL_START_DATE,ORIGINAL_END_DATE,
               AWARD_STATUS,LAST_UPDATED_DATE,PRICE_ESCALATION_CLAUSE,EXEMPT_FROM_LOW_PRICE,
               PRICE_RESET_INDICATOR,CANCELLATION_CLAUSE,MOST_FAVORED_NATION,CATEGORY,
               CURRENCY,MINIMUM_ORDER,PAYMENT_TERMS,PROCESS_STATUS,
               INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
               CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,'A'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [Name] = N'TRG_CONTRACT_MASTER_UPD')
  BEGIN
      DROP TRIGGER dbo.TRG_CONTRACT_MASTER_UPD
  END

GO

CREATE TRIGGER [dbo].[TRG_CONTRACT_MASTER_UPD]
ON [dbo].[CONTRACT_MASTER]
AFTER UPDATE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   INSERTED)
         AND EXISTS(SELECT *
                    FROM   DELETED)
        INSERT INTO HIST_CONTRACT_MASTER
                    (CONTRACT_MASTER_SID,CONTRACT_ID,CONTRACT_NO,[CONTRACT_NAME],
                     CONTRACT_TYPE,CONTRACT_STATUS,START_DATE,END_DATE,
                     MANF_COMPANY_MASTER_SID,CONT_HOLD_COMPANY_MASTER_SID,BUNIT_COMPANY_MASTER_SID,CONTRACT_TRADE_CLASS,
                     ORGANIZATION_KEY,DOCUMENT_TYPE,DOCUMENT_CLASS,TERM,
                     RENEGOTIATION_START_DATE,RENEGOTIATION_END_DATE,PRICEPROTECTION_START_DATE,PRICEPROTECTION_END_DATE,
                     ADVANCE_NOTICE_DAYS,INSIDE_OWNER,INSIDE_PHONE,INSIDE_AUTHOR,
                     INSIDE_ADDITIONAL,INSIDE_ADDITIONAL_NAME,INSIDE_ADDITIONAL_PHONE,OUTSIDE_OWNER,
                     OUTSIDE_PHONE,OUTSIDE_AUTHOR,OUTSIDE_ADDITIONAL,OUTSIDE_ADDITIONAL_NAME,
                     OUTSIDE_ADDITIONAL_PHONE,AFFILIATED_CONTRACT_INFO,SHIPPING_TERMS,INTERNAL_NOTES,
                     PROPOSAL_START_DATE,PROPOSAL_END_DATE,ORIGINAL_START_DATE,ORIGINAL_END_DATE,
                     AWARD_STATUS,LAST_UPDATED_DATE,PRICE_ESCALATION_CLAUSE,EXEMPT_FROM_LOW_PRICE,
                     PRICE_RESET_INDICATOR,CANCELLATION_CLAUSE,MOST_FAVORED_NATION,CATEGORY,
                     CURRENCY,MINIMUM_ORDER,PAYMENT_TERMS,PROCESS_STATUS,
                     INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
                     CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,ACTION_FLAG)
        SELECT CONTRACT_MASTER_SID,CONTRACT_ID,CONTRACT_NO,[CONTRACT_NAME],
               CONTRACT_TYPE,CONTRACT_STATUS,START_DATE,END_DATE,
               MANF_COMPANY_MASTER_SID,CONT_HOLD_COMPANY_MASTER_SID,BUNIT_COMPANY_MASTER_SID,CONTRACT_TRADE_CLASS,
               ORGANIZATION_KEY,DOCUMENT_TYPE,DOCUMENT_CLASS,TERM,
               RENEGOTIATION_START_DATE,RENEGOTIATION_END_DATE,PRICEPROTECTION_START_DATE,PRICEPROTECTION_END_DATE,
               ADVANCE_NOTICE_DAYS,INSIDE_OWNER,INSIDE_PHONE,INSIDE_AUTHOR,
               INSIDE_ADDITIONAL,INSIDE_ADDITIONAL_NAME,INSIDE_ADDITIONAL_PHONE,OUTSIDE_OWNER,
               OUTSIDE_PHONE,OUTSIDE_AUTHOR,OUTSIDE_ADDITIONAL,OUTSIDE_ADDITIONAL_NAME,
               OUTSIDE_ADDITIONAL_PHONE,AFFILIATED_CONTRACT_INFO,SHIPPING_TERMS,INTERNAL_NOTES,
               PROPOSAL_START_DATE,PROPOSAL_END_DATE,ORIGINAL_START_DATE,ORIGINAL_END_DATE,
               AWARD_STATUS,LAST_UPDATED_DATE,PRICE_ESCALATION_CLAUSE,EXEMPT_FROM_LOW_PRICE,
               PRICE_RESET_INDICATOR,CANCELLATION_CLAUSE,MOST_FAVORED_NATION,CATEGORY,
               CURRENCY,MINIMUM_ORDER,PAYMENT_TERMS,PROCESS_STATUS,
               INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
               CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,'C'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [Name] = N'TRG_CONTRACT_MASTER_DEL')
  BEGIN
      DROP TRIGGER dbo.TRG_CONTRACT_MASTER_DEL
  END

GO

CREATE TRIGGER [dbo].[TRG_CONTRACT_MASTER_DEL]
ON [dbo].[CONTRACT_MASTER]
AFTER DELETE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   DELETED)
        INSERT INTO HIST_CONTRACT_MASTER
                    (CONTRACT_MASTER_SID,CONTRACT_ID,CONTRACT_NO,[CONTRACT_NAME],
                     CONTRACT_TYPE,CONTRACT_STATUS,START_DATE,END_DATE,
                     MANF_COMPANY_MASTER_SID,CONT_HOLD_COMPANY_MASTER_SID,BUNIT_COMPANY_MASTER_SID,CONTRACT_TRADE_CLASS,
                     ORGANIZATION_KEY,DOCUMENT_TYPE,DOCUMENT_CLASS,TERM,
                     RENEGOTIATION_START_DATE,RENEGOTIATION_END_DATE,PRICEPROTECTION_START_DATE,PRICEPROTECTION_END_DATE,
                     ADVANCE_NOTICE_DAYS,INSIDE_OWNER,INSIDE_PHONE,INSIDE_AUTHOR,
                     INSIDE_ADDITIONAL,INSIDE_ADDITIONAL_NAME,INSIDE_ADDITIONAL_PHONE,OUTSIDE_OWNER,
                     OUTSIDE_PHONE,OUTSIDE_AUTHOR,OUTSIDE_ADDITIONAL,OUTSIDE_ADDITIONAL_NAME,
                     OUTSIDE_ADDITIONAL_PHONE,AFFILIATED_CONTRACT_INFO,SHIPPING_TERMS,INTERNAL_NOTES,
                     PROPOSAL_START_DATE,PROPOSAL_END_DATE,ORIGINAL_START_DATE,ORIGINAL_END_DATE,
                     AWARD_STATUS,LAST_UPDATED_DATE,PRICE_ESCALATION_CLAUSE,EXEMPT_FROM_LOW_PRICE,
                     PRICE_RESET_INDICATOR,CANCELLATION_CLAUSE,MOST_FAVORED_NATION,CATEGORY,
                     CURRENCY,MINIMUM_ORDER,PAYMENT_TERMS,PROCESS_STATUS,
                     INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
                     CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,ACTION_FLAG)
        SELECT CONTRACT_MASTER_SID,CONTRACT_ID,CONTRACT_NO,[CONTRACT_NAME],
               CONTRACT_TYPE,CONTRACT_STATUS,START_DATE,END_DATE,
               MANF_COMPANY_MASTER_SID,CONT_HOLD_COMPANY_MASTER_SID,BUNIT_COMPANY_MASTER_SID,CONTRACT_TRADE_CLASS,
               ORGANIZATION_KEY,DOCUMENT_TYPE,DOCUMENT_CLASS,TERM,
               RENEGOTIATION_START_DATE,RENEGOTIATION_END_DATE,PRICEPROTECTION_START_DATE,PRICEPROTECTION_END_DATE,
               ADVANCE_NOTICE_DAYS,INSIDE_OWNER,INSIDE_PHONE,INSIDE_AUTHOR,
               INSIDE_ADDITIONAL,INSIDE_ADDITIONAL_NAME,INSIDE_ADDITIONAL_PHONE,OUTSIDE_OWNER,
               OUTSIDE_PHONE,OUTSIDE_AUTHOR,OUTSIDE_ADDITIONAL,OUTSIDE_ADDITIONAL_NAME,
               OUTSIDE_ADDITIONAL_PHONE,AFFILIATED_CONTRACT_INFO,SHIPPING_TERMS,INTERNAL_NOTES,
               PROPOSAL_START_DATE,PROPOSAL_END_DATE,ORIGINAL_START_DATE,ORIGINAL_END_DATE,
               AWARD_STATUS,LAST_UPDATED_DATE,PRICE_ESCALATION_CLAUSE,EXEMPT_FROM_LOW_PRICE,
               PRICE_RESET_INDICATOR,CANCELLATION_CLAUSE,MOST_FAVORED_NATION,CATEGORY,
               CURRENCY,MINIMUM_ORDER,PAYMENT_TERMS,PROCESS_STATUS,
               INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
               CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,'D'
        FROM   DELETED
  END

GO

------------------------------------------CONTRACT_ALIAS_MASTER--------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   SYS.TABLES
               WHERE  Object_name(OBJECT_ID) = 'CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO')
  BEGIN
      CREATE TABLE CONTRACT_ALIAS_MASTER
        (
           CONTRACT_ALIAS_MASTER_SID INT NOT NULL IDENTITY(1, 1),
           CONTRACT_ALIAS_NO         VARCHAR(50) NULL,
           CONTRACT_ALIAS_NAME       VARCHAR(100) NULL,
           CONTRACT_MASTER_SID       INT NOT NULL,
           CONTRACT_ALIAS_TYPE       INT NULL,
           TP_COMPANY_MASTER_SID     INT NULL,
           [START_DATE]              DATETIME NULL,
           END_DATE                  DATETIME NULL,
           INBOUND_STATUS            CHAR(1) NOT NULL,
           RECORD_LOCK_STATUS        BIT NOT NULL,
           BATCH_ID                  VARCHAR(50) NULL,
           [SOURCE]                  VARCHAR(50) NULL,
           [CREATED_BY]              INT NOT NULL,
           [CREATED_DATE]            DATETIME NOT NULL,
           [MODIFIED_BY]             INT NOT NULL,
           [MODIFIED_DATE]           DATETIME NOT NULL
        )
  END

GO
-------------PRIMARY KEYS CONSTRAINT--------------------
IF NOT EXISTS(SELECT 1
              FROM   SYS.KEY_CONSTRAINTS
              WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_ALIAS_MASTER'
                     AND Schema_name(SCHEMA_ID) = 'DBO'
                     AND NAME = 'PK_CONTRACT_ALIAS_MASTER_CONTRACT_ALIAS_MASTER_SID'
                     AND [TYPE] = 'PK')
  BEGIN
      ALTER TABLE CONTRACT_ALIAS_MASTER
        ADD CONSTRAINT PK_CONTRACT_ALIAS_MASTER_CONTRACT_ALIAS_MASTER_SID PRIMARY KEY(CONTRACT_ALIAS_MASTER_SID)
  END

GO
-------------DEFAULT CONSTRAINTS---------------------
IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_ALIAS_MASTER_RECORD_LOCK_STATUS')
  BEGIN
      ALTER TABLE CONTRACT_ALIAS_MASTER
        ADD CONSTRAINT DF_CONTRACT_ALIAS_MASTER_RECORD_LOCK_STATUS DEFAULT (1) FOR RECORD_LOCK_STATUS
  END

GO
IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_ALIAS_MASTER_CREATED_BY')
  BEGIN
      ALTER TABLE CONTRACT_ALIAS_MASTER
        ADD CONSTRAINT DF_CONTRACT_ALIAS_MASTER_CREATED_BY DEFAULT (1) FOR CREATED_BY
  END

  GO
IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_ALIAS_MASTER_CREATED_DATE')
  BEGIN
      ALTER TABLE CONTRACT_ALIAS_MASTER
        ADD CONSTRAINT DF_CONTRACT_ALIAS_MASTER_CREATED_DATE DEFAULT (Getdate()) FOR CREATED_DATE
  END

GO

IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_ALIAS_MASTER_MODIFIED_BY')
  BEGIN
      ALTER TABLE CONTRACT_ALIAS_MASTER
        ADD CONSTRAINT DF_CONTRACT_ALIAS_MASTER_MODIFIED_BY DEFAULT (1) FOR MODIFIED_BY
  END

GO

IF NOT EXISTS (SELECT 1
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_CONTRACT_ALIAS_MASTER_MODIFIED_DATE')
  BEGIN
      ALTER TABLE CONTRACT_ALIAS_MASTER
        ADD CONSTRAINT DF_CONTRACT_ALIAS_MASTER_MODIFIED_DATE DEFAULT (Getdate()) FOR MODIFIED_DATE
  END

GO

------------------------------------------------UNIQUE_CONSTRAINT---------------------------------------
IF EXISTS (SELECT NAME
           FROM   SYS.TABLES
           WHERE  NAME = 'CONTRACT_ALIAS_MASTER')
  BEGIN
      IF NOT EXISTS (SELECT 1
                     FROM   SYS.KEY_CONSTRAINTS
                     WHERE  TYPE_DESC = 'UNIQUE_CONSTRAINT'
                            AND PARENT_OBJECT_ID = Object_id('CONTRACT_ALIAS_MASTER')
                            AND NAME = 'UQ_CONTRACT_ALIAS_MASTER_CONTRACT_MASTER_SID_CONTRACT_ALIAS_NO')
        BEGIN
            ALTER TABLE CONTRACT_ALIAS_MASTER
              ADD CONSTRAINT UQ_CONTRACT_ALIAS_MASTER_CONTRACT_MASTER_SID_CONTRACT_ALIAS_NO UNIQUE(CONTRACT_MASTER_SID, CONTRACT_ALIAS_NO)
        END
  END

GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'CONTRACT_ALIAS_MASTER'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME
IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

--------------------------------------------HIST_CONTRACT_ALIAS_MASTER-----------------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   SYS.TABLES
               WHERE  Object_name(OBJECT_ID) = 'HIST_CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO')
  BEGIN
      CREATE TABLE HIST_CONTRACT_ALIAS_MASTER
        (
           CONTRACT_ALIAS_MASTER_SID INT NOT NULL,
           CONTRACT_ALIAS_NO         VARCHAR(50) NULL,
           CONTRACT_ALIAS_NAME       VARCHAR(100) NULL,
           CONTRACT_MASTER_SID       INT NOT NULL,
           CONTRACT_ALIAS_TYPE       INT NULL,
           TP_COMPANY_MASTER_SID     INT NULL,
           [START_DATE]              DATETIME NULL,
           END_DATE                  DATETIME NULL,
           INBOUND_STATUS            CHAR(1) NOT NULL,
           RECORD_LOCK_STATUS        BIT NOT NULL,
           BATCH_ID                  VARCHAR(50) NULL,
           [SOURCE]                  VARCHAR(50) NULL,
           [CREATED_BY]              INT NOT NULL,
           [CREATED_DATE]            DATETIME NOT NULL,
           [MODIFIED_BY]             INT NOT NULL,
           [MODIFIED_DATE]           DATETIME NOT NULL,
           ACTION_FLAG               CHAR(1) NOT NULL,
           ACTION_DATE               DATETIME NOT NULL
        )
  END

GO
---------------PRIMARY KEYS--------------------
--IF NOT EXISTS(SELECT 1 FROM SYS.KEY_CONSTRAINTS
--              WHERE OBJECT_NAME(PARENT_OBJECT_ID)='HIST_CONTRACT_ALIAS_MASTER'
--			  AND SCHEMA_NAME(SCHEMA_ID)='DBO'
--			  AND NAME='PK_HIST_CONTRACT_ALIAS_MASTER_CONTRACT_ALIAS_MASTER_SID_VERSION_NO'
--			  AND [TYPE]='PK')
--BEGIN
--ALTER TABLE HIST_CONTRACT_ALIAS_MASTER ADD CONSTRAINT PK_HIST_CONTRACT_ALIAS_MASTER_CONTRACT_ALIAS_MASTER_SID_VERSION_NO
--PRIMARY KEY(CONTRACT_ALIAS_MASTER_SID,VERSION_NO)
--END
-------------DEFAULT CONSTRAINTS---------------------
IF NOT EXISTS (SELECT *
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  Object_name(PARENT_OBJECT_ID) = 'HIST_CONTRACT_ALIAS_MASTER'
                      AND Schema_name(SCHEMA_ID) = 'DBO'
                      AND NAME = 'DF_HIST_CONTRACT_ALIAS_MASTER_ACTION_DATE')
  BEGIN
      ALTER TABLE HIST_CONTRACT_ALIAS_MASTER
        ADD CONSTRAINT DF_HIST_CONTRACT_ALIAS_MASTER_ACTION_DATE DEFAULT (Getdate()) FOR ACTION_DATE
  END

GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'HIST_CONTRACT_ALIAS_MASTER'--TABLE NAME
SET @SCHEMANAME1 ='dbo' -- SCHEMA NAME
IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
                  JOIN SYS.TABLES T
                    ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
                  AND NOT EXISTS (SELECT 1
                                  FROM   SYS.INDEXES
                                  WHERE  S.NAME = NAME)
                  AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
                  AND Schema_name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               Schema_name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
               JOIN SYS.TABLES T
                 ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
               AND NOT EXISTS (SELECT 1
                               FROM   SYS.INDEXES
                               WHERE  S.NAME = NAME)
               AND Object_name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
               AND Schema_name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + Quotename(@SCHEMANAME)
                       + '.' + Quotename(@TABLENAME) + '.'
                       + Quotename(@STATSNAME)

            EXEC Sp_executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + Quotename(C.NAME)
         + ' ON ' + Quotename(Schema_name(SCHEMA_ID))
         + '.' + Quotename(T.NAME) + ' ('
         + Quotename(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
         JOIN SYS.COLUMNS C
           ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT 1
                     FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                            INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC
                                    ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE  CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = Schema_name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
         AND NOT EXISTS (SELECT 1
                         FROM   SYS.STATS S
                         WHERE  S.OBJECT_ID = C.OBJECT_ID
                                AND S.NAME = C.NAME)
         AND T.NAME = @TABLENAME1 -- TABLE NAME
         AND Schema_name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      EXEC Sp_executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO

--------------------------------------------CONTRACT_ALIAS_MASTER TRIGGER---------------------------------------
IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [Name] = N'TRG_CONTRACT_ALIAS_MASTER_INS')
  BEGIN
      DROP TRIGGER dbo.TRG_CONTRACT_ALIAS_MASTER_INS
  END

GO

CREATE TRIGGER [dbo].[TRG_CONTRACT_ALIAS_MASTER_INS]
ON [dbo].[CONTRACT_ALIAS_MASTER]
AFTER INSERT
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   INSERTED)
        INSERT INTO HIST_CONTRACT_ALIAS_MASTER
                    (CONTRACT_ALIAS_MASTER_SID,CONTRACT_ALIAS_NO,CONTRACT_ALIAS_NAME,CONTRACT_MASTER_SID,
                     CONTRACT_ALIAS_TYPE,TP_COMPANY_MASTER_SID,[START_DATE],END_DATE,
                     INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
                     CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,ACTION_FLAG)
        SELECT CONTRACT_ALIAS_MASTER_SID,CONTRACT_ALIAS_NO,CONTRACT_ALIAS_NAME,CONTRACT_MASTER_SID,
               CONTRACT_ALIAS_TYPE,TP_COMPANY_MASTER_SID,[START_DATE],END_DATE,
               INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
               CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,'A'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [Name] = N'TRG_CONTRACT_ALIAS_MASTER_UPD')
  BEGIN
      DROP TRIGGER dbo.TRG_CONTRACT_ALIAS_MASTER_UPD
  END

GO

CREATE TRIGGER [dbo].[TRG_CONTRACT_ALIAS_MASTER_UPD]
ON [dbo].[CONTRACT_ALIAS_MASTER]
AFTER UPDATE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   INSERTED)
         AND EXISTS(SELECT *
                    FROM   DELETED)
        INSERT INTO HIST_CONTRACT_ALIAS_MASTER
                    (CONTRACT_ALIAS_MASTER_SID,CONTRACT_ALIAS_NO,CONTRACT_ALIAS_NAME,CONTRACT_MASTER_SID,
                     CONTRACT_ALIAS_TYPE,TP_COMPANY_MASTER_SID,[START_DATE],END_DATE,
                     INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
                     CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,ACTION_FLAG)
        SELECT CONTRACT_ALIAS_MASTER_SID,CONTRACT_ALIAS_NO,CONTRACT_ALIAS_NAME,CONTRACT_MASTER_SID,
               CONTRACT_ALIAS_TYPE,TP_COMPANY_MASTER_SID,[START_DATE],END_DATE,
               INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
               CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,'C'
        FROM   INSERTED
  END

GO

IF EXISTS (SELECT 'X'
           FROM   SYS.TRIGGERS
           WHERE  [Name] = N'TRG_CONTRACT_ALIAS_MASTER_DEL')
  BEGIN
      DROP TRIGGER dbo.TRG_CONTRACT_ALIAS_MASTER_DEL
  END

GO

CREATE TRIGGER [dbo].[TRG_CONTRACT_ALIAS_MASTER_DEL]
ON [dbo].[CONTRACT_ALIAS_MASTER]
AFTER DELETE
AS
  BEGIN
  SET NOCOUNT ON
      IF EXISTS(SELECT *
                FROM   DELETED)
        INSERT INTO HIST_CONTRACT_ALIAS_MASTER
                    (CONTRACT_ALIAS_MASTER_SID,CONTRACT_ALIAS_NO,CONTRACT_ALIAS_NAME,CONTRACT_MASTER_SID,
                     CONTRACT_ALIAS_TYPE,TP_COMPANY_MASTER_SID,[START_DATE],END_DATE,
                     INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
                     CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,ACTION_FLAG)
        SELECT CONTRACT_ALIAS_MASTER_SID,CONTRACT_ALIAS_NO,CONTRACT_ALIAS_NAME,CONTRACT_MASTER_SID,
               CONTRACT_ALIAS_TYPE,TP_COMPANY_MASTER_SID,[START_DATE],END_DATE,
               INBOUND_STATUS,RECORD_LOCK_STATUS,BATCH_ID,CREATED_BY,
               CREATED_DATE,MODIFIED_BY,MODIFIED_DATE,'D'
        FROM   DELETED
  END

GO 
--------------------------------------IMTD_COMPANY_CONTRACT_DETAILS--------------------------------------------
IF NOT EXISTS (SELECT 'X'
               FROM   INFORMATION_SCHEMA.TABLES
               WHERE  TABLE_NAME = 'IMTD_COMPANY_CONTRACT_DETAILS'
                  AND TABLE_SCHEMA = 'DBO')
  BEGIN
      CREATE TABLE [DBO].[IMTD_COMPANY_CONTRACT_DETAILS]
        (
           COMPANY_CONTRACT_DETAILS_SID INT IDENTITY(1, 1) NOT NULL,
           COMPANY_MASTER_SID           INT,
           COMPANY_ID                   VARCHAR(38),
           COMPANY_NO                   VARCHAR(50),
           COMPANY_NAME                 VARCHAR(100),
           COMPANY_TYPE                 VARCHAR(50),
           COMPANY_STATUS               INT,
           COMPANY_START_DATE           DATETIME,
           COMPNAY_END_DATE             DATETIME,
           CFP_MODEL_SID                INT,
           CFP_DETAILS_SID              INT,
           TRADING_PARTNER_SID          INT,
           TRADING_PARTNER_ID           VARCHAR(50),
           TRADING_PARTNER_CONTRACT_NO  VARCHAR(50),
           CONTRACT_MASTER_SID          INT,
           START_DATE                   DATETIME,
           END_DATE                     DATETIME,
           TRADE_CLASS                  VARCHAR(100),
           TRADE_CLASS_START_DATE       DATETIME,
           TRADE_CLASS_END_DATE         DATETIME,
           ATTACHED_STATUS              INT,
           ATTACHED_DATE                DATETIME,
           RECORD_LOCK_STATUS           VARCHAR(20),
           USERS_SID                    VARCHAR(50),
           SESSION_ID                   VARCHAR(100),
           CHECK_RECORD                 BIT,
           IMTD_CREATED_DATE            DATETIME,
           OPERATION                    VARCHAR(100),
           [CREATED_BY]                 INT NOT NULL,
           [CREATED_DATE]               DATETIME NOT NULL,
           [MODIFIED_BY]                INT NOT NULL,
           [MODIFIED_DATE]              DATETIME NOT NULL
        )
  END

GO

IF NOT EXISTS(SELECT 'X'
              FROM   INFORMATION_SCHEMA.TABLE_CONSTRAINTS
              WHERE  CONSTRAINT_NAME = 'PK_IMTD_COMPANY_CONTRACT_DETAILS_COMPANY_CONTRACT_DETAILS_SID'
                 AND TABLE_NAME = 'IMTD_COMPANY_CONTRACT_DETAILS')
  BEGIN
      ALTER TABLE [DBO].[IMTD_COMPANY_CONTRACT_DETAILS]
        ADD CONSTRAINT PK_IMTD_COMPANY_CONTRACT_DETAILS_COMPANY_CONTRACT_DETAILS_SID PRIMARY KEY(COMPANY_CONTRACT_DETAILS_SID)
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = Object_Id('DBO.IMTD_COMPANY_CONTRACT_DETAILS')
                  AND NAME = 'DF_IMTD_COMPANY_CONTRACT_DETAILS_CREATED_BY')
  BEGIN
      ALTER TABLE [DBO].[IMTD_COMPANY_CONTRACT_DETAILS]
        ADD CONSTRAINT [DF_IMTD_COMPANY_CONTRACT_DETAILS_CREATED_BY] DEFAULT (1) FOR CREATED_BY
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = Object_Id('DBO.IMTD_COMPANY_CONTRACT_DETAILS')
                  AND NAME = 'DF_IMTD_COMPANY_CONTRACT_DETAILS_CREATED_DATE')
  BEGIN
      ALTER TABLE [DBO].[IMTD_COMPANY_CONTRACT_DETAILS]
        ADD CONSTRAINT [DF_IMTD_COMPANY_CONTRACT_DETAILS_CREATED_DATE] DEFAULT (GetDate()) FOR CREATED_DATE
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = Object_Id('DBO.IMTD_COMPANY_CONTRACT_DETAILS')
                  AND NAME = 'DF_IMTD_COMPANY_CONTRACT_DETAILS_MODIFIED_BY')
  BEGIN
      ALTER TABLE [DBO].[IMTD_COMPANY_CONTRACT_DETAILS]
        ADD CONSTRAINT [DF_IMTD_COMPANY_CONTRACT_DETAILS_MODIFIED_BY] DEFAULT (1) FOR MODIFIED_BY
  END

GO

IF NOT EXISTS (SELECT 'X'
               FROM   SYS.DEFAULT_CONSTRAINTS
               WHERE  PARENT_OBJECT_ID = Object_Id('DBO.IMTD_COMPANY_CONTRACT_DETAILS')
                  AND NAME = 'DF_IMTD_COMPANY_CONTRACT_DETAILS_MODIFIED_DATE')
  BEGIN
      ALTER TABLE [DBO].[IMTD_COMPANY_CONTRACT_DETAILS]
        ADD CONSTRAINT [DF_IMTD_COMPANY_CONTRACT_DETAILS_MODIFIED_DATE] DEFAULT (GetDate()) FOR MODIFIED_DATE
  END

GO

DECLARE @SQL NVARCHAR(MAX)
DECLARE @TABLENAME VARCHAR(100)
DECLARE @STATSNAME VARCHAR(200)
DECLARE @TABLENAME1 VARCHAR(100)
DECLARE @SCHEMANAME VARCHAR(30)
DECLARE @SCHEMANAME1 VARCHAR(30)

SET @TABLENAME1 = 'IMTD_COMPANY_CONTRACT_DETAILS'--TABLE NAME
SET @SCHEMANAME1 ='DBO' -- SCHEMA NAME

IF EXISTS (SELECT 'X'
           FROM   SYS.STATS S
           JOIN   SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
           WHERE  AUTO_CREATED = 1
              AND NOT EXISTS (SELECT 1
                              FROM   SYS.INDEXES
                              WHERE  S.NAME = NAME)
              AND Object_Name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
              AND scHema_Name(SCHEMA_ID) = @SCHEMANAME1)
  BEGIN
      DECLARE CUR CURSOR STATIC FOR
        SELECT Object_Name(S.OBJECT_ID) AS 'TABLENAME',
               S.NAME                   AS 'STATSNAME',
               scHema_Name(T.SCHEMA_ID) AS 'SCHEMA_NAME'
        FROM   SYS.STATS S
        JOIN   SYS.TABLES T ON S.OBJECT_ID = T.OBJECT_ID
        WHERE  AUTO_CREATED = 1
           AND NOT EXISTS (SELECT 1
                           FROM   SYS.INDEXES
                           WHERE  S.NAME = NAME)
           AND Object_Name(S.OBJECT_ID) = @TABLENAME1 -- TABLE NAME
           AND scHema_Name(SCHEMA_ID) = @SCHEMANAME1

      OPEN CUR

      FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME

      WHILE @@FETCH_STATUS = 0
        BEGIN
            SET @SQL = 'DROP STATISTICS ' + QuoteName(@SCHEMANAME)
                       + '.' + QuoteName(@TABLENAME) + '.'
                       + QuoteName(@STATSNAME)

            --PRINT @SQL
            EXEC sp_Executesql
              @SQL

            FETCH NEXT FROM CUR INTO @TABLENAME, @STATSNAME, @SCHEMANAME
        END

      CLOSE CUR

      DEALLOCATE CUR
  END

DECLARE @STATS NVARCHAR(MAX)
DECLARE CUR1 CURSOR STATIC FOR
  SELECT 'CREATE STATISTICS ' + QuoteName(C.NAME)
         + ' ON ' + QuoteName(scHema_Name(SCHEMA_ID))
         + '.' + QuoteName(T.NAME) + ' ('
         + QuoteName(C.NAME) + ') WITH FULLSCAN'
  FROM   SYS.TABLES T
  JOIN   SYS.COLUMNS C ON T.OBJECT_ID = C.OBJECT_ID
  WHERE  NOT EXISTS (SELECT     1
                     FROM       INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC
                     INNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE CC ON TC.CONSTRAINT_NAME = CC.CONSTRAINT_NAME
                     WHERE      CC.TABLE_NAME = T.NAME
                            AND CC.TABLE_SCHEMA = scHema_Name(SCHEMA_ID)
                            AND C.NAME = COLUMN_NAME)
     AND NOT EXISTS (SELECT 1
                     FROM   SYS.STATS S
                     WHERE  S.OBJECT_ID = C.OBJECT_ID
                        AND S.NAME = C.NAME)
     AND T.NAME = @TABLENAME1 -- TABLE NAME
     AND scHema_Name(SCHEMA_ID) = @SCHEMANAME1
  ORDER  BY T.NAME

OPEN CUR1

FETCH NEXT FROM CUR1 INTO @STATS

WHILE @@FETCH_STATUS = 0
  BEGIN
      --PRINT @STATS
      EXEC sp_Executesql
        @STATS

      FETCH NEXT FROM CUR1 INTO @STATS
  END

CLOSE CUR1

DEALLOCATE CUR1

GO 
