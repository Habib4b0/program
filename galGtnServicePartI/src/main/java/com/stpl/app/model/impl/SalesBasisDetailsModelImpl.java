package com.stpl.app.model.impl;

import com.stpl.app.model.SalesBasisDetails;
import com.stpl.app.model.SalesBasisDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the SalesBasisDetails service. Represents a row in the &quot;SALES_BASIS_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.SalesBasisDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link SalesBasisDetailsImpl}.
 * </p>
 *
 * @author
 * @see SalesBasisDetailsImpl
 * @see com.stpl.app.model.SalesBasisDetails
 * @see com.stpl.app.model.SalesBasisDetailsModel
 * @generated
 */
public class SalesBasisDetailsModelImpl extends BaseModelImpl<SalesBasisDetails>
    implements SalesBasisDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a sales basis details model instance should use the {@link com.stpl.app.model.SalesBasisDetails} interface instead.
     */
    public static final String TABLE_NAME = "SALES_BASIS_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "CREATED_BY", Types.INTEGER },
            { "NET_SALES_FORMULA_MASTER_SID", Types.INTEGER },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "MODIFIED_BY", Types.INTEGER },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CONTRACT_MASTER_SID", Types.INTEGER },
            { "SOURCE", Types.VARCHAR },
            { "CDR_MODEL_SID", Types.INTEGER },
            { "SALES_BASIS_DETAILS_SID", Types.INTEGER },
            { "CFP_CONTRACT_DETAILS_SID", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "INBOUND_STATUS", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table SALES_BASIS_DETAILS (CREATED_BY INTEGER,NET_SALES_FORMULA_MASTER_SID INTEGER,RECORD_LOCK_STATUS BOOLEAN,MODIFIED_BY INTEGER,CREATED_DATE DATE null,CONTRACT_MASTER_SID INTEGER,SOURCE VARCHAR(75) null,CDR_MODEL_SID INTEGER,SALES_BASIS_DETAILS_SID INTEGER not null primary key IDENTITY,CFP_CONTRACT_DETAILS_SID INTEGER,MODIFIED_DATE DATE null,INBOUND_STATUS VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table SALES_BASIS_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY salesBasisDetails.salesBasisDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY SALES_BASIS_DETAILS.SALES_BASIS_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.SalesBasisDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.SalesBasisDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.SalesBasisDetails"));
    private static ClassLoader _classLoader = SalesBasisDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            SalesBasisDetails.class
        };
    private int _createdBy;
    private int _netSalesFormulaMasterSid;
    private boolean _recordLockStatus;
    private int _modifiedBy;
    private Date _createdDate;
    private int _contractMasterSid;
    private String _source;
    private int _cdrModelSid;
    private int _salesBasisDetailsSid;
    private int _cfpContractDetailsSid;
    private Date _modifiedDate;
    private String _inboundStatus;
    private SalesBasisDetails _escapedModel;

    public SalesBasisDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _salesBasisDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setSalesBasisDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _salesBasisDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return SalesBasisDetails.class;
    }

    @Override
    public String getModelClassName() {
        return SalesBasisDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("createdBy", getCreatedBy());
        attributes.put("netSalesFormulaMasterSid", getNetSalesFormulaMasterSid());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("contractMasterSid", getContractMasterSid());
        attributes.put("source", getSource());
        attributes.put("cdrModelSid", getCdrModelSid());
        attributes.put("salesBasisDetailsSid", getSalesBasisDetailsSid());
        attributes.put("cfpContractDetailsSid", getCfpContractDetailsSid());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("inboundStatus", getInboundStatus());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Integer netSalesFormulaMasterSid = (Integer) attributes.get(
                "netSalesFormulaMasterSid");

        if (netSalesFormulaMasterSid != null) {
            setNetSalesFormulaMasterSid(netSalesFormulaMasterSid);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer contractMasterSid = (Integer) attributes.get(
                "contractMasterSid");

        if (contractMasterSid != null) {
            setContractMasterSid(contractMasterSid);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        Integer cdrModelSid = (Integer) attributes.get("cdrModelSid");

        if (cdrModelSid != null) {
            setCdrModelSid(cdrModelSid);
        }

        Integer salesBasisDetailsSid = (Integer) attributes.get(
                "salesBasisDetailsSid");

        if (salesBasisDetailsSid != null) {
            setSalesBasisDetailsSid(salesBasisDetailsSid);
        }

        Integer cfpContractDetailsSid = (Integer) attributes.get(
                "cfpContractDetailsSid");

        if (cfpContractDetailsSid != null) {
            setCfpContractDetailsSid(cfpContractDetailsSid);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public int getNetSalesFormulaMasterSid() {
        return _netSalesFormulaMasterSid;
    }

    @Override
    public void setNetSalesFormulaMasterSid(int netSalesFormulaMasterSid) {
        _netSalesFormulaMasterSid = netSalesFormulaMasterSid;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getContractMasterSid() {
        return _contractMasterSid;
    }

    @Override
    public void setContractMasterSid(int contractMasterSid) {
        _contractMasterSid = contractMasterSid;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public int getCdrModelSid() {
        return _cdrModelSid;
    }

    @Override
    public void setCdrModelSid(int cdrModelSid) {
        _cdrModelSid = cdrModelSid;
    }

    @Override
    public int getSalesBasisDetailsSid() {
        return _salesBasisDetailsSid;
    }

    @Override
    public void setSalesBasisDetailsSid(int salesBasisDetailsSid) {
        _salesBasisDetailsSid = salesBasisDetailsSid;
    }

    @Override
    public int getCfpContractDetailsSid() {
        return _cfpContractDetailsSid;
    }

    @Override
    public void setCfpContractDetailsSid(int cfpContractDetailsSid) {
        _cfpContractDetailsSid = cfpContractDetailsSid;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public SalesBasisDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (SalesBasisDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        SalesBasisDetailsImpl salesBasisDetailsImpl = new SalesBasisDetailsImpl();

        salesBasisDetailsImpl.setCreatedBy(getCreatedBy());
        salesBasisDetailsImpl.setNetSalesFormulaMasterSid(getNetSalesFormulaMasterSid());
        salesBasisDetailsImpl.setRecordLockStatus(getRecordLockStatus());
        salesBasisDetailsImpl.setModifiedBy(getModifiedBy());
        salesBasisDetailsImpl.setCreatedDate(getCreatedDate());
        salesBasisDetailsImpl.setContractMasterSid(getContractMasterSid());
        salesBasisDetailsImpl.setSource(getSource());
        salesBasisDetailsImpl.setCdrModelSid(getCdrModelSid());
        salesBasisDetailsImpl.setSalesBasisDetailsSid(getSalesBasisDetailsSid());
        salesBasisDetailsImpl.setCfpContractDetailsSid(getCfpContractDetailsSid());
        salesBasisDetailsImpl.setModifiedDate(getModifiedDate());
        salesBasisDetailsImpl.setInboundStatus(getInboundStatus());

        salesBasisDetailsImpl.resetOriginalValues();

        return salesBasisDetailsImpl;
    }

    @Override
    public int compareTo(SalesBasisDetails salesBasisDetails) {
        int primaryKey = salesBasisDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof SalesBasisDetails)) {
            return false;
        }

        SalesBasisDetails salesBasisDetails = (SalesBasisDetails) obj;

        int primaryKey = salesBasisDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<SalesBasisDetails> toCacheModel() {
        SalesBasisDetailsCacheModel salesBasisDetailsCacheModel = new SalesBasisDetailsCacheModel();

        salesBasisDetailsCacheModel.createdBy = getCreatedBy();

        salesBasisDetailsCacheModel.netSalesFormulaMasterSid = getNetSalesFormulaMasterSid();

        salesBasisDetailsCacheModel.recordLockStatus = getRecordLockStatus();

        salesBasisDetailsCacheModel.modifiedBy = getModifiedBy();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            salesBasisDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            salesBasisDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        salesBasisDetailsCacheModel.contractMasterSid = getContractMasterSid();

        salesBasisDetailsCacheModel.source = getSource();

        String source = salesBasisDetailsCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            salesBasisDetailsCacheModel.source = null;
        }

        salesBasisDetailsCacheModel.cdrModelSid = getCdrModelSid();

        salesBasisDetailsCacheModel.salesBasisDetailsSid = getSalesBasisDetailsSid();

        salesBasisDetailsCacheModel.cfpContractDetailsSid = getCfpContractDetailsSid();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            salesBasisDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            salesBasisDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        salesBasisDetailsCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = salesBasisDetailsCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            salesBasisDetailsCacheModel.inboundStatus = null;
        }

        return salesBasisDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(25);

        sb.append("{createdBy=");
        sb.append(getCreatedBy());
        sb.append(", netSalesFormulaMasterSid=");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", contractMasterSid=");
        sb.append(getContractMasterSid());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", cdrModelSid=");
        sb.append(getCdrModelSid());
        sb.append(", salesBasisDetailsSid=");
        sb.append(getSalesBasisDetailsSid());
        sb.append(", cfpContractDetailsSid=");
        sb.append(getCfpContractDetailsSid());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(40);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.SalesBasisDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>netSalesFormulaMasterSid</column-name><column-value><![CDATA[");
        sb.append(getNetSalesFormulaMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
        sb.append(getContractMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cdrModelSid</column-name><column-value><![CDATA[");
        sb.append(getCdrModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>salesBasisDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getSalesBasisDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cfpContractDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getCfpContractDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
