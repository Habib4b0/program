/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.parttwo.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.parttwo.model.CffMaster;
import com.stpl.app.parttwo.model.CffMasterModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CffMaster service. Represents a row in the &quot;CFF_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link CffMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CffMasterImpl}.
 * </p>
 *
 * @author
 * @see CffMasterImpl
 * @see CffMaster
 * @see CffMasterModel
 * @generated
 */
@ProviderType
public class CffMasterModelImpl extends BaseModelImpl<CffMaster>
	implements CffMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a cff master model instance should use the {@link CffMaster} interface instead.
	 */
	public static final String TABLE_NAME = "CFF_MASTER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "PRODUCT_HIERARCHY_LEVEL", Types.INTEGER },
			{ "ACTIVE_FROM_DATE", Types.TIMESTAMP },
			{ "CFF_TYPE", Types.INTEGER },
			{ "CFF_OFFICIAL", Types.BOOLEAN },
			{ "CFF_MASTER_SID", Types.INTEGER },
			{ "PRODUCT_HIER_VERSION_NO", Types.INTEGER },
			{ "ACTIVE_TO_DATE", Types.TIMESTAMP },
			{ "CUSTOMER_HIER_VERSION_NO", Types.INTEGER },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "CUSTOMER_HIERARCHY_LEVEL", Types.INTEGER },
			{ "PRODUCT_HIERARCHY_SID", Types.INTEGER },
			{ "CFF_NAME", Types.VARCHAR },
			{ "CUSTOMER_HIERARCHY_INNER_LEVEL", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.INTEGER },
			{ "CUSTOMER_HIERARCHY_SID", Types.INTEGER },
			{ "COMPANY_GROUP_SID", Types.INTEGER },
			{ "PROD_RELATIONSHIP_BUILDER_SID", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "INBOUND_STATUS", Types.VARCHAR },
			{ "PRODUCT_HIERARCHY_INNER_LEVEL", Types.INTEGER },
			{ "ITEM_GROUP_SID", Types.INTEGER },
			{ "CUST_RELATIONSHIP_BUILDER_SID", Types.INTEGER },
			{ "COMPANY_MASTER_SID", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("PRODUCT_HIERARCHY_LEVEL", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ACTIVE_FROM_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CFF_TYPE", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFF_OFFICIAL", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("CFF_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRODUCT_HIER_VERSION_NO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ACTIVE_TO_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CUSTOMER_HIER_VERSION_NO", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CUSTOMER_HIERARCHY_LEVEL", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRODUCT_HIERARCHY_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CFF_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CUSTOMER_HIERARCHY_INNER_LEVEL", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CUSTOMER_HIERARCHY_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("COMPANY_GROUP_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PROD_RELATIONSHIP_BUILDER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("INBOUND_STATUS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRODUCT_HIERARCHY_INNER_LEVEL", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_GROUP_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CUST_RELATIONSHIP_BUILDER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("COMPANY_MASTER_SID", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table CFF_MASTER (PRODUCT_HIERARCHY_LEVEL INTEGER,ACTIVE_FROM_DATE DATE null,CFF_TYPE INTEGER,CFF_OFFICIAL BOOLEAN,CFF_MASTER_SID INTEGER not null primary key IDENTITY,PRODUCT_HIER_VERSION_NO INTEGER,ACTIVE_TO_DATE DATE null,CUSTOMER_HIER_VERSION_NO INTEGER,MODIFIED_DATE DATE null,CUSTOMER_HIERARCHY_LEVEL INTEGER,PRODUCT_HIERARCHY_SID INTEGER,CFF_NAME VARCHAR(75) null,CUSTOMER_HIERARCHY_INNER_LEVEL INTEGER,CREATED_DATE DATE null,CREATED_BY INTEGER,CUSTOMER_HIERARCHY_SID INTEGER,COMPANY_GROUP_SID INTEGER,PROD_RELATIONSHIP_BUILDER_SID INTEGER,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,PRODUCT_HIERARCHY_INNER_LEVEL INTEGER,ITEM_GROUP_SID INTEGER,CUST_RELATIONSHIP_BUILDER_SID INTEGER,COMPANY_MASTER_SID INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table CFF_MASTER";
	public static final String ORDER_BY_JPQL = " ORDER BY cffMaster.cffMasterSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY CFF_MASTER.CFF_MASTER_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.parttwo.model.CffMaster"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.parttwo.model.CffMaster"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.parttwo.model.CffMaster"));

	public CffMasterModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _cffMasterSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setCffMasterSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _cffMasterSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return CffMaster.class;
	}

	@Override
	public String getModelClassName() {
		return CffMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("productHierarchyLevel", getProductHierarchyLevel());
		attributes.put("activeFromDate", getActiveFromDate());
		attributes.put("cffType", getCffType());
		attributes.put("cffOfficial", getCffOfficial());
		attributes.put("cffMasterSid", getCffMasterSid());
		attributes.put("productHierVersionNo", getProductHierVersionNo());
		attributes.put("activeToDate", getActiveToDate());
		attributes.put("customerHierVersionNo", getCustomerHierVersionNo());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("customerHierarchyLevel", getCustomerHierarchyLevel());
		attributes.put("productHierarchySid", getProductHierarchySid());
		attributes.put("cffName", getCffName());
		attributes.put("customerHierarchyInnerLevel",
			getCustomerHierarchyInnerLevel());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("customerHierarchySid", getCustomerHierarchySid());
		attributes.put("companyGroupSid", getCompanyGroupSid());
		attributes.put("prodRelationshipBuilderSid",
			getProdRelationshipBuilderSid());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("inboundStatus", getInboundStatus());
		attributes.put("productHierarchyInnerLevel",
			getProductHierarchyInnerLevel());
		attributes.put("itemGroupSid", getItemGroupSid());
		attributes.put("custRelationshipBuilderSid",
			getCustRelationshipBuilderSid());
		attributes.put("companyMasterSid", getCompanyMasterSid());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Integer productHierarchyLevel = (Integer)attributes.get(
				"productHierarchyLevel");

		if (productHierarchyLevel != null) {
			setProductHierarchyLevel(productHierarchyLevel);
		}

		Date activeFromDate = (Date)attributes.get("activeFromDate");

		if (activeFromDate != null) {
			setActiveFromDate(activeFromDate);
		}

		Integer cffType = (Integer)attributes.get("cffType");

		if (cffType != null) {
			setCffType(cffType);
		}

		Boolean cffOfficial = (Boolean)attributes.get("cffOfficial");

		if (cffOfficial != null) {
			setCffOfficial(cffOfficial);
		}

		Integer cffMasterSid = (Integer)attributes.get("cffMasterSid");

		if (cffMasterSid != null) {
			setCffMasterSid(cffMasterSid);
		}

		Integer productHierVersionNo = (Integer)attributes.get(
				"productHierVersionNo");

		if (productHierVersionNo != null) {
			setProductHierVersionNo(productHierVersionNo);
		}

		Date activeToDate = (Date)attributes.get("activeToDate");

		if (activeToDate != null) {
			setActiveToDate(activeToDate);
		}

		Integer customerHierVersionNo = (Integer)attributes.get(
				"customerHierVersionNo");

		if (customerHierVersionNo != null) {
			setCustomerHierVersionNo(customerHierVersionNo);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer customerHierarchyLevel = (Integer)attributes.get(
				"customerHierarchyLevel");

		if (customerHierarchyLevel != null) {
			setCustomerHierarchyLevel(customerHierarchyLevel);
		}

		Integer productHierarchySid = (Integer)attributes.get(
				"productHierarchySid");

		if (productHierarchySid != null) {
			setProductHierarchySid(productHierarchySid);
		}

		String cffName = (String)attributes.get("cffName");

		if (cffName != null) {
			setCffName(cffName);
		}

		Integer customerHierarchyInnerLevel = (Integer)attributes.get(
				"customerHierarchyInnerLevel");

		if (customerHierarchyInnerLevel != null) {
			setCustomerHierarchyInnerLevel(customerHierarchyInnerLevel);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer customerHierarchySid = (Integer)attributes.get(
				"customerHierarchySid");

		if (customerHierarchySid != null) {
			setCustomerHierarchySid(customerHierarchySid);
		}

		Integer companyGroupSid = (Integer)attributes.get("companyGroupSid");

		if (companyGroupSid != null) {
			setCompanyGroupSid(companyGroupSid);
		}

		Integer prodRelationshipBuilderSid = (Integer)attributes.get(
				"prodRelationshipBuilderSid");

		if (prodRelationshipBuilderSid != null) {
			setProdRelationshipBuilderSid(prodRelationshipBuilderSid);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String inboundStatus = (String)attributes.get("inboundStatus");

		if (inboundStatus != null) {
			setInboundStatus(inboundStatus);
		}

		Integer productHierarchyInnerLevel = (Integer)attributes.get(
				"productHierarchyInnerLevel");

		if (productHierarchyInnerLevel != null) {
			setProductHierarchyInnerLevel(productHierarchyInnerLevel);
		}

		Integer itemGroupSid = (Integer)attributes.get("itemGroupSid");

		if (itemGroupSid != null) {
			setItemGroupSid(itemGroupSid);
		}

		Integer custRelationshipBuilderSid = (Integer)attributes.get(
				"custRelationshipBuilderSid");

		if (custRelationshipBuilderSid != null) {
			setCustRelationshipBuilderSid(custRelationshipBuilderSid);
		}

		Integer companyMasterSid = (Integer)attributes.get("companyMasterSid");

		if (companyMasterSid != null) {
			setCompanyMasterSid(companyMasterSid);
		}
	}

	@Override
	public int getProductHierarchyLevel() {
		return _productHierarchyLevel;
	}

	@Override
	public void setProductHierarchyLevel(int productHierarchyLevel) {
		_productHierarchyLevel = productHierarchyLevel;
	}

	@Override
	public Date getActiveFromDate() {
		return _activeFromDate;
	}

	@Override
	public void setActiveFromDate(Date activeFromDate) {
		_activeFromDate = activeFromDate;
	}

	@Override
	public int getCffType() {
		return _cffType;
	}

	@Override
	public void setCffType(int cffType) {
		_cffType = cffType;
	}

	@Override
	public boolean getCffOfficial() {
		return _cffOfficial;
	}

	@Override
	public boolean isCffOfficial() {
		return _cffOfficial;
	}

	@Override
	public void setCffOfficial(boolean cffOfficial) {
		_cffOfficial = cffOfficial;
	}

	@Override
	public int getCffMasterSid() {
		return _cffMasterSid;
	}

	@Override
	public void setCffMasterSid(int cffMasterSid) {
		_cffMasterSid = cffMasterSid;
	}

	@Override
	public int getProductHierVersionNo() {
		return _productHierVersionNo;
	}

	@Override
	public void setProductHierVersionNo(int productHierVersionNo) {
		_productHierVersionNo = productHierVersionNo;
	}

	@Override
	public Date getActiveToDate() {
		return _activeToDate;
	}

	@Override
	public void setActiveToDate(Date activeToDate) {
		_activeToDate = activeToDate;
	}

	@Override
	public int getCustomerHierVersionNo() {
		return _customerHierVersionNo;
	}

	@Override
	public void setCustomerHierVersionNo(int customerHierVersionNo) {
		_customerHierVersionNo = customerHierVersionNo;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getCustomerHierarchyLevel() {
		return _customerHierarchyLevel;
	}

	@Override
	public void setCustomerHierarchyLevel(int customerHierarchyLevel) {
		_customerHierarchyLevel = customerHierarchyLevel;
	}

	@Override
	public int getProductHierarchySid() {
		return _productHierarchySid;
	}

	@Override
	public void setProductHierarchySid(int productHierarchySid) {
		_productHierarchySid = productHierarchySid;
	}

	@Override
	public String getCffName() {
		if (_cffName == null) {
			return StringPool.BLANK;
		}
		else {
			return _cffName;
		}
	}

	@Override
	public void setCffName(String cffName) {
		_cffName = cffName;
	}

	@Override
	public int getCustomerHierarchyInnerLevel() {
		return _customerHierarchyInnerLevel;
	}

	@Override
	public void setCustomerHierarchyInnerLevel(int customerHierarchyInnerLevel) {
		_customerHierarchyInnerLevel = customerHierarchyInnerLevel;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getCustomerHierarchySid() {
		return _customerHierarchySid;
	}

	@Override
	public void setCustomerHierarchySid(int customerHierarchySid) {
		_customerHierarchySid = customerHierarchySid;
	}

	@Override
	public int getCompanyGroupSid() {
		return _companyGroupSid;
	}

	@Override
	public void setCompanyGroupSid(int companyGroupSid) {
		_companyGroupSid = companyGroupSid;
	}

	@Override
	public int getProdRelationshipBuilderSid() {
		return _prodRelationshipBuilderSid;
	}

	@Override
	public void setProdRelationshipBuilderSid(int prodRelationshipBuilderSid) {
		_prodRelationshipBuilderSid = prodRelationshipBuilderSid;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getInboundStatus() {
		if (_inboundStatus == null) {
			return StringPool.BLANK;
		}
		else {
			return _inboundStatus;
		}
	}

	@Override
	public void setInboundStatus(String inboundStatus) {
		_inboundStatus = inboundStatus;
	}

	@Override
	public int getProductHierarchyInnerLevel() {
		return _productHierarchyInnerLevel;
	}

	@Override
	public void setProductHierarchyInnerLevel(int productHierarchyInnerLevel) {
		_productHierarchyInnerLevel = productHierarchyInnerLevel;
	}

	@Override
	public int getItemGroupSid() {
		return _itemGroupSid;
	}

	@Override
	public void setItemGroupSid(int itemGroupSid) {
		_itemGroupSid = itemGroupSid;
	}

	@Override
	public int getCustRelationshipBuilderSid() {
		return _custRelationshipBuilderSid;
	}

	@Override
	public void setCustRelationshipBuilderSid(int custRelationshipBuilderSid) {
		_custRelationshipBuilderSid = custRelationshipBuilderSid;
	}

	@Override
	public int getCompanyMasterSid() {
		return _companyMasterSid;
	}

	@Override
	public void setCompanyMasterSid(int companyMasterSid) {
		_companyMasterSid = companyMasterSid;
	}

	@Override
	public CffMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (CffMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		CffMasterImpl cffMasterImpl = new CffMasterImpl();

		cffMasterImpl.setProductHierarchyLevel(getProductHierarchyLevel());
		cffMasterImpl.setActiveFromDate(getActiveFromDate());
		cffMasterImpl.setCffType(getCffType());
		cffMasterImpl.setCffOfficial(getCffOfficial());
		cffMasterImpl.setCffMasterSid(getCffMasterSid());
		cffMasterImpl.setProductHierVersionNo(getProductHierVersionNo());
		cffMasterImpl.setActiveToDate(getActiveToDate());
		cffMasterImpl.setCustomerHierVersionNo(getCustomerHierVersionNo());
		cffMasterImpl.setModifiedDate(getModifiedDate());
		cffMasterImpl.setCustomerHierarchyLevel(getCustomerHierarchyLevel());
		cffMasterImpl.setProductHierarchySid(getProductHierarchySid());
		cffMasterImpl.setCffName(getCffName());
		cffMasterImpl.setCustomerHierarchyInnerLevel(getCustomerHierarchyInnerLevel());
		cffMasterImpl.setCreatedDate(getCreatedDate());
		cffMasterImpl.setCreatedBy(getCreatedBy());
		cffMasterImpl.setCustomerHierarchySid(getCustomerHierarchySid());
		cffMasterImpl.setCompanyGroupSid(getCompanyGroupSid());
		cffMasterImpl.setProdRelationshipBuilderSid(getProdRelationshipBuilderSid());
		cffMasterImpl.setModifiedBy(getModifiedBy());
		cffMasterImpl.setInboundStatus(getInboundStatus());
		cffMasterImpl.setProductHierarchyInnerLevel(getProductHierarchyInnerLevel());
		cffMasterImpl.setItemGroupSid(getItemGroupSid());
		cffMasterImpl.setCustRelationshipBuilderSid(getCustRelationshipBuilderSid());
		cffMasterImpl.setCompanyMasterSid(getCompanyMasterSid());

		cffMasterImpl.resetOriginalValues();

		return cffMasterImpl;
	}

	@Override
	public int compareTo(CffMaster cffMaster) {
		int primaryKey = cffMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof CffMaster)) {
			return false;
		}

		CffMaster cffMaster = (CffMaster)obj;

		int primaryKey = cffMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<CffMaster> toCacheModel() {
		CffMasterCacheModel cffMasterCacheModel = new CffMasterCacheModel();

		cffMasterCacheModel.productHierarchyLevel = getProductHierarchyLevel();

		Date activeFromDate = getActiveFromDate();

		if (activeFromDate != null) {
			cffMasterCacheModel.activeFromDate = activeFromDate.getTime();
		}
		else {
			cffMasterCacheModel.activeFromDate = Long.MIN_VALUE;
		}

		cffMasterCacheModel.cffType = getCffType();

		cffMasterCacheModel.cffOfficial = getCffOfficial();

		cffMasterCacheModel.cffMasterSid = getCffMasterSid();

		cffMasterCacheModel.productHierVersionNo = getProductHierVersionNo();

		Date activeToDate = getActiveToDate();

		if (activeToDate != null) {
			cffMasterCacheModel.activeToDate = activeToDate.getTime();
		}
		else {
			cffMasterCacheModel.activeToDate = Long.MIN_VALUE;
		}

		cffMasterCacheModel.customerHierVersionNo = getCustomerHierVersionNo();

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			cffMasterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			cffMasterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		cffMasterCacheModel.customerHierarchyLevel = getCustomerHierarchyLevel();

		cffMasterCacheModel.productHierarchySid = getProductHierarchySid();

		cffMasterCacheModel.cffName = getCffName();

		String cffName = cffMasterCacheModel.cffName;

		if ((cffName != null) && (cffName.length() == 0)) {
			cffMasterCacheModel.cffName = null;
		}

		cffMasterCacheModel.customerHierarchyInnerLevel = getCustomerHierarchyInnerLevel();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			cffMasterCacheModel.createdDate = createdDate.getTime();
		}
		else {
			cffMasterCacheModel.createdDate = Long.MIN_VALUE;
		}

		cffMasterCacheModel.createdBy = getCreatedBy();

		cffMasterCacheModel.customerHierarchySid = getCustomerHierarchySid();

		cffMasterCacheModel.companyGroupSid = getCompanyGroupSid();

		cffMasterCacheModel.prodRelationshipBuilderSid = getProdRelationshipBuilderSid();

		cffMasterCacheModel.modifiedBy = getModifiedBy();

		cffMasterCacheModel.inboundStatus = getInboundStatus();

		String inboundStatus = cffMasterCacheModel.inboundStatus;

		if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
			cffMasterCacheModel.inboundStatus = null;
		}

		cffMasterCacheModel.productHierarchyInnerLevel = getProductHierarchyInnerLevel();

		cffMasterCacheModel.itemGroupSid = getItemGroupSid();

		cffMasterCacheModel.custRelationshipBuilderSid = getCustRelationshipBuilderSid();

		cffMasterCacheModel.companyMasterSid = getCompanyMasterSid();

		return cffMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(49);

		sb.append("{productHierarchyLevel=");
		sb.append(getProductHierarchyLevel());
		sb.append(", activeFromDate=");
		sb.append(getActiveFromDate());
		sb.append(", cffType=");
		sb.append(getCffType());
		sb.append(", cffOfficial=");
		sb.append(getCffOfficial());
		sb.append(", cffMasterSid=");
		sb.append(getCffMasterSid());
		sb.append(", productHierVersionNo=");
		sb.append(getProductHierVersionNo());
		sb.append(", activeToDate=");
		sb.append(getActiveToDate());
		sb.append(", customerHierVersionNo=");
		sb.append(getCustomerHierVersionNo());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", customerHierarchyLevel=");
		sb.append(getCustomerHierarchyLevel());
		sb.append(", productHierarchySid=");
		sb.append(getProductHierarchySid());
		sb.append(", cffName=");
		sb.append(getCffName());
		sb.append(", customerHierarchyInnerLevel=");
		sb.append(getCustomerHierarchyInnerLevel());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", customerHierarchySid=");
		sb.append(getCustomerHierarchySid());
		sb.append(", companyGroupSid=");
		sb.append(getCompanyGroupSid());
		sb.append(", prodRelationshipBuilderSid=");
		sb.append(getProdRelationshipBuilderSid());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", inboundStatus=");
		sb.append(getInboundStatus());
		sb.append(", productHierarchyInnerLevel=");
		sb.append(getProductHierarchyInnerLevel());
		sb.append(", itemGroupSid=");
		sb.append(getItemGroupSid());
		sb.append(", custRelationshipBuilderSid=");
		sb.append(getCustRelationshipBuilderSid());
		sb.append(", companyMasterSid=");
		sb.append(getCompanyMasterSid());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(76);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.parttwo.model.CffMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>productHierarchyLevel</column-name><column-value><![CDATA[");
		sb.append(getProductHierarchyLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activeFromDate</column-name><column-value><![CDATA[");
		sb.append(getActiveFromDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cffType</column-name><column-value><![CDATA[");
		sb.append(getCffType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cffOfficial</column-name><column-value><![CDATA[");
		sb.append(getCffOfficial());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cffMasterSid</column-name><column-value><![CDATA[");
		sb.append(getCffMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productHierVersionNo</column-name><column-value><![CDATA[");
		sb.append(getProductHierVersionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>activeToDate</column-name><column-value><![CDATA[");
		sb.append(getActiveToDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerHierVersionNo</column-name><column-value><![CDATA[");
		sb.append(getCustomerHierVersionNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerHierarchyLevel</column-name><column-value><![CDATA[");
		sb.append(getCustomerHierarchyLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productHierarchySid</column-name><column-value><![CDATA[");
		sb.append(getProductHierarchySid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cffName</column-name><column-value><![CDATA[");
		sb.append(getCffName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerHierarchyInnerLevel</column-name><column-value><![CDATA[");
		sb.append(getCustomerHierarchyInnerLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>customerHierarchySid</column-name><column-value><![CDATA[");
		sb.append(getCustomerHierarchySid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyGroupSid</column-name><column-value><![CDATA[");
		sb.append(getCompanyGroupSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>prodRelationshipBuilderSid</column-name><column-value><![CDATA[");
		sb.append(getProdRelationshipBuilderSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
		sb.append(getInboundStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productHierarchyInnerLevel</column-name><column-value><![CDATA[");
		sb.append(getProductHierarchyInnerLevel());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemGroupSid</column-name><column-value><![CDATA[");
		sb.append(getItemGroupSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>custRelationshipBuilderSid</column-name><column-value><![CDATA[");
		sb.append(getCustRelationshipBuilderSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyMasterSid</column-name><column-value><![CDATA[");
		sb.append(getCompanyMasterSid());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = CffMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			CffMaster.class
		};
	private int _productHierarchyLevel;
	private Date _activeFromDate;
	private int _cffType;
	private boolean _cffOfficial;
	private int _cffMasterSid;
	private int _productHierVersionNo;
	private Date _activeToDate;
	private int _customerHierVersionNo;
	private Date _modifiedDate;
	private int _customerHierarchyLevel;
	private int _productHierarchySid;
	private String _cffName;
	private int _customerHierarchyInnerLevel;
	private Date _createdDate;
	private int _createdBy;
	private int _customerHierarchySid;
	private int _companyGroupSid;
	private int _prodRelationshipBuilderSid;
	private int _modifiedBy;
	private String _inboundStatus;
	private int _productHierarchyInnerLevel;
	private int _itemGroupSid;
	private int _custRelationshipBuilderSid;
	private int _companyMasterSid;
	private CffMaster _escapedModel;
}