package com.stpl.app.model.impl;

import com.stpl.app.model.CdrDetails;
import com.stpl.app.model.CdrDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CdrDetails service. Represents a row in the &quot;CDR_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.CdrDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CdrDetailsImpl}.
 * </p>
 *
 * @author
 * @see CdrDetailsImpl
 * @see com.stpl.app.model.CdrDetails
 * @see com.stpl.app.model.CdrDetailsModel
 * @generated
 */
public class CdrDetailsModelImpl extends BaseModelImpl<CdrDetails>
    implements CdrDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a cdr details model instance should use the {@link com.stpl.app.model.CdrDetails} interface instead.
     */
    public static final String TABLE_NAME = "CDR_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "CREATED_BY", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "LINE_TYPE", Types.VARCHAR },
            { "KEYWORD", Types.VARCHAR },
            { "ITEM_GROUP_MS_ASSOCIATION", Types.VARCHAR },
            { "VALUE", Types.DOUBLE },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "LOGICAL_OPERATOR", Types.VARCHAR },
            { "OPERATOR", Types.VARCHAR },
            { "CDR_DETAILS_SID", Types.INTEGER },
            { "CDR_MODEL_SID", Types.INTEGER },
            { "COMPARISON", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table CDR_DETAILS (CREATED_BY INTEGER,MODIFIED_BY INTEGER,CREATED_DATE DATE null,LINE_TYPE VARCHAR(75) null,KEYWORD VARCHAR(75) null,ITEM_GROUP_MS_ASSOCIATION VARCHAR(75) null,VALUE DOUBLE,MODIFIED_DATE DATE null,LOGICAL_OPERATOR VARCHAR(75) null,OPERATOR VARCHAR(75) null,CDR_DETAILS_SID INTEGER not null primary key IDENTITY,CDR_MODEL_SID INTEGER,COMPARISON VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table CDR_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY cdrDetails.cdrDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY CDR_DETAILS.CDR_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.CdrDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.CdrDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.CdrDetails"));
    private static ClassLoader _classLoader = CdrDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            CdrDetails.class
        };
    private int _createdBy;
    private int _modifiedBy;
    private Date _createdDate;
    private String _lineType;
    private String _keyword;
    private String _itemGroupMsAssociation;
    private double _value;
    private Date _modifiedDate;
    private String _logicalOperator;
    private String _operator;
    private int _cdrDetailsSid;
    private int _cdrModelSid;
    private String _comparison;
    private CdrDetails _escapedModel;

    public CdrDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _cdrDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setCdrDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _cdrDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return CdrDetails.class;
    }

    @Override
    public String getModelClassName() {
        return CdrDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("createdBy", getCreatedBy());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("lineType", getLineType());
        attributes.put("keyword", getKeyword());
        attributes.put("itemGroupMsAssociation", getItemGroupMsAssociation());
        attributes.put("value", getValue());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("logicalOperator", getLogicalOperator());
        attributes.put("operator", getOperator());
        attributes.put("cdrDetailsSid", getCdrDetailsSid());
        attributes.put("cdrModelSid", getCdrModelSid());
        attributes.put("comparison", getComparison());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        String lineType = (String) attributes.get("lineType");

        if (lineType != null) {
            setLineType(lineType);
        }

        String keyword = (String) attributes.get("keyword");

        if (keyword != null) {
            setKeyword(keyword);
        }

        String itemGroupMsAssociation = (String) attributes.get(
                "itemGroupMsAssociation");

        if (itemGroupMsAssociation != null) {
            setItemGroupMsAssociation(itemGroupMsAssociation);
        }

        Double value = (Double) attributes.get("value");

        if (value != null) {
            setValue(value);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String logicalOperator = (String) attributes.get("logicalOperator");

        if (logicalOperator != null) {
            setLogicalOperator(logicalOperator);
        }

        String operator = (String) attributes.get("operator");

        if (operator != null) {
            setOperator(operator);
        }

        Integer cdrDetailsSid = (Integer) attributes.get("cdrDetailsSid");

        if (cdrDetailsSid != null) {
            setCdrDetailsSid(cdrDetailsSid);
        }

        Integer cdrModelSid = (Integer) attributes.get("cdrModelSid");

        if (cdrModelSid != null) {
            setCdrModelSid(cdrModelSid);
        }

        String comparison = (String) attributes.get("comparison");

        if (comparison != null) {
            setComparison(comparison);
        }
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public String getLineType() {
        if (_lineType == null) {
            return StringPool.BLANK;
        } else {
            return _lineType;
        }
    }

    @Override
    public void setLineType(String lineType) {
        _lineType = lineType;
    }

    @Override
    public String getKeyword() {
        if (_keyword == null) {
            return StringPool.BLANK;
        } else {
            return _keyword;
        }
    }

    @Override
    public void setKeyword(String keyword) {
        _keyword = keyword;
    }

    @Override
    public String getItemGroupMsAssociation() {
        if (_itemGroupMsAssociation == null) {
            return StringPool.BLANK;
        } else {
            return _itemGroupMsAssociation;
        }
    }

    @Override
    public void setItemGroupMsAssociation(String itemGroupMsAssociation) {
        _itemGroupMsAssociation = itemGroupMsAssociation;
    }

    @Override
    public double getValue() {
        return _value;
    }

    @Override
    public void setValue(double value) {
        _value = value;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getLogicalOperator() {
        if (_logicalOperator == null) {
            return StringPool.BLANK;
        } else {
            return _logicalOperator;
        }
    }

    @Override
    public void setLogicalOperator(String logicalOperator) {
        _logicalOperator = logicalOperator;
    }

    @Override
    public String getOperator() {
        if (_operator == null) {
            return StringPool.BLANK;
        } else {
            return _operator;
        }
    }

    @Override
    public void setOperator(String operator) {
        _operator = operator;
    }

    @Override
    public int getCdrDetailsSid() {
        return _cdrDetailsSid;
    }

    @Override
    public void setCdrDetailsSid(int cdrDetailsSid) {
        _cdrDetailsSid = cdrDetailsSid;
    }

    @Override
    public int getCdrModelSid() {
        return _cdrModelSid;
    }

    @Override
    public void setCdrModelSid(int cdrModelSid) {
        _cdrModelSid = cdrModelSid;
    }

    @Override
    public String getComparison() {
        if (_comparison == null) {
            return StringPool.BLANK;
        } else {
            return _comparison;
        }
    }

    @Override
    public void setComparison(String comparison) {
        _comparison = comparison;
    }

    @Override
    public CdrDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (CdrDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        CdrDetailsImpl cdrDetailsImpl = new CdrDetailsImpl();

        cdrDetailsImpl.setCreatedBy(getCreatedBy());
        cdrDetailsImpl.setModifiedBy(getModifiedBy());
        cdrDetailsImpl.setCreatedDate(getCreatedDate());
        cdrDetailsImpl.setLineType(getLineType());
        cdrDetailsImpl.setKeyword(getKeyword());
        cdrDetailsImpl.setItemGroupMsAssociation(getItemGroupMsAssociation());
        cdrDetailsImpl.setValue(getValue());
        cdrDetailsImpl.setModifiedDate(getModifiedDate());
        cdrDetailsImpl.setLogicalOperator(getLogicalOperator());
        cdrDetailsImpl.setOperator(getOperator());
        cdrDetailsImpl.setCdrDetailsSid(getCdrDetailsSid());
        cdrDetailsImpl.setCdrModelSid(getCdrModelSid());
        cdrDetailsImpl.setComparison(getComparison());

        cdrDetailsImpl.resetOriginalValues();

        return cdrDetailsImpl;
    }

    @Override
    public int compareTo(CdrDetails cdrDetails) {
        int primaryKey = cdrDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof CdrDetails)) {
            return false;
        }

        CdrDetails cdrDetails = (CdrDetails) obj;

        int primaryKey = cdrDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<CdrDetails> toCacheModel() {
        CdrDetailsCacheModel cdrDetailsCacheModel = new CdrDetailsCacheModel();

        cdrDetailsCacheModel.createdBy = getCreatedBy();

        cdrDetailsCacheModel.modifiedBy = getModifiedBy();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            cdrDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            cdrDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        cdrDetailsCacheModel.lineType = getLineType();

        String lineType = cdrDetailsCacheModel.lineType;

        if ((lineType != null) && (lineType.length() == 0)) {
            cdrDetailsCacheModel.lineType = null;
        }

        cdrDetailsCacheModel.keyword = getKeyword();

        String keyword = cdrDetailsCacheModel.keyword;

        if ((keyword != null) && (keyword.length() == 0)) {
            cdrDetailsCacheModel.keyword = null;
        }

        cdrDetailsCacheModel.itemGroupMsAssociation = getItemGroupMsAssociation();

        String itemGroupMsAssociation = cdrDetailsCacheModel.itemGroupMsAssociation;

        if ((itemGroupMsAssociation != null) &&
                (itemGroupMsAssociation.length() == 0)) {
            cdrDetailsCacheModel.itemGroupMsAssociation = null;
        }

        cdrDetailsCacheModel.value = getValue();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            cdrDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            cdrDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        cdrDetailsCacheModel.logicalOperator = getLogicalOperator();

        String logicalOperator = cdrDetailsCacheModel.logicalOperator;

        if ((logicalOperator != null) && (logicalOperator.length() == 0)) {
            cdrDetailsCacheModel.logicalOperator = null;
        }

        cdrDetailsCacheModel.operator = getOperator();

        String operator = cdrDetailsCacheModel.operator;

        if ((operator != null) && (operator.length() == 0)) {
            cdrDetailsCacheModel.operator = null;
        }

        cdrDetailsCacheModel.cdrDetailsSid = getCdrDetailsSid();

        cdrDetailsCacheModel.cdrModelSid = getCdrModelSid();

        cdrDetailsCacheModel.comparison = getComparison();

        String comparison = cdrDetailsCacheModel.comparison;

        if ((comparison != null) && (comparison.length() == 0)) {
            cdrDetailsCacheModel.comparison = null;
        }

        return cdrDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(27);

        sb.append("{createdBy=");
        sb.append(getCreatedBy());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", lineType=");
        sb.append(getLineType());
        sb.append(", keyword=");
        sb.append(getKeyword());
        sb.append(", itemGroupMsAssociation=");
        sb.append(getItemGroupMsAssociation());
        sb.append(", value=");
        sb.append(getValue());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", logicalOperator=");
        sb.append(getLogicalOperator());
        sb.append(", operator=");
        sb.append(getOperator());
        sb.append(", cdrDetailsSid=");
        sb.append(getCdrDetailsSid());
        sb.append(", cdrModelSid=");
        sb.append(getCdrModelSid());
        sb.append(", comparison=");
        sb.append(getComparison());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(43);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.CdrDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>lineType</column-name><column-value><![CDATA[");
        sb.append(getLineType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>keyword</column-name><column-value><![CDATA[");
        sb.append(getKeyword());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemGroupMsAssociation</column-name><column-value><![CDATA[");
        sb.append(getItemGroupMsAssociation());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>value</column-name><column-value><![CDATA[");
        sb.append(getValue());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>logicalOperator</column-name><column-value><![CDATA[");
        sb.append(getLogicalOperator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>operator</column-name><column-value><![CDATA[");
        sb.append(getOperator());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cdrDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getCdrDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cdrModelSid</column-name><column-value><![CDATA[");
        sb.append(getCdrModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>comparison</column-name><column-value><![CDATA[");
        sb.append(getComparison());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
