<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<sql>
<entity id="ch.saveToMainTable">
<query> <![CDATA[
		
                MERGE CH_SALES_PROJECTION_MASTER AS TARGET
		USING ( 
		SELECT PROJECTION_DETAILS_SID,
		METHODOLOGY,
		CALCULATION_PERIODS,
		CHECK_RECORD 
		FROM dbo.ST_CH_SALES_PROJECTION_MASTER
		WHERE USER_ID=?UID AND SESSION_ID=?SID
		) AS SOURCE 
		ON (TARGET.PROJECTION_DETAILS_SID=SOURCE.PROJECTION_DETAILS_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
		TARGET.METHODOLOGY=SOURCE.METHODOLOGY, 
		TARGET.CALCULATION_PERIODS=SOURCE.CALCULATION_PERIODS, 
		TARGET.CHECK_RECORD=SOURCE.CHECK_RECORD
		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_DETAILS_SID,
		SOURCE.METHODOLOGY,
                SOURCE.CHECK_RECORD,
		SOURCE.CALCULATION_PERIODS);
		
		MERGE CH_SALES_PROJECTION AS TARGET
		USING ( 
		SELECT PROJECTION_DETAILS_SID,
                GTS_SALES,
		CONTRACT_SALES,
		CONTRACT_UNITS,
		PERIOD_SID,
		PER_OF_BUSINESS,
                WAC_PRICE 
		FROM dbo.ST_CH_SALES_PROJECTION
		WHERE USER_ID=?UID AND SESSION_ID=?SID
		) AS SOURCE 
		ON (TARGET.PROJECTION_DETAILS_SID=SOURCE.PROJECTION_DETAILS_SID AND TARGET.PERIOD_SID=SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
                TARGET.GTS_SALES=SOURCE.GTS_SALES,
		TARGET.CONTRACT_SALES=SOURCE.CONTRACT_SALES,
		TARGET.CONTRACT_UNITS=SOURCE.CONTRACT_UNITS,
		TARGET.PER_OF_BUSINESS=SOURCE.PER_OF_BUSINESS,
                TARGET.WAC_PRICE=SOURCE.WAC_PRICE
		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(
                SOURCE.PROJECTION_DETAILS_SID,
                SOURCE.PERIOD_SID,
                SOURCE.GTS_SALES,
		SOURCE.PER_OF_BUSINESS,
		SOURCE.CONTRACT_SALES,
		SOURCE.CONTRACT_UNITS,
                SOURCE.WAC_PRICE);
		
		MERGE CH_ACTUAL_SALES AS TARGET
		USING ( 
		SELECT PROJECTION_DETAILS_SID,
		PERIOD_SID,
		CONTRACT_SALES,
		CONTRACT_UNITS,
		GTS_SALES, 
                PER_OF_BUSINESS
		FROM dbo.ST_CH_ACTUAL_SALES
		WHERE USER_ID=?UID AND SESSION_ID=?SID
		) AS SOURCE 
		ON (TARGET.PROJECTION_DETAILS_SID=SOURCE.PROJECTION_DETAILS_SID AND TARGET.PERIOD_SID=SOURCE.PERIOD_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET TARGET.PER_OF_BUSINESS=SOURCE.PER_OF_BUSINESS,
		TARGET.CONTRACT_SALES=SOURCE.CONTRACT_SALES,
		TARGET.CONTRACT_UNITS=SOURCE.CONTRACT_UNITS,
		TARGET.GTS_SALES=SOURCE.GTS_SALES
		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_DETAILS_SID,
		SOURCE.PERIOD_SID,
                SOURCE.GTS_SALES,
                SOURCE.PER_OF_BUSINESS,
		SOURCE.CONTRACT_SALES,
		SOURCE.CONTRACT_UNITS);
						
		MERGE CH_DISCOUNT_PROJ_MASTER AS TARGET
		USING ( 
		SELECT PROJECTION_DETAILS_SID,
		RS_MODEL_SID,
                DISCOUNT_TYPE,
                PROJECTED_TYPE,
		METHODOLOGY,
		PRICE_GROUP_TYPE,
		NET_FLAG,
		CHECK_RECORD,
		BASELINE_PERIODS,
		SELECTED_PERIODS,
                CALCULATION_PERIODS
		FROM ST_CH_DISCOUNT_PROJ_MASTER
		WHERE USER_ID=?UID AND SESSION_ID=?SID
		) AS SOURCE 
		ON (TARGET.PROJECTION_DETAILS_SID=SOURCE.PROJECTION_DETAILS_SID AND TARGET.RS_MODEL_SID=SOURCE.RS_MODEL_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
                TARGET.DISCOUNT_TYPE=SOURCE.DISCOUNT_TYPE,
                TARGET.PROJECTED_TYPE=SOURCE.PROJECTED_TYPE,
		TARGET.METHODOLOGY=SOURCE.METHODOLOGY,
		TARGET.PRICE_GROUP_TYPE=SOURCE.PRICE_GROUP_TYPE,
		TARGET.NET_FLAG=SOURCE.NET_FLAG,
		TARGET.CHECK_RECORD=SOURCE.CHECK_RECORD,
		TARGET.BASELINE_PERIODS=SOURCE.BASELINE_PERIODS,
		TARGET.SELECTED_PERIODS=SOURCE.SELECTED_PERIODS,
                TARGET.CALCULATION_PERIODS=SOURCE.CALCULATION_PERIODS
		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_DETAILS_SID,
		SOURCE.RS_MODEL_SID,
                SOURCE.PROJECTED_TYPE,
                SOURCE.DISCOUNT_TYPE,
		SOURCE.METHODOLOGY,
		SOURCE.PRICE_GROUP_TYPE,
		SOURCE.NET_FLAG,
		SOURCE.CHECK_RECORD,
		SOURCE.BASELINE_PERIODS,
		SOURCE.SELECTED_PERIODS,
                SOURCE.CALCULATION_PERIODS);
		
		MERGE CH_PROJECTION_DISCOUNT AS TARGET
		USING ( 
		SELECT PROJECTION_DETAILS_SID,
		RS_MODEL_SID,
                PERIOD_SID,
		DISCOUNT_RATE,
		DISCOUNT_AMOUNT,
                PRODUCT_GROWTH,
                ACCOUNT_GROWTH,
		PROJECTION_SALES,
		PROJECTION_RATE,
		ADJUSTMENT_TYPE,
		ADJUSTMENT_BASIS,
		ADJUSTMENT_VALUE,
		ADJUSTMENT_METHODOLOGY
		FROM ST_CH_PROJECTION_DISCOUNT
		WHERE USER_ID=?UID AND SESSION_ID=?SID
		) AS SOURCE 
		ON (TARGET.PROJECTION_DETAILS_SID=SOURCE.PROJECTION_DETAILS_SID
		AND TARGET.PERIOD_SID=SOURCE.PERIOD_SID
		AND TARGET.RS_MODEL_SID=SOURCE.RS_MODEL_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
		TARGET.DISCOUNT_RATE=SOURCE.DISCOUNT_RATE,
                TARGET.DISCOUNT_AMOUNT=SOURCE.DISCOUNT_AMOUNT,
                TARGET.PRODUCT_GROWTH=SOURCE.PRODUCT_GROWTH,
                TARGET.ACCOUNT_GROWTH=SOURCE.ACCOUNT_GROWTH,
		TARGET.PROJECTION_SALES=SOURCE.PROJECTION_SALES,
		TARGET.PROJECTION_RATE=SOURCE.PROJECTION_RATE,
		TARGET.ADJUSTMENT_TYPE=SOURCE.ADJUSTMENT_TYPE,
		TARGET.ADJUSTMENT_BASIS=SOURCE.ADJUSTMENT_BASIS,
		TARGET.ADJUSTMENT_VALUE=SOURCE.ADJUSTMENT_VALUE,
		TARGET.ADJUSTMENT_METHODOLOGY=SOURCE.ADJUSTMENT_METHODOLOGY
		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_DETAILS_SID,
                SOURCE.RS_MODEL_SID,                
                SOURCE.PERIOD_SID,
		SOURCE.DISCOUNT_RATE,
                SOURCE.DISCOUNT_AMOUNT,
                SOURCE.PRODUCT_GROWTH,
                SOURCE.ACCOUNT_GROWTH,
		SOURCE.PROJECTION_SALES,
		SOURCE.PROJECTION_RATE,
		SOURCE.ADJUSTMENT_TYPE,
		SOURCE.ADJUSTMENT_BASIS,
		SOURCE.ADJUSTMENT_VALUE,
		SOURCE.ADJUSTMENT_METHODOLOGY);
		
		MERGE CH_ACTUAL_DISCOUNT AS TARGET
		USING ( 
		SELECT PROJECTION_DETAILS_SID,
		RS_MODEL_SID,
		PERIOD_SID,
		ACTUAL_SALES,
		ACTUAL_RATE
		FROM ST_CH_ACTUAL_DISCOUNT
		WHERE USER_ID=?UID AND SESSION_ID=?SID
		) AS SOURCE 
		ON (TARGET.PROJECTION_DETAILS_SID=SOURCE.PROJECTION_DETAILS_SID
		AND TARGET.PERIOD_SID=SOURCE.PERIOD_SID
		AND TARGET.RS_MODEL_SID=SOURCE.RS_MODEL_SID)
		WHEN MATCHED 
		THEN 
		UPDATE SET 
		TARGET.ACTUAL_SALES=SOURCE.ACTUAL_SALES,
		TARGET.ACTUAL_RATE=SOURCE.ACTUAL_RATE
		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(SOURCE.PROJECTION_DETAILS_SID,
		SOURCE.RS_MODEL_SID,
		SOURCE.PERIOD_SID,
		SOURCE.ACTUAL_SALES,
		SOURCE.ACTUAL_RATE);
		
		MERGE CH_ASSUMPTIONS AS TARGET
		USING ( 
		SELECT CH_ASSUMPTIONS_SID,
		PROJECTION_DETAILS_SID,
		QUARTER,
		YEAR,
		GROSS_TRADE_SALES,
		TOTAL_DISCOUNT_PERCENT_PRIOR,
		TOTAL_DISCOUNT_PERCENT_PROJECTED,
		TOTAL_DISCOUNT_PERCENT_CHANGE,
		TOTAL_DISCOUNT_PRIOR,
		TOTAL_DISCOUNT_PROJECTED,
		TOTAL_DISCOUNT_CHANGE,
		REASON_CODES,
		COMMENTARY,
		CAM_ID,
		PARENT
		FROM ST_CH_ASSUMPTIONS
		WHERE USER_ID=?UID AND SESSION_ID=?SID
		) AS SOURCE 
		ON (TARGET.PROJECTION_DETAILS_SID=SOURCE.PROJECTION_DETAILS_SID 
		AND TARGET.QUARTER=SOURCE.QUARTER 
                AND TARGET.YEAR=SOURCE.YEAR 
		AND SOURCE.CH_ASSUMPTIONS_SID=TARGET.CH_ASSUMPTIONS_SID) 
		WHEN MATCHED 
		THEN 
		UPDATE SET 
		TARGET.GROSS_TRADE_SALES=SOURCE.GROSS_TRADE_SALES, 
		TARGET.TOTAL_DISCOUNT_PERCENT_PRIOR=SOURCE.TOTAL_DISCOUNT_PERCENT_PRIOR, 
		TARGET.TOTAL_DISCOUNT_PERCENT_PROJECTED=SOURCE.TOTAL_DISCOUNT_PERCENT_PROJECTED, 
		TARGET.TOTAL_DISCOUNT_PERCENT_CHANGE=SOURCE.TOTAL_DISCOUNT_PERCENT_CHANGE, 
		TARGET.TOTAL_DISCOUNT_PRIOR=SOURCE.TOTAL_DISCOUNT_PRIOR, 
		TARGET.TOTAL_DISCOUNT_PROJECTED=SOURCE.TOTAL_DISCOUNT_PROJECTED, 
		TARGET.TOTAL_DISCOUNT_CHANGE=SOURCE.TOTAL_DISCOUNT_CHANGE, 
		TARGET.REASON_CODES=SOURCE.REASON_CODES, 
		TARGET.COMMENTARY=SOURCE.COMMENTARY, 
		TARGET.CAM_ID=SOURCE.CAM_ID,
		TARGET.PARENT=SOURCE.PARENT
		WHEN NOT MATCHED BY TARGET
		THEN 
		INSERT VALUES(
		SOURCE.PROJECTION_DETAILS_SID,
		SOURCE.QUARTER,
		SOURCE.YEAR,
		SOURCE.GROSS_TRADE_SALES,
		SOURCE.TOTAL_DISCOUNT_PERCENT_PRIOR,
		SOURCE.TOTAL_DISCOUNT_PERCENT_PROJECTED,
		SOURCE.TOTAL_DISCOUNT_PERCENT_CHANGE,
		SOURCE.TOTAL_DISCOUNT_PRIOR,
		SOURCE.TOTAL_DISCOUNT_PROJECTED,
		SOURCE.TOTAL_DISCOUNT_CHANGE,
		SOURCE.REASON_CODES,
		SOURCE.COMMENTARY,
		SOURCE.CAM_ID,
		SOURCE.PARENT);
		
    ]]> </query>
</entity>
<entity id="ch.dleteTemp">
<query> <![CDATA[
		
		DELETE FROM dbo.ST_CH_SALES_PROJECTION WHERE USER_ID=?UID AND SESSION_ID=?SID;
		DELETE FROM dbo.ST_CH_ACTUAL_SALES WHERE USER_ID=?UID AND SESSION_ID=?SID;
                DELETE FROM dbo.ST_CH_SALES_PROJECTION_MASTER WHERE USER_ID=?UID AND SESSION_ID=?SID;
		DELETE FROM dbo.ST_CH_DISCOUNT_PROJ_MASTER WHERE USER_ID=?UID AND SESSION_ID=?SID;
		DELETE FROM dbo.ST_CH_ACTUAL_DISCOUNT WHERE USER_ID=?UID AND SESSION_ID=?SID;
		DELETE FROM dbo.ST_CH_PROJECTION_DISCOUNT WHERE USER_ID=?UID AND SESSION_ID=?SID;
		DELETE FROM dbo.ST_CH_ASSUMPTIONS WHERE USER_ID=?UID AND SESSION_ID=?SID;
		
    ]]> </query>
</entity>
<entity id="ch.dleteMasterTables">
<query> <![CDATA[
		
		DELETE FROM dbo.CH_SALES_PROJECTION WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		DELETE FROM dbo.CH_ACTUAL_SALES WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
                DELETE FROM dbo.CH_SALES_PROJECTION_MASTER WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		
		DELETE FROM dbo.CH_DISCOUNT_PROJ_MASTER WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		DELETE FROM dbo.CH_ACTUAL_DISCOUNT WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		DELETE FROM dbo.CH_PROJECTION_DISCOUNT WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		
		DELETE FROM dbo.CH_ASSUMPTIONS WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		
    ]]> </query>
</entity>
<entity id="ch.dleteTempProjectionTables">
<query> <![CDATA[
		
		DELETE FROM dbo.ST_CH_SALES_PROJECTION WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		DELETE FROM dbo.ST_CH_ACTUAL_SALES WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
                DELETE FROM dbo.ST_CH_SALES_PROJECTION_MASTER WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		
		DELETE FROM dbo.ST_CH_PROJECTION_DISCOUNT WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		DELETE FROM dbo.ST_CH_ACTUAL_DISCOUNT WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		DELETE FROM dbo.ST_CH_DISCOUNT_PROJ_MASTER WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		
		DELETE FROM dbo.ST_CH_ASSUMPTIONS WHERE PROJECTION_DETAILS_SID in 
		(SELECT PROJECTION_DETAILS_SID FROM dbo.PROJECTION_DETAILS WHERE PROJECTION_MASTER_SID=?PID);
		
    ]]> </query>
</entity>
<entity id="ch.deleteCustomViewTables">
<query> <![CDATA[
		
		DELETE FROM dbo.CUSTOM_VIEW_DETAILS WHERE CUSTOM_VIEW_MASTER_SID in 
		(SELECT CUSTOM_VIEW_MASTER_SID FROM CUSTOM_VIEW_MASTER WHERE PROJECTION_MASTER_SID=?PID);
		DELETE FROM dbo.CUSTOM_VIEW_MASTER WHERE PROJECTION_MASTER_SID =?PID;
		
    ]]> </query>
</entity>
<entity id="ch.deleteProjectionSelection">
<query> <![CDATA[
		
		DELETE FROM dbo.NM_PROJECTION_SELECTION WHERE PROJECTION_MASTER_SID =?PID;
		
    ]]> </query>
</entity>
<entity id="ch.clearTemp">
<query> <![CDATA[
		
		DELETE FROM dbo.ST_CH_SALES_PROJECTION WHERE LAST_MODIFIED_DATE<'?LD';
		DELETE FROM dbo.ST_CH_ACTUAL_SALES WHERE LAST_MODIFIED_DATE<'?LD';
                DELETE FROM dbo.ST_CH_SALES_PROJECTION_MASTER WHERE LAST_MODIFIED_DATE<'?LD';
		
		DELETE FROM dbo.ST_CH_ACTUAL_DISCOUNT WHERE LAST_MODIFIED_DATE<'?LD';
		DELETE FROM dbo.ST_CH_DISCOUNT_PROJ_MASTER WHERE LAST_MODIFIED_DATE<'?LD';
		DELETE FROM dbo.ST_CH_PROJECTION_DISCOUNT WHERE LAST_MODIFIED_DATE<'?LD';
		
		DELETE FROM dbo.ST_CH_ASSUMPTIONS WHERE LAST_MODIFIED_DATE<'?LD';
		
    ]]> </query>
</entity>
<entity id="ch.tempInsert">
<query> <![CDATA[
		
	    INSERT INTO ST_CH_SALES_PROJECTION_MASTER(
			PROJECTION_DETAILS_SID,
                        METHODOLOGY,
                        CALCULATION_PERIODS,
                        CHECK_RECORD, 
			USER_ID,
			SESSION_ID,
			LAST_MODIFIED_DATE)
		SELECT A.PROJECTION_DETAILS_SID,
                        A.METHODOLOGY,
                        A.CALCULATION_PERIODS,
                        A.CHECK_RECORD, 
			?UID USER_ID,
			?SID SESSION_ID,
			'?LD' LAST_MODIFIED_DATE 
		FROM dbo.CH_SALES_PROJECTION_MASTER A,
			dbo.PROJECTION_DETAILS B
		WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
			AND B.PROJECTION_MASTER_SID=?PID;	
			
		INSERT INTO dbo.ST_CH_SALES_PROJECTION(
			PROJECTION_DETAILS_SID,
                        GTS_SALES,
                        CONTRACT_SALES,
                        CONTRACT_UNITS,
                        PERIOD_SID,
                        PER_OF_BUSINESS,
                        WAC_PRICE,
			USER_ID,
			SESSION_ID,
			LAST_MODIFIED_DATE )
		SELECT A.PROJECTION_DETAILS_SID,
                        A.GTS_SALES,
                        A.CONTRACT_SALES,
                        A.CONTRACT_UNITS,
                        A.PERIOD_SID,
                        A.PER_OF_BUSINESS,
                        A.WAC_PRICE,
			?UID USER_ID,
			?SID SESSION_ID,
			'?LD' LAST_MODIFIED_DATE 
		FROM dbo.CH_SALES_PROJECTION A,
			dbo.PROJECTION_DETAILS B
		WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
			AND B.PROJECTION_MASTER_SID=?PID;
			
		INSERT INTO dbo.ST_CH_ACTUAL_SALES(
			PROJECTION_DETAILS_SID,
                        PERIOD_SID,
                        CONTRACT_SALES,
                        CONTRACT_UNITS,
                        GTS_SALES,
                        PER_OF_BUSINESS,
			USER_ID,
			SESSION_ID,
			LAST_MODIFIED_DATE)
		SELECT A.PROJECTION_DETAILS_SID,
                        A.PERIOD_SID,
                        A.CONTRACT_SALES,
                        A.CONTRACT_UNITS,
                        A.GTS_SALES,
                        A.PER_OF_BUSINESS,
			?UID USER_ID,
			?SID SESSION_ID,
			'?LD' LAST_MODIFIED_DATE 
		FROM dbo.CH_ACTUAL_SALES A,
			dbo.PROJECTION_DETAILS B
		WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
			AND B.PROJECTION_MASTER_SID=?PID;	
			
		INSERT INTO dbo.ST_CH_DISCOUNT_PROJ_MASTER(
			PROJECTION_DETAILS_SID,
                        RS_MODEL_SID,
                        DISCOUNT_TYPE,
                        PROJECTED_TYPE,
                        METHODOLOGY,
                        PRICE_GROUP_TYPE,
                        NET_FLAG,
                        CHECK_RECORD,
                        BASELINE_PERIODS,
                        SELECTED_PERIODS,
                        CALCULATION_PERIODS,
			USER_ID,
			SESSION_ID,
			LAST_MODIFIED_DATE)
		SELECT A.PROJECTION_DETAILS_SID,
                        A.RS_MODEL_SID,
                        A.DISCOUNT_TYPE,
                        A.PROJECTED_TYPE,
                        A.METHODOLOGY,
                        A.PRICE_GROUP_TYPE,
                        A.NET_FLAG,
                        A.CHECK_RECORD,
                        A.BASELINE_PERIODS,
                        A.SELECTED_PERIODS,
                        A.CALCULATION_PERIODS,
			?UID USER_ID,
			?SID SESSION_ID,
			'?LD' LAST_MODIFIED_DATE 
		FROM dbo.CH_DISCOUNT_PROJ_MASTER A,
			dbo.PROJECTION_DETAILS B
		WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
			AND B.PROJECTION_MASTER_SID=?PID;
			
		INSERT INTO dbo.ST_CH_PROJECTION_DISCOUNT(
			PROJECTION_DETAILS_SID,
                        RS_MODEL_SID,
                        PERIOD_SID,
                        DISCOUNT_RATE,
                        DISCOUNT_AMOUNT,
                        PRODUCT_GROWTH,
                        ACCOUNT_GROWTH,
                        PROJECTION_SALES,
                        PROJECTION_RATE,
                        ADJUSTMENT_TYPE,
                        ADJUSTMENT_BASIS,
                        ADJUSTMENT_VALUE,
                        ADJUSTMENT_METHODOLOGY,
			USER_ID,
			SESSION_ID,
			LAST_MODIFIED_DATE)
		SELECT A.PROJECTION_DETAILS_SID,
                        A.RS_MODEL_SID,
                        A.PERIOD_SID,
                        A.DISCOUNT_RATE,
                        A.DISCOUNT_AMOUNT,
                        A.PRODUCT_GROWTH,
                        A.ACCOUNT_GROWTH,
                        A.PROJECTION_SALES,
                        A.PROJECTION_RATE,
                        A.ADJUSTMENT_TYPE,
                        A.ADJUSTMENT_BASIS,
                        A.ADJUSTMENT_VALUE,
                        A.ADJUSTMENT_METHODOLOGY,
			?UID USER_ID,
			?SID SESSION_ID,
			'?LD' LAST_MODIFIED_DATE 
		FROM dbo.CH_PROJECTION_DISCOUNT A,
			dbo.PROJECTION_DETAILS B
		WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
			AND B.PROJECTION_MASTER_SID=?PID;	
			
		INSERT INTO dbo.ST_CH_ACTUAL_DISCOUNT(
			PROJECTION_DETAILS_SID,
                        RS_MODEL_SID,
                        PERIOD_SID,
                        ACTUAL_SALES,
                        ACTUAL_RATE,
			USER_ID,
			SESSION_ID,
			LAST_MODIFIED_DATE)
		SELECT A.PROJECTION_DETAILS_SID,
                        A.RS_MODEL_SID,
                        A.PERIOD_SID,
                        A.ACTUAL_SALES,
                        A.ACTUAL_RATE,
			?UID USER_ID,
			?SID SESSION_ID,
			'?LD' LAST_MODIFIED_DATE 
		FROM dbo.CH_ACTUAL_DISCOUNT A,
			dbo.PROJECTION_DETAILS B
		WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
			AND B.PROJECTION_MASTER_SID=?PID;	
			
		INSERT INTO dbo.ST_CH_ASSUMPTIONS(
                        CH_ASSUMPTIONS_SID,
                        PROJECTION_DETAILS_SID,
                        QUARTER,
                        YEAR,
                        GROSS_TRADE_SALES,
                        TOTAL_DISCOUNT_PERCENT_PRIOR,
                        TOTAL_DISCOUNT_PERCENT_PROJECTED,
                        TOTAL_DISCOUNT_PERCENT_CHANGE,
                        TOTAL_DISCOUNT_PRIOR,
                        TOTAL_DISCOUNT_PROJECTED,
                        TOTAL_DISCOUNT_CHANGE,
                        REASON_CODES,
                        COMMENTARY,
                        CAM_ID,
                        PARENT,
                        IS_CHECKED,
			USER_ID,
			SESSION_ID)
		SELECT A.CH_ASSUMPTIONS_SID,
                        A.PROJECTION_DETAILS_SID,
                        A.QUARTER,
                        A.YEAR,
                        A.GROSS_TRADE_SALES,
                        A.TOTAL_DISCOUNT_PERCENT_PRIOR,
                        A.TOTAL_DISCOUNT_PERCENT_PROJECTED,
                        A.TOTAL_DISCOUNT_PERCENT_CHANGE,
                        A.TOTAL_DISCOUNT_PRIOR,
                        A.TOTAL_DISCOUNT_PROJECTED,
                        A.TOTAL_DISCOUNT_CHANGE,
                        A.REASON_CODES,
                        A.COMMENTARY,
                        A.CAM_ID,
                        A.PARENT,
			0 IS_CHECKED,
			?UID USER_ID,
			?SID SESSION_ID
		FROM dbo.CH_ASSUMPTIONS A,
			dbo.PROJECTION_DETAILS B
		WHERE A.PROJECTION_DETAILS_SID=B.PROJECTION_DETAILS_SID
			AND B.PROJECTION_MASTER_SID=?PID;
		
    ]]> </query>
</entity>
<entity id="ch.deleteTemp">
<query> <![CDATA[
		
		DELETE FROM dbo.ST_CH_ACTUAL_DISCOUNT WHERE USER_ID=?UID AND SESSION_ID=?SID;
		DELETE FROM dbo.ST_CH_ACTUAL_SALES WHERE USER_ID=?UID AND SESSION_ID=?SID;
                DELETE FROM dbo.ST_CH_ASSUMPTIONS WHERE USER_ID=?UID AND SESSION_ID=?SID;
                DELETE FROM dbo.ST_CH_DISCOUNT_PROJ_MASTER WHERE USER_ID=?UID AND SESSION_ID=?SID;
                DELETE FROM dbo.ST_CH_PROJECTION_DISCOUNT WHERE USER_ID=?UID AND SESSION_ID=?SID;
                DELETE FROM dbo.ST_CH_SALES_PROJECTION WHERE USER_ID=?UID AND SESSION_ID=?SID;
                DELETE FROM dbo.ST_CH_SALES_PROJECTION_MASTER WHERE USER_ID=?UID AND SESSION_ID=?SID;
		
    ]]> </query>
</entity>
</sql>
