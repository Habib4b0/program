/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.parttwo.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.parttwo.model.AccClosureMaster;
import com.stpl.app.parttwo.model.AccClosureMasterModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the AccClosureMaster service. Represents a row in the &quot;Acc_Closure_Master&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link AccClosureMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link AccClosureMasterImpl}.
 * </p>
 *
 * @author
 * @see AccClosureMasterImpl
 * @see AccClosureMaster
 * @see AccClosureMasterModel
 * @generated
 */
@ProviderType
public class AccClosureMasterModelImpl extends BaseModelImpl<AccClosureMaster>
	implements AccClosureMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a acc closure master model instance should use the {@link AccClosureMaster} interface instead.
	 */
	public static final String TABLE_NAME = "Acc_Closure_Master";
	public static final Object[][] TABLE_COLUMNS = {
			{ "SAVE_FLAG", Types.BOOLEAN },
			{ "ACCOUNT_NO", Types.VARCHAR },
			{ "TO_DATE", Types.TIMESTAMP },
			{ "ITEM_MASTER_SID", Types.INTEGER },
			{ "DESCRIPTION", Types.VARCHAR },
			{ "REPORT_NAME", Types.VARCHAR },
			{ "RS_TYPE", Types.INTEGER },
			{ "PRODUCT_IDENTIFIER", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "WORKFLOW_STATUS", Types.INTEGER },
			{ "MODULE_TYPE", Types.VARCHAR },
			{ "FROM_DATE", Types.TIMESTAMP },
			{ "CONTRACT_TYPE", Types.INTEGER },
			{ "GL_COMPANY_MASTER_SID", Types.INTEGER },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "CREATED_BY", Types.INTEGER },
			{ "CONTRACT_MASTER_SID", Types.INTEGER },
			{ "ACCRUAL_PERIOD", Types.VARCHAR },
			{ "COMPANY_GROUP_SID", Types.VARCHAR },
			{ "ACC_CLOSURE_MASTER_SID", Types.INTEGER },
			{ "RS_CATEGORY", Types.INTEGER },
			{ "ADJUSTMENT_TYPE", Types.INTEGER },
			{ "MODIFIED_BY", Types.INTEGER },
			{ "ITEM_GROUP_SID", Types.VARCHAR },
			{ "REBATE_PROGRAM_TYPE", Types.INTEGER }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("SAVE_FLAG", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("ACCOUNT_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("TO_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("DESCRIPTION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REPORT_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RS_TYPE", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("PRODUCT_IDENTIFIER", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("WORKFLOW_STATUS", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODULE_TYPE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("FROM_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CONTRACT_TYPE", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("GL_COMPANY_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("CONTRACT_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ACCRUAL_PERIOD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("COMPANY_GROUP_SID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACC_CLOSURE_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("RS_CATEGORY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ADJUSTMENT_TYPE", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ITEM_GROUP_SID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REBATE_PROGRAM_TYPE", Types.INTEGER);
	}

	public static final String TABLE_SQL_CREATE = "create table Acc_Closure_Master (SAVE_FLAG BOOLEAN,ACCOUNT_NO VARCHAR(75) null,TO_DATE DATE null,ITEM_MASTER_SID INTEGER,DESCRIPTION VARCHAR(75) null,REPORT_NAME VARCHAR(75) null,RS_TYPE INTEGER,PRODUCT_IDENTIFIER VARCHAR(75) null,MODIFIED_DATE DATE null,WORKFLOW_STATUS INTEGER,MODULE_TYPE VARCHAR(75) null,FROM_DATE DATE null,CONTRACT_TYPE INTEGER,GL_COMPANY_MASTER_SID INTEGER,CREATED_DATE DATE null,CREATED_BY INTEGER,CONTRACT_MASTER_SID INTEGER,ACCRUAL_PERIOD VARCHAR(75) null,COMPANY_GROUP_SID VARCHAR(75) null,ACC_CLOSURE_MASTER_SID INTEGER not null primary key IDENTITY,RS_CATEGORY INTEGER,ADJUSTMENT_TYPE INTEGER,MODIFIED_BY INTEGER,ITEM_GROUP_SID VARCHAR(75) null,REBATE_PROGRAM_TYPE INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table Acc_Closure_Master";
	public static final String ORDER_BY_JPQL = " ORDER BY accClosureMaster.accClosureMasterSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY Acc_Closure_Master.ACC_CLOSURE_MASTER_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.parttwo.model.AccClosureMaster"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.parttwo.model.AccClosureMaster"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.parttwo.model.AccClosureMaster"));

	public AccClosureMasterModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _accClosureMasterSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setAccClosureMasterSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _accClosureMasterSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return AccClosureMaster.class;
	}

	@Override
	public String getModelClassName() {
		return AccClosureMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("saveFlag", getSaveFlag());
		attributes.put("accountNo", getAccountNo());
		attributes.put("toDate", getToDate());
		attributes.put("itemMasterSid", getItemMasterSid());
		attributes.put("description", getDescription());
		attributes.put("reportName", getReportName());
		attributes.put("rsType", getRsType());
		attributes.put("productIdentifier", getProductIdentifier());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("workflowStatus", getWorkflowStatus());
		attributes.put("moduleType", getModuleType());
		attributes.put("fromDate", getFromDate());
		attributes.put("contractType", getContractType());
		attributes.put("glCompanyMasterSid", getGlCompanyMasterSid());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("contractMasterSid", getContractMasterSid());
		attributes.put("accrualPeriod", getAccrualPeriod());
		attributes.put("companyGroupSid", getCompanyGroupSid());
		attributes.put("accClosureMasterSid", getAccClosureMasterSid());
		attributes.put("rsCategory", getRsCategory());
		attributes.put("adjustmentType", getAdjustmentType());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("itemGroupSid", getItemGroupSid());
		attributes.put("rebateProgramType", getRebateProgramType());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Boolean saveFlag = (Boolean)attributes.get("saveFlag");

		if (saveFlag != null) {
			setSaveFlag(saveFlag);
		}

		String accountNo = (String)attributes.get("accountNo");

		if (accountNo != null) {
			setAccountNo(accountNo);
		}

		Date toDate = (Date)attributes.get("toDate");

		if (toDate != null) {
			setToDate(toDate);
		}

		Integer itemMasterSid = (Integer)attributes.get("itemMasterSid");

		if (itemMasterSid != null) {
			setItemMasterSid(itemMasterSid);
		}

		String description = (String)attributes.get("description");

		if (description != null) {
			setDescription(description);
		}

		String reportName = (String)attributes.get("reportName");

		if (reportName != null) {
			setReportName(reportName);
		}

		Integer rsType = (Integer)attributes.get("rsType");

		if (rsType != null) {
			setRsType(rsType);
		}

		String productIdentifier = (String)attributes.get("productIdentifier");

		if (productIdentifier != null) {
			setProductIdentifier(productIdentifier);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Integer workflowStatus = (Integer)attributes.get("workflowStatus");

		if (workflowStatus != null) {
			setWorkflowStatus(workflowStatus);
		}

		String moduleType = (String)attributes.get("moduleType");

		if (moduleType != null) {
			setModuleType(moduleType);
		}

		Date fromDate = (Date)attributes.get("fromDate");

		if (fromDate != null) {
			setFromDate(fromDate);
		}

		Integer contractType = (Integer)attributes.get("contractType");

		if (contractType != null) {
			setContractType(contractType);
		}

		Integer glCompanyMasterSid = (Integer)attributes.get(
				"glCompanyMasterSid");

		if (glCompanyMasterSid != null) {
			setGlCompanyMasterSid(glCompanyMasterSid);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		Integer createdBy = (Integer)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Integer contractMasterSid = (Integer)attributes.get("contractMasterSid");

		if (contractMasterSid != null) {
			setContractMasterSid(contractMasterSid);
		}

		String accrualPeriod = (String)attributes.get("accrualPeriod");

		if (accrualPeriod != null) {
			setAccrualPeriod(accrualPeriod);
		}

		String companyGroupSid = (String)attributes.get("companyGroupSid");

		if (companyGroupSid != null) {
			setCompanyGroupSid(companyGroupSid);
		}

		Integer accClosureMasterSid = (Integer)attributes.get(
				"accClosureMasterSid");

		if (accClosureMasterSid != null) {
			setAccClosureMasterSid(accClosureMasterSid);
		}

		Integer rsCategory = (Integer)attributes.get("rsCategory");

		if (rsCategory != null) {
			setRsCategory(rsCategory);
		}

		Integer adjustmentType = (Integer)attributes.get("adjustmentType");

		if (adjustmentType != null) {
			setAdjustmentType(adjustmentType);
		}

		Integer modifiedBy = (Integer)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String itemGroupSid = (String)attributes.get("itemGroupSid");

		if (itemGroupSid != null) {
			setItemGroupSid(itemGroupSid);
		}

		Integer rebateProgramType = (Integer)attributes.get("rebateProgramType");

		if (rebateProgramType != null) {
			setRebateProgramType(rebateProgramType);
		}
	}

	@Override
	public boolean getSaveFlag() {
		return _saveFlag;
	}

	@Override
	public boolean isSaveFlag() {
		return _saveFlag;
	}

	@Override
	public void setSaveFlag(boolean saveFlag) {
		_saveFlag = saveFlag;
	}

	@Override
	public String getAccountNo() {
		if (_accountNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountNo;
		}
	}

	@Override
	public void setAccountNo(String accountNo) {
		_accountNo = accountNo;
	}

	@Override
	public Date getToDate() {
		return _toDate;
	}

	@Override
	public void setToDate(Date toDate) {
		_toDate = toDate;
	}

	@Override
	public int getItemMasterSid() {
		return _itemMasterSid;
	}

	@Override
	public void setItemMasterSid(int itemMasterSid) {
		_itemMasterSid = itemMasterSid;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return StringPool.BLANK;
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		_description = description;
	}

	@Override
	public String getReportName() {
		if (_reportName == null) {
			return StringPool.BLANK;
		}
		else {
			return _reportName;
		}
	}

	@Override
	public void setReportName(String reportName) {
		_reportName = reportName;
	}

	@Override
	public int getRsType() {
		return _rsType;
	}

	@Override
	public void setRsType(int rsType) {
		_rsType = rsType;
	}

	@Override
	public String getProductIdentifier() {
		if (_productIdentifier == null) {
			return StringPool.BLANK;
		}
		else {
			return _productIdentifier;
		}
	}

	@Override
	public void setProductIdentifier(String productIdentifier) {
		_productIdentifier = productIdentifier;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public int getWorkflowStatus() {
		return _workflowStatus;
	}

	@Override
	public void setWorkflowStatus(int workflowStatus) {
		_workflowStatus = workflowStatus;
	}

	@Override
	public String getModuleType() {
		if (_moduleType == null) {
			return StringPool.BLANK;
		}
		else {
			return _moduleType;
		}
	}

	@Override
	public void setModuleType(String moduleType) {
		_moduleType = moduleType;
	}

	@Override
	public Date getFromDate() {
		return _fromDate;
	}

	@Override
	public void setFromDate(Date fromDate) {
		_fromDate = fromDate;
	}

	@Override
	public int getContractType() {
		return _contractType;
	}

	@Override
	public void setContractType(int contractType) {
		_contractType = contractType;
	}

	@Override
	public int getGlCompanyMasterSid() {
		return _glCompanyMasterSid;
	}

	@Override
	public void setGlCompanyMasterSid(int glCompanyMasterSid) {
		_glCompanyMasterSid = glCompanyMasterSid;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public int getCreatedBy() {
		return _createdBy;
	}

	@Override
	public void setCreatedBy(int createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public int getContractMasterSid() {
		return _contractMasterSid;
	}

	@Override
	public void setContractMasterSid(int contractMasterSid) {
		_contractMasterSid = contractMasterSid;
	}

	@Override
	public String getAccrualPeriod() {
		if (_accrualPeriod == null) {
			return StringPool.BLANK;
		}
		else {
			return _accrualPeriod;
		}
	}

	@Override
	public void setAccrualPeriod(String accrualPeriod) {
		_accrualPeriod = accrualPeriod;
	}

	@Override
	public String getCompanyGroupSid() {
		return _companyGroupSid;
	}

	@Override
	public void setCompanyGroupSid(String companyGroupSid) {
		_companyGroupSid = companyGroupSid;
	}

	@Override
	public int getAccClosureMasterSid() {
		return _accClosureMasterSid;
	}

	@Override
	public void setAccClosureMasterSid(int accClosureMasterSid) {
		_accClosureMasterSid = accClosureMasterSid;
	}

	@Override
	public int getRsCategory() {
		return _rsCategory;
	}

	@Override
	public void setRsCategory(int rsCategory) {
		_rsCategory = rsCategory;
	}

	@Override
	public int getAdjustmentType() {
		return _adjustmentType;
	}

	@Override
	public void setAdjustmentType(int adjustmentType) {
		_adjustmentType = adjustmentType;
	}

	@Override
	public int getModifiedBy() {
		return _modifiedBy;
	}

	@Override
	public void setModifiedBy(int modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getItemGroupSid() {
		return _itemGroupSid;
	}

	@Override
	public void setItemGroupSid(String itemGroupSid) {
		_itemGroupSid = itemGroupSid;
	}

	@Override
	public int getRebateProgramType() {
		return _rebateProgramType;
	}

	@Override
	public void setRebateProgramType(int rebateProgramType) {
		_rebateProgramType = rebateProgramType;
	}

	@Override
	public AccClosureMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (AccClosureMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		AccClosureMasterImpl accClosureMasterImpl = new AccClosureMasterImpl();

		accClosureMasterImpl.setSaveFlag(getSaveFlag());
		accClosureMasterImpl.setAccountNo(getAccountNo());
		accClosureMasterImpl.setToDate(getToDate());
		accClosureMasterImpl.setItemMasterSid(getItemMasterSid());
		accClosureMasterImpl.setDescription(getDescription());
		accClosureMasterImpl.setReportName(getReportName());
		accClosureMasterImpl.setRsType(getRsType());
		accClosureMasterImpl.setProductIdentifier(getProductIdentifier());
		accClosureMasterImpl.setModifiedDate(getModifiedDate());
		accClosureMasterImpl.setWorkflowStatus(getWorkflowStatus());
		accClosureMasterImpl.setModuleType(getModuleType());
		accClosureMasterImpl.setFromDate(getFromDate());
		accClosureMasterImpl.setContractType(getContractType());
		accClosureMasterImpl.setGlCompanyMasterSid(getGlCompanyMasterSid());
		accClosureMasterImpl.setCreatedDate(getCreatedDate());
		accClosureMasterImpl.setCreatedBy(getCreatedBy());
		accClosureMasterImpl.setContractMasterSid(getContractMasterSid());
		accClosureMasterImpl.setAccrualPeriod(getAccrualPeriod());
		accClosureMasterImpl.setCompanyGroupSid(getCompanyGroupSid());
		accClosureMasterImpl.setAccClosureMasterSid(getAccClosureMasterSid());
		accClosureMasterImpl.setRsCategory(getRsCategory());
		accClosureMasterImpl.setAdjustmentType(getAdjustmentType());
		accClosureMasterImpl.setModifiedBy(getModifiedBy());
		accClosureMasterImpl.setItemGroupSid(getItemGroupSid());
		accClosureMasterImpl.setRebateProgramType(getRebateProgramType());

		accClosureMasterImpl.resetOriginalValues();

		return accClosureMasterImpl;
	}

	@Override
	public int compareTo(AccClosureMaster accClosureMaster) {
		int primaryKey = accClosureMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof AccClosureMaster)) {
			return false;
		}

		AccClosureMaster accClosureMaster = (AccClosureMaster)obj;

		int primaryKey = accClosureMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<AccClosureMaster> toCacheModel() {
		AccClosureMasterCacheModel accClosureMasterCacheModel = new AccClosureMasterCacheModel();

		accClosureMasterCacheModel.saveFlag = getSaveFlag();

		accClosureMasterCacheModel.accountNo = getAccountNo();

		String accountNo = accClosureMasterCacheModel.accountNo;

		if ((accountNo != null) && (accountNo.length() == 0)) {
			accClosureMasterCacheModel.accountNo = null;
		}

		Date toDate = getToDate();

		if (toDate != null) {
			accClosureMasterCacheModel.toDate = toDate.getTime();
		}
		else {
			accClosureMasterCacheModel.toDate = Long.MIN_VALUE;
		}

		accClosureMasterCacheModel.itemMasterSid = getItemMasterSid();

		accClosureMasterCacheModel.description = getDescription();

		String description = accClosureMasterCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			accClosureMasterCacheModel.description = null;
		}

		accClosureMasterCacheModel.reportName = getReportName();

		String reportName = accClosureMasterCacheModel.reportName;

		if ((reportName != null) && (reportName.length() == 0)) {
			accClosureMasterCacheModel.reportName = null;
		}

		accClosureMasterCacheModel.rsType = getRsType();

		accClosureMasterCacheModel.productIdentifier = getProductIdentifier();

		String productIdentifier = accClosureMasterCacheModel.productIdentifier;

		if ((productIdentifier != null) && (productIdentifier.length() == 0)) {
			accClosureMasterCacheModel.productIdentifier = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			accClosureMasterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			accClosureMasterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		accClosureMasterCacheModel.workflowStatus = getWorkflowStatus();

		accClosureMasterCacheModel.moduleType = getModuleType();

		String moduleType = accClosureMasterCacheModel.moduleType;

		if ((moduleType != null) && (moduleType.length() == 0)) {
			accClosureMasterCacheModel.moduleType = null;
		}

		Date fromDate = getFromDate();

		if (fromDate != null) {
			accClosureMasterCacheModel.fromDate = fromDate.getTime();
		}
		else {
			accClosureMasterCacheModel.fromDate = Long.MIN_VALUE;
		}

		accClosureMasterCacheModel.contractType = getContractType();

		accClosureMasterCacheModel.glCompanyMasterSid = getGlCompanyMasterSid();

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			accClosureMasterCacheModel.createdDate = createdDate.getTime();
		}
		else {
			accClosureMasterCacheModel.createdDate = Long.MIN_VALUE;
		}

		accClosureMasterCacheModel.createdBy = getCreatedBy();

		accClosureMasterCacheModel.contractMasterSid = getContractMasterSid();

		accClosureMasterCacheModel.accrualPeriod = getAccrualPeriod();

		String accrualPeriod = accClosureMasterCacheModel.accrualPeriod;

		if ((accrualPeriod != null) && (accrualPeriod.length() == 0)) {
			accClosureMasterCacheModel.accrualPeriod = null;
		}

		accClosureMasterCacheModel.companyGroupSid = getCompanyGroupSid();

		String companyGroupSid = accClosureMasterCacheModel.companyGroupSid;

		if ((companyGroupSid != null) && (companyGroupSid.length() == 0)) {
			accClosureMasterCacheModel.companyGroupSid = null;
		}

		accClosureMasterCacheModel.accClosureMasterSid = getAccClosureMasterSid();

		accClosureMasterCacheModel.rsCategory = getRsCategory();

		accClosureMasterCacheModel.adjustmentType = getAdjustmentType();

		accClosureMasterCacheModel.modifiedBy = getModifiedBy();

		accClosureMasterCacheModel.itemGroupSid = getItemGroupSid();

		String itemGroupSid = accClosureMasterCacheModel.itemGroupSid;

		if ((itemGroupSid != null) && (itemGroupSid.length() == 0)) {
			accClosureMasterCacheModel.itemGroupSid = null;
		}

		accClosureMasterCacheModel.rebateProgramType = getRebateProgramType();

		return accClosureMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(51);

		sb.append("{saveFlag=");
		sb.append(getSaveFlag());
		sb.append(", accountNo=");
		sb.append(getAccountNo());
		sb.append(", toDate=");
		sb.append(getToDate());
		sb.append(", itemMasterSid=");
		sb.append(getItemMasterSid());
		sb.append(", description=");
		sb.append(getDescription());
		sb.append(", reportName=");
		sb.append(getReportName());
		sb.append(", rsType=");
		sb.append(getRsType());
		sb.append(", productIdentifier=");
		sb.append(getProductIdentifier());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", workflowStatus=");
		sb.append(getWorkflowStatus());
		sb.append(", moduleType=");
		sb.append(getModuleType());
		sb.append(", fromDate=");
		sb.append(getFromDate());
		sb.append(", contractType=");
		sb.append(getContractType());
		sb.append(", glCompanyMasterSid=");
		sb.append(getGlCompanyMasterSid());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", contractMasterSid=");
		sb.append(getContractMasterSid());
		sb.append(", accrualPeriod=");
		sb.append(getAccrualPeriod());
		sb.append(", companyGroupSid=");
		sb.append(getCompanyGroupSid());
		sb.append(", accClosureMasterSid=");
		sb.append(getAccClosureMasterSid());
		sb.append(", rsCategory=");
		sb.append(getRsCategory());
		sb.append(", adjustmentType=");
		sb.append(getAdjustmentType());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", itemGroupSid=");
		sb.append(getItemGroupSid());
		sb.append(", rebateProgramType=");
		sb.append(getRebateProgramType());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(79);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.parttwo.model.AccClosureMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>saveFlag</column-name><column-value><![CDATA[");
		sb.append(getSaveFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountNo</column-name><column-value><![CDATA[");
		sb.append(getAccountNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>toDate</column-name><column-value><![CDATA[");
		sb.append(getToDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemMasterSid</column-name><column-value><![CDATA[");
		sb.append(getItemMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>description</column-name><column-value><![CDATA[");
		sb.append(getDescription());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reportName</column-name><column-value><![CDATA[");
		sb.append(getReportName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsType</column-name><column-value><![CDATA[");
		sb.append(getRsType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>productIdentifier</column-name><column-value><![CDATA[");
		sb.append(getProductIdentifier());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>workflowStatus</column-name><column-value><![CDATA[");
		sb.append(getWorkflowStatus());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>moduleType</column-name><column-value><![CDATA[");
		sb.append(getModuleType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fromDate</column-name><column-value><![CDATA[");
		sb.append(getFromDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractType</column-name><column-value><![CDATA[");
		sb.append(getContractType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>glCompanyMasterSid</column-name><column-value><![CDATA[");
		sb.append(getGlCompanyMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractMasterSid</column-name><column-value><![CDATA[");
		sb.append(getContractMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accrualPeriod</column-name><column-value><![CDATA[");
		sb.append(getAccrualPeriod());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyGroupSid</column-name><column-value><![CDATA[");
		sb.append(getCompanyGroupSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accClosureMasterSid</column-name><column-value><![CDATA[");
		sb.append(getAccClosureMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rsCategory</column-name><column-value><![CDATA[");
		sb.append(getRsCategory());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>adjustmentType</column-name><column-value><![CDATA[");
		sb.append(getAdjustmentType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemGroupSid</column-name><column-value><![CDATA[");
		sb.append(getItemGroupSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>rebateProgramType</column-name><column-value><![CDATA[");
		sb.append(getRebateProgramType());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = AccClosureMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			AccClosureMaster.class
		};
	private boolean _saveFlag;
	private String _accountNo;
	private Date _toDate;
	private int _itemMasterSid;
	private String _description;
	private String _reportName;
	private int _rsType;
	private String _productIdentifier;
	private Date _modifiedDate;
	private int _workflowStatus;
	private String _moduleType;
	private Date _fromDate;
	private int _contractType;
	private int _glCompanyMasterSid;
	private Date _createdDate;
	private int _createdBy;
	private int _contractMasterSid;
	private String _accrualPeriod;
	private String _companyGroupSid;
	private int _accClosureMasterSid;
	private int _rsCategory;
	private int _adjustmentType;
	private int _modifiedBy;
	private String _itemGroupSid;
	private int _rebateProgramType;
	private AccClosureMaster _escapedModel;
}