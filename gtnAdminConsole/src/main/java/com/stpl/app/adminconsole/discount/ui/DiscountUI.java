package com.stpl.app.adminconsole.discount.ui;

import com.stpl.app.adminconsole.common.dto.SessionDTO;
import com.stpl.app.adminconsole.common.util.CommonUIUtil;
import org.jboss.logging.Logger;

import com.stpl.app.adminconsole.discount.ui.view.DiscountAddView;
import com.stpl.app.adminconsole.discount.ui.view.DiscountSearchView;
import com.stpl.app.adminconsole.util.AbstractNotificationUtils;
import com.stpl.app.adminconsole.util.ConstantsUtils;
import com.stpl.app.adminconsole.util.ErrorCodeUtil;
import com.stpl.app.adminconsole.util.ErrorCodes;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.navigator.Navigator;
import com.vaadin.server.VaadinRequest;
import com.vaadin.server.VaadinSession;
import com.vaadin.ui.UI;


/**
 * The Class DiscountUI.
 */
public class DiscountUI extends UI {

    /**
     * The navigator.
     */
    @AutoGenerated
    private Navigator navigator;

    /**
     * The Constant LOGGER.
     */
    private static final Logger LOGGER = Logger.getLogger(DiscountUI.class);
    SessionDTO sessionDTO = new SessionDTO();

    /**
     * Initialization the class.
     *
     * @param request the request
     */
    @Override
    public void init(final VaadinRequest request) {
        LOGGER.info("init method started");
        try {
            CommonUIUtil.beforeUnloadCloseUi(this, sessionDTO);
            setId("DISCOUNT");
            addStyleName("bootstrap");
            addStyleName("bootstrap-bb");
            addStyleName("bootstrap-admin");
            addStyleName("bootstrap-ac");

            final String userId = request.getRemoteUser();
            VaadinSession.getCurrent().setAttribute(ConstantsUtils.SYS_ID, 0);
            sessionDTO.setUserId(userId);
            navigator = new Navigator(this, this);
            navigator.addView(DiscountSearchView.NAME, new DiscountSearchView(sessionDTO));
            navigator.addView(DiscountAddView.NAME, new DiscountAddView(sessionDTO));
        } catch (Exception e) {
            LOGGER.error(e);
            AbstractNotificationUtils.getErrorNotification(ErrorCodeUtil.getEC(ErrorCodes.ERROR_CODE_1001), ErrorCodeUtil.getEC(ErrorCodes.ERROR_CODE_4011));
        }
        LOGGER.info("init method Ended");
    }

    /**
     * Getter for navigator.
     *
     * @return the navigator
     */
    public Navigator getNavigator() {
        return navigator;
    }

    /**
     * Setter for navigator.
     *
     * @param navigator the new navigator
     */
    public void setNavigator(final Navigator navigator) {
        this.navigator = navigator;
    }
}
