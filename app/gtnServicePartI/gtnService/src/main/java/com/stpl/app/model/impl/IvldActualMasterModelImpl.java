/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.IvldActualMaster;
import com.stpl.app.model.IvldActualMasterModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldActualMaster service. Represents a row in the &quot;IVLD_ACTUAL_MASTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link IvldActualMasterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldActualMasterImpl}.
 * </p>
 *
 * @author
 * @see IvldActualMasterImpl
 * @see IvldActualMaster
 * @see IvldActualMasterModel
 * @generated
 */
@ProviderType
public class IvldActualMasterModelImpl extends BaseModelImpl<IvldActualMaster>
	implements IvldActualMasterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ivld actual master model instance should use the {@link IvldActualMaster} interface instead.
	 */
	public static final String TABLE_NAME = "IVLD_ACTUAL_MASTER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "ACTUAL_INTFID", Types.VARCHAR },
			{ "ACCOUNT_ID", Types.VARCHAR },
			{ "PROGRAM_STATE_CODE", Types.VARCHAR },
			{ "SETTLEMENT_NO", Types.VARCHAR },
			{ "ACCRUAL_ACTUAL_END_DATE", Types.VARCHAR },
			{ "ACTUAL_ID", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "DIVISION_ID", Types.VARCHAR },
			{ "ORGANIZATION_KEY", Types.VARCHAR },
			{ "QUANTITY_INCLUSION", Types.VARCHAR },
			{ "CASH_PAID_DATE", Types.VARCHAR },
			{ "SOURCE", Types.VARCHAR },
			{ "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
			{ "ANALYSIS_CODE", Types.VARCHAR },
			{ "ACCRUAL_ACTUAL_START_DATE", Types.VARCHAR },
			{ "MODIFIED_BY", Types.VARCHAR },
			{ "SALES_AMOUNT", Types.VARCHAR },
			{ "QUANTITY", Types.VARCHAR },
			{ "SENT_OUT", Types.VARCHAR },
			{ "ACCOUNT_NO", Types.VARCHAR },
			{ "REASON_FOR_FAILURE", Types.VARCHAR },
			{ "ACCOUNT_NAME", Types.VARCHAR },
			{ "PROVISION_ID", Types.VARCHAR },
			{ "AMOUNT", Types.VARCHAR },
			{ "MARKET_ID", Types.VARCHAR },
			{ "IS_ACTIVE", Types.VARCHAR },
			{ "SETTLEMENT_METHOD_NO", Types.VARCHAR },
			{ "ITEM_IDENTIFIER_CODE_QUALIFIER", Types.VARCHAR },
			{ "PRICE_ADJUSTMENT_NAME", Types.VARCHAR },
			{ "ERROR_FIELD", Types.VARCHAR },
			{ "RECORD_SEQUENCE", Types.VARCHAR },
			{ "MANDATED_DISCOUNT_AMOUNT", Types.VARCHAR },
			{ "PARENTCOM_DIVMKT_BRAND_PRODKEY", Types.VARCHAR },
			{ "PRICE", Types.VARCHAR },
			{ "DISPENSED_DATE", Types.VARCHAR },
			{ "ITEM_ID", Types.VARCHAR },
			{ "ACCRUAL_PROCESSED", Types.VARCHAR },
			{ "UPLOAD_DATE", Types.VARCHAR },
			{ "CREATED_BY", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "INVOICE_LINE_NO", Types.VARCHAR },
			{ "ERROR_CODE", Types.VARCHAR },
			{ "INTF_INSERTED_DATE", Types.TIMESTAMP },
			{ "ITEM_NO", Types.VARCHAR },
			{ "REPROCESSED_FLAG", Types.VARCHAR },
			{ "ACCT_IDENTIFIER_CODE_QUALIFIER", Types.VARCHAR },
			{ "CONTRACT_ID", Types.VARCHAR },
			{ "BRAND_ID", Types.VARCHAR },
			{ "COM_DIV_MKT_BRAND_PROD_KEY", Types.VARCHAR },
			{ "CLAIM_INDICATOR", Types.VARCHAR },
			{ "IVLD_ACTUAL_MASTER_SID", Types.INTEGER },
			{ "BATCH_ID", Types.VARCHAR },
			{ "PROVISION_CLAIM_INDICATOR", Types.VARCHAR },
			{ "CHECK_RECORD", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("ACTUAL_INTFID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCOUNT_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROGRAM_STATE_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SETTLEMENT_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCRUAL_ACTUAL_END_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACTUAL_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("DIVISION_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ORGANIZATION_KEY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("QUANTITY_INCLUSION", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CASH_PAID_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ADD_CHG_DEL_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ANALYSIS_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCRUAL_ACTUAL_START_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SALES_AMOUNT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("QUANTITY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SENT_OUT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCOUNT_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REASON_FOR_FAILURE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCOUNT_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROVISION_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("AMOUNT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MARKET_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IS_ACTIVE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("SETTLEMENT_METHOD_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_IDENTIFIER_CODE_QUALIFIER", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE_ADJUSTMENT_NAME", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_FIELD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("RECORD_SEQUENCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MANDATED_DISCOUNT_AMOUNT", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PARENTCOM_DIVMKT_BRAND_PRODKEY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PRICE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("DISPENSED_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCRUAL_PROCESSED", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("UPLOAD_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("INVOICE_LINE_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INTF_INSERTED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ITEM_NO", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REPROCESSED_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ACCT_IDENTIFIER_CODE_QUALIFIER", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CONTRACT_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BRAND_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("COM_DIV_MKT_BRAND_PROD_KEY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CLAIM_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IVLD_ACTUAL_MASTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("PROVISION_CLAIM_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table IVLD_ACTUAL_MASTER (ACTUAL_INTFID VARCHAR(75) null,ACCOUNT_ID VARCHAR(75) null,PROGRAM_STATE_CODE VARCHAR(75) null,SETTLEMENT_NO VARCHAR(75) null,ACCRUAL_ACTUAL_END_DATE VARCHAR(75) null,ACTUAL_ID VARCHAR(75) null,MODIFIED_DATE DATE null,DIVISION_ID VARCHAR(75) null,ORGANIZATION_KEY VARCHAR(75) null,QUANTITY_INCLUSION VARCHAR(75) null,CASH_PAID_DATE VARCHAR(75) null,SOURCE VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,ANALYSIS_CODE VARCHAR(75) null,ACCRUAL_ACTUAL_START_DATE VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,SALES_AMOUNT VARCHAR(75) null,QUANTITY VARCHAR(75) null,SENT_OUT VARCHAR(75) null,ACCOUNT_NO VARCHAR(75) null,REASON_FOR_FAILURE VARCHAR(75) null,ACCOUNT_NAME VARCHAR(75) null,PROVISION_ID VARCHAR(75) null,AMOUNT VARCHAR(75) null,MARKET_ID VARCHAR(75) null,IS_ACTIVE VARCHAR(75) null,SETTLEMENT_METHOD_NO VARCHAR(75) null,ITEM_IDENTIFIER_CODE_QUALIFIER VARCHAR(75) null,PRICE_ADJUSTMENT_NAME VARCHAR(75) null,ERROR_FIELD VARCHAR(75) null,RECORD_SEQUENCE VARCHAR(75) null,MANDATED_DISCOUNT_AMOUNT VARCHAR(75) null,PARENTCOM_DIVMKT_BRAND_PRODKEY VARCHAR(75) null,PRICE VARCHAR(75) null,DISPENSED_DATE VARCHAR(75) null,ITEM_ID VARCHAR(75) null,ACCRUAL_PROCESSED VARCHAR(75) null,UPLOAD_DATE VARCHAR(75) null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,INVOICE_LINE_NO VARCHAR(75) null,ERROR_CODE VARCHAR(75) null,INTF_INSERTED_DATE DATE null,ITEM_NO VARCHAR(75) null,REPROCESSED_FLAG VARCHAR(75) null,ACCT_IDENTIFIER_CODE_QUALIFIER VARCHAR(75) null,CONTRACT_ID VARCHAR(75) null,BRAND_ID VARCHAR(75) null,COM_DIV_MKT_BRAND_PROD_KEY VARCHAR(75) null,CLAIM_INDICATOR VARCHAR(75) null,IVLD_ACTUAL_MASTER_SID INTEGER not null primary key IDENTITY,BATCH_ID VARCHAR(75) null,PROVISION_CLAIM_INDICATOR VARCHAR(75) null,CHECK_RECORD BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table IVLD_ACTUAL_MASTER";
	public static final String ORDER_BY_JPQL = " ORDER BY ivldActualMaster.ivldActualMasterSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IVLD_ACTUAL_MASTER.IVLD_ACTUAL_MASTER_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.IvldActualMaster"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.IvldActualMaster"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.IvldActualMaster"));

	public IvldActualMasterModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ivldActualMasterSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setIvldActualMasterSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ivldActualMasterSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return IvldActualMaster.class;
	}

	@Override
	public String getModelClassName() {
		return IvldActualMaster.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("actualIntfid", getActualIntfid());
		attributes.put("accountId", getAccountId());
		attributes.put("programStateCode", getProgramStateCode());
		attributes.put("settlementNo", getSettlementNo());
		attributes.put("accrualActualEndDate", getAccrualActualEndDate());
		attributes.put("actualId", getActualId());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("divisionId", getDivisionId());
		attributes.put("organizationKey", getOrganizationKey());
		attributes.put("quantityInclusion", getQuantityInclusion());
		attributes.put("cashPaidDate", getCashPaidDate());
		attributes.put("source", getSource());
		attributes.put("addChgDelIndicator", getAddChgDelIndicator());
		attributes.put("analysisCode", getAnalysisCode());
		attributes.put("accrualActualStartDate", getAccrualActualStartDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("salesAmount", getSalesAmount());
		attributes.put("quantity", getQuantity());
		attributes.put("sentOut", getSentOut());
		attributes.put("accountNo", getAccountNo());
		attributes.put("reasonForFailure", getReasonForFailure());
		attributes.put("accountName", getAccountName());
		attributes.put("provisionId", getProvisionId());
		attributes.put("amount", getAmount());
		attributes.put("marketId", getMarketId());
		attributes.put("isActive", getIsActive());
		attributes.put("settlementMethodNo", getSettlementMethodNo());
		attributes.put("itemIdentifierCodeQualifier",
			getItemIdentifierCodeQualifier());
		attributes.put("priceAdjustmentName", getPriceAdjustmentName());
		attributes.put("errorField", getErrorField());
		attributes.put("recordSequence", getRecordSequence());
		attributes.put("mandatedDiscountAmount", getMandatedDiscountAmount());
		attributes.put("parentcomDivmktBrandProdkey",
			getParentcomDivmktBrandProdkey());
		attributes.put("price", getPrice());
		attributes.put("dispensedDate", getDispensedDate());
		attributes.put("itemId", getItemId());
		attributes.put("accrualProcessed", getAccrualProcessed());
		attributes.put("uploadDate", getUploadDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("invoiceLineNo", getInvoiceLineNo());
		attributes.put("errorCode", getErrorCode());
		attributes.put("intfInsertedDate", getIntfInsertedDate());
		attributes.put("itemNo", getItemNo());
		attributes.put("reprocessedFlag", getReprocessedFlag());
		attributes.put("acctIdentifierCodeQualifier",
			getAcctIdentifierCodeQualifier());
		attributes.put("contractId", getContractId());
		attributes.put("brandId", getBrandId());
		attributes.put("comDivMktBrandProdKey", getComDivMktBrandProdKey());
		attributes.put("claimIndicator", getClaimIndicator());
		attributes.put("ivldActualMasterSid", getIvldActualMasterSid());
		attributes.put("batchId", getBatchId());
		attributes.put("provisionClaimIndicator", getProvisionClaimIndicator());
		attributes.put("checkRecord", getCheckRecord());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String actualIntfid = (String)attributes.get("actualIntfid");

		if (actualIntfid != null) {
			setActualIntfid(actualIntfid);
		}

		String accountId = (String)attributes.get("accountId");

		if (accountId != null) {
			setAccountId(accountId);
		}

		String programStateCode = (String)attributes.get("programStateCode");

		if (programStateCode != null) {
			setProgramStateCode(programStateCode);
		}

		String settlementNo = (String)attributes.get("settlementNo");

		if (settlementNo != null) {
			setSettlementNo(settlementNo);
		}

		String accrualActualEndDate = (String)attributes.get(
				"accrualActualEndDate");

		if (accrualActualEndDate != null) {
			setAccrualActualEndDate(accrualActualEndDate);
		}

		String actualId = (String)attributes.get("actualId");

		if (actualId != null) {
			setActualId(actualId);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String divisionId = (String)attributes.get("divisionId");

		if (divisionId != null) {
			setDivisionId(divisionId);
		}

		String organizationKey = (String)attributes.get("organizationKey");

		if (organizationKey != null) {
			setOrganizationKey(organizationKey);
		}

		String quantityInclusion = (String)attributes.get("quantityInclusion");

		if (quantityInclusion != null) {
			setQuantityInclusion(quantityInclusion);
		}

		String cashPaidDate = (String)attributes.get("cashPaidDate");

		if (cashPaidDate != null) {
			setCashPaidDate(cashPaidDate);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		String addChgDelIndicator = (String)attributes.get("addChgDelIndicator");

		if (addChgDelIndicator != null) {
			setAddChgDelIndicator(addChgDelIndicator);
		}

		String analysisCode = (String)attributes.get("analysisCode");

		if (analysisCode != null) {
			setAnalysisCode(analysisCode);
		}

		String accrualActualStartDate = (String)attributes.get(
				"accrualActualStartDate");

		if (accrualActualStartDate != null) {
			setAccrualActualStartDate(accrualActualStartDate);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String salesAmount = (String)attributes.get("salesAmount");

		if (salesAmount != null) {
			setSalesAmount(salesAmount);
		}

		String quantity = (String)attributes.get("quantity");

		if (quantity != null) {
			setQuantity(quantity);
		}

		String sentOut = (String)attributes.get("sentOut");

		if (sentOut != null) {
			setSentOut(sentOut);
		}

		String accountNo = (String)attributes.get("accountNo");

		if (accountNo != null) {
			setAccountNo(accountNo);
		}

		String reasonForFailure = (String)attributes.get("reasonForFailure");

		if (reasonForFailure != null) {
			setReasonForFailure(reasonForFailure);
		}

		String accountName = (String)attributes.get("accountName");

		if (accountName != null) {
			setAccountName(accountName);
		}

		String provisionId = (String)attributes.get("provisionId");

		if (provisionId != null) {
			setProvisionId(provisionId);
		}

		String amount = (String)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String marketId = (String)attributes.get("marketId");

		if (marketId != null) {
			setMarketId(marketId);
		}

		String isActive = (String)attributes.get("isActive");

		if (isActive != null) {
			setIsActive(isActive);
		}

		String settlementMethodNo = (String)attributes.get("settlementMethodNo");

		if (settlementMethodNo != null) {
			setSettlementMethodNo(settlementMethodNo);
		}

		String itemIdentifierCodeQualifier = (String)attributes.get(
				"itemIdentifierCodeQualifier");

		if (itemIdentifierCodeQualifier != null) {
			setItemIdentifierCodeQualifier(itemIdentifierCodeQualifier);
		}

		String priceAdjustmentName = (String)attributes.get(
				"priceAdjustmentName");

		if (priceAdjustmentName != null) {
			setPriceAdjustmentName(priceAdjustmentName);
		}

		String errorField = (String)attributes.get("errorField");

		if (errorField != null) {
			setErrorField(errorField);
		}

		String recordSequence = (String)attributes.get("recordSequence");

		if (recordSequence != null) {
			setRecordSequence(recordSequence);
		}

		String mandatedDiscountAmount = (String)attributes.get(
				"mandatedDiscountAmount");

		if (mandatedDiscountAmount != null) {
			setMandatedDiscountAmount(mandatedDiscountAmount);
		}

		String parentcomDivmktBrandProdkey = (String)attributes.get(
				"parentcomDivmktBrandProdkey");

		if (parentcomDivmktBrandProdkey != null) {
			setParentcomDivmktBrandProdkey(parentcomDivmktBrandProdkey);
		}

		String price = (String)attributes.get("price");

		if (price != null) {
			setPrice(price);
		}

		String dispensedDate = (String)attributes.get("dispensedDate");

		if (dispensedDate != null) {
			setDispensedDate(dispensedDate);
		}

		String itemId = (String)attributes.get("itemId");

		if (itemId != null) {
			setItemId(itemId);
		}

		String accrualProcessed = (String)attributes.get("accrualProcessed");

		if (accrualProcessed != null) {
			setAccrualProcessed(accrualProcessed);
		}

		String uploadDate = (String)attributes.get("uploadDate");

		if (uploadDate != null) {
			setUploadDate(uploadDate);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String invoiceLineNo = (String)attributes.get("invoiceLineNo");

		if (invoiceLineNo != null) {
			setInvoiceLineNo(invoiceLineNo);
		}

		String errorCode = (String)attributes.get("errorCode");

		if (errorCode != null) {
			setErrorCode(errorCode);
		}

		Date intfInsertedDate = (Date)attributes.get("intfInsertedDate");

		if (intfInsertedDate != null) {
			setIntfInsertedDate(intfInsertedDate);
		}

		String itemNo = (String)attributes.get("itemNo");

		if (itemNo != null) {
			setItemNo(itemNo);
		}

		String reprocessedFlag = (String)attributes.get("reprocessedFlag");

		if (reprocessedFlag != null) {
			setReprocessedFlag(reprocessedFlag);
		}

		String acctIdentifierCodeQualifier = (String)attributes.get(
				"acctIdentifierCodeQualifier");

		if (acctIdentifierCodeQualifier != null) {
			setAcctIdentifierCodeQualifier(acctIdentifierCodeQualifier);
		}

		String contractId = (String)attributes.get("contractId");

		if (contractId != null) {
			setContractId(contractId);
		}

		String brandId = (String)attributes.get("brandId");

		if (brandId != null) {
			setBrandId(brandId);
		}

		String comDivMktBrandProdKey = (String)attributes.get(
				"comDivMktBrandProdKey");

		if (comDivMktBrandProdKey != null) {
			setComDivMktBrandProdKey(comDivMktBrandProdKey);
		}

		String claimIndicator = (String)attributes.get("claimIndicator");

		if (claimIndicator != null) {
			setClaimIndicator(claimIndicator);
		}

		Integer ivldActualMasterSid = (Integer)attributes.get(
				"ivldActualMasterSid");

		if (ivldActualMasterSid != null) {
			setIvldActualMasterSid(ivldActualMasterSid);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String provisionClaimIndicator = (String)attributes.get(
				"provisionClaimIndicator");

		if (provisionClaimIndicator != null) {
			setProvisionClaimIndicator(provisionClaimIndicator);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}
	}

	@Override
	public String getActualIntfid() {
		if (_actualIntfid == null) {
			return StringPool.BLANK;
		}
		else {
			return _actualIntfid;
		}
	}

	@Override
	public void setActualIntfid(String actualIntfid) {
		_actualIntfid = actualIntfid;
	}

	@Override
	public String getAccountId() {
		if (_accountId == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountId;
		}
	}

	@Override
	public void setAccountId(String accountId) {
		_accountId = accountId;
	}

	@Override
	public String getProgramStateCode() {
		if (_programStateCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _programStateCode;
		}
	}

	@Override
	public void setProgramStateCode(String programStateCode) {
		_programStateCode = programStateCode;
	}

	@Override
	public String getSettlementNo() {
		if (_settlementNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _settlementNo;
		}
	}

	@Override
	public void setSettlementNo(String settlementNo) {
		_settlementNo = settlementNo;
	}

	@Override
	public String getAccrualActualEndDate() {
		if (_accrualActualEndDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _accrualActualEndDate;
		}
	}

	@Override
	public void setAccrualActualEndDate(String accrualActualEndDate) {
		_accrualActualEndDate = accrualActualEndDate;
	}

	@Override
	public String getActualId() {
		if (_actualId == null) {
			return StringPool.BLANK;
		}
		else {
			return _actualId;
		}
	}

	@Override
	public void setActualId(String actualId) {
		_actualId = actualId;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getDivisionId() {
		if (_divisionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _divisionId;
		}
	}

	@Override
	public void setDivisionId(String divisionId) {
		_divisionId = divisionId;
	}

	@Override
	public String getOrganizationKey() {
		if (_organizationKey == null) {
			return StringPool.BLANK;
		}
		else {
			return _organizationKey;
		}
	}

	@Override
	public void setOrganizationKey(String organizationKey) {
		_organizationKey = organizationKey;
	}

	@Override
	public String getQuantityInclusion() {
		if (_quantityInclusion == null) {
			return StringPool.BLANK;
		}
		else {
			return _quantityInclusion;
		}
	}

	@Override
	public void setQuantityInclusion(String quantityInclusion) {
		_quantityInclusion = quantityInclusion;
	}

	@Override
	public String getCashPaidDate() {
		if (_cashPaidDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _cashPaidDate;
		}
	}

	@Override
	public void setCashPaidDate(String cashPaidDate) {
		_cashPaidDate = cashPaidDate;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public String getAddChgDelIndicator() {
		if (_addChgDelIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _addChgDelIndicator;
		}
	}

	@Override
	public void setAddChgDelIndicator(String addChgDelIndicator) {
		_addChgDelIndicator = addChgDelIndicator;
	}

	@Override
	public String getAnalysisCode() {
		if (_analysisCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _analysisCode;
		}
	}

	@Override
	public void setAnalysisCode(String analysisCode) {
		_analysisCode = analysisCode;
	}

	@Override
	public String getAccrualActualStartDate() {
		if (_accrualActualStartDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _accrualActualStartDate;
		}
	}

	@Override
	public void setAccrualActualStartDate(String accrualActualStartDate) {
		_accrualActualStartDate = accrualActualStartDate;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getSalesAmount() {
		if (_salesAmount == null) {
			return StringPool.BLANK;
		}
		else {
			return _salesAmount;
		}
	}

	@Override
	public void setSalesAmount(String salesAmount) {
		_salesAmount = salesAmount;
	}

	@Override
	public String getQuantity() {
		if (_quantity == null) {
			return StringPool.BLANK;
		}
		else {
			return _quantity;
		}
	}

	@Override
	public void setQuantity(String quantity) {
		_quantity = quantity;
	}

	@Override
	public String getSentOut() {
		if (_sentOut == null) {
			return StringPool.BLANK;
		}
		else {
			return _sentOut;
		}
	}

	@Override
	public void setSentOut(String sentOut) {
		_sentOut = sentOut;
	}

	@Override
	public String getAccountNo() {
		if (_accountNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountNo;
		}
	}

	@Override
	public void setAccountNo(String accountNo) {
		_accountNo = accountNo;
	}

	@Override
	public String getReasonForFailure() {
		if (_reasonForFailure == null) {
			return StringPool.BLANK;
		}
		else {
			return _reasonForFailure;
		}
	}

	@Override
	public void setReasonForFailure(String reasonForFailure) {
		_reasonForFailure = reasonForFailure;
	}

	@Override
	public String getAccountName() {
		if (_accountName == null) {
			return StringPool.BLANK;
		}
		else {
			return _accountName;
		}
	}

	@Override
	public void setAccountName(String accountName) {
		_accountName = accountName;
	}

	@Override
	public String getProvisionId() {
		if (_provisionId == null) {
			return StringPool.BLANK;
		}
		else {
			return _provisionId;
		}
	}

	@Override
	public void setProvisionId(String provisionId) {
		_provisionId = provisionId;
	}

	@Override
	public String getAmount() {
		if (_amount == null) {
			return StringPool.BLANK;
		}
		else {
			return _amount;
		}
	}

	@Override
	public void setAmount(String amount) {
		_amount = amount;
	}

	@Override
	public String getMarketId() {
		if (_marketId == null) {
			return StringPool.BLANK;
		}
		else {
			return _marketId;
		}
	}

	@Override
	public void setMarketId(String marketId) {
		_marketId = marketId;
	}

	@Override
	public String getIsActive() {
		if (_isActive == null) {
			return StringPool.BLANK;
		}
		else {
			return _isActive;
		}
	}

	@Override
	public void setIsActive(String isActive) {
		_isActive = isActive;
	}

	@Override
	public String getSettlementMethodNo() {
		if (_settlementMethodNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _settlementMethodNo;
		}
	}

	@Override
	public void setSettlementMethodNo(String settlementMethodNo) {
		_settlementMethodNo = settlementMethodNo;
	}

	@Override
	public String getItemIdentifierCodeQualifier() {
		if (_itemIdentifierCodeQualifier == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemIdentifierCodeQualifier;
		}
	}

	@Override
	public void setItemIdentifierCodeQualifier(
		String itemIdentifierCodeQualifier) {
		_itemIdentifierCodeQualifier = itemIdentifierCodeQualifier;
	}

	@Override
	public String getPriceAdjustmentName() {
		if (_priceAdjustmentName == null) {
			return StringPool.BLANK;
		}
		else {
			return _priceAdjustmentName;
		}
	}

	@Override
	public void setPriceAdjustmentName(String priceAdjustmentName) {
		_priceAdjustmentName = priceAdjustmentName;
	}

	@Override
	public String getErrorField() {
		if (_errorField == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorField;
		}
	}

	@Override
	public void setErrorField(String errorField) {
		_errorField = errorField;
	}

	@Override
	public String getRecordSequence() {
		if (_recordSequence == null) {
			return StringPool.BLANK;
		}
		else {
			return _recordSequence;
		}
	}

	@Override
	public void setRecordSequence(String recordSequence) {
		_recordSequence = recordSequence;
	}

	@Override
	public String getMandatedDiscountAmount() {
		if (_mandatedDiscountAmount == null) {
			return StringPool.BLANK;
		}
		else {
			return _mandatedDiscountAmount;
		}
	}

	@Override
	public void setMandatedDiscountAmount(String mandatedDiscountAmount) {
		_mandatedDiscountAmount = mandatedDiscountAmount;
	}

	@Override
	public String getParentcomDivmktBrandProdkey() {
		if (_parentcomDivmktBrandProdkey == null) {
			return StringPool.BLANK;
		}
		else {
			return _parentcomDivmktBrandProdkey;
		}
	}

	@Override
	public void setParentcomDivmktBrandProdkey(
		String parentcomDivmktBrandProdkey) {
		_parentcomDivmktBrandProdkey = parentcomDivmktBrandProdkey;
	}

	@Override
	public String getPrice() {
		if (_price == null) {
			return StringPool.BLANK;
		}
		else {
			return _price;
		}
	}

	@Override
	public void setPrice(String price) {
		_price = price;
	}

	@Override
	public String getDispensedDate() {
		if (_dispensedDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _dispensedDate;
		}
	}

	@Override
	public void setDispensedDate(String dispensedDate) {
		_dispensedDate = dispensedDate;
	}

	@Override
	public String getItemId() {
		if (_itemId == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemId;
		}
	}

	@Override
	public void setItemId(String itemId) {
		_itemId = itemId;
	}

	@Override
	public String getAccrualProcessed() {
		if (_accrualProcessed == null) {
			return StringPool.BLANK;
		}
		else {
			return _accrualProcessed;
		}
	}

	@Override
	public void setAccrualProcessed(String accrualProcessed) {
		_accrualProcessed = accrualProcessed;
	}

	@Override
	public String getUploadDate() {
		if (_uploadDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _uploadDate;
		}
	}

	@Override
	public void setUploadDate(String uploadDate) {
		_uploadDate = uploadDate;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getInvoiceLineNo() {
		if (_invoiceLineNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _invoiceLineNo;
		}
	}

	@Override
	public void setInvoiceLineNo(String invoiceLineNo) {
		_invoiceLineNo = invoiceLineNo;
	}

	@Override
	public String getErrorCode() {
		if (_errorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorCode;
		}
	}

	@Override
	public void setErrorCode(String errorCode) {
		_errorCode = errorCode;
	}

	@Override
	public Date getIntfInsertedDate() {
		return _intfInsertedDate;
	}

	@Override
	public void setIntfInsertedDate(Date intfInsertedDate) {
		_intfInsertedDate = intfInsertedDate;
	}

	@Override
	public String getItemNo() {
		if (_itemNo == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemNo;
		}
	}

	@Override
	public void setItemNo(String itemNo) {
		_itemNo = itemNo;
	}

	@Override
	public String getReprocessedFlag() {
		if (_reprocessedFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _reprocessedFlag;
		}
	}

	@Override
	public void setReprocessedFlag(String reprocessedFlag) {
		_reprocessedFlag = reprocessedFlag;
	}

	@Override
	public String getAcctIdentifierCodeQualifier() {
		if (_acctIdentifierCodeQualifier == null) {
			return StringPool.BLANK;
		}
		else {
			return _acctIdentifierCodeQualifier;
		}
	}

	@Override
	public void setAcctIdentifierCodeQualifier(
		String acctIdentifierCodeQualifier) {
		_acctIdentifierCodeQualifier = acctIdentifierCodeQualifier;
	}

	@Override
	public String getContractId() {
		if (_contractId == null) {
			return StringPool.BLANK;
		}
		else {
			return _contractId;
		}
	}

	@Override
	public void setContractId(String contractId) {
		_contractId = contractId;
	}

	@Override
	public String getBrandId() {
		if (_brandId == null) {
			return StringPool.BLANK;
		}
		else {
			return _brandId;
		}
	}

	@Override
	public void setBrandId(String brandId) {
		_brandId = brandId;
	}

	@Override
	public String getComDivMktBrandProdKey() {
		if (_comDivMktBrandProdKey == null) {
			return StringPool.BLANK;
		}
		else {
			return _comDivMktBrandProdKey;
		}
	}

	@Override
	public void setComDivMktBrandProdKey(String comDivMktBrandProdKey) {
		_comDivMktBrandProdKey = comDivMktBrandProdKey;
	}

	@Override
	public String getClaimIndicator() {
		if (_claimIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _claimIndicator;
		}
	}

	@Override
	public void setClaimIndicator(String claimIndicator) {
		_claimIndicator = claimIndicator;
	}

	@Override
	public int getIvldActualMasterSid() {
		return _ivldActualMasterSid;
	}

	@Override
	public void setIvldActualMasterSid(int ivldActualMasterSid) {
		_ivldActualMasterSid = ivldActualMasterSid;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getProvisionClaimIndicator() {
		if (_provisionClaimIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _provisionClaimIndicator;
		}
	}

	@Override
	public void setProvisionClaimIndicator(String provisionClaimIndicator) {
		_provisionClaimIndicator = provisionClaimIndicator;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public IvldActualMaster toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (IvldActualMaster)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		IvldActualMasterImpl ivldActualMasterImpl = new IvldActualMasterImpl();

		ivldActualMasterImpl.setActualIntfid(getActualIntfid());
		ivldActualMasterImpl.setAccountId(getAccountId());
		ivldActualMasterImpl.setProgramStateCode(getProgramStateCode());
		ivldActualMasterImpl.setSettlementNo(getSettlementNo());
		ivldActualMasterImpl.setAccrualActualEndDate(getAccrualActualEndDate());
		ivldActualMasterImpl.setActualId(getActualId());
		ivldActualMasterImpl.setModifiedDate(getModifiedDate());
		ivldActualMasterImpl.setDivisionId(getDivisionId());
		ivldActualMasterImpl.setOrganizationKey(getOrganizationKey());
		ivldActualMasterImpl.setQuantityInclusion(getQuantityInclusion());
		ivldActualMasterImpl.setCashPaidDate(getCashPaidDate());
		ivldActualMasterImpl.setSource(getSource());
		ivldActualMasterImpl.setAddChgDelIndicator(getAddChgDelIndicator());
		ivldActualMasterImpl.setAnalysisCode(getAnalysisCode());
		ivldActualMasterImpl.setAccrualActualStartDate(getAccrualActualStartDate());
		ivldActualMasterImpl.setModifiedBy(getModifiedBy());
		ivldActualMasterImpl.setSalesAmount(getSalesAmount());
		ivldActualMasterImpl.setQuantity(getQuantity());
		ivldActualMasterImpl.setSentOut(getSentOut());
		ivldActualMasterImpl.setAccountNo(getAccountNo());
		ivldActualMasterImpl.setReasonForFailure(getReasonForFailure());
		ivldActualMasterImpl.setAccountName(getAccountName());
		ivldActualMasterImpl.setProvisionId(getProvisionId());
		ivldActualMasterImpl.setAmount(getAmount());
		ivldActualMasterImpl.setMarketId(getMarketId());
		ivldActualMasterImpl.setIsActive(getIsActive());
		ivldActualMasterImpl.setSettlementMethodNo(getSettlementMethodNo());
		ivldActualMasterImpl.setItemIdentifierCodeQualifier(getItemIdentifierCodeQualifier());
		ivldActualMasterImpl.setPriceAdjustmentName(getPriceAdjustmentName());
		ivldActualMasterImpl.setErrorField(getErrorField());
		ivldActualMasterImpl.setRecordSequence(getRecordSequence());
		ivldActualMasterImpl.setMandatedDiscountAmount(getMandatedDiscountAmount());
		ivldActualMasterImpl.setParentcomDivmktBrandProdkey(getParentcomDivmktBrandProdkey());
		ivldActualMasterImpl.setPrice(getPrice());
		ivldActualMasterImpl.setDispensedDate(getDispensedDate());
		ivldActualMasterImpl.setItemId(getItemId());
		ivldActualMasterImpl.setAccrualProcessed(getAccrualProcessed());
		ivldActualMasterImpl.setUploadDate(getUploadDate());
		ivldActualMasterImpl.setCreatedBy(getCreatedBy());
		ivldActualMasterImpl.setCreatedDate(getCreatedDate());
		ivldActualMasterImpl.setInvoiceLineNo(getInvoiceLineNo());
		ivldActualMasterImpl.setErrorCode(getErrorCode());
		ivldActualMasterImpl.setIntfInsertedDate(getIntfInsertedDate());
		ivldActualMasterImpl.setItemNo(getItemNo());
		ivldActualMasterImpl.setReprocessedFlag(getReprocessedFlag());
		ivldActualMasterImpl.setAcctIdentifierCodeQualifier(getAcctIdentifierCodeQualifier());
		ivldActualMasterImpl.setContractId(getContractId());
		ivldActualMasterImpl.setBrandId(getBrandId());
		ivldActualMasterImpl.setComDivMktBrandProdKey(getComDivMktBrandProdKey());
		ivldActualMasterImpl.setClaimIndicator(getClaimIndicator());
		ivldActualMasterImpl.setIvldActualMasterSid(getIvldActualMasterSid());
		ivldActualMasterImpl.setBatchId(getBatchId());
		ivldActualMasterImpl.setProvisionClaimIndicator(getProvisionClaimIndicator());
		ivldActualMasterImpl.setCheckRecord(getCheckRecord());

		ivldActualMasterImpl.resetOriginalValues();

		return ivldActualMasterImpl;
	}

	@Override
	public int compareTo(IvldActualMaster ivldActualMaster) {
		int primaryKey = ivldActualMaster.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof IvldActualMaster)) {
			return false;
		}

		IvldActualMaster ivldActualMaster = (IvldActualMaster)obj;

		int primaryKey = ivldActualMaster.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<IvldActualMaster> toCacheModel() {
		IvldActualMasterCacheModel ivldActualMasterCacheModel = new IvldActualMasterCacheModel();

		ivldActualMasterCacheModel.actualIntfid = getActualIntfid();

		String actualIntfid = ivldActualMasterCacheModel.actualIntfid;

		if ((actualIntfid != null) && (actualIntfid.length() == 0)) {
			ivldActualMasterCacheModel.actualIntfid = null;
		}

		ivldActualMasterCacheModel.accountId = getAccountId();

		String accountId = ivldActualMasterCacheModel.accountId;

		if ((accountId != null) && (accountId.length() == 0)) {
			ivldActualMasterCacheModel.accountId = null;
		}

		ivldActualMasterCacheModel.programStateCode = getProgramStateCode();

		String programStateCode = ivldActualMasterCacheModel.programStateCode;

		if ((programStateCode != null) && (programStateCode.length() == 0)) {
			ivldActualMasterCacheModel.programStateCode = null;
		}

		ivldActualMasterCacheModel.settlementNo = getSettlementNo();

		String settlementNo = ivldActualMasterCacheModel.settlementNo;

		if ((settlementNo != null) && (settlementNo.length() == 0)) {
			ivldActualMasterCacheModel.settlementNo = null;
		}

		ivldActualMasterCacheModel.accrualActualEndDate = getAccrualActualEndDate();

		String accrualActualEndDate = ivldActualMasterCacheModel.accrualActualEndDate;

		if ((accrualActualEndDate != null) &&
				(accrualActualEndDate.length() == 0)) {
			ivldActualMasterCacheModel.accrualActualEndDate = null;
		}

		ivldActualMasterCacheModel.actualId = getActualId();

		String actualId = ivldActualMasterCacheModel.actualId;

		if ((actualId != null) && (actualId.length() == 0)) {
			ivldActualMasterCacheModel.actualId = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ivldActualMasterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ivldActualMasterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ivldActualMasterCacheModel.divisionId = getDivisionId();

		String divisionId = ivldActualMasterCacheModel.divisionId;

		if ((divisionId != null) && (divisionId.length() == 0)) {
			ivldActualMasterCacheModel.divisionId = null;
		}

		ivldActualMasterCacheModel.organizationKey = getOrganizationKey();

		String organizationKey = ivldActualMasterCacheModel.organizationKey;

		if ((organizationKey != null) && (organizationKey.length() == 0)) {
			ivldActualMasterCacheModel.organizationKey = null;
		}

		ivldActualMasterCacheModel.quantityInclusion = getQuantityInclusion();

		String quantityInclusion = ivldActualMasterCacheModel.quantityInclusion;

		if ((quantityInclusion != null) && (quantityInclusion.length() == 0)) {
			ivldActualMasterCacheModel.quantityInclusion = null;
		}

		ivldActualMasterCacheModel.cashPaidDate = getCashPaidDate();

		String cashPaidDate = ivldActualMasterCacheModel.cashPaidDate;

		if ((cashPaidDate != null) && (cashPaidDate.length() == 0)) {
			ivldActualMasterCacheModel.cashPaidDate = null;
		}

		ivldActualMasterCacheModel.source = getSource();

		String source = ivldActualMasterCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			ivldActualMasterCacheModel.source = null;
		}

		ivldActualMasterCacheModel.addChgDelIndicator = getAddChgDelIndicator();

		String addChgDelIndicator = ivldActualMasterCacheModel.addChgDelIndicator;

		if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
			ivldActualMasterCacheModel.addChgDelIndicator = null;
		}

		ivldActualMasterCacheModel.analysisCode = getAnalysisCode();

		String analysisCode = ivldActualMasterCacheModel.analysisCode;

		if ((analysisCode != null) && (analysisCode.length() == 0)) {
			ivldActualMasterCacheModel.analysisCode = null;
		}

		ivldActualMasterCacheModel.accrualActualStartDate = getAccrualActualStartDate();

		String accrualActualStartDate = ivldActualMasterCacheModel.accrualActualStartDate;

		if ((accrualActualStartDate != null) &&
				(accrualActualStartDate.length() == 0)) {
			ivldActualMasterCacheModel.accrualActualStartDate = null;
		}

		ivldActualMasterCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = ivldActualMasterCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			ivldActualMasterCacheModel.modifiedBy = null;
		}

		ivldActualMasterCacheModel.salesAmount = getSalesAmount();

		String salesAmount = ivldActualMasterCacheModel.salesAmount;

		if ((salesAmount != null) && (salesAmount.length() == 0)) {
			ivldActualMasterCacheModel.salesAmount = null;
		}

		ivldActualMasterCacheModel.quantity = getQuantity();

		String quantity = ivldActualMasterCacheModel.quantity;

		if ((quantity != null) && (quantity.length() == 0)) {
			ivldActualMasterCacheModel.quantity = null;
		}

		ivldActualMasterCacheModel.sentOut = getSentOut();

		String sentOut = ivldActualMasterCacheModel.sentOut;

		if ((sentOut != null) && (sentOut.length() == 0)) {
			ivldActualMasterCacheModel.sentOut = null;
		}

		ivldActualMasterCacheModel.accountNo = getAccountNo();

		String accountNo = ivldActualMasterCacheModel.accountNo;

		if ((accountNo != null) && (accountNo.length() == 0)) {
			ivldActualMasterCacheModel.accountNo = null;
		}

		ivldActualMasterCacheModel.reasonForFailure = getReasonForFailure();

		String reasonForFailure = ivldActualMasterCacheModel.reasonForFailure;

		if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
			ivldActualMasterCacheModel.reasonForFailure = null;
		}

		ivldActualMasterCacheModel.accountName = getAccountName();

		String accountName = ivldActualMasterCacheModel.accountName;

		if ((accountName != null) && (accountName.length() == 0)) {
			ivldActualMasterCacheModel.accountName = null;
		}

		ivldActualMasterCacheModel.provisionId = getProvisionId();

		String provisionId = ivldActualMasterCacheModel.provisionId;

		if ((provisionId != null) && (provisionId.length() == 0)) {
			ivldActualMasterCacheModel.provisionId = null;
		}

		ivldActualMasterCacheModel.amount = getAmount();

		String amount = ivldActualMasterCacheModel.amount;

		if ((amount != null) && (amount.length() == 0)) {
			ivldActualMasterCacheModel.amount = null;
		}

		ivldActualMasterCacheModel.marketId = getMarketId();

		String marketId = ivldActualMasterCacheModel.marketId;

		if ((marketId != null) && (marketId.length() == 0)) {
			ivldActualMasterCacheModel.marketId = null;
		}

		ivldActualMasterCacheModel.isActive = getIsActive();

		String isActive = ivldActualMasterCacheModel.isActive;

		if ((isActive != null) && (isActive.length() == 0)) {
			ivldActualMasterCacheModel.isActive = null;
		}

		ivldActualMasterCacheModel.settlementMethodNo = getSettlementMethodNo();

		String settlementMethodNo = ivldActualMasterCacheModel.settlementMethodNo;

		if ((settlementMethodNo != null) && (settlementMethodNo.length() == 0)) {
			ivldActualMasterCacheModel.settlementMethodNo = null;
		}

		ivldActualMasterCacheModel.itemIdentifierCodeQualifier = getItemIdentifierCodeQualifier();

		String itemIdentifierCodeQualifier = ivldActualMasterCacheModel.itemIdentifierCodeQualifier;

		if ((itemIdentifierCodeQualifier != null) &&
				(itemIdentifierCodeQualifier.length() == 0)) {
			ivldActualMasterCacheModel.itemIdentifierCodeQualifier = null;
		}

		ivldActualMasterCacheModel.priceAdjustmentName = getPriceAdjustmentName();

		String priceAdjustmentName = ivldActualMasterCacheModel.priceAdjustmentName;

		if ((priceAdjustmentName != null) &&
				(priceAdjustmentName.length() == 0)) {
			ivldActualMasterCacheModel.priceAdjustmentName = null;
		}

		ivldActualMasterCacheModel.errorField = getErrorField();

		String errorField = ivldActualMasterCacheModel.errorField;

		if ((errorField != null) && (errorField.length() == 0)) {
			ivldActualMasterCacheModel.errorField = null;
		}

		ivldActualMasterCacheModel.recordSequence = getRecordSequence();

		String recordSequence = ivldActualMasterCacheModel.recordSequence;

		if ((recordSequence != null) && (recordSequence.length() == 0)) {
			ivldActualMasterCacheModel.recordSequence = null;
		}

		ivldActualMasterCacheModel.mandatedDiscountAmount = getMandatedDiscountAmount();

		String mandatedDiscountAmount = ivldActualMasterCacheModel.mandatedDiscountAmount;

		if ((mandatedDiscountAmount != null) &&
				(mandatedDiscountAmount.length() == 0)) {
			ivldActualMasterCacheModel.mandatedDiscountAmount = null;
		}

		ivldActualMasterCacheModel.parentcomDivmktBrandProdkey = getParentcomDivmktBrandProdkey();

		String parentcomDivmktBrandProdkey = ivldActualMasterCacheModel.parentcomDivmktBrandProdkey;

		if ((parentcomDivmktBrandProdkey != null) &&
				(parentcomDivmktBrandProdkey.length() == 0)) {
			ivldActualMasterCacheModel.parentcomDivmktBrandProdkey = null;
		}

		ivldActualMasterCacheModel.price = getPrice();

		String price = ivldActualMasterCacheModel.price;

		if ((price != null) && (price.length() == 0)) {
			ivldActualMasterCacheModel.price = null;
		}

		ivldActualMasterCacheModel.dispensedDate = getDispensedDate();

		String dispensedDate = ivldActualMasterCacheModel.dispensedDate;

		if ((dispensedDate != null) && (dispensedDate.length() == 0)) {
			ivldActualMasterCacheModel.dispensedDate = null;
		}

		ivldActualMasterCacheModel.itemId = getItemId();

		String itemId = ivldActualMasterCacheModel.itemId;

		if ((itemId != null) && (itemId.length() == 0)) {
			ivldActualMasterCacheModel.itemId = null;
		}

		ivldActualMasterCacheModel.accrualProcessed = getAccrualProcessed();

		String accrualProcessed = ivldActualMasterCacheModel.accrualProcessed;

		if ((accrualProcessed != null) && (accrualProcessed.length() == 0)) {
			ivldActualMasterCacheModel.accrualProcessed = null;
		}

		ivldActualMasterCacheModel.uploadDate = getUploadDate();

		String uploadDate = ivldActualMasterCacheModel.uploadDate;

		if ((uploadDate != null) && (uploadDate.length() == 0)) {
			ivldActualMasterCacheModel.uploadDate = null;
		}

		ivldActualMasterCacheModel.createdBy = getCreatedBy();

		String createdBy = ivldActualMasterCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			ivldActualMasterCacheModel.createdBy = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			ivldActualMasterCacheModel.createdDate = createdDate.getTime();
		}
		else {
			ivldActualMasterCacheModel.createdDate = Long.MIN_VALUE;
		}

		ivldActualMasterCacheModel.invoiceLineNo = getInvoiceLineNo();

		String invoiceLineNo = ivldActualMasterCacheModel.invoiceLineNo;

		if ((invoiceLineNo != null) && (invoiceLineNo.length() == 0)) {
			ivldActualMasterCacheModel.invoiceLineNo = null;
		}

		ivldActualMasterCacheModel.errorCode = getErrorCode();

		String errorCode = ivldActualMasterCacheModel.errorCode;

		if ((errorCode != null) && (errorCode.length() == 0)) {
			ivldActualMasterCacheModel.errorCode = null;
		}

		Date intfInsertedDate = getIntfInsertedDate();

		if (intfInsertedDate != null) {
			ivldActualMasterCacheModel.intfInsertedDate = intfInsertedDate.getTime();
		}
		else {
			ivldActualMasterCacheModel.intfInsertedDate = Long.MIN_VALUE;
		}

		ivldActualMasterCacheModel.itemNo = getItemNo();

		String itemNo = ivldActualMasterCacheModel.itemNo;

		if ((itemNo != null) && (itemNo.length() == 0)) {
			ivldActualMasterCacheModel.itemNo = null;
		}

		ivldActualMasterCacheModel.reprocessedFlag = getReprocessedFlag();

		String reprocessedFlag = ivldActualMasterCacheModel.reprocessedFlag;

		if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
			ivldActualMasterCacheModel.reprocessedFlag = null;
		}

		ivldActualMasterCacheModel.acctIdentifierCodeQualifier = getAcctIdentifierCodeQualifier();

		String acctIdentifierCodeQualifier = ivldActualMasterCacheModel.acctIdentifierCodeQualifier;

		if ((acctIdentifierCodeQualifier != null) &&
				(acctIdentifierCodeQualifier.length() == 0)) {
			ivldActualMasterCacheModel.acctIdentifierCodeQualifier = null;
		}

		ivldActualMasterCacheModel.contractId = getContractId();

		String contractId = ivldActualMasterCacheModel.contractId;

		if ((contractId != null) && (contractId.length() == 0)) {
			ivldActualMasterCacheModel.contractId = null;
		}

		ivldActualMasterCacheModel.brandId = getBrandId();

		String brandId = ivldActualMasterCacheModel.brandId;

		if ((brandId != null) && (brandId.length() == 0)) {
			ivldActualMasterCacheModel.brandId = null;
		}

		ivldActualMasterCacheModel.comDivMktBrandProdKey = getComDivMktBrandProdKey();

		String comDivMktBrandProdKey = ivldActualMasterCacheModel.comDivMktBrandProdKey;

		if ((comDivMktBrandProdKey != null) &&
				(comDivMktBrandProdKey.length() == 0)) {
			ivldActualMasterCacheModel.comDivMktBrandProdKey = null;
		}

		ivldActualMasterCacheModel.claimIndicator = getClaimIndicator();

		String claimIndicator = ivldActualMasterCacheModel.claimIndicator;

		if ((claimIndicator != null) && (claimIndicator.length() == 0)) {
			ivldActualMasterCacheModel.claimIndicator = null;
		}

		ivldActualMasterCacheModel.ivldActualMasterSid = getIvldActualMasterSid();

		ivldActualMasterCacheModel.batchId = getBatchId();

		String batchId = ivldActualMasterCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			ivldActualMasterCacheModel.batchId = null;
		}

		ivldActualMasterCacheModel.provisionClaimIndicator = getProvisionClaimIndicator();

		String provisionClaimIndicator = ivldActualMasterCacheModel.provisionClaimIndicator;

		if ((provisionClaimIndicator != null) &&
				(provisionClaimIndicator.length() == 0)) {
			ivldActualMasterCacheModel.provisionClaimIndicator = null;
		}

		ivldActualMasterCacheModel.checkRecord = getCheckRecord();

		return ivldActualMasterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(109);

		sb.append("{actualIntfid=");
		sb.append(getActualIntfid());
		sb.append(", accountId=");
		sb.append(getAccountId());
		sb.append(", programStateCode=");
		sb.append(getProgramStateCode());
		sb.append(", settlementNo=");
		sb.append(getSettlementNo());
		sb.append(", accrualActualEndDate=");
		sb.append(getAccrualActualEndDate());
		sb.append(", actualId=");
		sb.append(getActualId());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", divisionId=");
		sb.append(getDivisionId());
		sb.append(", organizationKey=");
		sb.append(getOrganizationKey());
		sb.append(", quantityInclusion=");
		sb.append(getQuantityInclusion());
		sb.append(", cashPaidDate=");
		sb.append(getCashPaidDate());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", addChgDelIndicator=");
		sb.append(getAddChgDelIndicator());
		sb.append(", analysisCode=");
		sb.append(getAnalysisCode());
		sb.append(", accrualActualStartDate=");
		sb.append(getAccrualActualStartDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", salesAmount=");
		sb.append(getSalesAmount());
		sb.append(", quantity=");
		sb.append(getQuantity());
		sb.append(", sentOut=");
		sb.append(getSentOut());
		sb.append(", accountNo=");
		sb.append(getAccountNo());
		sb.append(", reasonForFailure=");
		sb.append(getReasonForFailure());
		sb.append(", accountName=");
		sb.append(getAccountName());
		sb.append(", provisionId=");
		sb.append(getProvisionId());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", marketId=");
		sb.append(getMarketId());
		sb.append(", isActive=");
		sb.append(getIsActive());
		sb.append(", settlementMethodNo=");
		sb.append(getSettlementMethodNo());
		sb.append(", itemIdentifierCodeQualifier=");
		sb.append(getItemIdentifierCodeQualifier());
		sb.append(", priceAdjustmentName=");
		sb.append(getPriceAdjustmentName());
		sb.append(", errorField=");
		sb.append(getErrorField());
		sb.append(", recordSequence=");
		sb.append(getRecordSequence());
		sb.append(", mandatedDiscountAmount=");
		sb.append(getMandatedDiscountAmount());
		sb.append(", parentcomDivmktBrandProdkey=");
		sb.append(getParentcomDivmktBrandProdkey());
		sb.append(", price=");
		sb.append(getPrice());
		sb.append(", dispensedDate=");
		sb.append(getDispensedDate());
		sb.append(", itemId=");
		sb.append(getItemId());
		sb.append(", accrualProcessed=");
		sb.append(getAccrualProcessed());
		sb.append(", uploadDate=");
		sb.append(getUploadDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", invoiceLineNo=");
		sb.append(getInvoiceLineNo());
		sb.append(", errorCode=");
		sb.append(getErrorCode());
		sb.append(", intfInsertedDate=");
		sb.append(getIntfInsertedDate());
		sb.append(", itemNo=");
		sb.append(getItemNo());
		sb.append(", reprocessedFlag=");
		sb.append(getReprocessedFlag());
		sb.append(", acctIdentifierCodeQualifier=");
		sb.append(getAcctIdentifierCodeQualifier());
		sb.append(", contractId=");
		sb.append(getContractId());
		sb.append(", brandId=");
		sb.append(getBrandId());
		sb.append(", comDivMktBrandProdKey=");
		sb.append(getComDivMktBrandProdKey());
		sb.append(", claimIndicator=");
		sb.append(getClaimIndicator());
		sb.append(", ivldActualMasterSid=");
		sb.append(getIvldActualMasterSid());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", provisionClaimIndicator=");
		sb.append(getProvisionClaimIndicator());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(166);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.IvldActualMaster");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>actualIntfid</column-name><column-value><![CDATA[");
		sb.append(getActualIntfid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountId</column-name><column-value><![CDATA[");
		sb.append(getAccountId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>programStateCode</column-name><column-value><![CDATA[");
		sb.append(getProgramStateCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>settlementNo</column-name><column-value><![CDATA[");
		sb.append(getSettlementNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accrualActualEndDate</column-name><column-value><![CDATA[");
		sb.append(getAccrualActualEndDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>actualId</column-name><column-value><![CDATA[");
		sb.append(getActualId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>divisionId</column-name><column-value><![CDATA[");
		sb.append(getDivisionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>organizationKey</column-name><column-value><![CDATA[");
		sb.append(getOrganizationKey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quantityInclusion</column-name><column-value><![CDATA[");
		sb.append(getQuantityInclusion());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>cashPaidDate</column-name><column-value><![CDATA[");
		sb.append(getCashPaidDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
		sb.append(getAddChgDelIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>analysisCode</column-name><column-value><![CDATA[");
		sb.append(getAnalysisCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accrualActualStartDate</column-name><column-value><![CDATA[");
		sb.append(getAccrualActualStartDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>salesAmount</column-name><column-value><![CDATA[");
		sb.append(getSalesAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>quantity</column-name><column-value><![CDATA[");
		sb.append(getQuantity());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>sentOut</column-name><column-value><![CDATA[");
		sb.append(getSentOut());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountNo</column-name><column-value><![CDATA[");
		sb.append(getAccountNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
		sb.append(getReasonForFailure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accountName</column-name><column-value><![CDATA[");
		sb.append(getAccountName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>provisionId</column-name><column-value><![CDATA[");
		sb.append(getProvisionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>marketId</column-name><column-value><![CDATA[");
		sb.append(getMarketId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>isActive</column-name><column-value><![CDATA[");
		sb.append(getIsActive());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>settlementMethodNo</column-name><column-value><![CDATA[");
		sb.append(getSettlementMethodNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemIdentifierCodeQualifier</column-name><column-value><![CDATA[");
		sb.append(getItemIdentifierCodeQualifier());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>priceAdjustmentName</column-name><column-value><![CDATA[");
		sb.append(getPriceAdjustmentName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorField</column-name><column-value><![CDATA[");
		sb.append(getErrorField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>recordSequence</column-name><column-value><![CDATA[");
		sb.append(getRecordSequence());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>mandatedDiscountAmount</column-name><column-value><![CDATA[");
		sb.append(getMandatedDiscountAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>parentcomDivmktBrandProdkey</column-name><column-value><![CDATA[");
		sb.append(getParentcomDivmktBrandProdkey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>price</column-name><column-value><![CDATA[");
		sb.append(getPrice());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dispensedDate</column-name><column-value><![CDATA[");
		sb.append(getDispensedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemId</column-name><column-value><![CDATA[");
		sb.append(getItemId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>accrualProcessed</column-name><column-value><![CDATA[");
		sb.append(getAccrualProcessed());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uploadDate</column-name><column-value><![CDATA[");
		sb.append(getUploadDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>invoiceLineNo</column-name><column-value><![CDATA[");
		sb.append(getInvoiceLineNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorCode</column-name><column-value><![CDATA[");
		sb.append(getErrorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
		sb.append(getIntfInsertedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemNo</column-name><column-value><![CDATA[");
		sb.append(getItemNo());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
		sb.append(getReprocessedFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>acctIdentifierCodeQualifier</column-name><column-value><![CDATA[");
		sb.append(getAcctIdentifierCodeQualifier());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>contractId</column-name><column-value><![CDATA[");
		sb.append(getContractId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>brandId</column-name><column-value><![CDATA[");
		sb.append(getBrandId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>comDivMktBrandProdKey</column-name><column-value><![CDATA[");
		sb.append(getComDivMktBrandProdKey());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>claimIndicator</column-name><column-value><![CDATA[");
		sb.append(getClaimIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ivldActualMasterSid</column-name><column-value><![CDATA[");
		sb.append(getIvldActualMasterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>provisionClaimIndicator</column-name><column-value><![CDATA[");
		sb.append(getProvisionClaimIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = IvldActualMaster.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			IvldActualMaster.class
		};
	private String _actualIntfid;
	private String _accountId;
	private String _programStateCode;
	private String _settlementNo;
	private String _accrualActualEndDate;
	private String _actualId;
	private Date _modifiedDate;
	private String _divisionId;
	private String _organizationKey;
	private String _quantityInclusion;
	private String _cashPaidDate;
	private String _source;
	private String _addChgDelIndicator;
	private String _analysisCode;
	private String _accrualActualStartDate;
	private String _modifiedBy;
	private String _salesAmount;
	private String _quantity;
	private String _sentOut;
	private String _accountNo;
	private String _reasonForFailure;
	private String _accountName;
	private String _provisionId;
	private String _amount;
	private String _marketId;
	private String _isActive;
	private String _settlementMethodNo;
	private String _itemIdentifierCodeQualifier;
	private String _priceAdjustmentName;
	private String _errorField;
	private String _recordSequence;
	private String _mandatedDiscountAmount;
	private String _parentcomDivmktBrandProdkey;
	private String _price;
	private String _dispensedDate;
	private String _itemId;
	private String _accrualProcessed;
	private String _uploadDate;
	private String _createdBy;
	private Date _createdDate;
	private String _invoiceLineNo;
	private String _errorCode;
	private Date _intfInsertedDate;
	private String _itemNo;
	private String _reprocessedFlag;
	private String _acctIdentifierCodeQualifier;
	private String _contractId;
	private String _brandId;
	private String _comDivMktBrandProdKey;
	private String _claimIndicator;
	private int _ivldActualMasterSid;
	private String _batchId;
	private String _provisionClaimIndicator;
	private boolean _checkRecord;
	private IvldActualMaster _escapedModel;
}