package com.stpl.app.model.impl;

import com.stpl.app.model.IfpContractDetails;
import com.stpl.app.model.IfpContractDetailsModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IfpContractDetails service. Represents a row in the &quot;IFP_CONTRACT_DETAILS&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.IfpContractDetailsModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IfpContractDetailsImpl}.
 * </p>
 *
 * @author
 * @see IfpContractDetailsImpl
 * @see com.stpl.app.model.IfpContractDetails
 * @see com.stpl.app.model.IfpContractDetailsModel
 * @generated
 */
public class IfpContractDetailsModelImpl extends BaseModelImpl<IfpContractDetails>
    implements IfpContractDetailsModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a ifp contract details model instance should use the {@link com.stpl.app.model.IfpContractDetails} interface instead.
     */
    public static final String TABLE_NAME = "IFP_CONTRACT_DETAILS";
    public static final Object[][] TABLE_COLUMNS = {
            { "ITEM_STATUS", Types.INTEGER },
            { "ITEM_MASTER_SID", Types.INTEGER },
            { "IFP_CONTRACT_ATTACHED_DATE", Types.TIMESTAMP },
            { "ITEM_END_DATE", Types.TIMESTAMP },
            { "TOTAL_VOLUME_COMMITMENT", Types.VARCHAR },
            { "TOTAL_DOLLAR_COMMITMENT", Types.VARCHAR },
            { "IFP_CONTRACT_ATTACHED_STATUS", Types.INTEGER },
            { "MODIFIED_DATE", Types.TIMESTAMP },
            { "TOTAL_MARKETSHARE_COMMITMENT", Types.VARCHAR },
            { "RECORD_LOCK_STATUS", Types.BOOLEAN },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "CREATED_BY", Types.INTEGER },
            { "SOURCE", Types.VARCHAR },
            { "ITEM_START_DATE", Types.TIMESTAMP },
            { "BATCH_ID", Types.VARCHAR },
            { "IFP_CONTRACT_DETAILS_SID", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "INBOUND_STATUS", Types.VARCHAR },
            { "IFP_CONTRACT_SID", Types.INTEGER },
            { "COMMITMENT_PERIOD", Types.VARCHAR }
        };
    public static final String TABLE_SQL_CREATE = "create table IFP_CONTRACT_DETAILS (ITEM_STATUS INTEGER,ITEM_MASTER_SID INTEGER,IFP_CONTRACT_ATTACHED_DATE DATE null,ITEM_END_DATE DATE null,TOTAL_VOLUME_COMMITMENT VARCHAR(75) null,TOTAL_DOLLAR_COMMITMENT VARCHAR(75) null,IFP_CONTRACT_ATTACHED_STATUS INTEGER,MODIFIED_DATE DATE null,TOTAL_MARKETSHARE_COMMITMENT VARCHAR(75) null,RECORD_LOCK_STATUS BOOLEAN,CREATED_DATE DATE null,CREATED_BY INTEGER,SOURCE VARCHAR(75) null,ITEM_START_DATE DATE null,BATCH_ID VARCHAR(75) null,IFP_CONTRACT_DETAILS_SID INTEGER not null primary key IDENTITY,MODIFIED_BY INTEGER,INBOUND_STATUS VARCHAR(75) null,IFP_CONTRACT_SID INTEGER,COMMITMENT_PERIOD VARCHAR(75) null)";
    public static final String TABLE_SQL_DROP = "drop table IFP_CONTRACT_DETAILS";
    public static final String ORDER_BY_JPQL = " ORDER BY ifpContractDetails.ifpContractDetailsSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY IFP_CONTRACT_DETAILS.IFP_CONTRACT_DETAILS_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.IfpContractDetails"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.IfpContractDetails"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.column.bitmask.enabled.com.stpl.app.model.IfpContractDetails"),
            true);
    public static long IFPCONTRACTSID_COLUMN_BITMASK = 1L;
    public static long ITEMMASTERSID_COLUMN_BITMASK = 2L;
    public static long IFPCONTRACTDETAILSSID_COLUMN_BITMASK = 4L;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.IfpContractDetails"));
    private static ClassLoader _classLoader = IfpContractDetails.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            IfpContractDetails.class
        };
    private int _itemStatus;
    private int _itemMasterSid;
    private int _originalItemMasterSid;
    private boolean _setOriginalItemMasterSid;
    private Date _ifpContractAttachedDate;
    private Date _itemEndDate;
    private String _totalVolumeCommitment;
    private String _totalDollarCommitment;
    private int _ifpContractAttachedStatus;
    private Date _modifiedDate;
    private String _totalMarketshareCommitment;
    private boolean _recordLockStatus;
    private Date _createdDate;
    private int _createdBy;
    private String _source;
    private Date _itemStartDate;
    private String _batchId;
    private int _ifpContractDetailsSid;
    private int _modifiedBy;
    private String _inboundStatus;
    private int _ifpContractSid;
    private int _originalIfpContractSid;
    private boolean _setOriginalIfpContractSid;
    private String _commitmentPeriod;
    private long _columnBitmask;
    private IfpContractDetails _escapedModel;

    public IfpContractDetailsModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _ifpContractDetailsSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setIfpContractDetailsSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _ifpContractDetailsSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return IfpContractDetails.class;
    }

    @Override
    public String getModelClassName() {
        return IfpContractDetails.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("itemStatus", getItemStatus());
        attributes.put("itemMasterSid", getItemMasterSid());
        attributes.put("ifpContractAttachedDate", getIfpContractAttachedDate());
        attributes.put("itemEndDate", getItemEndDate());
        attributes.put("totalVolumeCommitment", getTotalVolumeCommitment());
        attributes.put("totalDollarCommitment", getTotalDollarCommitment());
        attributes.put("ifpContractAttachedStatus",
            getIfpContractAttachedStatus());
        attributes.put("modifiedDate", getModifiedDate());
        attributes.put("totalMarketshareCommitment",
            getTotalMarketshareCommitment());
        attributes.put("recordLockStatus", getRecordLockStatus());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("createdBy", getCreatedBy());
        attributes.put("source", getSource());
        attributes.put("itemStartDate", getItemStartDate());
        attributes.put("batchId", getBatchId());
        attributes.put("ifpContractDetailsSid", getIfpContractDetailsSid());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("inboundStatus", getInboundStatus());
        attributes.put("ifpContractSid", getIfpContractSid());
        attributes.put("commitmentPeriod", getCommitmentPeriod());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer itemStatus = (Integer) attributes.get("itemStatus");

        if (itemStatus != null) {
            setItemStatus(itemStatus);
        }

        Integer itemMasterSid = (Integer) attributes.get("itemMasterSid");

        if (itemMasterSid != null) {
            setItemMasterSid(itemMasterSid);
        }

        Date ifpContractAttachedDate = (Date) attributes.get(
                "ifpContractAttachedDate");

        if (ifpContractAttachedDate != null) {
            setIfpContractAttachedDate(ifpContractAttachedDate);
        }

        Date itemEndDate = (Date) attributes.get("itemEndDate");

        if (itemEndDate != null) {
            setItemEndDate(itemEndDate);
        }

        String totalVolumeCommitment = (String) attributes.get(
                "totalVolumeCommitment");

        if (totalVolumeCommitment != null) {
            setTotalVolumeCommitment(totalVolumeCommitment);
        }

        String totalDollarCommitment = (String) attributes.get(
                "totalDollarCommitment");

        if (totalDollarCommitment != null) {
            setTotalDollarCommitment(totalDollarCommitment);
        }

        Integer ifpContractAttachedStatus = (Integer) attributes.get(
                "ifpContractAttachedStatus");

        if (ifpContractAttachedStatus != null) {
            setIfpContractAttachedStatus(ifpContractAttachedStatus);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }

        String totalMarketshareCommitment = (String) attributes.get(
                "totalMarketshareCommitment");

        if (totalMarketshareCommitment != null) {
            setTotalMarketshareCommitment(totalMarketshareCommitment);
        }

        Boolean recordLockStatus = (Boolean) attributes.get("recordLockStatus");

        if (recordLockStatus != null) {
            setRecordLockStatus(recordLockStatus);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        String source = (String) attributes.get("source");

        if (source != null) {
            setSource(source);
        }

        Date itemStartDate = (Date) attributes.get("itemStartDate");

        if (itemStartDate != null) {
            setItemStartDate(itemStartDate);
        }

        String batchId = (String) attributes.get("batchId");

        if (batchId != null) {
            setBatchId(batchId);
        }

        Integer ifpContractDetailsSid = (Integer) attributes.get(
                "ifpContractDetailsSid");

        if (ifpContractDetailsSid != null) {
            setIfpContractDetailsSid(ifpContractDetailsSid);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String inboundStatus = (String) attributes.get("inboundStatus");

        if (inboundStatus != null) {
            setInboundStatus(inboundStatus);
        }

        Integer ifpContractSid = (Integer) attributes.get("ifpContractSid");

        if (ifpContractSid != null) {
            setIfpContractSid(ifpContractSid);
        }

        String commitmentPeriod = (String) attributes.get("commitmentPeriod");

        if (commitmentPeriod != null) {
            setCommitmentPeriod(commitmentPeriod);
        }
    }

    @Override
    public int getItemStatus() {
        return _itemStatus;
    }

    @Override
    public void setItemStatus(int itemStatus) {
        _itemStatus = itemStatus;
    }

    @Override
    public int getItemMasterSid() {
        return _itemMasterSid;
    }

    @Override
    public void setItemMasterSid(int itemMasterSid) {
        _columnBitmask |= ITEMMASTERSID_COLUMN_BITMASK;

        if (!_setOriginalItemMasterSid) {
            _setOriginalItemMasterSid = true;

            _originalItemMasterSid = _itemMasterSid;
        }

        _itemMasterSid = itemMasterSid;
    }

    public int getOriginalItemMasterSid() {
        return _originalItemMasterSid;
    }

    @Override
    public Date getIfpContractAttachedDate() {
        return _ifpContractAttachedDate;
    }

    @Override
    public void setIfpContractAttachedDate(Date ifpContractAttachedDate) {
        _ifpContractAttachedDate = ifpContractAttachedDate;
    }

    @Override
    public Date getItemEndDate() {
        return _itemEndDate;
    }

    @Override
    public void setItemEndDate(Date itemEndDate) {
        _itemEndDate = itemEndDate;
    }

    @Override
    public String getTotalVolumeCommitment() {
        if (_totalVolumeCommitment == null) {
            return StringPool.BLANK;
        } else {
            return _totalVolumeCommitment;
        }
    }

    @Override
    public void setTotalVolumeCommitment(String totalVolumeCommitment) {
        _totalVolumeCommitment = totalVolumeCommitment;
    }

    @Override
    public String getTotalDollarCommitment() {
        if (_totalDollarCommitment == null) {
            return StringPool.BLANK;
        } else {
            return _totalDollarCommitment;
        }
    }

    @Override
    public void setTotalDollarCommitment(String totalDollarCommitment) {
        _totalDollarCommitment = totalDollarCommitment;
    }

    @Override
    public int getIfpContractAttachedStatus() {
        return _ifpContractAttachedStatus;
    }

    @Override
    public void setIfpContractAttachedStatus(int ifpContractAttachedStatus) {
        _ifpContractAttachedStatus = ifpContractAttachedStatus;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public String getTotalMarketshareCommitment() {
        if (_totalMarketshareCommitment == null) {
            return StringPool.BLANK;
        } else {
            return _totalMarketshareCommitment;
        }
    }

    @Override
    public void setTotalMarketshareCommitment(String totalMarketshareCommitment) {
        _totalMarketshareCommitment = totalMarketshareCommitment;
    }

    @Override
    public boolean getRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public boolean isRecordLockStatus() {
        return _recordLockStatus;
    }

    @Override
    public void setRecordLockStatus(boolean recordLockStatus) {
        _recordLockStatus = recordLockStatus;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public String getSource() {
        if (_source == null) {
            return StringPool.BLANK;
        } else {
            return _source;
        }
    }

    @Override
    public void setSource(String source) {
        _source = source;
    }

    @Override
    public Date getItemStartDate() {
        return _itemStartDate;
    }

    @Override
    public void setItemStartDate(Date itemStartDate) {
        _itemStartDate = itemStartDate;
    }

    @Override
    public String getBatchId() {
        if (_batchId == null) {
            return StringPool.BLANK;
        } else {
            return _batchId;
        }
    }

    @Override
    public void setBatchId(String batchId) {
        _batchId = batchId;
    }

    @Override
    public int getIfpContractDetailsSid() {
        return _ifpContractDetailsSid;
    }

    @Override
    public void setIfpContractDetailsSid(int ifpContractDetailsSid) {
        _ifpContractDetailsSid = ifpContractDetailsSid;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getInboundStatus() {
        if (_inboundStatus == null) {
            return StringPool.BLANK;
        } else {
            return _inboundStatus;
        }
    }

    @Override
    public void setInboundStatus(String inboundStatus) {
        _inboundStatus = inboundStatus;
    }

    @Override
    public int getIfpContractSid() {
        return _ifpContractSid;
    }

    @Override
    public void setIfpContractSid(int ifpContractSid) {
        _columnBitmask |= IFPCONTRACTSID_COLUMN_BITMASK;

        if (!_setOriginalIfpContractSid) {
            _setOriginalIfpContractSid = true;

            _originalIfpContractSid = _ifpContractSid;
        }

        _ifpContractSid = ifpContractSid;
    }

    public int getOriginalIfpContractSid() {
        return _originalIfpContractSid;
    }

    @Override
    public String getCommitmentPeriod() {
        if (_commitmentPeriod == null) {
            return StringPool.BLANK;
        } else {
            return _commitmentPeriod;
        }
    }

    @Override
    public void setCommitmentPeriod(String commitmentPeriod) {
        _commitmentPeriod = commitmentPeriod;
    }

    public long getColumnBitmask() {
        return _columnBitmask;
    }

    @Override
    public IfpContractDetails toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (IfpContractDetails) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        IfpContractDetailsImpl ifpContractDetailsImpl = new IfpContractDetailsImpl();

        ifpContractDetailsImpl.setItemStatus(getItemStatus());
        ifpContractDetailsImpl.setItemMasterSid(getItemMasterSid());
        ifpContractDetailsImpl.setIfpContractAttachedDate(getIfpContractAttachedDate());
        ifpContractDetailsImpl.setItemEndDate(getItemEndDate());
        ifpContractDetailsImpl.setTotalVolumeCommitment(getTotalVolumeCommitment());
        ifpContractDetailsImpl.setTotalDollarCommitment(getTotalDollarCommitment());
        ifpContractDetailsImpl.setIfpContractAttachedStatus(getIfpContractAttachedStatus());
        ifpContractDetailsImpl.setModifiedDate(getModifiedDate());
        ifpContractDetailsImpl.setTotalMarketshareCommitment(getTotalMarketshareCommitment());
        ifpContractDetailsImpl.setRecordLockStatus(getRecordLockStatus());
        ifpContractDetailsImpl.setCreatedDate(getCreatedDate());
        ifpContractDetailsImpl.setCreatedBy(getCreatedBy());
        ifpContractDetailsImpl.setSource(getSource());
        ifpContractDetailsImpl.setItemStartDate(getItemStartDate());
        ifpContractDetailsImpl.setBatchId(getBatchId());
        ifpContractDetailsImpl.setIfpContractDetailsSid(getIfpContractDetailsSid());
        ifpContractDetailsImpl.setModifiedBy(getModifiedBy());
        ifpContractDetailsImpl.setInboundStatus(getInboundStatus());
        ifpContractDetailsImpl.setIfpContractSid(getIfpContractSid());
        ifpContractDetailsImpl.setCommitmentPeriod(getCommitmentPeriod());

        ifpContractDetailsImpl.resetOriginalValues();

        return ifpContractDetailsImpl;
    }

    @Override
    public int compareTo(IfpContractDetails ifpContractDetails) {
        int primaryKey = ifpContractDetails.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof IfpContractDetails)) {
            return false;
        }

        IfpContractDetails ifpContractDetails = (IfpContractDetails) obj;

        int primaryKey = ifpContractDetails.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
        IfpContractDetailsModelImpl ifpContractDetailsModelImpl = this;

        ifpContractDetailsModelImpl._originalItemMasterSid = ifpContractDetailsModelImpl._itemMasterSid;

        ifpContractDetailsModelImpl._setOriginalItemMasterSid = false;

        ifpContractDetailsModelImpl._originalIfpContractSid = ifpContractDetailsModelImpl._ifpContractSid;

        ifpContractDetailsModelImpl._setOriginalIfpContractSid = false;

        ifpContractDetailsModelImpl._columnBitmask = 0;
    }

    @Override
    public CacheModel<IfpContractDetails> toCacheModel() {
        IfpContractDetailsCacheModel ifpContractDetailsCacheModel = new IfpContractDetailsCacheModel();

        ifpContractDetailsCacheModel.itemStatus = getItemStatus();

        ifpContractDetailsCacheModel.itemMasterSid = getItemMasterSid();

        Date ifpContractAttachedDate = getIfpContractAttachedDate();

        if (ifpContractAttachedDate != null) {
            ifpContractDetailsCacheModel.ifpContractAttachedDate = ifpContractAttachedDate.getTime();
        } else {
            ifpContractDetailsCacheModel.ifpContractAttachedDate = Long.MIN_VALUE;
        }

        Date itemEndDate = getItemEndDate();

        if (itemEndDate != null) {
            ifpContractDetailsCacheModel.itemEndDate = itemEndDate.getTime();
        } else {
            ifpContractDetailsCacheModel.itemEndDate = Long.MIN_VALUE;
        }

        ifpContractDetailsCacheModel.totalVolumeCommitment = getTotalVolumeCommitment();

        String totalVolumeCommitment = ifpContractDetailsCacheModel.totalVolumeCommitment;

        if ((totalVolumeCommitment != null) &&
                (totalVolumeCommitment.length() == 0)) {
            ifpContractDetailsCacheModel.totalVolumeCommitment = null;
        }

        ifpContractDetailsCacheModel.totalDollarCommitment = getTotalDollarCommitment();

        String totalDollarCommitment = ifpContractDetailsCacheModel.totalDollarCommitment;

        if ((totalDollarCommitment != null) &&
                (totalDollarCommitment.length() == 0)) {
            ifpContractDetailsCacheModel.totalDollarCommitment = null;
        }

        ifpContractDetailsCacheModel.ifpContractAttachedStatus = getIfpContractAttachedStatus();

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            ifpContractDetailsCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            ifpContractDetailsCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        ifpContractDetailsCacheModel.totalMarketshareCommitment = getTotalMarketshareCommitment();

        String totalMarketshareCommitment = ifpContractDetailsCacheModel.totalMarketshareCommitment;

        if ((totalMarketshareCommitment != null) &&
                (totalMarketshareCommitment.length() == 0)) {
            ifpContractDetailsCacheModel.totalMarketshareCommitment = null;
        }

        ifpContractDetailsCacheModel.recordLockStatus = getRecordLockStatus();

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            ifpContractDetailsCacheModel.createdDate = createdDate.getTime();
        } else {
            ifpContractDetailsCacheModel.createdDate = Long.MIN_VALUE;
        }

        ifpContractDetailsCacheModel.createdBy = getCreatedBy();

        ifpContractDetailsCacheModel.source = getSource();

        String source = ifpContractDetailsCacheModel.source;

        if ((source != null) && (source.length() == 0)) {
            ifpContractDetailsCacheModel.source = null;
        }

        Date itemStartDate = getItemStartDate();

        if (itemStartDate != null) {
            ifpContractDetailsCacheModel.itemStartDate = itemStartDate.getTime();
        } else {
            ifpContractDetailsCacheModel.itemStartDate = Long.MIN_VALUE;
        }

        ifpContractDetailsCacheModel.batchId = getBatchId();

        String batchId = ifpContractDetailsCacheModel.batchId;

        if ((batchId != null) && (batchId.length() == 0)) {
            ifpContractDetailsCacheModel.batchId = null;
        }

        ifpContractDetailsCacheModel.ifpContractDetailsSid = getIfpContractDetailsSid();

        ifpContractDetailsCacheModel.modifiedBy = getModifiedBy();

        ifpContractDetailsCacheModel.inboundStatus = getInboundStatus();

        String inboundStatus = ifpContractDetailsCacheModel.inboundStatus;

        if ((inboundStatus != null) && (inboundStatus.length() == 0)) {
            ifpContractDetailsCacheModel.inboundStatus = null;
        }

        ifpContractDetailsCacheModel.ifpContractSid = getIfpContractSid();

        ifpContractDetailsCacheModel.commitmentPeriod = getCommitmentPeriod();

        String commitmentPeriod = ifpContractDetailsCacheModel.commitmentPeriod;

        if ((commitmentPeriod != null) && (commitmentPeriod.length() == 0)) {
            ifpContractDetailsCacheModel.commitmentPeriod = null;
        }

        return ifpContractDetailsCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(41);

        sb.append("{itemStatus=");
        sb.append(getItemStatus());
        sb.append(", itemMasterSid=");
        sb.append(getItemMasterSid());
        sb.append(", ifpContractAttachedDate=");
        sb.append(getIfpContractAttachedDate());
        sb.append(", itemEndDate=");
        sb.append(getItemEndDate());
        sb.append(", totalVolumeCommitment=");
        sb.append(getTotalVolumeCommitment());
        sb.append(", totalDollarCommitment=");
        sb.append(getTotalDollarCommitment());
        sb.append(", ifpContractAttachedStatus=");
        sb.append(getIfpContractAttachedStatus());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append(", totalMarketshareCommitment=");
        sb.append(getTotalMarketshareCommitment());
        sb.append(", recordLockStatus=");
        sb.append(getRecordLockStatus());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", createdBy=");
        sb.append(getCreatedBy());
        sb.append(", source=");
        sb.append(getSource());
        sb.append(", itemStartDate=");
        sb.append(getItemStartDate());
        sb.append(", batchId=");
        sb.append(getBatchId());
        sb.append(", ifpContractDetailsSid=");
        sb.append(getIfpContractDetailsSid());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", inboundStatus=");
        sb.append(getInboundStatus());
        sb.append(", ifpContractSid=");
        sb.append(getIfpContractSid());
        sb.append(", commitmentPeriod=");
        sb.append(getCommitmentPeriod());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(64);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.IfpContractDetails");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>itemStatus</column-name><column-value><![CDATA[");
        sb.append(getItemStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemMasterSid</column-name><column-value><![CDATA[");
        sb.append(getItemMasterSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ifpContractAttachedDate</column-name><column-value><![CDATA[");
        sb.append(getIfpContractAttachedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemEndDate</column-name><column-value><![CDATA[");
        sb.append(getItemEndDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>totalVolumeCommitment</column-name><column-value><![CDATA[");
        sb.append(getTotalVolumeCommitment());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>totalDollarCommitment</column-name><column-value><![CDATA[");
        sb.append(getTotalDollarCommitment());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ifpContractAttachedStatus</column-name><column-value><![CDATA[");
        sb.append(getIfpContractAttachedStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>totalMarketshareCommitment</column-name><column-value><![CDATA[");
        sb.append(getTotalMarketshareCommitment());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>recordLockStatus</column-name><column-value><![CDATA[");
        sb.append(getRecordLockStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>source</column-name><column-value><![CDATA[");
        sb.append(getSource());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>itemStartDate</column-name><column-value><![CDATA[");
        sb.append(getItemStartDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>batchId</column-name><column-value><![CDATA[");
        sb.append(getBatchId());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ifpContractDetailsSid</column-name><column-value><![CDATA[");
        sb.append(getIfpContractDetailsSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>inboundStatus</column-name><column-value><![CDATA[");
        sb.append(getInboundStatus());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ifpContractSid</column-name><column-value><![CDATA[");
        sb.append(getIfpContractSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>commitmentPeriod</column-name><column-value><![CDATA[");
        sb.append(getCommitmentPeriod());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
