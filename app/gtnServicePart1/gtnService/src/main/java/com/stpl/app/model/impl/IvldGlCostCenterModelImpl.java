/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.IvldGlCostCenter;
import com.stpl.app.model.IvldGlCostCenterModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldGlCostCenter service. Represents a row in the &quot;IVLD_GL_COST_CENTER&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link IvldGlCostCenterModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldGlCostCenterImpl}.
 * </p>
 *
 * @author
 * @see IvldGlCostCenterImpl
 * @see IvldGlCostCenter
 * @see IvldGlCostCenterModel
 * @generated
 */
@ProviderType
public class IvldGlCostCenterModelImpl extends BaseModelImpl<IvldGlCostCenter>
	implements IvldGlCostCenterModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ivld gl cost center model instance should use the {@link IvldGlCostCenter} interface instead.
	 */
	public static final String TABLE_NAME = "IVLD_GL_COST_CENTER";
	public static final Object[][] TABLE_COLUMNS = {
			{ "REASON_FOR_FAILURE", Types.VARCHAR },
			{ "GL_COST_CENTER_INTFID", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "COMPANY_COST_CENTER", Types.VARCHAR },
			{ "UPLOAD_DATE", Types.VARCHAR },
			{ "CREATED_BY", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SOURCE", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
			{ "IVLD_GL_COST_CENTER_SID", Types.INTEGER },
			{ "ERROR_FIELD", Types.VARCHAR },
			{ "ERROR_CODE", Types.VARCHAR },
			{ "INTF_INSERTED_DATE", Types.TIMESTAMP },
			{ "COMPANY_CODE", Types.VARCHAR },
			{ "MODIFIED_BY", Types.VARCHAR },
			{ "REPROCESSED_FLAG", Types.VARCHAR },
			{ "NDC8", Types.VARCHAR },
			{ "CHECK_RECORD", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("REASON_FOR_FAILURE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("GL_COST_CENTER_INTFID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("COMPANY_COST_CENTER", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("UPLOAD_DATE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ADD_CHG_DEL_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IVLD_GL_COST_CENTER_SID", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ERROR_FIELD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INTF_INSERTED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("COMPANY_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REPROCESSED_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("NDC8", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table IVLD_GL_COST_CENTER (REASON_FOR_FAILURE VARCHAR(75) null,GL_COST_CENTER_INTFID VARCHAR(75) null,MODIFIED_DATE DATE null,COMPANY_COST_CENTER VARCHAR(75) null,UPLOAD_DATE VARCHAR(75) null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,SOURCE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,IVLD_GL_COST_CENTER_SID INTEGER not null primary key IDENTITY,ERROR_FIELD VARCHAR(75) null,ERROR_CODE VARCHAR(75) null,INTF_INSERTED_DATE DATE null,COMPANY_CODE VARCHAR(75) null,MODIFIED_BY VARCHAR(75) null,REPROCESSED_FLAG VARCHAR(75) null,NDC8 VARCHAR(75) null,CHECK_RECORD BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table IVLD_GL_COST_CENTER";
	public static final String ORDER_BY_JPQL = " ORDER BY ivldGlCostCenter.ivldGlCostCenterSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IVLD_GL_COST_CENTER.IVLD_GL_COST_CENTER_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.IvldGlCostCenter"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.IvldGlCostCenter"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.IvldGlCostCenter"));

	public IvldGlCostCenterModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ivldGlCostCenterSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setIvldGlCostCenterSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ivldGlCostCenterSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return IvldGlCostCenter.class;
	}

	@Override
	public String getModelClassName() {
		return IvldGlCostCenter.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("reasonForFailure", getReasonForFailure());
		attributes.put("glCostCenterIntfid", getGlCostCenterIntfid());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("companyCostCenter", getCompanyCostCenter());
		attributes.put("uploadDate", getUploadDate());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("source", getSource());
		attributes.put("batchId", getBatchId());
		attributes.put("addChgDelIndicator", getAddChgDelIndicator());
		attributes.put("ivldGlCostCenterSid", getIvldGlCostCenterSid());
		attributes.put("errorField", getErrorField());
		attributes.put("errorCode", getErrorCode());
		attributes.put("intfInsertedDate", getIntfInsertedDate());
		attributes.put("companyCode", getCompanyCode());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("reprocessedFlag", getReprocessedFlag());
		attributes.put("ndc8", getNdc8());
		attributes.put("checkRecord", getCheckRecord());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String reasonForFailure = (String)attributes.get("reasonForFailure");

		if (reasonForFailure != null) {
			setReasonForFailure(reasonForFailure);
		}

		String glCostCenterIntfid = (String)attributes.get("glCostCenterIntfid");

		if (glCostCenterIntfid != null) {
			setGlCostCenterIntfid(glCostCenterIntfid);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String companyCostCenter = (String)attributes.get("companyCostCenter");

		if (companyCostCenter != null) {
			setCompanyCostCenter(companyCostCenter);
		}

		String uploadDate = (String)attributes.get("uploadDate");

		if (uploadDate != null) {
			setUploadDate(uploadDate);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String addChgDelIndicator = (String)attributes.get("addChgDelIndicator");

		if (addChgDelIndicator != null) {
			setAddChgDelIndicator(addChgDelIndicator);
		}

		Integer ivldGlCostCenterSid = (Integer)attributes.get(
				"ivldGlCostCenterSid");

		if (ivldGlCostCenterSid != null) {
			setIvldGlCostCenterSid(ivldGlCostCenterSid);
		}

		String errorField = (String)attributes.get("errorField");

		if (errorField != null) {
			setErrorField(errorField);
		}

		String errorCode = (String)attributes.get("errorCode");

		if (errorCode != null) {
			setErrorCode(errorCode);
		}

		Date intfInsertedDate = (Date)attributes.get("intfInsertedDate");

		if (intfInsertedDate != null) {
			setIntfInsertedDate(intfInsertedDate);
		}

		String companyCode = (String)attributes.get("companyCode");

		if (companyCode != null) {
			setCompanyCode(companyCode);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String reprocessedFlag = (String)attributes.get("reprocessedFlag");

		if (reprocessedFlag != null) {
			setReprocessedFlag(reprocessedFlag);
		}

		String ndc8 = (String)attributes.get("ndc8");

		if (ndc8 != null) {
			setNdc8(ndc8);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}
	}

	@Override
	public String getReasonForFailure() {
		if (_reasonForFailure == null) {
			return StringPool.BLANK;
		}
		else {
			return _reasonForFailure;
		}
	}

	@Override
	public void setReasonForFailure(String reasonForFailure) {
		_reasonForFailure = reasonForFailure;
	}

	@Override
	public String getGlCostCenterIntfid() {
		if (_glCostCenterIntfid == null) {
			return StringPool.BLANK;
		}
		else {
			return _glCostCenterIntfid;
		}
	}

	@Override
	public void setGlCostCenterIntfid(String glCostCenterIntfid) {
		_glCostCenterIntfid = glCostCenterIntfid;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getCompanyCostCenter() {
		if (_companyCostCenter == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyCostCenter;
		}
	}

	@Override
	public void setCompanyCostCenter(String companyCostCenter) {
		_companyCostCenter = companyCostCenter;
	}

	@Override
	public String getUploadDate() {
		if (_uploadDate == null) {
			return StringPool.BLANK;
		}
		else {
			return _uploadDate;
		}
	}

	@Override
	public void setUploadDate(String uploadDate) {
		_uploadDate = uploadDate;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getAddChgDelIndicator() {
		if (_addChgDelIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _addChgDelIndicator;
		}
	}

	@Override
	public void setAddChgDelIndicator(String addChgDelIndicator) {
		_addChgDelIndicator = addChgDelIndicator;
	}

	@Override
	public int getIvldGlCostCenterSid() {
		return _ivldGlCostCenterSid;
	}

	@Override
	public void setIvldGlCostCenterSid(int ivldGlCostCenterSid) {
		_ivldGlCostCenterSid = ivldGlCostCenterSid;
	}

	@Override
	public String getErrorField() {
		if (_errorField == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorField;
		}
	}

	@Override
	public void setErrorField(String errorField) {
		_errorField = errorField;
	}

	@Override
	public String getErrorCode() {
		if (_errorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorCode;
		}
	}

	@Override
	public void setErrorCode(String errorCode) {
		_errorCode = errorCode;
	}

	@Override
	public Date getIntfInsertedDate() {
		return _intfInsertedDate;
	}

	@Override
	public void setIntfInsertedDate(Date intfInsertedDate) {
		_intfInsertedDate = intfInsertedDate;
	}

	@Override
	public String getCompanyCode() {
		if (_companyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _companyCode;
		}
	}

	@Override
	public void setCompanyCode(String companyCode) {
		_companyCode = companyCode;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getReprocessedFlag() {
		if (_reprocessedFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _reprocessedFlag;
		}
	}

	@Override
	public void setReprocessedFlag(String reprocessedFlag) {
		_reprocessedFlag = reprocessedFlag;
	}

	@Override
	public String getNdc8() {
		if (_ndc8 == null) {
			return StringPool.BLANK;
		}
		else {
			return _ndc8;
		}
	}

	@Override
	public void setNdc8(String ndc8) {
		_ndc8 = ndc8;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public IvldGlCostCenter toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (IvldGlCostCenter)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		IvldGlCostCenterImpl ivldGlCostCenterImpl = new IvldGlCostCenterImpl();

		ivldGlCostCenterImpl.setReasonForFailure(getReasonForFailure());
		ivldGlCostCenterImpl.setGlCostCenterIntfid(getGlCostCenterIntfid());
		ivldGlCostCenterImpl.setModifiedDate(getModifiedDate());
		ivldGlCostCenterImpl.setCompanyCostCenter(getCompanyCostCenter());
		ivldGlCostCenterImpl.setUploadDate(getUploadDate());
		ivldGlCostCenterImpl.setCreatedBy(getCreatedBy());
		ivldGlCostCenterImpl.setCreatedDate(getCreatedDate());
		ivldGlCostCenterImpl.setSource(getSource());
		ivldGlCostCenterImpl.setBatchId(getBatchId());
		ivldGlCostCenterImpl.setAddChgDelIndicator(getAddChgDelIndicator());
		ivldGlCostCenterImpl.setIvldGlCostCenterSid(getIvldGlCostCenterSid());
		ivldGlCostCenterImpl.setErrorField(getErrorField());
		ivldGlCostCenterImpl.setErrorCode(getErrorCode());
		ivldGlCostCenterImpl.setIntfInsertedDate(getIntfInsertedDate());
		ivldGlCostCenterImpl.setCompanyCode(getCompanyCode());
		ivldGlCostCenterImpl.setModifiedBy(getModifiedBy());
		ivldGlCostCenterImpl.setReprocessedFlag(getReprocessedFlag());
		ivldGlCostCenterImpl.setNdc8(getNdc8());
		ivldGlCostCenterImpl.setCheckRecord(getCheckRecord());

		ivldGlCostCenterImpl.resetOriginalValues();

		return ivldGlCostCenterImpl;
	}

	@Override
	public int compareTo(IvldGlCostCenter ivldGlCostCenter) {
		int primaryKey = ivldGlCostCenter.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof IvldGlCostCenter)) {
			return false;
		}

		IvldGlCostCenter ivldGlCostCenter = (IvldGlCostCenter)obj;

		int primaryKey = ivldGlCostCenter.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<IvldGlCostCenter> toCacheModel() {
		IvldGlCostCenterCacheModel ivldGlCostCenterCacheModel = new IvldGlCostCenterCacheModel();

		ivldGlCostCenterCacheModel.reasonForFailure = getReasonForFailure();

		String reasonForFailure = ivldGlCostCenterCacheModel.reasonForFailure;

		if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
			ivldGlCostCenterCacheModel.reasonForFailure = null;
		}

		ivldGlCostCenterCacheModel.glCostCenterIntfid = getGlCostCenterIntfid();

		String glCostCenterIntfid = ivldGlCostCenterCacheModel.glCostCenterIntfid;

		if ((glCostCenterIntfid != null) && (glCostCenterIntfid.length() == 0)) {
			ivldGlCostCenterCacheModel.glCostCenterIntfid = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ivldGlCostCenterCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ivldGlCostCenterCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ivldGlCostCenterCacheModel.companyCostCenter = getCompanyCostCenter();

		String companyCostCenter = ivldGlCostCenterCacheModel.companyCostCenter;

		if ((companyCostCenter != null) && (companyCostCenter.length() == 0)) {
			ivldGlCostCenterCacheModel.companyCostCenter = null;
		}

		ivldGlCostCenterCacheModel.uploadDate = getUploadDate();

		String uploadDate = ivldGlCostCenterCacheModel.uploadDate;

		if ((uploadDate != null) && (uploadDate.length() == 0)) {
			ivldGlCostCenterCacheModel.uploadDate = null;
		}

		ivldGlCostCenterCacheModel.createdBy = getCreatedBy();

		String createdBy = ivldGlCostCenterCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			ivldGlCostCenterCacheModel.createdBy = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			ivldGlCostCenterCacheModel.createdDate = createdDate.getTime();
		}
		else {
			ivldGlCostCenterCacheModel.createdDate = Long.MIN_VALUE;
		}

		ivldGlCostCenterCacheModel.source = getSource();

		String source = ivldGlCostCenterCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			ivldGlCostCenterCacheModel.source = null;
		}

		ivldGlCostCenterCacheModel.batchId = getBatchId();

		String batchId = ivldGlCostCenterCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			ivldGlCostCenterCacheModel.batchId = null;
		}

		ivldGlCostCenterCacheModel.addChgDelIndicator = getAddChgDelIndicator();

		String addChgDelIndicator = ivldGlCostCenterCacheModel.addChgDelIndicator;

		if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
			ivldGlCostCenterCacheModel.addChgDelIndicator = null;
		}

		ivldGlCostCenterCacheModel.ivldGlCostCenterSid = getIvldGlCostCenterSid();

		ivldGlCostCenterCacheModel.errorField = getErrorField();

		String errorField = ivldGlCostCenterCacheModel.errorField;

		if ((errorField != null) && (errorField.length() == 0)) {
			ivldGlCostCenterCacheModel.errorField = null;
		}

		ivldGlCostCenterCacheModel.errorCode = getErrorCode();

		String errorCode = ivldGlCostCenterCacheModel.errorCode;

		if ((errorCode != null) && (errorCode.length() == 0)) {
			ivldGlCostCenterCacheModel.errorCode = null;
		}

		Date intfInsertedDate = getIntfInsertedDate();

		if (intfInsertedDate != null) {
			ivldGlCostCenterCacheModel.intfInsertedDate = intfInsertedDate.getTime();
		}
		else {
			ivldGlCostCenterCacheModel.intfInsertedDate = Long.MIN_VALUE;
		}

		ivldGlCostCenterCacheModel.companyCode = getCompanyCode();

		String companyCode = ivldGlCostCenterCacheModel.companyCode;

		if ((companyCode != null) && (companyCode.length() == 0)) {
			ivldGlCostCenterCacheModel.companyCode = null;
		}

		ivldGlCostCenterCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = ivldGlCostCenterCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			ivldGlCostCenterCacheModel.modifiedBy = null;
		}

		ivldGlCostCenterCacheModel.reprocessedFlag = getReprocessedFlag();

		String reprocessedFlag = ivldGlCostCenterCacheModel.reprocessedFlag;

		if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
			ivldGlCostCenterCacheModel.reprocessedFlag = null;
		}

		ivldGlCostCenterCacheModel.ndc8 = getNdc8();

		String ndc8 = ivldGlCostCenterCacheModel.ndc8;

		if ((ndc8 != null) && (ndc8.length() == 0)) {
			ivldGlCostCenterCacheModel.ndc8 = null;
		}

		ivldGlCostCenterCacheModel.checkRecord = getCheckRecord();

		return ivldGlCostCenterCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(39);

		sb.append("{reasonForFailure=");
		sb.append(getReasonForFailure());
		sb.append(", glCostCenterIntfid=");
		sb.append(getGlCostCenterIntfid());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", companyCostCenter=");
		sb.append(getCompanyCostCenter());
		sb.append(", uploadDate=");
		sb.append(getUploadDate());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", addChgDelIndicator=");
		sb.append(getAddChgDelIndicator());
		sb.append(", ivldGlCostCenterSid=");
		sb.append(getIvldGlCostCenterSid());
		sb.append(", errorField=");
		sb.append(getErrorField());
		sb.append(", errorCode=");
		sb.append(getErrorCode());
		sb.append(", intfInsertedDate=");
		sb.append(getIntfInsertedDate());
		sb.append(", companyCode=");
		sb.append(getCompanyCode());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", reprocessedFlag=");
		sb.append(getReprocessedFlag());
		sb.append(", ndc8=");
		sb.append(getNdc8());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(61);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.IvldGlCostCenter");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
		sb.append(getReasonForFailure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>glCostCenterIntfid</column-name><column-value><![CDATA[");
		sb.append(getGlCostCenterIntfid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyCostCenter</column-name><column-value><![CDATA[");
		sb.append(getCompanyCostCenter());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>uploadDate</column-name><column-value><![CDATA[");
		sb.append(getUploadDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
		sb.append(getAddChgDelIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ivldGlCostCenterSid</column-name><column-value><![CDATA[");
		sb.append(getIvldGlCostCenterSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorField</column-name><column-value><![CDATA[");
		sb.append(getErrorField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorCode</column-name><column-value><![CDATA[");
		sb.append(getErrorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
		sb.append(getIntfInsertedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyCode</column-name><column-value><![CDATA[");
		sb.append(getCompanyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
		sb.append(getReprocessedFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ndc8</column-name><column-value><![CDATA[");
		sb.append(getNdc8());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = IvldGlCostCenter.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			IvldGlCostCenter.class
		};
	private String _reasonForFailure;
	private String _glCostCenterIntfid;
	private Date _modifiedDate;
	private String _companyCostCenter;
	private String _uploadDate;
	private String _createdBy;
	private Date _createdDate;
	private String _source;
	private String _batchId;
	private String _addChgDelIndicator;
	private int _ivldGlCostCenterSid;
	private String _errorField;
	private String _errorCode;
	private Date _intfInsertedDate;
	private String _companyCode;
	private String _modifiedBy;
	private String _reprocessedFlag;
	private String _ndc8;
	private boolean _checkRecord;
	private IvldGlCostCenter _escapedModel;
}