<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE xml>

<sql>
	<entity id="getCompanyAdditionSearchCountQuery">
		<query> 
            <![CDATA[           
        SELECT
	COUNT(DISTINCT CM.COMPANY_MASTER_SID)
        FROM  COMPANY_MASTER CM
        JOIN COMPANY_TRADE_CLASS CTC ON
                CTC.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
        LEFT JOIN HELPER_TABLE HTRADE ON
                HTRADE.HELPER_TABLE_SID = CTC.COMPANY_TRADE_CLASS
        LEFT JOIN HELPER_TABLE HTYPE ON
                HTYPE.HELPER_TABLE_SID = COMPANY_TYPE
        LEFT JOIN HELPER_TABLE HCATEGORY ON
                HCATEGORY.HELPER_TABLE_SID = COMPANY_CATEGORY
        LEFT JOIN HELPER_TABLE HGROUP ON
                HGROUP.HELPER_TABLE_SID = COMPANY_GROUP
        LEFT JOIN HELPER_TABLE HSTATUS ON
                HSTATUS.HELPER_TABLE_SID = COMPANY_STATUS
        WHERE
	CTC.COMPANY_TRADE_CLASS =(
		SELECT
			TOP 1(CT.COMPANY_TRADE_CLASS)
		FROM
			COMPANY_TRADE_CLASS CT
		WHERE
			CT.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
			AND CT.INBOUND_STATUS <> 'D'
		ORDER BY
			CT.TRADE_CLASS_START_DATE DESC
	)
	AND CM.INBOUND_STATUS <> 'D'
	AND CTC.INBOUND_STATUS <> 'D'

	
                    ]]>
		</query>
	</entity>
	<entity id="getCompanyAdditionSearchResultsQuery">
		<query> 
            <![CDATA[           
    


       
        SELECT
	CM.COMPANY_ID,
	CM.COMPANY_NO,
	CM.COMPANY_NAME,
	CASE 
       WHEN  HSTATUS.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HSTATUS.DESCRIPTION 
       END as CTYPE,
	CASE 
       WHEN  HTYPE.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HTYPE.DESCRIPTION 
       END as CSTATUS,
       	CASE 
       WHEN  HTRADE.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HTRADE.DESCRIPTION 
       END as TRADE_CLASS,
       	CASE 
       WHEN  HCATEGORY.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HCATEGORY.DESCRIPTION 
       END as CATEGORY,
    	CASE 
       WHEN  HGROUP.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HGROUP.DESCRIPTION 
       END as CGROUP,
       CM.COMPANY_MASTER_SID


        FROM
                COMPANY_MASTER CM
        JOIN COMPANY_TRADE_CLASS CTC ON
                CTC.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
        LEFT JOIN HELPER_TABLE HTRADE ON
                HTRADE.HELPER_TABLE_SID = CTC.COMPANY_TRADE_CLASS
        LEFT JOIN HELPER_TABLE HTYPE ON
                HTYPE.HELPER_TABLE_SID = COMPANY_TYPE
        LEFT JOIN HELPER_TABLE HCATEGORY ON
                HCATEGORY.HELPER_TABLE_SID = COMPANY_CATEGORY
        LEFT JOIN HELPER_TABLE HGROUP ON
                HGROUP.HELPER_TABLE_SID = COMPANY_GROUP
        LEFT JOIN HELPER_TABLE HSTATUS ON
                HSTATUS.HELPER_TABLE_SID = COMPANY_STATUS
        WHERE
	CTC.COMPANY_TRADE_CLASS =(
		SELECT
			TOP 1(CT.COMPANY_TRADE_CLASS)
		FROM
			COMPANY_TRADE_CLASS CT
		WHERE
			CT.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
			AND CT.INBOUND_STATUS <> 'D'
		ORDER BY
			CT.TRADE_CLASS_START_DATE DESC
	)
	AND CM.INBOUND_STATUS <> 'D'
	AND CTC.INBOUND_STATUS <> 'D'
 ]]>
		</query>
	</entity>

	<entity id="getCFPCompanyAdditionMoveRightQuery">
		<query> 
            <![CDATA[           
          
  

DECLARE @USERS_SID VARCHAR(10)=?,
@SESSION_ID VARCHAR(10)=?,
@COMPANY_MASTER_SID INT=?

IF EXISTS(
	SELECT
		1
	FROM
		IMTD_CFP_DETAILS CFP
	WHERE
		CFP.USERS_SID = @USERS_SID
		AND CFP.SESSION_ID = @SESSION_ID
		AND COMPANY_MASTER_SID = @COMPANY_MASTER_SID
) UPDATE
	IMTD_CFP_DETAILS
SET
	CFP_DETAILS_START_DATE = NULL,
	CFP_DETAILS_END_DATE = NULL,
	CFP_DETAILS_ATTACHED_DATE = GETDATE(),
	CFP_DETAILS_ATTACHED_STATUS = NULL,
	CFP_DETAILS_CREATED_DATE = GETDATE(),
	CFP_DETAILS_CREATED_BY = @USERS_SID,
	CFP_DETAILS_MODIFIED_DATE = NULL,
	CFP_DETAILS_MODIFIED_BY = NULL,
	OPERATION = 'A',
        TRADING_PARTNER_CONTRACT_NO=''
        
WHERE
	USERS_SID = @USERS_SID
	AND SESSION_ID = @SESSION_ID
	AND COMPANY_MASTER_SID = @COMPANY_MASTER_SID
	ELSE INSERT
		INTO
			IMTD_CFP_DETAILS(
				COMPANY_MASTER_SID,
				CFP_MODEL_SID,
				COMPANY_ID,
				COMPANY_NO,
				COMPANY_NAME,
				COMPANY_TYPE,
				COMPANY_STATUS,
				COMPANY_START_DATE,
				COMPANY_END_DATE,
				CFP_DETAILS_ATTACHED_DATE,
				USERS_SID,
				SESSION_ID,
				CFP_DETAILS_CREATED_DATE,
				CFP_DETAILS_CREATED_BY,
				CFP_DETAILS_MODIFIED_DATE,
				CFP_DETAILS_MODIFIED_BY,
				CFP_DETAILS_TRADE_CLASS,
                                "OPERATION",
                                CHECK_RECORD,
                                TRADING_PARTNER_CONTRACT_NO
			) 
                        SELECT
				CM.COMPANY_MASTER_SID,
				0,
				CM.COMPANY_ID,
				CM.COMPANY_NO,
				CM.COMPANY_NAME,
				CM.COMPANY_TYPE,
				CM.COMPANY_STATUS,
				CM.COMPANY_START_DATE,
				CM.COMPANY_END_DATE,
				GETDATE(),
				@USERS_SID,
				@SESSION_ID,
				GETDATE(),
				@USERS_SID,
				NULL,
				NULL,
				CTC.COMPANY_TRADE_CLASS,
                                'A',
                                0,
                                ''
			FROM
				DBO.COMPANY_MASTER CM
			JOIN COMPANY_TRADE_CLASS CTC ON
				CTC.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
                        LEFT JOIN HELPER_TABLE HTRADE ON
                                HTRADE.HELPER_TABLE_SID = CTC.COMPANY_TRADE_CLASS
                        WHERE
				CTC.COMPANY_TRADE_CLASS =(
					SELECT
						TOP 1(CT.COMPANY_TRADE_CLASS)
					FROM
						COMPANY_TRADE_CLASS CT
					WHERE
						CT.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
						AND CT.INBOUND_STATUS <> 'D'
					ORDER BY
						CT.TRADE_CLASS_START_DATE DESC
				)
				AND CM.INBOUND_STATUS <> 'D'
				AND CTC.INBOUND_STATUS <> 'D' 
				AND CM.COMPANY_MASTER_SID = @COMPANY_MASTER_SID;
 ]]>
		</query>
	</entity>


	<entity id="getCFPCompanyAdditionRightTableCountQuery">
		<query> 
            <![CDATA[           
      SELECT
	COUNT(*)
    FROM
            IMTD_CFP_DETAILS IMTD
            JOIN COMPANY_MASTER CM ON
            CM.COMPANY_MASTER_SID = IMTD.COMPANY_MASTER_SID
    LEFT JOIN HELPER_TABLE HTYPE ON
            HTYPE.HELPER_TABLE_SID = IMTD.COMPANY_TYPE
    LEFT JOIN HELPER_TABLE HCATEGORY ON
            HCATEGORY.HELPER_TABLE_SID = CM.COMPANY_CATEGORY
    LEFT JOIN HELPER_TABLE HGROUP ON
            HGROUP.HELPER_TABLE_SID = CM.COMPANY_GROUP
    LEFT JOIN HELPER_TABLE HSTATUS ON
            HSTATUS.HELPER_TABLE_SID = CM.COMPANY_STATUS
    LEFT JOIN HELPER_TABLE HTRADE ON
            HTRADE.HELPER_TABLE_SID = IMTD.CFP_DETAILS_TRADE_CLASS
 ]]>
		</query>
	</entity>


	<entity id="getCFPCompanyAdditionRightTableSearchQuery">
		<query> 
            <![CDATA[
      SELECT
	IMTD.COMPANY_ID,
	IMTD.COMPANY_NO,
	IMTD.COMPANY_NAME,
	CASE 
       WHEN  HSTATUS.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HSTATUS.DESCRIPTION 
       END as CTYPE,
	CASE 
       WHEN  HTYPE.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HTYPE.DESCRIPTION 
       END as CSTATUS,
       	CASE 
       WHEN  HTRADE.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HTRADE.DESCRIPTION 
       END as TRADE_CLASS,
       	CASE 
       WHEN  HCATEGORY.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HCATEGORY.DESCRIPTION 
       END as CATEGORY,
    	CASE 
       WHEN  HGROUP.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HGROUP.DESCRIPTION 
       END as CGROUP,
	IMTD.COMPANY_MASTER_SID
    FROM
            IMTD_CFP_DETAILS IMTD
    JOIN COMPANY_MASTER CM ON
            CM.COMPANY_MASTER_SID = IMTD.COMPANY_MASTER_SID
    LEFT JOIN HELPER_TABLE HTYPE ON
            HTYPE.HELPER_TABLE_SID = IMTD.COMPANY_TYPE
    LEFT JOIN HELPER_TABLE HCATEGORY ON
            HCATEGORY.HELPER_TABLE_SID = CM.COMPANY_CATEGORY
    LEFT JOIN HELPER_TABLE HGROUP ON
            HGROUP.HELPER_TABLE_SID = CM.COMPANY_GROUP
    LEFT JOIN HELPER_TABLE HSTATUS ON
            HSTATUS.HELPER_TABLE_SID = CM.COMPANY_STATUS
    LEFT JOIN HELPER_TABLE HTRADE ON
            HTRADE.HELPER_TABLE_SID = IMTD.CFP_DETAILS_TRADE_CLASS
 ]]>
		</query>
	</entity>

	<entity id="getCFPCompanyAdditionMoveLeftQuery">
		<query> 
            <![CDATA[           
            
         DELETE FROM IMTD_CFP_DETAILS WHERE USERS_SID =?  AND SESSION_ID =? AND COMPANY_MASTER_SID=?
 ]]>
		</query>
	</entity>
	<entity id="getCFPCompanyAdditionMoveAllLeftQuery">
		<query> 
            <![CDATA[           
            
          DELETE IMTD FROM IMTD_CFP_DETAILS IMTD 
         JOIN COMPANY_MASTER CM ON
            CM.COMPANY_MASTER_SID = IMTD.COMPANY_MASTER_SID
    LEFT JOIN HELPER_TABLE HTYPE ON
            HTYPE.HELPER_TABLE_SID = IMTD.COMPANY_TYPE
    LEFT JOIN HELPER_TABLE HCATEGORY ON
            HCATEGORY.HELPER_TABLE_SID = CM.COMPANY_CATEGORY
    LEFT JOIN HELPER_TABLE HGROUP ON
            HGROUP.HELPER_TABLE_SID = CM.COMPANY_GROUP
    LEFT JOIN HELPER_TABLE HSTATUS ON
            HSTATUS.HELPER_TABLE_SID = IMTD.COMPANY_STATUS
        WHERE IMTD.USERS_SID = ?  AND IMTD.SESSION_ID = ?  
 ]]>
		</query>
	</entity>

	<entity id="getCFPCompanyAdditionMoveAllRightQuery">
		<query> 
            <![CDATA[           
            
     
DECLARE @USERS_SID VARCHAR(10)=?,
@SESSION_ID VARCHAR(10)=?

    MERGE IMTD_CFP_DETAILS AS T
	USING(
	SELECT
		CM.COMPANY_MASTER_SID,
		CM.COMPANY_ID,
		CM.COMPANY_NO,
		CM.COMPANY_NAME,
		CM.COMPANY_TYPE,
		CM.COMPANY_STATUS,
		CM.COMPANY_CATEGORY,
		CM.COMPANY_GROUP,
		CM.COMPANY_START_DATE,
		CM.COMPANY_END_DATE,
		CM.ORGANIZATION_KEY,
		CM.LIVES,
		CM.FINANCIAL_SYSTEM,
		CM.ADDRESS1,
		CM.ADDRESS2,
		CM.CITY,
		CM.STATE,
		CM.ZIP_CODE,
		CM.COUNTRY REGION_CODE,
		CM.LAST_UPDATED_DATE,
		CM.INTERNAL_NOTES,
		CM.INBOUND_STATUS,
		CM.RECORD_LOCK_STATUS,
		CM.BATCH_ID,
		CM.SOURCE,
		CM.CREATED_BY,
		CM.CREATED_DATE,
		CM.MODIFIED_BY,
		CM.MODIFIED_DATE,
		CTC.COMPANY_TRADE_CLASS AS CFP_DETAILS_TRADE_CLASS
	FROM
		COMPANY_MASTER CM
	JOIN COMPANY_TRADE_CLASS CTC ON
		CM.COMPANY_MASTER_SID = CTC.COMPANY_MASTER_SID
	JOIN HELPER_TABLE htrade ON
		htrade.HELPER_TABLE_SID = CTC.COMPANY_TRADE_CLASS
	WHERE
		CM.INBOUND_STATUS <> 'D'
		[$WHERE_CLAUSE]
) AS S ON
(
	S.COMPANY_MASTER_SID = T.COMPANY_MASTER_SID --AND T.CFP_MODEL_SID = 
	AND T.USERS_SID = @USERS_SID
	AND T.SESSION_ID = @SESSION_ID
)
WHEN MATCHED
AND T.OPERATION IN(
	'F',
	'D'
) THEN UPDATE
SET
	T.OPERATION = 'A',
	CFP_DETAILS_SID = 0,    
        CFP_DETAILS_START_DATE = NULL,
	CFP_DETAILS_END_DATE = NULL,
	CFP_DETAILS_ATTACHED_DATE = GETDATE(),
	CFP_DETAILS_ATTACHED_STATUS = NULL,
	CFP_DETAILS_CREATED_DATE = GETDATE(),
	CFP_DETAILS_CREATED_BY = @USERS_SID,
	CFP_DETAILS_MODIFIED_DATE = GETDATE(),
	CFP_DETAILS_MODIFIED_BY = @USERS_SID,
        TRADING_PARTNER_CONTRACT_NO=''
	WHEN NOT MATCHED BY TARGET THEN INSERT
		(
			COMPANY_MASTER_SID,
			COMPANY_ID,
			COMPANY_NO,
			COMPANY_NAME,
			COMPANY_TYPE,
			COMPANY_STATUS,
			COMPANY_START_DATE,
			COMPANY_END_DATE,
			CFP_DETAILS_TRADE_CLASS,
			CFP_DETAILS_ATTACHED_DATE,
			USERS_SID,
			SESSION_ID,
			IMTD_CREATED_DATE,
			CHECK_RECORD,
			"OPERATION",
			CFP_DETAILS_CREATED_BY,
			CFP_DETAILS_CREATED_DATE,
			CFP_DETAILS_SID
		)
	VALUES(
		S.COMPANY_MASTER_SID,
		S.COMPANY_ID,
		S.COMPANY_NO,
		S.COMPANY_NAME,
		S.COMPANY_TYPE,
		S.COMPANY_STATUS,
		S.COMPANY_START_DATE,
		S.COMPANY_END_DATE,
		S.CFP_DETAILS_TRADE_CLASS,
		GETDATE(),
		@USERS_SID,
		@SESSION_ID,
		GETDATE(),
		0,
		'A',
		@USERS_SID,
		GETDATE(),
		0
	);

;
 ]]>
		</query>
	</entity>

	<entity id="getCFPCompaniesResultTableCountQuery">
		<query> 
            <![CDATA[           
         	SELECT
		COUNT(*)
	FROM
		IMTD_CFP_DETAILS ICD
	JOIN COMPANY_MASTER CM ON
		CM.COMPANY_MASTER_SID = ICD.COMPANY_MASTER_SID
	LEFT JOIN HelPER_TABLE htype ON
		htype.HELPER_TABLE_SID = ICD.COMPANY_TYPE
	LEFT JOIN HELPER_TABLE hCfpStatus ON
		hCfpStatus.HELPER_TABLE_SID = ICD.CFP_DETAILS_ATTACHED_STATUS
	LEFT JOIN HELPER_TABLE hCMstatus ON
		hCMstatus.HELPER_TABLE_SID = ICD.COMPANY_STATUS
	LEFT JOIN HELPER_TABLE HCATEGORY ON
		HCATEGORY.HELPER_TABLE_SID = CM.COMPANY_CATEGORY
	LEFT JOIN HELPER_TABLE HTRADECLASS ON
		HTRADECLASS.HELPER_TABLE_SID = ICD.CFP_DETAILS_TRADE_CLASS	
	WHERE
		ICD.OPERATION NOT IN(
			'D',
			'F'
		)
		AND ICD.USERS_SID = ?
		AND ICD.SESSION_ID = ?
 ]]>
		</query>
	</entity>
	<entity id="getCFPCompaniesResultTableSearchQuery">
		<query> 
            <![CDATA[   
         	SELECT
                  CONVERT(BIT, CASE WHEN ICD.CHECK_RECORD IS NULL THEN 0 ELSE ICD.CHECK_RECORD END) AS CHECK_BOX,
		ICD.COMPANY_ID,
		ICD.COMPANY_NO,
		ICD.COMPANY_NAME,
		ISNULL(ICD.CFP_DETAILS_ATTACHED_STATUS,0) AS TEMP_CFP_STATUS,
		ICD.CFP_DETAILS_START_DATE,
		ICD.CFP_DETAILS_END_DATE,
		hCMstatus.DESCRIPTION AS TEMP_COMPANY_STATUS,
		CASE 
        WHEN  htype.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE htype.DESCRIPTION 
        END as CM_TYPE,
	    CASE 
        WHEN  HTRADECLASS.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HTRADECLASS.DESCRIPTION 
        END as TRADE_CLASS,
	    CASE 
        WHEN  HCATEGORY.HELPER_TABLE_SID = 0 
               THEN ''
               ELSE HCATEGORY.DESCRIPTION 
        END as CATEGORY,
		ICD.TRADING_PARTNER_CONTRACT_NO,
		ICD.CFP_DETAILS_ATTACHED_DATE,
		ICD.CFP_DETAILS_MODIFIED_DATE,
		ISNULL(ICD.CFP_DETAILS_MODIFIED_BY,'') AS CFP_DETAILS_MODIFIED_BY,
		ICD.CFP_DETAILS_CREATED_DATE,
		ICD.CFP_DETAILS_CREATED_BY,
		ICD.IMTD_CFP_DETAILS_SID,
		hCfpStatus.DESCRIPTION as CFPHSTATUS
	FROM
		IMTD_CFP_DETAILS ICD
	JOIN COMPANY_MASTER CM ON
		CM.COMPANY_MASTER_SID = ICD.COMPANY_MASTER_SID
	LEFT JOIN HelPER_TABLE htype ON
		htype.HELPER_TABLE_SID = ICD.COMPANY_TYPE
	LEFT JOIN HELPER_TABLE hCfpStatus ON
		hCfpStatus.HELPER_TABLE_SID = ICD.CFP_DETAILS_ATTACHED_STATUS
		AND hCfpStatus.DESCRIPTION NOT like '%Select One%'
	LEFT JOIN HELPER_TABLE hCMstatus ON
		hCMstatus.HELPER_TABLE_SID = ICD.COMPANY_STATUS
	LEFT JOIN HELPER_TABLE HCATEGORY ON
		HCATEGORY.HELPER_TABLE_SID = CM.COMPANY_CATEGORY
	LEFT JOIN HELPER_TABLE HTRADECLASS ON
		HTRADECLASS.HELPER_TABLE_SID = ICD.CFP_DETAILS_TRADE_CLASS
	WHERE
		ICD.OPERATION NOT IN(
			'D',
			'F'
		)
		AND ICD.USERS_SID = ?
		AND ICD.SESSION_ID = ?
 ]]>
		</query>
	</entity>
	<entity id="getCFPCompaniesUpdateColumnQuery">
		<query> 
            <![CDATA[           
         	UPDATE IMTD_CFP_DETAILS SET [$UPDATE_CLAUSE] ='[$UPDATE_CLAUSE_VALUE]'  WHERE USERS_SID = ?  AND SESSION_ID = ?  [$WHERE_CLAUSE]
 ]]>
		</query>
	</entity>
	<entity id="getCfpCfpIdAndCfpNoValidationQuery">
		<query> 
            <![CDATA[    
            DECLARE @CFP_ID varchar(500)= ? ,
            @CFP_NO varchar(500)= ? 

            SELECT CASE WHEN CFP_ID = @CFP_ID AND CFP_NO = @CFP_NO THEN 'CFP_ID, CFP_NO'
                        WHEN  CFP_ID = @CFP_ID THEN 'CFP_ID'
                        WHEN CFP_NO = @CFP_NO THEN 'CFP_NO'
                        ELSE '' END   AS COULMN1
             FROM CFP_MODEL WHERE (CFP_ID =@CFP_ID OR CFP_NO = @CFP_NO)
             
 ]]>
		</query>
	</entity>


	<entity id="getCfpCompaniesTabUpdateFieldsQuery">
		<query> 
            <![CDATA[           
        UPDATE IMTD_CFP_DETAILS SET [$UPDATE_CLAUSE] WHERE USERS_SID = ?  AND SESSION_ID = ?  [$SYSTEM_ID_CLAUSE]
 ]]>
		</query>
	</entity>
	<entity id="getCfpDetailsSaveQuery">
		<query> 

            <![CDATA[           

        DECLARE  @CFP_MODEL_SID INT =?,
        @USERS_SID VARCHAR(100) =?,
        @SESSION_ID VARCHAR(100) =?

        UPDATE IMTD_CFP_DETAILS SET CFP_MODEL_SID=@CFP_MODEL_SID WHERE USERS_SID=@USERS_SID AND SESSION_ID=@SESSION_ID
 AND CHECK_RECORD=1;

        DELETE CFP FROM DBO.CFP_DETAILS CFP  
        JOIN IMTD_CFP_DETAILS IMTD ON CFP.CFP_MODEL_SID=IMTD.CFP_MODEL_SID AND
       -- IMTD.CHECK_RECORD=1 AND 
        IMTD.USERS_SID=@USERS_SID AND IMTD.SESSION_ID=@SESSION_ID;
        
       DELETE FROM IMTD_CFP_DETAILS WHERE USERS_SID=@USERS_SID AND SESSION_ID=@SESSION_ID AND CHECK_RECORD = 0;

        INSERT
                INTO
                        CFP_DETAILS(
                                CFP_MODEL_SID,
                                COMPANY_MASTER_SID,
                                COMPANY_START_DATE,
                                COMPANY_END_DATE,
                                COMPANY_CFP_ATTACHED_STATUS,
                                COMPANY_CFP_ATTACHED_DATE,
                                TRADE_CLASS,
                                TRADING_PARTNER_CONTRACT_NO,
                                TRADE_CLASS_START_DATE,
                                TRADE_CLASS_END_DATE,
                                INBOUND_STATUS,
                                RECORD_LOCK_STATUS,
                                "SOURCE",
                                CREATED_BY,
                                CREATED_DATE,
                                MODIFIED_BY,
                                MODIFIED_DATE
                        )

                        SELECT
                                CFP_MODEL_SID,
                                COMPANY_MASTER_SID,
                                CFP_DETAILS_START_DATE,
                                CFP_DETAILS_END_DATE,
                                CFP_DETAILS_ATTACHED_STATUS,
                                CFP_DETAILS_ATTACHED_DATE,
                                CFP_DETAILS_TRADE_CLASS,
                                TRADING_PARTNER_CONTRACT_NO,
                                CFP_DETAILS_TC_START_DATE,
                                CFP_DETAILS_TC_END_DATE,
                                'A',
                                0,
                                'GTN',
                                CFP_DETAILS_CREATED_BY,
                                CFP_DETAILS_CREATED_DATE,
                                @USERS_SID,
                                GETDATE()
                        FROM
                                IMTD_CFP_DETAILS
                        WHERE
                                CHECK_RECORD = 1 AND  
                                USERS_SID = @USERS_SID  AND SESSION_ID = @SESSION_ID
                                AND CFP_MODEL_SID = @CFP_MODEL_SID;
 ]]>
		</query>
	</entity>

	<entity id="getCfpCompaniesTabEditQuery">
		<query> 
            <![CDATA[   
           

DECLARE @USERS_SID VARCHAR(10)=?,
@SESSION_ID VARCHAR(10)=?,
@CFP_MODEL_SID INT=?
 
                    DELETE FROM IMTD_CFP_DETAILS WHERE USERS_SID = @USERS_SID AND SESSION_ID = @SESSION_ID;        
          INSERT
	INTO
		IMTD_CFP_DETAILS(
			COMPANY_MASTER_SID,
			CFP_MODEL_SID,
			COMPANY_ID,
			COMPANY_NO,
			COMPANY_NAME,
			COMPANY_TYPE,
			COMPANY_STATUS,
			COMPANY_START_DATE,
			COMPANY_END_DATE,
			CFP_DETAILS_ATTACHED_DATE,
			CFP_DETAILS_ATTACHED_STATUS,
			CFP_DETAILS_START_DATE,
			CFP_DETAILS_END_DATE,
			USERS_SID,
			SESSION_ID,
			CFP_DETAILS_CREATED_DATE,
			CFP_DETAILS_CREATED_BY,
			CFP_DETAILS_MODIFIED_DATE,
			CFP_DETAILS_MODIFIED_BY,
			CFP_DETAILS_TRADE_CLASS,
			"OPERATION",
			CHECK_RECORD,
			TRADING_PARTNER_CONTRACT_NO
		) SELECT
			CM.COMPANY_MASTER_SID,
			CFP.CFP_MODEL_SID,
			CM.COMPANY_ID,
			CM.COMPANY_NO,
			CM.COMPANY_NAME,
			CM.COMPANY_TYPE,
			CM.COMPANY_STATUS,
			CM.COMPANY_START_DATE,
			CM.COMPANY_END_DATE,
			CFP.COMPANY_CFP_ATTACHED_DATE,
			CFP.COMPANY_CFP_ATTACHED_STATUS,
			CFP.COMPANY_START_DATE,
			CFP.COMPANY_END_DATE,
			@USERS_SID,
			@SESSION_ID,
			CFP.CREATED_DATE,
			@USERS_SID,
			CFP.MODIFIED_DATE,
			@USERS_SID,
			CTC.COMPANY_TRADE_CLASS,
			'A',
			1,
			''
		FROM
			DBO.CFP_DETAILS CFP
		JOIN DBO.COMPANY_MASTER CM ON
			cm.COMPANY_MASTER_SID = cfp.COMPANY_MASTER_SID
		JOIN COMPANY_TRADE_CLASS CTC ON
			CTC.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
		WHERE
			CTC.COMPANY_TRADE_CLASS =(
				SELECT
					TOP 1(CT.COMPANY_TRADE_CLASS)
				FROM
					COMPANY_TRADE_CLASS CT
				WHERE
					CT.COMPANY_MASTER_SID = CM.COMPANY_MASTER_SID
					AND CT.INBOUND_STATUS <> 'D'
				ORDER BY
					CT.TRADE_CLASS_START_DATE DESC
			)
			AND CM.INBOUND_STATUS <> 'D'
			AND CFP.INBOUND_STATUS <> 'D'
                        AND CTC.INBOUND_STATUS<>'D'
			AND CFP.CFP_MODEL_SID=@CFP_MODEL_SID ;
			

 ]]>
		</query>
	</entity>
	<entity id="getCfpCompaniesTabDeleteQuery">
		<query> 
            <![CDATA[   
             DELETE FROM IMTD_CFP_DETAILS WHERE  USERS_SID = ?  AND SESSION_ID = ?;
                ]]>
		</query>
	</entity>
	<entity id="getCfpCommonValidationQuery">
		<query> 
            <![CDATA[   
                      
       DECLARE @USERS_SID varchar(500)= ? ,
               @SESSION_ID varchar(500)= ? 
-- COUNT QUERY
	SELECT 'COMPANIES_COUNT' AS COLUMN_ID ,  CONVERT(VARCHAR(50),COUNT(*)) AS COMPANY_NO_OR_COUNT,0 FROM IMTD_CFP_DETAILS
		WHERE   USERS_SID =@USERS_SID
		AND SESSION_ID = @SESSION_ID
 	UNION ALL 
 -- CFP_DETAILS_START_DATE NULL CHECK QUERY
  	 select 'CFP_DETAILS_START_DATE',CASE WHEN COUNT(*) =1 THEN min(COMPANY_NO) ELSE  CONVERT(VARCHAR(50),COUNT(*))  END  AS COMPANY_NO_OR_COUNT,0  AS COUNT from dbo.IMTD_CFP_DETAILS where 
             CFP_DETAILS_START_DATE is null and CHECK_RECORD=1 and OPERATION Not In ('D','F')  AND USERS_SID =@USERS_SID AND SESSION_ID=@SESSION_ID
     UNION ALL 
             SELECT	'CFP_DETAILS_ATTACHED_STATUS' AS COLUMN_ID ,CASE WHEN COUNT(*)  =1 THEN  min(COMPANY_NO)   ELSE  CONVERT(VARCHAR(50),COUNT(*))  END AS COMPANY_NO_OR_COUNT,0 AS COUNT
			FROM
			dbo.IMTD_CFP_DETAILS
			WHERE
			(
				CFP_DETAILS_ATTACHED_STATUS IS NULL
				OR CFP_DETAILS_ATTACHED_STATUS = ''
				OR CFP_DETAILS_ATTACHED_STATUS = 0
			)
			AND CHECK_RECORD = 1
			AND USERS_SID =@USERS_SID
			AND SESSION_ID = @SESSION_ID
	
	UNION ALL
	 -- START_DATE_GREATER_END_DATE CHECK QUERY
	select 'START_DATE_GREATER_END_DATE' AS COLUMN_ID ,CASE WHEN COUNT(*) =1 THEN min(COMPANY_NO) ELSE  CONVERT(VARCHAR(50),COUNT(*))  END AS COMPANY_NO_OR_COUNT ,0 AS COUNT
	from dbo.IMTD_CFP_DETAILS where CFP_DETAILS_START_DATE > CFP_DETAILS_END_DATE 
	AND CHECK_RECORD = 1 
	and OPERATION Not In ('D','F') 
	AND USERS_SID =@USERS_SID
	AND SESSION_ID = @SESSION_ID
	
	UNION ALL
		 -- START_DATE_GREATER_END_DATE CHECK QUERY
	
	SELECT 'CHECKED_RECORD_COUNT' AS COLUMN_ID,  CONVERT(VARCHAR(50),COUNT(*)) AS COMPANY_NO_OR_COUNT,0 AS COUNT FROM IMTD_CFP_DETAILS
	WHERE  CHECK_RECORD = 1
	AND USERS_SID =@USERS_SID
	AND SESSION_ID = @SESSION_ID
	UNION ALL
	-- DUPLIUCATE_QUERY
	select 'DUPLICATE' AS COLUMN_ID, COMPANY_NO AS COMPANY_NO_OR_COUNT,  COUNT(*) AS COUNT
	from dbo.IMTD_CFP_DETAILS where 
	 CHECK_RECORD = 1
	AND USERS_SID =@USERS_SID
	AND SESSION_ID = @SESSION_ID
	GROUP BY COMPANY_NO,CFP_DETAILS_START_DATE
	HAVING COUNT(*) >1
	
	
                ]]>
		</query>
	</entity>
</sql>