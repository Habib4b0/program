/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.stpl.app.model.impl;

import aQute.bnd.annotation.ProviderType;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;

import com.stpl.app.model.IvldItemHierarchyDefinition;
import com.stpl.app.model.IvldItemHierarchyDefinitionModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the IvldItemHierarchyDefinition service. Represents a row in the &quot;IVLD_ITEM_HIERARCHY_DEFINITION&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link IvldItemHierarchyDefinitionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link IvldItemHierarchyDefinitionImpl}.
 * </p>
 *
 * @author
 * @see IvldItemHierarchyDefinitionImpl
 * @see IvldItemHierarchyDefinition
 * @see IvldItemHierarchyDefinitionModel
 * @generated
 */
@ProviderType
public class IvldItemHierarchyDefinitionModelImpl extends BaseModelImpl<IvldItemHierarchyDefinition>
	implements IvldItemHierarchyDefinitionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a ivld item hierarchy definition model instance should use the {@link IvldItemHierarchyDefinition} interface instead.
	 */
	public static final String TABLE_NAME = "IVLD_ITEM_HIERARCHY_DEFINITION";
	public static final Object[][] TABLE_COLUMNS = {
			{ "MEMBER", Types.VARCHAR },
			{ "REASON_FOR_FAILURE", Types.VARCHAR },
			{ "ITEM_HIERARCHY_DEFN_INTFID", Types.VARCHAR },
			{ "BPI_LVL", Types.VARCHAR },
			{ "MODIFIED_DATE", Types.TIMESTAMP },
			{ "ALIAS", Types.VARCHAR },
			{ "CREATED_BY", Types.VARCHAR },
			{ "CREATED_DATE", Types.TIMESTAMP },
			{ "SOURCE", Types.VARCHAR },
			{ "BATCH_ID", Types.VARCHAR },
			{ "ADD_CHG_DEL_INDICATOR", Types.VARCHAR },
			{ "IVLD_ITEM_HIERARCHY_DEFINITION_SID", Types.INTEGER },
			{ "ERROR_FIELD", Types.VARCHAR },
			{ "ERROR_CODE", Types.VARCHAR },
			{ "INTF_INSERTED_DATE", Types.TIMESTAMP },
			{ "MODIFIED_BY", Types.VARCHAR },
			{ "REPROCESSED_FLAG", Types.VARCHAR },
			{ "CHECK_RECORD", Types.BOOLEAN }
		};
	public static final Map<String, Integer> TABLE_COLUMNS_MAP = new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("MEMBER", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REASON_FOR_FAILURE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ITEM_HIERARCHY_DEFN_INTFID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BPI_LVL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("MODIFIED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("ALIAS", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CREATED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("SOURCE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("BATCH_ID", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ADD_CHG_DEL_INDICATOR", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("IVLD_ITEM_HIERARCHY_DEFINITION_SID",
			Types.INTEGER);
		TABLE_COLUMNS_MAP.put("ERROR_FIELD", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("ERROR_CODE", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("INTF_INSERTED_DATE", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("MODIFIED_BY", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("REPROCESSED_FLAG", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("CHECK_RECORD", Types.BOOLEAN);
	}

	public static final String TABLE_SQL_CREATE = "create table IVLD_ITEM_HIERARCHY_DEFINITION (MEMBER VARCHAR(75) null,REASON_FOR_FAILURE VARCHAR(75) null,ITEM_HIERARCHY_DEFN_INTFID VARCHAR(75) null,BPI_LVL VARCHAR(75) null,MODIFIED_DATE DATE null,ALIAS VARCHAR(75) null,CREATED_BY VARCHAR(75) null,CREATED_DATE DATE null,SOURCE VARCHAR(75) null,BATCH_ID VARCHAR(75) null,ADD_CHG_DEL_INDICATOR VARCHAR(75) null,IVLD_ITEM_HIERARCHY_DEFINITION_SID INTEGER not null primary key IDENTITY,ERROR_FIELD VARCHAR(75) null,ERROR_CODE VARCHAR(75) null,INTF_INSERTED_DATE DATE null,MODIFIED_BY VARCHAR(75) null,REPROCESSED_FLAG VARCHAR(75) null,CHECK_RECORD BOOLEAN)";
	public static final String TABLE_SQL_DROP = "drop table IVLD_ITEM_HIERARCHY_DEFINITION";
	public static final String ORDER_BY_JPQL = " ORDER BY ivldItemHierarchyDefinition.ivldItemHierarchyDefinitionSid ASC";
	public static final String ORDER_BY_SQL = " ORDER BY IVLD_ITEM_HIERARCHY_DEFINITION.IVLD_ITEM_HIERARCHY_DEFINITION_SID ASC";
	public static final String DATA_SOURCE = "extDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.entity.cache.enabled.com.stpl.app.model.IvldItemHierarchyDefinition"),
			false);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.app.service.util.PropsUtil.get(
				"value.object.finder.cache.enabled.com.stpl.app.model.IvldItemHierarchyDefinition"),
			false);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.app.service.util.PropsUtil.get(
				"lock.expiration.time.com.stpl.app.model.IvldItemHierarchyDefinition"));

	public IvldItemHierarchyDefinitionModelImpl() {
	}

	@Override
	public int getPrimaryKey() {
		return _ivldItemHierarchyDefinitionSid;
	}

	@Override
	public void setPrimaryKey(int primaryKey) {
		setIvldItemHierarchyDefinitionSid(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _ivldItemHierarchyDefinitionSid;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Integer)primaryKeyObj).intValue());
	}

	@Override
	public Class<?> getModelClass() {
		return IvldItemHierarchyDefinition.class;
	}

	@Override
	public String getModelClassName() {
		return IvldItemHierarchyDefinition.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("member", getMember());
		attributes.put("reasonForFailure", getReasonForFailure());
		attributes.put("itemHierarchyDefnIntfid", getItemHierarchyDefnIntfid());
		attributes.put("bpiLvl", getBpiLvl());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("alias", getAlias());
		attributes.put("createdBy", getCreatedBy());
		attributes.put("createdDate", getCreatedDate());
		attributes.put("source", getSource());
		attributes.put("batchId", getBatchId());
		attributes.put("addChgDelIndicator", getAddChgDelIndicator());
		attributes.put("ivldItemHierarchyDefinitionSid",
			getIvldItemHierarchyDefinitionSid());
		attributes.put("errorField", getErrorField());
		attributes.put("errorCode", getErrorCode());
		attributes.put("intfInsertedDate", getIntfInsertedDate());
		attributes.put("modifiedBy", getModifiedBy());
		attributes.put("reprocessedFlag", getReprocessedFlag());
		attributes.put("checkRecord", getCheckRecord());

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		String member = (String)attributes.get("member");

		if (member != null) {
			setMember(member);
		}

		String reasonForFailure = (String)attributes.get("reasonForFailure");

		if (reasonForFailure != null) {
			setReasonForFailure(reasonForFailure);
		}

		String itemHierarchyDefnIntfid = (String)attributes.get(
				"itemHierarchyDefnIntfid");

		if (itemHierarchyDefnIntfid != null) {
			setItemHierarchyDefnIntfid(itemHierarchyDefnIntfid);
		}

		String bpiLvl = (String)attributes.get("bpiLvl");

		if (bpiLvl != null) {
			setBpiLvl(bpiLvl);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		String alias = (String)attributes.get("alias");

		if (alias != null) {
			setAlias(alias);
		}

		String createdBy = (String)attributes.get("createdBy");

		if (createdBy != null) {
			setCreatedBy(createdBy);
		}

		Date createdDate = (Date)attributes.get("createdDate");

		if (createdDate != null) {
			setCreatedDate(createdDate);
		}

		String source = (String)attributes.get("source");

		if (source != null) {
			setSource(source);
		}

		String batchId = (String)attributes.get("batchId");

		if (batchId != null) {
			setBatchId(batchId);
		}

		String addChgDelIndicator = (String)attributes.get("addChgDelIndicator");

		if (addChgDelIndicator != null) {
			setAddChgDelIndicator(addChgDelIndicator);
		}

		Integer ivldItemHierarchyDefinitionSid = (Integer)attributes.get(
				"ivldItemHierarchyDefinitionSid");

		if (ivldItemHierarchyDefinitionSid != null) {
			setIvldItemHierarchyDefinitionSid(ivldItemHierarchyDefinitionSid);
		}

		String errorField = (String)attributes.get("errorField");

		if (errorField != null) {
			setErrorField(errorField);
		}

		String errorCode = (String)attributes.get("errorCode");

		if (errorCode != null) {
			setErrorCode(errorCode);
		}

		Date intfInsertedDate = (Date)attributes.get("intfInsertedDate");

		if (intfInsertedDate != null) {
			setIntfInsertedDate(intfInsertedDate);
		}

		String modifiedBy = (String)attributes.get("modifiedBy");

		if (modifiedBy != null) {
			setModifiedBy(modifiedBy);
		}

		String reprocessedFlag = (String)attributes.get("reprocessedFlag");

		if (reprocessedFlag != null) {
			setReprocessedFlag(reprocessedFlag);
		}

		Boolean checkRecord = (Boolean)attributes.get("checkRecord");

		if (checkRecord != null) {
			setCheckRecord(checkRecord);
		}
	}

	@Override
	public String getMember() {
		if (_member == null) {
			return StringPool.BLANK;
		}
		else {
			return _member;
		}
	}

	@Override
	public void setMember(String member) {
		_member = member;
	}

	@Override
	public String getReasonForFailure() {
		if (_reasonForFailure == null) {
			return StringPool.BLANK;
		}
		else {
			return _reasonForFailure;
		}
	}

	@Override
	public void setReasonForFailure(String reasonForFailure) {
		_reasonForFailure = reasonForFailure;
	}

	@Override
	public String getItemHierarchyDefnIntfid() {
		if (_itemHierarchyDefnIntfid == null) {
			return StringPool.BLANK;
		}
		else {
			return _itemHierarchyDefnIntfid;
		}
	}

	@Override
	public void setItemHierarchyDefnIntfid(String itemHierarchyDefnIntfid) {
		_itemHierarchyDefnIntfid = itemHierarchyDefnIntfid;
	}

	@Override
	public String getBpiLvl() {
		if (_bpiLvl == null) {
			return StringPool.BLANK;
		}
		else {
			return _bpiLvl;
		}
	}

	@Override
	public void setBpiLvl(String bpiLvl) {
		_bpiLvl = bpiLvl;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public String getAlias() {
		if (_alias == null) {
			return StringPool.BLANK;
		}
		else {
			return _alias;
		}
	}

	@Override
	public void setAlias(String alias) {
		_alias = alias;
	}

	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@Override
	public Date getCreatedDate() {
		return _createdDate;
	}

	@Override
	public void setCreatedDate(Date createdDate) {
		_createdDate = createdDate;
	}

	@Override
	public String getSource() {
		if (_source == null) {
			return StringPool.BLANK;
		}
		else {
			return _source;
		}
	}

	@Override
	public void setSource(String source) {
		_source = source;
	}

	@Override
	public String getBatchId() {
		if (_batchId == null) {
			return StringPool.BLANK;
		}
		else {
			return _batchId;
		}
	}

	@Override
	public void setBatchId(String batchId) {
		_batchId = batchId;
	}

	@Override
	public String getAddChgDelIndicator() {
		if (_addChgDelIndicator == null) {
			return StringPool.BLANK;
		}
		else {
			return _addChgDelIndicator;
		}
	}

	@Override
	public void setAddChgDelIndicator(String addChgDelIndicator) {
		_addChgDelIndicator = addChgDelIndicator;
	}

	@Override
	public int getIvldItemHierarchyDefinitionSid() {
		return _ivldItemHierarchyDefinitionSid;
	}

	@Override
	public void setIvldItemHierarchyDefinitionSid(
		int ivldItemHierarchyDefinitionSid) {
		_ivldItemHierarchyDefinitionSid = ivldItemHierarchyDefinitionSid;
	}

	@Override
	public String getErrorField() {
		if (_errorField == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorField;
		}
	}

	@Override
	public void setErrorField(String errorField) {
		_errorField = errorField;
	}

	@Override
	public String getErrorCode() {
		if (_errorCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _errorCode;
		}
	}

	@Override
	public void setErrorCode(String errorCode) {
		_errorCode = errorCode;
	}

	@Override
	public Date getIntfInsertedDate() {
		return _intfInsertedDate;
	}

	@Override
	public void setIntfInsertedDate(Date intfInsertedDate) {
		_intfInsertedDate = intfInsertedDate;
	}

	@Override
	public String getModifiedBy() {
		if (_modifiedBy == null) {
			return StringPool.BLANK;
		}
		else {
			return _modifiedBy;
		}
	}

	@Override
	public void setModifiedBy(String modifiedBy) {
		_modifiedBy = modifiedBy;
	}

	@Override
	public String getReprocessedFlag() {
		if (_reprocessedFlag == null) {
			return StringPool.BLANK;
		}
		else {
			return _reprocessedFlag;
		}
	}

	@Override
	public void setReprocessedFlag(String reprocessedFlag) {
		_reprocessedFlag = reprocessedFlag;
	}

	@Override
	public boolean getCheckRecord() {
		return _checkRecord;
	}

	@Override
	public boolean isCheckRecord() {
		return _checkRecord;
	}

	@Override
	public void setCheckRecord(boolean checkRecord) {
		_checkRecord = checkRecord;
	}

	@Override
	public IvldItemHierarchyDefinition toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (IvldItemHierarchyDefinition)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		IvldItemHierarchyDefinitionImpl ivldItemHierarchyDefinitionImpl = new IvldItemHierarchyDefinitionImpl();

		ivldItemHierarchyDefinitionImpl.setMember(getMember());
		ivldItemHierarchyDefinitionImpl.setReasonForFailure(getReasonForFailure());
		ivldItemHierarchyDefinitionImpl.setItemHierarchyDefnIntfid(getItemHierarchyDefnIntfid());
		ivldItemHierarchyDefinitionImpl.setBpiLvl(getBpiLvl());
		ivldItemHierarchyDefinitionImpl.setModifiedDate(getModifiedDate());
		ivldItemHierarchyDefinitionImpl.setAlias(getAlias());
		ivldItemHierarchyDefinitionImpl.setCreatedBy(getCreatedBy());
		ivldItemHierarchyDefinitionImpl.setCreatedDate(getCreatedDate());
		ivldItemHierarchyDefinitionImpl.setSource(getSource());
		ivldItemHierarchyDefinitionImpl.setBatchId(getBatchId());
		ivldItemHierarchyDefinitionImpl.setAddChgDelIndicator(getAddChgDelIndicator());
		ivldItemHierarchyDefinitionImpl.setIvldItemHierarchyDefinitionSid(getIvldItemHierarchyDefinitionSid());
		ivldItemHierarchyDefinitionImpl.setErrorField(getErrorField());
		ivldItemHierarchyDefinitionImpl.setErrorCode(getErrorCode());
		ivldItemHierarchyDefinitionImpl.setIntfInsertedDate(getIntfInsertedDate());
		ivldItemHierarchyDefinitionImpl.setModifiedBy(getModifiedBy());
		ivldItemHierarchyDefinitionImpl.setReprocessedFlag(getReprocessedFlag());
		ivldItemHierarchyDefinitionImpl.setCheckRecord(getCheckRecord());

		ivldItemHierarchyDefinitionImpl.resetOriginalValues();

		return ivldItemHierarchyDefinitionImpl;
	}

	@Override
	public int compareTo(
		IvldItemHierarchyDefinition ivldItemHierarchyDefinition) {
		int primaryKey = ivldItemHierarchyDefinition.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof IvldItemHierarchyDefinition)) {
			return false;
		}

		IvldItemHierarchyDefinition ivldItemHierarchyDefinition = (IvldItemHierarchyDefinition)obj;

		int primaryKey = ivldItemHierarchyDefinition.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return ENTITY_CACHE_ENABLED;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return FINDER_CACHE_ENABLED;
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<IvldItemHierarchyDefinition> toCacheModel() {
		IvldItemHierarchyDefinitionCacheModel ivldItemHierarchyDefinitionCacheModel =
			new IvldItemHierarchyDefinitionCacheModel();

		ivldItemHierarchyDefinitionCacheModel.member = getMember();

		String member = ivldItemHierarchyDefinitionCacheModel.member;

		if ((member != null) && (member.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.member = null;
		}

		ivldItemHierarchyDefinitionCacheModel.reasonForFailure = getReasonForFailure();

		String reasonForFailure = ivldItemHierarchyDefinitionCacheModel.reasonForFailure;

		if ((reasonForFailure != null) && (reasonForFailure.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.reasonForFailure = null;
		}

		ivldItemHierarchyDefinitionCacheModel.itemHierarchyDefnIntfid = getItemHierarchyDefnIntfid();

		String itemHierarchyDefnIntfid = ivldItemHierarchyDefinitionCacheModel.itemHierarchyDefnIntfid;

		if ((itemHierarchyDefnIntfid != null) &&
				(itemHierarchyDefnIntfid.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.itemHierarchyDefnIntfid = null;
		}

		ivldItemHierarchyDefinitionCacheModel.bpiLvl = getBpiLvl();

		String bpiLvl = ivldItemHierarchyDefinitionCacheModel.bpiLvl;

		if ((bpiLvl != null) && (bpiLvl.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.bpiLvl = null;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			ivldItemHierarchyDefinitionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			ivldItemHierarchyDefinitionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		ivldItemHierarchyDefinitionCacheModel.alias = getAlias();

		String alias = ivldItemHierarchyDefinitionCacheModel.alias;

		if ((alias != null) && (alias.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.alias = null;
		}

		ivldItemHierarchyDefinitionCacheModel.createdBy = getCreatedBy();

		String createdBy = ivldItemHierarchyDefinitionCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.createdBy = null;
		}

		Date createdDate = getCreatedDate();

		if (createdDate != null) {
			ivldItemHierarchyDefinitionCacheModel.createdDate = createdDate.getTime();
		}
		else {
			ivldItemHierarchyDefinitionCacheModel.createdDate = Long.MIN_VALUE;
		}

		ivldItemHierarchyDefinitionCacheModel.source = getSource();

		String source = ivldItemHierarchyDefinitionCacheModel.source;

		if ((source != null) && (source.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.source = null;
		}

		ivldItemHierarchyDefinitionCacheModel.batchId = getBatchId();

		String batchId = ivldItemHierarchyDefinitionCacheModel.batchId;

		if ((batchId != null) && (batchId.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.batchId = null;
		}

		ivldItemHierarchyDefinitionCacheModel.addChgDelIndicator = getAddChgDelIndicator();

		String addChgDelIndicator = ivldItemHierarchyDefinitionCacheModel.addChgDelIndicator;

		if ((addChgDelIndicator != null) && (addChgDelIndicator.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.addChgDelIndicator = null;
		}

		ivldItemHierarchyDefinitionCacheModel.ivldItemHierarchyDefinitionSid = getIvldItemHierarchyDefinitionSid();

		ivldItemHierarchyDefinitionCacheModel.errorField = getErrorField();

		String errorField = ivldItemHierarchyDefinitionCacheModel.errorField;

		if ((errorField != null) && (errorField.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.errorField = null;
		}

		ivldItemHierarchyDefinitionCacheModel.errorCode = getErrorCode();

		String errorCode = ivldItemHierarchyDefinitionCacheModel.errorCode;

		if ((errorCode != null) && (errorCode.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.errorCode = null;
		}

		Date intfInsertedDate = getIntfInsertedDate();

		if (intfInsertedDate != null) {
			ivldItemHierarchyDefinitionCacheModel.intfInsertedDate = intfInsertedDate.getTime();
		}
		else {
			ivldItemHierarchyDefinitionCacheModel.intfInsertedDate = Long.MIN_VALUE;
		}

		ivldItemHierarchyDefinitionCacheModel.modifiedBy = getModifiedBy();

		String modifiedBy = ivldItemHierarchyDefinitionCacheModel.modifiedBy;

		if ((modifiedBy != null) && (modifiedBy.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.modifiedBy = null;
		}

		ivldItemHierarchyDefinitionCacheModel.reprocessedFlag = getReprocessedFlag();

		String reprocessedFlag = ivldItemHierarchyDefinitionCacheModel.reprocessedFlag;

		if ((reprocessedFlag != null) && (reprocessedFlag.length() == 0)) {
			ivldItemHierarchyDefinitionCacheModel.reprocessedFlag = null;
		}

		ivldItemHierarchyDefinitionCacheModel.checkRecord = getCheckRecord();

		return ivldItemHierarchyDefinitionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{member=");
		sb.append(getMember());
		sb.append(", reasonForFailure=");
		sb.append(getReasonForFailure());
		sb.append(", itemHierarchyDefnIntfid=");
		sb.append(getItemHierarchyDefnIntfid());
		sb.append(", bpiLvl=");
		sb.append(getBpiLvl());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", alias=");
		sb.append(getAlias());
		sb.append(", createdBy=");
		sb.append(getCreatedBy());
		sb.append(", createdDate=");
		sb.append(getCreatedDate());
		sb.append(", source=");
		sb.append(getSource());
		sb.append(", batchId=");
		sb.append(getBatchId());
		sb.append(", addChgDelIndicator=");
		sb.append(getAddChgDelIndicator());
		sb.append(", ivldItemHierarchyDefinitionSid=");
		sb.append(getIvldItemHierarchyDefinitionSid());
		sb.append(", errorField=");
		sb.append(getErrorField());
		sb.append(", errorCode=");
		sb.append(getErrorCode());
		sb.append(", intfInsertedDate=");
		sb.append(getIntfInsertedDate());
		sb.append(", modifiedBy=");
		sb.append(getModifiedBy());
		sb.append(", reprocessedFlag=");
		sb.append(getReprocessedFlag());
		sb.append(", checkRecord=");
		sb.append(getCheckRecord());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("com.stpl.app.model.IvldItemHierarchyDefinition");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>member</column-name><column-value><![CDATA[");
		sb.append(getMember());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reasonForFailure</column-name><column-value><![CDATA[");
		sb.append(getReasonForFailure());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>itemHierarchyDefnIntfid</column-name><column-value><![CDATA[");
		sb.append(getItemHierarchyDefnIntfid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bpiLvl</column-name><column-value><![CDATA[");
		sb.append(getBpiLvl());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>alias</column-name><column-value><![CDATA[");
		sb.append(getAlias());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdBy</column-name><column-value><![CDATA[");
		sb.append(getCreatedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createdDate</column-name><column-value><![CDATA[");
		sb.append(getCreatedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>source</column-name><column-value><![CDATA[");
		sb.append(getSource());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>batchId</column-name><column-value><![CDATA[");
		sb.append(getBatchId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>addChgDelIndicator</column-name><column-value><![CDATA[");
		sb.append(getAddChgDelIndicator());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>ivldItemHierarchyDefinitionSid</column-name><column-value><![CDATA[");
		sb.append(getIvldItemHierarchyDefinitionSid());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorField</column-name><column-value><![CDATA[");
		sb.append(getErrorField());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>errorCode</column-name><column-value><![CDATA[");
		sb.append(getErrorCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>intfInsertedDate</column-name><column-value><![CDATA[");
		sb.append(getIntfInsertedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
		sb.append(getModifiedBy());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>reprocessedFlag</column-name><column-value><![CDATA[");
		sb.append(getReprocessedFlag());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>checkRecord</column-name><column-value><![CDATA[");
		sb.append(getCheckRecord());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static final ClassLoader _classLoader = IvldItemHierarchyDefinition.class.getClassLoader();
	private static final Class<?>[] _escapedModelInterfaces = new Class[] {
			IvldItemHierarchyDefinition.class
		};
	private String _member;
	private String _reasonForFailure;
	private String _itemHierarchyDefnIntfid;
	private String _bpiLvl;
	private Date _modifiedDate;
	private String _alias;
	private String _createdBy;
	private Date _createdDate;
	private String _source;
	private String _batchId;
	private String _addChgDelIndicator;
	private int _ivldItemHierarchyDefinitionSid;
	private String _errorField;
	private String _errorCode;
	private Date _intfInsertedDate;
	private String _modifiedBy;
	private String _reprocessedFlag;
	private boolean _checkRecord;
	private IvldItemHierarchyDefinition _escapedModel;
}