package com.stpl.app.model.impl;

import com.stpl.app.model.CdrModel;
import com.stpl.app.model.CdrModelModel;

import com.stpl.portal.kernel.bean.AutoEscapeBeanHandler;
import com.stpl.portal.kernel.util.GetterUtil;
import com.stpl.portal.kernel.util.ProxyUtil;
import com.stpl.portal.kernel.util.StringBundler;
import com.stpl.portal.kernel.util.StringPool;
import com.stpl.portal.model.CacheModel;
import com.stpl.portal.model.impl.BaseModelImpl;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the CdrModel service. Represents a row in the &quot;CDR_MODEL&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.stpl.app.model.CdrModelModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link CdrModelImpl}.
 * </p>
 *
 * @author
 * @see CdrModelImpl
 * @see com.stpl.app.model.CdrModel
 * @see com.stpl.app.model.CdrModelModel
 * @generated
 */
public class CdrModelModelImpl extends BaseModelImpl<CdrModel>
    implements CdrModelModel {
    /*
     * NOTE FOR DEVELOPERS:
     *
     * Never modify or reference this class directly. All methods that expect a cdr model model instance should use the {@link com.stpl.app.model.CdrModel} interface instead.
     */
    public static final String TABLE_NAME = "CDR_MODEL";
    public static final Object[][] TABLE_COLUMNS = {
            { "CREATED_BY", Types.INTEGER },
            { "RULE_CATEGORY", Types.INTEGER },
            { "RULE_TYPE", Types.INTEGER },
            { "MODIFIED_BY", Types.INTEGER },
            { "INTERNAL_NOTES", Types.VARCHAR },
            { "CREATED_DATE", Types.TIMESTAMP },
            { "RULE_NAME", Types.VARCHAR },
            { "CDR_MODEL_SID", Types.INTEGER },
            { "RULE_NO", Types.VARCHAR },
            { "MODIFIED_DATE", Types.TIMESTAMP }
        };
    public static final String TABLE_SQL_CREATE = "create table CDR_MODEL (CREATED_BY INTEGER,RULE_CATEGORY INTEGER,RULE_TYPE INTEGER,MODIFIED_BY INTEGER,INTERNAL_NOTES VARCHAR(75) null,CREATED_DATE DATE null,RULE_NAME VARCHAR(75) null,CDR_MODEL_SID INTEGER not null primary key IDENTITY,RULE_NO VARCHAR(75) null,MODIFIED_DATE DATE null)";
    public static final String TABLE_SQL_DROP = "drop table CDR_MODEL";
    public static final String ORDER_BY_JPQL = " ORDER BY cdrModel.cdrModelSid ASC";
    public static final String ORDER_BY_SQL = " ORDER BY CDR_MODEL.CDR_MODEL_SID ASC";
    public static final String DATA_SOURCE = "appDataSource";
    public static final String SESSION_FACTORY = "appSessionFactory";
    public static final String TX_MANAGER = "appTransactionManager";
    public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.entity.cache.enabled.com.stpl.app.model.CdrModel"),
            false);
    public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.stpl.util.service.ServiceProps.get(
                "value.object.finder.cache.enabled.com.stpl.app.model.CdrModel"),
            false);
    public static final boolean COLUMN_BITMASK_ENABLED = false;
    public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.stpl.util.service.ServiceProps.get(
                "lock.expiration.time.com.stpl.app.model.CdrModel"));
    private static ClassLoader _classLoader = CdrModel.class.getClassLoader();
    private static Class<?>[] _escapedModelInterfaces = new Class[] {
            CdrModel.class
        };
    private int _createdBy;
    private int _ruleCategory;
    private int _ruleType;
    private int _modifiedBy;
    private String _internalNotes;
    private Date _createdDate;
    private String _ruleName;
    private int _cdrModelSid;
    private String _ruleNo;
    private Date _modifiedDate;
    private CdrModel _escapedModel;

    public CdrModelModelImpl() {
    }

    @Override
    public int getPrimaryKey() {
        return _cdrModelSid;
    }

    @Override
    public void setPrimaryKey(int primaryKey) {
        setCdrModelSid(primaryKey);
    }

    @Override
    public Serializable getPrimaryKeyObj() {
        return _cdrModelSid;
    }

    @Override
    public void setPrimaryKeyObj(Serializable primaryKeyObj) {
        setPrimaryKey(((Integer) primaryKeyObj).intValue());
    }

    @Override
    public Class<?> getModelClass() {
        return CdrModel.class;
    }

    @Override
    public String getModelClassName() {
        return CdrModel.class.getName();
    }

    @Override
    public Map<String, Object> getModelAttributes() {
        Map<String, Object> attributes = new HashMap<String, Object>();

        attributes.put("createdBy", getCreatedBy());
        attributes.put("ruleCategory", getRuleCategory());
        attributes.put("ruleType", getRuleType());
        attributes.put("modifiedBy", getModifiedBy());
        attributes.put("internalNotes", getInternalNotes());
        attributes.put("createdDate", getCreatedDate());
        attributes.put("ruleName", getRuleName());
        attributes.put("cdrModelSid", getCdrModelSid());
        attributes.put("ruleNo", getRuleNo());
        attributes.put("modifiedDate", getModifiedDate());

        return attributes;
    }

    @Override
    public void setModelAttributes(Map<String, Object> attributes) {
        Integer createdBy = (Integer) attributes.get("createdBy");

        if (createdBy != null) {
            setCreatedBy(createdBy);
        }

        Integer ruleCategory = (Integer) attributes.get("ruleCategory");

        if (ruleCategory != null) {
            setRuleCategory(ruleCategory);
        }

        Integer ruleType = (Integer) attributes.get("ruleType");

        if (ruleType != null) {
            setRuleType(ruleType);
        }

        Integer modifiedBy = (Integer) attributes.get("modifiedBy");

        if (modifiedBy != null) {
            setModifiedBy(modifiedBy);
        }

        String internalNotes = (String) attributes.get("internalNotes");

        if (internalNotes != null) {
            setInternalNotes(internalNotes);
        }

        Date createdDate = (Date) attributes.get("createdDate");

        if (createdDate != null) {
            setCreatedDate(createdDate);
        }

        String ruleName = (String) attributes.get("ruleName");

        if (ruleName != null) {
            setRuleName(ruleName);
        }

        Integer cdrModelSid = (Integer) attributes.get("cdrModelSid");

        if (cdrModelSid != null) {
            setCdrModelSid(cdrModelSid);
        }

        String ruleNo = (String) attributes.get("ruleNo");

        if (ruleNo != null) {
            setRuleNo(ruleNo);
        }

        Date modifiedDate = (Date) attributes.get("modifiedDate");

        if (modifiedDate != null) {
            setModifiedDate(modifiedDate);
        }
    }

    @Override
    public int getCreatedBy() {
        return _createdBy;
    }

    @Override
    public void setCreatedBy(int createdBy) {
        _createdBy = createdBy;
    }

    @Override
    public int getRuleCategory() {
        return _ruleCategory;
    }

    @Override
    public void setRuleCategory(int ruleCategory) {
        _ruleCategory = ruleCategory;
    }

    @Override
    public int getRuleType() {
        return _ruleType;
    }

    @Override
    public void setRuleType(int ruleType) {
        _ruleType = ruleType;
    }

    @Override
    public int getModifiedBy() {
        return _modifiedBy;
    }

    @Override
    public void setModifiedBy(int modifiedBy) {
        _modifiedBy = modifiedBy;
    }

    @Override
    public String getInternalNotes() {
        if (_internalNotes == null) {
            return StringPool.BLANK;
        } else {
            return _internalNotes;
        }
    }

    @Override
    public void setInternalNotes(String internalNotes) {
        _internalNotes = internalNotes;
    }

    @Override
    public Date getCreatedDate() {
        return _createdDate;
    }

    @Override
    public void setCreatedDate(Date createdDate) {
        _createdDate = createdDate;
    }

    @Override
    public String getRuleName() {
        if (_ruleName == null) {
            return StringPool.BLANK;
        } else {
            return _ruleName;
        }
    }

    @Override
    public void setRuleName(String ruleName) {
        _ruleName = ruleName;
    }

    @Override
    public int getCdrModelSid() {
        return _cdrModelSid;
    }

    @Override
    public void setCdrModelSid(int cdrModelSid) {
        _cdrModelSid = cdrModelSid;
    }

    @Override
    public String getRuleNo() {
        if (_ruleNo == null) {
            return StringPool.BLANK;
        } else {
            return _ruleNo;
        }
    }

    @Override
    public void setRuleNo(String ruleNo) {
        _ruleNo = ruleNo;
    }

    @Override
    public Date getModifiedDate() {
        return _modifiedDate;
    }

    @Override
    public void setModifiedDate(Date modifiedDate) {
        _modifiedDate = modifiedDate;
    }

    @Override
    public CdrModel toEscapedModel() {
        if (_escapedModel == null) {
            _escapedModel = (CdrModel) ProxyUtil.newProxyInstance(_classLoader,
                    _escapedModelInterfaces, new AutoEscapeBeanHandler(this));
        }

        return _escapedModel;
    }

    @Override
    public Object clone() {
        CdrModelImpl cdrModelImpl = new CdrModelImpl();

        cdrModelImpl.setCreatedBy(getCreatedBy());
        cdrModelImpl.setRuleCategory(getRuleCategory());
        cdrModelImpl.setRuleType(getRuleType());
        cdrModelImpl.setModifiedBy(getModifiedBy());
        cdrModelImpl.setInternalNotes(getInternalNotes());
        cdrModelImpl.setCreatedDate(getCreatedDate());
        cdrModelImpl.setRuleName(getRuleName());
        cdrModelImpl.setCdrModelSid(getCdrModelSid());
        cdrModelImpl.setRuleNo(getRuleNo());
        cdrModelImpl.setModifiedDate(getModifiedDate());

        cdrModelImpl.resetOriginalValues();

        return cdrModelImpl;
    }

    @Override
    public int compareTo(CdrModel cdrModel) {
        int primaryKey = cdrModel.getPrimaryKey();

        if (getPrimaryKey() < primaryKey) {
            return -1;
        } else if (getPrimaryKey() > primaryKey) {
            return 1;
        } else {
            return 0;
        }
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }

        if (!(obj instanceof CdrModel)) {
            return false;
        }

        CdrModel cdrModel = (CdrModel) obj;

        int primaryKey = cdrModel.getPrimaryKey();

        if (getPrimaryKey() == primaryKey) {
            return true;
        } else {
            return false;
        }
    }

    @Override
    public int hashCode() {
        return getPrimaryKey();
    }

    @Override
    public void resetOriginalValues() {
    }

    @Override
    public CacheModel<CdrModel> toCacheModel() {
        CdrModelCacheModel cdrModelCacheModel = new CdrModelCacheModel();

        cdrModelCacheModel.createdBy = getCreatedBy();

        cdrModelCacheModel.ruleCategory = getRuleCategory();

        cdrModelCacheModel.ruleType = getRuleType();

        cdrModelCacheModel.modifiedBy = getModifiedBy();

        cdrModelCacheModel.internalNotes = getInternalNotes();

        String internalNotes = cdrModelCacheModel.internalNotes;

        if ((internalNotes != null) && (internalNotes.length() == 0)) {
            cdrModelCacheModel.internalNotes = null;
        }

        Date createdDate = getCreatedDate();

        if (createdDate != null) {
            cdrModelCacheModel.createdDate = createdDate.getTime();
        } else {
            cdrModelCacheModel.createdDate = Long.MIN_VALUE;
        }

        cdrModelCacheModel.ruleName = getRuleName();

        String ruleName = cdrModelCacheModel.ruleName;

        if ((ruleName != null) && (ruleName.length() == 0)) {
            cdrModelCacheModel.ruleName = null;
        }

        cdrModelCacheModel.cdrModelSid = getCdrModelSid();

        cdrModelCacheModel.ruleNo = getRuleNo();

        String ruleNo = cdrModelCacheModel.ruleNo;

        if ((ruleNo != null) && (ruleNo.length() == 0)) {
            cdrModelCacheModel.ruleNo = null;
        }

        Date modifiedDate = getModifiedDate();

        if (modifiedDate != null) {
            cdrModelCacheModel.modifiedDate = modifiedDate.getTime();
        } else {
            cdrModelCacheModel.modifiedDate = Long.MIN_VALUE;
        }

        return cdrModelCacheModel;
    }

    @Override
    public String toString() {
        StringBundler sb = new StringBundler(21);

        sb.append("{createdBy=");
        sb.append(getCreatedBy());
        sb.append(", ruleCategory=");
        sb.append(getRuleCategory());
        sb.append(", ruleType=");
        sb.append(getRuleType());
        sb.append(", modifiedBy=");
        sb.append(getModifiedBy());
        sb.append(", internalNotes=");
        sb.append(getInternalNotes());
        sb.append(", createdDate=");
        sb.append(getCreatedDate());
        sb.append(", ruleName=");
        sb.append(getRuleName());
        sb.append(", cdrModelSid=");
        sb.append(getCdrModelSid());
        sb.append(", ruleNo=");
        sb.append(getRuleNo());
        sb.append(", modifiedDate=");
        sb.append(getModifiedDate());
        sb.append("}");

        return sb.toString();
    }

    @Override
    public String toXmlString() {
        StringBundler sb = new StringBundler(34);

        sb.append("<model><model-name>");
        sb.append("com.stpl.app.model.CdrModel");
        sb.append("</model-name>");

        sb.append(
            "<column><column-name>createdBy</column-name><column-value><![CDATA[");
        sb.append(getCreatedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ruleCategory</column-name><column-value><![CDATA[");
        sb.append(getRuleCategory());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ruleType</column-name><column-value><![CDATA[");
        sb.append(getRuleType());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedBy</column-name><column-value><![CDATA[");
        sb.append(getModifiedBy());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>internalNotes</column-name><column-value><![CDATA[");
        sb.append(getInternalNotes());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>createdDate</column-name><column-value><![CDATA[");
        sb.append(getCreatedDate());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ruleName</column-name><column-value><![CDATA[");
        sb.append(getRuleName());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>cdrModelSid</column-name><column-value><![CDATA[");
        sb.append(getCdrModelSid());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>ruleNo</column-name><column-value><![CDATA[");
        sb.append(getRuleNo());
        sb.append("]]></column-value></column>");
        sb.append(
            "<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
        sb.append(getModifiedDate());
        sb.append("]]></column-value></column>");

        sb.append("</model>");

        return sb.toString();
    }
}
